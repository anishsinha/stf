{"version":3,"sources":["webpack:///src/app/buyer-wally-board/Models/BuyerWallyBoard.ts","webpack:///src/app/carrier/assigned-to-me/assigned-to-me.component.ts","webpack:///src/app/carrier/assigned-to-me/assigned-to-me.component.html","webpack:///src/app/carrier/carrier.module.ts","webpack:///src/app/carrier/customAbstractControl.ts","webpack:///src/app/carrier/delivery-group/delivery-group.component.ts","webpack:///src/app/carrier/delivery-group/delivery-group.component.html","webpack:///src/app/carrier/delivery-request/assigned-by-me/assigned-by-me.component.ts","webpack:///src/app/carrier/delivery-request/assigned-by-me/assigned-by-me.component.html","webpack:///src/app/carrier/delivery-request/delivery-request.component.ts","webpack:///src/app/carrier/delivery-request/delivery-request.component.html","webpack:///src/app/carrier/delivery-request/split-delivery-request/split-delivery-request.component.ts","webpack:///src/app/carrier/delivery-request/split-delivery-request/split-delivery-request.component.html","webpack:///src/app/carrier/schedule-builder-filter.component.ts","webpack:///src/app/carrier/schedule-builder-filter.component.html","webpack:///src/app/carrier/schedule-builder-grid-filter.component.ts","webpack:///src/app/carrier/schedule-builder-grid-filter.component.html","webpack:///src/app/carrier/schedule-builder/add-location/add-location.component.ts","webpack:///src/app/carrier/schedule-builder/add-location/add-location.component.html","webpack:///src/app/carrier/schedule-builder/child-components/driver-schedule-column-view.component.ts","webpack:///src/app/carrier/schedule-builder/child-components/driver-schedule-column-view.component.html","webpack:///src/app/carrier/schedule-builder/compartment-quantity-validator.directive.ts","webpack:///src/app/carrier/schedule-builder/dr-filter.utility.ts","webpack:///src/app/carrier/schedule-builder/driver-column-view/driver-column-view.component.ts","webpack:///src/app/carrier/schedule-builder/driver-column-view/driver-column-view.component.html","webpack:///src/app/carrier/schedule-builder/dsb-load-queue/dsb-load-queue.component.ts","webpack:///src/app/carrier/schedule-builder/dsb-load-queue/dsb-load-queue.component.html","webpack:///src/app/carrier/schedule-builder/dsb-load-queue/dsb-load.model.ts","webpack:///src/app/carrier/schedule-builder/dsb-load-queue/load-queue.service.ts","webpack:///src/app/carrier/schedule-builder/otto-builder.component.ts","webpack:///src/app/carrier/schedule-builder/otto-builder.component.html","webpack:///src/app/carrier/schedule-builder/otto-notification/otto-notification.component.ts","webpack:///src/app/carrier/schedule-builder/otto-notification/otto-notification.component.html","webpack:///src/app/carrier/schedule-builder/route-info/route-info.component.ts","webpack:///src/app/carrier/schedule-builder/route-info/route-info.component.html","webpack:///src/app/carrier/schedule-builder/schedule-builder.component.html","webpack:///src/app/carrier/schedule-builder/schedule-builder.component.ts","webpack:///src/app/delivery-request-display/services/DeliveryRequestService.ts"],"names":["LoadFilterModel","DipTestViewModel","ExistingDR","TankCapacityForDR","ModifiedTripInfo","CreateDeliveryRequestViewModel","CustomerJobsForCarrier","PartialDRDetails","TfxModule","WindowModeFilter","UoM","DeliveryRequestViewModel","Terminal","BulkPlant","DropAddressModel","PickupLocationType","WindowMode","QueueMode","RegionDetailModel","Drivers","Trailers","Shifts","ShiftModel","ScheduleBuilderModel","DSBSaveModel","PreloadedDRs","PostloadedDRs","Trips","DRDragDropModel","SbDriverViewModel","SbTrailerViewModel","TrailerViewModel","TrailerShiftModel","ScheduleShiftModel","Schedules","IsCollapsed","ShiftDetailModel","TrailerModel","LocationFilters","state","city","product","priority","customer","supplier","carrier","TripModel","DeliveryRequests","State","Country","OrderPickupDetailModel","OrderPickupLocationModel","orderPickupDetail","location","Id","TerminalId","Name","TerminalName","Code","Address","City","StateId","StateCode","CountryCode","ZipCode","CountyName","Latitude","Longitude","SiteName","BulkplantName","SiteId","WhereIsMyDriverModel","routeShow","DistatcherRegionModel","Filter","SbFilterModel","Pickups","SelectedDrivers","SelectedPickups","SelectedTrailers","TrailerViewFilterModel","DriverViewFilterModel","CompanyUsers","TankMinMaxFill","TankChartHeight","DipTest","DriverAdditionalDetails","data","License","ContactNumnber","routesColor","DemandModel","PartialDRDetail","LoadInfo","PreLoadDrViewModel","PreLoadDrResponseViewModel","PreLoadDrModel","SalesTankFilterModal","selectedLocAttributeData","SalesFilterModal","AssignedToMeComponent","fb","carrierService","dataService","modalService","OnAcceptRejectDR","dtMustGoOptions","MustGoSchedules","dtMustGoTrigger","dtShouldGoOptions","dtCouldGoOptions","closeResult","isLoading","brokeredDrRequestedToMe","brokeredDrRequestedToMeAPI","MustGoDrRequestedToMeAPI","ShouldGoDrRequestedToMeAPI","CouldGoDrRequestedToMeAPI","requestToUpdate","BrokeredDrStatus","SupplierCompanies","CustomerLocation","priorityList","MaxInputDate","Date","MinInputDate","setFullYear","getFullYear","setDate","getDate","NextRenewalDate","add","startOf","format","HeaderText","FilterForm","getAssignedToMeFilterForm","currentRegionId","regionId","currentSelectedDate","SelectedDate","Init","subscribeFormChanges","subscribeAcceptRejectDRSubject","AcceptRejectDRSubscription","unsubscribe","controls","Suppliers","valueChanges","subscribe","chenge","FilterData","Locations","ColumnDetails","title","name","pagingType","pageLength","lengthMenu","serverSide","processing","fixedHeader","header","headerOffset","ajax","dataTablesParameters","callback","dom","order","buttons","extend","exportOptions","orientation","columns","PriorityDdlSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","selectedDate","getBrokeredDrAssignedToMe","drs","GetSuplierCompanyList","forEach","x","StringAssignedOn","AssignedOn","filter","Priority","MustGo","ShouldGo","CouldGo","AcceptRejectDRSubject","RegionId","dr","ele","find","SupplierCompanyId","obj","CustomerCompany","push","JobId","objLocation","JobName","length","get","patchValue","status","delReqForm","delReq","allDrs","drToupdate","t","Object","assign","element","document","getElementById","click","DrId","BlendedGroupId","emit","drId","blendedGroupId","Accepted","Rejected","that","setTimeout","content","open","ariaLabelledBy","result","then","reason","isFilterApplied","group","control","FromDate","ToDate","IsFilterApplied","selectedArray","value","headerText","FiltersSettingsAndPriorityList","reset","supplierIds","mustGo","shouldGo","couldGo","oMustGo","res","oShouldGo","oCouldGo","LocationIds","toDate","msgerror","undefined","mstGo","shldGo","coldGo","RemoveSelectedSuppliers","SuppliersList","LocationList","removeSupplier","sup","check","indexOf","c","index","RemoveLocations","date","setPanelHeader","clearPanelControls","setValue","$event","getNextRenewalDate","ShowAllDrs","selector","templateUrl","styleUrls","encapsulation","None","routeCarrier","path","component","CarrierModule","forRoot","forChild","declarations","imports","providers","CustomAbstractControls","formToInvestigate","invalidControls","recursiveFunc","form","nestedFormGroup","keys","field","invalid","errors","cloneControl","formGroup","validator","asyncValidator","key","addControl","cloneForm","formArray","formControl","Error","disabled","disable","emitEvent","PickupForm","DeliveryGroupComponent","sbService","addresService","stateService","changeDetectorRef","utilService","MinDate","MaxDate","keyword","initialValue","_loadingAddress","_loadingTerminals","StateList","CountryList","CountryGroupList","Terminals","minCharRequired","searchError","noTerminalFound","OrderList","TbdOrderList","fuelTypeOrderList","TbdCustomerList","TbdLocationList","ChangePickupForOrders","LocationType","addSubDrModel","blendAddRequestToUpdate","CompletedScheduleStatuses","MaxStartDate","validStartDate","DGSubscription","MaxCalendarDate","MinCalendarDate","isReadOnly","isSupplierCompany","CountryBasedZipcodeLabel","RouteListForTrip","isOptionalPickup","ScheduleOptionalPickupDetailModel","ScheduleOrderFuelInfo","multiDropdownSettings","CustomerSettings","SiteddlSettings","onRaiseSubDR","AddDropLocationLoader","SubDrsStatusWithParentIds","EnrouteInCompleted","EnrouteInProgress","SubDrOtherThanCancellStatus","DeliveryReqCancelScheduleUpdateModel","cancelDSDeliveryScheduleViewModel","getLocationDetailsSubscriptions","blendRequestForm","BlendedRequests","array","additiveOrders","CompatibleProductTypeList","DrForEditBlendedRequestIndex","BlendDrIndex","IsPickupForBlendRequest","totalBlendedQuantity","tankMaxFill","getOrderSubject","deletedBlend_temp","deletedBlend_all","DelGroupForm","getTripFormGroup","initPickupForm","PickupLocationTypeChange","zipcodeConditionallyValidator","multiSelectSettings","subscribeGetOrderSubject","getMonth","closeDropDownOnSelection","subscribeEditGroupSubject","subscribeShowDeliveryGroupSubject","subscribeShowOpenedDeliveryGroupSubject","subscribeCommonPickupLocationChange","subscribeHideDeliveryGroupSubject","subscribeRouteResetGroupSubject","change","currentValue","unsubscribeAllSubscriptions","HideDeliveryGroupSubject","RouteResetGroupSubject","subs","EditDeliveryGroupSubject","routeName","OptionalPickupInfo","OrderFuelInfo","editGroup","trip","shiftIndex","rowIndex","tripIndex","schedule","isPublishLoadInvalid","ShowDeliveryGroupSubject","showDeliveryGroup","hideDeliveryGroup","subscribeDeleteDRRequestSubject","ShowOpenedDeliveryGroupSubject","showOpenedDeliveryGroup","markAllAsTouched","markAsDirty","setPickupValidators","commonPickup","disableDeliveryGroupPickups","enableDeliveryGroupPickups","isTerminalPickup","_pForm","getTerminalForm","getBulkPlantForm","setScheduleChangeDetectSubject","toUpperCase","pickupType","setValidators","updateValueAndValidity","required","pattern","clearValidators","isCommonPickup","startDate","_jobId","_productTypeId","_orderId","_carrierStatus","isBlendReq","isDrForTank","existing","toString","getOrders","orderFromData","OrderId","onDeliveryRequestChange","setTruckLoadType","ToLocation","setPickupLocation","setDRPickupValidators","UnchangedTrip","markForCheck","_shiftIndex","_rowIndex","_tripIndex","Schedule","delReqs","groupDRParentIds","getOrderList","getDropLocationDetails","n","i","getSubDRStatus","validateOptionalPickup","some","IsBlendedRequest","getAdditiveOrders","PickupLocationSubscription","setCommonPickupFlag","terminal","event","_drArray","enable","_date","ScheduleDate","setSheduleSelectedDateForBlendGroup","StartTime","setScheduleStartTimeForBlendGroup","EndTime","setScheduleEndTimeForBlendGroup","tdr","badgeNum","blendGroupId","showOpenDG","showDG","selectedViewNote","closeDG","StartDateSubscription","StartTimeSubscription","DeleteDRRequestSubject","preloadedDrInfo","PreLoadInfo","postloadedDrInfo","PostLoadInfo","prepostloadedInfo","concat","setDeletePostloadSubject","isReset","setDeletePostloadedDrsSubject","setDeleteDeliveryGroupSubject","setDeliveryPreloadOption","ShiftIndex","ScheduleIndex","Reset","tripDetails","_delReqs","_currentTrip","DeletedDrIndex","selectedDeliveryRequest","TrackableScheduleId","scheduleIds","tripDrs","filterAndGetDrsByBlendGroupId","getScheduleStatus","response","ScheduleStatusId","ScheduleEnrouteStatusId","OnTheWayScheduleStatuses","setConfirmationHeadingForDR","deleteDeliveryRequestFromLoad","Status","TrackScheduleEnrouteStatus","IsTBD","TrackScheduleStatus","hideModal","deletedRequests","Compartments","setRestoreDeletedRequestSubject","findIndex","r","removeAt","zipCode","target","regexUsa","RegExp","UsaZip","regexCan","CanZip","test","getAddress","addressModel","addressMapper","country","_address","BulkPlants","BulkplantList","slice","getBulkPlantAddress","valid","toLowerCase","elem","bulkPlantName","bulkPlant","SearchTerminalKey","searchKeyword$","pipe","term","getPickupTerminals","err","console","log","selectedOptions","isBlend","orders","selectedOrder","IsCommonBadge","Badge1","Badge2","Badge3","text","GetBulkPlantDetails","tfxProductId","productTypeId","terminalId","bulkplantId","pickupId","FuelTypeId","SelectedRegionId","getJobDetailsWithOrders","companyList","map","CompanyId","CompanyName","GetUniqueCustomers","reduce","p","siteList","GetUniqueLocations","PoNumber","item","getOrdersOfDeliveryReq","drOrders","updateDrForm","ScheduleEndTime","BadgeNo1","BadgeNo2","BadgeNo3","ProductTypeId","items","ids","uniqueItems","includes","sort","a","b","localeCompare","SelectedDRForEditPickup","_pickupType","_terminal","_bulkPlant","removePickupValidators","countryCode","countryId","county","countryGroupCode","CountryGroup","CountryId","CountryGroupId","getStates","getCountries","getCountryGroup","lastIndex","lastIndexOf","SearchTerminalFuelType","orderForBulkPlant","getBulkPlants","setBulkPlantAddressValidators","getCountryIdFromCode","deliveryRequests","isTrip","existingLocationType","existingTerminal","existingBulkplant","pickupLoc","_pickupLocationType","_pickupLocationId","orderIds","selectedFormValue","hasOwnProperty","getOrderBadgesByTerminal","_drForm","badgeInfo","dismiss","tripPrevStatusId","tripStatusId","Added","Modified","statusId","ScheduleCreated","updatedPostloadedDrs","setUpdatePostloadSubject","isValidLoad","validateDraftLoad","setBadgeAndNotesToBlendGroup","processPostloadedDrsUpdatedValues","setGroupChangeDetectSubject","setDraftDeliveryGroupSubject","filterChanged","validatePublishLoad","colIndex","StartDate","onDeliveryGroupChange","setPublishDeliveryGroupSubject","error","markAsTouched","drFormArray","groupedDrs","drForm","blendDrGroup","lastDr","Notes","isValid","touched","IsCommonPickup","idCommonPickUpBtn","nativeElement","delControlReqs","ProductType","terminalInfo","bulkplantInfo","fuelTypeInfo","fuelTypeDetails","FuelTypeDetails","o1","o2","TfxFuelTypeId","setCancelDeliveryGroupSubject","prevStatus","trackScheduleStatus","updateBadgeNumberDetails","hideShowCommonBadgeArea","commonBadgeCount","commonBadgeCheckStatus","deleteSchedule","TruckLoadType","input","setRouteDeleteDeliveryGroupSubject","_this","setOpenOnTheFlyLocationFormSubject","getOnTheFlyLocationDetailsSubject","ResponseData","CustomerCompanyName","ScheduleStartTime","dsValue","cancelDRButtonDisplayStatus","IsSpiltDRAdded","SpiltDRs","RequiredQuantity","setScheduleLoaderSubject","addSubDrs","StatusCode","msgsuccess","StatusMessage","msgwarning","addEmptySubDR","spiltDRModel","ScheduleQuantityType","j","splice","GroupParentDRId","DRs","NonCancelledSchedules","returnSubDrStatusOtherthaCancel","CancelDSViewModel","cancelDSDeliveryScheduleInfo","CancelDSDeliverySchedules","cancelDSDeliverySchedule","DeliveryReqId","IsSubDR","cancelsubDSDeliverySchedule","GetSubDRInfoCancelDS","$","delRequestCancelModel","ScheduleBuilderId","DriverColIndex","DriverId","DriverRowIndex","ShiftId","postLoaddelRequestCancelModel","TripIndex","CancelDeliveryGroupSchedule","setCancelDSGroupNormalSubDSSubject","IsChecked","cancelDSfinalInfo","is","ds","eleId","eleIdDom","deliveryReq","x1","eventData","selectedCountryCode","selectedCountryId","isCarribean","delGroupform","pickUpForm","blendRequests","clear","blendeDdrGroup","IsBlendedDrParent","TotalBlendedQuantity","additives","IsAdditive","QuantityInPercent","getBlendRequestFormGroup","request","TankMaxFill","IsMaxFillAllowed","BlendParentProductTypeId","CarrierStatus","next","_isBlend","JSON","stringify","blendedRequest","currentOrder","orderList","getOrdersByDr","ordersToRemove","productToRemove","s","s2","y","orderId","setPickupLocationForBlendRequest","getCompatibleProductTypes","blendDrIndex","blendDr","getRequiredDataForPickupDetails","existingOrders","addNewRow","isAdditive","_blendedRequests","additiveCount","getAdditiveCountBlend","_model","insert","at","IsDeleted","enteredQuantity","blendIndex","totalQuantity","blendedRequests","clearQuantityAndPercentage","isAddNew","percent","Math","abs","getSchedulesFromDr","scheduleUpdatwAllowded","updateDeliveryGroupBlendByPopup","blendedrequests","createBlendRequests","TaskId","Add_Delete_Update","Add_Update","every","deleteBlendedDeliveryRequestFromLoad","updateBlendRequests","setParentDrAndItsQuantity","taskId","postRaiseRequests","parseInt","pushNewBlendRequestsToLoad","newBlendRequests","loadDrFormArray","Number","blendGroupEndIndex","newRequest","getDeliveryRequestForm","_blendLoadDrs","l","sum","current","_blend","bl","SchedulePreviousStatus","ScheduleStatus","updateDeliveryRequest","dr1","setSelectedDate","publishDeliveryGroup","deleteDeliveryGroup","updatePickupLocation","deleteDeliveryRequestFromLoadNo","onSubDrCreate","CancelDSGroupDriverSchedule","RejectDSGroupDriverSchedule","AssignedByMeComponent","dispatcherService","MustGoDrs","ShouldGoDrs","CouldGoDrs","dtShouldGoTrigger","dtCouldGoTrigger","customerList","locationList","SelectedLocations","SelectedCustomers","SelectedPriorities","showMustGo","showShouldGo","showCouldGo","brokeredDrRequestedByMe","IsLoading","initializeFilterForm","initializeMustGo","initializeShouldGo","initializeCouldGo","GetFilters","getCustomers","getLocations","loc","arr","selectedCustomers","t1","recallDrFromCarrier","Recalled","getBrokeredDrAssignedByMe","setDrQueueChangesForFilter","ApplyFilters","SaveFilters","isFromGetFilter","getFilters","AssignedByMeDeliveryRequests","filterData","parse","setGridData","filterModel","postFiltersData","exportInvitedColumns","openAssignedByMePanel","onCustomerChange","onLocationChange","onPriorityChange","ResetFilters","recallBrokeredDr","DeliveryRequestComponent","deliveryRequestService","Title","TitleClass","CollapaseId","CollapaseInClass","isToggleDrPanel","PriorityTabCount","tempDeliveryRequest","_showQueueIcon","_dragEnabled","IsCarrierCompany","onDeliveryRequestEdit","localQueueIcon","DrForm","getDeliveryRequestFormArray","jobId","TbdGroupId","TBDGroupId","_form","getDeliveryRequestFormNew","deliveryRequest","isDeleted","isAssignCarrier","getDeliveryRequestById","ParentId","dropUrl","window","href","AddLocationForMissedTBD","drIds","top","drLocationIndex","pushItemData","isLocation","GroupParentId","isTBDRequest","tbdGroupId","isMarineDR","AllDeliveryRequestsSubject","filtered","IsMarine","IsBrokered","PreLoadedFor","PostLoadedFor","brokeredDrs","nonbrokeredDrs","isRecallDr","isCreateDeliveryForTBD","isDeliveryGroup","isApproveRejectBrokeredDr","inputData","setSplitDRsInfoSubject","changeDetection","OnPush","SplitDeliveryRequestComponent","defaultSplitDRsValue","IsBlendRequest","validateQtyStatus","validateQtyMessage","splitDrs","_loading","onRaiseDR","SplitDRForm","initForm","SplitBlendDRForm","initSplitBlendDRForm","deliveryReqs","ParentDrId","FuelType","productType","AdditiveProductName","BlendedProductName","siteId","jobName","jobAddress","JobAddress","jobCity","JobCity","originalTotalQuantity","remainingQuantity","deliveryLevelPO","DeliveryLevelPO","parentDRId","requiredQtyDetais","getRequiredQty","validateQtyInfo","ParentDRId","NoOfSubDRs","min","SubDRType","RequiredQtyDetails","blendDrs","_formGroup","splitDrArray","getsplitDrArray","BlendDrArray","BlendGroupId","blendDrArr","getSplitDRForm","RequiredQty","requiredQtyDetails","caculateQtyDetails","subDRType","noOfSubDRs","parseFloat","validateBlendDrQtyInfo","caculateBlendDrQtyDetails","blendDrArray","totalQty","requiredQ","tfxQty","currentQty","Integer","Float","splitDeliveryRequests","detail","splitBlendDeliveryRequests","subDFDRsQty","toFixed","subDRsQty","finalDRAdditions","round","getRequiredQtyWithValue","requiredfQtyDetails","fQty","totalNoOfDRs","totalSubDRQty","caculateQty","finalQty","ScheduleBuilderFilterComponent","OnSbFilterApply","trailerDdlSettings","driverDdlSettings","pickupDdlSettings","SbFilterData","trailer","onApplyFilter","trailers","driver","drivers","pickup","pikups","onDriverSelect","onDriverDeSelect","onDriverSelectAll","onDriverDeSelectAll","onPickupSelect","onPickupDeSelect","onPickupSelectAll","onPickupDeSelectAll","resetFilter","ScheduleBuilderGridFilterComponent","OnSbGridFilterApply","SearchLocation","SbGridFilterData","filterLocation","resetfilterLocation","AddLocationComponent","addLocationService","confirmationDialogService","OnTheFlyLocationCreate","formSubmited","_isLoadingProducts","_opened","_initiated","mapConstants","preferencesSetting","isCompanyNameExist","isJobNameExist","isPhoneNumberValid","allJobList","currucyList","statesList","filteredStatesList","FuelProductsList","MarineProductsList","FeeTypesList","defaultCompanyCountryId","CompanyContactPersonsList","AllTPOCompaniesList","_minimumConst","IsTBDRequest","ProductTypeName","CompDdlSetting","tbdAddLocationSubscription","currentRadious","AddressRawData","_isLoadingPerson","locationForm","subscribeTbdAddLocation","company","isSelected","f","CustomerDetails","id","companyChanged","TBD_DR","initailizeLocationForm","getTfxProduct","productDetails","FuelDetails","DisplayGroupId","deliveryTypeChanged","tbdDrProductId","getAllTPOCompanies","getCurrecyList","getFuelProducts","getStatesOfAllCountries","getPreferencesSettings","SendInvitationLink","IsSupressOrderPricing","IsMarineLocation","PreferenceSettingId","IsRegularBuyer","UserId","IsNewUser","IsNewCompany","PhoneNumber","Phone","Email","IsInvitationEnabled","IsNotifySchedules","AddressDetails","IsNewJob","DisplayJobID","Currency","StateName","IsProFormaPoEnabled","SignatureEnabled","IsGeocodeUsed","TimeZoneName","LocationManagedType","IsCompanyOwned","MarineUoM","InventoryDataCaptureType","UOM","FuelDisplayGroupId","NonStandardFuelName","NonStandardFuelDescription","FuelRequestFees","intilizeFuelRequestFees","FuelQuantity","Quantity","QuantityTypeId","MinimumQuantity","MaximumQuantity","QuantityIndicatorTypes","CompareNumbers","FuelPricing","FuelPricingDetails","FreightOnBoardTypes","FuelDeliveryDetails","DeliveryTypeId","EndDate","SingleDeliverySubTypes","PricingTypeId","PricePerGallon","CodeId","CodeDescription","TempPricingCodeDetails","RackAvgTypeId","RackPrice","EnableCityRack","SupplierCostMarkupTypeId","SupplierCostMarkupValue","SupplierCost","CityGroupTerminalId","PricingSourceId","PricingCode","Description","IsTierPricingRequired","TierPricing","TierPricingType","VolumeBased","IsResetCumulation","AboveQuantityPricing","Pricings","ResetCumulationSetting","CumulationType","Day","DisplayCumulationFrequency","DeliveryRequest","DispatcherNote","setAddressValidators","USA","_FRFArray","FeeTypeId","FeeSubTypeId","FeeSubTypeName","Fee","FeeDetails","FeeConstraintTypeId","IncludeInPPG","OtherFeeTypeId","validators","setErrors","compareNumber","GetPreferencesSettings","tbdDrProductTypeId","pricingModuleComponent","setPricingCode","type","updateFormControlValidators","setFuelTypevalidation","getProductListByZip","pricingTypeChanged","_countryId","userId","getTPOContactPersonDetails","CompanyContactPersonsDetails","companyId","productDisplayGroupId","radious","address","zipcode","updateGeoCode","coords","lat","lng","confirm","confirmed","previousLatLon","GetAddressByLongLat","updateAddress","getTimeZoneUsingLatLng","CenterLat","CenterLon","getAddressByZip","GetAddress","getCityGroupTerminals","setBillableQuantity","st","QuantityIndicatorId","times_Stamp","getTime","getTimeZoneName","MapsApiKey","timeZoneId","timeZoneName","ParseTimeZone","replace","isDragged","stateId","CAN","isTpoCompanyExist","phone","IsPhoneNumberValid","isNewCompany","isJobExist","getTPOCompanyContactPersons","companyname","getCurrenyList","isnew","pricingCode","jobCountryId","pricingCodeId","fuelType","jobLatitude","jobLongitude","isSupressOrderPricing","getFuelTerminals","pickupDetails","getRawValue","pricings","pricing","formValue","createOrder","setGetOnTheFlyLocationDetailsSubject","statusMessage","tierPricingEnabled","getMarineProductList","deliveryTypeId","OpenOnTheFlyLocationFormSubject","openPanel","CAR","DriverScheduleColumnViewComponent","loadQueueService","chatService","UnassignedDrivers","IsTrailerExists","disableControl","preloadOption","Preloaded","RegionDetailTrailers","SelectedTrip","IsLoadingRoute","DoNotShowPushButtonStatuses","DeliveryScheduleInfo","tempRouteList","AllTrailersSubject","detectChanges","subscribeScheduleChangeDetectSubject","subscribeDisableControlsSubject","subscribeDeliveryPreloadOption","subscribeGridViewSearchEvents","preloadedDrs","unsubscribeFormChange","unsubscribeScheduleChangeDetectSubject","unsubscribeDeliveryPreloadOption","DisableControlsSubscription","GridViewSearchSubscription","UpdateDriverSubscription","GroupChangeDetectSubscription","ScheduleChangeDetectSubscription","FormChangeSubscription","DeliveryPreloadOptionSubscription","_trips","_initialValues","k","formChanges","_currentValues","setUnsavedChangesSubject","unsubscribeUpdateDriverTrailerSubject","UpdateDriverTrailerSubject","Driver","_dArray","getDriverForm","_tArray","prevTrailer","_selectedTrailers","TrailerId","getAssignedTrailerForm","updateCompartmentinfo","setSaveDriverAssignmentSubject","Index1","Index2","GroupChangeDetectSubject","unsubscribeGroupChangeDetectSubject","ScheduleChangeDetectSubject","DisableDSBControlsSubject","DeliveryPreloadOption","resetPreLoadedFlag","setPreLoadedFlag","shiftIdx","scheduleIdx","_startDate","getData","DSB_DATE_KEY","shift","SbForm","shiftId","selectedShift","getSelectedShift","_startTime","lastTripStartTime","lastTripStartDate","getNewLoadStartDate","startTime","getTrailerTrip","SlotPeriod","ShiftStartTime","ShiftEndTime","_shifts","AllShiftsSubject","startDateTime","endDateTime","slotPeriod","endTime","IsEditable","_isPublishedRequestsExists","IsPublishedRequestsExists","IsIncludeAllRegionDriver","setEditDriverTrailerSubject","subscribeUpdateDriverTrailerSubject","isPublished","trips","PreviousStatus","shiftRow","setPublishEntireRowSubject","IsOptionalPickup","_deliveryRequests","GetAllLoadsDR","DsCount","returnCommonTracableElements","CancelCompletedDraftStatus","setDragDropItemSubject","subscribeGroupChangeDetectSubject","subscribeFormChange","sorDrByProductSequence","IsDispatcherDragDropSequence","drList","_drFormArray","drData","Data","validateTrailerJobCompatibility","deliveryRequestsNotCompatible","highLightDRDiv","removeClassForAllLoad","_trip","_schedule","_isPublishLoadInvalid","setShowOpenedDeliveryGroupSubject","route","setEditDeliveryGroupSubject","drIndex","scheduleDetails","setDeleteDRRequestSubject","_data","resetRouteDetails","indexList","delieveryRequestForm","removedDrCount","currentIndex","formIndex","editExisingGroup","resetDrByRoutes","DraggableScheduleStatuses","driverTrailerInfo","getAssignedDriverTrailerInfo","isValidDrs","validatePreloadDrs","setCreatePreloadSubject","PreloadTrailers","PreloadDrivers","PreloadDrs","ErrorMessage","isLast","tripDrLength","info","getAssignedTrailers","getAssignedDrivers","driverId","pushDriverDetails","shiftrow","trailerId","sbGridView","_drivers","_trailers","IsAnyLoadPublished","IsDSBGridViewPublishedRequestsExists","setRemoveTrailer","UnAssignDriverFromShift","_sbId","timeStamp","_rowIdx","_shiftIdx","DriverRowIdx","sbId","TimeStamp","UnAssignDriverTrailerFromShift","tripsToUpdate","updatedTimeStamp","thisTrip","driverctrlarray","unassignTrailers","trailerctrlarray","trailerIndex","removeTrailer","removeCompartmentinfo","setTrailerInformationSubject","slidePanel","setEditCompartmentAssigmentSubject","RowIndex","removedTrailer","len","missingTrailerIndex","_tripsInfo","tripsInfoControl","compartmentInfo","compartmentIndex","source","size","trailerName","join","str","stringInfo","split","substr","firststring","lastString","tripControl","drInfo","tBDGroupId","productDeliveryScheduleInfo","jobInfo","tBDFGroupInfo","LocationName","CustomerName","StatusClassId","IsBlinkDR","IsAutoCreatedDR","DelReqSource","isRecurringSchedule","CommonPickupLocationType","ScheduleQuantityTypeText","getDRInfo","PickupLocationName","IsFilldInvoke","RouteName","BadgeNoInfo","val","isPreload","isPostload","IsSelectedForAssignment","ProductName","DeliveryDateStartTime","TrackScheduleStatusName","Vessel","Berth","DrInfo","DrIndex","ColIndex","setTransferDSSubject","isLastReq","drID","finalDRs","jobDrs","tbddrs","jobtbDrs","drTBDID","drTBDs","jobTBDDrs","trailerControl","TrailerInformationChangeDetectSubscription","subscribeTrailerInformationDetectSubject","UnAssignTrailerFromShift","drValue","RouteInfo","routeParamInfo","_routeTripInfo","setRouteDetailsSubject","GridViewSearchGroupSubject","searchLocation","filterGridView","shiftCounts","shifts","shiftInfo","_schedules","scheduleInfo","tripInfo","trim","e","setLoadQueueColumnMoved","setDriverColumnChangeDetect","createLoadQueue","DsbLoadQueueSuccess","checked","_drs","_Trips","TripsArray","tripsControl","delR","drControl","delGroup","getOrderFuelTypes","finalObj","shiftOrderNo","FuelTypeInfo","setOptionalPickupInfo","setCancelEntireRowSubject","loadDrLength","checkCommonElements","setCancelDSDeliveryGroupSubject","isTBD","setCancelDSLocationDSSubject","buttonstatus","filteredDRs","buttonShowStatus","CancelButtonVisibleInfo","tbdDrs","direction","lIndex","fjobId","findLocationSeq","jobDRs","finalDRsIndex","setDispatcherLoadDragDropSubject","currentDRIndex","finalDRJobID","finalDRIsTBD","finalDRTBDGroupId","lastDRIndex","currentJObDRIndex","findex","finaldrs","firstRecord","drJobINdex","setLoadLocationSequenceSubject","deliveryScheduleInfo","getClassString","isblend","classes","CompartmentQuantityValidatorDirective","_compartments","drQty","compQty","regexp","idx","compartment","CompartmentQuantity","provide","useExisting","multi","DrFilterService","httpClient","urlSaveDrFilterPreferences","urlGetDrFilterPreferences","drFilterModel","Bulkplants","Missed","AssignedToMe","AssignedByMe","TrailerType","Lead","Pup","Tandem","Quad","Tridem","DeliveryShift","Morning","Evening","DeliveryBrokeredDR","IsBrokeredDRs","Customers","OrderType","OrderTypeLTL","OrderTypeFTL","OrderTypeALL","drFilterForm","model","DrFilterModel","LTL","FTL","ALL","_terminals","_bulkPlants","_cusomterCompanies","_dr","bulk","toLocaleLowerCase","AssignedToCompanyId","terminals","bulkPlants","customerCompanies","_drRequests","job","searchedRecords","IsAcceptNightDeliveries","TrailerTypes","tr","cus","terms","searchedDrs","startsWith","queueMode","windowMode","drType","post","handleError","providedIn","DriverColumnViewComponent","zone","IsNoDriverShiftFound","_loadingRequests","_loadingDrivers","_savingBuilder","_loadingCmprts","_publishedRequestExists","SelectedDriverName","UnassignedTrailers","AllUnassignedDrivers","chatDriverDetails","TrailerDdlSettings","Collapsed","CollapsedIcons","ScheduleStatuses","CompartmentEditModel","TrailerCompartments","TrailerCompartmentRetains","DSShifts","ShiftColumn","ShiftLoad","_loadingDSData","SelectedDSDriverName","$eventDataTransfer","selectedDefaultShiftIndex","selectedRowIndex","selectedColIndex","_loadingRemoveTrailer","routeInfo","_loadingRemoveRoute","SelectedFuelTypeDetails","FuelTypeDdlSettings","OptionalPickupLocationInfo","_loadingOptionTerminal","OptionPickupOrderIds","OptionalPickupShiftIndex","OptionalPickupShiftOrderNo","OptionalPickupDriverColIndex","OptionalPickupShiftId","OptionalPickupRegionId","OptionalPickupScheduleBuilderId","OrderFuelDetails","cancelDSScheduleInfo","CancelDSScheduleLoadInfo","hoveredTrailer","_otherRegionDriverSubject","DriverTrailerForm","getDriverTrailerForm","CompartmentViewFormGroup","getCompartmentViewForm","setShowDeliveryGroupSubject","subscribeDeliveryGroupEvents","subscribeSaveModifiedLoadsSubject","subscribeEditDriverTrailerEvents","subscribeDraftAndPublishEvents","subscribeDragDropItemSubject","subscriberCreateLoadCancelSubject","subscribeCreateLoadSuccessSubject","subscribeCreatePreloadSubject","subscribeUpdatePostloadSubject","subscribeDeletePostloadSubject","subscribeEditCompartmentAssigmentSubject","CompartmentDetails","subscribeTransferDSEvents","subscribeTrailerInfoDSEvents","subscribeRouteInfoDSEvents","subscribeTrailerRemoveDSEvents","subscribeLoadQueueNotifications","subscribeChangeDetectDsbLoadQueueNotification","subscribeDriverColumnChangeDetect","subscribeOptionPickupEvents","initOptionalPickupForm","subscribeShowScheduleBuilderLoadingSubject","subscribeCancelScheduleEvents","subscribeCancelDSLocationGroupSubject","subscribeDispatcherLoadDragDropSubscription","subscribeDispatcherLoadDragDropMapSubscription","initShifts","setAllShiftsSubject","resetDriverTrailerForm","RegionDetail","setAllTrailersSubject","setUnsavedChangesAsEmptySubject","setUnsavedChanges","subscribeOptionalPickupLocationChange","unsubscribeDeliveryGroupEvents","unsubscribeEditDriverTrailerEvents","unsubscribeDraftAndPublishEvents","unsubscribeDragDropItemSubject","unsubscriberCreateLoadCancelSubject","unsubscribeCreateLoadSuccessSubject","unsubscribeCreatePreloadSubject","unsubscribeUpdatePostloadSubject","unsubscribeDeletePostloadSubject","TrasnferDSSubscription","TrailerInfoDSSubscription","RouteInfoDSSubscription","RemoveTrailerGroupSubject","ShiftVisibility","DriverColCDRSubscription","OptionalPickupSubscription","unsubscribeAllDGSubscriptions","unsubscribeCancelScheduleEvents","unsubscribeCancelLocationScheduleEvents","DispatcherLoadDragDropSubscription","DispatcherLoadDragDropMapSubscription","subscribeDraftDeliveryGroupSubject","subscribePublishDeliveryGroupSubject","subscribeCancelDeliveryGroupSubject","subscribeDeleteDeliveryGroupSubject","subscribeRouteDeleteDeliveryGroupSubject","subscribeCancelDSDeliveryGroupSubject","subscribeCancelDeliveryGroupNormalGroupDSSubject","subscribeDeliveryScheduleRemoveSubject","DraftDeliveryGroupSubscription","SaveModifiedLoadsSubscription","PublishDeliveryGroupSubscription","DeleteDeliveryGroupSubscription","CancelDeliveryGroupSubscription","CancelDSDeliveryGroupSubscription","CancelDSDeliveryGroupNormalGroupDSSubject","DeliveryScheduleRemoveSubject","EditDriverTrailerSubscription","SaveDriverAssignmentSubscription","PublishEntireRowSubscription","DragDropItemSubscription","CreateLoadCancelSubscription","CreateLoadSuccessSubscription","CreatePreloadSubscription","UpdatePostloadSubscription","DeletePostloadSubscription","DraftDeliveryGroupSubject","draftScheduleBuilder","SaveModifiedLoadsSubject","saveScheduleBuilderData","PublishDeliveryGroupSubject","publishScheduleBuilder","CancelDeliveryGroupSubject","cancelScheduleBuilder","DeleteDeliveryGroupSubject","deleteGroup","EditDriverTrailerSubject","editDriverTrailers","SaveDriverAssignmentSubject","saveDriverAssignment","PublishEntireRowSubject","validateRowPublish","DragDropItemSubject","onItemDrop","CreateLoadCancelSubject","cancelCreateLoad","CreateLoadSuccessSubject","updateTripOnCreateLoadSucess","CreatePreloadSubject","processPreloadDeliveryCreation","UpdatePostloadSubject","updateEditedPostloadDrs","DeletePostloadSubject","deletePreAndPostloadDrs","EditCompartmentAssigmentSubject","editCompartmentAssignments","deleteSingleLoad","_shiftArray","_shiftForm","IsVisible","OrderNo","_sArray","getSchedulesFormArray","schedules","AllowDriverChange","getDriversFormArray","getTrailersFormArray","getTripsFormArray","LoadQueueId","IsLoadQueueCollapsed","IsColumnSelected","IsLoadQueueColumnBlocked","LoadQueueColumnStatus","LoadQueueFilterVisibility","IsDriverScheduleExists","removeClassForLoad","isDRCompatible","dragData","dragToLoad","TripFrom","drDataCopied","draggedDelReqData","droppedTrip","Trip","isDraggedDRsPublished","getPublishedDRsTrackableScheduleIds","dragDelReqToAnotherLoad","jQuery","createLoad","Customer","Drs","DrData","IsDragFromLoad","delRequests","completedSchedules","returnCommonElements","isCompletedSchedule","onTheWaySchedules","cancelledSchedules","CancelledScheduleStatuses","dragDelReqToAnotherLoadYes","droppedToSchedule","droppedToTrip","drsToRemove","isDraggedFromLoad","locationType","pickupLocation","_drArrayValue","_toDrForm","isDRPickupExists","drFormJobId","jobInfoIndex","drInFromTrip","dragDropDeliveryRequestsSave","setRemoveDroppedRequestSubject","dragDropDeliveryRequestsPublish","tripFrom","tripTo","tripFromSchedule","tripToSchedule","sourceTrip","destTrip","setTripStatus","setDeliveryGroupStatus","Draft","dataToSave","getDSBSaveModel","setDeliveryRequestStatusAsDraft","saveDriverView","updateLoadForm","isDestTripPublished","invalidctrls","findRecursiveErrors","dsbModel","sourceTripValue","destTripValue","GroupId","Published","DeliveryGroupPrevStatus","setDeliveryRequestStatusAsPublished","tripArray","publishDriverView","DeliveryGroupId","DeliveryScheduleId","draggedDeliveryRequests","destTripDeliveryRequests","destLoadDR","reserveValue","TripId","Carrier","TrailerRowIndex","TrailerColIndex","IsPreloadDisable","scheduleStatuses","deleteLoad","setConfirmationHeadingForDeleteGroup","DeletedGroup","deleteRouteLoad","tripId","completedDRs","removedDRs","deliveryRequestsValue","DeletedGroupId","DeletedTripId","preloadInfo","getPreloadedInfoFromLoad","preloadedTrips","getPrePostLoadedTrips","postloadInfo","getPostloadedInfoFromLoad","postloadedTrips","getPreloadAcrossTheDateInfoFromLoad","getPostloadAcrossTheDateInfoFromLoad","drsToRestore","resetLoad","m","IsRetainFuelLoaded","self","loadInfo","loadedTrips","thisShift","thisSchedule","_shift","_schArray","sc","isFilldToggle","currentDriverId","assigned","IdNotInComparer","isFilldCompatible","IsFilldCompatible","currentTrailers","IsFilldToggle","assignedTrailers","EditDriverData","trailer1","selTrailerIndex","selTrailerlist","getUnassignedTrailers","getDriverdetails","validatePrePostLoadTrailer","driverObj","assignedDrivers","IsLoadingButtonSubject","getSelectedDateDriverScheduleByDriverIdGridView","toUTCString","assignDriverToSchedule","isDriverChange","isTrailerChange","currentDriver","checkAnyPublishedTrip","driverSchedules","driverInfo","intializeChatDefault","isAllow","deliverySchedules","editDriverCancel","allowDriverChange","assignDriverToScheduleSave","trailerIds","GetfuelRetainDetails","setUpdateDriverTrailerSubject","scheduleIndex","assignDriverAndTrailer","updateLoadsFromRow","sbModel","ObjectFilter","RegionFilter","DateFilter","DSBFilter","ToggleRequestMode","TripPrevStatus","TripStatus","DeliveryGroupStatus","updateScheduleStatus","scheduleStatus","modifiedTrips","postloadInfoClone","postloadInfoArray","modifiedPreloadedTripInfo","loadIndex","processPostloadedDrToSaveEditedData","draftScheduleBuilderData","_unsavedChanges","isDateChange","isValidTrips","validateTrips","tripModel","_thisRow","allowDriverchange","_thisTrip","_thisDrArray","oldTripValue","validateLoadWithTrailerCapacity","trackableScheduleStatuses","highLightDRDivOneLoad","PublishedGroup","publishLoadSave","tripValue","setDeliveryRequestStatus","FuelRequestQty","trailerCapacity","Capacity","FuelCapacity","Uniqueterminals","UniquebulkPlants","load","publishEntireRow","validTrips","setTripStatusToPublish","tripDrArray","newDrArray","sIndex","rIndex","setAllowDriverChange","setSavedChangesSubject","savedTrip","getShiftCompanyDrivers","getUnassignedDrivers","otherArray","other","drsFormArray","groupParentDrs","existingDrsIndexes","existingDrs","groupParentDRId","addNewDrsInDataService","AllDrs","subDRs","subJobDRs","setAllDeliveryRequestsSubject","preLoadInfo","shiftEndDate","SbView","ShiftEndDate","SbDsbView","_modifiedTripInfo","getPreloadDrViewModel","createPreloadForAcrossTheDate","updateAcrossTheDateDrsPreloadInfo","getModifiedLoadTripInfo","postLoadInfo","getShiftInfoWithDriverTrailerInOtherShift","trailerNames","cloneDrsForPreload","updatePreloadDrsOnSuccess","_modifiedPreloadTripInfo","_modifiedPostloadTripInfo","preloadSelectedTrailerId","selectedTrailer","preloadShift","isAcrossTheDateShift","IsAcrossTheDateShift","createPreloadForSameDate","shiftStartTime","shifEndTime","dsbDate","endDate","_isAcrossTheDateShift","logDRMaxFillIssue","isPublish","allShifts","shiftWithSameDriverTrailer","getMatchedDriverTrailerInfo","shiftWithSameTrailer","matchedDriverTrailers","IdInComparer","Shift","updatePostLoadedForIds","updatePreloadDrs","updatePostloadDrs","postLoadedDr","PostloadDrs","preloadDrIds","preloadDrs","drsToUpdate","postLoadDr","getLoadInfoForm","postloadDrs","preLoadDr","preLoadDrModel","PreLoadedForId","thisDr","d","updatedValues","DispactherNote","prepostloadStatus","posttripInfo","trailerExists","compartmentArray","prevCompartment","disabledControl","getCompartmentsFormGroup","CompartmentId","validateDrQuantity","prepostloadInfo","selectedTrailerId","getTrailerCompartments","IsCompartmentAvailable","intializeTrailerRetainVal","tripsArray","deliveryReqArray","comp","compTrailerId","compQuantity","getRetainTrailerInfo","compartments","newComp","delRequest","isRetainFuelLoaded","compId","setCompartmentInfoToRow","targetRow","sourceLoads","targetLoads","loadIdx","sourceLoad","targetLoad","sourceDrs","targetDrs","drIdx","sourceDr","targetDr","targetDrCompArray","delRequestUpdate","checkDeliveryRequestStatus","cIdx","getCompartmentsFormGroupForDR","setDrValues","setPostLoadedFor","setDrPickupLocation","pretripInfo","intializePrePostLoadCompartmentInfo","closeSlidePanel","prepostDRStatus","updatedPrePostloadedDrs","prepostloadedDrsStatus","updateCompartmentPostloadDrs","getTrailerFuelRetain","trailerFuelRetainInfo","trailerInfo","IsFuelRetain","delStatus","delEncStatus","compartmentCtrl","delRequestCtrl","fuelRetain","RetainInfo","getDRTotalQuantity","TfxTerminal","TfxBulkPlant","resetQuantity","quantityValidators","max","quantity","assignedComps","drQuantity","trailerDetails","assignedTrailer","PreLoadInfoLength","PostLoadInfoLength","schgeduleFormGroup","GetShiftColumnInformation","DSB_REGION_KEY","getDriversShifts","ShiftInfo","SelectedShift","GetShiftColInfo","shiftInfoDetails","shiftColIndexDetails","SelectedShiftColumn","DropSchedule","shiftLoadIndexDetails","LoadIndex","SelectedLoad","DropTrip","SelectedShiftIndex","columnInfo","scheduleColIndex","shiftColumnInfo","ColIndexName","GetShiftLoadInfo","shiftColumn","loadDetails","shiftLoadInfo","initShiftLoad","driverDetails","TransferDSInfoSubject","TransferDS","LoadName","TrailerDSInfoSubject","scheduleTrailerInfo","scInfo","RouteDetailsSubject","unassignTrailerInformationSubject","setRouteResetGroupSubject","setHideDeliveryGroupSubject","RouteDeleteDeliveryGroupSubject","deleteRouteGroup","routeDelete","delRequestIndex","tempDeliveryReq","drRouteInfo","tripDeliveryRequests","DropDelReqToLoad","recurringDeliveryRequests","el","recurringBlendedDeliveryRequests","brokeredDeliveryRequests","groupedDeliveryRequests","UniqueOrderNo","splitBlendedDeliveryRequests","g","existingDrIds","getDeliveryReqDemands","req","setDrUpdatedSubject","_Schedules","refreshScheduleBuilder","dsbNotificationModel","New","InProgress","dsbNotification","getLoadQueueNotifications","publishColResponse","Success","updateDsbLoadQueueForm","scheduleColResponse","Failed","DsbLoadQueueNotification","DsbQueueChangesForNotification","DriverColumnChangeDetect","setPickupValidators_","setBulkPlantValidators_","setTerminalValidators_","getBulkPlantAddress_","getTerimalDetails","xNumber","isDuplicateRecord","optionalPickupIndex","DSBPickupLocationInfo","pickupModel","incId","isAdded","ShiftOrderNumber","TfxFuelTypeName","Boolean","OptionPickupScheduleGroup","resetPickupForm","addressMapper_","fuelTypeIds","getOptioanlPickupTerminals","OptionalPickupSubject","OptionalPickupLocationDeleteInfo","BulkPlantForm","orderInfo","xItem","fuelIndex","fuelDetails","getBulkPlanDetails","getOptionalPickupInfo","addOptionalPickup","optionalPickupModel","getOptionalPickup","optionalPickup","enrouteInProgress","IsDSCompleted","IsDSProgress","OrderIds","deleteOptionalPickup","IsScheduleBuilderSubject","prev","curr","getTrailerByIdFrolList","CancelEntireRowSubscription","CancelEntireRowSubject","cancelDSinfo","cancelEntireRow","setTripStatusToCancel","CancelDriverSchedule","cancelRowPublish","cancelDSScheduleBuilder","CancelDSDeliveryGroupSubject","cancelDSLoadSave","CancelDSInfo","CancelDSLocationGroupSubscription","CancelDSLocationSubject","GetCancelDS","DispatcherLoadDragDropSubject","DRsDetails","getDispatcherDeliveryRequestFormArray","DispatcherLoadDragDropMapSubject","sortedDRs","LocationSeqInfo","JobIds","drDetails","x2","isGroupDRs","IsPreLoadDR","cancelDSPostLoadDeliverySchedule","cancelDsData","scheduleBuilderId","deleteDeliverySchedule","findErrors","postValidateDRMaxFill","deleteLoadNo","deleteLoadYes","publishLoadNo","publishLoadYes","dragDelReqToAnotherLoadNo","saveCompartmentAssignment","TransferDSInfo","deleteOptionalPickupNo","deleteOptionalPickupYes","rejectDriverSchedule","cancelDriverSchedule","cancelLocationDriverSchedule","DsbLoadQueueComponent","subscriptions","columnValidations","validationObj","InCompatibleDrs","compatibilityModels","dsbModelsToPublish","statuses","Completed","Partial","Empty","selectedStatuses","settings","selectedShifts","_isQueuePanelInitiated","_selectAll","panels","LoadQueueFilterForm","getFilterForm","unSubscribeFormChanges","applyFilter","loadQueueColumnMovedSubject","setSelectAllButtonvalue","bindShifts","bindValidation","allSchedules","selectedSchedules","sh","getColumnStatus","ColumnStatus","SortByOrder","_shiftSelected","loadQueueColumnStatus","loadQueueIds","deleteLoadQueue","validation","_drList","tripError","_drsForm","Errors","TripErrors","completedDRStatus","getValidationsAndDrsFromLoad","NotpublishTripCount","jobAndCustomers","getCustomerAndJobFromDr","customers","DrCount","getValidationsByColumn","getColumnForCompatibilityCheck","getTrailerJobCompatibility","drCount","tempString","publishValidatedColumns","selected_schedule","selectedDSBModelsToPublish","intializePublish","isValidForCompatibilityCheck","setColumnStatusAfterApi","saveDsbLoadQueue","responce","apiErrSring","LoadQueueErrorInfo","loadQueue","Messages","LoadQueueSuccessInfo","sch","columnValidation","setDsbQueueChangesForNotification","aOrderNo","bOrderNo","DSBLoadQueueModel","DrError","TripError","LoadQueueColumnValidations","TrailersDeliveryRequestViewModel","TrailerJobNonCompatibleDrs","LoadQueueStatusViewModel","DsbLoadQueueStatusViewModel","LoadQueueStatus","DSBLoadQueueNotificationResponse","DSBLoadQueueNotificationModel","LoadQueueService","validateTrailerJobCompatibilityUrl","createLoadQueueUrl","deleteLoadQueueUrl","saveLoadQueueUrl","getLoadQueueNotificationsUrl","models","_jobs","_customers","OttoBuilderComponent","_loadingOttoDRs","_loadingShifts","_EnableScheduleDR","Loads","AllDeliveryRequests","SelectedDeliveryRequests","SelectedLoads","Map","SelectedShiftId","getShifts","getScheduleDetails","setOpenDsbOttoBuilderSubject","indexvalue","hasClass","removeClass","set","addClass","shiftEndTime","getOttoScheduleDetails","ottoBuilder","scheduleOttoDRs","refreshDsbOttoBuilderSubject","closeSlider","filterScheduleDetails","filterByShift","ScheduleDRs","OttoNotificationComponent","_loadingOttoNotification","OttoNotificationsDetails","getOttoNotification","setOpenDsbOttoNotificationSubject","getOttoNotificationDetails","setDsbOttoNotificationCountSubject","updateNotificationStatus","RouteInfoComponent","routeInfoService","RouteList","RouteLocationList","JobList","currentUserCompanyId","PanelStatus","ShowRouteList","RouteForm","tfxJobs","seen","Set","currentObject","JobDetails","validateLocations","TfxJobs","SequenceNo","TfxCompanyId","CreatedBy","ShiftInfoDetails","updateRouteInfo","getRoutesByRegion","createRouteInfo","getLocationsByRoute","ShowForm","buildForm","routeLocInfo","sendRouteInfo","RouteId","deleteRouteInfo","getLocationsByRegion","addLocation","jobs","getRouteJob","routeId","preventDefault","ScheduleBuilderComponent","routeService","cdRef","deliveryReqService","regionService","drFilterService","_toggle_dr_panel","_toggle_search","_toggle_header","_loading_dr_panel","_isTrailerExists","drRequestClick","_mapsApiKey","mapsApiKey","_refreshQueue","_mustGoRefresh","_shouldGoRefresh","_couldGoRefresh","_missedRefresh","_loadingRegions","_loadingDrRequests","_loadingBuilder","_loadingCarriers","_acceptRejectDr","_loadingRejectDR","_pubWindowmode","Regions","DriverViewShifts","TripDriverInfo","TrailerViewTrailers","SbFilter","UpdateSbFilter","TrailerViewFilter","DriverViewFilter","regionName","CarrierRegions","RegionCarriers","carrierDdlSetting","ScheduleBuilderFilters","Tomorrow","Single","allApiDeliveryRequest","loadUniqueProducts","activeQueueList","mustGoRequests","tempmustGoRequests","localmustGoRequests","shouldGoRequests","tempshouldGoRequests","localshouldGoRequests","couldGoRequests","missedRequests","tempMissedRequests","localMissedRequests","tempcouldGoRequests","localcouldGoRequests","tempDraggedRequest","memberInfo","blendRequestsToUpdate","blendTotalQuantity","blendedProducts","requestToBroker","assignedByOtherRegionRequests","assignedByOtherOperatorRequests","assignedToOtherRegionRequests","assignedToOtherOperatorRequests","clickMultiRequest","ScheduleQuantityTypes","isDisplayOttoButton","IsOttoBuilderOpened","IsOttoNotificationOpened","OttoNotificationCount","shiftFilterSettings","terminalsForFilter","bulkPlantsForFilter","bulkCustomersForFilter","filterDataFromAPI","FormData","IsDeliveryRequestRecieved","_animate","_positionNum","_POSITIONS","_showBackdrop","_isInitiated","IsCarrierCompanyStatus","currentUserCompanyType","isSupplierOrDispatcher","CustomerFilterSettings","SiteList","Orders","selectedCustomer","selectedSite","isGroupDelivery","regionDSBModel","SpiltScheduleQuantityTypes","isDrScheduledforToday","dateFormat","_loader","TripLocations","_isSequencePanelInitiated","locationsequenceSubscription","_locSequenceOpened","getDrFilterForm","drFilterFormToModel","initilizeAssignDrForm","getDrFilterPreferences","subscribeDrQueueChanges","subscribeLoadLocationSequenceSubject","tempChangeRegionChange","updateFiltersFromLocalStorage","getRegions","initScheduleBuilder","searchText","searchRecords","localStroage","MoveActiveQueue","IntializeChat","loaderDetails","memberInfoDetails","routeInfoDetails","defaultdriverChatDetails","driverArray","IntializeSendBirdAccount","setProductsForFilterDr","activeQueueIcon","getOttoSetting","OpenDsbOttoNotificationSubject","DsbOttoNotificationCountSubject","SplitDrsInfoSubject","splitDeliveryRequestComponent","getDeliveryRequestInfo","makeCarrierUIsortable","shouldOpen","flag","_toggleOpened","toggleSearch","validateFilterLocations","getCompaniesByRegion","locations","getLocationsFromDr","selectedTerminals","selectedBulkPlants","selected","getJobListForCarrier","t2","drFilterFormFromModel","_toggleClosed","applyDrFilter","saveDrFilterPreferences","toggleRequestMode","filterRequests","filterMultiWindowRequests","assignTempRequest","assignMultiWindowRequest","setting","validateFilterForm","searchRequests","searchMultiWindowRequests","resetTimer","drQueueChangesSubscription","id1","id2","priorityRequests","getRequestsByPriority","getLocalStorageQueueData","intervalTime","clearInterval","localStorage","setItem","getDayAfterTomorrowsDate","searchDRS","selectedProduct","SelectedShifts","IsDsbDriverSchedule","IsAssignDrEnabled","subscribeDateChange","subscribeRegionChange","subscribeUnsavedChangesSubject","subscribeSavedChangesSubject","subscribeEmptyUnsavedChangesSubject","subscribeRestoreDeletedRequestSubject","subscribeDrUpdatedSubject","subscribeRemoveDroppedRequestSubject","subscribeDSBFilterChange","DateChangeSubscription","UnsavedChangesSubscription","SavedChangesSubscription","EmptyUnSavedChangesSubscription","RegionChangeSubscription","RestoreDeletedRequestSubscription","DrUpdatedSubscription","RemoveDroppedRequestSubscription","DSBFilterChangeSubscription","sbViewId","sbDsbView","setData","setDisableDSBControls","UnsavedChangesSubject","existingObjectIndex","unSavedTrip","SavedChangesSubject","EmptyUnsavedChangesSubject","elementFound","onRegionChange","DrUpdatedSubject","updatedDrs","RestoreDeletedRequestSubject","newDrs","restoreDeleteDRs","RemoveDroppedRequestSubject","_assigned","z","_driverTrailerAssigned","isDriverAssignedToTrailerView","isTrailerAssignedToDriverView","resetSbFilter","_driverTrailedAssigned","isDriverTrailerAssigned","setObjectFilter","DSB_OBJECTFILTER_KEY","previousWindowMode","setWindowFilter","updateLocalStorageActiveQueue","onQueueFilterChange","activeTimer","refreshSingleWindow","DSB_WINDOWMODE_KEY","mustShouldCouldgoRecords","groupDrsByJob","mustGoRecords","getMustGoRequests","shouldGoRecords","getShouldGoRequests","couldGoRecords","getCouldGoRequests","missedRecords","missedReqLocations","setQueueFilter","ToggleQueueIcon","updateRecordsToggleRequest","clearDrFiltersAndSearches","DSB_TOGGLEREQUESTMODE_KEY","setFilterDate","focus","DSB_DATEFILTER_KEY","saveChanges","setSaveModifiedLoadsSubject","tempRegionId","getItem","todaysDate","Today","getTodaysDate","getTomorrowsDate","YesterDay","getYesterDayDate","setReadOnlyControlsValue","_objectFilter","_windowFilter","_queueFilter","disableControls","currentDate","diff","getRegiondetail","resetLocalStorage","getScheduleBuilder","getRegionDetails","setSbFilter","getOttoNotificationCount","_dateFilter","formDr","sbDr","ScheduleBuilder","finalDr","shft","schdl","trp","dlReq","today","tomorrow","yesterday","dateFilter","unsubscribeEventSubscription","getDateFilter","getDeliveryRequests","setTrailerShiftsSubject","_windowMode","_toggleReqMode","DSB_FILTER_KEY","_dsbFilterKey","subscribeEventSubscription","objectFilter","driverdetails","LoadDriverDetails","apply","LoadDriverDetailsShift","getShiftInformation","IsCalendarView","isCalendarDrPresent","filterDrByScheduleBuilder","updateRequest","filterRequest","refreshUpdateData","drQueueChangesForFilter","draggedRequests","getAllRequests","priorityReqs","missedReqs","requests","originalDr","localStorageRequests","getLocalStorageRequests","isDrExists","pushItemsInMissedAndUpdateDrPanel","pushItemsAndUpdateDrPanel","removeItemFromTempDrageQueue","DeliveryRequestType","jobIndex","getPriority","pushLocation","isPercent","toggleBlendQuantity","tnkRequiredQuantity","getTotalBlendQuantity","updateRequests","drNotes","drSelectedDate","drScheduleStartTime","drScheduleEndTime","drPriority","each","refreshDeliveryRequests","refreshUpdateRecordMultiwindow","GetScheduleQtyType","SQT","tempBlendDrs","AssignDrForm","getAllCarrierRegions","cancelAssignDrsToCarrier","getOrdersAndCarrierDetails","getScheduleQuantityType","changeBrokeredDrStatus","_id","setAcceptRejectDRSubject","mustGoReqs","shouldGoReqs","couldGoReqs","IsBrokeredCarrierDR","pubWindowmode","mustrecordFound","shouldrecordFound","couldrecordFound","missedrecordFound","_scheduleRequests","scheduleBuilder","draggedmissedRequests","mustGodeliveryRequests","shouldGodeliveryRequests","couldGodeliveryRequests","misseddeliveryRequests","missedLocations","mustGoLocations","shouldGoLocations","couldGoLocations","setInterval","IsUserActive","refreshLocalStorage","intervalTimeQueue","jobObj","dragged_must_should_could","searchRequestsWithParams","draggedMissedRequests","missedrecords","applyFilterToDrs","_mustShoulCouldGoRecords","_draggedRequests","_filteredMustShoulCouldGoRecords","_missedDrs","dragged_requests","_localmustGoRequests","getDrsFromJob","_localShouldGoRequests","_localCouldGoRequests","_localMissedDr","mustGorecords","shouldGorecords","couldGorecords","mustGoGroupedDrs","shouldGoGroupedDrs","couldGoGroupedDrs","_localshouldGoRequests","_localcouldGoRequests","_draggedMissedRequests","_missedrecords","updateDrRequest","foundIndex","drArray","updateDrRequestMultiScreenMode","updatedDrIndex","filterDriverView","filterTrailerView","getPickups","pickups","tripIdx","addPickupLocation","trailerIdx","addBulkplantAddress","addTerminalAddress","bulkplant","bulkplantTxt","siteName","search","terminalTxt","sche","isPickup","code","isExit","pick","isDriver","isTrailer","isShowShift","isExitLoop","isShiftShow","trail","sendbirdComponent","IntializeDriverChat","driverViewShifts","driverinfo","xshiftItem","driverItem","drItem","shiftItem","IntializeChatDefault","_regionId","_dsbViewFilter","disableControlsonLoad","DSB_READONLY_KEY","routeInfoComponent","setRegionId","OpenDsbOttoBuilderSubject","RefreshDsbOttoBuilderSubject","_dSBFilter","shiftStartInfo","DSBShiftInfo","shiftmodel","DSBShift","setShiftVisibility","shiftViewModel","getDSBShiftFilters","SetFilters","shiftExists","shiftModel","shiftChangeDetect","filterGridViewDriverView","setGridViewSearch","getAssignCarrierDetails","CreatedByRegionId","setCarrierRegions","CarrierDetails","OrderDetails","BrokerOrderId","DRNote","getCarrierRegions","isSelect","selection","_formArray","carr","existingFormCarriers","carrierRegion","pushRowInCarrierForm","SelectedCarrier","Carriers","DeliveryRequestWithOrder","_carrRegions","currentSelection","sortable","stop","ui","carrierIds","updateSequence","carrIds","carriers","assignDrModel","CarrierRegionId","CarrierCompanyId","CarrierInfo","CarrierInfoJson","IsDispatchRetainedByCustomer","BrokerDeliveryRequestToCarrier","getSelectedCarriersByRegion","setDeliveryRequestWithOrder","selectedDrs","uniqueJobAndFuelType","getOrdersByDeliveryRequests","fmArr","o","unselectDrById","formModel","BrokerDrModel","drObj","IsBlendedGroupProduct","checkBlendedProduct","blendedDRExists","BrokerDeliveryRequestsToCarriers","CurrentDr","SelectedFuelId","SelectedLocationId","SelectedCustomerId","LoadLocationSequenceSubject","tripFormGroup","loadForSequence","uniqueByJobId","values","uniqueByTbdGroupId","jobIds","getJobCoordinates","_location","makeLocationsSrtable","locationIds","locId","Sequence","setDispatcherLoadDragDropMapSubject","hideHeader","onDeliveryReqUpdate","filterChangeConfirmation","RedirectToCreateTrailer","RedirectToCreateRegion","filterChangeRegionConfirmation","filterChangeWindowConfirmation","clearDropLocationControls","onCustomerSelect","onCustomerDeSelect","onSiteSelect","onSiteDeSelect","AddDropLocation","DeliveryRequestService","localStroageData","QueueIcon","smallLoaderBeh","smallLoader"],"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","file":"carrier-carrier-module-es5.js","sourcesContent":["import { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LoadFilterModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Suppliers: DropdownItem[];\r\n    public Carriers: DropdownItem[];\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    public SiteName: string;\r\n    public CompanyName: string;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    public Level: number;\r\n    public Ullage: number;\r\n    public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterNetLevel: number;\r\n    public WaterGrossLevel: number;\r\n    public CaptureTime: string;\r\n    public ProductName: string;\r\n    public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    Jobs: DropdownItem[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n}\r\n\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests,\r\n    DSBShift\r\n}\r\n\r\nexport enum WindowModeFilter {\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2\r\n}\r\n\r\nexport class DeliveryRequestViewModel {\r\n    constructor() {\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.PickupLocationType = 1;\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n    }\r\n    public Id: string;\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public ProductType: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public SiteId: string;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public OrderId: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public StatusClassId: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public ProductSequence: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DropdownItem[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class LocationFilters {\r\n    public IsShowCarrierManaged: boolean;\r\n    public state: number[] = [];\r\n    public city: number[] = [];\r\n    public product: string[] = [];\r\n    public priority: number[] = [];\r\n    public customer: number[] = [];\r\n    public supplier: SelectedItem[] = [];\r\n    public carrier: SelectedItem[] = [];\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface DropDownItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MaxFillPercent: number;\r\n    MinFill: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n   // CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string,\r\n    supplierDetails: SelectedItem[];\r\n    carrierDetails: SelectedItem[];\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DropdownItem[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    ExistingDR: PartialDRDetail[];\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public ShiftIndex: number;\r\n    public ScheduleIndex: number;\r\n    public TripIndex: number;\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrs: any[];\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\n\r\nexport interface Supplier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface Carrier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedLocationId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\n","import { Component, EventEmitter, Input, OnInit, OnDestroy, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { DeliveryRequestViewModel, DelRequestsByJobModel, DropAddressModel, Priority } from '../models/DispatchSchedulerModels';\nimport { CarrierService } from '../service/carrier.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport * as moment from 'moment';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DataService } from '../service/data.service';\nimport { BrokeredDrCarrierStatus, DeliveryReqPriority } from 'src/app/app.enum';\nimport { LoadPriorities } from 'src/app/app.constants';\n\n\n@Component({\n    selector: 'app-assigned-to-me',\n    templateUrl: './assigned-to-me.component.html',\n    styleUrls: ['./assigned-to-me.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AssignedToMeComponent implements OnInit {\n\n    @Output() OnAcceptRejectDR: EventEmitter<any> = new EventEmitter<any>();\n    @Input() regionId: string;\n    @Input() SelectedDate: string;\n    //@Input() public Locations: DelRequestsByJobModel[] = [];\n    \n    public dtMustGoOptions: any = {};\n    public MustGoSchedules: DeliveryRequestViewModel[] = [];\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    closeResult = '';\n    AssignedToMeForm: FormGroup;\n    FilterForm: FormGroup;\n    isLoading = false;\n    public HeaderText: string;\n    public NextRenewalDate: string;\n    public AcceptRejectDRSubscription: Subscription;\n\n    public currentRegionId: string;\n    public currentSelectedDate: string;\n    public brokeredDrRequestedToMe: DelRequestsByJobModel[] = [];\n    public brokeredDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public MustGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public ShouldGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public CouldGoDrRequestedToMeAPI: DeliveryRequestViewModel[] = [];\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n    public BrokeredDrStatus: BrokeredDrCarrierStatus = null;\n\n    //#region  Filters\n    public SupplierCompanies: DropdownItem[] = [];\n    public CustomerLocation: DropdownItem[] = [];\n    public priorityList: Priority[] = [];\n    public PriorityDdlSettings: IDropdownSettings;\n    public MaxInputDate: Date = new Date();\n    public MinInputDate: Date = new Date();\n    //#endregion Filters \n\n    constructor(private fb: FormBuilder, private carrierService: CarrierService, public dataService: DataService,\n        private modalService: NgbModal) { }\n\n    ngOnInit() {\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\n        this.MinInputDate.setDate(this.MaxInputDate.getDate());\n        this.NextRenewalDate = moment(new Date()).add(1, 'months').startOf('month').format('MM/DD/YYYY');\n        this.HeaderText = 'Assigned To Me';\n        this.FilterForm = this.getAssignedToMeFilterForm(false);\n        this.currentRegionId = this.regionId;\n        this.currentSelectedDate = this.SelectedDate;\n        this.Init();\n        this.subscribeFormChanges();\n        this.subscribeAcceptRejectDRSubject();\n        //this.InitilizeGrids();\n    }\n\n    ngOnDestroy(): void {\n        if (this.AcceptRejectDRSubscription) {\n            this.AcceptRejectDRSubscription.unsubscribe();\n        }\n    }\n\n    subscribeFormChanges() {\n        this.FilterForm.controls.Suppliers.valueChanges.subscribe(chenge => {\n            this.FilterData();\n        });\n        this.FilterForm.controls.Locations.valueChanges.subscribe(chenge => {\n            this.FilterData();\n        });\n    }\n\n    //to use datatable Added this functions but Inbuit dataTrigger giving error - check with anant\n    InitilizeGrids() {\n\n        let ColumnDetails = [];\n\n        ColumnDetails = [{ title: 'Supplier Name', name: 'Supplier Name', data: 'CustomerCompany', \"autoWidth\": true },\n        { title: 'Address', name: 'Address', data: 'JobAddress', \"autoWidth\": true },\n        { title: 'Product', name: 'Product', data: 'ProductType', \"autoWidth\": true },\n        { title: 'Required Qty', name: 'Required Qty', data: 'RequiredQuantity', \"autoWidth\": true },\n        { title: 'Inventory', name: 'Inventory', data: 'CurrentInventory', \"autoWidth\": true },\n        { title: 'Ullage', name: 'Ullage', data: 'UoM', \"autoWidth\": true }];\n\n\n        this.dtMustGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                this.isLoading = true;\n                // this.brokeredDrRequestedToMe = [];\n                // this.carrierService.getBrokeredDrAssignedToMe(this.regionId, this.SelectedDate).subscribe(drs => {\n                //   console.log(drs);\n                //   this.brokeredDrRequestedToMeAPI = drs || [];\n                //   this.MustGoSchedules = drs || []\n                //   data: drs || [];\n                //   // this.AssignedToMeForm = this.fb.group({\n                //   //   DeliveryRequests: this.getDeliveryRequestFormArray(this.brokeredDrRequestedToMeAPI)\n                //   // });\n                //   this.isLoading = false;\n                //   //this.brokeredDrRequestedToMe = this.deliveryReqService.groupDrsByJob(drs, DeliveryRequestTypes.AssignedToMe);           \n\n                // });\n\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'copy', exportOptions: ColumnDetails },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: ColumnDetails },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: ColumnDetails },\n                { extend: 'print', exportOptions: ColumnDetails }\n            ],\n            columns: ColumnDetails\n        };\n    }\n\n    FiltersSettingsAndPriorityList() {\n\n        this.PriorityDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.priorityList = LoadPriorities;\n\n    }\n\n    ngAfterViewInit(): void {\n        //this.dtMustGoTrigger.next();\n    }\n\n    Init() {\n        //this.FiltersSettingsAndPriorityList();\n    }\n    getBrokeredDrAssignedToMe(regionId: string, selectedDate?: string) {\n        this.isLoading = true;\n        this.brokeredDrRequestedToMe = [];\n        this.carrierService.getBrokeredDrAssignedToMe(regionId, selectedDate).subscribe(drs => {\n            this.brokeredDrRequestedToMeAPI = drs || [];\n            this.GetSuplierCompanyList(this.brokeredDrRequestedToMeAPI)\n            this.MustGoSchedules = drs || []\n            this.brokeredDrRequestedToMeAPI.forEach(x => {\n                x.StringAssignedOn = x.AssignedOn ? moment(x.AssignedOn).format('MM/DD/YYYY') : '--';\n                if (x.StringAssignedOn == '01/01/0001' || x.StringAssignedOn == 'Invalid date' ||\n                    x.StringAssignedOn == '12/31/0000')\n                    x.StringAssignedOn = '--'\n            })\n            this.MustGoDrRequestedToMeAPI = [];\n            this.ShouldGoDrRequestedToMeAPI = [];\n            this.CouldGoDrRequestedToMeAPI = [];\n            this.MustGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.MustGo) || [];\n            this.ShouldGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.ShouldGo) || [];\n            this.CouldGoDrRequestedToMeAPI = drs.filter(x => x.Priority == DeliveryReqPriority.CouldGo) || [];\n            data: drs || [];\n            this.isLoading = false;\n        });\n    }\n\n    subscribeAcceptRejectDRSubject(): void {\n        this.AcceptRejectDRSubscription = this.dataService.AcceptRejectDRSubject.subscribe(x => {\n            if (x) {\n                this.getBrokeredDrAssignedToMe(x.RegionId, x.Date);\n            }\n        });\n    }\n\n    GetSuplierCompanyList(dr: DeliveryRequestViewModel[]) {\n        this.SupplierCompanies = [];\n        this.CustomerLocation = [];\n        dr.forEach(ele => {\n            if (!this.SupplierCompanies.find(x => ele.SupplierCompanyId == x.Id)) {\n                let obj = new DropdownItem;\n                obj.Id = ele.SupplierCompanyId;\n                obj.Name = ele.CustomerCompany;\n                this.SupplierCompanies.push(obj)\n            }\n            if (!this.CustomerLocation.find(x => ele.JobId == x.Id)) {\n                let objLocation = new DropdownItem;\n                objLocation.Id = ele.JobId;\n                objLocation.Name = ele.JobName;\n                this.CustomerLocation.push(objLocation)\n            }\n        });\n        if (this.SupplierCompanies.length == 1) {\n            this.FilterForm.get('Suppliers').patchValue(this.SupplierCompanies);\n        }\n        if (this.CustomerLocation.length == 1) {\n            this.FilterForm.get('Locations').patchValue(this.CustomerLocation);\n        }\n\n    }\n\n    public confirmChangeBrokeredDrStatus(status: BrokeredDrCarrierStatus, dr: any,) {\n        this.isLoading = true;\n        var delReqForm = dr;\n        let delReq = delReqForm as DeliveryRequestViewModel;\n        this.BrokeredDrStatus = status;\n        var allDrs = this.ShouldGoDrRequestedToMeAPI;\n        var drToupdate = allDrs.find(t => t.Id == delReq.Id);\n        this.requestToUpdate = Object.assign({}, drToupdate);\n        // this.AssignDrForm.get('DispatcherNote').setValue('');        \n\n        this.requestToUpdate = Object.assign({}, delReq);\n        let element = document.getElementById(\"openConfirmProceedBrokeredDrModal\");\n        element ? element.click() : null;\n        this.isLoading = false;\n\n        // let celement = document.getElementsByClassName(\"modal-backdrop\");    \n        // celement['className'] = 'modal show';\n    }\n\n    public changeBrokeredDrStatus(DrId: string, BlendedGroupId:string, status: BrokeredDrCarrierStatus) {\n        this.isLoading = true;\n        this.OnAcceptRejectDR.emit({ drId: DrId, blendedGroupId: BlendedGroupId, status: status == 2 ? BrokeredDrCarrierStatus.Accepted : BrokeredDrCarrierStatus.Rejected });\n        this.currentRegionId = this.regionId;\n        let that = this;\n        setTimeout(function () {\n            that.getBrokeredDrAssignedToMe(that.currentRegionId, that.currentSelectedDate);\n            this.isLoading = false;\n        }, 3500);\n    }\n    open(content) {\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${''}`;\n        });\n    }\n\n\n    getAssignedToMeFilterForm(isFilterApplied?: boolean) {\n        return this.fb.group({\n            Suppliers: this.fb.control([]),\n            Priority: this.fb.control([]),\n            Locations: this.fb.control([]),\n            FromDate: this.fb.control(''),\n            ToDate: this.fb.control(''),\n            IsFilterApplied: this.fb.control(isFilterApplied ? true : false)\n        });\n    }\n\n    isPriorityVisible(priority: number) {\n        let selectedArray = this.FilterForm.controls['Priority'].value as any[] || [];\n        return (selectedArray.length == 0 || selectedArray.find(x => x.Id == priority)) || false;\n    }\n    setPanelHeader(headerText: string) {\n        this.HeaderText = headerText;\n        this.FiltersSettingsAndPriorityList();\n        this.getBrokeredDrAssignedToMe(this.regionId, this.SelectedDate);\n    }\n    clearPanelControls() {\n        this.brokeredDrRequestedToMe = [];\n        this.brokeredDrRequestedToMeAPI = [];\n        this.MustGoDrRequestedToMeAPI = [];\n        this.ShouldGoDrRequestedToMeAPI = [];\n        this.CouldGoDrRequestedToMeAPI = [];\n        this.requestToUpdate = new DeliveryRequestViewModel(false);\n        this.BrokeredDrStatus = null;\n        this.SupplierCompanies = [];\n        this.priorityList = [];\n        this.FilterForm.reset();\n    }\n\n\n\n    FilterData() {\n        if (this.FilterForm.controls['Suppliers'].value != null && this.FilterForm.controls['Suppliers'].value.length > 0) {\n            let supplierIds = [];\n            this.FilterForm.controls['Suppliers'].value.forEach(ele => supplierIds.push(ele.Id));\n            let mustGo = [];\n            let shouldGo = [];\n            let couldGo = [];\n            this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n            this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n            this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n            supplierIds.forEach(x => {\n                let oMustGo = this.MustGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oMustGo.forEach(x => mustGo.push(x));\n                let oShouldGo = this.ShouldGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oShouldGo.forEach(x => shouldGo.push(x));\n                let oCouldGo = this.CouldGoDrRequestedToMeAPI.filter(res => res.SupplierCompanyId == x);\n                oCouldGo.forEach(x => couldGo.push(x));\n            });\n            this.MustGoDrRequestedToMeAPI = mustGo;\n            this.ShouldGoDrRequestedToMeAPI = shouldGo;\n            this.CouldGoDrRequestedToMeAPI = couldGo;\n        }\n        else {\n            this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n            this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n            this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n        }\n\n        if (this.FilterForm.controls['Locations'].value != null && this.FilterForm.controls['Locations'].value.length > 0) {\n            let LocationIds = [];\n            this.FilterForm.controls['Locations'].value.forEach(ele => LocationIds.push(ele.Id));\n            let mustGo = [];\n            let shouldGo = [];\n            let couldGo = [];\n            LocationIds.forEach(x => {\n                let oMustGo = this.MustGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oMustGo.forEach(x => mustGo.push(x));\n                let oShouldGo = this.ShouldGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oShouldGo.forEach(x => shouldGo.push(x));\n                let oCouldGo = this.CouldGoDrRequestedToMeAPI.filter(res => res.JobId == x);\n                oCouldGo.forEach(x => couldGo.push(x));\n            });\n            this.MustGoDrRequestedToMeAPI = mustGo;\n            this.ShouldGoDrRequestedToMeAPI = shouldGo;\n            this.CouldGoDrRequestedToMeAPI = couldGo;\n        }\n\n        if (this.FilterForm.controls.FromDate.value && this.FilterForm.controls.ToDate.value) {\n            if (moment(this.FilterForm.controls.ToDate.value).toDate() < moment(this.FilterForm.controls.FromDate.value).toDate()) {\n                Declarations.msgerror('FromDate should be greater than ToDate', undefined, undefined);\n                return;\n            }\n            let mstGo = []\n            mstGo = this.MustGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.MustGoDrRequestedToMeAPI = mstGo;\n\n            let shldGo = []\n            shldGo = this.ShouldGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.ShouldGoDrRequestedToMeAPI = shldGo;\n\n            let coldGo = []\n            coldGo = this.CouldGoDrRequestedToMeAPI.filter(x => x.StringAssignedOn == '--' || (moment(this.FilterForm.controls.FromDate.value).toDate() <= moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() &&\n                moment(moment(x.StringAssignedOn).format('MM/DD/YYYY')).toDate() <= moment(this.FilterForm.controls.ToDate.value).toDate()));\n            this.CouldGoDrRequestedToMeAPI = coldGo;\n        }\n        this.RemoveSelectedSuppliers();\n    }\n    public ShowAllDrs() {\n        this.FilterForm.reset();\n        this.MustGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.MustGo);\n        this.ShouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.ShouldGo);\n        this.CouldGoDrRequestedToMeAPI = this.brokeredDrRequestedToMeAPI.filter(x => x.Priority == DeliveryReqPriority.CouldGo);\n\n    }\n\n    RemoveSelectedSuppliers() {\n        let SuppliersList = [];\n        let LocationList = [];\n        this.MustGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        this.ShouldGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        this.ShouldGoDrRequestedToMeAPI.forEach(x => {\n            SuppliersList.push(x.SupplierCompanyId);\n            LocationList.push(x.JobId);\n        })\n        let removeSupplier = [];\n        if (this.FilterForm.controls.Suppliers.value != null) {\n            this.FilterForm.controls.Suppliers.value.forEach(sup => {\n                let check = SuppliersList.indexOf(c => c == sup.Id)\n                if (check < 0) {\n                    removeSupplier.push(sup);\n                }\n            });\n\n            if (removeSupplier != null) {\n                removeSupplier.forEach(t => {\n                    let index = this.FilterForm.controls.Suppliers.value.indexOf(c => c.Id == t.Id);\n                    if (index >= 0)\n                        delete this.FilterForm.controls.Suppliers.value[index];\n                })\n            }\n        }\n\n        let RemoveLocations = [];\n        if (this.FilterForm.controls.Locations.value != null) {\n            this.FilterForm.controls.Locations.value.forEach(sup => {\n                let check = LocationList.indexOf(c => c == sup.Id)\n                if (check < 0) {\n                    RemoveLocations.push(sup);\n                }\n            });\n\n            if (RemoveLocations != null) {\n                RemoveLocations.forEach(t => {\n                    let index = this.FilterForm.controls.Locations.value.indexOf(c => c.Id == t.Id);\n                    if (index >= 0)\n                        delete this.FilterForm.controls.Locations.value[index];\n                })\n            }\n        }\n    }\n    getNextRenewalDate(date: Date) {\n        this.NextRenewalDate = moment(date).add(1, 'months').startOf('month').format('MM/DD/YYYY');\n    }\n}\n","<a (click)=\"setPanelHeader('Brokered DR Requests')\" onclick=\"slidePanel('#AssignedToMe','80%')\" class=\"fs13 ml-3\">\r\n    <i class=\"fa fa-arrow-alt-circle-right mt3 pull-left mr-0\"></i><span class=\"fs13\">Assigned To Me</span>\r\n</a>\r\n<div id=\"AssignedToMe\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper p-3 pr\">\r\n        <div class=\"mb-2\">\r\n            <a class=\"close-panel float-left\" (click)=\"clearPanelControls()\" onclick=\"closeSlidePanel();\">\r\n                <i class=\"fa fa-close fs18\"></i>\r\n            </a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div class=\"card shadow p-3\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Suppliers']\"\r\n                                             [placeholder]=\"'Select Supplier'\" [settings]=\"PriorityDdlSettings\" [data]=\"SupplierCompanies\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Locations']\"\r\n                                             [placeholder]=\"'Select Location'\" [settings]=\"PriorityDdlSettings\" [data]=\"CustomerLocation\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['Priority']\"\r\n                                             [placeholder]=\"'Select Priority'\" [settings]=\"PriorityDdlSettings\" [data]=\"priorityList\" >\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" class=\"form-control datepicker\" [formControl]=\"FilterForm.controls['FromDate']\"\r\n                           myDatePicker [format]=\"'MM/DD/YYYY'\" placeholder=\"From\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"FilterForm.get('FromDate').setValue($event);getNextRenewalDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" class=\"form-control datepicker\" [formControl]=\"FilterForm.controls['ToDate']\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" placeholder=\"To\" [maxDate]=\"MaxInputDate\" \r\n                           (onDateChange)=\"FilterForm.get('ToDate').setValue($event);getNextRenewalDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" (click)=\"FilterData()\" value=\"Filter By Date\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-right\">\r\n                    <input type=\"button\" class=\"btn btn-link  m-0 p-0\" (click)=\"ShowAllDrs()\" value=\"Clear Selection\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"brokered-dr-grids mt-2\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\" id=\"AssignedToMeApi\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div *ngIf=\"isPriorityVisible(1)\">\r\n                                <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important;\">Must Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-mustgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage </th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"MustGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of MustGoDrRequestedToMeAPI\">\r\n                                                        <!-- <td>{{BrokeredDR.controls['Id'].value}}</td> -->\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th class=\"no-wrap\">\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"MustGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isPriorityVisible(2)\">\r\n                                <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important;\">Should Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-shouldgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage</th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"ShouldGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of ShouldGoDrRequestedToMeAPI\">\r\n                                                        <!-- <td>{{BrokeredDR.controls['Id'].value}}</td> -->\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th class=\"no-wrap\">\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"ShouldGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"isPriorityVisible(3)\">\r\n                                <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important;\">Could Go</h4>\r\n                                <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                    <div class=\"ibox mb0\">\r\n                                        <div class=\"ibox-content no-padding no-border\">\r\n                                            <table id=\"table-mustgo\" data-gridname=\"19\"\r\n                                                   class=\"table table-bordered table-hover\">\r\n                                                <!-- datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\" -->\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <!-- <th>Id</th> -->\r\n                                                        <th data-key=\"CustomerCompany\">Supplier Name</th>\r\n                                                        <th data-key=\"JobAddress\">Address</th>\r\n                                                        <th data-key=\"ProductType\">Product</th>\r\n                                                        <th data-key=\"RequiredQuantity\">Required Qty</th>\r\n                                                        <th data-key=\"RetainDate\">Delivery Window</th>\r\n                                                        <th data-key=\"CurrentInventory\">Inventory</th>\r\n                                                        <th data-key=\"Ullage\">Ullage</th>\r\n                                                        <th data-key=\"DateOfRequest\">Date of request</th>\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"CouldGoDrRequestedToMeAPI?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of CouldGoDrRequestedToMeAPI\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName +', '+ row.JobAddress}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow?row.DeliveryWindow :'--'}}</td>\r\n                                                        <td>{{row.CurrentInventory}}{{row.CurrentInventory != '--' ?  (row.UoM == 1 ? ' G' : ' L') : ''}} </td>\r\n                                                        <td>{{row.Ullage}}{{row.UoM == 1 ? ' G' : ' L'}}</td>\r\n                                                        <td>{{row.StringAssignedOn}}</td>\r\n                                                        <th>\r\n                                                            <a class=\"color-green\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Accept Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(2, row)\">\r\n                                                                <i class=\"fas fa-check-circle fs21\"></i>\r\n                                                            </a>\r\n                                                            <a class=\"color-red ml-2\" placement=\"bottom\" container=\"body\"\r\n                                                               ngbTooltip=\"Reject Delivery Request\"\r\n                                                               (click)=\"confirmChangeBrokeredDrStatus(3, row)\">\r\n                                                                <i class=\"fas fa-times-circle fs21\"></i>\r\n                                                            </a>\r\n\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"CouldGoDrRequestedToMeAPI?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- proceed brokered dr start -->\r\n        <button id=\"openConfirmProceedBrokeredDrModal\" hidden=\"hidden\" class=\"btn btn-lg btn-outline-primary\"\r\n                (click)=\"open(content)\"></button>\r\n        <div class=\"modal\" style=\"backdrop-filter: unset;\" id=\"proceedConfirmBrokeredDrModal\" tabindex=\"-1\"\r\n             role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n            <div class=\"modal-dialog\" role=\"dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                            <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0\">\r\n                                Accept Brokered Delivery\r\n                                Request?\r\n                            </h2>\r\n                            <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0\">\r\n                                Reject Brokered Delivery\r\n                                Request?\r\n                            </h2>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                                        {{requestToUpdate?.ProductType}}\r\n                                    </div>\r\n                                    <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                                        {{requestToUpdate.BlendedProductName}}, {{requestToUpdate.AdditiveProductName}}\r\n                                    </div>\r\n                                    <small class=\"mb10\">\r\n                                        {{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}}\r\n                                    </small>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                    <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                        <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                    </div>\r\n                                    <ng-template #quantity>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                        <ng-template #litres>(L)</ng-template>\r\n                                        <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                                        <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                                    </ng-template>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"text-right\">\r\n                                <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                                <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\"\r\n                                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2)\"\r\n                                        class=\"btn btn-primary btn-lg\">\r\n                                    Accept\r\n                                </button>\r\n                                <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\"\r\n                                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3)\"\r\n                                        class=\"btn btn-primary btn-lg\">\r\n                                    Reject\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\" style=\"position:fixed !important\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n\r\n        <ng-template #content let-modal>\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"isLoading\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0 dib\">Accept Brokered Delivery Request?</h2>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0 dib\">Reject Brokered Delivery Request?</h2>\r\n                    <button type=\"button\" class=\"close m-0 p-0 mt-n1\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                                {{requestToUpdate?.ProductType}}\r\n                            </div>\r\n                            <div class=\"mt10 fs14 f-normal\" *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                                {{requestToUpdate.BlendedProductName+', '+requestToUpdate.AdditiveProductName}}\r\n                            </div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                            <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                            </div>\r\n                            <ng-template #quantity>\r\n                                <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                <ng-template #litres>(L)</ng-template>\r\n                                <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                                <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"modal-footer border-0 pt-0\">\r\n                <button type=\"button\" class=\"btn btn-lg\" (click)=\"modal.close('Cancel click')\">Cancel</button>\r\n                <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\"\r\n                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2); modal.close('Accept Click');\"\r\n                        class=\"btn btn-primary btn-lg\">\r\n                    Accept\r\n                </button>\r\n                <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\"\r\n                        (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3); modal.close('Rejectclick');\"\r\n                        class=\"btn btn-danger btn-lg\">\r\n                    Reject\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DeliveryRequestComponent } from './delivery-request/delivery-request.component';\r\nimport { ScheduleBuilderComponent } from './schedule-builder/schedule-builder.component';\r\nimport { DeliveryGroupComponent } from './delivery-group/delivery-group.component';\r\nimport { ScheduleBuilderFilterComponent } from './schedule-builder-filter.component';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { RouteInfoComponent } from './schedule-builder/route-info/route-info.component';\r\nimport { CompartmentQuantityValidatorDirective } from './schedule-builder/compartment-quantity-validator.directive';\r\nimport { OttoBuilderComponent } from './schedule-builder/otto-builder.component';\r\nimport { OttoNotificationComponent } from './schedule-builder/otto-notification/otto-notification.component';\r\nimport { SplitDeliveryRequestComponent } from './delivery-request/split-delivery-request/split-delivery-request.component';\r\nimport { DriverColumnViewComponent } from './schedule-builder/driver-column-view/driver-column-view.component';\r\nimport { DriverScheduleColumnViewComponent } from './schedule-builder/child-components/driver-schedule-column-view.component';\r\nimport { ScheduleBuilderGridFilterComponent } from './schedule-builder-grid-filter.component';\r\nimport { LoadQueueService } from './schedule-builder/dsb-load-queue/load-queue.service';\r\nimport { DsbLoadQueueComponent } from './schedule-builder/dsb-load-queue/dsb-load-queue.component';\r\nimport { AssignedToMeComponent } from './assigned-to-me/assigned-to-me.component';\r\nimport { AssignedByMeComponent } from './delivery-request/assigned-by-me/assigned-by-me.component';\r\nimport { AddLocationComponent } from './schedule-builder/add-location/add-location.component';\r\nimport { PricingSectionModule } from '../shared-components/pricing-section/pricing-section.module';\r\n\r\nconst routeCarrier: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: ScheduleBuilderComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DeliveryRequestComponent,\r\n        ScheduleBuilderComponent,\r\n        DeliveryGroupComponent,\r\n        ScheduleBuilderFilterComponent,\r\n        RouteInfoComponent,\r\n        CompartmentQuantityValidatorDirective,\r\n        OttoBuilderComponent,\r\n        OttoNotificationComponent,\r\n        SplitDeliveryRequestComponent,\r\n        DriverColumnViewComponent,\r\n        DriverScheduleColumnViewComponent,\r\n        ScheduleBuilderGridFilterComponent,\r\n        DsbLoadQueueComponent,\r\n        AssignedToMeComponent,\r\n        AssignedByMeComponent,\r\n        AddLocationComponent,\r\n\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        PricingSectionModule,\r\n        NgDragDropModule.forRoot(),\r\n        RouterModule.forChild(routeCarrier)\r\n    ],\r\n    providers:[\r\n        LoadQueueService\r\n    ]\r\n})\r\nexport class CarrierModule { }\r\n","import { FormGroup, FormArray, ValidationErrors, AbstractControl, FormControl } from '@angular/forms';\r\n\r\nexport class CustomAbstractControls {\r\n    public static findRecursiveErrors(formToInvestigate: FormGroup | FormArray): string[] {\r\n        var invalidControls: string[] = [];\r\n        let recursiveFunc = (form: FormGroup | FormArray,nestedFormGroup=null) => {\r\n            Object.keys(form.controls).forEach(field => {\r\n                const control = form.get(field);\r\n                if (control.invalid && control.errors) {\r\n                    if (!nestedFormGroup)\r\n                        invalidControls.push(field); \r\n                    else\r\n                        invalidControls.push(nestedFormGroup + ' ' +field);\r\n                }\r\n                if (control instanceof FormGroup) {\r\n                    recursiveFunc(control,field);\r\n                } else if (control instanceof FormArray) {\r\n                    recursiveFunc(control,null);\r\n                }\r\n            });\r\n        }\r\n        recursiveFunc(formToInvestigate);\r\n        return invalidControls;\r\n\t}\r\n    public static findErrors(formToInvestigate: FormGroup | FormArray): string[] {\r\n        var invalidControls: string[] = [];\r\n        let recursiveFunc = (form: FormGroup | FormArray, nestedFormGroup = null) => {\r\n            Object.keys(form.controls).forEach(field => {\r\n                const control = form.get(field);\r\n                if (control.invalid && control.errors) {\r\n                    if (!nestedFormGroup)\r\n                        invalidControls.push(field);\r\n                    else\r\n                        invalidControls.push(field);\r\n                }\r\n                if (control instanceof FormGroup) {\r\n                    recursiveFunc(control, field);\r\n                } else if (control instanceof FormArray) {\r\n                    recursiveFunc(control, null);\r\n                }\r\n            });\r\n        }\r\n        recursiveFunc(formToInvestigate);\r\n        return invalidControls;\r\n    }\r\n\tpublic static cloneForm<T extends AbstractControl>(control: T): T {\r\n\t\tlet cloneControl: T;\r\n\t\tif (control instanceof FormGroup) {\r\n\t\t\tconst formGroup = new FormGroup({}, control.validator, control.asyncValidator);\r\n\t\t\tconst controls = control.controls;\r\n\t\t\tObject.keys(controls).forEach(key => {\r\n\t\t\t\tformGroup.addControl(key, this.cloneForm(controls[key]));\r\n\t\t\t})\r\n\t\t\tcloneControl = formGroup as any;\r\n\t\t}\r\n\t\telse if (control instanceof FormArray) {\r\n\t\t\tconst formArray = new FormArray([], control.validator, control.asyncValidator);\r\n\t\t\tcontrol.controls.forEach(formControl => formArray.push(this.cloneForm(formControl)))\r\n\t\t\tcloneControl = formArray as any;\r\n\t\t}\r\n\t\telse if (control instanceof FormControl) {\r\n\t\t\tcloneControl = new FormControl(control.value, control.validator, control.asyncValidator) as any;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Error: invalid control');\r\n\t\t}\r\n\t\tif (control.disabled) cloneControl.disable({ emitEvent: false });\r\n\t\treturn cloneControl;\r\n\t}\r\n}","import { Component, OnInit, OnDestroy, AfterViewInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, ChangeDetectorRef, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\r\nimport { tap, debounceTime, distinctUntilChanged, switchMap, catchError, first } from 'rxjs/operators';\r\nimport { of, iif, Subscription, Subject } from 'rxjs';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TripModel, DeliveryRequestViewModel, DropAddressModel, OrderPickupDetailModel, OrderPickupLocationModel, OrderFuelDetails, OptionalPickupDetailModel, JobDetailsWithOrders, CancelDeliverySchedule, CancelDSDeliveryScheduleInfo, CancelDSDeliverySchedule, CancelDSDeliveryScheduleViewModel, SubDRStatus, SpiltDRsModel, CompatibleProductModel, BlendedRequest, ResetDeliveryGroupScheduleModel } from '../models/DispatchSchedulerModels';\r\nimport { DropdownItem, StatelistService, StateDropdownExtendedItem, AdditiveOrderViewModel } from 'src/app/statelist.service';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport { DataService } from '../service/data.service';\r\nimport { CustomAbstractControls } from '../customAbstractControl';\r\nimport { UtilService } from '../service/util.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DeliveryGroupStatus, DeliveryReqStatus, TripStatus } from 'src/app/app.enum';\r\nimport { RegExConstants, SBConstants } from 'src/app/app.constants';\r\nimport { groupBy } from 'src/app/my.functions';\r\n\r\n@Component({\r\n    selector: 'app-delivery-group',\r\n    templateUrl: './delivery-group.component.html',\r\n    styleUrls: ['./delivery-group.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DeliveryGroupComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n    @ViewChild('idCommonPickUpBtn') idCommonPickUpBtn: ElementRef;\r\n    //@ViewChild('terminal_AutoComplete') terminal_AutoComplete;\r\n\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    keyword = 'Name';\r\n    public initialValue = '';\r\n    public _loadingAddress: boolean = false;\r\n    public _loadingTerminals: boolean = false;\r\n    public _currentTrip: FormGroup;\r\n    private _shiftIndex: number;\r\n    private _rowIndex: number;\r\n    private _tripIndex: number;\r\n    private Schedule: any;\r\n\r\n    public selectedViewNote: any;\r\n\r\n    public StateList: StateDropdownExtendedItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryGroupList: DropdownItem[] = [];\r\n    public Terminals = [];\r\n    public minCharRequired = false;\r\n    public searchError = false;\r\n    public noTerminalFound = false;\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    public OrderList: any = {};\r\n    public TbdOrderList: any = {};\r\n    public fuelTypeOrderList: any = {};\r\n    public TbdCustomerList: any = {};\r\n    public TbdLocationList: any = {};\r\n    public ChangePickupForOrders: number[] = [];\r\n    public SearchTerminalFuelType: string;\r\n    public SearchTerminalKey: string;\r\n    public LocationType: number = 1;\r\n\r\n    public DelGroupForm: FormGroup;\r\n    public PickupForm: FormGroup;\r\n    public SelectedDRForEditPickup: FormGroup;\r\n    public addSubDrModel: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\r\n\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10];\r\n    //public OnTheWayScheduleStatuses: number[] = [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20];\r\n    private selectedDeliveryRequest: DeliveryRequestViewModel;\r\n    private DeletedDrIndex: number;\r\n\r\n    public MaxStartDate: Date = new Date();\r\n    public validStartDate: Boolean = true;\r\n    private StartTimeSubscription: Subscription;\r\n    private StartDateSubscription: Subscription;\r\n    private PickupLocationSubscription: Subscription;\r\n    private DeleteDRRequestSubject: Subscription;\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public HideDeliveryGroupSubject: Subscription;\r\n    public UnchangedTrip: FormGroup;\r\n    public MaxCalendarDate: Date = new Date();\r\n    public MinCalendarDate: Date = new Date();\r\n    public isReadOnly: boolean = false;\r\n    @Input() private SelectedDate: Date = new Date();\r\n    @Input() private SelectedRegionId: string;\r\n    @Input() isSupplierCompany: boolean = false;\r\n    @Input() private ScheduleBuilderId: string;\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public RouteResetGroupSubject: Subscription;\r\n    public RouteListForTrip: any[] = [];\r\n    public isOptionalPickup: boolean = false;\r\n    public ScheduleOptionalPickupDetailModel: OptionalPickupDetailModel[] = [];\r\n    public ScheduleOrderFuelInfo: OrderFuelDetails[] = [];\r\n    public multiDropdownSettings = {};\r\n    public CustomerSettings = {};\r\n    public SiteddlSettings = {};\r\n\r\n    @Output() onRaiseSubDR: EventEmitter<any> = new EventEmitter<any>();\r\n    public AddDropLocationLoader: boolean = false;\r\n    public currentJobDetails: JobDetailsWithOrders;\r\n    public drOrders: JobDetailsWithOrders[];\r\n    public SubDrsStatusWithParentIds: SubDRStatus[] = [];\r\n    public EnrouteInCompleted: number[] = [3, 15, 23];\r\n    public EnrouteInProgress: number[] = [1, 3, 11, 12, 13, 14, 15, 16, 17, 18];\r\n    public SubDrOtherThanCancellStatus: number[] = [3, 23, 17, 11, 20, 15, 14, 1, 16, 6, 12]\r\n    public CancelDSViewModel: DeliveryRequestViewModel;\r\n    public DeliveryReqCancelScheduleUpdateModel: CancelDeliverySchedule[] = [];\r\n    public cancelDSDeliveryScheduleViewModel: CancelDSDeliveryScheduleViewModel[] = [];\r\n    constructor(private fb: FormBuilder, private sbService: ScheduleBuilderService, private carrierService: CarrierService,\r\n        private addresService: AddressService, private stateService: StatelistService,\r\n        private dataService: DataService, private changeDetectorRef: ChangeDetectorRef, private utilService: UtilService) {\r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 1);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.DelGroupForm = this.utilService.getTripFormGroup(new TripModel());\r\n        this.PickupForm = this.initPickupForm(new OrderPickupDetailModel());\r\n        this.additiveOrders = [];\r\n        this.PickupLocationTypeChange();\r\n        this.zipcodeConditionallyValidator();\r\n        this.multiSelectSettings();\r\n        this.subscribeGetOrderSubject()\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n    }\r\n\r\n    multiSelectSettings() {\r\n        this.multiDropdownSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            allowSearchFilter: true,\r\n            itemsShowLimit: 1\r\n        };\r\n        this.CustomerSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.SiteddlSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n\r\n        };\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.subscribeEditGroupSubject();\r\n        this.subscribeShowDeliveryGroupSubject();\r\n        this.subscribeShowOpenedDeliveryGroupSubject();\r\n        this.subscribeCommonPickupLocationChange();\r\n        this.subscribeHideDeliveryGroupSubject();\r\n        this.subscribeRouteResetGroupSubject();\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges): void {\r\n        if (change.SelectedDate && change.SelectedDate.currentValue) {\r\n            if (this.MaxCalendarDate < this.SelectedDate) {\r\n                this.MaxCalendarDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\r\n                this.MinCalendarDate = moment(new Date(this.SelectedDate)).toDate();\r\n            } else {\r\n                this.MinCalendarDate = moment(new Date(this.SelectedDate)).toDate();\r\n                this.MaxCalendarDate = moment(new Date(this.SelectedDate)).add(1, 'day').toDate();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeAllSubscriptions();\r\n    }\r\n\r\n    private unsubscribeAllSubscriptions(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n        if (this.HideDeliveryGroupSubject) {\r\n            this.HideDeliveryGroupSubject.unsubscribe();\r\n        }\r\n        if (this.RouteResetGroupSubject) {\r\n            this.RouteResetGroupSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private subscribeEditGroupSubject(): void {\r\n        let subs = this.dataService.EditDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                if (x.routeName != null) {\r\n                    this.RouteListForTrip = x.routeName;\r\n                }\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.isOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.editGroup(x.trip, x.shiftIndex, x.rowIndex, x.tripIndex, x.schedule, x.isPublishLoadInvalid, x.isOptionalPickup);\r\n            }\r\n        });\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private subscribeShowDeliveryGroupSubject(): void {\r\n        let subs = this.dataService.ShowDeliveryGroupSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                x ? this.showDeliveryGroup() : this.hideDeliveryGroup();\r\n            }\r\n        });\r\n        this.subscribeDeleteDRRequestSubject();\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private subscribeShowOpenedDeliveryGroupSubject(): void {\r\n        let subs = this.dataService.ShowOpenedDeliveryGroupSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                x ? this.showOpenedDeliveryGroup() : this.hideDeliveryGroup();\r\n            }\r\n        });\r\n        this.subscribeDeleteDRRequestSubject();\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    private PickupLocationTypeChange(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators(this.PickupForm, data);\r\n            let commonPickup = this.DelGroupForm.controls['IsCommonPickup'].value;\r\n            commonPickup ? this.disableDeliveryGroupPickups() : this.enableDeliveryGroupPickups();\r\n        }));\r\n    }\r\n    public subscribeHideDeliveryGroupSubject(): void {\r\n        this.HideDeliveryGroupSubject = this.dataService.HideDeliveryGroupSubject.subscribe(x => {\r\n            if (x && x == true) {\r\n                this.hideDeliveryGroup();\r\n            }\r\n        });\r\n    }\r\n    initPickupForm(order: OrderPickupDetailModel): FormGroup {\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        var _pForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup)\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n\r\n    setPickupLocation(form: FormGroup, order: OrderPickupLocationModel): void {\r\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                form.controls['Terminal'].patchValue(order.Terminal);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n    setPickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (form.get('IsAdditive') && form.get('IsAdditive').value) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        }\r\n        else if (pickupType != 2) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators([Validators.required]);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators([Validators.required]);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        } else {\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Address').setValidators([Validators.required]);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators([Validators.required]);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators([Validators.required]);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators([Validators.required]);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators([Validators.required]);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators([Validators.required]);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators([Validators.required]);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n\r\n    removePickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').clearValidators();\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').clearValidators();\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        } else {\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Address').clearValidators();\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').clearValidators();\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').clearValidators();\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').clearValidators();\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').clearValidators();\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').clearValidators();\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').clearValidators();\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').clearValidators();\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').clearValidators();\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    getOrderList(delReq: FormGroup, isCommonPickup: boolean, startDate: string): void {\r\n        let _jobId = delReq.controls['JobId'].value;\r\n        let _productTypeId = delReq.controls['ProductTypeId'].value;\r\n        let _orderId = delReq.controls['OrderId'];\r\n        let _carrierStatus = delReq.controls['CarrierStatus'].value;\r\n        let isBlendReq = delReq.controls['IsBlendedRequest'].value;\r\n        let isDrForTank = delReq.controls['TankId'].value && delReq.controls['StorageId'].value;\r\n        let existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)];\r\n        if (existing == undefined || existing == null || existing.length == 0) {\r\n            this.DGSubscription.add(this.sbService.getOrders(_jobId, _productTypeId, startDate, _carrierStatus, isBlendReq).subscribe(data => {\r\n                this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)] = data;\r\n                //location all orders\r\n                //this.OrderList[_jobId.toString()] = data;\r\n                if (data.length > 0) {\r\n                    let order = data[0];\r\n                    if (_orderId && _orderId.value > 0) {\r\n                        var orderFromData = data.filter(t => t.OrderId == _orderId.value);\r\n                        if (orderFromData != null && orderFromData.length > 0) {\r\n                            order = orderFromData[0];\r\n                        }\r\n                    }\r\n                    if (_orderId.value == null || _orderId.value == 0 || (_orderId.value > 0 && _orderId.value != order.OrderId && isDrForTank)) {\r\n                        delReq.controls['OrderId'].setValue(order.OrderId);\r\n                        this.onDeliveryRequestChange(delReq);\r\n                    }\r\n                    if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\r\n                        //un-used code\r\n                        //if (order.OrderId > 0) {\r\n                        //    let location = OrderPickupLocationModel.ToLocation(order);\r\n                        //    //this.setPickupLocation(delReq, location);\r\n                        //}\r\n\r\n                        this.onDeliveryRequestChange(delReq);\r\n                    }\r\n                    this.setTruckLoadType(delReq, order);\r\n                }\r\n                else {\r\n                    //No Order Found then set order id 0.\r\n                    delReq.controls['OrderId'].setValue(0);\r\n                }\r\n                //this.setDRPickupValidators(delReq, delReq.value.PickupLocationType);\r\n            }));\r\n        }\r\n        else {\r\n            if (_orderId.value == undefined || _orderId.value == null || _orderId.value == '') {\r\n                _orderId.setValue(existing[0].OrderId);\r\n                let location = OrderPickupLocationModel.ToLocation(existing[0]);\r\n                this.setPickupLocation(delReq, location);\r\n                this.onDeliveryRequestChange(delReq);\r\n                this.setTruckLoadType(delReq, existing[0]);\r\n            }\r\n            else if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\r\n                let order = existing[0];\r\n                if (_orderId.value != undefined && _orderId.value != null && _orderId.value > 0) {\r\n                    var orderFromData = existing.filter(t => t.OrderId == _orderId.value);\r\n                    if (orderFromData != null && orderFromData.length > 0) {\r\n                        order = orderFromData[0];\r\n                    }\r\n                }\r\n                let location = OrderPickupLocationModel.ToLocation(order);\r\n                this.setPickupLocation(delReq, location);\r\n                this.onDeliveryRequestChange(delReq);\r\n                this.setTruckLoadType(delReq, order);\r\n            }\r\n            this.setDRPickupValidators(delReq, delReq.value.PickupLocationType);\r\n        }\r\n    }\r\n\r\n    editGroup(trip: FormGroup, shiftIndex: number, rowIndex: number, tripIndex: number, schedule: any, isPublishLoadInvalid = false, isOptionalPickup = false) {\r\n        this.SubDrsStatusWithParentIds = [];\r\n        this.PickupForm.reset();\r\n        this.DelGroupForm = trip;\r\n        this.fuelTypeOrderList = [];\r\n        this.UnchangedTrip = CustomAbstractControls.cloneForm(trip);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.DelGroupForm.markAllAsTouched();\r\n        this.PickupForm.markAllAsTouched();\r\n        this._shiftIndex = shiftIndex;\r\n        this._rowIndex = rowIndex;\r\n        this._tripIndex = tripIndex;\r\n        this.Schedule = schedule;\r\n        this.isOptionalPickup = isOptionalPickup;\r\n        var isCommonPickup: boolean = trip.controls['IsCommonPickup'].value;\r\n        var delReqs = trip.controls['DeliveryRequests'] as FormArray;\r\n        let groupDRParentIds: SubDRStatus[] = [];\r\n        delReqs.controls.forEach((x: FormGroup) => {\r\n            if (x.controls[\"GroupParentDRId\"].value == null) {\r\n                x.controls[\"GroupParentDRId\"].setValue('');\r\n            }\r\n            if (x.controls['JobId'].value > 0 && x.controls['IsTBD'].value == false)\r\n                this.getOrderList(x, isCommonPickup, trip.controls['StartDate'].value);\r\n            else\r\n                this.getDropLocationDetails(x);\r\n\r\n            if (x.controls['GroupParentDRId'].value != null && x.controls['GroupParentDRId'].value != \"\")\r\n                groupDRParentIds.push(x.controls['GroupParentDRId'].value);\r\n        });\r\n\r\n        if (groupDRParentIds.length > 0) {\r\n            groupDRParentIds = groupDRParentIds.filter((n, i) => groupDRParentIds.indexOf(n) === i);\r\n            this.sbService.getSubDRStatus(groupDRParentIds).subscribe((data: SubDRStatus[]) => {\r\n                if (data && data.length > 0)\r\n                    this.SubDrsStatusWithParentIds = data;\r\n            });\r\n        }\r\n        this.validateOptionalPickup();\r\n        for (var i = 0; i < delReqs.length; i++) {\r\n            if (delReqs.controls[i].get('IsCommonBadge').value == true) {\r\n                trip.controls['IsCommonBadge'].setValue(true);\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i < delReqs.length; i++) {\r\n            if (delReqs.controls[i].get('PreLoadInfo') != null && delReqs.controls[i].get('PreLoadInfo').value != null) {\r\n                trip.controls['IsPreLoadInfo'].setValue(true);\r\n                break;\r\n            }\r\n        }\r\n        if (trip.controls['IsCommonPickup'].value == true) {\r\n            this.disableDeliveryGroupPickups();\r\n        }\r\n        else {\r\n            this.enableDeliveryGroupPickups();\r\n        }\r\n\r\n        //get additive product orders if required\r\n        let drs = delReqs.value as DeliveryRequestViewModel[];\r\n        if (drs.some(dr => dr.IsBlendedRequest)) {\r\n            this.getAdditiveOrders();\r\n        }\r\n        this.deletedBlend_all = [];\r\n        //if (drs.some(dr => dr.IsBlendedRequest && !dr.StorageId)) {\r\n        //    this.getCompatibleProducts();\r\n        //}\r\n    }\r\n\r\n    private subscribeCommonPickupLocationChange(): void {\r\n        this.PickupLocationSubscription = this.DelGroupForm.controls['IsCommonPickup'].valueChanges\r\n            .subscribe(x => {\r\n                x ? this.disableDeliveryGroupPickups() : this.enableDeliveryGroupPickups();\r\n                this.setCommonPickupFlag();\r\n            });\r\n        this.DGSubscription.add(this.PickupLocationSubscription);\r\n    }\r\n\r\n    public validateTerminal(terminal: any, event: any): void {\r\n        if (!terminal.get('Id').value) {\r\n            terminal.get('Name').patchValue('');\r\n        }\r\n    }\r\n\r\n    private disableDeliveryGroupPickups(): void {\r\n        let _drArray = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].disable();\r\n                x.controls['BulkPlant'].disable();\r\n            });\r\n        }\r\n        if (this.DelGroupForm.controls['PickupLocationType'].value == 2) {\r\n            this.DelGroupForm.controls['BulkPlant'].enable();\r\n            this.DelGroupForm.controls['Terminal'].disable();\r\n        } else {\r\n            this.DelGroupForm.controls['BulkPlant'].disable();\r\n            this.DelGroupForm.controls['Terminal'].enable();\r\n        }\r\n    }\r\n\r\n    private enableDeliveryGroupPickups(): void {\r\n        let _drArray = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                if (!x.get('IsAdditive').value) {\r\n                    x.controls['Terminal'].enable();\r\n                    x.controls['BulkPlant'].enable();\r\n                }\r\n            });\r\n        }\r\n        this.DelGroupForm.controls['BulkPlant'].disable();\r\n        this.DelGroupForm.controls['Terminal'].disable();\r\n    }\r\n\r\n    public setSelectedDate(date: string): void {\r\n        let _date = this.DelGroupForm.controls['StartDate'];\r\n        if (_date.value != date) {\r\n            _date.patchValue(date);\r\n        }\r\n    }\r\n\r\n    public setScheduleSelectedDate(ScheduleDate: string, dr: FormGroup): void {\r\n        if (ScheduleDate != dr.controls['SelectedDate'].value) {\r\n            dr.controls['SelectedDate'].setValue(ScheduleDate);\r\n            this.setSheduleSelectedDateForBlendGroup(dr);\r\n        }\r\n    }\r\n    public setScheduleStartTime(StartTime: string, dr: FormGroup): void {\r\n        if (StartTime != dr.controls['ScheduleStartTime'].value) {\r\n            dr.controls['ScheduleStartTime'].setValue(StartTime);\r\n            this.setScheduleStartTimeForBlendGroup(dr)\r\n        }\r\n    }\r\n    public setScheduleEndTime(EndTime: string, dr: FormGroup): void {\r\n        if (EndTime != dr.controls['ScheduleEndTime'].value) {\r\n            dr.controls['ScheduleEndTime'].setValue(EndTime);\r\n            this.setScheduleEndTimeForBlendGroup(dr)\r\n        }\r\n    }\r\n\r\n    public setBadgeForBlendGroup(tdr: FormGroup, badgeNum: number) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('BadgeNo' + badgeNum).setValue(tdr.get('BadgeNo' + badgeNum).value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public setCommonBadgeForBlendGroup(tdr: FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('IsCommonBadge').setValue(tdr.get('IsCommonBadge').value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    public setNoteForBlendGroup(tdr: FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            let blendGroupId = tdr.get('BlendedGroupId').value;\r\n            drs.controls.forEach(t => {\r\n                if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                    t.get('Notes').setValue(tdr.get('Notes').value);\r\n                    this.onDeliveryRequestChange(t as FormGroup);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public setSheduleSelectedDateForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId){\r\n                        t.get('SelectedDate').setValue(tdr.get('SelectedDate').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }        \r\n    }\r\n\r\n    public setDeliveryLevelPOForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('DeliveryLevelPO').setValue(tdr.get('DeliveryLevelPO').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n\r\n    public setScheduleStartTimeForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('ScheduleStartTime').setValue(tdr.get('ScheduleStartTime').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n    public setScheduleEndTimeForBlendGroup(tdr:FormGroup) {\r\n        if (tdr.get('IsBlendedRequest').value) {\r\n            let drs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n                let blendGroupId = tdr.get('BlendedGroupId').value;\r\n                drs.controls.forEach(t => {\r\n                    if (t.get('BlendedGroupId').value == blendGroupId) {\r\n                        t.get('ScheduleEndTime').setValue(tdr.get('ScheduleEndTime').value);\r\n                        this.onDeliveryRequestChange(t as FormGroup);\r\n                    }\r\n                })\r\n        }    \r\n    }\r\n\r\n    showOpenedDeliveryGroup(): void {\r\n        Declarations.showOpenDG();\r\n    }\r\n\r\n    showDeliveryGroup(): void {\r\n        Declarations.showDG();\r\n    }\r\n\r\n    viewNotes(tdr): void {\r\n        if (this.selectedViewNote != tdr.value.Id) {\r\n            this.selectedViewNote = tdr.value.Id;\r\n        } else {\r\n            this.selectedViewNote = undefined;\r\n        }\r\n    }\r\n\r\n\r\n    hideDeliveryGroup(): void {\r\n        Declarations.closeDG();\r\n        this.OrderList = {};\r\n        if (this.StartDateSubscription) {\r\n            this.StartDateSubscription.unsubscribe();\r\n        }\r\n        if (this.StartTimeSubscription) {\r\n            this.StartTimeSubscription.unsubscribe();\r\n        }\r\n        if (this.PickupLocationSubscription) {\r\n            this.PickupLocationSubscription.unsubscribe();\r\n        }\r\n        if (this.DeleteDRRequestSubject) {\r\n            this.DeleteDRRequestSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private setDeletePostloadedDrsSubject(drs: DeliveryRequestViewModel[]): void {\r\n        let preloadedDrInfo = drs.filter(x => x.PreLoadInfo);\r\n        let postloadedDrInfo = drs.filter(x => x.PostLoadInfo);\r\n        let prepostloadedInfo = preloadedDrInfo.concat(postloadedDrInfo);\r\n        if (prepostloadedInfo.length > 0) {\r\n            this.dataService.setDeletePostloadSubject(prepostloadedInfo);\r\n        }\r\n    }\r\n\r\n    deleteDeliveryGroup(isReset: boolean) {\r\n        this.hideDeliveryGroup();\r\n        this.setDeletePostloadedDrsSubject(this.DelGroupForm.controls['DeliveryRequests'].value);\r\n        this.dataService.setDeleteDeliveryGroupSubject(this.DelGroupForm);\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: this._shiftIndex, ScheduleIndex: this._rowIndex, Reset: true });\r\n    }\r\n\r\n    deleteSchedule(tripDetails: any): void {\r\n        var _delReqs = tripDetails.trip.get('DeliveryRequests') as FormArray;\r\n        this._currentTrip = tripDetails.trip;\r\n        this.DeletedDrIndex = tripDetails.index;\r\n\r\n        this.selectedDeliveryRequest = _delReqs.controls[this.DeletedDrIndex].value;\r\n        this.selectedDeliveryRequest.WindowMode = 1;\r\n        this.selectedDeliveryRequest.QueueMode = 1;\r\n\r\n\r\n        if (this.selectedDeliveryRequest.TrackableScheduleId != null && this.selectedDeliveryRequest.TrackableScheduleId > 0) {\r\n            var scheduleIds: number[] = [];\r\n            scheduleIds.push(this.selectedDeliveryRequest.TrackableScheduleId);\r\n\r\n            //FOR BLENDED REQUESTS - DELETE BLEND GROUP\r\n            if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n                scheduleIds = [];\r\n                let tripDrs = this.filterAndGetDrsByBlendGroupId(<DeliveryRequestViewModel[]>_delReqs.value, this.selectedDeliveryRequest.BlendedGroupId);\r\n                tripDrs.forEach(dr => {\r\n                    if (dr.TrackableScheduleId != null && dr.TrackableScheduleId > 0) {\r\n                        scheduleIds.push(dr.TrackableScheduleId);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var data = response[0];\r\n                    if (this.CompletedScheduleStatuses.indexOf(data.ScheduleStatusId) !== -1 || data.ScheduleEnrouteStatusId == 4) {\r\n                        this.selectedDeliveryRequest = null;\r\n                        this.DeletedDrIndex = null;\r\n                        Declarations.msgerror(\"Can't delete as drop has been made already\", 'Warning', 2500);\r\n                        return;\r\n                    }\r\n                    else if (SBConstants.OnTheWayScheduleStatuses.indexOf(data.ScheduleEnrouteStatusId) !== -1) {\r\n                        this.sbService.setConfirmationHeadingForDR(data.ScheduleEnrouteStatusId);\r\n                        document.getElementById('btnconfirm-delete-dr').click();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.deleteDeliveryRequestFromLoad();\r\n                    }\r\n                }\r\n                else {\r\n                    this.deleteDeliveryRequestFromLoad();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.deleteDeliveryRequestFromLoad();\r\n        }\r\n    }\r\n\r\n    public checkScheduleEditStatus(tdr: FormGroup) {\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        if (dr.Status != 3) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (SBConstants.OnTheWayScheduleStatuses.indexOf(dr.TrackScheduleEnrouteStatus) !== -1 && dr.IsTBD == false) {\r\n                return false;\r\n            }\r\n            if (this.CompletedScheduleStatuses.indexOf(dr.TrackScheduleStatus) !== -1 || dr.TrackScheduleEnrouteStatus == 4) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public deleteDeliveryRequestFromLoad() {\r\n        Declarations.hideModal('#confirm-delete-dr');\r\n        let deletedRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        //FOR BLENDED REQUESTS\r\n        if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n            deletedRequests = this.filterAndGetDrsByBlendGroupId(this._currentTrip.get('DeliveryRequests').value, this.selectedDeliveryRequest.BlendedGroupId);\r\n            deletedRequests.forEach(dr => { dr.Compartments = []; })\r\n        }\r\n        else {\r\n            this.selectedDeliveryRequest.Compartments = [];\r\n            deletedRequests.push(this.selectedDeliveryRequest);\r\n        }\r\n\r\n        this.setDeletePostloadedDrsSubject(deletedRequests);\r\n        this.dataService.setRestoreDeletedRequestSubject(deletedRequests);\r\n        let _delReqs = this._currentTrip.get('DeliveryRequests') as FormArray;\r\n\r\n        //FOR BLENDED REQUESTS\r\n        if (this.selectedDeliveryRequest.IsBlendedRequest) {\r\n            let length = _delReqs.length;\r\n            while (length > 0) {\r\n                let index = _delReqs.value.findIndex(r => r.BlendedGroupId && r.BlendedGroupId == this.selectedDeliveryRequest.BlendedGroupId);\r\n                if (index != -1) {\r\n                    _delReqs.removeAt(index);\r\n                }\r\n                length--;\r\n            }\r\n        }\r\n        else {\r\n            _delReqs.removeAt(this.DeletedDrIndex);\r\n        }\r\n        //if (deletedRequests.length > 0) {\r\n        //    var resetDeliveryModel = new ResetDeliveryGroupScheduleModel();\r\n        //    resetDeliveryModel.DeliveryRequestIds = [];\r\n        //    deletedRequests.forEach(x => {\r\n        //        resetDeliveryModel.DeliveryRequestIds.push(x.Id);\r\n        //    });\r\n        //    this.dataService.setDeliveryScheduleRemoveSubject(resetDeliveryModel);\r\n        //}\r\n        this.selectedDeliveryRequest = null;\r\n        this.DeletedDrIndex = null;\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n    }\r\n\r\n    public deleteDeliveryRequestFromLoadNo() {\r\n        Declarations.hideModal('#confirm-delete-dr');\r\n        this.selectedDeliveryRequest = null;\r\n        this.DeletedDrIndex = null;\r\n    }\r\n\r\n    getAddressByZip(event: any): void {\r\n        var zipCode = event.target.value;\r\n        var regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        var regexCan = new RegExp(RegExConstants.CanZip);\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        if (data.CountryCode != 'CAR') {\r\n                            data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        }\r\n                        var addressModel = this.addressMapper(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n        var state = this.StateList.find(x => x.Code == data.StateCode);\r\n        var country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        var _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n\r\n    onBulkPlantSelected(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n\r\n    onBulkPlantSearched(event: any): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n\r\n    onBulkPlantBlur(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            var bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n\r\n    onTerminalSearched(event: any): void {\r\n        var keyword = event.target.value.toLowerCase();\r\n        this.SearchTerminalKey = keyword;\r\n        let searchKeyword$ = of(keyword);\r\n        this.DGSubscription.add(searchKeyword$.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3 && data.length != 0) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3 && term.length != 0),\r\n                of([])\r\n                , this.sbService.getPickupTerminals(this.ChangePickupForOrders, keyword).pipe(\r\n                    tap(() => {\r\n                        this._loadingTerminals = false;\r\n                    }),\r\n                    catchError(() => {\r\n                        this._loadingTerminals = false;\r\n                        this.searchError = true;\r\n                        return of([]);\r\n                    })\r\n                ))),\r\n            tap(() => this._loadingTerminals = false)\r\n        ).subscribe((data) => {\r\n            this._loadingTerminals = false;\r\n            if (data.length === 0) {\r\n                this.noTerminalFound = true;\r\n            } else {\r\n                this.noTerminalFound = false;\r\n            }\r\n            this.Terminals = data;\r\n        }, (err) => {\r\n            console.log(err);\r\n        }));\r\n    }\r\n    onTerminalSelected(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n\r\n    changeTerminal(delReq: FormGroup, event: any): void {\r\n        if (delReq.controls['IsTBD'].value == true) {\r\n            return;\r\n        }\r\n        var _jobId = delReq.controls['JobId'].value;\r\n        var _productTypeId = delReq.controls['ProductTypeId'].value;\r\n        var _orderId = event.target.selectedOptions[0].value;\r\n        let isBlend = delReq.controls['IsBlendedRequest'].value;\r\n        var orders = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)] as OrderPickupDetailModel[];\r\n        if (orders.length > 0) {\r\n            var selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (selectedOrder) {\r\n                if (delReq.value.IsCommonBadge == false || (selectedOrder.Badge1 && selectedOrder.Badge1.length > 0) || (selectedOrder.Badge2 && selectedOrder.Badge2.length > 0) || (selectedOrder.Badge3 && selectedOrder.Badge3.length > 0)) {\r\n                    delReq.get('BadgeNo1').patchValue(selectedOrder.Badge1);\r\n                    delReq.get('BadgeNo2').patchValue(selectedOrder.Badge2);\r\n                    delReq.get('BadgeNo3').patchValue(selectedOrder.Badge3);\r\n                    delReq.get('IsCommonBadge').patchValue(false);\r\n                }\r\n                let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n                this.setPickupLocation(delReq, location);\r\n                this.setPickupValidators(delReq, location.PickupLocationType);\r\n                this.setTruckLoadType(delReq, selectedOrder);\r\n            }\r\n        }\r\n        this.onDeliveryRequestChange(delReq);\r\n    }\r\n\r\n    setStateCode(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    getBulkPlantAddress(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n\r\n    getDropLocationDetails(tdr: FormGroup): void {\r\n        let tfxProductId = tdr.controls['FuelTypeId'].value;\r\n        let productTypeId = tdr.controls['ProductTypeId'].value;\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        let terminalId = null, bulkplantId = null;\r\n        let pickupId = '';\r\n        if (dr.Terminal && dr.Terminal.Id > 0) {\r\n            terminalId = dr.Terminal.Id;\r\n            pickupId = 'T_' + terminalId.toString();\r\n        }\r\n        if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\r\n            bulkplantId = dr.BulkPlant.SiteId;\r\n            pickupId = 'B_' + bulkplantId.toString();\r\n        }\r\n        if (this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()] == undefined) {\r\n            if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n                this.sbService.getJobDetailsWithOrders(this.SelectedRegionId, tfxProductId, productTypeId, terminalId, bulkplantId, this.DelGroupForm.controls['StartDate'].value).subscribe(response => {\r\n                    if (response) {\r\n                        this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()] = response || [] as JobDetailsWithOrders[];\r\n                        let companyList = response.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\r\n                        this.TbdCustomerList[dr.Id] = this.GetUniqueCustomers(companyList.reduce((p, n) => p.concat(n), []));\r\n                        let siteList = response.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n                        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n                        if (dr.JobId > 0) {\r\n                            this.TbdOrderList[dr.Id] = response.map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));\r\n                        }\r\n                    }\r\n                    //else {\r\n                    //    Declarations.msgerror('No order exists for this fuel type', 'error', 2500)\r\n                    //}\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            let orders = this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()];\r\n            let companyList = orders.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\r\n            this.TbdCustomerList[dr.Id] = this.GetUniqueCustomers(companyList.reduce((p, n) => p.concat(n), []));\r\n            let siteList = orders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n            this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n        }\r\n    }\r\n\r\n    public onSiteSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value as DeliveryRequestViewModel;\r\n        tdr.get('JobId').setValue(item.Id);\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        if (orders && orders.length > 0) {\r\n            let drOrders = orders.filter(t => t.JobId == item.Id).map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));\r\n            this.TbdOrderList[dr.Id] = drOrders;\r\n            if (drOrders && drOrders.length > 0) {\r\n                tdr.get('OrderId').setValue(drOrders[0].Id);\r\n                this.updateDrForm(tdr, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSiteDeSelect_TBD(item: DropdownItem): void {\r\n\r\n    }\r\n\r\n    public updateDrForm(delReq: FormGroup, event: any): void {\r\n        let dr = delReq.value;\r\n        var _orderId = 0;\r\n        if (event)\r\n            _orderId = event.target.selectedOptions[0].value;\r\n        else\r\n            _orderId = delReq.get('OrderId').value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        let order = orders.find(t => t.OrderId == _orderId);\r\n        if (order) {\r\n            delReq.get('JobId').setValue(order.JobId);\r\n            delReq.get('OrderId').setValue(order.OrderId);\r\n            delReq.get('JobName').setValue(order.JobName);\r\n            delReq.get('JobAddress').setValue(order.Address);\r\n            delReq.get('JobCity').setValue(order.City)\r\n            delReq.get('UoM').setValue(order.UoM);\r\n            delReq.get('CustomerCompany').setValue(order.CompanyName);\r\n            delReq.get('ScheduleStartTime').setValue(order.ScheduleEndTime);\r\n            delReq.get('ScheduleEndTime').setValue(order.ScheduleEndTime);\r\n            if ((dr.BadgeNo1 == null || dr.BadgeNo1 == '') && (dr.BadgeNo2 == null || dr.BadgeNo2 == '') && (dr.BadgeNo3 == null || dr.BadgeNo3 == '')) {\r\n                let trip = this.DelGroupForm.value;\r\n                if ((trip.BadgeNo1 == null || trip.BadgeNo1 == '') && (trip.BadgeNo2 == null || trip.BadgeNo2 == '') && (trip.BadgeNo3 == null || trip.BadgeNo3 == '')) {\r\n                    delReq.get('BadgeNo1').setValue(order.BadgeNo1);\r\n                    delReq.get('BadgeNo2').setValue(order.BadgeNo2);\r\n                    delReq.get('BadgeNo3').setValue(order.BadgeNo3);\r\n                    delReq.get('IsCommonBadge').setValue(false);\r\n                }\r\n            }\r\n            this.onDeliveryRequestChange(delReq);\r\n        }\r\n    }\r\n\r\n    public onCustomerSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        tdr.get('TBDLocations').setValue([]);\r\n        let siteList = orders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n\r\n    private getOrdersOfDeliveryReq(dr: DeliveryRequestViewModel) {\r\n\r\n        let pickupId = '';\r\n        let orders: any = {};\r\n        if (dr.Terminal && dr.Terminal.Id > 0) {\r\n            pickupId = 'T_' + dr.Terminal.Id.toString();\r\n        }\r\n        if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\r\n            pickupId = 'B_' + dr.BulkPlant.SiteId.toString();\r\n        }\r\n        if (dr.FuelTypeId) {\r\n            orders = this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.FuelTypeId.toString()];\r\n        }\r\n        else {\r\n            orders= this.fuelTypeOrderList[dr.PickupLocationType.toString() + '_' + pickupId + '_' + dr.ProductTypeId.toString()];\r\n        }\r\n        return orders || [];\r\n    }\r\n\r\n    public onCustomerDeSelect_TBD(item: any, tdr: FormGroup): void {\r\n        let dr = tdr.value;\r\n        let orders = this.getOrdersOfDeliveryReq(dr);\r\n        tdr.get('TBDLocations').setValue([]);\r\n        let siteList = orders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\r\n        this.TbdLocationList[dr.Id] = this.GetUniqueLocations(siteList.reduce((p, n) => p.concat(n), []));\r\n    }\r\n\r\n    GetUniqueLocations(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    GetUniqueCustomers(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.CompanyId) ? false : ids.push(item.CompanyId));\r\n        return uniqueItems.sort((a, b) => a.CompanyName.localeCompare(b.CompanyName));\r\n    }\r\n\r\n    clearDropLocationControls() {\r\n        this.drOrders = [];\r\n    }\r\n\r\n    RemovePickupLocation(tdr: FormGroup): void {\r\n        if (tdr != null || tdr != undefined) {\r\n            this.SelectedDRForEditPickup = tdr;\r\n            var _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n            this.PickupForm.reset();\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            var _terminal = terminal.value;\r\n            var _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n            this.removePickupValidators(this.SelectedDRForEditPickup, _pickupType);\r\n            this.onDeliveryRequestChange(this.SelectedDRForEditPickup);\r\n        }\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode && this.CountryList && this.CountryList.length > 0) {\r\n\r\n            countryCode = countryCode == \"US\" ? \"USA\" : countryCode;\r\n            let countryId = 0;\r\n            let county = this.CountryList.find(c => c.Code == countryCode)\r\n            if (county && county.Id)\r\n                countryId = county.Id;\r\n\r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.StateList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.StateList.filter(t => t.CountryId == countryId);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    editPickupLocation(tdr: FormGroup): void {\r\n        this.initialValue = '';\r\n        //this.clearAutoComplete();\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = tdr;\r\n        if (tdr == null || tdr == undefined) {\r\n            this.SelectedDRForEditPickup = this.DelGroupForm\r\n            var _delReqs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            _delReqs.controls.forEach((x: FormGroup) => {\r\n                var _orderId = x.controls['OrderId'].value as number;\r\n                if (_orderId > 0) {\r\n                    this.ChangePickupForOrders.push(_orderId);\r\n                }\r\n            });\r\n        } else {\r\n            var _orderId = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n            if (_orderId > 0) {\r\n                this.ChangePickupForOrders.push(_orderId);\r\n                var _jobId = tdr.get('JobId').value;\r\n                var _productTypeId = tdr.get('ProductTypeId').value;\r\n                let isBlend = tdr.get('IsBlendedRequest').value;\r\n                var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)];\r\n                var orders = existing.filter(t => t.OrderId == _orderId);\r\n                if (orders.length > 0) {\r\n                    var lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                    this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        var _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        var _terminal = this.SelectedDRForEditPickup.controls['Terminal'].value;\r\n        var _bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n        //to get bulk plant for auto/manual order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr) \r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;      \r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        //this.setPickupValidators(this.SelectedDRForEditPickup, _pickupType);\r\n        this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n        if (location.PickupLocationType != 2 && _terminal && _terminal.Name != null) {\r\n            this.initialValue = _terminal.Name;\r\n        }\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onCommonPickupChkChange() {\r\n        var isCommonPickup = this.DelGroupForm.controls['IsCommonPickup'].value;\r\n        if (!isCommonPickup) {\r\n            var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            deliveryRequests.controls.forEach((x: FormGroup) => {\r\n                var _jobId = x.controls['JobId'].value;\r\n                var _productTypeId = x.controls['ProductTypeId'].value;\r\n                var _orderId = x.controls['OrderId'].value;\r\n                let isBlend = x.controls['IsBlendedRequest'].value;\r\n                var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlend ? 1 : 0)];\r\n                var orders = existing.filter(t => t.OrderId == _orderId);\r\n                if (orders != null && orders.length > 0) {\r\n                    let location = OrderPickupLocationModel.ToLocation(orders[0]);\r\n                    this.setPickupLocation(x, location);\r\n                    this.onDeliveryRequestChange(x);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    updatePickupLocation() {\r\n        if (this.SelectedDRForEditPickup != null) {\r\n            var isTrip = false;\r\n            let existingLocationType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            let existingTerminal = this.SelectedDRForEditPickup.get('Terminal.Id').value;\r\n            let existingBulkplant = this.SelectedDRForEditPickup.get('BulkPlant.SiteName').value;\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedDRForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, pickupLoc);\r\n            this.setPickupValidators(this.SelectedDRForEditPickup, pickupLoc.PickupLocationType);\r\n            if (pickupLoc.PickupLocationType == 2) {\r\n                if (this.SelectedDRForEditPickup.get('BulkPlant').value) {\r\n                    let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                    if (bulkPlant.Country) {\r\n                        let countryCode = bulkPlant.Country.Code\r\n                        if (countryCode) {\r\n                            this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (existingLocationType != pickupLoc.PickupLocationType || (pickupLoc.PickupLocationType == 2 && pickupLoc.BulkPlant.SiteName != existingBulkplant) || (pickupLoc.PickupLocationType != 2 && pickupLoc.Terminal.Id != existingTerminal)) {\r\n                let _orderId = this.SelectedDRForEditPickup.value.OrderId;\r\n                let _pickupLocationType = pickupLoc.PickupLocationType;\r\n                let _pickupLocationId = (_pickupLocationType != 2) ? (pickupLoc.Terminal.Id) : (pickupLoc.BulkPlant.SiteId);\r\n                let orderIds = [];\r\n                var selectedFormValue = this.SelectedDRForEditPickup.value;\r\n                if (selectedFormValue.hasOwnProperty('TripId')) {\r\n                    isTrip = true;\r\n                    if (selectedFormValue.DeliveryRequests.length > 0) {\r\n                        orderIds = selectedFormValue.DeliveryRequests.map(function (a) { return a[\"OrderId\"]; });\r\n                    }\r\n                }\r\n                else {\r\n                    orderIds.push(_orderId);\r\n                }\r\n                //this.dipTestLoader = true;\r\n                this.DGSubscription.add(this.sbService.getOrderBadgesByTerminal(orderIds, _pickupLocationType, _pickupLocationId).subscribe((data: any) => {\r\n                    //this.dipTestLoader = false;\r\n                    if (data && data.length > 0) {\r\n                        if (!isTrip) {\r\n                            if (this.SelectedDRForEditPickup.value.IsCommonBadge == false || (data[0].BadgeNo1 && data[0].BadgeNo1.length > 0) || (data[0].BadgeNo2 && data[0].BadgeNo2.length > 0) || (data[0].BadgeNo3 && data[0].BadgeNo3.length > 0)) {\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo1'].setValue(data[0].BadgeNo1);\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo2'].setValue(data[0].BadgeNo2);\r\n                                this.SelectedDRForEditPickup.controls['BadgeNo3'].setValue(data[0].BadgeNo3);\r\n                                this.SelectedDRForEditPickup.controls['IsCommonBadge'].setValue(false);\r\n                            }\r\n                        }\r\n                        else {\r\n                            var _drArray = this.SelectedDRForEditPickup.controls['DeliveryRequests'] as FormArray;\r\n                            _drArray.controls.forEach((_drForm: FormGroup) => {\r\n                                if (_drForm.value.OrderId && _drForm.value.OrderId > 0) {\r\n                                    var badgeInfo = data.find(t => t.OrderId == _drForm.value.OrderId);\r\n                                    if (_drForm.value.IsCommonBadge == false || (badgeInfo.BadgeNo1 && badgeInfo.BadgeNo1.length > 0) || (badgeInfo.BadgeNo2 && badgeInfo.BadgeNo2.length > 0) || (badgeInfo.BadgeNo3 && badgeInfo.BadgeNo3.length > 0)) {\r\n                                        _drForm.controls['BadgeNo1'].setValue(badgeInfo.BadgeNo1);\r\n                                        _drForm.controls['BadgeNo2'].setValue(badgeInfo.BadgeNo2);\r\n                                        _drForm.controls['BadgeNo3'].setValue(badgeInfo.BadgeNo3);\r\n                                        _drForm.controls['IsCommonBadge'].setValue(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }));\r\n                this.onDeliveryRequestChange(this.SelectedDRForEditPickup);\r\n            }\r\n        }\r\n        var dismiss = document.getElementById('btnPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n    //clearAutoComplete(): void {\r\n    //    //e.stopPropagation();\r\n    //    this.terminal_AutoComplete.clear();\r\n    //}\r\n    setCommonPickupFlag() {\r\n        if (this.DelGroupForm.get('IsCommonPickup').value) {\r\n            this.PickupForm.reset();\r\n        } else {\r\n            this.DelGroupForm.controls['Terminal'].reset()\r\n            this.DelGroupForm.controls['BulkPlant'].reset();\r\n        }\r\n    }\r\n\r\n    setTripStatus(): void {\r\n        var tripPrevStatusId = this.DelGroupForm.controls['TripPrevStatus'].value as TripStatus;\r\n        var tripStatusId = TripStatus.Added;\r\n        if (tripPrevStatusId == TripStatus.None) {\r\n            tripStatusId = TripStatus.Added;\r\n        } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\r\n            tripStatusId = TripStatus.Modified;\r\n        }\r\n        this.DelGroupForm.controls['TripStatus'].setValue(tripStatusId);\r\n    }\r\n\r\n    setDeliveryGroupStatus(statusId: DeliveryGroupStatus): void {\r\n        this.DelGroupForm.controls['DeliveryGroupStatus'].setValue(statusId);\r\n    }\r\n\r\n    setDeliveryRequestStatus(statusId: DeliveryReqStatus): void {\r\n        if (this.DelGroupForm != null && this.DelGroupForm != undefined) {\r\n            var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                deliveryRequests.controls[i].get('Status').setValue(statusId);\r\n                if (deliveryRequests.controls[i].get('PreviousStatus').value != DeliveryReqStatus.ScheduleCreated && deliveryRequests.controls[i].get('ScheduleStatus').value == 0) {\r\n                    deliveryRequests.controls[i].get('ScheduleStatus').setValue(14);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processPostloadedDrsUpdatedValues(): void {\r\n        let updatedPostloadedDrs = this.DelGroupForm.controls['DeliveryRequests'].value;\r\n        if (updatedPostloadedDrs.length > 0) {\r\n            updatedPostloadedDrs = updatedPostloadedDrs.filter(x => x.PostLoadInfo);\r\n            if (updatedPostloadedDrs.length > 0) {\r\n                this.dataService.setUpdatePostloadSubject(updatedPostloadedDrs);\r\n            }\r\n        }\r\n    }\r\n\r\n    draftDeliveryGroup(): void {\r\n        var isValidLoad = this.validateDraftLoad();\r\n        if (isValidLoad) {\r\n            this.setBadgeAndNotesToBlendGroup();\r\n            this.processPostloadedDrsUpdatedValues();\r\n            this.dataService.setGroupChangeDetectSubject(true);\r\n            this.dataService.setDraftDeliveryGroupSubject({ trip: this.DelGroupForm, filterChanged: false });\r\n            this.hideDeliveryGroup();\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    publishDeliveryGroup(): void {\r\n        var isValidLoad = this.validatePublishLoad();\r\n        if (isValidLoad) {\r\n            if (this.DelGroupForm.valid && this.DelGroupForm.controls.DeliveryRequests.value.length > 0 && this.DelGroupForm.controls.DeliveryRequests.valid) {\r\n                this.setBadgeAndNotesToBlendGroup();\r\n                this.processPostloadedDrsUpdatedValues();\r\n                let data = { shiftIndex: this._shiftIndex, rowIndex: this._rowIndex, colIndex: this._tripIndex, schedule: this.Schedule, trip: this.DelGroupForm }\r\n                if (this.DelGroupForm.value.StartTime != this.UnchangedTrip.value.StartTime || this.DelGroupForm.value.EndTime != this.UnchangedTrip.value.EndTime || this.DelGroupForm.value.StartDate != this.UnchangedTrip.value.StartDate) {\r\n                    this.onDeliveryGroupChange();\r\n                }\r\n                this.dataService.setPublishDeliveryGroupSubject(data);\r\n                this.hideDeliveryGroup();\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setGroupChangeDetectSubject(true);\r\n            } else {\r\n                let error = \" Invalid\";\r\n                for (let c in this.DelGroupForm.controls) {\r\n                    this.DelGroupForm.controls[c].markAsTouched();\r\n                    if (!(this.DelGroupForm.controls['DeliveryRequests'].valid || this.DelGroupForm.controls['Terminal'].valid || this.DelGroupForm.controls['BulkPlant'].valid))\r\n                        error = \"Choose Pickup Location\";\r\n                    this.DelGroupForm.controls[c].valid ? '' : error += \"  \" + ((c == 'DeliveryRequests' || c == 'Terminal' || c == 'BulkPlant') ? \"\" : c) + \"  \";\r\n                }\r\n                Declarations.msgerror('', error, 5000);\r\n            }\r\n        }\r\n    }\r\n\r\n    setBadgeAndNotesToBlendGroup() {\r\n\r\n        let deliveryRequests = <DeliveryRequestViewModel[]>this.DelGroupForm.get('DeliveryRequests').value;\r\n\r\n        if (deliveryRequests.some(dr => dr.IsBlendedRequest)) {\r\n\r\n            let drFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests');\r\n            //only blended requests\r\n            deliveryRequests = deliveryRequests.filter(dr => dr.IsBlendedRequest);\r\n            //grouped by blend group\r\n            let groupedDrs = groupBy(deliveryRequests, 'BlendedGroupId');\r\n\r\n            drFormArray.controls.forEach(drForm => {\r\n\r\n                if (drForm.get('IsBlendedRequest').value) {\r\n\r\n                    let blendDrGroup = <DeliveryRequestViewModel[]>groupedDrs[drForm.get('BlendedGroupId').value];\r\n                    let lastDr = blendDrGroup[blendDrGroup.length - 1];\r\n\r\n                    if (lastDr) {\r\n\r\n                        drForm.get('Notes').setValue(lastDr.Notes);\r\n                        drForm.get('IsCommonBadge').setValue(lastDr.IsCommonBadge);\r\n                        drForm.get('BadgeNo1').setValue(lastDr.BadgeNo1);\r\n                        drForm.get('BadgeNo2').setValue(lastDr.BadgeNo2);\r\n                        drForm.get('BadgeNo3').setValue(lastDr.BadgeNo3);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    validateDraftLoad() {\r\n        var isValid = true;\r\n        if (this.DelGroupForm.controls['StartTime'].invalid || this.DelGroupForm.controls['EndTime'].invalid || this.DelGroupForm.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            this.DelGroupForm.controls['StartDate'].touched;\r\n            !this.DelGroupForm.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validatePublishLoad() {\r\n        var isValid = true;\r\n        if (this.DelGroupForm.controls['StartTime'].invalid || this.DelGroupForm.controls['EndTime'].invalid || this.DelGroupForm.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            this.DelGroupForm.controls['StartDate'].touched;\r\n            !this.DelGroupForm.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        if (this.DelGroupForm.controls.IsCommonPickup.value && !(this.DelGroupForm.controls.Terminal.valid || this.DelGroupForm.controls.BulkPlant.valid)) {\r\n            isValid = false;\r\n            Declarations.msgerror('', 'Please fill required field', 5000);\r\n            this.idCommonPickUpBtn.nativeElement.click();\r\n        }\r\n        if (this.isOptionalPickup) {\r\n            var delControlReqs = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n            delControlReqs.controls.forEach((x: FormGroup) => {\r\n                let OrderId = x.get('OrderId').value;\r\n                let ProductType = x.get('ProductType').value;\r\n                let terminalInfo = x.get('Terminal').value;\r\n                let bulkplantInfo = x.get('BulkPlant').value;\r\n                let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                    if (fuelTypeInfo != null) {\r\n                        var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                        let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                        if (result.length == 0) {\r\n                            Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    cancelDeliveryGroupChanges() {\r\n        //this.DelGroupForm = this.UnchangedTrip;\r\n        let data = { shiftIndex: this._shiftIndex, rowIndex: this._rowIndex, tripIndex: this._tripIndex, trip: this.UnchangedTrip }\r\n        this.dataService.setCancelDeliveryGroupSubject(data);\r\n        this.hideDeliveryGroup();\r\n        this.dataService.setGroupChangeDetectSubject(true);\r\n    }\r\n\r\n    onDeliveryRequestChange(delReq: FormGroup) {\r\n        if (delReq.controls['TripId'] != null && delReq.controls['TripId'] != undefined) {\r\n            this.onDeliveryGroupChange();\r\n        }\r\n        else {\r\n            let prevStatus = delReq.controls['SchedulePreviousStatus'];\r\n            let status = delReq.controls['ScheduleStatus'];\r\n            let trackScheduleStatus = delReq.controls['TrackScheduleStatus'];\r\n            if (trackScheduleStatus.value != 5) {\r\n                if (prevStatus && prevStatus.value != 0 && prevStatus.value != '') {\r\n                    status.patchValue(15);\r\n                }\r\n                else if (status) {\r\n                    status.patchValue(14);\r\n                }\r\n            }\r\n            else {\r\n                if (trackScheduleStatus.value == 5) {\r\n                    delReq.controls['ScheduleStatus'].setValue(5);\r\n                }\r\n            }\r\n        }\r\n        this.updateBadgeNumberDetails();\r\n        this.hideShowCommonBadgeArea();\r\n    }\r\n    updateBadgeNumberDetails() {\r\n        let commonBadgeCount = 0;\r\n        let commonBadgeCheckStatus = true;\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (deliveryRequests != null) {\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                if (deliveryRequests.controls[i].get('IsCommonBadge').value == false) {\r\n                    commonBadgeCount = commonBadgeCount + 1;\r\n                    commonBadgeCheckStatus = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!commonBadgeCheckStatus && commonBadgeCount == deliveryRequests.length) {\r\n            this.DelGroupForm.controls['BadgeNo1'].setValue('');\r\n            this.DelGroupForm.controls['BadgeNo2'].setValue('');\r\n            this.DelGroupForm.controls['BadgeNo3'].setValue('');\r\n            //this.DelGroupForm.controls['RouteInfo'].setValue('');\r\n        }\r\n    }\r\n    hideShowCommonBadgeArea() {\r\n        let commonBadgeCheckStatus = false;\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        if (deliveryRequests != null) {\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                if (deliveryRequests.controls[i].get('IsCommonBadge').value == true) {\r\n                    commonBadgeCheckStatus = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.DelGroupForm.controls['IsCommonBadge'].setValue(commonBadgeCheckStatus);\r\n    }\r\n\r\n    onDeliveryGroupChange() {\r\n        var deliveryRequests = this.DelGroupForm.controls['DeliveryRequests'] as FormArray;\r\n        for (var i = 0; i < deliveryRequests.length; i++) {\r\n            this.onDeliveryRequestChange(deliveryRequests.controls[i] as FormGroup);\r\n        }\r\n    }\r\n\r\n    private zipcodeConditionallyValidator() {\r\n        this.PickupForm.get('BulkPlant.Country.Code').valueChanges.subscribe((country) => {\r\n            this.PickupForm.get('BulkPlant.ZipCode').clearValidators();\r\n            this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            if (country === 'USA') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern('^[0-9]{5}(?:-[0-9]{4})?$')]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                this.CountryBasedZipcodeLabel = \"Zip\";\r\n            }\r\n            else if (country === 'CAN') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern(/^[A-Za-z]\\d[A-Za-z][ ]\\d[A-Za-z]\\d$/)]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n            }\r\n            else if (country === 'IND') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').setValidators([Validators.required, Validators.pattern('([ABCEGHJKLMNPRSTVXYabceghjklmnprstvxy][0-9][ABCEGHJKLMNPRSTVWXYZabceghjklmnprstvwxyz]) ?([0-9][ABCEGHJKLMNPRSTVWXYZabceghjklmnprstvwxyz][0-9])')]);\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            }\r\n            else if (country === 'CAR') {\r\n                this.PickupForm.get('BulkPlant.ZipCode').clearValidators();\r\n                this.PickupForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDeleteDRRequestSubject(): void {\r\n        this.DeleteDRRequestSubject = this.dataService.DeleteDRRequestSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteSchedule(x);\r\n                Declarations.closeDG();\r\n            }\r\n        });\r\n        this.DGSubscription.add(this.DeleteDRRequestSubject);\r\n    }\r\n\r\n    setTruckLoadType(delReq: FormGroup, order) {\r\n        delReq.controls['TruckLoadType'].setValue(order.TruckLoadType);\r\n        if (order.TruckLoadType != 1) {\r\n            delReq.controls['IsFilldInvoke'].setValue(false);\r\n        }\r\n    }\r\n    public subscribeRouteResetGroupSubject(): void {\r\n        this.RouteResetGroupSubject = this.dataService.RouteResetGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.hideDeliveryGroup();\r\n                this.setDeletePostloadedDrsSubject(this.DelGroupForm.controls['DeliveryRequests'].value);\r\n                let input = {\r\n                    DelGroupForm: this.DelGroupForm,\r\n                    routeName: x\r\n                }\r\n                this.dataService.setRouteDeleteDeliveryGroupSubject(input);\r\n                this.dataService.setDeliveryPreloadOption({ ShiftIndex: this._shiftIndex, ScheduleIndex: this._rowIndex, Reset: true });\r\n            }\r\n        });\r\n    }\r\n    setDRPickupValidators(form: FormGroup, pickupType: number): void {\r\n        if (!this.isOptionalPickup && !form.get('IsAdditive').value) {\r\n            if (pickupType != 2) {\r\n                form.get('BulkPlant.Address').setValidators(null);\r\n                form.get('BulkPlant.Address').updateValueAndValidity();\r\n                form.get('BulkPlant.City').setValidators(null);\r\n                form.get('BulkPlant.City').updateValueAndValidity();\r\n                form.get('BulkPlant.State.Id').setValidators(null);\r\n                form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Country.Code').setValidators(null);\r\n                form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n                form.get('BulkPlant.ZipCode').setValidators(null);\r\n                form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                form.get('BulkPlant.CountyName').setValidators(null);\r\n                form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n                form.get('BulkPlant.Latitude').setValidators(null);\r\n                form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n                form.get('BulkPlant.Longitude').setValidators(null);\r\n                form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n                form.get('BulkPlant.SiteName').setValidators(null);\r\n                form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n                form.get('Terminal.Name').setValidators([Validators.required]);\r\n                form.get('Terminal.Name').updateValueAndValidity();\r\n                form.get('Terminal.Id').setValidators([Validators.required]);\r\n                form.get('Terminal.Id').updateValueAndValidity();\r\n            } else {\r\n                form.get('Terminal.Name').setValidators(null);\r\n                form.get('Terminal.Name').updateValueAndValidity();\r\n                form.get('Terminal.Id').setValidators(null);\r\n                form.get('Terminal.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Address').setValidators([Validators.required]);\r\n                form.get('BulkPlant.Address').updateValueAndValidity();\r\n                form.get('BulkPlant.City').setValidators([Validators.required]);\r\n                form.get('BulkPlant.City').updateValueAndValidity();\r\n                form.get('BulkPlant.State.Id').setValidators([Validators.required]);\r\n                form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n                form.get('BulkPlant.Country.Code').setValidators([Validators.required]);\r\n                form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n                form.get('BulkPlant.ZipCode').setValidators([Validators.required]);\r\n                form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n                form.get('BulkPlant.CountyName').setValidators([Validators.required]);\r\n                form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n                form.get('BulkPlant.Latitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n                form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n                form.get('BulkPlant.Longitude').setValidators([Validators.required, Validators.pattern('^[0-9.-]*$')]);\r\n                form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n                form.get('BulkPlant.SiteName').setValidators([Validators.required]);\r\n                form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            }\r\n        }\r\n        else {\r\n            form.get('BulkPlant.Address').setValidators(null);\r\n            form.get('BulkPlant.Address').updateValueAndValidity();\r\n            form.get('BulkPlant.City').setValidators(null);\r\n            form.get('BulkPlant.City').updateValueAndValidity();\r\n            form.get('BulkPlant.State.Id').setValidators(null);\r\n            form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n            form.get('BulkPlant.Country.Code').setValidators(null);\r\n            form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n            form.get('BulkPlant.ZipCode').setValidators(null);\r\n            form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n            form.get('BulkPlant.CountyName').setValidators(null);\r\n            form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n            form.get('BulkPlant.Latitude').setValidators(null);\r\n            form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n            form.get('BulkPlant.Longitude').setValidators(null);\r\n            form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n            form.get('BulkPlant.SiteName').setValidators(null);\r\n            form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n            form.get('Terminal.Name').setValidators(null);\r\n            form.get('Terminal.Name').updateValueAndValidity();\r\n            form.get('Terminal.Id').setValidators(null);\r\n            form.get('Terminal.Id').updateValueAndValidity();\r\n        }\r\n    }\r\n    validateOptionalPickup() {\r\n        if (this.isOptionalPickup) {\r\n            this.DelGroupForm.controls['Terminal'].setValidators(null);\r\n            this.DelGroupForm.controls['Terminal'].updateValueAndValidity();\r\n            this.DelGroupForm.controls['BulkPlant'].setValidators(null);\r\n            this.DelGroupForm.controls['BulkPlant'].updateValueAndValidity();\r\n            this.changeDetectorRef.markForCheck();\r\n            this.DelGroupForm.markAllAsTouched();\r\n        }\r\n\r\n    }\r\n    //TBD DR - CREATE ON THE FLY LOCATION\r\n    getLocationDetailsSubscriptions: Subscription = new Subscription();\r\n    createOnTheFlyLocation(tdr: FormGroup) {\r\n        var _this = this;\r\n        //OPEN PANEL\r\n        this.dataService.setOpenOnTheFlyLocationFormSubject(tdr.value);\r\n        //UN-SUBSCRIBE IF ALREADY SUBSCRIBED\r\n        this.getLocationDetailsSubscriptions ? this.getLocationDetailsSubscriptions.unsubscribe() : null;\r\n        //GET LOCATION DETAILS\r\n        this.getLocationDetailsSubscriptions = this.dataService.getOnTheFlyLocationDetailsSubject.pipe(first()).subscribe((response: any) => {\r\n            //SET DETAILS\r\n            _this.DelGroupForm.controls['DeliveryRequests']['controls'].forEach((drForm: FormGroup) => {\r\n                if (drForm.controls['Id'].value == tdr.controls['Id'].value) {\r\n                    drForm.get('JobId').setValue(response.ResponseData.JobId);\r\n                    drForm.get('JobName').setValue(response.ResponseData.JobName);\r\n                    drForm.get('OrderId').setValue(response.ResponseData.OrderId);\r\n                    drForm.get('JobAddress').setValue(response.ResponseData.Address);\r\n                    drForm.get('JobCity').setValue(response.ResponseData.City)\r\n                    drForm.get('UoM').setValue(response.ResponseData.UoM);\r\n                    drForm.get('CustomerCompany').setValue(response.ResponseData.CustomerCompanyName);\r\n                    drForm.get('ScheduleStartTime').setValue(response.ResponseData.ScheduleStartTime);\r\n                    drForm.get('ScheduleEndTime').setValue(response.ResponseData.ScheduleEndTime);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    DoNotShowCancelButton(dsValue: DeliveryRequestViewModel) {\r\n        let cancelDRButtonDisplayStatus = false;\r\n        if (this.EnrouteInProgress.indexOf(dsValue.TrackScheduleEnrouteStatus) >= 0 || this.EnrouteInCompleted.indexOf(dsValue.TrackScheduleStatus) >= 0) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        return cancelDRButtonDisplayStatus;\r\n    }\r\n\r\n    onSubDrCreate() {\r\n        if (this.addSubDrModel.IsSpiltDRAdded) {\r\n            var filter = this.addSubDrModel.SpiltDRs.filter(x => !(x.RequiredQuantity > 0)).length;\r\n            if (filter > 0) {\r\n                Declarations.msgerror(\"Quantity required for Sub DR(s).\", undefined, undefined); return;\r\n            }\r\n        }\r\n        var dismiss = document.getElementById('closeSubDrPanel') as HTMLElement;\r\n        dismiss.click();\r\n        this.dataService.setScheduleLoaderSubject(true);\r\n        this.carrierService.addSubDrs(this.addSubDrModel)\r\n            .subscribe((data: any) => {\r\n                this.dataService.setScheduleLoaderSubject(false);\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.onRaiseSubDR.emit();\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                    this.onRaiseSubDR.emit();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    public AddSubDR(tdr: FormGroup) {\r\n        this.addSubDrModel = tdr.value as DeliveryRequestViewModel;\r\n        this.addSubDrModel.IsSpiltDRAdded = false;\r\n        this.addSubDrModel.SpiltDRs = [];\r\n        this.addEmptySubDR();\r\n    }\r\n\r\n    addEmptySubDR() {\r\n        if (this.addSubDrModel != null) {\r\n            this.addSubDrModel.IsSpiltDRAdded = true;\r\n            let spiltDRModel = new SpiltDRsModel();\r\n            spiltDRModel.ScheduleQuantityType = 1;\r\n            this.addSubDrModel.SpiltDRs.push(spiltDRModel);\r\n        }\r\n    }\r\n\r\n    removeItem(j: number) {\r\n        this.addSubDrModel.SpiltDRs.splice(j, 1);\r\n    }\r\n\r\n    CheckSubDrStatus(dsValue: DeliveryRequestViewModel) {\r\n\r\n        if (this.SubDrsStatusWithParentIds.length > 0 && dsValue.GroupParentDRId) {\r\n            let DRs = this.SubDrsStatusWithParentIds.filter(x => x.GroupParentDRId == dsValue.GroupParentDRId);\r\n            if (DRs.length > 0) {\r\n                let NonCancelledSchedules = this.sbService.returnSubDrStatusOtherthaCancel(this.SubDrOtherThanCancellStatus, DRs);\r\n                if (NonCancelledSchedules <= 0) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public CancelDS(tdr: FormGroup) {\r\n        this.CancelDSViewModel = tdr.value as DeliveryRequestViewModel;\r\n        if (this.CancelDSViewModel.GroupParentDRId != '' && this.CancelDSViewModel.GroupParentDRId != null) {\r\n            this.cancelDSDeliveryScheduleViewModel = [];\r\n            this.dataService.setScheduleLoaderSubject(true);\r\n            this.hideDeliveryGroup();\r\n            //intialize the model.\r\n            let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n            cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n\r\n            //normal DR\r\n            let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n            cancelDSDeliverySchedule.DeliveryReqId = this.CancelDSViewModel.Id;\r\n            cancelDSDeliverySchedule.IsSubDR = false;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n            //sub DR\r\n            let cancelsubDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n            cancelsubDSDeliverySchedule.DeliveryReqId = this.CancelDSViewModel.GroupParentDRId;\r\n            cancelsubDSDeliverySchedule.IsSubDR = true;\r\n            cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelsubDSDeliverySchedule);\r\n            this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                this.dataService.setScheduleLoaderSubject(false);\r\n                if (response != null && response.length > 0) {\r\n                    $(\"#btn-group-cancel-ds-info\").click();\r\n                    this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                }\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setGroupChangeDetectSubject(true);\r\n        }\r\n        else {\r\n            $(\"#btn-group-cancel-ds\").click();\r\n        }\r\n    }\r\n    public RejectDSGroupDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.Schedule != null && this.CancelDSViewModel != null) {\r\n            let delRequestCancelModel = new CancelDeliverySchedule();\r\n            delRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n            delRequestCancelModel.DeliveryReqId = this.CancelDSViewModel.Id;\r\n            delRequestCancelModel.DriverColIndex = this.DelGroupForm.value.DriverColIndex;\r\n            if (this.Schedule.value != null && this.Schedule.value.Drivers.length > 0) {\r\n                delRequestCancelModel.DriverId = this.Schedule.value.Drivers[0].Id;\r\n            }\r\n            delRequestCancelModel.DriverRowIndex = this.DelGroupForm.value.DriverRowIndex;\r\n            delRequestCancelModel.ShiftId = this.DelGroupForm.value.ShiftId;\r\n            delRequestCancelModel.ShiftIndex = this.DelGroupForm.value.ShiftIndex;\r\n            delRequestCancelModel.TrackableScheduleId = this.CancelDSViewModel.TrackableScheduleId;\r\n            this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            //post load DS\r\n            if (this.CancelDSViewModel.PostLoadInfo != null) {\r\n                let postLoaddelRequestCancelModel = new CancelDeliverySchedule();\r\n                postLoaddelRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n                postLoaddelRequestCancelModel.DeliveryReqId = this.CancelDSViewModel.PostLoadInfo.DrId;\r\n                postLoaddelRequestCancelModel.DriverColIndex = this.CancelDSViewModel.PostLoadInfo.TripIndex;\r\n                postLoaddelRequestCancelModel.DriverId = 0;\r\n                postLoaddelRequestCancelModel.DriverRowIndex = this.CancelDSViewModel.PostLoadInfo.ScheduleIndex;\r\n                postLoaddelRequestCancelModel.ShiftId = this.CancelDSViewModel.PostLoadInfo.ShiftId;\r\n                postLoaddelRequestCancelModel.ShiftIndex = this.CancelDSViewModel.PostLoadInfo.ShiftIndex;\r\n                postLoaddelRequestCancelModel.TrackableScheduleId = -1;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(postLoaddelRequestCancelModel);\r\n            }\r\n\r\n            //blended DR\r\n            if (this.CancelDSViewModel.IsBlendedRequest) {\r\n                let tripDrs = this.filterAndGetDrsByBlendGroupId(<DeliveryRequestViewModel[]>this.DelGroupForm.get('DeliveryRequests').value, this.CancelDSViewModel.BlendedGroupId);\r\n                tripDrs.forEach(dr => {\r\n                    if (dr.Id != this.CancelDSViewModel.Id) {//this dr already added\r\n                        let delRequestCancelModel = new CancelDeliverySchedule();\r\n                        delRequestCancelModel.ScheduleBuilderId = this.ScheduleBuilderId;\r\n                        delRequestCancelModel.DeliveryReqId = dr.Id;\r\n                        delRequestCancelModel.DriverColIndex = this.DelGroupForm.value.DriverColIndex;\r\n                        if (this.Schedule.value != null && this.Schedule.value.Drivers.length > 0) {\r\n                            delRequestCancelModel.DriverId = this.Schedule.value.Drivers[0].Id;\r\n                        }\r\n                        delRequestCancelModel.DriverRowIndex = this.DelGroupForm.value.DriverRowIndex;\r\n                        delRequestCancelModel.ShiftId = this.DelGroupForm.value.ShiftId;\r\n                        delRequestCancelModel.ShiftIndex = this.DelGroupForm.value.ShiftIndex;\r\n                        delRequestCancelModel.TrackableScheduleId = dr.TrackableScheduleId;\r\n                        this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.dataService.setScheduleLoaderSubject(true);\r\n            this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    this.dataService.setCancelDSGroupNormalSubDSSubject(response);\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                    this.hideDeliveryGroup();\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                }\r\n                else {\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public CancelDSGroupDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        this.CancelDSViewModel = null;\r\n    }\r\n    public CancelSelectedDS() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#confirm-group-cancel-ds-dismiss\").click();\r\n                this.dataService.setScheduleLoaderSubject(true);\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.dataService.setCancelDSGroupNormalSubDSSubject(response);\r\n                        this.dataService.setScheduleLoaderSubject(false);\r\n                        this.hideDeliveryGroup();\r\n                        this.changeDetectorRef.markForCheck();\r\n                        this.dataService.setGroupChangeDetectSubject(true);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                    else {\r\n                        this.dataService.setScheduleLoaderSubject(false);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Select at least one DS for cancel schedule.\", 'Success', 2500);\r\n        }\r\n    }\r\n    public checkAll() {\r\n        if ($(\"#selectAllDSBGroupCancel\").is(\":checked\")) {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = true;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = false;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public checkDSChange(ele: number, ds: CancelDSDeliveryScheduleViewModel) {\r\n        var eleId = \"dsCheck\" + ele;\r\n        var eleIdDom = $(\"#\" + eleId).is(\":checked\");\r\n        if (eleIdDom) {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = true;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = false;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public deletePickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n\r\n\r\n    OnCountryChanged(eventData: any) {\r\n        let selectedCountryCode = eventData.target.value;\r\n        let selectedCountryId = this.getCountryIdFromCode(selectedCountryCode);\r\n        this.setBulkPlantAddressValidators(selectedCountryId);\r\n    }\r\n\r\n    getCountryIdFromCode(countryCode: any): number {\r\n        let selectedCountryId = 1;\r\n        if (countryCode == \"CAN\" || countryCode == \"CA\") {\r\n            selectedCountryId = 2;\r\n        }\r\n        else if (countryCode == \"CAR\") {\r\n            selectedCountryId = 4;\r\n        }\r\n        return selectedCountryId;\r\n    }\r\n\r\n    setBulkPlantAddressValidators(countryId: number) {\r\n        let isCarribean = countryId == 4 ? true : false;\r\n        let delGroupform = this.DelGroupForm;\r\n        let pickUpForm = this.PickupForm;\r\n        //del group\r\n        delGroupform.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.Address').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.City').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        delGroupform.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        delGroupform.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        delGroupform.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        delGroupform.get('BulkPlant.Longitude').updateValueAndValidity();\r\n\r\n        //pick up form \r\n        pickUpForm.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.Address').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.City').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        pickUpForm.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        pickUpForm.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        pickUpForm.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        pickUpForm.get('BulkPlant.Longitude').updateValueAndValidity();\r\n    }\r\n\r\n    //BLENDED REQUEST\r\n    public blendRequestForm: FormGroup = this.fb.group({ BlendedRequests: this.fb.array([]) });\r\n    public additiveOrders: AdditiveOrderViewModel[] = [];\r\n    public CompatibleProductTypeList: CompatibleProductModel[] = [];\r\n    public DrForEditBlendedRequestIndex: number = 0;\r\n    public BlendDrIndex: number = 0;\r\n    public IsPickupForBlendRequest: boolean = false;\r\n    public totalBlendedQuantity: number = 0;\r\n    public tankMaxFill: number = 0;\r\n    public getOrderSubject: Subject<any> = new Subject<any>();\r\n    public deletedBlend_temp: DeliveryRequestViewModel[] = [];\r\n    public deletedBlend_all: DeliveryRequestViewModel[] = [];\r\n\r\n    editBlendedSchedule(index: number, trip: FormGroup) {\r\n\r\n        this.deletedBlend_temp = [];\r\n        this._currentTrip = trip;\r\n        this.DeletedDrIndex = index;\r\n        this.DrForEditBlendedRequestIndex = index;\r\n\r\n        let tripDrs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n\r\n        this.selectedDeliveryRequest = tripDrs[this.DeletedDrIndex];\r\n        this.selectedDeliveryRequest.WindowMode = 1;\r\n        this.selectedDeliveryRequest.QueueMode = 1;\r\n\r\n        let blendRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        blendRequests.clear();\r\n\r\n        let blendeDdrGroup = this.filterAndGetDrsByBlendGroupId(tripDrs, this.selectedDeliveryRequest.BlendedGroupId);\r\n        this.totalBlendedQuantity = <number>blendeDdrGroup.find(dr => dr.IsBlendedDrParent).TotalBlendedQuantity;\r\n        let additives = blendeDdrGroup.filter(dr => dr.IsAdditive);\r\n        if (additives && additives.length > 0) {\r\n            this.totalBlendedQuantity = this.totalBlendedQuantity - additives.reduce((a, b) => +a + +b.RequiredQuantity, 0);\r\n        }\r\n\r\n        blendeDdrGroup.forEach(dr => {\r\n            dr.QuantityInPercent = ((+dr.RequiredQuantity / +this.totalBlendedQuantity) * 100);\r\n            blendRequests.push(this.utilService.getBlendRequestFormGroup(dr));\r\n        })\r\n\r\n        //max fill validation\r\n        let request = blendeDdrGroup[0];\r\n        if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && !request.IsMaxFillAllowed) {\r\n            this.tankMaxFill = request.TankMaxFill;\r\n        } else {\r\n            this.tankMaxFill = 0;\r\n        }\r\n        document.getElementById('_openBlendModalButton').click();\r\n    }\r\n\r\n    getOrdersByDr(dr: DeliveryRequestViewModel): any[] {\r\n\r\n        let response: any[] = [];\r\n\r\n        let _jobId = dr.JobId || '';\r\n        let _productTypeId;\r\n        if (dr.BlendParentProductTypeId > 0)\r\n            _productTypeId = dr.BlendParentProductTypeId;\r\n        else\r\n            _productTypeId = dr.ProductTypeId || '';\r\n        let _carrierStatus = dr.CarrierStatus || '';\r\n\r\n        let existing = [];\r\n\r\n        if (_productTypeId) {\r\n            existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (dr.IsBlendedRequest ? 1 : 0)];\r\n        }\r\n        else {\r\n            existing = this.OrderList[_jobId.toString()];\r\n        }\r\n\r\n        if (existing == undefined || existing == null || existing.length == 0) {\r\n            this.getOrderSubject.next({ _jobId: _jobId.toString(), _productTypeId: _productTypeId.toString(), _carrierStatus: _carrierStatus.toString(), _isBlend: dr.IsBlendedRequest });\r\n        }\r\n        else if (existing.length > 0) {\r\n            response = existing;\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    subscribeGetOrderSubject() {\r\n        this.getOrderSubject.pipe(debounceTime(1000), distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b))).subscribe((x: any) => {\r\n            this.sbService.getOrders(x._jobId, x._productTypeId ? x._productTypeId.toString() : null, null, x._carrierStatus, x._isBlend).subscribe(data => {\r\n                this.OrderList[x._jobId.toString() + '_' + x._productTypeId.toString() + '_' + (x._isBlend ? 1 : 0)] = data;\r\n                //location all orders\r\n                this.OrderList[x._jobId.toString()] = data;\r\n            });\r\n        })\r\n    }\r\n\r\n    getUnUsedOrdersForBlendedRequest(blendedRequest: FormGroup) {\r\n\r\n        let currentOrder = blendedRequest.get('OrderId').value;\r\n        let orderList: any[] = this.getOrdersByDr(blendedRequest.value);\r\n\r\n        if (orderList && orderList.length > 0) {\r\n            let ordersToRemove = this.blendRequestForm.get('BlendedRequests').value as DeliveryRequestViewModel[];//orders selected in blend form\r\n            ordersToRemove = ordersToRemove.filter(obj => obj.OrderId != currentOrder);\r\n            let productToRemove = orderList.filter(s => ordersToRemove.find(s2 => s2.OrderId == s.OrderId));\r\n            return orderList.filter((x => currentOrder == x.OrderId || !productToRemove.some(y => y.FuelTypeId == x.FuelTypeId)));\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    getUnUsedBlendOrders(currentOrder: number) {\r\n\r\n        let blendRequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];//orders selected in blend form\r\n        blendRequests = blendRequests.filter(b => b.IsAdditive && b.OrderId && b.OrderId != currentOrder);\r\n        let ordersToRemove = blendRequests.map(b => b.OrderId);\r\n\r\n        return this.additiveOrders.filter((x => currentOrder == x.Id || !ordersToRemove.some(orderId => orderId == x.Id)));\r\n    };\r\n\r\n    orderChangedForBlendRequest(_orderId: string, blendedRequest: FormGroup): void {\r\n\r\n        blendedRequest.get('ProductTypeId').setValue(null);\r\n        let orders = this.getOrdersByDr(blendedRequest.value);\r\n        if (orders.length > 0) {\r\n            let selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (selectedOrder) {\r\n                let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n                this.setPickupLocationForBlendRequest(blendedRequest, location);\r\n\r\n                if (selectedOrder.ProductTypeId) {\r\n                    blendedRequest.get('ProductTypeId').setValue(selectedOrder.ProductTypeId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompatibleProducts() {\r\n        if (this.CompatibleProductTypeList.length == 0) {\r\n            this.carrierService.getCompatibleProductTypes().subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.CompatibleProductTypeList = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAdditiveOrders() {\r\n        if (this.additiveOrders.length == 0) {\r\n            this.carrierService.getAdditiveOrders(this.SelectedRegionId).subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.additiveOrders = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setPickupLocationForBlendRequest(delReq: FormGroup, order: OrderPickupLocationModel): void {\r\n        delReq.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                delReq.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                delReq.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n        }\r\n    }\r\n\r\n    RemoveBlendPickupLocation(tdr: FormGroup): void {\r\n\r\n        if (tdr) {\r\n            this.ChangePickupForOrders = [];\r\n            this.SelectedDRForEditPickup = tdr;\r\n            let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            let _terminal = terminal.value;\r\n            let _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n        }\r\n    }\r\n\r\n    getRequiredDataForPickupDetails() {\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n    }\r\n\r\n    editPickupLocationForBlend(blendDrIndex: number): void {\r\n\r\n        this.BlendDrIndex = blendDrIndex;\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = blendDr;\r\n\r\n\r\n        let _orderId = blendDr.controls['OrderId'].value as number;\r\n        if (_orderId > 0) {\r\n            this.ChangePickupForOrders.push(_orderId);\r\n            let existingOrders = this.OrderList[blendDr.value.JobId.toString() + '_' + blendDr.value.ProductTypeId.toString() + '_' + (blendDr.value.IsBlendedRequest ? 1 : 0)];\r\n            let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n            if (orders.length > 0) {\r\n                let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n            }\r\n        }\r\n\r\n\r\n        let _pickupType = blendDr.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = blendDr.controls['Terminal'].value;\r\n        let _bulkPlant = blendDr.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n\r\n        this.setPickupLocation(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto/manual order\r\n        this.addresService.getBulkPlants('', _orderId > 0 ? _orderId : 0).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n\r\n\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePickupLocationForBlend() {\r\n\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        if (this.SelectedDRForEditPickup != null && blendDr != null) {\r\n            this.setPickupLocation(blendDr, this.PickupForm.value);\r\n        }\r\n\r\n        this.IsPickupForBlendRequest = false;\r\n        let dismiss = document.getElementById('btnPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    addRemoveBlendedProduct(addNewRow: boolean, index: number, isAdditive: boolean = false) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (addNewRow) {\r\n            //set details to new dr from parent dr\r\n            let additiveCount = this.getAdditiveCountBlend();\r\n\r\n            let _model = new BlendedRequest(isAdditive);\r\n            _model.UoM = this.selectedDeliveryRequest.UoM;\r\n            _model.BlendedGroupId = this.selectedDeliveryRequest.BlendedGroupId;\r\n            _model.JobId = this.selectedDeliveryRequest.JobId;\r\n            _model.ProductTypeId = null;\r\n            _model.IsBlendedRequest = true;\r\n            _model.OrderId = null;\r\n            _model.BlendParentProductTypeId = this.selectedDeliveryRequest.BlendParentProductTypeId;\r\n            if (!isAdditive && additiveCount > 0) {\r\n                _blendedRequests.insert(+_blendedRequests.controls.length - additiveCount, this.utilService.getBlendRequestFormGroup(_model));\r\n            } else {\r\n                _blendedRequests.push(this.utilService.getBlendRequestFormGroup(_model));\r\n            }\r\n        }\r\n        else {\r\n            let dr = <DeliveryRequestViewModel>_blendedRequests.at(index).value;\r\n            //add to array if its existing dr\r\n            if (dr.Id) {\r\n                dr.Compartments = []; dr.IsDeleted = true;\r\n                this.deletedBlend_temp.push(dr);\r\n                this.deletedBlend_all.push(dr);\r\n            }\r\n            _blendedRequests.removeAt(index);\r\n        }\r\n    }\r\n\r\n    blendDrQuantityChanged(enteredQuantity: number, blendIndex: number) {\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('QuantityInPercent').setValue((+enteredQuantity / this.totalBlendedQuantity) * 100);\r\n    }\r\n\r\n    onBlendTotalQuantityChange(totalQuantity: number) {\r\n\r\n        if (totalQuantity) {\r\n\r\n            let blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n            blendedRequests.controls.forEach((b: FormGroup) => {\r\n                if (!b.get('IsAdditive').value && +b.get('QuantityInPercent').value > 0) {\r\n                    b.get('RequiredQuantity').setValue((+b.get('QuantityInPercent').value / 100) * totalQuantity);\r\n                    this.onDeliveryRequestChange(b);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.clearQuantityAndPercentage();\r\n        }\r\n    }\r\n\r\n    addRemoveAdditiveProduct(isAddNew: boolean) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (isAddNew) {\r\n            _blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(true)));\r\n        }\r\n        else {\r\n            _blendedRequests.removeAt(_blendedRequests.value.findIndex(r => r.IsAdditive));\r\n        }\r\n    }\r\n\r\n\r\n    getAdditiveCountBlend() {\r\n        let _blendedRequests = <DeliveryRequestViewModel[]>this.blendRequestForm.get('BlendedRequests').value;\r\n        return _blendedRequests.filter(b => b.IsAdditive).length;\r\n    }\r\n\r\n    blendDrPercentChanged(percent: number, blendIndex: number) {\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('RequiredQuantity').setValue((+percent / 100) * this.totalBlendedQuantity);\r\n        this.onDeliveryRequestChange(blendedRequest);\r\n    }\r\n\r\n    isBlendedRequestQuantityValid() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            let totalQuantity = 0;\r\n            let _blendedRequests: BlendedRequest[] = this.blendRequestForm.get('BlendedRequests').value;\r\n            _blendedRequests.forEach((b: BlendedRequest, index: number) => {\r\n                if (!b.IsAdditive) {\r\n                    totalQuantity = +totalQuantity + +b.RequiredQuantity;\r\n                }\r\n            });\r\n\r\n            return (totalQuantity == this.totalBlendedQuantity) || (Math.abs(this.totalBlendedQuantity - totalQuantity) < 1);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isTankMaxFillValid(): boolean {\r\n        if (this.tankMaxFill > 0 && this.totalBlendedQuantity > this.tankMaxFill)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n    clearQuantityAndPercentage(blendIndex?: number) {\r\n        if (blendIndex == null) {\r\n            blendIndex = -1;\r\n        }\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        _blendedRequests.controls.forEach((b: FormGroup, index: number) => {\r\n            if (index > blendIndex && !b.get('IsAdditive').value) {\r\n                b.get('RequiredQuantity').setValue(null);\r\n                b.get('QuantityInPercent').setValue(null);\r\n            }\r\n        })\r\n    }\r\n\r\n    submitBlendedForm() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            ////////////VALIDATE///////////\r\n            let scheduleIds = this.getSchedulesFromDr(this.deletedBlend_temp);\r\n\r\n            if (scheduleIds && scheduleIds.length > 0) {\r\n\r\n                let scheduleUpdatwAllowded = true;\r\n                this.dataService.setScheduleLoaderSubject(true);\r\n                this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                    this.dataService.setScheduleLoaderSubject(false);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        let data = response[0];\r\n                        if (this.CompletedScheduleStatuses.indexOf(data.ScheduleStatusId) !== -1 || data.ScheduleEnrouteStatusId == 4) {\r\n                            Declarations.msgerror(\"Can't update as drop has been made already\", 'Warning', 2500);\r\n                            scheduleUpdatwAllowded = false;\r\n                        }\r\n                    }\r\n                    if (scheduleUpdatwAllowded) {\r\n                        this.updateDeliveryGroupBlendByPopup();\r\n                    }\r\n                });\r\n            }\r\n            ////////////NO DELETE///////////\r\n            else {\r\n                this.updateDeliveryGroupBlendByPopup();\r\n            }\r\n        }\r\n    }\r\n\r\n    updateDeliveryGroupBlendByPopup() {\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as DeliveryRequestViewModel[];\r\n\r\n        // 1.DELETE 2.ADD 3.UPDATE\r\n        if (this.deletedBlend_temp.length > 0 && blendedrequests.some(dr => !dr.Id)) {\r\n            //remove dr from ui //removed dr get deleted from api\r\n            //create new dr api\r\n            //create new dr ui (load or dr group)\r\n            //update existing drs\r\n            this.createBlendRequests(blendedrequests.filter(dr => !dr.Id), TaskId.Add_Delete_Update);\r\n\r\n        }\r\n        // 1.ADD 2.UPDATE\r\n        else if (this.deletedBlend_temp.length == 0 && blendedrequests.some(dr => !dr.Id)) {\r\n            //create new dr api\r\n            //create new dr ui (load or dr group)\r\n            //update existing drs\r\n            this.createBlendRequests(blendedrequests.filter(dr => !dr.Id), TaskId.Add_Update);\r\n\r\n        }\r\n        // 1.DELETE 2.UPDATE\r\n        else if (this.deletedBlend_temp.length > 0 && blendedrequests.every(dr => dr.Id)) {\r\n            //remove dr from ui //removed dr get deleted from api\r\n            //update existing drs\r\n            this.deleteBlendedDeliveryRequestFromLoad();\r\n            this.updateBlendRequests();\r\n            this.setParentDrAndItsQuantity();\r\n        }\r\n        // 1.UPDATE\r\n        else if (this.deletedBlend_temp.length == 0 && blendedrequests.every(dr => dr.Id)) {\r\n            this.updateBlendRequests();\r\n            this.setParentDrAndItsQuantity();\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Failed to update.\", 'Error', 2500);\r\n        }\r\n    }\r\n\r\n    createBlendRequests(deliveryRequests: DeliveryRequestViewModel[], taskId: TaskId) {\r\n\r\n        this.dataService.setScheduleLoaderSubject(true);\r\n\r\n        this.selectedDeliveryRequest['BlendedRequests'] = deliveryRequests;\r\n\r\n        this.carrierService.postRaiseRequests({ DeliveryRequests: [this.selectedDeliveryRequest] }).subscribe((data: any) => {\r\n\r\n            this.selectedDeliveryRequest['BlendedRequests'] = [];\r\n\r\n            this.dataService.setScheduleLoaderSubject(false);\r\n\r\n            if (data != null && parseInt(data.StatusCode) == 0 && data.DeliveryRequests.length > 0) {\r\n                this.pushNewBlendRequestsToLoad(<any[]>data.DeliveryRequests);\r\n\r\n                if (taskId == TaskId.Add_Delete_Update) {\r\n                    this.deleteBlendedDeliveryRequestFromLoad();\r\n                }\r\n\r\n                this.updateBlendRequests();\r\n                this.setParentDrAndItsQuantity();\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        })\r\n    }\r\n\r\n    pushNewBlendRequestsToLoad(newBlendRequests: any[]) {\r\n\r\n        let loadDrFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests');\r\n        newBlendRequests.sort((a, b) => Number(!a.IsAdditive) - Number(!b.IsAdditive));\r\n\r\n        let blendGroupEndIndex = null;\r\n\r\n        loadDrFormArray.controls.forEach((dr: FormGroup, index: number) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n                if (!dr.get('IsAdditive').value) {\r\n                    blendGroupEndIndex = index;\r\n                }\r\n            }\r\n        });\r\n\r\n        blendGroupEndIndex == null ? blendGroupEndIndex = loadDrFormArray.length : blendGroupEndIndex = blendGroupEndIndex;\r\n\r\n        newBlendRequests.forEach(newRequest => {\r\n            loadDrFormArray.insert((+blendGroupEndIndex + 1), this.utilService.getDeliveryRequestForm(newRequest, this.DelGroupForm.controls['IsCommonPickup'].value))\r\n        });\r\n\r\n    }\r\n\r\n    setParentDrAndItsQuantity() {\r\n\r\n        let loadDrFormArray = <FormArray>this.DelGroupForm.get('DeliveryRequests')\r\n        let _blendLoadDrs = loadDrFormArray.value.filter(l => l.BlendedGroupId && l.BlendedGroupId == this.selectedDeliveryRequest.BlendedGroupId);\r\n\r\n        loadDrFormArray.controls.forEach((dr: FormGroup, index: number) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n                if (!dr.get('IsAdditive').value && index == 0) {\r\n                    dr.get('IsBlendedDrParent').setValue(true);\r\n                    dr.get('TotalBlendedQuantity').setValue(_blendLoadDrs.reduce(function (sum, current) { return sum + current.RequiredQuantity; }, 0));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    getSchedulesFromDr(drs: DeliveryRequestViewModel[]): number[] {\r\n        let scheduleIds: number[] = [];\r\n        drs.forEach(dr => {\r\n            if (dr.TrackableScheduleId != null && dr.TrackableScheduleId > 0) {\r\n                scheduleIds.push(dr.TrackableScheduleId);\r\n            }\r\n        });\r\n        return scheduleIds;\r\n    }\r\n\r\n    updateBlendRequests() {\r\n\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n        this._currentTrip.get('DeliveryRequests')['controls'].forEach((dr: FormGroup) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n\r\n                let _blend = blendedrequests.find(bl => bl.Id == dr.get('Id').value);\r\n\r\n                if (_blend) {\r\n                    dr.get('OrderId').setValue(_blend.OrderId);\r\n                    dr.get('SchedulePreviousStatus').setValue(_blend.SchedulePreviousStatus);\r\n                    dr.get('ScheduleStatus').setValue(_blend.ScheduleStatus);\r\n                    dr.get('TrackScheduleStatus').setValue(_blend.TrackScheduleStatus);\r\n                    dr.get('ProductType').setValue(_blend.ProductType);\r\n                    dr.get('ProductTypeId').setValue(_blend.ProductTypeId);\r\n                    dr.get('RequiredQuantity').setValue(_blend.RequiredQuantity);\r\n                    dr.get('PickupLocationType').setValue(_blend.PickupLocationType);\r\n                    dr.get('Terminal').patchValue({ Id: _blend.Terminal.Id, Name: _blend.Terminal.Name });\r\n                    dr.get('BulkPlant').patchValue({\r\n                        SiteName: _blend.BulkPlant.SiteName, Address: _blend.BulkPlant.Address, City: _blend.BulkPlant.City, State: _blend.BulkPlant.State, Country: { Code: _blend.BulkPlant.Country.Code, Id: _blend.BulkPlant.Country.Id, Name: _blend.BulkPlant.Country.Name }, ZipCode: _blend.BulkPlant.ZipCode, CountyName: _blend.BulkPlant.CountyName, Latitude: _blend.BulkPlant.Latitude, Longitude: _blend.BulkPlant.Longitude\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    pushBlendedRequestsToLoad() {\r\n\r\n        let blendedrequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n        this._currentTrip.get('DeliveryRequests')['controls'].forEach((dr: FormGroup) => {\r\n            if (dr.get('BlendedGroupId').value && dr.get('BlendedGroupId').value == this.selectedDeliveryRequest.BlendedGroupId) {\r\n\r\n                let _blend = blendedrequests.find(bl => bl.Id == dr.get('Id').value);\r\n\r\n                if (_blend) {\r\n                    dr.get('OrderId').setValue(_blend.OrderId);\r\n                    dr.get('SchedulePreviousStatus').setValue(_blend.SchedulePreviousStatus);\r\n                    dr.get('ScheduleStatus').setValue(_blend.ScheduleStatus);\r\n                    dr.get('TrackScheduleStatus').setValue(_blend.TrackScheduleStatus);\r\n                    dr.get('ProductType').setValue(_blend.ProductType);\r\n                    dr.get('ProductTypeId').setValue(_blend.ProductTypeId);\r\n                    dr.get('RequiredQuantity').setValue(_blend.RequiredQuantity);\r\n                    dr.get('PickupLocationType').setValue(_blend.PickupLocationType);\r\n                    dr.get('Terminal').patchValue({ Id: _blend.Terminal.Id, Name: _blend.Terminal.Name });\r\n                    dr.get('BulkPlant').patchValue({\r\n                        SiteName: _blend.BulkPlant.SiteName, Address: _blend.BulkPlant.Address, City: _blend.BulkPlant.City, State: _blend.BulkPlant.State, Country: { Code: _blend.BulkPlant.Country.Code, Id: _blend.BulkPlant.Country.Id, Name: _blend.BulkPlant.Country.Name }, ZipCode: _blend.BulkPlant.ZipCode, CountyName: _blend.BulkPlant.CountyName, Latitude: _blend.BulkPlant.Latitude, Longitude: _blend.BulkPlant.Longitude\r\n                    });\r\n                }\r\n                if (dr.get('IsBlendedDrParent').value) {\r\n                    dr.get('TotalBlendedQuantity').setValue(blendedrequests.reduce(function (sum, current) { return sum + current.RequiredQuantity; }, 0));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteRequests(drs: DeliveryRequestViewModel[]) {\r\n\r\n        this.carrierService.updateDeliveryRequest(drs).subscribe((data: any) => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    public deleteBlendedDeliveryRequestFromLoad() {\r\n\r\n        this.setDeletePostloadedDrsSubject(this.deletedBlend_temp);\r\n\r\n        let allDrs = this.DelGroupForm.get('DeliveryRequests') as FormArray;\r\n        let length = allDrs.length;\r\n\r\n        while (length > 0) {\r\n\r\n            let index = allDrs.value.findIndex(dr => this.deletedBlend_temp.some(dr1 => dr1.Id == dr.Id));\r\n\r\n            if (index != -1) {\r\n                allDrs.removeAt(index);\r\n            }\r\n            length--;\r\n        }\r\n\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    setBlendClass(dr: DeliveryRequestViewModel, index: number): string {\r\n\r\n        if (dr && dr.IsBlendedRequest) {\r\n            if (dr.IsBlendedDrParent)\r\n                return \"blend-first\"\r\n            else if (!dr.IsBlendedDrParent && <number>this.DelGroupForm.get('DeliveryRequests')['controls'].length == (index + 1))\r\n                return \"blend-last\"\r\n            else if (!dr.IsBlendedDrParent && <number>this.DelGroupForm.get('DeliveryRequests')['controls'].length > (index + 1) && dr.BlendedGroupId != this.DelGroupForm.controls['DeliveryRequests']['controls'][(index + 1)].get('BlendedGroupId').value)\r\n                return \"blend-last\"\r\n            else\r\n                return \"blend-middle\"\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    isLastDrOfBlendGroup(dr: DeliveryRequestViewModel, index: number): boolean {\r\n        if ((<number>this.DelGroupForm.get('DeliveryRequests')['controls'].length == (index + 1)) || (<number>this.DelGroupForm.get('DeliveryRequests')['controls'].length > (index + 1) && dr.BlendedGroupId != this.DelGroupForm.controls['DeliveryRequests']['controls'][(index + 1)].get('BlendedGroupId').value))\r\n            return true\r\n        else\r\n            return false\r\n    }\r\n\r\n    filterAndGetDrsByBlendGroupId(drs: DeliveryRequestViewModel[], blendGroupId: string): DeliveryRequestViewModel[] {\r\n        if (!drs || drs.length == 0 || !blendGroupId)\r\n            return [];\r\n        return drs.filter(dr => dr.IsBlendedRequest && dr.BlendedGroupId && dr.BlendedGroupId == blendGroupId)\r\n    }\r\n    DoNotShowCancelICON(dsValue: DeliveryRequestViewModel) {\r\n        let cancelDRButtonDisplayStatus = false;\r\n        if (this.EnrouteInProgress.indexOf(dsValue.TrackScheduleEnrouteStatus) >= 0 || this.EnrouteInCompleted.indexOf(dsValue.TrackScheduleStatus) >= 0) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        else if ((dsValue.TrackScheduleEnrouteStatus == 0 || dsValue.TrackScheduleStatus == 0) && (dsValue.Status == 2 || dsValue.Status == 3 || dsValue.Status == 5)) {\r\n            cancelDRButtonDisplayStatus = true;\r\n        }\r\n        return cancelDRButtonDisplayStatus;\r\n    }\r\n}\r\nexport enum TaskId {\r\n    Update = 1,\r\n    Add_Update = 2,\r\n    Delete_Update = 3,\r\n    Add_Delete_Update = 4,\r\n}\r\n","<div id=\"delivery_group_panel\" class=\"border radius-5  delivery-panel hide-element\" [formGroup]=\"DelGroupForm\">\r\n    <div class=\"row delivery-group-heading\">\r\n        <div class=\"col-sm-12 pl0 pr0\">\r\n            <a id=\"delivery_group_icon\" class=\"color-white dg-header\" title=\"Close Delivery Group\">\r\n                <i class=\"fa fa-chevron-up mr10\"></i><h1 class=\"fs18 f-normal mt0 dib \">Delivery Group</h1>\r\n            </a>\r\n            <a class=\"pull-right pa10 text-center\" title=\"Reset\" data-toggle=\"modal\" data-target=\"#confirm-reset\" data-backdrop=\"static\" data-keyboard=\"false\"><i class=\"fa fa-trash-alt color-maroon fs14 radius-circle bg-white\"></i></a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row delivery-panel_body pa5\">\r\n        <div class=\"col-sm-12 overflow-y-60\">\r\n            <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                <ng-container *ngFor=\"let tdr of DelGroupForm.controls['DeliveryRequests']['controls']; let i = index;\">\r\n                    <div class=\"border-dash-dark radius-5 pa15 dr-wrapper mt5\" [ngClass]=\"setBlendClass(tdr.value, i)\">\r\n                        <div [formGroupName]=\"i\">\r\n                            <div class=\"row\">\r\n                                <!-- parent blend request  -->\r\n                                <div *ngIf=\"tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value\" class=\"col-sm-12 fs15\">\r\n\r\n                                    <a (click)=\"editBlendedSchedule(i,DelGroupForm)\" placement=\"right\" ngbTooltip=\"Edit Blended Requests\">\r\n                                        Blend&nbsp;<i class=\"fas fa-edit ml-2\"></i>\r\n                                    </a>\r\n\r\n                                    <a *ngIf=\"DoNotShowCancelICON(tdr.value)\" (click)=\"deleteSchedule({index:i,trip:DelGroupForm})\" placement=\"bottom\" ngbTooltip=\"Remove Blended Requests\" class=\"color-maroon pull-right ml30\">\r\n                                        <i class=\"fa fa-close\"></i>\r\n                                    </a>\r\n\r\n                                    <a *ngIf=\"tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value && DoNotShowCancelButton(tdr.value) && CheckSubDrStatus(tdr.value)\" class=\"ml5 pull-right\" placement=\"top\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\" style=\"color: #ff7575;\">\r\n                                        Cancel DS\r\n                                    </a>\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['JobId'].value > 0\">\r\n                                    <!-- non blend or parent blend-->\r\n                                    <ng-container *ngIf=\"(!tdr.get('IsBlendedRequest').value) || tdr.get('IsBlendedRequest').value && tdr.get('IsBlendedDrParent').value\">\r\n                                        {{tdr.controls['CustomerCompany'].value}} | {{tdr.controls['JobName'].value}},\r\n                                        {{tdr.controls['JobAddress'].value}} - {{tdr.controls['ProductType'].value}}\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PreLoadedFor']\"><i>Pre-Load</i></span>\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PostLoadedFor']\"><i>Post-Load</i></span>\r\n                                        <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['isRecurringSchedule'].value==true\"><i>Recurring</i></span>\r\n                                    </ng-container>\r\n\r\n                                    <!-- blend childs -->\r\n                                    <ng-container *ngIf=\"tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value\">\r\n                                        {{tdr.controls['ProductType'].value}}\r\n                                    </ng-container>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['JobId'].value == 0\">\r\n                                    <div class=\"row mt5\">\r\n                                        <div class=\"col-sm-5 form-group mb0\">\r\n                                            <label class=\"fs12\">TBD - {{tdr.controls['ProductType'].value}}</label>\r\n                                        </div>\r\n                                        <div class=\"col-sm-7 form-group mb0 text-right\">\r\n                                            <a (click)=\"createOnTheFlyLocation(tdr)\" *ngIf=\"isSupplierCompany\"><i class=\"fa fa-plus-circle fs14 ml5\"></i> New Location</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-1 text-center mt6 pl-0\" *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && !tdr.get('IsBlendedRequest').value && DoNotShowCancelICON(tdr.value)\">\r\n                                    <a (click)=\"deleteSchedule({index:i,trip:DelGroupForm})\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                                </div>\r\n                                <div class=\"col-sm-11\" *ngIf=\"tdr.controls['IsMarine'].value ==true\">\r\n                                    {{tdr.controls['DeliveryDateStartTime'].value}}\r\n                                    {{tdr.controls['Vessel'].value}} - {{tdr.controls['Berth'].value}}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row mt5\" *ngIf=\"tdr.controls['IsTBD'].value==true && checkScheduleEditStatus(tdr) == true\">\r\n                                <div class=\"col-md-6\">\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [placeholder]=\"'Customer (Optional)'\"\r\n                                                             [settings]=\"CustomerSettings\"\r\n                                                             [data]=\"TbdCustomerList[tdr.controls['Id'].value]\"\r\n                                                             (onSelect)=\"onCustomerSelect_TBD($event, tdr)\"\r\n                                                             (onDeSelect)=\"onCustomerDeSelect_TBD($event, tdr)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <ng-multiselect-dropdown formControlName=\"TBDLocations\" class=\"single-select\"\r\n                                                             [placeholder]=\"'Location'\"\r\n                                                             [settings]=\"SiteddlSettings\"\r\n                                                             [data]=\"TbdLocationList[tdr.controls['Id'].value]\"\r\n                                                             (onSelect)=\"onSiteSelect_TBD($event, tdr)\"\r\n                                                             (onDeSelect)=\"onSiteDeSelect_TBD($event)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-6 form-group mb0\">\r\n                                    <div class=\"input-group\">\r\n                                        <span class=\"f-bold mt7\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value>1\"><i>{{tdr.controls['ScheduleQuantityTypeText'].value}}</i></span>\r\n                                        <input type=\"number\" class=\"form-control\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1 ||tdr.controls['ScheduleQuantityType'].value==0\" formControlName=\"RequiredQuantity\" (change)=\"onDeliveryRequestChange(tdr);\"\r\n                                               [readonly]=\"!(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) || (tdr.controls['ScheduleQuantityType'].value>1) || (tdr.get('IsBlendedRequest').value)\" />\r\n                                        <span class=\"input-group-addon\" *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1\">\r\n                                            <span *ngIf=\"tdr.controls['UoM'].value==1; else litres\">G</span>\r\n                                            <ng-template #litres>L</ng-template>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div *ngIf=\"tdr.controls['RequiredQuantity'].invalid && (tdr.controls['RequiredQuantity'].dirty || tdr.controls['RequiredQuantity'].touched)\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['RequiredQuantity'].errors.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['RequiredQuantity'].errors?.max\">\r\n                                            Should not exceed max fill\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [class]=\"tdr.get('IsBlendedRequest').value? 'pntr-none subSectionOpacity' : ''\">\r\n                                        <select class=\"form-control\" [ngClass]=\"{'pntr-none':(tdr.controls['IsTBD'].value == false && (tdr.controls['DeliveryRequestFor'].value != 3 && tdr.controls['TankId'].value== null && tdr.controls['StorageId'].value== null))}\" formControlName=\"OrderId\" (change)=\"updateDrForm(tdr,$event);changeTerminal(tdr, $event)\"\r\n                                                [disabled]=\"(tdr.controls['DeliveryRequestFor'].value != 3 && tdr.controls['TankId'].value == null && tdr.controls['StorageId'].value == null) ? 'true' : null\"\r\n                                                [attr.readonly]=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined)?null:'true'\">\r\n                                            <option [ngValue]=\"null\">Select Order</option>\r\n                                            <ng-container *ngIf=\"!tdr.get('IsAdditive').value\">\r\n                                                <ng-container *ngFor=\"let order of OrderList[tdr.controls['JobId'].value.toString() + '_' + tdr.controls['ProductTypeId'].value.toString() + '_' + (tdr.controls['IsBlendedRequest'].value ? 1 : 0)]||[]\">\r\n                                                    <ng-container *ngIf=\"!tdr.controls['FuelType'].value || tdr.controls['IsBlendedRequest'].value\">\r\n                                                        <option [ngValue]=\"order.OrderId\">\r\n                                                            {{\r\n                                                                    order.PoNumber\r\n                                                            }}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngFor=\"let order of  TbdOrderList[tdr.controls['Id'].value]||[]\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['FuelType'].value\">\r\n                                                        <option [ngValue]=\"order.Id\" [selected]=\"order.Id==tdr.controls['OrderId'].value\">\r\n                                                            {{\r\n                                                                    order.Name\r\n                                                            }}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"tdr.controls['OrderId'].invalid && (tdr.controls['OrderId'].dirty || tdr.controls['OrderId'].touched)\">\r\n                                                    <option>No orders found </option>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <ng-container *ngIf=\"tdr.get('IsAdditive').value\">\r\n                                                <ng-container *ngFor=\"let additiveOrder of additiveOrders\">\r\n                                                    <option *ngIf=\"additiveOrder.JobId == tdr.get('JobId').value\" [ngValue]=\"additiveOrder.Id\" [selected]=\"additiveOrder.Id==tdr.controls['OrderId'].value\">\r\n                                                        {{additiveOrder.Name}}\r\n                                                    </option>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div *ngIf=\"tdr.controls['OrderId'].invalid && (tdr.controls['OrderId'].dirty || tdr.controls['OrderId'].touched)\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['OrderId'].errors.required\">\r\n                                            Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\" *ngIf=\"!this.DelGroupForm.controls['IsCommonPickup'].value && !tdr.controls['IsAdditive'].value\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"clearfix color-lightgrey col-sm-12 pa0\">\r\n                                        <div class=\"pull-left\">\r\n                                            Pickup From:\r\n                                            <span class=\"pr5\" *ngIf=\"tdr.controls['PickupLocationType'].value!=2; else location;\">\r\n                                                Terminal\r\n                                            </span>\r\n                                            <ng-template #location>\r\n                                                <span class=\"pr5\">\r\n                                                    Location\r\n                                                </span>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                        <div class=\"pull-left pr5\" *ngIf=\"tdr.controls['PickupLocationType'].value!=2; else bulkPlant;\">\r\n\r\n                                            {{tdr.controls['Terminal'].controls['Name'].value}}\r\n\r\n                                            <!-- <div *ngIf=\"tdr.controls['Terminal'].invalid && (tdr.controls['Terminal'].dirty || tdr.controls['Terminal'].touched)\">\r\n                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['Terminal'].controls['Name'].errors.required\">\r\n                            Required\r\n                        </label>\r\n                    </div> -->\r\n                                        </div>\r\n                                        <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                            <span class=\"pull-left pl5 pr5\">\r\n                                                {{tdr.controls['BulkPlant'].controls['SiteName'].value}}, {{tdr.controls['BulkPlant'].controls['City'].value}},\r\n                                                {{tdr.controls['BulkPlant'].controls['State'].controls['Code'].value}} {{tdr.controls['BulkPlant'].controls['ZipCode'].value}}\r\n                                            </span>\r\n                                            <!-- <div *ngIf=\"tdr.controls['BulkPlant'].invalid && (tdr.controls['BulkPlant'].dirty || tdr.controls['BulkPlant'].touched)\">\r\n                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"tdr.controls['BulkPlant'].invalid\">\r\n                            Required\r\n                        </label>\r\n                    </div> -->\r\n                                        </ng-template>\r\n                                        <span *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && (!tdr.get('IsBlendedRequest').value)\">\r\n                                            <a class=\"pull-left\" (click)=\"editPickupLocation(tdr)\" data-toggle=\"modal\" data-target=\"#pickup-location\"><i class=\"fa fa-edit fs18 ml5 mt2\"></i></a>\r\n                                        </span>\r\n                                        <span *ngIf=\"(tdr.controls['PostLoadedFor']==null || tdr.controls['PostLoadedFor']==undefined) && (!tdr.get('IsBlendedRequest').value)\">\r\n                                            <a class=\"pull-left color-maroon\" (click)=\"RemovePickupLocation(tdr)\" title=\"Remove pickup location\"><i class=\"fa fa-close ml5 mt2\"></i></a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- [class.mt25]=\"(tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\" -->\r\n                            <div class=\"row mt5\" *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-check form-check-inline float-left checkbox mt0 mb0\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckboxCommonBadge-{{i}}\" formControlName=\"IsCommonBadge\" (change)=\"setCommonBadgeForBlendGroup(tdr);\">\r\n                                        <label class=\"form-check-label\" for=\"CheckboxCommonBadge-{{i}}\">Common Badge #</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline float-right checkbox mt0 mb0\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [id]=\"'CheckboxFilldInvoke-'+i\" formControlName=\"IsFilldInvoke\" (change)=\"onDeliveryRequestChange(tdr)\">\r\n                                        <label class=\"form-check-label\" [for]=\"'CheckboxFilldInvoke-'+i\">TrueFill Inc. Compatible</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt5\" *ngIf=\"!tdr.controls['IsCommonBadge'].value && (!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i)))\">\r\n                                <div class=\"col-sm-4 form-group mb0 pr5\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #1\" formControlName=\"BadgeNo1\" (change)=\"setBadgeForBlendGroup(tdr, 1);\" />\r\n                                </div>\r\n                                <div class=\"col-sm-4 form-group mb0 pl10 pr10\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #2\" formControlName=\"BadgeNo2\" (change)=\"setBadgeForBlendGroup(tdr, 2);\" />\r\n                                </div>\r\n                                <div class=\"col-sm-4 form-group mb0 pl5\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Badge #3\" formControlName=\"BadgeNo3\" (change)=\"setBadgeForBlendGroup(tdr, 3);\" />\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\" class=\"row mt10\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <a (click)=\"viewNotes(tdr)\" class=\"font-bold\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapseDispatcher'+i\" [attr.aria-controls]=\"'collapseDispatcher'+i\" role=\"button\" [attr.aria-expanded]=\"false\">\r\n                                        Note <i class=\"fa fa mr10 \" [ngClass]=\" selectedViewNote == tdr.value.Id ? 'fa-chevron-up' : 'fa-chevron-down'\"> </i>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"collapse\" [attr.id]=\"'collapseDispatcher'+i\">\r\n                                <div class=\"form-group mb0\">\r\n                                    <textarea class=\"form-control\" formControlName=\"Notes\" placeholder=\"Dispatcher Note\" (change)=\"onDeliveryRequestChange(tdr);setNoteForBlendGroup(tdr);\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"!tdr.get('IsBlendedRequest').value || (tdr.get('IsBlendedRequest').value && !tdr.get('IsBlendedDrParent').value && isLastDrOfBlendGroup(tdr.value, i))\">\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-sm-10 form-group\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"Delivery-Level-PO#\">Delivery-Level PO#</label><br>\r\n                                            <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" id=\"Delivery-Level-PO#\" (change)=\"onDeliveryRequestChange(tdr);setDeliveryLevelPOForBlendGroup(tdr)\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"mt10\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"name\" class=\"form-check-label\">\r\n                                                    <span>Schedule Date</span>\r\n                                                </label>\r\n                                                <input type=\"text\" placeholder=\"Select Date\" formControlName=\"SelectedDate\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"onDeliveryRequestChange(tdr);setScheduleSelectedDate($event,tdr) \"/> \r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label class=\"form-check-label\">Start Time</label>\r\n                                                <input type=\"text\" placeholder=\"Start Time\"formControlName=\"ScheduleStartTime\" class=\"form-control\"  myTimePicker [format]=\"'hh:mm A'\" (onTimeChange)=\"onDeliveryRequestChange(tdr); setScheduleStartTime($event,tdr);\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label class=\"form-check-label\">End Time</label>\r\n                                                <input type=\"text\" placeholder=\"End Time\" formControlName=\"ScheduleEndTime\" class=\"form-control\"  myTimePicker [format]=\"'hh:mm A'\" (onTimeChange)=\" onDeliveryRequestChange(tdr); setScheduleEndTime($event,tdr);\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mt10\">\r\n                                <div class=\"col-sm-12\" style=\"text-align: right;\">\r\n                                    <a *ngIf=\"!tdr.get('IsBlendedRequest').value && tdr.controls['GroupParentDRId'].value!=''\" (click)=\"AddSubDR(tdr)\" data-toggle=\"modal\" data-target=\"#addsub-dr\" style=\"color: #188c90;\">\r\n                                        Add Sub DR(s)\r\n                                    </a>\r\n                                    <a *ngIf=\"!tdr.get('IsBlendedRequest').value && DoNotShowCancelButton(tdr.value) && CheckSubDrStatus(tdr.value)\" class=\"ml5\" placement=\"top\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\" style=\"color: #ff7575;\">\r\n                                        Cancel DS\r\n                                    </a>\r\n                                </div>\r\n                                <!-- <div class=\"col-sm-6\" *ngIf=\"DoNotShowCancelButton(tdr) && CheckSubDrStatus(tdr.value)\">\r\n            <button class=\"btn btn-default\" style=\"float:right\" placement=\"right\" ngbTooltip=\"cancel DS\" container=\"body\" (click)=\"CancelDS(tdr);\">\r\n                <i class=\"fas fa-remove fs13\"></i>\r\n                Cancel DS\r\n            </button>\r\n        </div> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" formControlName=\"Carrier\" class=\"form-control\" placeholder=\"Carrier\" (change)=\"onDeliveryGroupChange();\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" formControlName=\"SupplierSource\" placeholder=\"Supplier Source\" class=\"form-control\" (change)=\"onDeliveryGroupChange();\" />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"mt10\" *ngIf=\"this.DelGroupForm.controls['IsCommonBadge'].value\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 pr5\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom placeholder=\"Badge #1\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 pr10 pl10\">\r\n                        <div class=\"form-group mb5 \">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge #2\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 pl5\">\r\n                        <div class=\"form-group mb5 \">\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge #3\" (change)=\"onDeliveryGroupChange();\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--*ngIf=\"this.DelGroupForm.controls['IsCommonBadge'].value\"-->\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group mb0\">\r\n                            <textarea class=\"form-control\" formControlName=\"RouteInfo\" placeholder=\"Common Note\" (change)=\"onDeliveryGroupChange();\"></textarea>\r\n                            <div *ngIf=\"DelGroupForm.controls['RouteInfo'].invalid && (DelGroupForm.controls['RouteInfo'].dirty || DelGroupForm.controls['RouteInfo'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['RouteInfo'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control timepicker\" formControlName=\"StartTime\" myTimePicker [format]=\"'hh:mm A'\" placeholder=\"Start Time\" (onTimeChange)=\"DelGroupForm.controls['StartTime'].setValue($event);\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['StartTime'].invalid && (DelGroupForm.controls['StartTime'].dirty || DelGroupForm.controls['StartTime'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['StartTime'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"StartDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" placeholder=\"Start Date\" [minDate]=\"MinCalendarDate\" [maxDate]=\"MaxCalendarDate\"\r\n                                   (onDateChange)=\"setSelectedDate($event);\" autocomplete=\"off\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['StartDate'].invalid && (DelGroupForm.controls['StartDate'].dirty || DelGroupForm.controls['StartDate'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['StartDate'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group mb5\">\r\n                            <input type=\"text\" formControlName=\"EndTime\" myTimePicker [format]=\"'hh:mm A'\" placeholder=\"End Time\" class=\"form-control timepicker\" (onTimeChange)=\"DelGroupForm.controls['EndTime'].setValue($event);\" />\r\n                            <div *ngIf=\"DelGroupForm.controls['EndTime'].invalid && (DelGroupForm.controls['EndTime'].dirty || DelGroupForm.controls['EndTime'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['EndTime'].errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 mt10\">\r\n                    <div class=\"float-left mt5\" *ngIf=\"!this.DelGroupForm.controls['IsPreLoadInfo'].value\">\r\n                        <!--<label>\r\n                    <input type=\"checkbox\" formControlName=\"IsCommonPickup\" (change)=\"onCommonPickupChkChange()\" />Common Pick-up Location\r\n                </label>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"comm-pick-Ckbox1\" formControlName=\"IsCommonPickup\" (change)=\"onCommonPickupChkChange()\">\r\n                            <label class=\"form-check-label\" for=\"comm-pick-Ckbox1\">Common Pick-up Location</label>\r\n                        </div>\r\n                    </div>\r\n                    <button *ngIf=\"!this.DelGroupForm.controls['IsPreLoadInfo'].value\" class=\"btn btn-default btn-sm float-left ml10\" (click)=\"editPickupLocation(null)\"\r\n                            [disabled]=\"!this.DelGroupForm.controls['IsCommonPickup'].value\" data-toggle=\"modal\" #idCommonPickUpBtn data-target=\"#pickup-location\">\r\n                        <i class=\"fas fa-map-marker-alt\"></i> Choose Pick-up\r\n                    </button>\r\n                    <div class=\"pr5 clearboth\">\r\n                        <div *ngIf=\"DelGroupForm.controls['PickupLocationType'].value!=2; else bulkPlant;\">\r\n                            {{DelGroupForm.controls['Terminal']['controls'].Name.value}}\r\n                            <div *ngIf=\"DelGroupForm.controls['Terminal'].invalid && (DelGroupForm.controls['Terminal'].dirty || DelGroupForm.controls['Terminal'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <ng-template #bulkPlant>\r\n                            {{DelGroupForm.controls['BulkPlant']['controls'].SiteName.value}}  {{DelGroupForm.controls['BulkPlant']['controls'].City.value}}\r\n                            {{DelGroupForm.controls['BulkPlant']['controls'].State['controls'].Code.value}} {{DelGroupForm.controls['BulkPlant']['controls'].ZipCode.value}}\r\n                            <div *ngIf=\"DelGroupForm.controls['BulkPlant'].invalid && (DelGroupForm.controls['BulkPlant'].dirty || DelGroupForm.controls['BulkPlant'].touched)\">\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"DelGroupForm.controls['BulkPlant'].invalid\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-sm-12 text-right mt15\">\r\n            <!--<button type=\"button\" class=\"btn btn-lg\" (click)=\"cancelDeliveryGroupChanges()\">Cancel</button>-->\r\n            <button type=\"button\" [disabled]=\"!validStartDate\" *ngIf=\"DelGroupForm.controls['DeliveryGroupPrevStatus'].value!=2\" class=\"btn btn-default btn-lg\" (click)=\"draftDeliveryGroup()\">Save</button>\r\n            <button type=\"button\" [disabled]=\"DelGroupForm.invalid || !validStartDate\" class=\"btn btn-success btn-lg\" (click)=\"publishDeliveryGroup()\"><i class=\"fas fa-paper-plane mr5 fs13\"></i> Publish</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<div class=\"modal fade confirm-box\" id=\"confirm-reset\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Reset Load?</h2>\r\n                <p class=\"pb10\">Are you sure?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteDeliveryGroup(true)\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style=\"z-index: 1051!important;\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            Terminal &nbsp;\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            Bulk Plant\r\n                        </div>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTerminalSearched($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTerminalSearched($event);\" (blur)=\"validateTerminal(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" />\r\n\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>{{SearchTerminalKey.length > 0 ? \"Matching terminal\" : \"Terminal\"}} not found for Fuel Type : {{SearchTerminalFuelType}}</small></li>\r\n                                    <li *ngFor=\"let terminal of Terminals;\" (click)=\"onTerminalSelected(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                                <!--<div class=\"ng-autocomplete\">\r\n                                    <ng-autocomplete #terminal_AutoComplete\r\n                                                     [data]=\"Terminals\"\r\n                                                     [searchKeyword]=\"keyword\"\r\n                                                     [initialValue]=\"initialValue\"\r\n                                                     placeholder=\"Terminal Name\"\r\n                                                     (inputChanged)=\"onTerminalSearched($event)\"\r\n                                                     (selected)='onTerminalSelected($event)'\r\n                                                     [itemTemplate]=\"itemTemplate\"\r\n                                                     [notFoundTemplate]=\"notFoundTemplate\">\r\n                                    </ng-autocomplete>\r\n\r\n                                    <ng-template #itemTemplate let-item>\r\n                                        <a [innerHTML]=\"item.Name\"></a>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                        <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                </div>-->\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deletePickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur($event)\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup);\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip($event)\" (change)=\"onDeliveryRequestChange(SelectedDRForEditPickup)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country/Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"OnCountryChanged($event)\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnPickupClose\">Cancel</button>\r\n                    <button type=\"button\" *ngIf=\"IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocationForBlend()\" class=\"btn btn-primary\">Add</button>\r\n                    <button type=\"button\" *ngIf=\"!IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-delete-dr\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-dr\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-dr\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\" id=\"deleteDrHeading\">Driver is on the way to job.</h2>\r\n                <p class=\"pb10\">Are you sure?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteDeliveryRequestFromLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteDeliveryRequestFromLoad()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"addsub-dr\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DR(s)</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!--Spilt DR Logic-->\r\n                    <ng-container>\r\n                        <div *ngFor=\"let spiltDR of addSubDrModel.SpiltDRs;let i = index;\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                            <span>Quantity Type</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"spiltDR.ScheduleQuantityType\" name=\"ScheduleQuantityType_{{i}}\" #ScheduleQuantityType=\"ngModel\">\r\n                                            <option [id]=\"1\" [value]=\"1\">\r\n                                                Quantity\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"name\" class=\"mr5\">\r\n                                            <span>Required Quantity</span>\r\n                                            <span *ngIf=\"addSubDrModel?.UoM==1; else litres\"> (G)</span>\r\n                                            <ng-template #litres> (L)</ng-template>\r\n                                        </label>\r\n                                        <input type=\"text\" class=\"form-control\" name=\"SpiltRequiredQuantity_{{i}}\" [(ngModel)]=\"spiltDR.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-1\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeItem(i)\"></a></div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addEmptySubDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeSubDrPanel\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onSubDrCreate()\" class=\"btn btn-primary btn-lg\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-group-cancel-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-group-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-group-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"CancelDSGroupDriverSchedule()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"RejectDSGroupDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Cancel DS Infomration-->\r\n<button type=\"button\" id=\"btn-group-cancel-ds-info\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-group-cancel-ds-info\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-group-cancel-ds-info\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Delivery Schedule Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" id=\"confirm-group-cancel-ds-dismiss\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\" *ngIf=\"cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                <thead>\r\n                                    <tr class=\"f-bold\">\r\n                                        <th><input id=\"selectAllDSBGroupCancel\" type=\"checkbox\" class=\"form-check-input\" (change)=\"checkAll()\" /></th>\r\n                                        <th>Driver Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Current State</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let dsInfo of cancelDSDeliveryScheduleViewModel;let j = index\">\r\n                                        <td><input type=\"checkbox\" class=\"form-check-input\" id=\"dsCheck{{j}}\" (change)=\"checkDSChange(j,dsInfo)\" [(ngModel)]='dsInfo.IsChecked'></td>\r\n                                        <td>{{dsInfo.DriverName}}</td>\r\n                                        <td>{{dsInfo.Quantity}}</td>\r\n                                        <td>{{dsInfo.FuelType}}</td>\r\n                                        <td>{{dsInfo.CurrentState}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <button type=\"button\" (click)=\"CancelSelectedDS()\" class=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- blend dr modal -->\r\n<div id=\"_openBlendModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#_blendModal\"></div>\r\n<div class=\"modal fade\" id=\"_blendModal\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\"\r\n     aria-labelledby=\"blendModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header py-1\">\r\n                <h4 class=\"modal-title\">Blend Details</h4>\r\n                <button type=\"button\" class=\"close mt-n2\" data-dismiss=\"modal\" (click)=\"IsPickupForBlendRequest=false\">&times;</button>\r\n            </div>\r\n\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\" *ngIf=\"DelGroupForm.get('DeliveryRequests') && DelGroupForm.get('DeliveryRequests').value && DelGroupForm.get('DeliveryRequests').value.length>0\">\r\n                <!-- parent/total blend quantity -->\r\n                <div class=\"row\" *ngIf=\"blendRequestForm.get('BlendedRequests').value && blendRequestForm.get('BlendedRequests').value.length>0\">\r\n                    <div class=\"col-sm-3\">\r\n                        <label class=\"form-check-label\">Total Quantity</label>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input type=\"number\" name=\"_totalBlendedQuantity\" [(ngModel)]=\"totalBlendedQuantity\" #_totalBlendedQuantity=\"ngModel\"\r\n                                       numberWithDecimal class=\"form-control\" placeholder=\"Total Quantity\" (input)=\"onBlendTotalQuantityChange($event.target.value)\" required />\r\n                                <div class=\"input-group-addon\">\r\n                                    <span *ngIf=\"blendRequestForm.get('BlendedRequests').value[0].UoM==1; else litres\">G</span>\r\n                                    <ng-template #litres>L</ng-template>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"color-maroon\"\r\n                                 *ngIf=\"_totalBlendedQuantity.errors\">\r\n                                <div>Total quantity is required</div>\r\n                            </div>\r\n\r\n                            <div class=\"color-maroon\"\r\n                                 *ngIf=\"!isTankMaxFillValid()\">\r\n                                <div>Required quantity is more than Max Fill.</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"form-check-label fs18\">Products</label>\r\n                    <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0)\"></a>\r\n                </div>\r\n\r\n                <ng-container *ngIf=\"blendRequestForm.get('BlendedRequests').value && blendRequestForm.get('BlendedRequests').value.length>0\">\r\n                    <form [formGroup]=\"blendRequestForm\">\r\n                        <ng-container *ngFor=\"let blendedRequest of blendRequestForm.get('BlendedRequests')['controls']; let x = index;let first = first;let last = last;\">\r\n\r\n                            <ng-container formArrayName=\"BlendedRequests\">\r\n                                <ng-container [formGroupName]=\"x\">\r\n                                    <!-- additive label -->\r\n                                    <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value && (first || !blendRequestForm.get('BlendedRequests')['controls'][+x - 1].get('IsAdditive').value)\">\r\n\r\n                                        <!-- validation -->\r\n                                        <div class=\"\" *ngIf=\"blendRequestForm.valid\">\r\n                                            <div *ngIf=\"totalBlendedQuantity && blendRequestForm.valid && blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2 mt-2\">Sum of entered quantity should match with {{totalBlendedQuantity}}.</div>\r\n                                        </div>\r\n\r\n                                        <div class=\"row mt-3\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <label class=\"form-check-label fs18\">Additive</label>\r\n                                                <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, x, true)\"></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-4\">\r\n                                            <div>\r\n                                                <!-- order ddl -->\r\n                                                <select *ngIf=\"!blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\"\r\n                                                        (change)=\"orderChangedForBlendRequest($event.target.value, blendedRequest)\">\r\n                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                    <option *ngFor=\"let order of getUnUsedOrdersForBlendedRequest(blendedRequest)\" [value]=\"order.OrderId\">\r\n                                                        {{order.PoNumber}}\r\n                                                    </option>\r\n                                                </select>\r\n\r\n                                                <!-- additive order ddl -->\r\n                                                <select *ngIf=\"blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\">\r\n\r\n                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                    <ng-container *ngFor=\"let additiveOrder of getUnUsedBlendOrders(blendedRequest.get('OrderId').value)\">\r\n                                                        <option *ngIf=\"additiveOrder.JobId == blendedRequest.get('JobId').value\" [ngValue]=\"additiveOrder.Id\" [selected]=\"additiveOrder.Id==blendedRequest.controls['OrderId'].value\">\r\n                                                            {{additiveOrder.Name}}\r\n                                                        </option>\r\n                                                    </ng-container>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\" *ngIf=\"blendedRequest.get('OrderId').touched && blendedRequest.get('OrderId').errors\">\r\n                                                <div>Order is required </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- required quantity -->\r\n                                        <div class=\"col-sm-3\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                           numberWithDecimal class=\"form-control\" placeholder=\"Quantity\" (change)=\"onDeliveryRequestChange(blendedRequest);\" (input)=\"blendDrQuantityChanged($event.target.value,x);\" />\r\n                                                    <div class=\"input-group-addon\">\r\n                                                        <span *ngIf=\"blendedRequest.controls['UoM'].value==1; else litres\">G</span>\r\n                                                        <ng-template #litres>L</ng-template>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"color-maroon\"\r\n                                                     *ngIf=\"((blendRequestForm.touched && blendedRequest.get('IsAdditive').value) || blendedRequest.get('RequiredQuantity').touched || blendedRequest.get('QuantityInPercent').touched) && blendedRequest.get('RequiredQuantity').errors\">\r\n                                                    <div> Quantity is required </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-sm-3\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"number\" formControlName=\"QuantityInPercent\"\r\n                                                           numberWithDecimal class=\"form-control\"\r\n                                                           placeholder=\"Quantity In Percent\" (input)=\"blendDrPercentChanged($event.target.value,x);\" />\r\n                                                    <div class=\"input-group-addon\">%</div>\r\n                                                </div>\r\n\r\n                                                <div class=\"color-maroon\"\r\n                                                     *ngIf=\"(blendedRequest.get('QuantityInPercent').touched || blendedRequest.get('RequiredQuantity').touched) && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                    <div>Invalid percentage</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <!-- remove row -->\r\n                                        <div class=\"col-sm-2 input-group\">\r\n                                            <a type=\"button\" title=\"Remove\" class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\" (click)=\"addRemoveBlendedProduct(false, x)\"></a>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <!-- pickup loc -->\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12 mt-1\" *ngIf=\"DelGroupForm.controls['DeliveryRequests']['controls'].length>0 && !DelGroupForm.controls['DeliveryRequests']['controls']['IsCommonPickup']?.value && !blendedRequest.get('IsAdditive').value && !DelGroupForm.controls['DeliveryRequests']['controls'][DrForEditBlendedRequestIndex].get('IsCommonPickupForBlend').value\">\r\n                                            <div class=\"input-group\">\r\n                                                <div class=\"pull-left\">\r\n                                                    <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                    <span class=\"pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                    <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                                </div>\r\n                                                <div class=\"pull-left pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                    {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                    <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                    <span class=\"pull-left pl5 pr5\">\r\n                                                        {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}}, {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                        {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                    </span>\r\n                                                    <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                                <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                    <a class=\"float-left\" (click)=\"IsPickupForBlendRequest=true;editPickupLocationForBlend(x);\" data-toggle=\"modal\" data-target=\"#pickup-location\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                                </span>\r\n                                                <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                    <a (click)=\"RemoveBlendPickupLocation(blendedRequest)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"float-left color-maroon\"><i class=\"fa fa-close fs18 ml-2 mt2\"></i></a>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- additive label -->\r\n                                    <ng-container *ngIf=\"(last && !blendedRequest.get('IsAdditive').value)\">\r\n\r\n                                        <!-- validations -->\r\n                                        <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                            <div *ngIf=\"totalBlendedQuantity && blendRequestForm.valid && blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2 mt-2\">Sum of entered quantity should match with {{totalBlendedQuantity}}.</div>\r\n                                        </div>\r\n\r\n                                        <div class=\"row mt-3\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <label class=\"form-check-label fs18\">Additive</label>\r\n                                                <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, x, true)\"></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n\r\n                        <!-- validations -->\r\n                        <ng-container *ngIf=\"blendRequestForm.valid\">\r\n                            <div class=\"mt10\">\r\n                                <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length<2\" class=\"alert alert-danger mb-2 p-2\">Please add at least two rows.</div>\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                        <div class=\"text-right\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-lg\" (click)=\"IsPickupForBlendRequest=false\">Cancel</button>\r\n                            <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"blendRequestForm.invalid || blendRequestForm.get('BlendedRequests')['controls'].length<2 || !isBlendedRequestQuantityValid() || !isTankMaxFillValid()\" (click)=\"submitBlendedForm()\" data-dismiss=\"modal\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DeliveryRequestViewModel } from '../../models/DispatchSchedulerModels';\r\nimport { Subject } from 'rxjs';\r\nimport { DropdownItemExt, DropdownItem } from '../../../statelist.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DispatcherService } from '../../service/dispatcher.service';\r\nimport { CarrierService } from '../../service/carrier.service';\r\nimport { Declarations } from '../../../declarations.module';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { BrokeredDrCarrierStatus, TfxModule } from 'src/app/app.enum';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-assigned-by-me',\r\n    templateUrl: './assigned-by-me.component.html',\r\n    styleUrls: ['./assigned-by-me.component.scss']\r\n})\r\nexport class AssignedByMeComponent implements OnInit, OnDestroy {\r\n    @Input() regionId: string;\r\n    @Input() SelectedDate: string;\r\n    public MustGoDrs: any = [];\r\n    public ShouldGoDrs: any = [];\r\n    public CouldGoDrs: any = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    public customerList: any = [];\r\n    public locationList: any = [];\r\n    public priorityList: any = [];\r\n    public SelectedLocations: any = [];\r\n    public SelectedCustomers: any = [];\r\n    public SelectedPriorities: any = [];\r\n    public FilterForm: FormGroup;\r\n    public showMustGo: boolean = true;\r\n    public showShouldGo: boolean = true;\r\n    public showCouldGo: boolean = true;\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public brokeredDrRequestedByMe: DeliveryRequestViewModel[] = [];\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public IsLoading: boolean = false;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private sbService: ScheduleBuilderService, private dataService: DataService, private carrierService: CarrierService) { }\r\n\r\n    ngOnInit() {\r\n        this.priorityList = LoadPriorities;\r\n\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.initializeFilterForm();\r\n        this.initializeMustGo();\r\n        this.initializeShouldGo();\r\n        this.initializeCouldGo();\r\n        this.GetFilters();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    public initializeFilterForm() {\r\n        this.FilterForm = this.fb.group({\r\n            SelectedCustomers: this.fb.control([]),\r\n            SelectedLocations: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    setGridData() {\r\n        this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n        this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n        this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        this.getCustomers();\r\n        this.getLocations();\r\n    }\r\n\r\n    getCustomers() {\r\n        this.customerList = this.brokeredDrRequestedByMe.map(item => {\r\n            const customer = new DropdownItemExt();\r\n\r\n            customer.Id = item.CustomerCompany;\r\n            customer.Name = item.CustomerCompany;\r\n\r\n            return customer;\r\n        });\r\n        this.customerList = this.customerList.filter((loc, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n        });\r\n    }\r\n\r\n    getLocations() {\r\n        this.locationList = this.brokeredDrRequestedByMe.map(item => {\r\n            const location = new DropdownItem();\r\n\r\n            location.Id = item.JobId;\r\n            location.Name = item.JobName;\r\n\r\n            return location;\r\n        });\r\n        this.locationList = this.locationList.filter((loc, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n        });\r\n    }\r\n\r\n    public recallBrokeredDrRequest(delReq: DeliveryRequestViewModel) {\r\n        this.requestToUpdate = Object.assign({}, delReq);\r\n        let element = document.getElementById(\"recallBrokeredDrBtn\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    onCustomerChange() {\r\n        this.SelectedCustomers = this.FilterForm.get('SelectedCustomers').value;\r\n        var selectedCustomers = this.SelectedCustomers.map(t => t.Name);\r\n        if (this.SelectedCustomers.length > 0) {\r\n            this.locationList = this.brokeredDrRequestedByMe.filter(t => selectedCustomers.some(t1 => t1 == t.CustomerCompany)).map(item => {\r\n                const location = new DropdownItem();\r\n\r\n                location.Id = item.JobId;\r\n                location.Name = item.JobName;\r\n\r\n                return location;\r\n            });\r\n            this.locationList = this.locationList.filter((loc, i, arr) => {\r\n                return arr.indexOf(arr.find(t => t.Id === loc.Id)) === i;\r\n            });\r\n        }\r\n        else {\r\n            this.getLocations();\r\n        }\r\n    }\r\n\r\n    recallBrokeredDr(dr: any): void {\r\n        this.IsLoading = true;\r\n        this.sbService.recallDrFromCarrier(dr).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode != 1) {\r\n                dr.CarrierStatus = BrokeredDrCarrierStatus.Recalled;\r\n                dr.Compartments = dr.Compartments || [];\r\n                dr['WindowMode'] = 1;\r\n                dr['QueueMode'] = 1;\r\n\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                Declarations.hideModal('#recallBrokeredDrModal');\r\n                this.dataService.setRestoreDeletedRequestSubject([dr]);\r\n                this.getBrokeredDrAssignedByMe(this.regionId, this.SelectedDate);\r\n                this.dataService.setDrQueueChangesForFilter(true);\r\n            } else {\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    getBrokeredDrAssignedByMe(regionId: string, selectedDate?: string) {\r\n        this.IsLoading = true;\r\n        this.carrierService.getBrokeredDrAssignedByMe(regionId, selectedDate).subscribe(drs => {\r\n            this.IsLoading = false;\r\n            this.brokeredDrRequestedByMe = drs || [];\r\n            this.getCustomers();\r\n            this.getLocations();\r\n            this.ApplyFilters(true);\r\n        });\r\n    }\r\n\r\n    onLocationChange() {\r\n        this.SelectedLocations = this.FilterForm.get('SelectedLocations').value;\r\n    }\r\n\r\n    onPriorityChange() {\r\n        this.SelectedPriorities = this.FilterForm.get('SelectedPriorities').value;\r\n    }\r\n\r\n    openAssignedByMePanel() {\r\n        this.getBrokeredDrAssignedByMe(this.regionId, this.SelectedDate);\r\n    }\r\n\r\n    ResetFilters() {\r\n        this.SelectedCustomers = [];\r\n        this.SelectedLocations = [];\r\n        this.SelectedPriorities = [];\r\n        this.initializeFilterForm();\r\n        this.showCouldGo = this.showMustGo = this.showShouldGo = true;\r\n        this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n        this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n        this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        this.SaveFilters();\r\n    }\r\n\r\n    ApplyFilters(isFromGetFilter: boolean = false) {\r\n        this.showMustGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 1);\r\n        this.showShouldGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 2);\r\n        this.showCouldGo = this.SelectedPriorities.length == 0 || this.SelectedPriorities.some(t => t.Id == 3);\r\n\r\n\r\n        if (this.SelectedCustomers.length > 0) {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3 && this.SelectedCustomers.some(t1 => t1.Id == t.CustomerCompany));\r\n            if (this.SelectedLocations.length > 0) {\r\n                this.MustGoDrs = this.MustGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n                this.ShouldGoDrs = this.ShouldGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n                this.CouldGoDrs = this.CouldGoDrs.filter(t => this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            }\r\n        }\r\n        else if (this.SelectedLocations.length > 0) {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3 && this.SelectedLocations.some(t1 => t1.Id == t.JobId));\r\n        }\r\n        else {\r\n            this.MustGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 1);\r\n            this.ShouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 2);\r\n            this.CouldGoDrs = this.brokeredDrRequestedByMe.filter(t => t.Priority == 3);\r\n        }\r\n        if (!isFromGetFilter) {\r\n            this.SaveFilters();\r\n        }\r\n    }\r\n\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.AssignedByMeDeliveryRequests).subscribe(res => {\r\n            if (res && res.length > 0) {\r\n                var filterData = JSON.parse(res);\r\n                this.FilterForm.patchValue(filterData);\r\n                this.SelectedCustomers = filterData.SelectedCustomers;\r\n                this.SelectedLocations = filterData.SelectedLocations;\r\n                this.SelectedPriorities = filterData.SelectedPriorities;\r\n                this.getCustomers();\r\n                this.getLocations();\r\n                this.ApplyFilters(true);\r\n            }\r\n            else {\r\n                this.setGridData();\r\n            }\r\n        });\r\n    }\r\n\r\n    public SaveFilters() {\r\n        var filterData = this.FilterForm.value;\r\n        var filterModel = JSON.stringify(filterData);\r\n        this.dispatcherService.postFiltersData(TfxModule.AssignedByMeDeliveryRequests, filterModel).subscribe(res => {\r\n            if (res) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    initializeMustGo() {\r\n\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtMustGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'MustGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            fixedHeader: false,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeCouldGo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtCouldGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'CouldGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            fixedHeader: false,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeShouldGo() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtShouldGoOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'ShouldGo', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            fixedHeader: false,\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n    }\r\n}\r\n","<button id=\"btn-assignedByMe\" type=\"button\" class=\"btn btn-link pa0 fs13\" data-target=\"divAssignedByMe\" (click)=\"openAssignedByMePanel();\" onclick=\"slidePanel('#divAssignedByMe','80%')\"> <i class=\"fa fa-user mt3 pull-left mr-3\"></i> Assigned By Me</button>\r\n\r\n<div class=\"dip-test-container\">\r\n    <div class=\"side-panel pl5 pr5\" id=\"divAssignedByMe\">\r\n        <div class=\"side-panel-wrapper p-3\">\r\n            <div class=\"mb-2\">\r\n                <a class=\"close-panel float-left\" onclick=\"closeSlidePanel();\">\r\n                    <i class=\"fa fa-close fs18\"></i>\r\n                </a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Assigned By Me</h3>\r\n            </div>\r\n            <div class=\"card shadow p-3\">\r\n                <div class=\"row mr15\" [formGroup]=\"FilterForm\">\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Customer'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedCustomers']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"customerList\"\r\n                                                 (onSelect)=\"onCustomerChange()\" (onDeSelect)=\"onCustomerChange()\" (onSelectAll)=\"onCustomerChange()\" (onDeSelectAll)=\"onCustomerChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Location'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedLocations']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"locationList\"\r\n                                                 (onSelect)=\"onLocationChange()\" (onDeSelect)=\"onLocationChange()\" (onSelectAll)=\"onLocationChange()\" (onDeSelectAll)=\"onLocationChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Priority'\"\r\n                                                 [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                 [settings]=\"multiDropdownSettings\"\r\n                                                 [data]=\"priorityList\"\r\n                                                 (onSelect)=\"onPriorityChange()\" (onDeSelect)=\"onPriorityChange()\" (onSelectAll)=\"onPriorityChange()\" (onDeSelectAll)=\"onPriorityChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <button type=\"button\" id=\"apply\" (click)=\"ApplyFilters();\" class=\"btn btn-primary mr-2\">\r\n                            Filter\r\n                        </button>\r\n                        <button type=\"button\" id=\"reset\" (click)=\"ResetFilters();\" class=\"btn btn-link\">\r\n                            Clear Filters\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"body-panel p-0 pr-2 mt-2\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"IsLoading\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\" id=\"grid-view\">\r\n                        <div *ngIf=\"showMustGo == true\">\r\n                            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \">Must Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                                            <table id=\"table-mustgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"MustGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of MustGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"MustGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"showShouldGo == true\">\r\n                            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\">Should Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                                            <table id=\"table-shouldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"ShouldGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of ShouldGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"ShouldGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"showCouldGo == true\">\r\n                            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\">Could Go</h4>\r\n                            <div class=\"well bg-white shadow-sm border pr pb0\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                                            <table id=\"table-couldgo\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"Customer\">Customer Name</th>\r\n                                                        <th data-key=\"Loc\">Location Address</th>\r\n                                                        <th data-key=\"Product\">Product</th>\r\n                                                        <th data-key=\"Quantity\">Requested Quantity</th>\r\n                                                        <th data-key=\"RW\">Retain Window</th>\r\n                                                        <th data-key=\"CI\">Current Inventory</th>\r\n                                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                                        <th data-key=\"Status\">Status</th>\r\n                                                        <th data-key=\"CR\">Carrier Rejected</th>\r\n                                                        <th data-key=\"CC\">Current Carrier</th>\r\n                                                        <th data-key=\"UC\">Upcoming Carrier</th>\r\n                                                        <th data-key=\"Recal\">Recall</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody *ngIf=\"CouldGoDrs?.length > 0\">\r\n                                                    <tr *ngFor=\"let row of CouldGoDrs\">\r\n                                                        <td>{{row.CustomerCompany}}</td>\r\n                                                        <td>{{row.JobName}}, {{row.JobAddress}}, {{row.JobCity}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">\r\n                                                            {{row.ProductType}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">\r\n                                                            {{row.BlendedProductName }}, {{row.AdditiveProductName}}\r\n                                                        </td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==false\">{{row.RequiredQuantity > 0 ? row.RequiredQuantity : row.ScheduleQuantityTypeText}} {{row.RequiredQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td *ngIf=\"row.IsBlendedDrParent==true\">{{row.TotalBlendedQuantity > 0 ? row.TotalBlendedQuantity : row.ScheduleQuantityTypeText}} {{row.TotalBlendedQuantity > 0 ?  (row.UoM == 1 ? 'G' : 'L') : ''}}</td>\r\n                                                        <td>{{row.DeliveryWindow != '' && row.DeliveryWindow != null ?row.DeliveryWindow:\"--\"}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory !='--'\">{{row.CurrentInventory}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td *ngIf=\"row.CurrentInventory =='--'\">{{row.CurrentInventory}}</td>\r\n                                                        <td>{{row.Ullage}} {{row.UoM ==2?'L':'G'}}</td>\r\n                                                        <td>\r\n                                                            <div [ngSwitch]=\"true\">\r\n                                                                <div *ngSwitchCase=\"row.Status == 3\"><b>Schedule Created</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status == 5\"><b>Draft</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 2\"><b>Accepted</b></div>\r\n                                                                <div *ngSwitchCase=\"row.Status != 3 && row.Status != 5 && row.CarrierStatus == 3\"><b>Rejected</b></div>\r\n                                                                <div *ngSwitchDefault><b>Pending</b></div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{{row.CarrierRejected != '' && row.CarrierRejected != null ? row.CarrierRejected : \"--\"}}</td>\r\n                                                        <td>{{row.CurrentCarrier != '' && row.CurrentCarrier != null ? row.CurrentCarrier : \"--\"}}</td>\r\n                                                        <td>{{row.UpcomingCarrier != '' && row.UpcomingCarrier != null ? row.UpcomingCarrier : \"--\"}}</td>\r\n                                                        <td>\r\n                                                            <a *ngIf=\"row.Status != 3\" class=\"fs12 color-black\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Recall this delivery request\" (click)=\"recallBrokeredDrRequest(row)\"><i class=\"fas fa-undo-alt fs13 mr5 ml5\"></i></a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody *ngIf=\"CouldGoDrs?.length == 0\">\r\n                                                    <tr>\r\n                                                        <td colspan=\"12\" class=\"no-data-available text-center\">No data available</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- recall brokered dr start -->\r\n<div id=\"recallBrokeredDrBtn\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#recallBrokeredDrModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"recallBrokeredDrModal\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Recall Brokered Delivery Request?</h2>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6 form-group\">\r\n                        <label *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">\r\n                            {{requestToUpdate?.ProductType}}\r\n                        </label>\r\n                        <label *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">\r\n                            {{requestToUpdate.BlendedProductName}}, {{requestToUpdate.AdditiveProductName}}\r\n                        </label>\r\n                        <label class=\"mb10 fs10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </label>\r\n                    </div>\r\n                    <div class=\"col-sm-6 form-group\">\r\n                        <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                        <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                            <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                        </div>\r\n                        <ng-template #quantity>\r\n                            <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                            <ng-template #litres>(L)</ng-template>\r\n                            <div *ngIf=\"requestToUpdate.IsBlendedDrParent==false\">{{requestToUpdate?.RequiredQuantity}}</div>\r\n                            <div *ngIf=\"requestToUpdate.IsBlendedDrParent==true\">{{requestToUpdate?.TotalBlendedQuantity}}</div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"recallBrokeredDr(requestToUpdate)\" class=\"btn btn-primary btn-lg\">Recall</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- recall brokered dr end -->","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { DeliveryRequestViewModel, DropAddressModel, DelRequestsByJobModel, JobDetailsWithOrders, CustomerJobsForCarrier } from '../models/DispatchSchedulerModels';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { DataService } from '../service/data.service';\r\nimport { sortBy } from 'src/app/my.functions';\r\nimport { CarrierService } from '../service/carrier.service';\r\nimport { DeliveryRequestService } from 'src/app/delivery-request-display/services/DeliveryRequestService';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { BrokeredDrCarrierStatus } from 'src/app/app.enum';\r\nimport { UtilService } from '../service/util.service';\r\ndeclare var IsCarrierCompany: boolean;\r\n\r\n@Component({\r\n    selector: 'app-delivery-request',\r\n    templateUrl: './delivery-request.component.html',\r\n    styleUrls: ['./delivery-request.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DeliveryRequestComponent implements OnInit {\r\n\r\n    @Input() public Title: string = '';\r\n    @Input() public TitleClass: string = 'mustgo';\r\n    @Input() public CollapaseId: string = 'collapse1';\r\n    @Input() public CollapaseInClass: string = '';\r\n    @Input() public isToggleDrPanel: boolean = false;\r\n    @Input() public Locations: DelRequestsByJobModel[] = [];\r\n    @Input() public PriorityTabCount: number = 0;\r\n    public tempDeliveryRequest: DeliveryRequestViewModel[] = [];\r\n    public DrForm: FormGroup;\r\n    public _showQueueIcon: boolean = true;\r\n    public _dragEnabled: boolean = true;\r\n    public IsCarrierCompany: boolean = false;\r\n\r\n    @Output() onDeliveryRequestEdit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private deliveryRequestService: DeliveryRequestService,\r\n        private carrierService: CarrierService,\r\n        private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private utilService: UtilService) { }\r\n\r\n\r\n    ngOnInit() {\r\n        this._showQueueIcon = true;\r\n        this.tempDeliveryRequest = [];\r\n        this.deliveryRequestService.localQueueIcon.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this._showQueueIcon = data as boolean;\r\n            }\r\n        });\r\n        if (typeof IsCarrierCompany !== 'undefined') {\r\n            this.IsCarrierCompany = IsCarrierCompany ? true : false;\r\n        }\r\n\r\n        this.DrForm = this.fb.group({\r\n            DeliveryRequests: this.getDeliveryRequestFormArray([])\r\n        });\r\n    }\r\n    bindDeliveryRequests(jobId: number) {\r\n        let location = this.Locations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            //var drs = location.DeliveryRequests;\r\n            //if (location.DeliveryRequests.some(x => x.IsBlendedRequest === true)){\r\n            //    drs = groupDrsByBlendGroupId(location.DeliveryRequests);\r\n            //}\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(location.DeliveryRequests)\r\n            });\r\n        }\r\n    }\r\n\r\n    bindTBDDeliveryRequests(TbdGroupId: string) {\r\n        let location = this.Locations.find(t => t.TBDGroupId == TbdGroupId);\r\n        if (location) {\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(location.DeliveryRequests)\r\n            });\r\n        }\r\n    }\r\n    \r\n    getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[]): FormArray {\r\n        delReqs = sortBy(delReqs, 'ProductType');\r\n        let _drArray = this.fb.array([]);\r\n        delReqs && delReqs.forEach(x => {\r\n            var _form = this.utilService.getDeliveryRequestFormNew(x);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    EditDeliveryRequest(deliveryReq: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: deliveryReq, isDeleted: false, isAssignCarrier: false });\r\n    }\r\n\r\n    DeleteDeliveryRequest(deliveryReq: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: deliveryReq, isDeleted: true, isAssignCarrier: false });\r\n    }\r\n\r\n    MakeDrop(deliveryReq: any) {\r\n        let delReq = deliveryReq.value as DeliveryRequestViewModel;\r\n        if (!delReq.IsTBD) {\r\n            this.carrierService.getDeliveryRequestById(delReq.ParentId).subscribe(x => {\r\n                if (x.OrderId != null && x.TrackableScheduleId != null) {\r\n                    let dropUrl = '/Supplier/Invoice/CreateNew?orderId=' + x.OrderId + '&trackableScheduleId=' + x.TrackableScheduleId;\r\n                    window.location.href = dropUrl;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.AddLocationForMissedTBD(deliveryReq);\r\n        }\r\n    }\r\n\r\n    MoveActiveQueueRequest(drId: string, jobId: number, blendGroupId: string) {\r\n        let drIds: string[] = [];\r\n        let delReqs: DeliveryRequestViewModel[] = [];\r\n        if (blendGroupId) {\r\n            this.DrForm.controls['DeliveryRequests'].value.filter(t => t.BlendedGroupId == blendGroupId).forEach(t => {\r\n                drIds.push(t.Id);\r\n            });\r\n        }\r\n        else {\r\n            drIds.push(drId);\r\n        }\r\n        drIds.forEach(dr => {\r\n            let index = this.tempDeliveryRequest.findIndex(top => top.Id == dr);\r\n            if (index === -1) {\r\n                let drLocationIndex = this.Locations.findIndex(location =>\r\n                    location.JobId == jobId);\r\n                if (this.Locations[drLocationIndex] && this.Locations[drLocationIndex].DeliveryRequests) {\r\n                    var delReq = this.Locations[drLocationIndex].DeliveryRequests.find(t => t.Id == dr);\r\n                    if (delReq != null) {\r\n                        delReq.WindowMode = 1;\r\n                        delReq.QueueMode = 2;\r\n                        this.tempDeliveryRequest.push(delReq);\r\n                        delReqs.push(delReq);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.deliveryRequestService.pushItemData(delReqs);\r\n    }\r\n\r\n    MoveToActiveQueue(drId: string, jobId: number) {\r\n        let index = this.tempDeliveryRequest.findIndex(top => top.Id == drId);\r\n        if (index === -1) {\r\n            let drLocationIndex = this.Locations.findIndex(location =>\r\n                location.JobId == jobId);\r\n            if (this.Locations[drLocationIndex] && this.Locations[drLocationIndex].DeliveryRequests) {\r\n                var dr = this.Locations[drLocationIndex].DeliveryRequests.find(t => t.Id == drId);\r\n                if (dr != null) {\r\n                    dr.WindowMode = 1;\r\n                    dr.QueueMode = 2;\r\n                    this.tempDeliveryRequest.push(dr);\r\n                    this.deliveryRequestService.pushItemData(dr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public trackByDrId(index: number, dr): any {\r\n        return dr.controls['Id'].value\r\n    }\r\n\r\n    public onDrag() {\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    public getDraggedDrs(item: any, isLocation: boolean): any {\r\n        let jobId, Id, GroupParentId: string = '', isTBDRequest: boolean = false, tbdGroupId: string = '';\r\n        let isMarineDR = false;\r\n        if (isLocation) {\r\n            jobId = item.JobId;\r\n            Id = null;\r\n            isTBDRequest = item.IsTBD;\r\n            tbdGroupId = item.TBDGroupId;\r\n        }\r\n        else {\r\n            jobId = item.controls['JobId'].value;\r\n            Id = item.controls['Id'].value;\r\n            isMarineDR = item.controls['IsMarine'].value;\r\n            GroupParentId = item.controls['GroupParentDRId'].value;\r\n            isTBDRequest = item.controls['IsTBD'].value;\r\n            tbdGroupId = item.controls['TBDGroupId'].value;\r\n        }\r\n        let drs = this.dataService.AllDeliveryRequestsSubject.value;\r\n\r\n        if (GroupParentId == '' && !isMarineDR) {\r\n            let filtered = [];\r\n            if (!isTBDRequest) {\r\n                filtered = drs.filter(x => x.JobId == jobId && !x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n            }\r\n            else {\r\n                filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n            }\r\n            if (filtered.length == 0 && !Id) { //if a location is dragged and it is having only one marine dr, drag it to load\r\n                if (!isTBDRequest) {\r\n                    filtered = drs.filter(x => x.JobId == jobId && x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n                }\r\n                else {\r\n                    filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && x.IsMarine && !x.IsBrokered && (!x.GroupParentDRId || x.GroupParentDRId == ''));\r\n                }\r\n                if (filtered.length > 1) {\r\n                    filtered = [];\r\n                }\r\n            }\r\n            if (filtered.length == 0 && !Id) {\r\n                if (!isTBDRequest) {\r\n                    filtered = drs.filter(x => x.JobId == jobId && !x.IsMarine && !x.IsBrokered);\r\n                }\r\n                else {\r\n                    filtered = drs.filter(x => x.TBDGroupId == tbdGroupId && !x.IsMarine && !x.IsBrokered);\r\n                }\r\n                if (filtered.length > 1) {\r\n                    filtered = [];\r\n                }\r\n            }\r\n            if (filtered.length > 0) {\r\n                filtered.forEach(x => {\r\n                    x.PreLoadedFor = null;\r\n                    x.PreLoadInfo = null;\r\n                    x.PostLoadedFor = null;\r\n                    x.PostLoadInfo = null;\r\n                });\r\n                let brokeredDrs = filtered.filter(x => x.CarrierStatus == 2);\r\n                let nonbrokeredDrs = filtered.filter(x => x.CarrierStatus == 0 || x.CarrierStatus == 3 || x.CarrierStatus == 4);\r\n                filtered = sortBy(nonbrokeredDrs, 'ProductType');\r\n                if (brokeredDrs.length > 0) {\r\n                    brokeredDrs.forEach(x => {\r\n                        filtered.push(x);\r\n                    });\r\n                }\r\n            }\r\n            //if (isMultipleSplitDrs) {\r\n            //    Declarations.msgwarning(\"Selected job is having multiple split delivery requests.\", undefined, undefined);\r\n            //}\r\n            return filtered;\r\n        }\r\n        else {\r\n            let filtered = drs.filter(x => x.Id == Id);\r\n            if (filtered && filtered.length && filtered[0].BlendedGroupId) {\r\n                filtered = drs.filter(x => x.BlendedGroupId == filtered[0].BlendedGroupId);\r\n            }\r\n            filtered.forEach(x => {\r\n                x.PreLoadedFor = null;\r\n                x.PreLoadInfo = null;\r\n                x.PostLoadedFor = null;\r\n                x.PostLoadInfo = null;\r\n            });\r\n            return filtered;\r\n        }\r\n    }\r\n\r\n    public AssignCarrier(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isAssignCarrier: true, });\r\n    }\r\n\r\n    public recallBrokeredDrRequest(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isDeleted: false, isRecallDr: true });\r\n    }\r\n    public AddLocationForMissedTBD(dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isCreateDeliveryForTBD: true, isDeliveryGroup: false });\r\n    }\r\n\r\n    public changeBrokeredDrStatus(status: BrokeredDrCarrierStatus, dr: any) {\r\n        this.onDeliveryRequestEdit.emit({ deliveryRequest: dr, isApproveRejectBrokeredDr: true, CarrierStatus: status });\r\n    }\r\n    public SpiltDeliveryRequests(inputData: any) {\r\n        let deliveryReq = inputData.value as DeliveryRequestViewModel;\r\n        let drs: DeliveryRequestViewModel[] = [];\r\n        if (!deliveryReq.IsBlendedRequest) {\r\n            drs.push(deliveryReq);\r\n        }\r\n        else {\r\n            this.DrForm.controls['DeliveryRequests'].value.filter(t => t.BlendedGroupId == deliveryReq.BlendedGroupId).forEach(t => {\r\n                drs.push(t);\r\n            });\r\n        }\r\n        this.dataService.setSplitDRsInfoSubject(drs);\r\n    }\r\n}\r\n","<div class=\"{{TitleClass}} dr-panel-body\">\r\n    <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{CollapaseId}}\" [attr.aria-expanded]=\"CollapaseInClass ? true : false \" id=\"icon_{{CollapaseId}}\">\r\n        <div class=\"panel-heading  {{TitleClass}}_bg\">\r\n            <h2 class=\"mt0 ml5 font-weight-600 fs13 {{TitleClass}} d-flex align-items-center justify-content-between\">\r\n                <span class=\"text-color\">{{Title}}</span>\r\n\r\n                <span class=\"fa-stack fa-sm icon-color-b mr5\">\r\n                    <i class=\"fas fa-circle fa-stack-2x color-lightgrey\"></i>\r\n                    <i class=\"fas  fa-stack-1x fa-inverse {{CollapaseId}}_icon \" [ngClass]=\"CollapaseInClass == 'show' ? 'fa-chevron-up' : 'fa-chevron-down'\"></i>\r\n                </span>\r\n            </h2>\r\n\r\n        </div>\r\n    </a>\r\n    <div id=\"{{CollapaseId}}\" class=\"panel-collapse collapse {{CollapaseInClass}}\">\r\n        <div class=\"panel-body\" [ngClass]=\"{'max-height-single': PriorityTabCount === 1, 'max-height-twice':PriorityTabCount === 2 }\">\r\n            <ng-container *ngFor=\"let location of Locations; let i = index;\">\r\n                <div class=\"dr-queue dr-color-default\" [ngClass]=\"{'mustgo-status': (location.Priority==1 && TitleClass == 'missed') , 'shouldgo-status': (location.Priority==2 && TitleClass == 'missed') ,'couldgo-status': (location.Priority==3 && TitleClass == 'missed')}\">\r\n                    <div *ngIf=\"!location.IsTBD\" class=\"row\"  draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(location, true)}\" (onDrag)=\"onDrag()\">\r\n                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\"{{(location.DRQueueAttributes && location.DRQueueAttributes.CustomerName)? location.CustomerCompany +' -'  :''}} {{location.JobName}}- {{location.JobAddress}}, {{location.JobCity}} {{(location.DRQueueAttributes && location.DRQueueAttributes.TrailerCompatibility)? location.TrailerCompatibility :''}}\">\r\n                            <div class=\"job-location\">\r\n                                {{(location.JobName.length > 8) ? (location.JobName | slice:0:8)+'..':(location.JobName) }}-&nbsp;\r\n                            </div>\r\n                            <div class=\"job-city\">\r\n                                {{(location.JobAddress.length > 8) ? (location.JobAddress | slice:0:8)+'..':(location.JobAddress) }},&nbsp;\r\n                            </div>\r\n                            <div class=\"job-city\">\r\n                                {{(location.JobCity.length > 8) ? (location.JobCity | slice:0:8)+'..':(location.JobCity) }}\r\n                            </div>\r\n                            <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.TrailerCompatibility\">\r\n                                <div class=\"compability-type\">\r\n                                    {{location.TrailerCompatibility}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.HoursToCoverDistance\">\r\n                            <span class=\"duration\" *ngIf=\"location.HoursToCoverDistance\">\r\n                                {{location.HoursToCoverDistance}} hrs\r\n                            </span>\r\n                        </div>\r\n                        <span class=\"click-icon\">\r\n                            <span class=\"custom_settings mr5\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.DeliveryShift\">\r\n                                <i class=\"fas fa-moon fs12\" *ngIf=\"location.IsOnlyNightDelivery == true\"></i>\r\n                            </span>\r\n                            <a id=\"{{TitleClass}}-dr-{{i}}\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" (click)=\"bindDeliveryRequests(location.JobId)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                    <div *ngIf=\"location.IsTBD\" class=\"row\" draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(location, true)}\" (onDrag)=\"onDrag()\">\r\n                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\" TBD- {{location.ProductType +' -'}} {{ location.RequiredQuantity==0?location.ScheduleQuantityTypeText:location.RequiredQuantity + (( location.UoM == 1 ? ' G' : ' L'))}}\">\r\n                            <!-- <div class=\"custom_settings\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.CustomerName\"> -->\r\n                            <div class=\"brand-name\" *ngIf=\"location.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                TBD - {{\r\n (location.ProductType.length>10)? (location.ProductType | slice:0:8)+'..':\r\n                                   (location.ProductType)\r\n                                }} {{'(' +location.RequiredQuantity + ( location.UoM == 1 ? ' G' : ' L' ) +')'  }}\r\n\r\n                                {{ (location.DeliveryRequests.length >1)?': (+'+ (location.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                            </div>\r\n                            <ng-template #ScheduleQuantityTypeText>\r\n                                <div class=\"brand-name\">\r\n                                    TBD - {{ (location.ProductType.length>10)? (location.ProductType | slice:0:8)+'..':(location.ProductType)}} {{'(' +location.ScheduleQuantityTypeText+')' }} {{ (location.DeliveryRequests.length >1)?': (+'+ (location.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                </div>\r\n                            </ng-template>\r\n                            <!-- </div>                           -->\r\n                        </div>\r\n                        <span class=\"click-icon\">\r\n                            <span class=\"custom_settings mr5\" *ngIf=\"location.DRQueueAttributes && location.DRQueueAttributes.DeliveryShift\">\r\n                                <i class=\"fas fa-moon fs12\" *ngIf=\"location.IsOnlyNightDelivery == true\"></i>\r\n                            </span>\r\n                            <a id=\"{{TitleClass}}-dr-{{i}}\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" (click)=\"bindTBDDeliveryRequests(location.TBDGroupId)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <div class=\"col-sm-12 text-center\" *ngIf=\"Locations.length==0\">\r\n                <i class=\"fa fas fa-exclamation-triangle opacity8 fs12\"></i>\r\n                <label class=\"color-grey fs12 mb0 ml10\">No request available</label>\r\n            </div>\r\n            <!-- <div class=\"bg-white z-index5 loading-wrapper2\" *ngIf=\"_showsmallLoder\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" id=\"expandDS\">\r\n        <div class=\"row\">\r\n            <ng-container *ngFor=\"let dr of DrForm.controls['DeliveryRequests']['controls']; let i = index; trackBy: trackByDrId\">\r\n                <div *ngIf=\"dr.controls['IsBlendedRequest'].value==false || dr.controls['IsBlendedDrParent'].value==true\" class=\"col-12 product-details\" [ngClass]=\"{'mustgo-status': (dr.controls['Priority'].value==1) , 'shouldgo-status': (dr.controls['Priority'].value==2) ,'couldgo-status': (dr.controls['Priority'].value==3)}\" draggable [dragEnabled]=\"_dragEnabled\" [dragData]=\"{Data: getDraggedDrs(dr, false)}\" (onDrag)=\"onDrag()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <div class=\"product-name\">\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value === true\">{{dr.controls['AdditiveProductName'].value}} {{dr.controls['BlendedProductName'].value}}</span>\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value != true\">{{dr.controls['ProductType'].value}}</span>\r\n                                <span class=\"recurring_text ml5\" *ngIf=\"dr.controls['GroupParentDRId'].value!=''\"><i class=\"fas fa-unlink color-black\" title=\"Sub DR\"></i></span>\r\n                                <span class=\"recurring_text ml5\" *ngIf=\"dr.controls['isRecurringSchedule'].value===true\"><i class=\"fas fa-sync color-black\" title=\"Recurring\"></i></span>\r\n                                <span *ngIf=\"dr.controls['IsAutoCreatedDR'].value==true\">\r\n                                    <i class=\"fas fa-magic ml10\" title=\"Auto-Generated\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['DeliveryWindow'].value!=''\">{{dr.controls['DeliveryWindow'].value}}</p>\r\n                                <p class=\"recurring_dr\" *ngIf=\"dr.controls['isRecurringSchedule'].value==true\">{{dr.controls['RecurringScheduleInfo'].value}}</p>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['DeliveryDateStartTime'].value}}</p>\r\n\r\n                                <ng-container *ngIf=\"dr.controls['IsMarine'].value\">\r\n\r\n                                    <p class=\"recurring_dr\" *ngIf=\"dr.controls['Berth'].value\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.controls['Vessel'].value}}-{{dr.controls['Berth'].value}}\">\r\n                                        {{(dr.controls['Vessel'].value.length > 8) ? (dr.controls['Vessel'].value | slice:0:8)+'..':(dr.controls['Vessel'].value) }}\r\n                                        -\r\n                                        {{(dr.controls['Berth'].value.length > 8) ? (dr.controls['Berth'].value | slice:0:8)+'..':(dr.controls['Berth'].value) }}\r\n                                    </p>\r\n\r\n                                    <p class=\"recurring_dr\" *ngIf=\"!dr.controls['Berth'].value\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.controls['Vessel'].value}}\">\r\n                                        {{(dr.controls['Vessel'].value.length > 8) ? (dr.controls['Vessel'].value | slice:0:8)+'..':(dr.controls['Vessel'].value) }}\r\n                                    </p>\r\n\r\n                                </ng-container>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==false\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==true\">{{dr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value == 0\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"dr.controls['ScheduleStartTime'].value && dr.controls['ScheduleEndTime'].value\">\r\n                            <div class=\"col-md-6\" style=\"font-size:11px;\">\r\n                                <label >\r\n                                    {{dr.controls['ScheduleStartTime'].value}} - {{ dr.controls['ScheduleEndTime'].value}}\r\n                                </label>\r\n                            </div>\r\n                    </div>\r\n                    <div class=\"icon-tray\">\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Split DR\" *ngIf=\"dr.controls['IsSpiltDRIconVisible'].value && !dr.get('IsBlendedRequest').value\">\r\n                            <a (click)=\"SpiltDeliveryRequests(dr)\" data-toggle=\"modal\" data-target=\"#splitDR\"><i class=\"fa fa-unlink fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Edit\">\r\n                            <a (click)=\"EditDeliveryRequest(dr)\"><i class=\"fa fa-edit fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Delete\" *ngIf=\"!(dr.controls['CreatedByCompanyId'].value != dr.controls['AssignedToCompanyId'].value && dr.controls['CarrierStatus'].value==2)\">\r\n                            <a (click)=\"DeleteDeliveryRequest(dr)\"><i class=\"fa fa-trash-alt fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Move to Clipboard\" *ngIf=\"_showQueueIcon===true\">\r\n                            <a (click)=\"MoveActiveQueueRequest(dr.controls['Id'].value, dr.controls['JobId'].value, dr.controls['BlendedGroupId'].value)\"><i class=\"fas fa-running fs13\"></i></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Assign Carrier/Supplier\" *ngIf=\"dr.controls['isRecurringSchedule'].value==false && IsCarrierCompany==false && dr.controls['IsTBD'].value==false\">\r\n                            <a (click)=\"AssignCarrier(dr)\"><img src=\"/Content/images/frontal-truck.svg\" class=\"color-black mtm5\" width=\"15\"></a>\r\n                        </div>\r\n                        <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Drop\" *ngIf=\"dr.controls['ParentId'].value != null\">\r\n                            <a (click)=\"MakeDrop(dr)\"><i class=\"fa fas fa-dollar fs13\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"dr.controls['IsBlendedRequest']?.value\">\r\n                        <span class=\"fs12 pull-right font-weight-bold\">Blend</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport { CarrierService } from '../../service/carrier.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { DeliveryRequestViewModel, SplitBlendDRModel } from '../../models/DispatchSchedulerModels';\r\nimport { getUniqueId } from '../../../my.functions';\r\nimport { RegExConstants } from 'src/app/app.constants';\r\ndeclare var jQuery: any;\r\n@Component({\r\n    selector: 'app-split-delivery-request',\r\n    templateUrl: './split-delivery-request.component.html',\r\n    styleUrls: ['./split-delivery-request.component.css'],\r\n})\r\nexport class SplitDeliveryRequestComponent implements OnInit {\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) { }\r\n    public SplitDRForm: FormGroup;\r\n    public SplitBlendDRForm: FormGroup;\r\n    public defaultSplitDRsValue = 2;\r\n    public productType: string;\r\n    public siteId: string;\r\n    public jobName: string;\r\n    public jobAddress: string;\r\n    public jobCity: string;\r\n    public totalQuantity: number;\r\n    public originalTotalQuantity: number;\r\n    public remainingQuantity: number;\r\n    public UoM: string;\r\n    public IsBlendRequest: boolean = false;\r\n    public validateQtyStatus: boolean = true;\r\n    public validateQtyMessage: string = '';\r\n    public splitDrs: SplitBlendDRModel[] = [];\r\n    public _loading: boolean = false;\r\n    public deliveryLevelPO: string ;\r\n    @Output() onRaiseDR: EventEmitter<any> = new EventEmitter<any>();\r\n    ngOnInit() {\r\n        this.SplitDRForm = this.initForm();\r\n        this.SplitBlendDRForm = this.initSplitBlendDRForm([]);\r\n    }\r\n    public getDeliveryRequestInfo(deliveryReqs: DeliveryRequestViewModel[]) {\r\n        this.IsBlendRequest = deliveryReqs.some(t => t.IsBlendedRequest);\r\n        this.splitDrs = [];\r\n        if (this.IsBlendRequest) {\r\n            deliveryReqs.forEach(t => {\r\n                this.splitDrs.push({ OrderId: t.OrderId, ParentDrId: t.Id, RequiredQuantity: null, ProductType: t.ProductType, FuelType: t.FuelType, UoM: t.UoM });\r\n            });\r\n            this.SplitBlendDRForm = this.initSplitBlendDRForm(this.splitDrs);\r\n        }\r\n        let deliveryReq = deliveryReqs[0];\r\n        this.productType = this.IsBlendRequest ? deliveryReq.AdditiveProductName + ' ' + deliveryReq.BlendedProductName : deliveryReq.ProductType;\r\n        this.siteId = deliveryReq.SiteId;\r\n        this.jobName = deliveryReq.JobName;\r\n        this.jobAddress = deliveryReq.JobAddress;\r\n        this.jobCity = deliveryReq.JobCity;\r\n        this.totalQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.originalTotalQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.remainingQuantity = this.IsBlendRequest ? deliveryReq.TotalBlendedQuantity : deliveryReq.RequiredQuantity;\r\n        this.deliveryLevelPO = deliveryReq.DeliveryLevelPO;\r\n        this.UoM = deliveryReq.UoM == 1 ? \"G\" : \"L\";\r\n        this.SplitDRForm = this.initForm();\r\n        let parentDRId = this.SplitDRForm.get('ParentDRId') as FormControl;\r\n        parentDRId.patchValue(deliveryReq.Id);\r\n        let requiredQtyDetais = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n            requiredQtyDetais.push(this.getRequiredQty());\r\n        }\r\n        if (requiredQtyDetais.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n        }\r\n    }\r\n    initForm(): FormGroup {\r\n        return this.fb.group({\r\n            ParentDRId: this.fb.control(''),\r\n            NoOfSubDRs: this.fb.control('0', [Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0)]),\r\n            SubDRType: this.fb.control('1'),\r\n            RequiredQtyDetails: this.fb.array([])\r\n        });\r\n    }\r\n\r\n    initSplitBlendDRForm(blendDrs: SplitBlendDRModel[]): FormGroup {\r\n        let _formGroup = this.fb.group({\r\n            splitDrArray: this.fb.array([])\r\n        });\r\n\r\n        let splitDrArray = _formGroup.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < 2; i++) {\r\n            splitDrArray.push(this.getsplitDrArray(blendDrs));\r\n        }\r\n        return _formGroup;\r\n    }\r\n\r\n    getsplitDrArray(blendDrs: SplitBlendDRModel[]) {\r\n        let _formGroup = this.fb.group({\r\n            BlendDrArray: this.fb.array([]),\r\n            BlendGroupId: this.fb.control(getUniqueId())\r\n        });\r\n\r\n        let blendDrArr = _formGroup.get('BlendDrArray') as FormArray;\r\n        blendDrs.forEach(t => {\r\n            blendDrArr.push(this.getSplitDRForm(t));\r\n        })\r\n\r\n        return _formGroup;\r\n    }\r\n\r\n    getSplitDRForm(blendDr: SplitBlendDRModel) {\r\n        return this.fb.group({\r\n            OrderId: this.fb.control(blendDr.OrderId, [Validators.required]),\r\n            ParentDrId: this.fb.control(blendDr.ParentDrId, [Validators.required]),\r\n            RequiredQuantity: this.fb.control(null, [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            ProductType: this.fb.control(blendDr.ProductType),\r\n            FuelType: this.fb.control(blendDr.FuelType),\r\n            UoM: this.fb.control(blendDr.UoM)\r\n        });\r\n    }\r\n\r\n    getRequiredQty(): FormGroup {\r\n        return this.fb.group({\r\n            RequiredQty: this.fb.control('', [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            DeliveryLevelPO : this.fb.control(this.deliveryLevelPO)\r\n        })\r\n    }\r\n    get f() {\r\n        return this.SplitDRForm.controls;\r\n    }\r\n    removeItem(j: number) {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.removeAt(j);\r\n        if (requiredQtyDetails.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateQtyDetails();\r\n        }\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormControl;\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                noOfSubDRs.setValue(parseFloat(noOfSubDRs.value) - 1);\r\n            }\r\n        }\r\n    }\r\n    removeBlendDr(i: number) {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        splitDrArray.removeAt(i);\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n    removeBlendDrItem(i: number, j: number) {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        let blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n        blendDrArray.removeAt(j);\r\n        if (blendDrArray.controls.length == 0) {\r\n            splitDrArray.removeAt(i);\r\n        }\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n    validateBlendDrQtyInfo() {\r\n        var totalQty = 0;\r\n        var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < splitDrArray.controls.length; i++) {\r\n            var blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n            for (var j = 0; j < blendDrArray.controls.length; j++) {\r\n                let requiredQ = blendDrArray.controls[j].get('RequiredQuantity').value;\r\n                if (requiredQ) {\r\n                    totalQty = totalQty + parseFloat(requiredQ);\r\n                }\r\n            }\r\n        }\r\n        if (totalQty >= this.originalTotalQuantity) {\r\n            this.totalQuantity = totalQty\r\n            this.remainingQuantity = 0\r\n        }\r\n        else\r\n            this.remainingQuantity = this.totalQuantity - totalQty;\r\n\r\n        if (this.remainingQuantity >= 0) {\r\n            this.validateQtyStatus = true;\r\n        }\r\n        else {\r\n            if (this.remainingQuantity <= 0) {\r\n                this.totalQuantity = totalQty\r\n                this.remainingQuantity = 0;\r\n            }\r\n            this.validateQtyStatus = true;\r\n        }\r\n    }\r\n    caculateBlendDrQtyDetails() {\r\n        var totalQty = 0;\r\n        var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        for (var i = 0; i < splitDrArray.controls.length; i++) {\r\n            var blendDrArray = splitDrArray.controls[i].get('BlendDrArray') as FormArray;\r\n            for (var j = 0; j < blendDrArray.controls.length; j++) {\r\n                let requiredQ = blendDrArray.controls[j].get('RequiredQuantity').value;\r\n                if (requiredQ) {\r\n                    totalQty = totalQty + parseFloat(requiredQ);\r\n                }\r\n            }\r\n        }\r\n        this.remainingQuantity = this.totalQuantity - totalQty;\r\n    }\r\n\r\n    addBlendDR() {\r\n        let splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n        splitDrArray.push(this.getsplitDrArray(this.splitDrs));\r\n\r\n        if (splitDrArray.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateBlendDrQtyDetails();\r\n        }\r\n    }\r\n\r\n    addDR() {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.push(this.getRequiredQty());\r\n        if (requiredQtyDetails.controls.length >= this.defaultSplitDRsValue) {\r\n            this.validateQtyStatus = true;\r\n            this.validateQtyMessage = '';\r\n            this.validateQtyInfo();\r\n        }\r\n        else {\r\n            this.validateQtyStatus = false;\r\n            this.caculateQtyDetails();\r\n        }\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormControl;\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                noOfSubDRs.setValue(parseFloat(noOfSubDRs.value) + 1);\r\n            }\r\n        }\r\n    }\r\n    validateQty(tfxQty: any) {\r\n        this.validateQtyMessage = '';\r\n\r\n        var currentQty = tfxQty.controls['RequiredQty'].value;\r\n        if (RegExConstants.Integer.test(currentQty) || RegExConstants.Float.test(currentQty)) {\r\n            var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n            if (requiredQtyDetails.controls.length < this.defaultSplitDRsValue) {\r\n                this.validateQtyStatus = false;\r\n                this.validateQtyMessage = 'Atleast 2 sub delivery request required.';\r\n                return;\r\n            }\r\n            this.validateQtyInfo();\r\n        }\r\n    }\r\n    validateBlendDrQty(tfxQty: any) {\r\n        this.validateQtyMessage = '';\r\n\r\n        var currentQty = tfxQty.controls['RequiredQuantity'].value;\r\n        if (RegExConstants.Integer.test(currentQty) || RegExConstants.Float.test(currentQty)) {\r\n            var splitDrArray = this.SplitBlendDRForm.get('splitDrArray') as FormArray;\r\n            if (splitDrArray.controls.length < this.defaultSplitDRsValue) {\r\n                this.validateQtyStatus = false;\r\n                this.validateQtyMessage = 'Atleast 2 sub delivery request required.';\r\n                return;\r\n            }\r\n            this.validateBlendDrQtyInfo();\r\n        }\r\n    }\r\n    validateQtyInfo() {\r\n        var totalQty = 0;\r\n        var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < requiredQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        if (totalQty >= this.originalTotalQuantity) {\r\n            this.totalQuantity = totalQty\r\n            this.remainingQuantity = 0\r\n        }\r\n        else\r\n            this.remainingQuantity = this.totalQuantity - totalQty;\r\n\r\n        if (this.remainingQuantity >= 0) {\r\n            this.validateQtyStatus = true;\r\n        }\r\n        else {\r\n            if (this.remainingQuantity <= 0) {\r\n                this.totalQuantity = totalQty\r\n                this.remainingQuantity = 0;\r\n            }\r\n            this.validateQtyStatus = true;\r\n        }\r\n    }\r\n    caculateQtyDetails() {\r\n        var totalQty = 0;\r\n        var requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        for (var i = 0; i < requiredQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        this.remainingQuantity = this.totalQuantity - totalQty;\r\n    }\r\n    submitSplitInfo() {\r\n        this._loading = true;\r\n        this.carrierService.splitDeliveryRequests(this.SplitDRForm.value).subscribe(detail => {\r\n            this._loading = false;\r\n            $('#btnSplitCancel').click();\r\n            if (detail.StatusCode == 0) {\r\n                this.onRaiseDR.emit();\r\n                Declarations.msgsuccess(\"Split DRs created successfully.\", undefined, undefined);\r\n                if (this.remainingQuantity > 0) {\r\n                    Declarations.msgwarning(\"The total quantity of sub DRs created is less than the requested quantity.\", undefined, undefined);\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(detail.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    submitSplitBlendDrInfo() {\r\n        this._loading = true;\r\n        this.carrierService.splitBlendDeliveryRequests(this.SplitBlendDRForm.value).subscribe(detail => {\r\n            this._loading = false;\r\n            $('#btnSplitCancel').click();\r\n            if (detail.StatusCode == 0) {\r\n                this.onRaiseDR.emit();\r\n                Declarations.msgsuccess(\"Split DRs created successfully.\", undefined, undefined);\r\n                if (this.remainingQuantity > 0) {\r\n                    Declarations.msgwarning(\"The total quantity of sub DRs created is less than the requested quantity.\", undefined, undefined);\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(detail.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n    GenerateSubDRs() {\r\n        let subDRType = this.SplitDRForm.get('SubDRType') as FormArray;\r\n\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.clear();\r\n        if (subDRType.value == 2) {\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                var subDFDRsQty = parseFloat((this.totalQuantity / noOfSubDRs.value).toFixed(2));\r\n                var subDRsQty = parseFloat((this.totalQuantity / noOfSubDRs.value).toFixed(0));\r\n                var finalDRAdditions = subDFDRsQty - subDRsQty;\r\n                finalDRAdditions = finalDRAdditions * noOfSubDRs.value;\r\n                for (var i = 0; i < noOfSubDRs.value; i++) {\r\n                    if (noOfSubDRs.value - 1 == i) {\r\n                        subDRsQty = subDRsQty + Math.round(finalDRAdditions);\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(subDRsQty));\r\n                    }\r\n                    else {\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(subDRsQty));\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n                    requiredQtyDetails.push(this.getRequiredQty());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var requiredfQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n            let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n            if (noOfSubDRs.value != '' && noOfSubDRs.value > 0) {\r\n                var fQty = noOfSubDRs.value;\r\n                var totalNoOfDRs = Math.round(this.totalQuantity / fQty);\r\n                for (var i = 0; i < totalNoOfDRs; i++) {\r\n                    var totalSubDRQty = this.caculateQty();\r\n                    if (totalSubDRQty > 0) {\r\n                        var finalQty = this.totalQuantity - totalSubDRQty;\r\n                        if (finalQty > fQty) {\r\n                            requiredQtyDetails.push(this.getRequiredQtyWithValue(fQty));\r\n                        }\r\n                        else {\r\n                            requiredQtyDetails.push(this.getRequiredQtyWithValue(finalQty));\r\n                        }\r\n                    }\r\n                    else {\r\n                        requiredQtyDetails.push(this.getRequiredQtyWithValue(fQty));\r\n                    }\r\n                }\r\n                var totalQty = 0;\r\n                for (var i = 0; i < requiredfQtyDetails.controls.length; i++) {\r\n                    var requiredQ = requiredfQtyDetails.controls[i].get('RequiredQty').value;\r\n                    if (requiredQ != '') {\r\n                        totalQty = totalQty + parseFloat(requiredQ);\r\n                    }\r\n                }\r\n                var finalQty = this.totalQuantity - totalQty;\r\n                if (finalQty > 0) {\r\n                    requiredQtyDetails.push(this.getRequiredQtyWithValue(finalQty));\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n                    requiredQtyDetails.push(this.getRequiredQty());\r\n                }\r\n            }\r\n        }\r\n        this.validateQtyInfo();\r\n    }\r\n    getRequiredQtyWithValue(subDRsQty: number): FormGroup {\r\n        return this.fb.group({\r\n            RequiredQty: this.fb.control(subDRsQty, [Validators.required, Validators.pattern(\"[0-9]+(\\.[0-9][0-9]?)?\"), Validators.min(0.00001)]),\r\n            DeliveryLevelPO: this.fb.control(this.deliveryLevelPO)\r\n        })\r\n    }\r\n    clearForm() {\r\n        let requiredQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        requiredQtyDetails.clear();\r\n        let noOfSubDRs = this.SplitDRForm.get('NoOfSubDRs') as FormControl;\r\n        noOfSubDRs.setValue(0);\r\n        this.validateQtyInfo();\r\n        for (var i = 0; i < this.defaultSplitDRsValue; i++) {\r\n            requiredQtyDetails.push(this.getRequiredQty());\r\n        }\r\n    }\r\n    caculateQty(): number {\r\n        var requiredfQtyDetails = this.SplitDRForm.get('RequiredQtyDetails') as FormArray;\r\n        var totalQty = 0;\r\n        for (var i = 0; i < requiredfQtyDetails.controls.length; i++) {\r\n            var requiredQ = requiredfQtyDetails.controls[i].get('RequiredQty').value;\r\n            if (requiredQ != '') {\r\n                totalQty = totalQty + parseFloat(requiredQ);\r\n            }\r\n        }\r\n        return totalQty;\r\n    }\r\n}\r\n","<div id=\"splitDR\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form [formGroup]=\"SplitDRForm\" *ngIf=\"!IsBlendRequest\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DRs</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"fs14 f-normal\">{{productType}}, Location ID: {{siteId}}</div>\r\n                            <small class=\"mb10 fs12 opacity8\">\r\n                                <b>{{jobName}},</b>  {{jobAddress}}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10 align-items-center\">\r\n                        <div class=\"col-sm-8\">\r\n                            <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                <div class=\"btn-group btn-filter\">\r\n                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                        <input id=\"SubDRType1\" class=\"hide-element\" type=\"radio\" value=\"1\" formControlName=\"SubDRType\" (change)=\"clearForm();\">\r\n                                        <label class=\"btn ml-0\" for=\"SubDRType1\"> Load Per Truck</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline  mr-0\">\r\n                                        <input class=\"hide-element\" type=\"radio\" formControlName=\"SubDRType\" id=\"SubDRType2\" value=\"2\" (change)=\"clearForm();\">\r\n                                        <label class=\"btn\" for=\"SubDRType2\">Equal Sub-DRs</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt5\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-success pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Total</span>\r\n                                {{totalQuantity | number:'1.0-0'}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Remaining</span>\r\n                                {{remainingQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\" *ngIf=\"SplitDRForm.controls['SubDRType'].value==2\"># equal Sub-DRs</span>\r\n                                <span class=\"fs12\" *ngIf=\"SplitDRForm.controls['SubDRType'].value==1\"># Load Per Truck</span>\r\n                                <input type=\"text\" numbersOnly class=\"form-control\" placeholder=\"(Optional)\" formControlName=\"NoOfSubDRs\" (change)=\"GenerateSubDRs()\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"splitdr-height\">\r\n                        <div class=\"row mt5\" [formArrayName]=\"'RequiredQtyDetails'\" *ngFor=\"let tfxQty of SplitDRForm.controls['RequiredQtyDetails']['controls'];  let j = index;\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"mt7\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span>Sub DR <span class=\"badge\">{{j+1}}</span></span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container [formGroupName]=\"j\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Quantity\" formControlName=\"RequiredQty\" (change)=\"validateQty(tfxQty)\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{UoM}}</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"tfxQty.controls['RequiredQty'].touched && tfxQty.controls['RequiredQty'].invalid\">\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.required\">Quantity is required.</span>\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.pattern\">Enter only number.</span>\r\n                                            <span class=\"color-maroon\" *ngIf=\"tfxQty.controls['RequiredQty'].errors.min\">Invalid quantity.</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"validateQtyMessage!=''\">\r\n                                            <span class=\"color-maroon\">{{validateQtyMessage}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"input-group\">\r\n                                        <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                    </div>\r\n                                </div>\r\n                            </ng-container>\r\n                            <div class=\"col-sm-1\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeItem(j)\"></a></div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" id=\"btnSplitCancel\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"!SplitDRForm.valid\" (click)=\"submitSplitInfo()\">Create</button>\r\n                        <!-- !validateQtyStatus || -->\r\n                    </div>\r\n                </form>\r\n\r\n                <form [formGroup]=\"SplitBlendDRForm\" *ngIf=\"IsBlendRequest\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Create Sub DRs</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"fs14 f-normal\">{{productType}}, Location ID: {{siteId}}</div>\r\n                            <small class=\"mb10 fs12 opacity8\">\r\n                                <b>{{jobName}},</b>  {{jobAddress}}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt5 mb-2\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"card alert-success pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs13\">Total</span>\r\n                                {{totalQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"card alert-warning pl10 pr10 pt5 pb5 fs18\">\r\n                                <span class=\"fs12\">Remaining</span>\r\n                                {{remainingQuantity}} {{UoM}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"splitdr-height\">\r\n                        <ng-container class=\"row mt5\" [formArrayName]=\"'splitDrArray'\" *ngFor=\"let splitDr of SplitBlendDRForm.get('splitDrArray')['controls'];let i = index\">\r\n                            <div class=\"col-sm-12 pl-0\">\r\n                                <div class=\"mt7\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span class=\"font-weight-bold fs12\">Sub DR<span class=\"badge ml-2\">{{i+1}}</span></span>\r\n                                    </label>\r\n                                    <span><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeBlendDr(i)\"></a></span>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"mt-0 mr-2\">\r\n                            <div [formGroupName]=\"i\">\r\n                                <ng-container formArrayName=\"BlendDrArray\" *ngFor=\"let blendDr of splitDr.controls.BlendDrArray.controls;let j = index\">\r\n                                    <div [formGroupName]=\"j\" class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"mt7\">\r\n                                                <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                                    <span>{{blendDr.controls['ProductType'].value}} - {{blendDr.controls['FuelType'].value}} </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" placeholder=\"Quantity\" formControlName=\"RequiredQuantity\" (change)=\"validateBlendDrQty(blendDr)\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text fs11\">{{UoM}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div *ngIf=\"blendDr.controls['RequiredQuantity'].touched && blendDr.controls['RequiredQuantity'].invalid\">\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.required\">Quantity is required.</span>\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.pattern\">Enter only number.</span>\r\n                                                <span class=\"color-maroon\" *ngIf=\"blendDr.controls['RequiredQuantity'].errors.min\">Invalid quantity.</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"validateQtyMessage!=''\">\r\n                                                <span class=\"color-maroon\">{{validateQtyMessage}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-2\"><a class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\" (click)=\"removeBlendDrItem(i,j)\"></a></div>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addBlendDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <button type=\"button\" id=\"btnSplitCancel\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-lg\" [disabled]=\"!SplitBlendDRForm.valid\" (click)=\"submitSplitBlendDrInfo()\">Create</button>\r\n                        <!-- !validateQtyStatus || -->\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, EventEmitter, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { SbFilterModel } from './models/DispatchSchedulerModels';\r\n\r\n@Component({\r\n    selector: 'app-schedule-builder-filter',\r\n    templateUrl: './schedule-builder-filter.component.html',\r\n    styleUrls: ['./schedule-builder-filter.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScheduleBuilderFilterComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    @Input() public SbFilterData: SbFilterModel;\r\n    @Input() public isDisableControl: boolean;\r\n    @Output() public OnSbFilterApply: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public trailerDdlSettings = {};\r\n    public driverDdlSettings = {};\r\n    public pickupDdlSettings = {};\r\n    @Input() public IsTrailerExists: boolean;\r\n\r\n    ngOnInit() {\r\n        this.pickupDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.driverDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n        this.trailerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'TrailerId',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 2,\r\n            allowSearchFilter: true,\r\n        };\r\n    }\r\n\r\n    onApplyFilter() {\r\n        this.OnSbFilterApply.emit({ SelectedPickups: this.SbFilterData.SelectedPickups, SelectedDrivers: this.SbFilterData.SelectedDrivers, SelectedTrailers: this.SbFilterData.SelectedTrailers });\r\n    }\r\n\r\n    onTrailerSelect(trailer: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerDeSelect(trailer: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerSelectAll(trailers: any) {\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        trailers.forEach(obj => this.SbFilterData.SelectedTrailers.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onTrailerDeSelectAll() {\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    onDriverSelect(driver: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverDeSelect(driver: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverSelectAll(drivers: any) {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        drivers.forEach(obj => this.SbFilterData.SelectedDrivers.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onDriverDeSelectAll() {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    onPickupSelect(pickup: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupDeSelect(pickup: any) {\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupSelectAll(pikups: any) {\r\n        this.SbFilterData.SelectedPickups = [];\r\n        pikups.forEach(obj => this.SbFilterData.SelectedPickups.push(obj));\r\n        this.onApplyFilter();\r\n    }\r\n    onPickupDeSelectAll() {\r\n        this.SbFilterData.SelectedPickups = [];\r\n        this.onApplyFilter();\r\n    }\r\n\r\n    resetFilter() {\r\n        this.SbFilterData.SelectedDrivers = [];\r\n        this.SbFilterData.SelectedTrailers = [];\r\n        this.SbFilterData.SelectedPickups = [];\r\n        this.onApplyFilter();\r\n    }\r\n}\r\n","<div id=\"sb-filter-panel\">\r\n    <div class=\"row btn-schedule-filter\">\r\n        <div class=\"col-sm-12\">\r\n            <a class=\"ml10\" onclick=\"showHideElements('schedule-filter','btn-schedule-filter')\"><i class=\"fas fa-filter\"></i> Filters</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"hide-element schedule-filter\">\r\n        <div class=\"row\">\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\" *ngIf=\"IsTrailerExists\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                             [settings]=\"trailerDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Trailers\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedTrailers\"\r\n                                             (onSelect)=\"onTrailerSelect($event)\" (onDeSelect)=\"onTrailerDeSelect($event)\"\r\n                                             (onSelectAll)=\"onTrailerSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onTrailerDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\"\r\n                                             [settings]=\"driverDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Drivers\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedDrivers\"\r\n                                             (onSelect)=\"onDriverSelect($event)\" (onDeSelect)=\"onDriverDeSelect($event)\"\r\n                                             (onSelectAll)=\"onDriverSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onDriverDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"isDisableControl ? 'col-sm-3' : 'col-sm-4'\">\r\n                <div class=\"form-group mb5\">\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Pickup(s)'\"\r\n                                             [settings]=\"pickupDdlSettings\"\r\n                                             [data]=\"SbFilterData?.Pickups\"\r\n                                             [(ngModel)]=\"SbFilterData.SelectedPickups\"\r\n                                             (onSelect)=\"onPickupSelect($event)\" (onDeSelect)=\"onPickupDeSelect($event)\"\r\n                                             (onSelectAll)=\"onPickupSelectAll($event)\"\r\n                                             (onDeSelectAll)=\"onPickupDeSelectAll()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"f-bold\" [ngClass]=\"isDisableControl ? 'col-sm-3 mt10' : 'col-sm-12'\">\r\n                <a class=\"fs12 mr10\" (click)=\"resetFilter()\">Reset Filters</a>\r\n                <a onclick=\"showHideElements('btn-schedule-filter','schedule-filter')\" class=\"fs12\">Close</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { SbGridViewFilterModel } from './models/DispatchSchedulerModels';\n@Component({\n    selector: 'app-schedule-builder-grid-filter',\n    templateUrl: './schedule-builder-grid-filter.component.html',\n    styleUrls: ['./schedule-builder-grid-filter.component.css']\n})\nexport class ScheduleBuilderGridFilterComponent implements OnInit {\n\n    constructor() { }\n    @Input() public SbGridFilterData: SbGridViewFilterModel;\r\n    @Output() public OnSbGridFilterApply: EventEmitter<any> = new EventEmitter<any>();\n    @Input() public isDisableControl: boolean;\n\n    ngOnInit() {\n    }\n    filterLocation() {\n        this.OnSbGridFilterApply.emit({ SearchLocation: this.SbGridFilterData.SearchLocation});\r\n    }\n    resetfilterLocation() {\n        this.SbGridFilterData.SearchLocation = '';\n        this.OnSbGridFilterApply.emit({ SearchLocation: this.SbGridFilterData.SearchLocation });\r\n    }\n}\n","<div id=\"sb-filter-panel\">\r\n    <div class=\"row\">\r\n        <div [ngClass]=\"isDisableControl ? 'col-sm-12' : 'col-sm-12'\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search location\" [(ngModel)]=\"SbGridFilterData.SearchLocation\">\r\n                <div class=\"input-group-append mr5\">\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"filterLocation()\">\r\n                        <i class=\"fa fa-search\"></i>\r\n                    </button>\r\n                </div>\r\n                <button class=\"btn btn-link\" (click)=\"resetfilterLocation()\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter, ViewEncapsulation, ViewChild, OnDestroy } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { AddLocationService } from './add-location.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { Geocode, MapConstants, StateModel } from './add-location.model';\r\nimport { DropdownItem, StatelistService } from 'src/app/statelist.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport * as moment from 'moment';\r\nimport { ConfirmationDialogService } from 'src/app/shared-components/confirmation-dialog/confirmation-dialog.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PricingSectionComponent } from '../../../shared-components/pricing-section/pricing-section.component';\r\nimport { Country, TierPricingType } from 'src/app/app.enum';\r\nimport { DropDown, RegExConstants } from 'src/app/app.constants';\r\n\r\n\r\n@Component({\r\n    selector: 'app-add-location',\r\n    templateUrl: './add-location.component.html',\r\n    styleUrls: ['./add-location.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AddLocationComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() RegionId: FormGroup;\r\n    @Input() MapsApiKey: string;\r\n    @Output() OnTheFlyLocationCreate: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild(PricingSectionComponent) private pricingModuleComponent: PricingSectionComponent;\r\n    locationForm: FormGroup;\r\n    PickupForm: FormGroup;\r\n    formSubmited = false;\r\n\r\n    _isLoadingProducts = false;\r\n    _opened: boolean = false;\r\n    _loading: boolean = false;\r\n    _initiated: boolean = false;\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n    preferencesSetting: any = null;\r\n    isCompanyNameExist: boolean = false;\r\n    isJobNameExist: boolean = false;\r\n    isPhoneNumberValid: boolean = null;\r\n\r\n    allJobList: Array<DropDown> = [];\r\n    currucyList = [];\r\n    CountryList: DropdownItem[] = [];\r\n    CountryGroupList: DropdownItem[] = [];\r\n    statesList: StateModel[] = [];\r\n    filteredStatesList: StateModel[] = [];\r\n    FuelProductsList = [];\r\n    MarineProductsList = [];\r\n    FeeTypesList = [];\r\n    defaultCompanyCountryId = 0;\r\n    CompanyContactPersonsList = [];\r\n\r\n    CompanyContactPersonsDetails: any;\r\n    AllTPOCompaniesList: Array<DropDown> = [];\r\n    //pickup for dr\r\n    BulkPlants: DropdownItem[] = [];\r\n    BulkplantList: DropdownItem[] = [];\r\n    isReadOnly: boolean = false;\r\n    UoM: number = 0;\r\n    Terminals = [];\r\n    _minimumConst = 0.00001;\r\n    CountryBasedZipcodeLabel: string = \"Zip\";\r\n    _loadingAddress: boolean = false;\r\n    IsTBDRequest: boolean = false;\r\n    FuelTypeId: number = null;\r\n    ProductTypeName: string = \"\";\r\n    productDetails: any;\r\n    tbdDrProductId: number;\r\n    tbdDrProductTypeId: number;\r\n    public CompDdlSetting = {};\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private addLocationService: AddLocationService,\r\n        private utilService: UtilService,\r\n        private modalService: NgbModal,\r\n        private stateService: StatelistService,\r\n        private addresService: AddressService,\r\n        private confirmationDialogService: ConfirmationDialogService,\r\n        private dataService: DataService,) { }\r\n\r\n    get f() { return this.locationForm['controls']; }\r\n\r\n    tbdAddLocationSubscription: Subscription = new Subscription();\r\n\r\n    ngOnInit() { this.subscribeTbdAddLocation();\r\n        this.CompDdlSetting = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'id',\r\n            textField: 'text',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n     }\r\n\r\n    ngOnDestroy() { this.tbdAddLocationSubscription ? this.tbdAddLocationSubscription.unsubscribe() : null; }\r\n\r\n    onCompSelect(company: any, isSelected: boolean) {\r\n\r\n        if(isSelected){\r\n          this.f.CustomerDetails.get('CompanyId').setValue(company.id);\r\n          this.companyChanged(company.id);\r\n        }\r\n        else{\r\n          this.CompanyContactPersonsList = [];\r\n          this.allJobList = [];\r\n        }\r\n    \r\n        this.f.CustomerDetails.get('UserId').setValue(null);\r\n        this.f.CustomerDetails.get('PhoneNumber').setValue(null);\r\n        this.f.CustomerDetails.get('Email').setValue(null);\r\n        // this.f.AddressDetails.get('JobId').setValue(null);\r\n        // this.f.AddressDetails.get('JobName').setValue(null);\r\n      }\r\n\r\n    openPanel(TBD_DR?: any) {\r\n\r\n        if (!this.RegionId) {\r\n            Declarations.msgerror(\"Region not selected.\", null, null);\r\n            return;\r\n        }\r\n\r\n        this._initiated ? null : this._initiated = true\r\n        this._opened = true;\r\n        this.formSubmited = false;\r\n        this.mapConstants = new MapConstants();\r\n\r\n        this.IsTBDRequest = TBD_DR? true: false;\r\n        this.initailizeLocationForm();\r\n        this.f.IsTBDRequest.setValue(this.IsTBDRequest);\r\n\r\n        if (TBD_DR) {\r\n            let _this = this;\r\n            if (TBD_DR.ProductTypeId != 10) {\r\n                this.addLocationService.getTfxProduct(TBD_DR.FuelTypeId).subscribe(data => {\r\n                    _this.productDetails = data;\r\n                    if (data) {\r\n                        if (_this.f.FuelDetails.get('FuelDisplayGroupId').value != data.DisplayGroupId) {\r\n                            _this.deliveryTypeChanged(data.DisplayGroupId);\r\n                        }\r\n                        _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(data.DisplayGroupId);\r\n                        _this.f.FuelDetails.get('FuelTypeId').setValue(data.Id);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.f.FuelDetails.get('FuelTypeId').setValue(this.tbdDrProductId);\r\n                this.f.FuelDetails.get('FuelDisplayGroupId').setValue(3);\r\n            }\r\n        }\r\n        else {\r\n            this.IsTBDRequest = false;\r\n            this.FuelTypeId = null;\r\n            this.ProductTypeName = null;\r\n        }\r\n        this.initPickupForm();\r\n        this.getAllTPOCompanies();\r\n        this.getCurrecyList();\r\n        this.getFuelProducts();\r\n        this.getCountries();\r\n        this.getCountryGroup();\r\n        this.getStatesOfAllCountries();\r\n        this.getPreferencesSettings();\r\n    }\r\n\r\n    initailizeLocationForm() {\r\n\r\n        this.locationForm = this.fb.group({\r\n\r\n            //Id: this.fb.control(null),\r\n            SendInvitationLink: this.fb.control(false),\r\n            RegionId: this.fb.control(this.RegionId),\r\n            IsSupressOrderPricing: this.fb.control(true),\r\n            IsMarineLocation: this.fb.control(false),\r\n            PreferenceSettingId: this.fb.control(0),\r\n            IsTBDRequest: this.fb.control(false),\r\n            IsRegularBuyer: this.fb.control(true),\r\n            CustomerDetails: this.fb.group({\r\n                //Id: this.fb.control(null),\r\n                UserId: this.fb.control(null),\r\n                CompanyId: this.fb.control(null),\r\n                IsNewUser: this.fb.control(true),\r\n                IsNewCompany: this.fb.control(true),\r\n                CompanyName: this.fb.control(null, Validators.required),\r\n                Name: this.fb.control(null, Validators.required),\r\n                PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Phone)]),\r\n                Email: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Email)]),\r\n                IsInvitationEnabled: this.fb.control(false),\r\n                IsNotifySchedules: this.fb.control(false),\r\n            }),\r\n\r\n            AddressDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                IsNewJob: this.fb.control(true),\r\n                JobName: this.fb.control(null, Validators.required),\r\n                DisplayJobID: this.fb.control(null),\r\n                JobId: this.fb.control(null),\r\n                Address: this.fb.control(null),\r\n                City: this.fb.control(null),\r\n                StateId: this.fb.control(null, Validators.required),\r\n                CountryId: this.fb.control(1, Validators.required),\r\n                CountryGroupId: this.fb.control(null),\r\n                CountyName: this.fb.control(null),\r\n                CountryCode: this.fb.control(null),\r\n                Country: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy', Currency: 1, UoM: 1 }),\r\n                CountryGroup: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy', Currency: 1, UoM: 1 }),\r\n                //Country: this.fb.group({ Id: this.fb.control(1, Validators.required), Name: this.fb.control('Dummy'), Code: this.fb.control('Dummy'), Currency: this.fb.control(1), UoM: this.fb.control(1) }),\r\n                StateName: this.fb.control(null),\r\n                State: this.fb.control({ Id: null, Name: 'Dummy', Code: 'Dummy' }),\r\n                //State: this.fb.control({ Id: this.fb.control(null, Validators.required), Name: this.fb.control('Dummy'), Code: this.fb.control('Dummy') }),\r\n                Currency: this.fb.control(1),\r\n                ZipCode: this.fb.control(null),\r\n                IsProFormaPoEnabled: this.fb.control(false),\r\n                SignatureEnabled: this.fb.control(false),\r\n                IsGeocodeUsed: this.fb.control(false),\r\n                Latitude: this.fb.control(null, Validators.pattern('^[0-9.-]*$')),\r\n                Longitude: this.fb.control(null, Validators.pattern('^[0-9.-]*$')),\r\n                TimeZoneName: this.fb.control(null),\r\n                LocationManagedType: this.fb.control(0),\r\n                IsCompanyOwned: this.fb.control(false),\r\n                MarineUoM: this.fb.control(0),\r\n                IsMarineLocation: this.fb.control(false),\r\n                InventoryDataCaptureType: this.fb.control(0),\r\n                UOM: this.fb.control(1)\r\n            }),\r\n\r\n            FuelDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                FuelDisplayGroupId: this.fb.control(1),\r\n                FuelTypeId: this.fb.control(null, Validators.required),\r\n                NonStandardFuelName: this.fb.control(null),\r\n                NonStandardFuelDescription: this.fb.control(null),\r\n                FuelRequestFees: this.intilizeFuelRequestFees(),\r\n                FuelQuantity: this.fb.group({\r\n                    Quantity: this.fb.control(0),\r\n                    QuantityTypeId: this.fb.control(3),\r\n                    MinimumQuantity: this.fb.control(0),\r\n                    MaximumQuantity: this.fb.control(0),\r\n                    QuantityIndicatorTypes: this.fb.control(1),\r\n                }, { validator: this.CompareNumbers }),\r\n                FuelPricing: this.fb.group({\r\n                    FuelPricingDetails: this.fb.group({\r\n                        FreightOnBoardTypes: this.fb.control(0)\r\n                    })\r\n                })\r\n            }),\r\n\r\n            FuelDeliveryDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                DeliveryTypeId: this.fb.control(1),\r\n                StartDate: this.fb.control(moment(new Date()).format('MM/DD/YYYY')),\r\n                EndDate: this.fb.control(null),\r\n                StartTime: this.fb.control('08:00'),\r\n                EndTime: this.fb.control('17:00'),\r\n                SingleDeliverySubTypes: this.fb.control(0),\r\n            }),\r\n\r\n            FuelPricingDetails: this.fb.group({\r\n                Id: this.fb.control(null),\r\n                PricingTypeId: this.fb.control(3),\r\n                PricePerGallon: this.fb.control(null),\r\n                Code: this.fb.control(null),\r\n                CodeId: this.fb.control(null),\r\n                CodeDescription: this.fb.control(null),\r\n                TempPricingCodeDetails: this.fb.control(null),\r\n                RackAvgTypeId: this.fb.control(1),\r\n                RackPrice: this.fb.control(0),\r\n                EnableCityRack: this.fb.control(null),\r\n                TerminalName: this.fb.control(null),\r\n                TerminalId: this.fb.control(null),\r\n                SupplierCostMarkupTypeId: this.fb.control(1),\r\n                SupplierCostMarkupValue: this.fb.control(0),\r\n                SupplierCost: this.fb.control(null),\r\n                CityGroupTerminalId: this.fb.control(null),\r\n                FuelPricingDetails: this.fb.group({\r\n                    PricingSourceId: this.fb.control(1),\r\n                    PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\r\n                }),\r\n                //TIER PRICING\r\n                IsTierPricingRequired: this.fb.control(null),\r\n                TierPricing: this.fb.group({\r\n                    TierPricingType: this.fb.control(TierPricingType.VolumeBased),\r\n                    IsResetCumulation: this.fb.control(null),\r\n                    AboveQuantityPricing: this.fb.control(null),\r\n                    Pricings: this.fb.array([]),\r\n                    ResetCumulationSetting: this.fb.group({\r\n                        CumulationType: this.fb.control(1),\r\n                        Day: this.fb.control(null),\r\n                        Date: this.fb.control(null),\r\n                    }),\r\n                    DisplayCumulationFrequency: this.fb.control(null)\r\n                }),\r\n            }),\r\n\r\n            DeliveryRequest: this.fb.group({\r\n                Priority: this.fb.control(1),\r\n                ScheduleQuantityType: this.fb.control(1),\r\n                RequiredQuantity: this.fb.control(null, this.IsTBDRequest ? [] : [Validators.required, Validators.min(this._minimumConst)]),\r\n                DeliveryLevelPO: this.fb.control(''),\r\n                BadgeNo1: this.fb.control(null),\r\n                BadgeNo2: this.fb.control(null),\r\n                BadgeNo3: this.fb.control(null),\r\n                DispatcherNote: this.fb.control(null),\r\n                PickupLocationType: this.fb.control(0),\r\n                Terminal: this.utilService.getTerminalForm(null, false),\r\n                BulkPlant: this.utilService.getBulkPlantForm(null, false),\r\n            })\r\n        });\r\n        this.setAddressValidators(Country.USA);\r\n\r\n    }\r\n\r\n    intilizeFuelRequestFees() {\r\n        let _FRFArray = this.fb.array([]);\r\n        _FRFArray.push(this.fb.group({\r\n            FeeTypeId: this.fb.control(null),\r\n            FeeSubTypeId: this.fb.control(null),\r\n            FeeSubTypeName: this.fb.control(null),\r\n            Fee: this.fb.control(null),\r\n            FeeDetails: this.fb.control(null),\r\n            FeeConstraintTypeId: this.fb.control(null),\r\n            IncludeInPPG: this.fb.control(null),\r\n            OtherFeeTypeId: this.fb.control(null),\r\n        }));\r\n        return _FRFArray;\r\n    }\r\n\r\n    updateFormControlValidators(control: any, validators: any[]) {\r\n        control.setValidators(validators);\r\n        control.updateValueAndValidity();\r\n    }\r\n\r\n    CompareNumbers(control: AbstractControl) {\r\n        if (control.get('MinimumQuantity').value > control.get('MaximumQuantity').value) {\r\n            control.get('MaximumQuantity').setErrors({ compareNumber: true })\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    getPreferencesSettings() {\r\n        let _this = this;\r\n        if (this.preferencesSetting) {\r\n            //this.setTreferenceSetting()\r\n            return;\r\n        }\r\n        this.preferencesSetting = null;\r\n        this.addLocationService.GetPreferencesSettings().subscribe(data => {\r\n            if (data) {\r\n                _this.locationForm.patchValue(data);\r\n                _this.defaultCompanyCountryId = data.AddressDetails.Country.Id;\r\n                _this.mapConstants = new MapConstants(_this.defaultCompanyCountryId);\r\n                _this.locationForm.get('AddressDetails').get('CountryId').setValue(_this.defaultCompanyCountryId);\r\n                _this.UoM = _this.defaultCompanyCountryId == 1 ? 1 : 2;\r\n                _this.locationForm.get('FuelDeliveryDetails.StartDate').patchValue(moment(new Date()).format('MM/DD/YYYY'));\r\n                _this.locationForm.get('RegionId').patchValue(_this.RegionId);\r\n                if (!_this.f.IsSupressOrderPricing.value) {\r\n                    _this.f.FuelPricingDetails.get('PricePerGallon').setValidators([Validators.required]);\r\n                }\r\n                if (this.IsTBDRequest) {\r\n                    _this.f.IsTBDRequest.setValue(this.IsTBDRequest);\r\n                    if (_this.tbdDrProductTypeId != 10) {\r\n                        if (_this.productDetails) {\r\n                            if (_this.f.FuelDetails.get('FuelDisplayGroupId').value != _this.productDetails.DisplayGroupId) {\r\n                                _this.deliveryTypeChanged(_this.productDetails.DisplayGroupId);\r\n                            }\r\n                            _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(_this.productDetails.DisplayGroupId);\r\n                            _this.f.FuelDetails.get('FuelTypeId').setValue(_this.productDetails.Id);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _this.f.FuelDetails.get('FuelTypeId').setValue(_this.tbdDrProductId);\r\n                        _this.f.FuelDetails.get('FuelDisplayGroupId').setValue(3);\r\n                    }\r\n                }\r\n                _this.f.FuelPricingDetails.get('TierPricing').get('ResetCumulationSetting').get('CumulationType').setValue(1);\r\n                if (_this.pricingModuleComponent) {\r\n                    _this.pricingModuleComponent.setPricingCode();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    quantityTypeChanged(type: number) {\r\n\r\n        this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('Quantity'), []);\r\n        this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity'), []);\r\n        //this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity'), []);\r\n\r\n        this.f.FuelDetails.get('FuelQuantity').get('Quantity').setValue(0);\r\n        this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').setValue(0);\r\n        this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').setValue(0);\r\n\r\n        //Fixed\r\n        if (type == 1) {\r\n            //add validation for Quantity\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('Quantity'), [Validators.required, Validators.min(this._minimumConst)]);\r\n        }\r\n        //Range\r\n        else if (type == 2) {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MinimumQuantity'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            //this.updateFormControlValidators(this.f.FuelDetails.get('FuelQuantity').get('MaximumQuantity'), [Validators.required]);\r\n        }\r\n        //Not Specified//No validation required\r\n    }\r\n\r\n    setFuelTypevalidation(type: number) {\r\n        //other\r\n        if (type == 3) {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), []);\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), [Validators.required]);\r\n        }\r\n        //In Location Area//Common//Less common\r\n        else {\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('FuelTypeId'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.FuelDetails.get('NonStandardFuelName'), []);\r\n        }\r\n    }\r\n\r\n    deliveryTypeChanged(type: number) {\r\n\r\n        //SET VALIDATION\r\n        this.setFuelTypevalidation(type);\r\n\r\n        //GET PRODUCTS\r\n        if (type == 1 || type == 2) {\r\n            this.getFuelProducts();\r\n        }\r\n        else if (type == 4) {\r\n            this.getProductListByZip();\r\n        }\r\n        if (type == 3 && this.pricingModuleComponent) {\r\n            this.f.FuelPricingDetails.get('PricingTypeId').setValue(2);\r\n            //DONT UPDATE VALIDATION IF TIER PRICING ALREADU CHECKED\r\n            if(!this.f.FuelPricingDetails.get('IsTierPricingRequired').value){\r\n                this.pricingModuleComponent.pricingTypeChanged(2)\r\n            }\r\n        }\r\n    }\r\n\r\n    getStatesOfAllCountries() {\r\n\r\n        if (this.statesList.length > 0) {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n            return;\r\n        }\r\n\r\n        this.addLocationService.getStatesOfAllCountries().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.statesList = data;\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n            }\r\n        });\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode && this.CountryList && this.CountryList.length > 0) {\r\n            \r\n            countryCode = countryCode == \"US\" ? \"USA\" : countryCode;\r\n            let countryId = 0;\r\n            let county = this.CountryList.find(c => c.Code == countryCode);\r\n            if (county && county.Id)\r\n                countryId = county.Id;\r\n                \r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.statesList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.statesList.filter(t => t.CountryId == countryId);\r\n            }\r\n        } \r\n    }\r\n    countryChanged() {\r\n        this.f.AddressDetails.get('StateId').setValue(null)\r\n        let _countryId = this.f.AddressDetails.get('CountryId').value;\r\n        _countryId == 2 ? this.UoM = 2 : this.UoM = 1\r\n\r\n        if (_countryId != 4) {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.f.AddressDetails.get('CountryId').value) || [];\r\n        } else {\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == this.f.AddressDetails.get('CountryGroupId').value) || [];\r\n        }        \r\n\r\n        //UPDATE MAP POINTER\r\n        // this.mapConstants = new MapConstants(_countryId);\r\n        // this.f.AddressDetails.get('Latitude').setValue(this.mapConstants.CenterLat);\r\n        // this.f.AddressDetails.get('Longitude').setValue(this.mapConstants.CenterLon);\r\n\r\n        this.getAddress();\r\n        this.setAddressValidators(_countryId);\r\n\r\n    }\r\n\r\n    getTPOContactPersonDetails(userId: number) {\r\n\r\n        this.addLocationService.getTPOContactPersonDetails(userId).subscribe(data => {\r\n            if (data) {\r\n                this.CompanyContactPersonsDetails = data;\r\n                this.locationForm.get('CustomerDetails').get('PhoneNumber').setValue(this.CompanyContactPersonsDetails.PhoneNumber);\r\n                this.locationForm.get('CustomerDetails').get('Email').setValue(this.CompanyContactPersonsDetails.Email);\r\n            }\r\n        });\r\n    }\r\n\r\n    getFuelProducts() {\r\n\r\n        if(this.f.AddressDetails.get('IsMarineLocation').value){\r\n            return;\r\n        }\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        this.FuelProductsList = [];\r\n\r\n        let companyId = this.f.CustomerDetails['controls']['CompanyId'].value || 0;\r\n        let jobId = this.f.AddressDetails['controls']['JobId'].value || 0;\r\n        let productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\r\n\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getFuelProducts(productDisplayGroupId, companyId, jobId).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.FuelProductsList = data;\r\n                //this.f.FuelDetails.get('FuelTypeId').setValue(data[0].Id);\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n\r\n    currentRadious: number = 100;\r\n    getProductListByZip(radious?: number) {\r\n\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        //this.FuelProductsList = [];\r\n\r\n        if(!this.AddressRawData){\r\n            return;\r\n        }\r\n\r\n        let address = this.f.AddressDetails.get('Address').value;\r\n        let state = this.AddressRawData.StateName;\r\n        let city = this.AddressRawData.City;\r\n        let country = (this.AddressRawData.CountryCode == 'US') ? 'USA' : (address.CountryCode == 'CA' ? 'CAN' : 'IND');\r\n        let zipcode = this.AddressRawData.ZipCode;\r\n        let input = address + ' ' + city + ' ' + state + ' ' + country + ' ' + zipcode;\r\n        !radious ? this.currentRadious = 100 : null;\r\n\r\n        if (zipcode) {\r\n            this._isLoadingProducts = true;\r\n            this.addLocationService.getProductListByZip(input, this.currentRadious).subscribe(data => {\r\n                this._isLoadingProducts = false;\r\n                if (data && data.length > 0) {\r\n                    if (this.currentRadious == 100) {\r\n                        this.FuelProductsList = data;\r\n                    }\r\n                    else {\r\n                        this.FuelProductsList = this.FuelProductsList.concat(data);\r\n                    }\r\n                    this.f.FuelDetails.get('FuelTypeId').setValue(data[0].Id);\r\n                }\r\n                this.currentRadious += 100;\r\n                this._isLoadingProducts = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    fuelTypeIdChanged(value: string) {\r\n        if (value == 'seeMore') {\r\n            this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n            this.getProductListByZip(this.currentRadious);\r\n        }\r\n    }\r\n\r\n    markerDragEnd(event: any) {\r\n        let state = this.f.AddressDetails.get('StateName').value || '';\r\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\r\n        let city = this.f.AddressDetails.get('City').value || '';\r\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\r\n        if (city == \"\" || state == \"\" || country == \"\" || zipcode == \"\") {\r\n            this.updateGeoCode(event.coords.lat, event.coords.lng);\r\n        }\r\n        else {\r\n            this.confirmationDialogService.confirm('Map update', 'Geo Codes shifted to a new location!')\r\n                .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\r\n                .catch(() => this.previousLatLon());\r\n        }\r\n    }\r\n\r\n    updateGeoCode(lat: any, lng: any) {\r\n        this.addLocationService.GetAddressByLongLat(lat, lng).subscribe(response => {\r\n            if (response) {\r\n                this.updateAddress(response, true);\r\n                this.f.AddressDetails.get('Latitude').patchValue(lat.toFixed(8));\r\n                this.f.AddressDetails.get('Longitude').patchValue(lng.toFixed(8));\r\n                this.getTimeZoneUsingLatLng(lat, lng);\r\n            }\r\n        });\r\n    }\r\n\r\n    previousLatLon() {\r\n        if (!this.f.AddressDetails.get('Latitude').value || !this.f.AddressDetails.get('Longitude').value) {\r\n            // let _mapConstants = new MapConstants(this.f.AddressDetails.get('CountryId').value)\r\n            // this.f.AddressDetails.get('Latitude').setValue(_mapConstants.CenterLat);\r\n            // this.f.AddressDetails.get('Longitude').setValue(_mapConstants.CenterLon);\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = this.f.AddressDetails.get('Latitude').value;\r\n            this.mapConstants.CenterLon = this.f.AddressDetails.get('Longitude').value;\r\n        }\r\n    }\r\n\r\n    getAddressByZip() {\r\n        let zipCode = this.f.AddressDetails.get('ZipCode').value;\r\n        let address = this.f.AddressDetails.get('Address').value || \"\";\r\n        if (zipCode) {\r\n            this.addLocationService.getAddressByZip(zipCode, address).subscribe((response) => {\r\n                if (response) {\r\n                    this.updateAddress(response)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAddress() {\r\n\r\n        let address = this.f.AddressDetails.get('Address').value || '';\r\n        let state = this.f.AddressDetails.get('StateName').value || '';\r\n        let country = this.f.AddressDetails.get('CountryCode').value || ''\r\n        let city = this.f.AddressDetails.get('City').value || '';\r\n        let zipcode = this.f.AddressDetails.get('ZipCode').value || '';\r\n\r\n        if (address == '' || state == '' || country == '' || zipcode == '')\r\n            return;\r\n\r\n        address = address + \" \" + city + \" \" + state + \" \" + country + \" \" + zipcode;\r\n\r\n        this.addLocationService.GetAddress(address).subscribe((data) => {\r\n            this.updateAddress(data)\r\n        })\r\n    }\r\n\r\n    stateChanged() {\r\n        if (this.pricingModuleComponent) {\r\n            this.pricingModuleComponent.getCityGroupTerminals();\r\n        }\r\n        this.getAddress();\r\n        this.setBillableQuantity();\r\n    }\r\n\r\n    setBillableQuantity() {\r\n        let state = this.statesList.find(st => st.StateId == this.f.AddressDetails.get('StateId').value);\r\n        if (state && state.QuantityIndicatorId) {\r\n            this.f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').setValue(state.QuantityIndicatorId);\r\n        }\r\n    }\r\n\r\n    getTimeZoneUsingLatLng(lat, lng) {\r\n        var times_Stamp = (Math.round((new Date().getTime()) / 1000)).toString();\r\n        let _this = this;\r\n        this.addLocationService.getTimeZoneName(lat, lng, times_Stamp, this.MapsApiKey).subscribe((data: any) => {\r\n            if (data.timeZoneId != null) {\r\n                var timeZoneName = data.timeZoneName;\r\n                timeZoneName = _this.ParseTimeZone(timeZoneName);\r\n                this.f.AddressDetails.get('TimeZoneName').patchValue(timeZoneName);\r\n            }\r\n        });\r\n    }\r\n\r\n    ParseTimeZone(timeZoneName) {\r\n        if (timeZoneName != undefined && timeZoneName != null) {\r\n            timeZoneName = timeZoneName.replace(\"Daylight\", \"Standard\");\r\n            timeZoneName = timeZoneName.replace(\"Alaska \", \"Alaskan \");\r\n            timeZoneName = timeZoneName.replace(\"Hawaii-Aleutian\", \"Hawaiian\");\r\n        }\r\n        return timeZoneName\r\n    }\r\n\r\n    AddressRawData: Geocode = null;\r\n    updateAddress(address: Geocode, isDragged?: boolean) {\r\n        if (address.CountryCode && address.StateName) {\r\n            this.AddressRawData = address;\r\n            let countryId = (address.CountryCode == 'USA') ? 1 : (address.CountryCode == 'CAN' ? 2 : this.f.AddressDetails.get('CountryId').value);\r\n            let state = this.statesList.find(st => st.StateName.toLowerCase() == address.StateName.toLowerCase());\r\n            let stateId = (state && state.StateId) ? state.StateId : this.f.AddressDetails.get('StateId').value;\r\n            this.UoM = countryId == 1 ? 1 : 2;\r\n            this.f.AddressDetails.get('City').patchValue(address.City);\r\n            this.f.AddressDetails.get('ZipCode').patchValue(address.ZipCode);\r\n            this.f.AddressDetails.get('CountyName').patchValue(address.CountyName);\r\n            this.f.AddressDetails.get('CountryCode').patchValue(address.CountryCode);\r\n            this.f.AddressDetails.get('CountryId').patchValue(countryId);\r\n            this.f.AddressDetails.get('StateName').patchValue(address.StateName);\r\n            this.f.AddressDetails.get('StateId').patchValue(stateId);\r\n            this.f.AddressDetails.get('State').patchValue({ Id: stateId, Code: address.StateName, Name: address.StateName });\r\n            if (countryId == Country.USA) {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(1);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 1, UoM: 1 });\r\n            }\r\n            else if (countryId == Country.CAN) {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(2);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 2, UoM: 2 });\r\n            }\r\n            else {\r\n                this.f.AddressDetails.get('MarineUoM').patchValue(1);\r\n                this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: address.CountryCode, Name: address.CountryCode, Currency: 2, UoM: 2 });\r\n            }\r\n            if (isDragged) {\r\n                this.f.AddressDetails.get('Address').patchValue(address.Address);\r\n            }\r\n            if (address.Latitude) {\r\n                this.f.AddressDetails.get('Latitude').patchValue(address.Latitude.toFixed(8));\r\n                this.f.AddressDetails.get('Longitude').patchValue(address.Longitude.toFixed(8));\r\n                this.mapConstants.CenterLat = address.Latitude;\r\n                this.mapConstants.CenterLon = address.Longitude;\r\n                this.getTimeZoneUsingLatLng(address.Latitude, address.Longitude);\r\n            }\r\n\r\n            this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n        }\r\n    }\r\n\r\n    isCompanyExits() {\r\n        this.isCompanyNameExist = false;\r\n        if (this.f.CustomerDetails.get('CompanyName').value) {\r\n            this.addLocationService.isTpoCompanyExist(this.f.CustomerDetails.get('IsNewCompany').value, this.f.CustomerDetails.get('CompanyName').value).subscribe(data => {\r\n                if (data != null || data != undefined) {\r\n                    this.isCompanyNameExist = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    isJobExist(companyId?: string) {\r\n        this.isJobNameExist = false;\r\n        if (!this.f.CustomerDetails.get('IsNewCompany').value && this.f.AddressDetails.get('JobName').value && (companyId || this.f.CustomerDetails.get('CompanyId').value)) {\r\n            this.addLocationService.isJobNameExist(this.f.AddressDetails.get('JobName').value, companyId || this.f.CustomerDetails.get('CompanyId').value).subscribe(response => {\r\n                if (response != null && response != undefined) {\r\n                    this.isJobNameExist = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    IsPhoneNumberValid() {\r\n\r\n        this.isPhoneNumberValid = true;\r\n        let phone = this.f.CustomerDetails.get('PhoneNumber').value;\r\n\r\n        if (phone && this.f.CustomerDetails.get('PhoneNumber').valid) {\r\n            this.addLocationService.IsPhoneNumberValid(phone).subscribe(data => {\r\n                if (data != null || data != undefined) {\r\n                    this.isPhoneNumberValid = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    newCompanyChecked(isNewCompany: boolean) {\r\n\r\n        this.f.CustomerDetails.get('CompanyId').setValue(null);\r\n        this.f.CustomerDetails.get('UserId').setValue(null);\r\n        this.f.CustomerDetails.get('IsNewUser').setValue(true);\r\n\r\n        this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), [Validators.required]);\r\n        this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), []);\r\n\r\n        if (isNewCompany) {\r\n            this.f.CustomerDetails.get('Email').setValue(null);\r\n            this.f.CustomerDetails.get('PhoneNumber').setValue(null);\r\n            this.f.CustomerDetails.get('CompanyName').setValue(null);\r\n\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyName'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyId'), []);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyName'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('CompanyId'), [Validators.required]);\r\n\r\n            this.isJobExist();\r\n        }\r\n\r\n    }\r\n\r\n    companyChanged(companyId: string) {\r\n        this.getTPOCompanyContactPersons(companyId);\r\n        this.isJobExist(companyId)\r\n    }\r\n\r\n    _isLoadingPerson: boolean = false;\r\n    getTPOCompanyContactPersons(companyId: string) {\r\n        if (companyId) {\r\n\r\n            this.f.CustomerDetails.get('IsNewUser').setValue(false);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), [Validators.required]);\r\n\r\n            this.CompanyContactPersonsList = [];\r\n            this._isLoadingPerson = true;\r\n            this.addLocationService.getTPOCompanyContactPersons(companyId).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.CompanyContactPersonsList = data;\r\n                    let companyname = this.AllTPOCompaniesList.filter(x => x.id == companyId);\r\n                    this.locationForm.get('CustomerDetails').get('CompanyName').setValue(companyname[0].text);\r\n                }\r\n                this._isLoadingPerson = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    getCurrecyList() {\r\n\r\n        if (this.currucyList.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this.addLocationService.getCurrenyList().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.currucyList = data;\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllTPOCompanies() {\r\n\r\n        if (this.AllTPOCompaniesList.length > 0) {\r\n            return;\r\n        }\r\n\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getAllTPOCompanies().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.AllTPOCompaniesList = data.map((item: any) => {\r\n                    return { id: item.Id, text: item.Name }\r\n                });\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n\r\n    clickNewPerson(isnew: boolean) {\r\n        if (isnew) {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), [Validators.required]);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), []);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('Name'), []);\r\n            this.updateFormControlValidators(this.f.CustomerDetails.get('UserId'), [Validators.required]);\r\n        }\r\n        this.f.CustomerDetails.get('IsNewUser').setValue(isnew);\r\n    }\r\n\r\n    getCountries() {\r\n        if (this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n\r\n    }\r\n\r\n    getCountryGroup() {\r\n        if (this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n\r\n    }\r\n\r\n    //DR - PICKUP LOCATION BULK PLANT\r\n    editPickupLocation(): void {\r\n\r\n        this.initPickupForm();\r\n        let pricingCode = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').value;\r\n        let jobCountryId = this.f.AddressDetails.get('CountryId').value,\r\n            pricingCodeId = pricingCode ? pricingCode.Id : 0,\r\n            fuelType = this.f.FuelDetails.get('FuelTypeId').value,\r\n            jobLatitude = this.f.AddressDetails.get('Latitude').value,\r\n            jobLongitude = this.f.AddressDetails.get('Longitude').value,\r\n            isSupressOrderPricing = this.locationForm.get('IsSupressOrderPricing').value;\r\n        if (jobCountryId > 0 && pricingCodeId > 0 && fuelType > 0 && jobLatitude != 0 && jobLongitude != 0) {\r\n            this.addLocationService.getFuelTerminals(jobCountryId, pricingCodeId, fuelType, this.defaultCompanyCountryId, isSupressOrderPricing, jobLatitude, jobLongitude, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            });\r\n        }\r\n        if (this.BulkPlants.length == 0) {\r\n            this.addresService.getBulkPlants('').subscribe(data => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        }\r\n\r\n        this.isReadOnly = false;\r\n    }\r\n\r\n    initPickupForm() {\r\n        this.PickupForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(1),\r\n            Terminal: this.utilService.getTerminalForm(null, true),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, true)\r\n        });\r\n    }\r\n\r\n    onTerminalSelected(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n\r\n    removePickupLocation() {\r\n        this.locationForm.controls.DeliveryRequest.get('PickupLocationType').setValue(0);\r\n        this.locationForm.controls.DeliveryRequest.get('Terminal').patchValue(this.utilService.getTerminalForm(null, false).value);\r\n        this.locationForm.controls.DeliveryRequest.get('BulkPlant').patchValue(this.utilService.getBulkPlantForm(null, false).value);\r\n    }\r\n\r\n    setStateCode(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n\r\n    onBulkPlantSearched(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n\r\n    onBulkPlantSelected(event: any): void {\r\n\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress(event.Name);\r\n\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n\r\n    getBulkPlantAddress(bulkPlantName: string) {\r\n        this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: { Id: response.State.Id, Code: response.State.Code, Name: response.State.Code },\r\n                Country: { Id: response.Country.Id, Code: response.Country.Code, Name: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n        });\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n\r\n    updatePickupLocation() {\r\n\r\n        let pickupDetails = this.PickupForm.getRawValue();\r\n        this.locationForm.controls.DeliveryRequest.get('PickupLocationType').setValue(pickupDetails.PickupLocationType);\r\n\r\n        if ((this.PickupForm.get('PickupLocationType').value == 1 && this.PickupForm.get('Terminal').valid)) {\r\n            this.locationForm.controls.DeliveryRequest.get('Terminal').patchValue(pickupDetails.Terminal);\r\n        }\r\n        else if ((this.PickupForm.get('PickupLocationType').value == 2 && this.PickupForm.get('BulkPlant').valid)) {\r\n            this.locationForm.controls.DeliveryRequest.get('BulkPlant').patchValue(pickupDetails.BulkPlant);\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Invalid pickup details.\", null, null);\r\n        }\r\n\r\n        let dismiss = document.getElementById('btnDrPickupClose2') as HTMLElement;\r\n        dismiss.click();\r\n\r\n    }\r\n\r\n    getAddressByZipForPickup(event: any): void {\r\n        let zipCode = event.target.value;\r\n        let regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        let regexCan = new RegExp(RegExConstants.CanZip);\r\n\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        let addressModel = this.addressMapper(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: addressModel.Country,\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n\r\n                        this.mapConstants.CenterLat = data.Latitude;\r\n                        this.mapConstants.CenterLon = data.Longitude;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    addressMapper(data: any): AddressModel {\r\n\r\n        let state = this.statesList.find(x => x.StateCode == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = { Id: state.StateId, Code: state.StateCode, Name: state.StateName };\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.formSubmited = true;\r\n\r\n        if (this.f.CustomerDetails.get('IsNewCompany').value) {\r\n            //JOB VALIDATION NOT REQUIRED FOR NEW COMPANY\r\n            this.isJobNameExist = false;\r\n        }\r\n        else {\r\n            //COMPANY NAME VALIDATION NOT REQUIRED FOR EXISTING COMPANY\r\n            this.isCompanyNameExist = false;\r\n        }\r\n\r\n        if (this.locationForm.valid && !this.isCompanyNameExist && !this.isJobNameExist)\r\n        {\r\n            //SET STATE COUNTRY DETAILS\r\n            // let stateName = this.f.AddressDetails.get('StateName').value;\r\n            // let stateId = this.f.AddressDetails.get('StateId').value;\r\n            // let countryCode = this.f.AddressDetails.get('CountryCode').value;\r\n            // let countryId = this.f.AddressDetails.get('CountryId').value;\r\n            //let countryName = this.f.AddressDetails.get('CountryName').value;\r\n            // this.f.AddressDetails.get('Country').patchValue({ Id: countryId, Code: countryCode, Name: countryCode, Currency: this.UoM, UoM: this.UoM });\r\n            // this.f.AddressDetails.get('State').patchValue({ Id: stateId, Code: stateName, Name: stateName });\r\n            \r\n            if(this.f.FuelPricingDetails.get('IsTierPricingRequired').value){\r\n                let pricings = this.f.FuelPricingDetails.get('TierPricing').get('Pricings') as FormArray;                \r\n                pricings.controls.forEach((pricing: FormGroup)=>{\r\n                    pricing.get('UoM').setValue(this.UoM);\r\n                    pricing.get('Currency').setValue(this.UoM);\r\n                })\r\n            }\r\n            \r\n            var formValue = this.locationForm.getRawValue();\r\n            if (formValue.DeliveryRequest.PickupLocationType != 2) {\r\n                formValue.DeliveryRequest.BulkPlant = null;\r\n            }\r\n            else {\r\n                let state = this.statesList.find(x => x.StateId == formValue.DeliveryRequest.BulkPlant.State.Id);\r\n                formValue.DeliveryRequest.BulkPlant.State.Name = state.StateName;\r\n                formValue.DeliveryRequest.BulkPlant.Country.Name = formValue.DeliveryRequest.BulkPlant.Country.Code;\r\n            }\r\n            this._loading = true;\r\n            this.addLocationService.createOrder(formValue).subscribe((data: any) => {\r\n                this._loading = false;\r\n                if (data != null && parseInt(data.StatusCode) == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this._opened = false;\r\n                    //closeSlidePanel();\r\n                    //this.clearForm();   \r\n                    if (this.IsTBDRequest) {\r\n                        this.dataService.setGetOnTheFlyLocationDetailsSubject(data);\r\n                    }\r\n                    else {\r\n                        this.OnTheFlyLocationCreate.emit();\r\n                    }\r\n                }\r\n                else {\r\n                    const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                    Declarations.msgerror(statusMessage, undefined, undefined);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    marineCheckBoxChanged(value: boolean){\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(null);\r\n        if(value){\r\n            //\r\n            this.f.FuelDetails.get('FuelDisplayGroupId').setValue(1);\r\n            this.deliveryTypeChanged(1);\r\n            //\r\n            if(this.pricingModuleComponent){\r\n                this.f.FuelPricingDetails.get('IsTierPricingRequired').setValue(false);\r\n                this.pricingModuleComponent.tierPricingEnabled(false);\r\n            }\r\n            //\r\n            this.getMarineProductList();\r\n        }\r\n        else {\r\n            this.getFuelProducts();\r\n        }\r\n    }\r\n\r\n    deliveryTypeIdChanged(deliveryTypeId: number) {\r\n        if (deliveryTypeId == 1) {\r\n            this.f.FuelPricingDetails.get('TierPricing').get('TierPricingType').setValue(2);\r\n        }\r\n    }\r\n    getMarineProductList() {\r\n        this.MarineProductsList = [];\r\n        //let productDisplayGroupId = this.f.FuelDetails.get('FuelDisplayGroupId').value ? this.f.FuelDetails.get('FuelDisplayGroupId').value : 1;\r\n        this._isLoadingProducts = true;\r\n        this.addLocationService.getMarineProductList(6, 0,'', 1).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.MarineProductsList = data;\r\n            }\r\n            this._isLoadingProducts = false;\r\n        });\r\n    }\r\n    subscribeTbdAddLocation() {\r\n        this.tbdAddLocationSubscription = this.dataService.OpenOnTheFlyLocationFormSubject.subscribe((data: any) => {\r\n            this.tbdDrProductId = data.FuelTypeId;\r\n            this.tbdDrProductTypeId = data.ProductTypeId;\r\n            this.openPanel(data);\r\n        })\r\n    }\r\n\r\n\r\n    setAddressValidators(countryId: any) {\r\n        if (countryId == Country.CAR) {\r\n            this.f.AddressDetails.get('Address').clearValidators();\r\n            this.f.AddressDetails.get('Address').updateValueAndValidity();\r\n            this.f.AddressDetails.get('City').clearValidators();\r\n            this.f.AddressDetails.get('City').updateValueAndValidity();\r\n            this.f.AddressDetails.get('CountyName').clearValidators();\r\n            this.f.AddressDetails.get('CountyName').updateValueAndValidity();\r\n            this.f.AddressDetails.get('ZipCode').clearValidators();\r\n            this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\r\n        }\r\n        else {\r\n            let validator = [Validators.required];\r\n            this.f.AddressDetails.get('Address').setValidators(validator);\r\n            this.f.AddressDetails.get('Address').updateValueAndValidity();\r\n            this.f.AddressDetails.get('City').setValidators(validator);\r\n            this.f.AddressDetails.get('City').updateValueAndValidity();\r\n            this.f.AddressDetails.get('CountyName').setValidators(validator);\r\n            this.f.AddressDetails.get('CountyName').updateValueAndValidity();\r\n            this.f.AddressDetails.get('ZipCode').setValidators(validator);\r\n            this.f.AddressDetails.get('ZipCode').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    isRequiredField(countryId: any) {        \r\n        if (countryId == 1 || countryId == 2) {\r\n            return true;\r\n        }\r\n        else if (countryId == 4) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","<div class=\"add-location-container\">\r\n    <a (click)=\"openPanel()\" placement=\"bottom\" ngbTooltip=\"Add a New TPO Location\" class=\"btn border border-secondary pull-right\"><i class=\"fa fa-map-marker-alt fs18\"></i></a>\r\n\r\n    <div *ngIf=\"_initiated\">\r\n        <ng-sidebar-container style=\"z-index: 99;\">\r\n            <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'right'\" [showBackdrop]=\"true\"\r\n                        style=\"height: 100vh\">\r\n                <div class=\"loader\" *ngIf=\"_loading\">\r\n                    <div class=\"loading-content text-center\">\r\n                        <div class=\"spinner\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs18 float-left mr10 mt3\"></i></a>\r\n                        <h3 *ngIf=\"!IsTBDRequest\" class=\"dib title\">Add Location</h3>\r\n                        <h3 *ngIf=\"IsTBDRequest\" class=\"dib title\">Add Location (TBD)</h3>\r\n                    </div>\r\n\r\n                    <form [formGroup]=\"locationForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"row\" formGroupName=\"CustomerDetails\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"well col-sm-12\">\r\n                                            <h4>Customer Information</h4>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" formControlName=\"IsNewCompany\"\r\n                                                               id=\"radio-newcustomer\" type=\"radio\" [value]=\"true\"\r\n                                                               (change)=\"newCompanyChecked(true)\">\r\n                                                        <label class=\"form-check-label\"\r\n                                                               for=\"radio-newcustomer\">New</label>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" id=\"radio-existingcustomer\"\r\n                                                               formControlName=\"IsNewCompany\" type=\"radio\" [value]=\"false\"\r\n                                                               (change)=\"newCompanyChecked(false)\">\r\n                                                        <label class=\"form-check-label\"\r\n                                                               for=\"radio-existingcustomer\">Existing</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 col-md-3\">\r\n                                                    <div class=\"form-group mb0\">\r\n                                                        <label for=\"CustomerDetails_CompanyName\">\r\n                                                            Company Name<span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <div class=\"mtm1 new-CompanyName\"\r\n                                                             *ngIf=\"f.CustomerDetails['controls']['IsNewCompany'].value\">\r\n                                                            <input class=\"form-control\" id=\"CustomerDetails_CompanyName\"\r\n                                                                   formControlName=\"CompanyName\" placeholder=\"Company\"\r\n                                                                   type=\"text\" value=\"\" (change)=\"isCompanyExits()\">\r\n                                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyName').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CustomerDetails.get('CompanyName').errors?.required\">\r\n                                                                    Company\r\n                                                                    Name is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"isCompanyNameExist && !f.CustomerDetails.get('CompanyName').errors\">\r\n                                                                <span class=\"text-danger\">\r\n                                                                    Company already\r\n                                                                    exists\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"existing-CompanyName\"\r\n                                                             *ngIf=\"f.CustomerDetails['controls']['IsNewCompany'].value!=true\">\r\n                                                            <!-- {{f.CustomerDetails.get('CompanyId').value}} -->\r\n\r\n\r\n                                                            <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                                     style=\"width: 100%;\"\r\n                                                                                     [settings]=\"CompDdlSetting\"\r\n                                                                                     [data]=\"AllTPOCompaniesList\"\r\n                                                                                     (onSelect)=\"onCompSelect($event, true)\"\r\n                                                                                     (onDeSelect)=\"onCompSelect($event, false)\">\r\n                                                            </ng-multiselect-dropdown>\r\n\r\n                                                            <div *ngIf=\"formSubmited && f.CustomerDetails.get('CompanyId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CustomerDetails.get('CompanyId').errors?.required\">\r\n                                                                    Company is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-8 col-md-9\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 new-company\"\r\n                                                             *ngIf=\"f.CustomerDetails.get('CompanyId').value==null || f.CustomerDetails.get('IsNewCompany').value || (!f.CustomerDetails.get('IsNewCompany').value && f.CustomerDetails.get('IsNewUser').value)\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <div id=\"newContactPersonInput\">\r\n                                                                    <label for=\"CustomerDetails_Name\">\r\n                                                                        Contact\r\n                                                                        Person<span class=\"required pl4\"\r\n                                                                                    aria-required=\"true\">*</span>\r\n                                                                    </label>\r\n                                                                    <input class=\"form-control newContactPerson\"\r\n                                                                           id=\"CustomerDetails_Name\" formControlName=\"Name\"\r\n                                                                           placeholder=\"Contact Person\" type=\"text\"\r\n                                                                           value=\"\">\r\n                                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('Name').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.CustomerDetails.get('Name').errors?.required\">\r\n                                                                            Contact Person is required\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <a id=\"useExisting\" class=\"\"\r\n                                                                       *ngIf=\"f.CustomerDetails.get('IsNewCompany').value!=true && f.CustomerDetails.get('IsNewUser').value && f.CustomerDetails.get('CompanyId').value!=null\"\r\n                                                                       (click)=\"clickNewPerson(false)\">\r\n                                                                        <span class=\"fa fa-arrow-left mt7\"></span> Use\r\n                                                                        Existing\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 existing-company\"\r\n                                                             *ngIf=\"(f.CustomerDetails.get('CompanyId').value!=null && !f.CustomerDetails.get('IsNewCompany').value && !f.CustomerDetails.get('IsNewUser').value)\">\r\n                                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper customer-contact hide-element\">\r\n                                                                <span class=\"spinner-dashboard pa\"></span>\r\n                                                            </div>\r\n                                                            <div class=\"form-group\">\r\n                                                                <div id=\"existingContactPersonDropdown\">\r\n\r\n                                                                    <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                                         *ngIf=\"_isLoadingPerson\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n\r\n                                                                    <label for=\"CustomerDetails_Name\">\r\n                                                                        Contact\r\n                                                                        Person\r\n                                                                    </label>\r\n                                                                    <select class=\"form-control existingContactPerson\"\r\n                                                                            id=\"CustomerDetails_UserId\"\r\n                                                                            formControlName=\"UserId\"\r\n                                                                            (change)=\"getTPOContactPersonDetails($event.target.value)\">\r\n                                                                        <option value=\"null\" disabled>\r\n                                                                            Select Contact\r\n                                                                            Person\r\n                                                                        </option>\r\n                                                                        <option id=\"{{item.Id}}\" value=\"{{item.Id}}\"\r\n                                                                                *ngFor=\"let item of CompanyContactPersonsList\"\r\n                                                                                [selected]=\"item.Id== f.CustomerDetails.get('UserId').value\">\r\n                                                                            {{item.Name}}\r\n                                                                        </option>\r\n                                                                    </select>\r\n                                                                    <div *ngIf=\"formSubmited && f.CustomerDetails.get('UserId').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.CustomerDetails.get('UserId').errors?.required\">\r\n                                                                            Contact Person is required\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <a id=\"createNew\"\r\n                                                                       *ngIf=\"f.CustomerDetails.get('IsNewCompany').value!=true && f.CustomerDetails.get('IsNewUser').value!=true && f.CustomerDetails.get('CompanyId').value!=null\"\r\n                                                                       (click)=\"clickNewPerson(true)\">\r\n                                                                        <span class=\"fa fa-plus-circle mt7\"></span>\r\n                                                                        Create\r\n                                                                        New\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <label for=\"CustomerDetails_PhoneNumber\">\r\n                                                                    Mobile\r\n                                                                    Number<span class=\"required pl4\"\r\n                                                                                aria-required=\"true\">*</span>\r\n                                                                </label>\r\n                                                                <input [disableControl]=\"f.CustomerDetails.get('IsNewUser').value!=true\"\r\n                                                                       class=\"form-control input-phoneformat phoneNumber\"\r\n                                                                       id=\"CustomerDetails_PhoneNumber\" name=\"PhoneNumber\"\r\n                                                                       formControlName=\"PhoneNumber\" type=\"text\"\r\n                                                                       (input)=\"IsPhoneNumberValid()\">\r\n                                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('PhoneNumber').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.required\">\r\n                                                                        Mobile Number is required\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('PhoneNumber').errors?.pattern\">\r\n                                                                        Please enter a valid 10 digit Mobile\r\n                                                                        Number.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                                <div *ngIf=\"f.CustomerDetails.get('IsNewUser').value && f.CustomerDetails.get('PhoneNumber').value && !f.CustomerDetails.get('PhoneNumber').errors && !isPhoneNumberValid\">\r\n                                                                    <span class=\"color-orange fs12\">\r\n                                                                        Unable to verify number! You will miss Text\r\n                                                                        Alerts.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"form-group custEmail\">\r\n                                                                <label for=\"CustomerDetails_Email\">\r\n                                                                    Email<span class=\"required pl4\"\r\n                                                                               aria-required=\"true\">*</span>\r\n                                                                </label>\r\n                                                                <input [disableControl]=\"f.CustomerDetails.get('IsNewUser').value!=true\"\r\n                                                                       class=\"form-control email\"\r\n                                                                       id=\"CustomerDetails_Email\" name=\"Email\"\r\n                                                                       formControlName=\"Email\" type=\"text\" value=\"\" />\r\n                                                                <div *ngIf=\"formSubmited && f.CustomerDetails.get('Email').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.required\">\r\n                                                                        Email\r\n                                                                        is required\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.CustomerDetails.get('Email').errors?.pattern\">\r\n                                                                        Invalid email.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" formGroupName=\"AddressDetails\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"well\">\r\n                                            <h4 class=\"job-site-info\">Location Information</h4>\r\n                                            <div class=\"row mt20\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-7\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col-sm-8\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"new-job\">\r\n                                                                                <label class=\"job-site-info\"\r\n                                                                                       for=\"AddressDetails_JobName\">\r\n                                                                                    Location\r\n                                                                                    Name <span class=\"required pl4\"\r\n                                                                                               aria-required=\"true\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control\"\r\n                                                                                       id=\"AddressDetails_JobName\"\r\n                                                                                       formControlName=\"JobName\"\r\n                                                                                       type=\"text\" (change)=\"isJobExist()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('JobName').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('JobName').errors?.required\">\r\n                                                                                        Location Name is\r\n                                                                                        required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                                <div *ngIf=\"!f.AddressDetails.get('JobName').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"isJobNameExist && !f.CustomerDetails.get('IsNewCompany').value && f.CustomerDetails.get('CompanyId').value\">\r\n                                                                                        Location with same name already\r\n                                                                                        exist.\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"address-controls\">\r\n                                                                                <div class=\"form-group combineDiv\">\r\n                                                                                    <label class=\"job-site-info\"\r\n                                                                                           for=\"AddressDetails_DisplayJobID\">\r\n                                                                                        Third\r\n                                                                                        Party Location ID\r\n                                                                                    </label>\r\n                                                                                    <input class=\"form-control\"\r\n                                                                                           id=\"AddressDetails_DisplayJobID\"\r\n                                                                                           formControlName=\"DisplayJobID\"\r\n                                                                                           type=\"text\" value=\"\">\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col-sm-4\">\r\n                                                                    <div class=\"row address-controls\">\r\n                                                                        <div class=\"col-sm-6\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_Country_Id\">Country/Group</label>\r\n                                                                                <select class=\"form-control country addressInput\"\r\n                                                                                        id=\"AddressDetails_Country_Id\"\r\n                                                                                        formControlName=\"CountryId\"\r\n                                                                                        (change)=\"countryChanged()\">\r\n                                                                                    <!-- <option [value]=\"null\">Select Country</option> -->\r\n                                                                                    <option *ngFor=\"let ct of CountryList\"\r\n                                                                                            [value]=\"ct.Id\"\r\n                                                                                            [selected]=\"ct.Id==1\">\r\n                                                                                        {{ct.Code}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('CountryId').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('CountryId').errors?.required\">\r\n                                                                                        Country is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\" *ngIf=\"f.AddressDetails.get('CountryId').value==4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_CountryGroup_Id\">Country</label>\r\n                                                                                <select class=\"form-control country addressInput\"\r\n                                                                                        id=\"AddressDetails_CountryGroup_Id\"\r\n                                                                                        formControlName=\"CountryGroupId\"\r\n                                                                                        (change)=\"countryChanged()\">\r\n                                                                                    <option *ngFor=\"let ct of CountryGroupList\"\r\n                                                                                            [value]=\"ct.Id\"\r\n                                                                                            [selected]=\"ct.Id==1\">\r\n                                                                                        {{ct.Name}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"wrapper-location\">\r\n                                                                <div class=\"address-controls\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-8\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_Address\">\r\n                                                                                    Address<span class=\"required pl4\"\r\n                                                                                                 aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control address addressInput\"\r\n                                                                                       id=\"AddressDetails_Address\"\r\n                                                                                       name=\"AddressDetails.Address\"\r\n                                                                                       type=\"text\"\r\n                                                                                       formControlName=\"Address\"\r\n                                                                                       (change)=\"getAddress()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('Address').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('Address').errors?.required\">\r\n                                                                                        Address is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_ZipCode\">\r\n                                                                                    Zip<span class=\"required pl4\"\r\n                                                                                             aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control zipcode addressInput\"\r\n                                                                                       id=\"AddressDetails_ZipCode\"\r\n                                                                                       name=\"AddressDetails.ZipCode\"\r\n                                                                                       formControlName=\"ZipCode\"\r\n                                                                                       type=\"text\" value=\"\"\r\n                                                                                       (change)=\"getAddressByZip()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('ZipCode').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('ZipCode').errors?.required\">\r\n                                                                                        Zip is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_City\">\r\n                                                                                    City<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\" *ngIf=\"isRequiredField(f.AddressDetails.get('CountryId').value)\">*</span>\r\n                                                                                </label>\r\n                                                                                <input class=\"form-control city addressInput\"\r\n                                                                                       id=\"AddressDetails_City\"\r\n                                                                                       formControlName=\"City\" type=\"text\"\r\n                                                                                       (change)=\"getAddress()\">\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('City').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('City').errors?.required\">\r\n                                                                                        City is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_CountyName\">\r\n                                                                                    County\r\n                                                                                    Name\r\n                                                                                </label>\r\n                                                                                <i class=\"fa fa-info-circle ml5\"\r\n                                                                                   data-toggle=\"tooltip\"\r\n                                                                                   data-placement=\"top\"\r\n                                                                                   title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\r\n                                                                                <input class=\"form-control county addressInput\"\r\n                                                                                       id=\"AddressDetails_CountyName\"\r\n                                                                                       formControlName=\"CountyName\"\r\n                                                                                       type=\"text\" value=\"\"\r\n                                                                                       autocomplete=\"off\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <label for=\"AddressDetails_State_Id\">State</label>\r\n                                                                                <select class=\"form-control state addressInput triggerTerminalChange\"\r\n                                                                                        id=\"AddressDetails_State_Id\"\r\n                                                                                        name=\"AddressDetails.State.Id\"\r\n                                                                                        formControlName=\"StateId\"\r\n                                                                                        (change)=\"stateChanged();\">\r\n                                                                                    <option [value]=null>\r\n                                                                                        Select\r\n                                                                                        State\r\n                                                                                    </option>\r\n                                                                                    <option id=\"{{item.StateId}}\"\r\n                                                                                            [value]=\"item.StateId\"\r\n                                                                                            *ngFor=\"let item of filteredStatesList\">\r\n                                                                                        {{item.StateName}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && f.AddressDetails.get('StateId').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"f.AddressDetails.get('StateId').errors?.required\">\r\n                                                                                        State is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <!-- Hiding marine location flag as ports are introduced-->\r\n                                                                    <div class=\"row hide-element\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group\">\r\n                                                                                <div class=\"form-check form-check-inline\">\r\n                                                                                    <input type=\"checkbox\"\r\n                                                                                           (change)=\"marineCheckBoxChanged($event.target.checked)\"\r\n                                                                                           [disableControl]=\"this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2 || IsTBDRequest\"\r\n                                                                                           formControlName=\"IsMarineLocation\"\r\n                                                                                           class=\"enablecityrack form-check-input\"\r\n                                                                                           id=\"chk-is-marine\">\r\n                                                                                    <label class=\"form-check-label\"\r\n                                                                                           for=\"chk-is-marine\">\r\n                                                                                        Is\r\n                                                                                        Marine Location\r\n                                                                                    </label>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-5\">\r\n                                                            <agm-map [zoom]=\"mapConstants.ZoomArea\"\r\n                                                                     [latitude]=\"mapConstants.CenterLat\"\r\n                                                                     [longitude]=\"mapConstants.CenterLon\">\r\n                                                                <agm-marker [latitude]=\"mapConstants.CenterLat\"\r\n                                                                            [longitude]=\"mapConstants.CenterLon\"\r\n                                                                            [markerDraggable]=\"true\"\r\n                                                                            (dragEnd)=\"markerDragEnd($event)\"\r\n                                                                            [iconUrl]=\"mapConstants.IconUrl\">\r\n                                                                </agm-marker>\r\n                                                            </agm-map>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\" id=\"Delivery_Details\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"well\">\r\n                                            <h4>Delivery</h4>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-3\">\r\n                                                    <div class=\"row\" formGroupName=\"FuelDeliveryDetails\">\r\n                                                        <div class=\"col-sm-12 single-delivery\">\r\n                                                            <label for=\"FuelDeliveryDetails_SingleDeliverySubTypes\">Delivery Type</label>\r\n                                                            <select class=\"form-control\"\r\n                                                                    formControlName=\"DeliveryTypeId\"\r\n                                                                    (change)=\"deliveryTypeIdChanged($event.target.value)\">\r\n                                                                <option [value]=\"1\">Single Delivery</option>\r\n                                                                <option [value]=\"2\">Multiple Delivery</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-6\">\r\n                                                    <ng-container formGroupName=\"FuelDetails\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12 disable-in-tpo-edit\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                                         *ngIf=\"_isLoadingProducts\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n                                                                    <div class=\"row standard-fuels\">\r\n                                                                        <div *ngIf=\"!f.AddressDetails.get('IsMarineLocation').value\" class=\"col-sm-6\">\r\n                                                                            <div>\r\n                                                                                <label>Fuel Type</label>\r\n                                                                                <select class=\"form-control\"\r\n                                                                                        [disableControl]=\"IsTBDRequest\"\r\n                                                                                        formControlName=\"FuelDisplayGroupId\"\r\n                                                                                        (change)=\"deliveryTypeChanged($event.target.value)\">\r\n                                                                                    <option [value]=\"4\">\r\n                                                                                        In Location Area\r\n                                                                                    </option>\r\n                                                                                    <option [value]=\"1\">Common</option>\r\n                                                                                    <option [value]=\"2\">Less Common</option>\r\n                                                                                    <option [value]=\"3\">Other</option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\"\r\n                                                                             *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)!=3\">\r\n                                                                            <label>Fuel</label>\r\n                                                                            <select [disableControl]=\"IsTBDRequest\"\r\n                                                                                    class=\"form-control\" id=\"FuelDetails_FuelTypeId\"\r\n                                                                                    formControlName=\"FuelTypeId\"\r\n                                                                                    (change)=\"fuelTypeIdChanged($event.target.value)\">\r\n                                                                                <option value=\"null\" disabled>Select</option>\r\n                                                                                <!-- NON-MARINE FUEL -->\r\n                                                                                <ng-container *ngIf=\"!f.AddressDetails.get('IsMarineLocation').value\">\r\n                                                                                    <option *ngFor=\"let item of FuelProductsList\" [value]=\"item.Id\"\r\n                                                                                            [selected]=\"item.Id==f.FuelDetails.get('FuelTypeId').value\">\r\n                                                                                        {{item.Name}}\r\n                                                                                    </option>\r\n                                                                                </ng-container>\r\n                                                                                <!-- MARINE FUEL -->\r\n                                                                                <ng-container *ngIf=\"f.AddressDetails.get('IsMarineLocation').value\">\r\n                                                                                    <option *ngFor=\"let item of MarineProductsList\" [value]=\"item.Id\"\r\n                                                                                            [selected]=\"item.Id==f.FuelDetails.get('FuelTypeId').value\">\r\n                                                                                        {{item.Name}}\r\n                                                                                    </option>\r\n                                                                                </ng-container>\r\n\r\n                                                                                <ng-container *ngIf=\"f.FuelDetails.get('FuelDisplayGroupId').value==4\">\r\n                                                                                    <option class=\"seeMore\" value=\"seeMore\">See More</option>\r\n                                                                                </ng-container>\r\n                                                                            </select>\r\n\r\n                                                                            <!--<input *ngIf=\"IsTBDRequest\" [attr.readonly]=\"true\" class=\"form-control\" type=\"text\" [value]=\"ProductTypeName\">-->\r\n\r\n                                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelTypeId').errors\">\r\n                                                                                <span class=\"text-danger\"\r\n                                                                                      *ngIf=\"f.FuelDetails.get('FuelTypeId').errors?.required\">\r\n                                                                                    Fuel is required.\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\" *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)==3\">\r\n                                                                            <label for=\"FuelDetails_NonStandardFuelName\">\r\n                                                                                Product\r\n                                                                                Name<span class=\"required pl4\"\r\n                                                                                          aria-required=\"true\">*</span>\r\n                                                                            </label>\r\n                                                                            <input class=\"form-control\"\r\n                                                                                   id=\"FuelDetails_NonStandardFuelName\"\r\n                                                                                   formControlName=\"NonStandardFuelName\"\r\n                                                                                   type=\"text\" value=\"\" autocomplete=\"off\">\r\n\r\n                                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('NonStandardFuelName').errors\">\r\n                                                                                <span class=\"text-danger\"\r\n                                                                                      *ngIf=\"f.FuelDetails.get('NonStandardFuelName').errors.required\">\r\n                                                                                    Name\r\n                                                                                    is required.\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-6\"\r\n                                                                             *ngIf=\"(f.FuelDetails['controls']['FuelDisplayGroupId'].value)==3\">\r\n                                                                            <label for=\"FuelDetails_NonStandardFuelDescription\">\r\n                                                                                Product\r\n                                                                                Description\r\n                                                                            </label>\r\n                                                                            <textarea class=\"form-control\" cols=\"20\"\r\n                                                                                      id=\"FuelDetails_NonStandardFuelDescription\"\r\n                                                                                      formControlName=\"NonStandardFuelDescription\"\r\n                                                                                      rows=\"2\"></textarea>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <ng-container formGroupName=\"FuelDetails\">\r\n                                                <div class=\"row mt-2\" formGroupName=\"FuelQuantity\">\r\n                                                    <div class=\"col-sm-3 fixed-quantity\">\r\n                                                        <div class=\"single-delivery-sub-types\">\r\n                                                            <label>Quantity Type</label>\r\n                                                            <select class=\"form-control\" formControlName=\"QuantityTypeId\" (change)=\"quantityTypeChanged($event.target.value)\">\r\n                                                                <option [value]=\"1\">Fixed</option>\r\n                                                                <option [value]=\"2\">Range</option>\r\n                                                                <option [value]=\"3\"> Not Specified</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6 range-quantity\"\r\n                                                         *ngIf=\"f.FuelDetails['controls']['FuelQuantity']['controls']['QuantityTypeId'].value==2\">\r\n                                                        <div class=\"resetleftspace\">\r\n                                                            <div class=\"row\">\r\n                                                                <div class=\"col\">\r\n                                                                    <div class=\"dib\">\r\n                                                                        <label for=\"FuelDetails_FuelQuantity_MinimumQuantity\">\r\n                                                                            Min Quantity<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\">*</span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div class=\"input-group pull-left\">\r\n                                                                        <input class=\"form-control datatype-decimal\"\r\n                                                                               id=\"FuelDetails_FuelQuantity_MinimumQuantity\"\r\n                                                                               formControlName=\"MinimumQuantity\"\r\n                                                                               type='number' [value]=\"0\">\r\n                                                                        <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                            {{\r\n                                                                                UoM == 1 ? 'Gallons' : 'Litres'\r\n                                                                            }}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors.pattern || f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors?.min\">\r\n                                                                            Invalid minimum quantity field.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MinimumQuantity').errors.required\">\r\n                                                                            Minimum Quantity is\r\n                                                                            Required.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col\">\r\n                                                                    <div class=\"dib\">\r\n                                                                        <label for=\"FuelDetails_FuelQuantity_MaximumQuantity\">\r\n                                                                            Max Quantity<span class=\"required pl4\"\r\n                                                                                              aria-required=\"true\">*</span>\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                    <div class=\"input-group pull-left\">\r\n                                                                        <input class=\"form-control datatype-decimal total-gallons-required\"\r\n                                                                               id=\"FuelDetails_FuelQuantity_MaximumQuantity\"\r\n                                                                               formControlName=\"MaximumQuantity\"\r\n                                                                               type=\"number\" [value]=\"0\">\r\n                                                                        <!-- (change)=\"validateMinMaxValue(this.f.FuelDetails.get('MaximumQuantity'))\" -->\r\n                                                                        <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                            {{\r\n                                                                            UoM\r\n                                                                            == 1 ? 'Gallons' : 'Litres'\r\n                                                                            }}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.pattern\">\r\n                                                                            Invalid maximum quantity field.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.required\">\r\n                                                                            Maximum Quantity is\r\n                                                                            Required.\r\n                                                                        </span>\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('MaximumQuantity').errors.compareNumber\">\r\n                                                                            Max quantity should be greater than\r\n                                                                            minimum quantity.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3 ftl-controls ftl-billable-quantity\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <label>Billable Quantity</label>\r\n                                                            <select class=\"form-control enum-ddl qty-ind\"\r\n                                                                    id=\"FuelDetails_FuelQuantity_QuantityIndicatorTypes\"\r\n                                                                    formControlName=\"QuantityIndicatorTypes\">\r\n                                                                <option [value]=\"1\" [selected]=\"true\">\r\n                                                                    Net\r\n                                                                </option>\r\n                                                                <option [value]=\"2\">\r\n                                                                    Gross\r\n                                                                </option>\r\n                                                            </select>\r\n                                                            <div *ngIf=\"f.FuelDetails.get('FuelQuantity').get('QuantityIndicatorTypes').value==2\"\r\n                                                                 class=\"row\">\r\n                                                                <div class=\"text-danger col-12 fs12 mt5\">\r\n                                                                    <span class=\"qty-ind-err warning\">\r\n                                                                        Changes\r\n                                                                        will be updated\r\n                                                                        on\r\n                                                                        BOL.\r\n                                                                        Taxes will continue to\r\n                                                                        be\r\n                                                                        calculated as per\r\n                                                                        state\r\n                                                                        quantity\r\n                                                                        regulations.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3 fixed-quantity\">\r\n                                                        <div *ngIf=\"(f.FuelDetails['controls']['FuelQuantity']['controls']['QuantityTypeId'].value)==1\" class=\"form-group\"\r\n                                                             style=\"pointer-events: visible;\">\r\n                                                            <label>Quantity</label>\r\n                                                            <div class=\"input-group\">\r\n                                                                <input class=\"form-control datatype-decimal total-gallons-required\"\r\n                                                                       id=\"FuelDetails_FuelQuantity_Quantity\"\r\n                                                                       formControlName=\"Quantity\" type=\"number\"\r\n                                                                       value=\"0\">\r\n                                                                <span class=\"input-group-addon uom quantity-uom\">\r\n                                                                    {{\r\nUoM\r\n                                                                                == 1 ? 'Gallons' : 'Litres'\r\n                                                                    }}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.FuelDetails.get('FuelQuantity').get('Quantity').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.required\">\r\n                                                                    The Quantity field is\r\n                                                                    required.\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.pattern || f.FuelDetails.get('FuelQuantity').get('Quantity').errors?.min\">\r\n                                                                    Invalid quantity field.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelDetails.get('FuelQuantity').get('Quantity').errors.pattern\">\r\n                                                                    Invalid.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <app-pricing-section [locationForm]=\"locationForm\" [formSubmited]=\"formSubmited\" [UoM]=\"UoM\" [IsTBD]=\"IsTBDRequest\" [tbdDrProductTypeId]=\"tbdDrProductTypeId\" [tbdDrProductId]=\"tbdDrProductId\" [productDetails]=\"productDetails\"></app-pricing-section>\r\n\r\n                                <div *ngIf=\"!IsTBDRequest\" class=\"row mb25\">\r\n                                    <div class=\"col-12\" id=\"Delivery_Request\">\r\n                                        <div class=\"well\">\r\n                                            <h4>Delivery Request</h4>\r\n                                            <ng-container formGroupName=\"DeliveryRequest\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"1\" id=\"radio-must-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-must-go\">\r\n                                                                Must\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"2\" id=\"radio-should-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-should-go\">\r\n                                                                Should\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" formControlName=\"Priority\"\r\n                                                                   type=\"radio\" [value]=\"3\" id=\"radio-could-go\">\r\n                                                            <label class=\"form-check-label\" for=\"radio-could-go\">\r\n                                                                Could\r\n                                                                Go\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12 mt10 mb10\">\r\n                                                        <div>\r\n                                                            <div>\r\n                                                                <span>\r\n                                                                    <a (click)=\"editPickupLocation()\"\r\n                                                                       data-toggle=\"modal\"\r\n                                                                       data-target=\"#dr-pickup-location2\">\r\n                                                                        <i class=\"fa fa-edit fs18\"></i>\r\n                                                                    </a>\r\n                                                                </span>\r\n                                                                <span class=\"ml10\">\r\n                                                                    <i class=\"fas fa-map-marker-alt\">\r\n                                                                    </i>\r\n                                                                    &nbsp;Pickup :\r\n                                                                </span>\r\n                                                                <span class=\"pr5\"\r\n                                                                      *ngIf=\"f.DeliveryRequest.get('PickupLocationType')?.value!=2; else location;\">\r\n                                                                    Terminal\r\n                                                                </span>\r\n                                                                <ng-template #location>\r\n                                                                    <span class=\"pr5\">\r\n                                                                        Location\r\n                                                                    </span>\r\n                                                                </ng-template>\r\n                                                            </div>\r\n                                                            <div class=\"pull-left pr5\"\r\n                                                                 *ngIf=\"(f.DeliveryRequest.get('PickupLocationType').value==1 && f.DeliveryRequest.get('Terminal')['controls']['Name']?.value); else bulkPlant;\">\r\n                                                                <span>\r\n                                                                    {{f.DeliveryRequest.get('Terminal')['controls']['Name']?.value}}\r\n                                                                </span>\r\n                                                                <span>\r\n                                                                    <a (click)=\"removePickupLocation()\">\r\n                                                                        <i class=\"fa fa-trash text-danger fs18\"\r\n                                                                           data-placement=\"top\" data-toggle=\"tooltip\"\r\n                                                                           title=\"Remove Location\"></i>\r\n                                                                    </a>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                <ng-container *ngIf=\"f.DeliveryRequest.get('BulkPlant')['controls']['SiteName'].value\">\r\n                                                                    <span>\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['SiteName'].value}},\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['City'].value}},\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['State']?.controls['Code'].value}}\r\n                                                                        {{f.DeliveryRequest.get('BulkPlant')['controls']['ZipCode'].value}}\r\n                                                                    </span>\r\n                                                                    <span>\r\n                                                                        <a (click)=\"removePickupLocation()\">\r\n                                                                            <i class=\"fa fa-trash text-danger fs18\"\r\n                                                                               data-placement=\"top\"\r\n                                                                               data-toggle=\"tooltip\"\r\n                                                                               title=\"Remove Bulk Plant\"></i>\r\n                                                                        </a>\r\n                                                                    </span>\r\n                                                                </ng-container>\r\n                                                            </ng-template>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <select formControlName=\"ScheduleQuantityType\"\r\n                                                                    class=\"form-control country addressInput\">\r\n                                                                <option value=\"1\"> Quantity </option>\r\n                                                                <option value=\"2\"> Balance </option>\r\n                                                                <option value=\"3\"> Full Load </option>\r\n                                                                <option value=\"4\"> Small Compartment </option>\r\n                                                                <option value=\"5\"> Not Specified </option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                                   class=\"form-control\"\r\n                                                                   placeholder=\"Required Fuel\"\r\n                                                                   [disableControl]=\"f.DeliveryRequest.get('ScheduleQuantityType').value!=1\" />\r\n                                                        </div>\r\n                                                        <div *ngIf=\"formSubmited && f.DeliveryRequest.get('RequiredQuantity').invalid\">\r\n                                                            <label class=\"fs12\" style=\"color:red\">\r\n                                                                Quantity is required\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input  formControlName=\"DeliveryLevelPO\"\r\n                                                                   class=\"form-control\"\r\n                                                                   placeholder=\"Delivery Level PO#\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class=\"col-sm-2\">\r\n                                                        <div class=\"form-group mb5\">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo1\" placeholder=\"Badge #1\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2 pr10 pl10\">\r\n                                                        <div class=\"form-group mb5 \">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo2\" placeholder=\"Badge #2\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-2 pl5\">\r\n                                                        <div class=\"form-group mb5 \">\r\n                                                            <input type=\"text\" class=\"form-control\"\r\n                                                                   formControlName=\"BadgeNo3\" placeholder=\"Badge #3\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <textarea class=\"form-control\"\r\n                                                                      formControlName=\"DispatcherNote\"\r\n                                                                      placeholder=\"Dispatcher Note\">\r\n                                                                </textarea>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"_opened=false\">\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" (click)=\"onSubmit()\"\r\n                                       class=\"btn btn-lg btn-primary btnSubmit\">\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </ng-sidebar>\r\n        </ng-sidebar-container>\r\n        <div id=\"modal-pricing-codes\" class=\"modal fade\" role=\"dialog\" tabindex=\"-1\" data-backdrop=\"static\"\r\n             keyboard=\"false\">\r\n            <div class=\"modal-dialog modal-lg modal-pricingcode-details\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header pb0 pl20 no-border\">\r\n                        <h2 class=\"text-left mt0 mb0 fs21\">\r\n                            Pricing Code <a class=\"close color-grey pull-right pa actions\" data-dismiss=\"modal\"\r\n                                            aria-label=\"Close\"><span aria-hidden=\"true\">×</span></a>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal fade\" id=\"dr-pickup-location2\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"overflow-h\">\r\n                            <div class=\"dib border pa5 radius-capsule\">\r\n                                <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                                    <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                                    Terminal &nbsp;\r\n                                    <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                                    Bulk Plant\r\n                                </div>-->\r\n                                <div class=\"form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\"\r\n                                           formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                                    <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                                </div>\r\n                                <div class=\"form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\"\r\n                                           formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                                    <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"button\" (click)=\"initPickupForm()\" class=\"close color-grey pull-right pa\"\r\n                                    data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <i class=\"fas fa-times\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"mt10 mb10\">\r\n                            <!-- terminal start -->\r\n                            <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\"\r\n                                 *ngIf=\"this.PickupForm.get('PickupLocationType').value==1\">\r\n                                <div class=\"col-sm-10\">\r\n                                    <div class=\"ng-autocomplete\">\r\n                                        <ng-autocomplete [data]=\"Terminals\" searchKeyword=\"Name\"\r\n                                                         placeholder=\"Terminal Name\" (selected)='onTerminalSelected($event)'\r\n                                                         [itemTemplate]=\"itemTemplate\" [notFoundTemplate]=\"notFoundTemplate\">\r\n                                        </ng-autocomplete>\r\n                                        <ng-template #itemTemplate let-item>\r\n                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                        </ng-template>\r\n                                        <ng-template #notFoundTemplate let-notFound>\r\n                                            <div [innerHTML]=\"notFound\"></div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- terminal ends -->\r\n                            <!-- bulk plant starts -->\r\n                            <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\"\r\n                                 *ngIf=\"this.PickupForm.get('PickupLocationType').value==2\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Bulk Plant</label>\r\n                                                <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\"\r\n                                                       (input)=\"onBulkPlantSearched($event)\"\r\n                                                       placeholder=\"Bulk Plant Name\" />\r\n                                                <ul class=\"auto-select border-dash\">\r\n                                                    <li *ngFor=\"let plant of BulkPlants;\"\r\n                                                        (click)=\"onBulkPlantSelected(plant)\"\r\n                                                        [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">\r\n                                                        {{plant.Name}}\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Address</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Address\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                                <input type=\"text\" class=\"form-control zip-code\"\r\n                                                       formControlName=\"ZipCode\" (input)=\"getAddressByZipForPickup($event)\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                        Invalid {{ CountryBasedZipcodeLabel }}\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>City</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"City\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\"\r\n                                                 [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                                <label>State</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\"\r\n                                                        placeholder=\"Select State\" (change)=\"setStateCode($event)\"\r\n                                                        [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select State</option>\r\n                                                    <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.StateId\">\r\n                                                        {{st.StateCode}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\"\r\n                                                        placeholder=\"Select State\" (change)=\"setStateCode($event)\">\r\n                                                    <option [value]=\"null\">Select State</option>\r\n                                                    <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.StateId\">\r\n                                                        {{st.StateCode}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                                <input type=\"hidden\" formControlName=\"Code\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\"\r\n                                                 [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                                <label>Country</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\"\r\n                                                        placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select Country</option>\r\n                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                        {{ct.Code}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\"\r\n                                                        placeholder=\"Select Country\">\r\n                                                    <option [value]=\"null\">Select Country</option>\r\n                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                        {{ct.Code}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <ng-container *ngIf=\"formSubmited && PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n\r\n                                            <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                                <label>Country Group</label>\r\n                                                <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                                    <option [value]=\"null\">Select Country Group</option>\r\n                                                    <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                        {{ct.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                                    <option [value]=\"null\">Select Country Group</option>\r\n                                                    <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                        {{ct.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>County</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                        Invalid (alphanumeric with comma spaces only)\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Latitude</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                        Invalid\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <div class=\"form-group mb0\">\r\n                                                <label>Longitude</label>\r\n                                                <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\"\r\n                                                       [disableControl]=\"isReadOnly\" />\r\n                                                <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                              && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                        Required\r\n                                                    </label>\r\n                                                    <label style=\"color:red\"\r\n                                                           *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                        Invalid\r\n                                                    </label>\r\n                                                </ng-container>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </div>\r\n                            </div>\r\n                            <!-- bulk plant ends -->\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button type=\"button\" class=\"btn\" data-dismiss=\"modal\"\r\n                                    id=\"btnDrPickupClose2\">\r\n                                Cancel\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"updatePickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                            <!-- [disabled]=\"!PickupForm.valid\" -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, Input, ChangeDetectorRef, OnDestroy, AfterViewInit, SimpleChanges, OnChanges, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormArray, FormControl, AbstractControl } from '@angular/forms';\r\nimport { chatService } from 'src/app/shared-components/sendbird//services/sendbird.service';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { TrailerViewModel, ScheduleShiftModel, TripModel, DeliveryRequestViewModel, UnAssignDriverFromShiftModel, ProductDeliveryScheduleInfo, OptionalPickupDetailModel, BlendDRDetails } from '../../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DataService } from '../../service/data.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { Subscription } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { LoadQueueService } from '../dsb-load-queue/load-queue.service';\r\nimport { DSBLoadQueueModel } from '../dsb-load-queue/dsb-load.model';\r\nimport { DeliveryrequestService } from '../../service/deliveryrequest.service';\r\nimport { SBConstants } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-driver-schedule-column-view',\r\n    templateUrl: './driver-schedule-column-view.component.html',\r\n    styleUrls: ['./driver-schedule-column-view.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DriverScheduleColumnViewComponent implements OnInit {\r\n    @Input() public i: number; //shift index\r\n    @Input() public j: number; //schedule or column index\r\n    @Input() public SbForm: FormGroup;\r\n    @Input() public schedule: FormGroup;\r\n    @Input() public ScheduleLength: number;\r\n    @Input() public ShiftId: string;\r\n    @Input() public shiftOrderNo: number; //shift order number\r\n    public SelectedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedDrivers: DropdownItem[] = [];\r\n\r\n    public IsTrailerExists: boolean = false;\r\n    //public SelectedRegionId: string;//not in use\r\n    public SbFormDate: string;\r\n    public draggedDelReqData: any;\r\n    public droppedTrip: any;\r\n    public disableControl: boolean = false;\r\n    public preloadOption: any = { TripIndex: 0, Preloaded: false };\r\n    private RegionDetailTrailers: TrailerViewModel[] = [];\r\n    private UpdateDriverSubscription: Subscription;\r\n    private GroupChangeDetectSubscription: Subscription;\r\n    private ScheduleChangeDetectSubscription: Subscription;\r\n    private DisableControlsSubscription: Subscription;\r\n    private DeliveryPreloadOptionSubscription: Subscription;\r\n    private TrailerInformationChangeDetectSubscription: Subscription;\r\n    private GridViewSearchSubscription: Subscription;\r\n    public _valMessageBadgeNumbers: string;\r\n    RouteListForTrip: any[] = [];\r\n    SelectedTrip: any = null;\r\n    DeleteDrByRoutes: Subscription;\r\n    IsLoadingRoute: boolean = false;\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10];\r\n    public DoNotShowPushButtonStatuses: number[] = [5, 7, 8, 9, 11, 12, 21, 22, 25];\r\n    public DeliveryScheduleInfo: ProductDeliveryScheduleInfo[] = [];\r\n    public LocationName: string;\r\n    public CustomerName: string;\r\n    public IsTBDRequest: boolean;\r\n    public tempRouteList: any[] = [];\r\n  \r\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService, private loadQueueService: LoadQueueService,\r\n        private utilService: UtilService, private chatService: chatService, private changeDetectorRef: ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.AllTrailersSubject.pipe(debounceTime(1000)).subscribe(x => {\r\n            this.RegionDetailTrailers = x;\r\n            this.IsTrailerExists = x.length > 0;\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n        this.subscribeScheduleChangeDetectSubject();\r\n        this.subscribeDisableControlsSubject();\r\n        this.subscribeDeliveryPreloadOption();\r\n        this.subscribeGridViewSearchEvents();\r\n\r\n\r\n    }\r\n    public ngAfterViewInit(): void {\r\n        window.setTimeout(() => {\r\n            this.dataService.setDeliveryPreloadOption({ ShiftIndex: this.i, ScheduleIndex: this.j, Reset: true });\r\n        }, 2000);\r\n    }\r\n\r\n    private resetPreLoadedFlag(): void {\r\n        this.preloadOption = { TripIndex: 0, Preloaded: false };\r\n    }\r\n    private setPreLoadedFlag(): void {\r\n        this.schedule.controls['Trips']['controls'].forEach((x: FormGroup, index: number) => {\r\n            let tripDrs = x.controls['DeliveryRequests']['controls'];\r\n            if (tripDrs.length > 0) {\r\n                let preloadedDrs = tripDrs.filter((y: FormGroup) => y.controls['PreLoadedFor']);\r\n                if (preloadedDrs.length == 0 && this.preloadOption['Preloaded'] == false) {\r\n                    this.preloadOption['TripIndex'] = index;\r\n                } else if (preloadedDrs.length > 0 && this.preloadOption['Preloaded'] == false) {\r\n                    this.preloadOption['TripIndex'] = index;\r\n                    this.preloadOption['Preloaded'] = true;\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.markForCheck();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    public ngOnDestroy() {\r\n        this.unsubscribeFormChange();\r\n        this.unsubscribeScheduleChangeDetectSubject();\r\n        this.unsubscribeDeliveryPreloadOption();\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        if (this.GridViewSearchSubscription) {\r\n            this.GridViewSearchSubscription.unsubscribe();\r\n        }\r\n    }\r\n    public unsubscribeUpdateDriverTrailerSubject(): void {\r\n        if (this.UpdateDriverSubscription) {\r\n            this.UpdateDriverSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private unsubscribeGroupChangeDetectSubject(): void {\r\n        if (this.GroupChangeDetectSubscription) {\r\n            this.GroupChangeDetectSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private unsubscribeScheduleChangeDetectSubject(): void {\r\n        if (this.ScheduleChangeDetectSubscription) {\r\n            this.ScheduleChangeDetectSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public unsubscribeFormChange(): void {\r\n        this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.forEach(t => {\r\n            if (t) {\r\n                t.unsubscribe();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unsubscribeDeliveryPreloadOption(): void {\r\n        if (this.DeliveryPreloadOptionSubscription) {\r\n            this.DeliveryPreloadOptionSubscription.unsubscribe();\r\n        }\r\n    }\r\n    private subscribeFormChange(): void {\r\n        this.unsubscribeFormChange();\r\n        let _trips = this.schedule.controls['Trips'] as FormArray;\r\n        for (var k = 0; k < _trips.length; k++) {\r\n            let _initialValues = JSON.stringify(_trips.controls[k].value);\r\n            var formChanges = _trips.controls[k].valueChanges.pipe().subscribe(x => {\r\n                if (x) {\r\n                    let _currentValues = JSON.stringify(x);\r\n                    if (_initialValues != _currentValues) {\r\n                        this.dataService.setUnsavedChangesSubject(x);\r\n                    }\r\n                }\r\n            });\r\n            this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.push(formChanges);\r\n        }\r\n    }\r\n\r\n    private subscribeUpdateDriverTrailerSubject(): void {\r\n        this.unsubscribeUpdateDriverTrailerSubject();\r\n        this.UpdateDriverSubscription = this.dataService.UpdateDriverTrailerSubject.subscribe(data => {\r\n            if (data) {\r\n                if (data.Driver) {\r\n                    var _dArray = this.schedule.controls['Drivers'] as FormArray;\r\n                    _dArray.clear();\r\n                    _dArray.push(this.utilService.getDriverForm(data.Driver));\r\n\r\n                    var _tArray = this.schedule.controls['Trailers'] as FormArray;\r\n                    var prevTrailer = _tArray.value;\r\n                    _tArray.clear();\r\n                    let _selectedTrailers = this.RegionDetailTrailers.filter(x => {\r\n                        return data.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n                    });\r\n                    _selectedTrailers.forEach(x => {\r\n                        _tArray.push(this.utilService.getAssignedTrailerForm(x));\r\n                    });\r\n                    this.updateCompartmentinfo(prevTrailer, _selectedTrailers);\r\n                    this.changeDetectorRef.detectChanges();\r\n                    this.dataService.setSaveDriverAssignmentSubject({ Index1: data.Index1, Index2: data.Index2 });\r\n                }\r\n            }\r\n            this.unsubscribeUpdateDriverTrailerSubject();\r\n        });\r\n    }\r\n\r\n    private subscribeGroupChangeDetectSubject(): void {\r\n        this.GroupChangeDetectSubscription = this.dataService.GroupChangeDetectSubject.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n                this.unsubscribeGroupChangeDetectSubject();\r\n                this.unsubscribeFormChange();\r\n            }\r\n        });\r\n    }\r\n    private subscribeScheduleChangeDetectSubject(): void {\r\n        this.ScheduleChangeDetectSubscription = this.dataService.ScheduleChangeDetectSubject.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDisableControlsSubject(): void {\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n\r\n    private subscribeDeliveryPreloadOption(): void {\r\n        this.DeliveryPreloadOptionSubscription = this.dataService.DeliveryPreloadOption.pipe(debounceTime(2000)).subscribe(x => {\r\n            if (x) {//&& x.ShiftIndex == this.i && x.ScheduleIndex == this.j\r\n                if (x.Reset) {\r\n                    this.resetPreLoadedFlag();\r\n                }\r\n                this.setPreLoadedFlag();\r\n            }\r\n        });\r\n    }\r\n    addLoad(shiftIdx: number, scheduleIdx: number): void {\r\n        var _tArray = this.schedule.controls['Trips'] as FormArray;\r\n        let _startDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        var shift = this.SbForm.controls['Shifts']['controls'][shiftIdx] as FormGroup;\r\n        let shiftId = shift.controls['Id'].value;\r\n        let selectedShift = this.getSelectedShift(shiftId);\r\n        let _startTime = selectedShift.StartTime;\r\n        if (_tArray.controls.length > 0) {\r\n            let lastTripStartTime = _tArray.controls[_tArray.controls.length - 1].get('StartTime').value;\r\n            let lastTripStartDate = _tArray.controls[_tArray.controls.length - 1].get('StartDate').value;\r\n            if (lastTripStartDate == '') {\r\n                lastTripStartDate = _startDate;\r\n            }\r\n            _startTime = _tArray.controls[_tArray.controls.length - 1].get('EndTime').value;\r\n            _startDate = this.getNewLoadStartDate(moment(lastTripStartDate + ' ' + lastTripStartTime).toDate(), moment(lastTripStartDate + ' ' + _startTime).toDate());\r\n        }\r\n        let startTime = moment(_startDate + ' ' + _startTime).toDate();\r\n        let trip = this.getTrailerTrip(startTime, selectedShift.SlotPeriod, scheduleIdx, _tArray.controls.length);\r\n        trip.ShiftStartTime = shift.get('StartTime').value;\r\n        trip.ShiftEndTime = shift.get('EndTime').value;\r\n        trip.SlotPeriod = shift.get('SlotPeriod').value;\r\n        trip.ShiftId = shiftId;\r\n        trip.ShiftIndex = shiftIdx;\r\n        _tArray.push(this.utilService.getTripFormGroup(trip));\r\n    }\r\n\r\n    getSelectedShift(shiftId: string): ScheduleShiftModel {\r\n        let _shifts = this.dataService.AllShiftsSubject.value as ScheduleShiftModel[];\r\n        return _shifts.find(x => x.Id == shiftId);\r\n    }\r\n\r\n    getNewLoadStartDate(startDateTime: Date, endDateTime: Date) {\r\n        if (startDateTime > endDateTime) {\r\n            endDateTime.setDate(endDateTime.getDate() + 1);\r\n        }\r\n        return moment(endDateTime).format('MM/DD/YYYY');\r\n    }\r\n\r\n    getTrailerTrip(startTime: Date, slotPeriod: number, rowIndex: number, colIndex: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.DriverRowIndex = rowIndex;\r\n        trip.DriverColIndex = colIndex;\r\n        return trip;\r\n    }\r\n\r\n    public editDriverTrailers(shiftIdx: number, scheduleIdx: number): void {\r\n        var driver: DropdownItem = { Id: null, Name: '', Code: '' };\r\n        if (this.schedule.controls['Drivers']['controls'].length > 0) {\r\n            driver = this.schedule.controls['Drivers']['controls'][0].value;\r\n        }\r\n        let _isPublishedRequestsExists = this.IsPublishedRequestsExists();\r\n        var trailers = this.schedule.controls['Trailers'].value;\r\n        let data = {\r\n            Index1: shiftIdx,\r\n            Index2: scheduleIdx,\r\n            Driver: driver.Id,\r\n            Trailers: trailers,\r\n            IsPublishedRequestsExists: _isPublishedRequestsExists,\r\n            IsIncludeAllRegionDriver: this.schedule.controls['IsIncludeAllRegionDriver'].value\r\n        };\r\n        this.SelectedTrailers = trailers;\r\n        this.dataService.setEditDriverTrailerSubject(data);\r\n        this.subscribeUpdateDriverTrailerSubject();\r\n    }\r\n    public IsPublishedRequestsExists(): boolean {\r\n        let isPublished = false;\r\n        let trips = this.schedule.controls['Trips']['controls'] as FormArray;\r\n        for (let i = 0; i < trips.length; i++) {\r\n            var drs = trips[i].controls['DeliveryRequests']['controls'] as FormArray;\r\n            for (let k = 0; k < drs.length; k++) {\r\n                if (drs[k]['controls'].PreviousStatus.value === 3) {\r\n                    isPublished = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isPublished) {\r\n                break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n    public IsDSBGridViewPublishedRequestsExists(shiftRow: any): boolean {\r\n        let isPublished = false;\r\n        let trips = shiftRow.controls['Trips']['controls'] as FormArray;\r\n        for (let i = 0; i < trips.length; i++) {\r\n            var drs = trips[i].controls['DeliveryRequests']['controls'] as FormArray;\r\n            for (let k = 0; k < drs.length; k++) {\r\n                if (drs[k]['controls'].PreviousStatus.value === 3) {\r\n                    isPublished = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isPublished) {\r\n                break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n    publishEntireRow(shiftIndex: number, rowIndex: number): void {\r\n        this.dataService.setPublishEntireRowSubject({ ShiftIndex: shiftIndex, ScheduleIndex: rowIndex, IsOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n\r\n    CheckForCancelDSButton(shiftIndex: number, rowIndex: number): boolean {\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        let trips = schedule.controls['Trips'] as FormArray;\r\n        let _deliveryRequests = this.utilService.GetAllLoadsDR(trips);\r\n        if (_deliveryRequests.length > 0) {\r\n            let DsCount = _deliveryRequests.length;\r\n            let check = this.sbService.returnCommonTracableElements(SBConstants.CancelCompletedDraftStatus, _deliveryRequests, true);\r\n            if (check.length > 0 && DsCount == check.length) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    draftScheduleBuilder(trip: FormGroup): void {\r\n        this.dataService.setDraftDeliveryGroupSubject({ trip: trip, filterChanged: false });\r\n    }\r\n\r\n    publishScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n\r\n        this.dataService.setPublishDeliveryGroupSubject({ shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip, isOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n    onItemDrop(trip: FormGroup, event: any, shiftIndex: number, rowIndex: number, colIndex: number, schedule: any): void {\r\n        if (this.preloadOption[\"Preloaded\"] == false && this.preloadOption[\"TripIndex\"] < colIndex) {\r\n            this.preloadOption[\"TripIndex\"] = colIndex\r\n        }\r\n        this.dataService.setDragDropItemSubject({ trip: trip, event: event, shiftIndex: shiftIndex, rowIndex: rowIndex, colIndex: colIndex, schedule: schedule });\r\n        this.subscribeGroupChangeDetectSubject();\r\n        this.subscribeFormChange();\r\n        this.sorDrByProductSequence(trip);\r\n    }\r\n    private sorDrByProductSequence(trip: FormGroup) {\r\n        var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n        let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n        let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n        let drList = drForm.value || [];\r\n        //drList = sortArrayTwice(drList, 'JobId', 'ProductSequence');\r\n        drForm.clear();\r\n        var _drFormArray = this.utilService.getDeliveryRequestFormArray(drList, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            drForm.push(_drForm);\r\n        });\r\n    }\r\n\r\n    validateTrailerJobCompatibility(drData: any, schedule: any): void {\r\n        var _deliveryRequests = [];\r\n        _deliveryRequests.push(drData.Data.value);\r\n        let _selectedTrailers = schedule.controls[\"Trailers\"].value;\r\n        var trips = schedule.get('Trips') as FormArray;\r\n        if ((_selectedTrailers && _selectedTrailers.length > 0) && (_deliveryRequests && _deliveryRequests.length > 0)) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests).subscribe(data => {\r\n                if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                    this.highLightDRDiv(trips, data);\r\n                    Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                } else {\r\n                    this.highLightDRDiv(trips, null);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    highLightDRDiv(trips: FormArray, data) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsNotCompatible\"].patchValue(false);\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                    if (data) {\r\n                        if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.controls[\"Id\"].value)) {\r\n                            deliveryRequest.controls[\"IsNotCompatible\"].patchValue(true);\r\n                            deliveryRequest.controls[\"IsBlinkDR\"].patchValue(true);\r\n                            setTimeout(() => {\r\n                                this.removeClassForAllLoad(trips);\r\n                            }, 10000);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private removeClassForAllLoad(trips: FormArray) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public editExisingGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false): void {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n    }\r\n\r\n    public editGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false, route: any = null) {\r\n\r\n        this.dataService.setEditDeliveryGroupSubject({\r\n            trip: _trip,\r\n            shiftIndex: _shiftIndex,\r\n            rowIndex: _rowIndex,\r\n            tripIndex: _tripIndex,\r\n            schedule: _schedule,\r\n            isPublishLoadInvalid: _isPublishLoadInvalid,\r\n            isOptionalPickup: false,\r\n            routeName: route,\r\n            OptionalPickupInfo: null,\r\n            OrderFuelInfo: null\r\n        });\r\n        this.subscribeFormChange();\r\n        this.subscribeGroupChangeDetectSubject();\r\n    }\r\n\r\n    private setDeletePostloadedDrsSubject(drs: DeliveryRequestViewModel[]): void {\r\n        let postloadedDrInfo = drs.filter(x => x.PostLoadInfo);\r\n        if (postloadedDrInfo.length > 0) {\r\n            this.dataService.setDeletePostloadSubject(postloadedDrInfo);\r\n        }\r\n    }\r\n    public deleteScheduleDetails(tripDetails: FormGroup, drIndex: number) {\r\n        var scheduleDetails = {\r\n            trip: tripDetails,\r\n            index: drIndex\r\n        };\r\n        this.setDeletePostloadedDrsSubject([tripDetails.controls['DeliveryRequests']['controls'][drIndex].value]);\r\n        this.dataService.setDeleteDRRequestSubject(scheduleDetails);\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: this.i, ScheduleIndex: this.j, Reset: true });\r\n    }\r\n    resetDrByRoutes(_shiftIndex: number, _rowIndex: number, _tripIndex: number, _trip: FormGroup, _schedule: any) {\r\n        let _data = {\r\n            i: _shiftIndex, j: _rowIndex, k: _tripIndex, trip: _trip, schedule: _schedule\r\n        }\r\n        this.resetRouteDetails(_data);\r\n    }\r\n\r\n    public deleteDrsForRoute(route: DropdownItem) {\r\n        let _trip = this.SelectedTrip.trip;\r\n        this.editGroup(_trip, _trip.i, _trip.j, _trip.k, _trip.schedule, false, route);\r\n    }\r\n\r\n    deleteDrsFromTrip(indexList: number[]) {\r\n        let _trip = this.SelectedTrip.trip;\r\n        let delieveryRequestForm = _trip.controls['DeliveryRequests'] as FormArray;\r\n        let removedDrCount = 0;\r\n        var deletedRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        for (let currentIndex = 0; currentIndex < indexList.length; currentIndex++) {\r\n\r\n            let formIndex = indexList[currentIndex];\r\n            deletedRequests.push(_trip.controls['DeliveryRequests']['controls'][formIndex - removedDrCount].value);\r\n            delieveryRequestForm.removeAt((formIndex - removedDrCount));\r\n            removedDrCount++;\r\n\r\n            if (currentIndex == indexList.length - 1) {\r\n                this.setDeletePostloadedDrsSubject(deletedRequests);\r\n                this.dataService.setRestoreDeletedRequestSubject(deletedRequests);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n                this.editExisingGroup(this.SelectedTrip.trip, this.SelectedTrip.i, this.SelectedTrip.j, this.SelectedTrip.k, this.SelectedTrip.schedule)\r\n            }\r\n        }\r\n\r\n        //close modal if no routes \r\n        if (this.RouteListForTrip.length == 0) {\r\n            let elem = document.getElementById('closeResetDrByRouteModal'); elem.click();\r\n        }\r\n        //\r\n        this.resetDrByRoutes(this.SelectedTrip.i, this.SelectedTrip.j, this.SelectedTrip.k, _trip, this.SelectedTrip.schedule);\r\n    }\r\n\r\n    public getDraggableDrsFromLoad(trip: FormGroup): any {\r\n        let drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        let filtered = drs.filter(x => !x.PreLoadedFor && !x.PostLoadedFor && SBConstants.DraggableScheduleStatuses.indexOf(x.TrackScheduleStatus) != -1);\r\n        return filtered;\r\n    }\r\n\r\n    public getDraggedDrs(jobId: number, trip: FormGroup): any {\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filtered = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor);\r\n        return filtered;\r\n    }\r\n    public preloadDelieryForThisLoc(trip: FormGroup, tripIndex: number, jobId: number): void {\r\n        let driverTrailerInfo = this.getAssignedDriverTrailerInfo();\r\n        if (driverTrailerInfo.Trailers.length > 0 || driverTrailerInfo.Drivers.length > 0) {\r\n            let shift = this.SbForm.controls['Shifts']['controls'][this.i] as FormGroup;\r\n            let _drArray = trip.controls['DeliveryRequests'].value;\r\n            let drs = _drArray.filter(x => x.JobId == jobId);\r\n            if (drs && drs.length > 0) {\r\n                let isValidDrs = this.validatePreloadDrs(trip, drs);\r\n                if (isValidDrs) {\r\n                    this.dataService.setCreatePreloadSubject({\r\n                        ShiftId: shift.controls['Id'].value,\r\n                        ShiftIndex: this.i,\r\n                        ScheduleIndex: this.j,\r\n                        TripIndex: tripIndex,\r\n                        PreloadTrailers: driverTrailerInfo.Trailers,\r\n                        PreloadDrivers: driverTrailerInfo.Drivers,\r\n                        IsTrailerExists: this.IsTrailerExists,\r\n                        PreloadDrs: drs\r\n                    });\r\n                } else {\r\n                    let schedule = shift.controls['Schedules']['controls'][this.j] as FormGroup;\r\n                    this.editExisingGroup(trip, this.i, this.j, tripIndex, schedule, false);\r\n                }\r\n            }\r\n        } else {\r\n            Declarations.msgerror(driverTrailerInfo.ErrorMessage, undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public isLastTdr(trip: any, tdr: any, isLast: boolean): boolean {\r\n        if (!tdr.controls['IsBlendedRequest'].value) {\r\n            return isLast;\r\n        }\r\n        else {\r\n            let tripDrLength = trip.value.DeliveryRequests.length;\r\n            return trip.controls['DeliveryRequests'].controls[tripDrLength - 1].controls['BlendedGroupId'].value === tdr.controls['BlendedGroupId'].value;\r\n        }\r\n    }\r\n\r\n    private validatePreloadDrs(trip: FormGroup, drs: any): boolean {\r\n        let isValid = true;\r\n        if (trip.controls['IsCommonPickup'].value == true) {\r\n            isValid = trip.valid;\r\n            if (isValid) {\r\n                let pickupType = trip.controls['PickupLocationType'].value;\r\n                if (pickupType == 2) {\r\n                    drs.forEach(x => {\r\n                        x['PickupLocationType'] = pickupType;\r\n                        x['BulkPlant'] = trip.controls['BulkPlant'].value;\r\n                        x['Terminal'] = {};\r\n                    });\r\n                } else {\r\n                    drs.forEach(x => {\r\n                        x['PickupLocationType'] = pickupType;\r\n                        x['BulkPlant'] = {};\r\n                        x['Terminal'] = trip.controls['Terminal'].value;\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            drs.forEach(x => {\r\n                if (x.IsAdditive === false) {\r\n                    if (x.PickupLocationType == 2) {\r\n                        if (!x.BulkPlant || !x.BulkPlant.SiteName || x.BulkPlant.SiteName == '') {\r\n                            isValid = false;\r\n                        }\r\n                    } else {\r\n                        if (!x.Terminal || !x.Terminal.Id || x.Terminal.Id == 0 || x.Terminal.Id == '') {\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    private getAssignedDriverTrailerInfo(): any {\r\n        let info = { Drivers: [], Trailers: [], IsTrailerExists: this.IsTrailerExists, ErrorMessage: '' };\r\n        if (info.IsTrailerExists) {\r\n            info.Trailers = this.getAssignedTrailers();\r\n            if (info.Trailers.length == 0) {\r\n                info.ErrorMessage = 'Please assign a trailer to preload this delivery';\r\n            }\r\n        } else {\r\n            info.Drivers = this.getAssignedDrivers();\r\n            if (info.Drivers.length == 0) {\r\n                info.ErrorMessage = 'Please assign a driver to preload this delivery';\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n\r\n    private getAssignedTrailers(): [] {\r\n        let trailers = this.schedule.controls['Trailers'].value || [];\r\n        return trailers;\r\n    }\r\n\r\n    private getAssignedDrivers(): [] {\r\n        let drivers = this.schedule.controls['Drivers'].value || [];\r\n        return drivers;\r\n    }\r\n\r\n    public IntializeChat(driverId: any) {\r\n        this.chatService.pushDriverDetails(driverId);\r\n    }\r\n\r\n    public trackByTripIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    public trackByTrailerId(index: number, trailer: any): any {\r\n        return trailer.controls[\"TrailerId\"].value;\r\n    }\r\n\r\n    public trackByDrId(index: number, dr: any): any {\r\n        return dr.controls[\"Id\"].value;\r\n    }\r\n\r\n    public trackByDriverId(index: number, driver: any): any {\r\n        return driver.controls[\"Id\"].value;\r\n    }\r\n    public UnAssignDriverFromShift(shiftrow: any, type: any, trailerId: string = '', sbGridView: number = 0) {\r\n        if (shiftrow != undefined && shiftrow != null) {\r\n            var _trips = shiftrow.controls['Trips'].value;\r\n            var _drivers = shiftrow.controls['Drivers'].value;\r\n            let _trailers = shiftrow.controls['Trailers'].value;\r\n\r\n            if (_trips.length > 0 && (_drivers.length > 0 || _trailers.length > 0)) {\r\n                let IsAnyLoadPublished = false;\r\n                if (sbGridView == 1) {\r\n                    IsAnyLoadPublished = this.IsDSBGridViewPublishedRequestsExists(shiftrow);\r\n                }\r\n                else {\r\n                    IsAnyLoadPublished = this.IsPublishedRequestsExists();\r\n                }\r\n                if (IsAnyLoadPublished) {\r\n                    this.dataService.setRemoveTrailer('ERROR');\r\n                    Declarations.msgerror(\"A load has already been published for this driver. Cannot unassign this driver\", undefined, undefined);\r\n                } else {\r\n                    let UnAssignDriverFromShift = new UnAssignDriverFromShiftModel();\r\n                    let _sbId = this.SbForm.controls['Id'].value;\r\n                    let timeStamp = this.SbForm.controls['TimeStamp'].value;\r\n                    if (_trips.length > 0 && (_drivers.length || _trailers.length)) {\r\n                        let _rowIdx = _trips[0].DriverRowIndex;\r\n                        let _shiftIdx = _trips[0].ShiftIndex;\r\n                        UnAssignDriverFromShift.DriverRowIdx = _rowIdx;\r\n                        if (type === 'driver') {\r\n                            UnAssignDriverFromShift.Drivers = _drivers;\r\n                        }\r\n                        UnAssignDriverFromShift.sbId = _sbId;\r\n                        if (type === 'trailer' && trailerId && trailerId != '') {\r\n                            var data = _trailers.filter(top => top.Id.toString() == trailerId);\r\n                            if (data.length > 0) {\r\n                                _trailers = data;\r\n                            }\r\n                            UnAssignDriverFromShift.Trailers = _trailers;\r\n                        }\r\n                        UnAssignDriverFromShift.Trips = _trips;\r\n                        UnAssignDriverFromShift.TimeStamp = timeStamp;\r\n                        UnAssignDriverFromShift.shiftIdx = _shiftIdx;\r\n                    }\r\n                    this.sbService.UnAssignDriverTrailerFromShift(UnAssignDriverFromShift).subscribe((response) => {\r\n                        if (response) {\r\n                            if (response.StatusCode == 0) {\r\n                                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                            } else {\r\n                                this.dataService.setRemoveTrailer('ERROR');\r\n                                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                            }\r\n                            if (response.StatusCode == 0) {\r\n                                var tripsToUpdate = shiftrow.controls['Trips'] as FormArray;\r\n                                var updatedTimeStamp = response.Trips[0].TimeStamp;\r\n                                for (var i = 0; i < tripsToUpdate.length; i++) {\r\n                                    let thisTrip = tripsToUpdate.controls[i] as FormGroup;\r\n                                    thisTrip.patchValue({ TimeStamp: updatedTimeStamp });\r\n                                }\r\n                                let driverctrlarray = shiftrow.controls['Drivers'] as FormArray;\r\n                                if (type === 'driver') {\r\n                                    driverctrlarray.clear();// Clear driver formarray controls\r\n                                    this.schedule.controls['IsIncludeAllRegionDriver'].patchValue(false);\r\n                                }\r\n                                if (type === 'trailer') {\r\n                                    this.unassignTrailers(shiftrow, type, trailerId);\r\n                                }\r\n                                this.changeDetectorRef.detectChanges();\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private unassignTrailers(shiftrow: any, type: any, trailerId: string = ''): void {\r\n        if (type === 'trailer') {\r\n            let trailerctrlarray = shiftrow.get('Trailers') as FormArray;\r\n            if (trailerId != '') {\r\n                var trailerIndex = trailerctrlarray.value.findIndex(top => top.Id.toString() == trailerId);\r\n                if (trailerIndex != -1) {\r\n                    this.dataService.setRemoveTrailer(trailerId);\r\n                    trailerctrlarray.removeAt(trailerIndex);\r\n                    var removeTrailer = [trailerId];\r\n                    this.removeCompartmentinfo(removeTrailer, shiftrow);\r\n                    this.dataService.setTrailerInformationSubject(shiftrow);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public editCompartmentAssignments(): void {\r\n        Declarations.slidePanel(\"#compartment-assigning\", \"97%\");\r\n        this.dataService.setEditCompartmentAssigmentSubject({ Schedule: this.schedule.value, ShiftIndex: this.i, RowIndex: this.j });\r\n    }\r\n    private updateCompartmentinfo(prevTrailer: any[], _selectedTrailers: any[]): void {\r\n        var removedTrailer = [];\r\n        for (var i = 0, len = prevTrailer.length; i < len; i++) {\r\n            var missingTrailerIndex = _selectedTrailers.findIndex(x => x.Id.toString() == prevTrailer[i].Id.toString());\r\n            if (missingTrailerIndex == -1) {\r\n                removedTrailer.push(prevTrailer[i].Id);\r\n            }\r\n        }\r\n        this.removeCompartmentinfo(removedTrailer, this.schedule);\r\n    }\r\n    private removeCompartmentinfo(removedTrailer: any[], shiftrow: any): void {\r\n        if (this.IsTrailerExists && removedTrailer.length > 0) {\r\n            var _tripsInfo = shiftrow.controls['Trips']['controls'] as FormArray;\r\n            for (var k = 0; k < _tripsInfo.length; k++) {\r\n                var tripsInfoControl = _tripsInfo[k].controls as FormGroup;\r\n                tripsInfoControl['IsTrailerExists'].patchValue(this.IsTrailerExists);\r\n                var deliveryRequest = _tripsInfo[k].controls['DeliveryRequests']['controls'] as FormArray;\r\n                for (var j = 0; j < deliveryRequest.length; j++) {\r\n                    var compartmentInfo = deliveryRequest[j].controls[\"Compartments\"] as FormArray;\r\n                    for (var i = 0; i < removedTrailer.length; i++) {\r\n                        var compartmentIndex = compartmentInfo.value.findIndex(x => x.TrailerId.toString() == removedTrailer[i].toString());\r\n                        if (compartmentIndex != -1) {\r\n                            compartmentInfo.removeAt(compartmentIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var _tripsInfo = shiftrow.controls['Trips']['controls'] as FormArray;\r\n            for (var k = 0; k < _tripsInfo.length; k++) {\r\n                var tripsInfoControl = _tripsInfo[k].controls as FormGroup;\r\n                tripsInfoControl['IsTrailerExists'].patchValue(this.IsTrailerExists);\r\n            }\r\n        }\r\n    }\r\n    truncatestring(source: any, size) {\r\n        let trailerName = '';\r\n        if (source) {\r\n            trailerName = $.map(source.value, function (obj) {\r\n                return obj.TrailerId\r\n            }).join(',');\r\n        }\r\n        if (trailerName != '') {\r\n            return trailerName.length > size ? trailerName.slice(0, size - 1) + \"...\" : trailerName;\r\n        }\r\n        return trailerName;\r\n    }\r\n    displayBulkPlanName(source: any) {\r\n        var str = '';\r\n        if (source != null && source != '') {\r\n            var stringInfo = source.split(/[ ,-]+/);\r\n            if (stringInfo.length == 1) {\r\n                str = source.substr(0, 1);\r\n                str = str + source.substr(source.length - 1);\r\n                return str;\r\n            }\r\n            else {\r\n                var firststring = stringInfo[0];\r\n                var lastString = stringInfo[stringInfo.length - 1];\r\n                str = firststring.substr(0, 1);\r\n                str = str + lastString.substr(0, 1);\r\n                return str;\r\n            }\r\n        }\r\n        return source;\r\n    }\r\n    GetDeliveryScheduleInfo(jobId: number, tripControl: any, tripIndex: number, drInfo: DeliveryRequestViewModel) {\r\n        this.DeliveryScheduleInfo = [];\r\n        var deliveryRequest = tripControl.controls['DeliveryRequests'] as FormArray;\r\n        var tBDGroupId = drInfo.TBDGroupId;\r\n        //var ScheduleStartTime1 = drInfo.ScheduleStartTime;\r\n        //var ScheduleEndTime2 = drInfo.ScheduleEndTime;\r\n        deliveryRequest.controls.forEach((_drForm: any) => {\r\n            var productDeliveryScheduleInfo = new ProductDeliveryScheduleInfo();\r\n            var jobInfo = _drForm.controls['JobId'].value;\r\n            var tBDFGroupInfo = _drForm.controls['TBDGroupId'].value;\r\n            if (jobId == jobInfo && !drInfo.IsTBD) {\r\n                productDeliveryScheduleInfo.BlendGroupId = _drForm.controls['BlendedGroupId'].value;\r\n                if (_drForm.controls['IsBlendedRequest'].value == false || !this.DeliveryScheduleInfo.some(t => t.BlendGroupId == productDeliveryScheduleInfo.BlendGroupId)) {\r\n                    productDeliveryScheduleInfo.LocationName = _drForm.controls['JobName'].value;\r\n                    this.LocationName = productDeliveryScheduleInfo.LocationName;\r\n                    productDeliveryScheduleInfo.CustomerName = _drForm.controls['CustomerCompany'].value;\r\n                    this.CustomerName = productDeliveryScheduleInfo.CustomerName;\r\n                    productDeliveryScheduleInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n                    productDeliveryScheduleInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n                    this.IsTBDRequest = _drForm.controls['IsTBD'].value;\r\n                    productDeliveryScheduleInfo.Status = _drForm.controls['Status'].value;\r\n                    productDeliveryScheduleInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n                    productDeliveryScheduleInfo.Priority = _drForm.controls['Priority'].value;\r\n                    productDeliveryScheduleInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n                    productDeliveryScheduleInfo.ScheduleQuantityType = _drForm.controls['ScheduleQuantityType'].value;\r\n                    productDeliveryScheduleInfo.UoM = _drForm.controls['UoM'].value;\r\n                    productDeliveryScheduleInfo.IsAutoCreatedDR = _drForm.controls['IsAutoCreatedDR'].value;\r\n                    productDeliveryScheduleInfo.DelReqSource = _drForm.controls['DelReqSource'].value;\r\n                    productDeliveryScheduleInfo.isRecurringSchedule = _drForm.controls['isRecurringSchedule'].value;\r\n                    productDeliveryScheduleInfo.IsCommonPickup = tripControl.controls['IsCommonPickup'].value;\r\n                    productDeliveryScheduleInfo.CommonPickupLocationType = tripControl.controls['PickupLocationType'].value;\r\n                    productDeliveryScheduleInfo.ScheduleQuantityTypeText = _drForm.controls['ScheduleQuantityTypeText'].value;\r\n                    this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                    if (productDeliveryScheduleInfo.IsCommonPickup) {\r\n                        if (productDeliveryScheduleInfo.CommonPickupLocationType == 2) {\r\n                            productDeliveryScheduleInfo.Address = tripControl.controls['BulkPlant'].controls['Address'].value;\r\n                            productDeliveryScheduleInfo.City = tripControl.controls['BulkPlant'].controls['City'].value;\r\n                            productDeliveryScheduleInfo.Code = tripControl.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n                            productDeliveryScheduleInfo.ZipCode = tripControl.controls['BulkPlant'].controls['ZipCode'].value;\r\n                        }\r\n                        else {\r\n                            productDeliveryScheduleInfo.PickupLocationName = tripControl.controls['Terminal'].controls['Name'].value;\r\n                        }\r\n                    }\r\n                    productDeliveryScheduleInfo.IsFilldInvoke = _drForm.controls['IsFilldInvoke'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo1 = _drForm.controls['BadgeNo1'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo2 = _drForm.controls['BadgeNo2'].value;\r\n                    productDeliveryScheduleInfo.BadgeNo3 = _drForm.controls['BadgeNo3'].value;\r\n                    if (_drForm.controls['RouteInfo'].value && _drForm.controls['RouteInfo'].value.Name) {\r\n                        productDeliveryScheduleInfo.RouteName = _drForm.controls['RouteInfo'].value.Name;\r\n                    }\r\n                    var badgeInfo = [productDeliveryScheduleInfo.BadgeNo1, productDeliveryScheduleInfo.BadgeNo2, productDeliveryScheduleInfo.BadgeNo3];\r\n                    productDeliveryScheduleInfo.BadgeNoInfo = badgeInfo.filter(function (val) { return val; }).join(\", \");\r\n                    productDeliveryScheduleInfo.TankMaxFill = _drForm.controls['TankMaxFill'].value;\r\n                    if (_drForm.controls['PreLoadedFor']) {\r\n                        productDeliveryScheduleInfo.isPreload = true;\r\n                    }\r\n                    if (_drForm.controls['PostLoadedFor']) {\r\n                        productDeliveryScheduleInfo.isPostload = true;\r\n                    }\r\n                    productDeliveryScheduleInfo.TripIndex = tripIndex;\r\n                    productDeliveryScheduleInfo.IsSelectedForAssignment = _drForm.controls['IsSelectedForAssignment'].value;\r\n                    //Marine Nomination                \r\n                    productDeliveryScheduleInfo.IsMarine = _drForm.controls['IsMarine'].value;\r\n                    this.DeliveryScheduleInfo.push(productDeliveryScheduleInfo);\r\n                }\r\n                else {\r\n                    productDeliveryScheduleInfo = this.DeliveryScheduleInfo.find(t => t.BlendGroupId == productDeliveryScheduleInfo.BlendGroupId);\r\n                    this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                }\r\n            }\r\n            else if (tBDGroupId != null && tBDGroupId == tBDFGroupInfo && drInfo.IsTBD == true) {\r\n                productDeliveryScheduleInfo.LocationName = _drForm.controls['JobName'].value;\r\n                this.LocationName = productDeliveryScheduleInfo.LocationName;\r\n                productDeliveryScheduleInfo.CustomerName = _drForm.controls['CustomerCompany'].value;\r\n                this.CustomerName = productDeliveryScheduleInfo.CustomerName;\r\n                productDeliveryScheduleInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n                productDeliveryScheduleInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n                this.IsTBDRequest = _drForm.controls['IsTBD'].value;\r\n                productDeliveryScheduleInfo.Status = _drForm.controls['Status'].value;\r\n                productDeliveryScheduleInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n                productDeliveryScheduleInfo.Priority = _drForm.controls['Priority'].value;\r\n                productDeliveryScheduleInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n                productDeliveryScheduleInfo.ScheduleQuantityType = _drForm.controls['ScheduleQuantityType'].value;\r\n                productDeliveryScheduleInfo.UoM = _drForm.controls['UoM'].value;\r\n                productDeliveryScheduleInfo.IsAutoCreatedDR = _drForm.controls['IsAutoCreatedDR'].value;\r\n                productDeliveryScheduleInfo.DelReqSource = _drForm.controls['DelReqSource'].value;\r\n                productDeliveryScheduleInfo.isRecurringSchedule = _drForm.controls['isRecurringSchedule'].value;\r\n                productDeliveryScheduleInfo.IsCommonPickup = tripControl.controls['IsCommonPickup'].value;\r\n                productDeliveryScheduleInfo.CommonPickupLocationType = tripControl.controls['PickupLocationType'].value;\r\n                productDeliveryScheduleInfo.ScheduleQuantityTypeText = _drForm.controls['ScheduleQuantityTypeText'].value;\r\n                this.getDRInfo(_drForm, productDeliveryScheduleInfo);\r\n                if (productDeliveryScheduleInfo.IsCommonPickup) {\r\n                    if (productDeliveryScheduleInfo.CommonPickupLocationType == 2) {\r\n                        productDeliveryScheduleInfo.Address = tripControl.controls['BulkPlant'].controls['Address'].value;\r\n                        productDeliveryScheduleInfo.City = tripControl.controls['BulkPlant'].controls['City'].value;\r\n                        productDeliveryScheduleInfo.Code = tripControl.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n                        productDeliveryScheduleInfo.ZipCode = tripControl.controls['BulkPlant'].controls['ZipCode'].value;\r\n                    }\r\n                    else {\r\n                        productDeliveryScheduleInfo.PickupLocationName = tripControl.controls['Terminal'].controls['Name'].value;\r\n                    }\r\n                }\r\n                productDeliveryScheduleInfo.IsFilldInvoke = _drForm.controls['IsFilldInvoke'].value;\r\n                productDeliveryScheduleInfo.BadgeNo1 = _drForm.controls['BadgeNo1'].value;\r\n                productDeliveryScheduleInfo.BadgeNo2 = _drForm.controls['BadgeNo2'].value;\r\n                productDeliveryScheduleInfo.BadgeNo3 = _drForm.controls['BadgeNo3'].value;\r\n                if (_drForm.controls['RouteInfo'].value && _drForm.controls['RouteInfo'].value.Name) {\r\n                    productDeliveryScheduleInfo.RouteName = _drForm.controls['RouteInfo'].value.Name;\r\n                }\r\n                var badgeInfo = [productDeliveryScheduleInfo.BadgeNo1, productDeliveryScheduleInfo.BadgeNo2, productDeliveryScheduleInfo.BadgeNo3];\r\n                productDeliveryScheduleInfo.BadgeNoInfo = badgeInfo.filter(function (val) { return val; }).join(\", \");\r\n                productDeliveryScheduleInfo.TankMaxFill = _drForm.controls['TankMaxFill'].value;\r\n                if (_drForm.controls['PreLoadedFor']) {\r\n                    productDeliveryScheduleInfo.isPreload = true;\r\n                }\r\n                if (_drForm.controls['PostLoadedFor']) {\r\n                    productDeliveryScheduleInfo.isPostload = true;\r\n                }\r\n                productDeliveryScheduleInfo.TripIndex = tripIndex;\r\n                productDeliveryScheduleInfo.IsSelectedForAssignment = _drForm.controls['IsSelectedForAssignment'].value;\r\n                //Marine Nomination                \r\n                productDeliveryScheduleInfo.IsMarine = _drForm.controls['IsMarine'].value;\r\n                this.DeliveryScheduleInfo.push(productDeliveryScheduleInfo);\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private getDRInfo(_drForm: any, productDeliveryScheduleInfo: ProductDeliveryScheduleInfo) {\r\n        let drInfo = new BlendDRDetails();\r\n        if (_drForm.controls['IsAdditive'].value == true) {\r\n            drInfo.ProductName = _drForm.controls['FuelType'].value;\r\n        }\r\n        else {\r\n            drInfo.ProductName = _drForm.controls['ProductType'].value;\r\n        }\r\n        drInfo.IsAdditive = _drForm.controls['IsAdditive'].value;\r\n        drInfo.RequiredQuantity = _drForm.controls['RequiredQuantity'].value;\r\n        drInfo.PickupLocationType = _drForm.controls['PickupLocationType'].value;\r\n        drInfo.Id = _drForm.controls['Id'].value;\r\n        drInfo.DeliveryDateStartTime = _drForm.controls['DeliveryDateStartTime'].value;\r\n        drInfo.TrackScheduleStatusName = _drForm.controls['TrackScheduleStatusName'].value;\r\n        drInfo.Vessel = _drForm.controls['Vessel'].value;\r\n        drInfo.Berth = _drForm.controls['Berth'].value;\r\n        drInfo.IsBlendedRequest = _drForm.controls['IsBlendedRequest'].value;\r\n        drInfo.Priority = _drForm.controls['Priority'].value;\r\n        drInfo.StatusClassId = _drForm.controls['StatusClassId'].value;\r\n        drInfo.IsBlinkDR = _drForm.controls['IsBlinkDR'].value;\r\n        drInfo.ScheduleStartTime = _drForm.controls['ScheduleStartTime'].value;\r\n        drInfo.ScheduleEndTime = _drForm.controls['ScheduleEndTime'].value;\r\n        if (drInfo.PickupLocationType == 2) {\r\n            drInfo.Address = _drForm.controls['BulkPlant'].controls['Address'].value;\r\n            drInfo.City = _drForm.controls['BulkPlant'].controls['City'].value;\r\n            drInfo.Code = _drForm.controls['BulkPlant'].controls['State'].controls['Code'].value;\r\n            drInfo.ZipCode = _drForm.controls['BulkPlant'].controls['ZipCode'].value;\r\n        }\r\n        else {\r\n            drInfo.PickupLocationName = _drForm.controls['Terminal'].controls['Name'].value;\r\n        }\r\n        productDeliveryScheduleInfo.DrInfo.push(drInfo);\r\n    }\r\n\r\n    public TransferDS(jobId: number, trip: FormGroup, DrIndex: number, ShiftIndex: number, RowIndex: number, ColIndex: number, schedule: any) {\r\n        let data = {\r\n            jobId: jobId,\r\n            trip: trip,\r\n            DrIndex: DrIndex,\r\n            ShiftIndex: ShiftIndex,\r\n            RowIndex: RowIndex,\r\n            ColIndex: ColIndex,\r\n            schedule: schedule\r\n        };\r\n        this.dataService.setTransferDSSubject(data);\r\n    }\r\n\r\n    public fnIsLastDr(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n        }\r\n        else {\r\n            var TBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var tbddrs = trip.value.DeliveryRequests;\r\n            var jobtbDrs = tbddrs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drID == jobtbDrs[jobtbDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n    public fnIsLastDrSeq(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n        }\r\n        else {\r\n            var TBDGroupId = drInfo.TBDGroupId;\r\n            var drTBDID = drInfo.Id;\r\n            var drTBDs = trip.value.DeliveryRequests;\r\n            var jobTBDDrs = drTBDs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drTBDID == jobTBDDrs[jobTBDDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n    public getTrailerInfo(trailerControl: any) {\r\n        if (this.TrailerInformationChangeDetectSubscription) {\r\n            this.TrailerInformationChangeDetectSubscription.unsubscribe();\r\n        }\r\n        this.subscribeTrailerInformationDetectSubject();\r\n        this.dataService.setTrailerInformationSubject(trailerControl);\r\n    }\r\n    subscribeTrailerInformationDetectSubject(): void {\r\n        this.TrailerInformationChangeDetectSubscription = this.dataService.UnAssignTrailerFromShift.subscribe(x => {\r\n            if (x) {\r\n                this.UnAssignDriverFromShift(x.schedule, x.type, x.trailerId, 1);\r\n            }\r\n        });\r\n    }\r\n    private resetRouteDetails(x: any) {\r\n        this.RouteListForTrip = [];\r\n        if (x) {\r\n\r\n            this.SelectedTrip = x;\r\n            let drForm = this.SelectedTrip.trip.controls['DeliveryRequests'] as FormArray;\r\n            let drValue = drForm ? drForm.value as DeliveryRequestViewModel[] : [];\r\n            drValue.forEach(dr => {\r\n                if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                    let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                    if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                }\r\n            });\r\n            if (this.RouteListForTrip.length > 0) {\r\n                var routeParamInfo = {\r\n                    SelectedTrip: this.SelectedTrip,\r\n                    RouteListForTrip: this.RouteListForTrip\r\n                };\r\n                let _trip = this.SelectedTrip;\r\n                let _routeTripInfo = this.RouteListForTrip;\r\n                this.dataService.setRouteDetailsSubject(routeParamInfo);\r\n                this.editGroup(_trip.trip, _trip.i, _trip.j, _trip.k, _trip.schedule, false, _routeTripInfo);\r\n            }\r\n            else {\r\n                var routeParamInfo = {\r\n                    SelectedTrip: this.SelectedTrip,\r\n                    RouteListForTrip: this.RouteListForTrip\r\n                };\r\n                this.dataService.setRouteDetailsSubject(routeParamInfo);\r\n                let elem = document.getElementById('closeResetDrByRouteModal'); elem.click();\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    subscribeGridViewSearchEvents(): void {\r\n        this.GridViewSearchSubscription = this.dataService.GridViewSearchGroupSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let searchLocation = x.searchLocation;\r\n                this.filterGridView(searchLocation);\r\n\r\n            }\r\n        });\r\n    }\r\n    public filterGridView(searchLocation: string) {\r\n        try {\r\n            let shiftCounts = 0;\r\n            var shifts = this.SbForm.controls[\"Shifts\"] as FormArray;\r\n            shiftCounts = shifts.length;\r\n            for (var i = 0; i < shifts.controls.length; i++) {\r\n                let shiftInfo = shifts.controls[i] as FormGroup;\r\n                let _schedules = shiftInfo.controls['Schedules'] as FormArray;\r\n                for (var j = 0; j < _schedules.controls.length; j++) {\r\n                    let scheduleInfo = _schedules.controls[j] as FormGroup;\r\n                    let trips = scheduleInfo.get('Trips') as FormArray;\r\n                    for (var k = 0; k < trips.controls.length; k++) {\r\n                        let tripInfo = trips.controls[k] as FormGroup;\r\n                        let deliveryReqs = tripInfo.get('DeliveryRequests') as FormArray;\r\n                        for (var l = 0; l < deliveryReqs.controls.length; l++) {\r\n                            let delReq = deliveryReqs.controls[l] as FormGroup;\r\n                            if (searchLocation != '') {\r\n                                searchLocation = searchLocation.trim().toLowerCase();\r\n                                let jobName = delReq.controls['JobName'].value;\r\n                                if (jobName != '' && jobName != null) {\r\n                                    jobName = jobName.trim().toLowerCase();\r\n                                    if (jobName.indexOf(searchLocation) != -1) {\r\n                                        delReq.controls['IsJobFilter'].patchValue(true);\r\n                                    }\r\n                                    else {\r\n                                        delReq.controls['IsJobFilter'].patchValue(false);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    delReq.controls['IsJobFilter'].patchValue(true);\r\n                                }\r\n                            }\r\n                            else {\r\n                                delReq.controls['IsJobFilter'].patchValue(true);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if ((i + 1) == shiftCounts) {\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    moveColumnToLoadQueue(): void {\r\n\r\n        //apply client side first\r\n        this.schedule.get('IsLoadQueueCollapsed').patchValue(true);\r\n        this.loadQueueService.setLoadQueueColumnMoved(true);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setDriverColumnChangeDetect(true);\r\n\r\n        //send collapsed columns to api\r\n        const data: DSBLoadQueueModel = {\r\n            Id: null,\r\n            RegionId: this.SbForm.get('RegionId').value,\r\n            ShiftIndex: this.i,\r\n            Date: this.SbForm.get('Date').value,\r\n            DriverRowIndex: this.j,\r\n            ScheduleBuilderId: '',\r\n            ShiftId: this.ShiftId,\r\n        };\r\n\r\n        this.loadQueueService.createLoadQueue([data]).subscribe((data) => {\r\n            if (data && data.StatusCode == 0) {\r\n                if (data.DsbLoadQueueSuccess && data.DsbLoadQueueSuccess.length > 0) {\r\n                    this.schedule.get('LoadQueueId').patchValue(data.DsbLoadQueueSuccess[0].Id);\r\n                }\r\n            } else {\r\n                Declarations.msgerror(\"Unable to collapse column. Please try later.\", undefined, undefined);\r\n                //if api fail, revert client side changes also\r\n                this.schedule.get('IsLoadQueueCollapsed').patchValue(false);\r\n                this.loadQueueService.setLoadQueueColumnMoved(true);\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setDriverColumnChangeDetect(true);\r\n            }\r\n        });\r\n    }\r\n    //carrier assignmnet\r\n    drSelectedForCarrierAssignment(event: any, drId: string, tripIndex: number) {\r\n        let drs = this.schedule.controls['Trips']['controls'][tripIndex]['controls']['DeliveryRequests'] as FormArray;\r\n        drs.controls.forEach((drForm: FormControl) => {\r\n            if (drForm.get('Id').value == drId) {\r\n                drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n            }\r\n        })\r\n    }\r\n    isAllTipsDrSelected(_drs: any) {\r\n        let drs = _drs.value || [];\r\n        return drs.every(dr => dr.IsSelectedForAssignment == true);\r\n    }\r\n    triptSelectedForCarrierAssignment(event: any, tripIndex: number) {\r\n        let drs = this.schedule.controls['Trips']['controls'][tripIndex]['controls']['DeliveryRequests'] as FormArray;\r\n        drs.controls.forEach((drForm: FormControl) => {\r\n            if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n            }\r\n        })\r\n    }\r\n    isDrExistInColumn(_Trips: AbstractControl) {\r\n        let TripsArray = _Trips.value || [];\r\n        return TripsArray.some(trip => trip.DeliveryRequests.length > 0);\r\n    }\r\n    isAllColumnDrSelected(_Trips: AbstractControl) {\r\n        let TripsArray = _Trips.value || [];\r\n        return TripsArray.every(trip => trip.DeliveryRequests.every(dr => dr.IsSelectedForAssignment == true));\r\n    }\r\n    columnSelectedForCarrierAssignment(event, _Trips: AbstractControl) {\r\n        _Trips['controls'].forEach((trip: FormControl) => {\r\n            let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n            drs.controls.forEach((drForm: FormControl) => {\r\n                if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                    drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    //add Optional pickup for particular column in DSB.\r\n    addOptionalPickup(schedule: FormGroup) {\r\n        var orderIds = [];\r\n        let tripsControl = schedule['controls']['Trips'] as FormArray;\r\n        tripsControl.controls.forEach((delR: FormGroup) => {\r\n            let drControl = delR.controls['DeliveryRequests'] as FormArray;\r\n            drControl.controls.forEach((delGroup: FormGroup) => {\r\n                if (orderIds.findIndex(x => x == delGroup.get('OrderId').value) == -1) {\r\n                    orderIds.push(delGroup.get('OrderId').value);\r\n                }\r\n            });\r\n        });\r\n        if (orderIds.length > 0) {\r\n            this.sbService.getOrderFuelTypes(orderIds).subscribe(data => {\r\n                let finalObj = { shiftIndex: this.i, shiftOrderNo: this.shiftOrderNo, ShiftId: this.ShiftId, RegionId: this.SbForm.get('RegionId').value, ScheduleBuilderId: this.SbForm.get('Id').value, ColIndex: this.j, scheduleInfo: schedule, FuelTypeInfo: data };\r\n                this.dataService.setOptionalPickupInfo(finalObj);\r\n            });\r\n        }\r\n        else {\r\n            let finalObj = { shiftIndex: this.i, shiftOrderNo: this.shiftOrderNo, ShiftId: this.ShiftId, RegionId: this.SbForm.get('RegionId').value, ScheduleBuilderId: this.SbForm.get('Id').value, ColIndex: this.j, scheduleInfo: schedule, FuelTypeInfo: null };\r\n            this.dataService.setOptionalPickupInfo(finalObj);\r\n\r\n        }\r\n\r\n    }\r\n    cancelEntireRow(shiftIndex: number, rowIndex: number): void {\r\n        this.dataService.setCancelEntireRowSubject({ ShiftIndex: shiftIndex, ScheduleIndex: rowIndex, IsOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n\r\n    LoadLevelCacelButtonHideShow(trip: FormGroup): boolean {\r\n        let delReqs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        if (delReqs.length > 0) {\r\n            let loadDrLength = delReqs.length;\r\n            let checkCommonElements = this.sbService.returnCommonTracableElements(SBConstants.CancelCompletedDraftStatus, delReqs, true);\r\n            if (checkCommonElements.length > 0 && loadDrLength == checkCommonElements.length) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    cancelScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n        this.dataService.setCancelDSDeliveryGroupSubject({ shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip, isOptionalPickup: false, OptionalPickupInfo: null, OrderFuelInfo: null });\r\n    }\r\n    public CancelLocationDS(jobId: number, trip: FormGroup, isTBD: number = 0, TBDGroupId: string = '') {\r\n        let data = {\r\n            jobId: jobId,\r\n            trip: trip,\r\n            isTBD: isTBD,\r\n            TBDGroupId: TBDGroupId\r\n        };\r\n        this.dataService.setCancelDSLocationDSSubject(data);\r\n    }\r\n    DoNotShowCancelDSButton(jobId: number, trip: FormGroup) {\r\n        let buttonstatus = true;\r\n        let EnrouteInCompleted = [3, 7, 8, 9, 22, 23];\r\n        let EnrouteInProgress = [1, 3, 11, 12, 13, 14, 15, 16, 17, 18];\r\n        if (this.disableControl) {\r\n            buttonstatus = false;\r\n        }\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n        if (filteredDRs.length == 0) {\r\n            buttonstatus = false;\r\n        }\r\n        else {\r\n            filteredDRs.forEach(x => {\r\n                if (EnrouteInProgress.indexOf(x.TrackScheduleEnrouteStatus) == -1 || EnrouteInCompleted.indexOf(x.TrackScheduleStatus) == -1) {\r\n                    buttonstatus = false;\r\n                }\r\n            });\r\n        }\r\n        return buttonstatus;\r\n    }\r\n    public CancelButtonVisible(trip, tdr) {\r\n        var buttonShowStatus = false;\r\n        var jobId = tdr.controls[\"JobId\"].value;\r\n        var drs = trip.value.DeliveryRequests;\r\n        var isTBD = drs.filter(t => t.IsTBD == true).length > 0 ? true : false;\r\n        var jobDrs = drs.filter(t => t.JobId == jobId) as DeliveryRequestViewModel[];\r\n        if (jobDrs.length > 0 && !isTBD) {\r\n            buttonShowStatus = this.CancelButtonVisibleInfo(jobDrs);\r\n        }\r\n        else {\r\n            var tBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drs = trip.value.DeliveryRequests;\r\n            var jobDrs = drs.filter(t => t.JobId == jobId) as DeliveryRequestViewModel[];\r\n            var tbdDrs = drs.filter(t => t.TBDGroupId == tBDGroupId) as DeliveryRequestViewModel[];\r\n            if (jobDrs.length > 0) {\r\n                buttonShowStatus = this.CancelButtonVisibleInfo(jobDrs);\r\n            }\r\n            if (tbdDrs.length > 0) {\r\n                buttonShowStatus = this.CancelButtonVisibleInfo(tbdDrs);\r\n            }\r\n        }\r\n        return buttonShowStatus;\r\n    }\r\n    public CancelButtonVisibleInfo(jobDrs: DeliveryRequestViewModel[]) {\r\n        let buttonShowStatus = true;\r\n        if (jobDrs.filter(x1 => x1.StatusClassId != 3).length >= 0) {\r\n            if (jobDrs.filter(x1 => x1.StatusClassId == 5).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.StatusClassId == 0).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.StatusClassId == 0).length > 0) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            else if (jobDrs.filter(x1 => x1.TrackScheduleStatus == 5).length == jobDrs.length) {\r\n                buttonShowStatus = false;\r\n                return;\r\n            }\r\n            buttonShowStatus = true;\r\n        }\r\n        return buttonShowStatus;\r\n    }\r\n    public LocationSequenceTrip(direction: number, jobId: number, drInfo: DeliveryRequestViewModel, lIndex: number, trip: FormGroup) {\r\n        var drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        if (direction == 1) {\r\n            if (!drInfo.IsTBD) {\r\n                var fjobId = this.findLocationSeq(drs, direction, jobId);\r\n                var jobDRs = drs.filter(x => x.JobId == jobId);\r\n                var finalDRs = drs.filter(x => x.JobId != jobId);\r\n                var finalDRsIndex = finalDRs.findIndex(x => x.JobId == fjobId);\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(finalDRsIndex, 0, x);\r\n                    finalDRsIndex = finalDRsIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n            else {\r\n                let currentDRIndex = drs.findIndex(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                currentDRIndex = currentDRIndex - 1;\r\n                var finalDRJobID = drs[currentDRIndex].JobId;\r\n                var finalDRIsTBD = drs[currentDRIndex].IsTBD;\r\n                var finalDRTBDGroupId = drs[currentDRIndex].TBDGroupId;\r\n                if (finalDRIsTBD) {\r\n                    currentDRIndex = drs.findIndex(x => x.TBDGroupId == finalDRTBDGroupId)\r\n                }\r\n                else {\r\n                    currentDRIndex = drs.findIndex(x => x.JobId == finalDRJobID)\r\n                }\r\n                var jobDRs = drs.filter(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                var finalDRs = drs.filter(x => x.TBDGroupId != drInfo.TBDGroupId);\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(currentDRIndex, 0, x);\r\n                    currentDRIndex = currentDRIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n        }\r\n        else {\r\n            if (!drInfo.IsTBD) {\r\n                var fjobId = this.findLocationSeq(drs, direction, jobId);\r\n                var jobDRs = drs.filter(x => x.JobId == jobId);\r\n                var finalDRs = drs.filter(x => x.JobId != jobId);\r\n                var finalDRsIndex = -1;\r\n                finalDRs.forEach((x, index: number) => {\r\n                    if (x.JobId == fjobId) {\r\n                        finalDRsIndex = index;\r\n                    }\r\n                });\r\n                finalDRsIndex = finalDRsIndex + 1;\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(finalDRsIndex, 0, x);\r\n                    finalDRsIndex = finalDRsIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n            else {\r\n                let currentDRIndex = drs.findIndex(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                currentDRIndex = lIndex;\r\n                var finalDRJobID = drs[currentDRIndex + 1].JobId;\r\n                var finalDRIsTBD = drs[currentDRIndex + 1].IsTBD;\r\n                var finalDRTBDGroupId = drs[currentDRIndex + 1].TBDGroupId;\r\n                var jobDRs = drs.filter(x => x.TBDGroupId == drInfo.TBDGroupId);\r\n                var finalDRs = drs.filter(x => x.TBDGroupId != drInfo.TBDGroupId);\r\n                finalDRs.forEach((x, index: number) => {\r\n                    if (x.JobId == finalDRJobID && !finalDRIsTBD) {\r\n                        currentDRIndex = index;\r\n                    }\r\n                    else if (x.TBDGroupId == finalDRTBDGroupId && finalDRIsTBD && finalDRTBDGroupId != null) {\r\n                        currentDRIndex = index;\r\n                    }\r\n                });\r\n                currentDRIndex = currentDRIndex + 1;\r\n                jobDRs.forEach(x => {\r\n                    finalDRs.splice(currentDRIndex, 0, x);\r\n                    currentDRIndex = currentDRIndex + 1;\r\n                });\r\n                let data = {\r\n                    DRs: finalDRs,\r\n                    trip: trip,\r\n                };\r\n                this.dataService.setDispatcherLoadDragDropSubject(data);\r\n            }\r\n        }\r\n    }\r\n    public findLocationSeq(drs: DeliveryRequestViewModel[], direction: number, jobId: number) {\r\n        let lastDRIndex = drs.length;\r\n        let currentJObDRIndex = drs.findIndex(x => x.JobId == jobId);\r\n        let findex = -1;\r\n        if (direction == 1) {\r\n            findex = drs[currentJObDRIndex - 1].JobId;\r\n        }\r\n        else {\r\n            let finaldrs = drs.filter((value, index) => index >= currentJObDRIndex && index <= lastDRIndex);\r\n            finaldrs.forEach((value) => {\r\n                if (value.JobId != jobId) {\r\n                    if (findex == -1) {\r\n                        findex = value.JobId;\r\n                    }\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        return findex;\r\n    }\r\n    public findFirstJobInfo(trip: any, tdr: DeliveryRequestViewModel, jobId: number): boolean {\r\n        var firstRecord = true;\r\n        let drs = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        var finalDRs = [];\r\n        drs.forEach(x => {\r\n            if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                finalDRs.push(x);\r\n            }\r\n            else {\r\n                finalDRs.push(x);\r\n            }\r\n        });\r\n        if (!tdr.IsTBD) {\r\n            var drJobINdex = finalDRs.findIndex(x => x.JobId == jobId);\r\n            if (drJobINdex == 0) {\r\n                firstRecord = false;\r\n            }\r\n        }\r\n        else {\r\n            var drJobINdex = finalDRs.findIndex(x => x.TBDGroupId == tdr.TBDGroupId);\r\n            if (drJobINdex == 0) {\r\n                firstRecord = false;\r\n            }\r\n        }\r\n        return firstRecord;\r\n    }\r\n    setJobSequence(trip: FormGroup) {\r\n        this.dataService.setLoadLocationSequenceSubject(trip)\r\n    }\r\n    public findLastInfo(trip, tdr) {\r\n        var drInfo = tdr.value as DeliveryRequestViewModel;\r\n        var isLastReq = false;\r\n        if (!drInfo.IsTBD) {\r\n            var jobId = drInfo.JobId;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var drs = trip.value.DeliveryRequests as DeliveryRequestViewModel[];\r\n            var finalDRs = [];\r\n            drs.forEach(x => {\r\n                if (x.IsBlendedRequest == true && x.IsBlendedDrParent == true) {\r\n                    finalDRs.push(x);\r\n                }\r\n                else {\r\n                    finalDRs.push(x);\r\n                }\r\n            });\r\n            var jobDrs = finalDRs.filter(t => t.JobId == jobId);\r\n            isLastReq = drID == jobDrs[jobDrs.length - 1].Id;\r\n            if (isLastReq == true) {\r\n                if (drID == finalDRs[finalDRs.length - 1].Id) {\r\n                    isLastReq = false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var TBDGroupId = tdr.controls[\"TBDGroupId\"].value;\r\n            var drID = tdr.controls[\"Id\"].value;\r\n            var tbddrs = trip.value.DeliveryRequests;\r\n            var jobtbDrs = tbddrs.filter(t => t.TBDGroupId == TBDGroupId);\r\n            isLastReq = drID == jobtbDrs[jobtbDrs.length - 1].Id;\r\n        }\r\n        return isLastReq;\r\n    }\r\n\r\n    getClasses(deliveryScheduleInfo: any, dr: any) {\r\n\r\n        if (deliveryScheduleInfo && deliveryScheduleInfo.DrInfo && deliveryScheduleInfo.DrInfo.length > 0 && deliveryScheduleInfo.DrInfo.some(dr => dr.IsBlendedRequest)) {\r\n            return dr ? this.getClassString(dr, true) : 'border pt-2'; //parent div\r\n        } else {\r\n            return this.getClassString(deliveryScheduleInfo, false);\r\n        }\r\n    }\r\n\r\n    getClassString(deliveryScheduleInfo: any, isblend: boolean) {\r\n        let classes = isblend ? 'overflow-hidden dr-round ' : ''; //child div\r\n\r\n        //status\r\n        if (deliveryScheduleInfo.StatusClassId == 1)\r\n            classes += 'dr-new';\r\n        else if (deliveryScheduleInfo.StatusClassId == 2)\r\n            classes += 'dr-inprogress';\r\n        else if (deliveryScheduleInfo.StatusClassId == 3)\r\n            classes += 'dr-cancelled dr-text-white';\r\n        else if (deliveryScheduleInfo.StatusClassId == 4)\r\n            classes += 'dr-completed';\r\n        else if (deliveryScheduleInfo.StatusClassId == 5)\r\n            classes += 'diverted-status dr-text-white';\r\n        //priority\r\n        if (deliveryScheduleInfo.Priority == 1)\r\n            classes += ' must-go';\r\n        else if (deliveryScheduleInfo.Priority == 2)\r\n            classes += ' should-go';\r\n        else if (deliveryScheduleInfo.Priority == 3)\r\n            classes += ' could-go';\r\n\r\n        //blink\r\n        if (deliveryScheduleInfo.IsBlinkDR)\r\n            classes += ' dr-notCompatible animated infinite flash';\r\n\r\n        return classes;\r\n    }\r\n}","<div class=\"driver-panel\" [formGroup]=\"schedule\" [ngClass]=\"{'last-driver': ((i == SbForm.controls['Shifts']['controls'].length-1) && (j== ScheduleLength - 1))}\">\r\n    <div class=\"driver-header-well\">\r\n        <ng-container *ngIf=\"schedule.controls['Drivers']['controls'].length==0 && schedule.controls['Trailers']['controls'].length==0\">\r\n            <div class=\"column-inital-div\">\r\n                <span class=\"column-inital\">C{{schedule.controls['DriverRowIndex'].value+1}}</span>\r\n            </div>\r\n            <div class=\"driver-name-col\">\r\n                <h6 class=\"driver-name\">\r\n                    <a class=\"\" data-toggle=\"modal\" data-target=\"#driverTrailerModel\"\r\n                       (click)=\"editDriverTrailers(i, j)\" placement=\"top\"\r\n                       ngbTooltip=\"{{IsTrailerExists ? 'Assign Driver/Trailer' :'Assign Driver'}}\"\r\n                       *ngIf=\"disableControl==false\">\r\n                        <span>\r\n                            {{IsTrailerExists ? 'Assign Driver/Trailer' :'Assign Driver'}}\r\n                        </span>\r\n                        <!--<i class=\"fas fa-user-plus fas fa-user-plus fs18 mt-2 ml-1\" data-statusid=\"11\" *ngIf=\"!schedule.controls['IsDriverScheduleExists'].value && !IsTrailerExists\"></i>-->\r\n                    </a>\r\n                </h6>\r\n            </div>\r\n            <div class=\"option-menu\" dropdown *ngIf=\"disableControl==false && schedule.controls['IsDriverScheduleExists'].value\">\r\n                <a class=\"option-menu-link dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\r\n                   aria-haspopup=\"true\" aria-expanded=\"false\" href=\"javascript:void(0);\">\r\n                    <i class=\"fas fa-ellipsis-v\"></i>\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n            <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                <a (click)=\"addLoad(i,j)\" class=\"db\">\r\n                    <span><i class=\"fa fa-plus mt4 fs16\"></i></span>\r\n                    Load\r\n                </a>\r\n            </li>\r\n            <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                <a (click)=\"moveColumnToLoadQueue()\" class=\"db\">\r\n                    <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n                    Move to Load Queue\r\n                </a>\r\n            </li>\r\n            <li class=\"dropdown-item\">\r\n                <a data-toggle=\"modal\" data-target=\"#optional-pickup-location\" placement=\"top\" (click)=\"addOptionalPickup(schedule)\" class=\"db\">\r\n                    <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n                    Optional Pickup\r\n                </a>\r\n            </li>\r\n    </div>\r\n</div>\r\n        </ng-container>\r\n<ng-container *ngIf=\"schedule.controls['Drivers']['controls'].length>0 || schedule.controls['Trailers']['controls'].length>0\">\r\n    <div class=\"column-inital-div\">\r\n        <span class=\"column-inital\">C{{schedule.controls['DriverRowIndex'].value+1}}</span>\r\n    </div>\r\n    <div class=\"driver-name-col\">\r\n        <ng-container [formArrayName]=\"'Drivers'\" *ngIf=\"schedule.controls['IsDriverScheduleExists'].value || schedule.controls['IsIncludeAllRegionDriver'].value\">\r\n            <ng-container *ngFor=\"let driver of schedule.controls['Drivers']['controls']; let x = index; let islast = last; trackBy: trackByDriverId\">\r\n                <ng-container [formGroupName]=\"x\">\r\n                    <h6 class=\"driver-name\" placement=\"bottom\"\r\n                        ngbTooltip=\"{{driver.controls['Name'].value}}\">\r\n                        {{driver.controls['Name'].value}}\r\n                    </h6>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <ng-container [formArrayName]=\"'Trailers'\">\r\n            <ng-container *ngFor=\"let trailer of schedule.controls['Trailers']['controls']; let y = index; let isfirst = first; trackBy: trackByTrailerId\">\r\n                <ng-container [formGroupName]=\"y\" *ngIf=\"isfirst\">\r\n                    <div class=\"trailer-name\" placement=\"bottom\"\r\n                         ngbTooltip=\"Edit Compartment Assignments\">\r\n                        <a (click)=\"editCompartmentAssignments()\" *ngIf=\"disableControl==false\">{{trailer.controls['TrailerId'].value}}</a>\r\n                        <a *ngIf=\"disableControl==true\">{{trailer.controls['TrailerId'].value}}</a>\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"option-menu\" dropdown>\r\n        <a class=\"option-menu-link dropdown-toggle\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\r\n           aria-haspopup=\"true\" aria-expanded=\"false\" href=\"javascript:void(0);\">\r\n            <i class=\"fas fa-ellipsis-v\"></i>\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"editDriverTrailers(i, j)\" data-toggle=\"modal\" data-target=\"#driverTrailerModel\" class=\"db\">\r\n            <span><i class=\"fa fa-edit mt4 fs16\"></i></span>\r\n            Edit\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"publishEntireRow(i, j)\" class=\"db\">\r\n            <span><i class=\"fas fa-paper-plane mt4 fs16\"></i></span>\r\n            Publish\r\n        </a>\r\n    </li>\r\n    <ng-container [formArrayName]=\"'Drivers'\">\r\n        <ng-container *ngFor=\"let driver of schedule.controls['Drivers']['controls']; let x = index; let islast = last; trackBy: trackByDriverId\">\r\n            <ng-container [formGroupName]=\"x\">\r\n                <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n                    <a (click)=\"IntializeChat(driver.controls['Id'].value)\" class=\"db\">\r\n                        <span><i class=\"far fa-comment mt4 fs16\"></i></span>\r\n                        Chat\r\n                    </a>\r\n                </li>\r\n                <li class=\"dropdown-item\" *ngIf=\"schedule.controls['AllowDriverChange'].value == true && disableControl==false\">\r\n                    <a (click)=\"UnAssignDriverFromShift(schedule,'driver')\" *ngIf=\"disableControl==false\" class=\"db\" title=\"Unassign driver\">\r\n                        <span><i class=\"far fa-times-circle mt4 fs16\"></i></span>\r\n                        Driver\r\n                    </a>\r\n                </li>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"addLoad(i,j)\" class=\"db\">\r\n            <span><i class=\"fa fa-plus mt4 fs16\"></i></span>\r\n            Load\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"schedule.controls['Trailers']['controls'].length>0 && IsTrailerExists && schedule.controls['AllowDriverChange'].value == true\">\r\n        <a data-toggle=\"modal\" data-target=\"#TrailerInformation\" (click)=\"getTrailerInfo(schedule)\" class=\"db\">\r\n            <span><i class=\"fa fa-info mt4 fs16\"></i></span>\r\n            Trailers\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false\">\r\n        <a (click)=\"moveColumnToLoadQueue()\" class=\"db\">\r\n            <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n            Move to Load Queue\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\">\r\n        <a data-toggle=\"modal\" data-target=\"#optional-pickup-location\" placement=\"top\" (click)=\"addOptionalPickup(schedule)\" class=\"db\">\r\n            <span><i class=\"far fa-arrow-alt-circle-left mt4 fs16\"></i></span>\r\n            Optional Pickup\r\n        </a>\r\n    </li>\r\n    <li class=\"dropdown-item\" *ngIf=\"disableControl==false && CheckForCancelDSButton(i,j)\">\r\n        <a class=\"db\" (click)=\"cancelEntireRow(i, j)\" placement=\"top\">\r\n            <span><i class=\"far fa-arrow-alt-circle-right mt4 fs16\"></i></span>\r\n            Cancel DS(s)\r\n        </a>\r\n    </li>\r\n    </div>\r\n    </div>\r\n</ng-container>\r\n<span class=\"pull-right\">\r\n    <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && isDrExistInColumn(schedule.controls['Trips'])\"\r\n           type=\"checkbox\"\r\n           id=\"column_{{i}}\"\r\n           name=\"column_{{i}}\"\r\n           [checked]=\"isAllColumnDrSelected(schedule.controls['Trips'])\"\r\n           (change)=\"columnSelectedForCarrierAssignment($event, schedule.controls['Trips'])\">\r\n</span>\r\n    </div>\r\n<ng-container [formArrayName]=\"'Trips'\">\r\n    <ng-container *ngFor=\"let trip of schedule.controls['Trips']['controls']; let k = index; let lastTrip = last; trackBy: trackByTripIndex\">\r\n        <div class=\"load-panel\">\r\n            <div class=\"load-header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-5\" draggable\r\n                         [dragData]=\"{Data: getDraggableDrsFromLoad(trip), TripFrom: trip, ShiftIndex: i, RowIndex:j, ColIndex: k, Schedule: schedule}\"\r\n                         [dragEnabled]=\"!disableControl && trip.controls['DeliveryRequests']['controls'].length>0\"\r\n                         [class.zoom]=\"!disableControl && trip.controls['DeliveryRequests']['controls'].length>0\"\r\n                         [ngbTooltip]=\"(!disableControl && trip.controls['DeliveryRequests']['controls'].length>0) ? 'Drag Load' : ''\"\r\n                         placement=\"top\">\r\n                        <h6 class=\"load-name\">Load {{k+1}}</h6>\r\n                    </div>\r\n                    <div class=\"col load-time\">\r\n                        <i class=\"far fa-clock mr-1\"></i>\r\n                        <span [class.mr5]=\"SbForm.get('IsAssignDrEnabled').value\">{{trip.controls['StartTime'].value}}</span>\r\n\r\n                        <span class=\"pull-right\">\r\n                            <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && trip.controls['DeliveryRequests'].controls.length>0\"\r\n                                   type=\"checkbox\"\r\n                                   id=\"trip_{{k}}\"\r\n                                   name=\"trip_{{k}}\"\r\n                                   [checked]=\"isAllTipsDrSelected(trip.controls['DeliveryRequests'])\"\r\n                                   (change)=\"triptSelectedForCarrierAssignment($event, k)\">\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container [formGroupName]=\"k\">\r\n                <div id=\"drop{{k+1}}\">\r\n                    <div class=\"location-body\" droppable\r\n                         (onDrop)=\"onItemDrop(schedule.controls['Trips']['controls'][k], $event, i, j, k, schedule);\">\r\n                        <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                            <ng-container *ngFor=\"let tdr of trip.controls['DeliveryRequests'].controls; let l = index; let lastTdr = last; trackBy: trackByDrId\">\r\n                                <ng-container [formGroupName]=\"l\" *ngIf=\"!tdr.controls['IsBlendedRequest'].value || tdr.controls['IsBlendedDrParent'].value\">\r\n                                    <div class=\"location-body-panel\" draggable\r\n                                         [dragData]=\"{Data: getDraggedDrs(tdr.controls['JobId'].value, trip), TripFrom:trip, DrIndex:l, ShiftIndex: i, RowIndex:j, ColIndex: k, Schedule:schedule}\"\r\n                                         [dragEnabled]=\"disableControl===false\"\r\n                                         *ngIf=\"tdr.controls['IsJobFilter'].value\"\r\n                                         [ngClass]=\"{'diverted-status':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==5) || tdr.controls['BlendDrScheduleStatus'].value==5),'dr-completed':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==4)||tdr.controls['BlendDrScheduleStatus'].value==4),'dr-cancelled':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==3)||tdr.controls['BlendDrScheduleStatus'].value==3),'dr-inprogress':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==2)||tdr.controls['BlendDrScheduleStatus'].value==2),'dr-new':((!tdr.controls['IsBlendedRequest'].value && tdr.controls['StatusClassId'].value==1)||tdr.controls['BlendDrScheduleStatus'].value==1),'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3,'dr-notCompatible animated infinite flash':tdr.controls['IsBlinkDR'].value == true, 'last-div': fnIsLastDr(trip, tdr) == true }\">\r\n                                        <div class=\"header\">\r\n                                            <div class=\"location-name\"\r\n                                                 *ngIf=\"tdr.controls['JobId'].value > 0 && (l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value))\">\r\n                                                <h6 class=\"break-word\">{{tdr.controls['JobName'].value}}</h6>\r\n                                                <span class=\"customer-name\">{{tdr.controls['CustomerCompany'].value}} </span>\r\n                                                <a class=\"btn-sm pr-0\" *ngIf=\"disableControl===false && CancelButtonVisible(trip,tdr)\" title=\"Cancel DS\" (click)=\"CancelLocationDS(tdr.controls['JobId'].value, trip,0)\"><i class=\"fas fa-remove\"></i></a>\r\n                                                <a class=\"btn-sm\" title=\"Preload delivery for this location\" (click)=\"preloadDelieryForThisLoc(trip, k, tdr.controls['JobId'].value)\"\r\n                                                   *ngIf=\"preloadOption['TripIndex']==k && !tdr.controls['PreLoadedFor'] && !tdr.controls['PostLoadedFor'] && !disableControl && DoNotShowPushButtonStatuses.indexOf(tdr.controls['TrackScheduleStatus'].value) == -1\">\r\n                                                    <i class=\"fas fa-tint\"></i>\r\n                                                </a>\r\n                                                <a class=\"btn-sm\" title=\"Transfer DS\" *ngIf=\"disableControl===false && tdr.controls['StatusClassId'].value !=3\" data-toggle=\"modal\" data-target=\"#TransferDSModel\" (click)=\"TransferDS(tdr.controls['JobId'].value, trip,l,i,j,k,schedule)\"><i class=\"fas fa-exchange-alt\"></i></a>\r\n                                            </div>\r\n                                            <div class=\"location-name\"\r\n                                                 *ngIf=\"tdr.controls['JobId'].value == 0 && (l==0 || (tdr.controls['TBDGroupId'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].TBDGroupId.value|| tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value))\">\r\n                                                <h6>TBD</h6>\r\n                                                <span class=\"customer-name\">{{tdr.controls['PickupLocationType'].value == 2 ?tdr.controls['BulkPlant'].controls['SiteName'].value :tdr.controls['Terminal'].controls['Name'].value}} </span>\r\n                                                <a class=\"btn-sm pr-0\" *ngIf=\"disableControl===false && CancelButtonVisible(trip,tdr)\" title=\"Cancel DS\" (click)=\"CancelLocationDS(tdr.controls['TBDGroupId'].value, trip,1,tdr.controls['TBDGroupId'].value)\"><i class=\"fas fa-remove\"></i></a>\r\n                                                <a class=\"btn-sm\" title=\"Transfer DS\" *ngIf=\"disableControl===false && tdr.controls['StatusClassId'].value !=3\" data-toggle=\"modal\" data-target=\"#TransferDSModel\" (click)=\"TransferDS(tdr.controls['JobId'].value, trip,l,i,j,k,schedule)\"><i class=\"fas fa-exchange-alt\"></i></a>\r\n                                            </div>\r\n                                            <ng-container *ngIf=\"l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value)\">\r\n                                                <ng-container *ngIf=\"trip.controls['IsCommonPickup'].value==true;\">\r\n                                                    <ng-container *ngIf=\"trip.controls['PickupLocationType'].value==2 && trip.controls['BulkPlant'].controls['SiteName'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(trip.controls['BulkPlant'].controls['SiteName'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"trip.controls['PickupLocationType'].value!=2 && trip.controls['Terminal'].controls['Name'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(trip.controls['Terminal'].controls['Name'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                                <ng-container *ngIf=\"trip.controls['IsCommonPickup'].value==false;\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['PickupLocationType'].value==2 && tdr.controls['BulkPlant'].controls['SiteName'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(tdr.controls['BulkPlant'].controls['SiteName'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"tdr.controls['PickupLocationType'].value!=2 && tdr.controls['Terminal'].controls['Name'].value;\">\r\n                                                        <div class=\"pickup-location\"\r\n                                                             [ngClass]=\"{'must-go': tdr.controls['Priority'].value==1, 'should-go': tdr.controls['Priority'].value==2,'could-go':tdr.controls['Priority'].value==3}\">\r\n                                                            <span>{{displayBulkPlanName(tdr.controls['Terminal'].controls['Name'].value)}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                        <div class=\"body\">\r\n                                            <div class=\"product-name-row\">\r\n                                                <div class=\"product-name\" placement=\"top\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==false\"\r\n                                                     ngbTooltip=\"{{tdr.controls['ProductType'].value}}\">\r\n                                                    {{tdr.controls['ProductType'].value}}\r\n                                                </div>\r\n                                                <div class=\"product-name\" placement=\"top\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==true\"\r\n                                                     ngbTooltip=\"{{tdr.controls['AdditiveProductName'].value}} {{tdr.controls['BlendedProductName'].value}}\">\r\n                                                    Blend\r\n                                                </div>\r\n                                                <div class=\"product-qty\">\r\n                                                    <ng-container *ngIf=\"tdr.controls['ScheduleQuantityType'].value==1 || tdr.controls['ScheduleQuantityType'].value==0\">\r\n                                                        <span class=\"mr-1\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==false\">{{tdr.controls['RequiredQuantity'].value | number:'1.0-2'}}</span>\r\n                                                        <span class=\"mr-1\" *ngIf=\"tdr.controls['IsBlendedRequest'].value==true\">{{tdr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}</span>\r\n                                                        <span *ngIf=\"tdr.controls['UoM'].value==1; else litres\">G</span>\r\n                                                        <ng-template #litres>L</ng-template>\r\n                                                    </ng-container>\r\n                                                    <ng-container *ngIf=\"tdr.controls['ScheduleQuantityType'].value !=1\">\r\n                                                        <span class=\"mr-1\">{{tdr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div *ngIf=\"lastTdr || isLastTdr(trip, tdr, lastTdr) || ((trip.controls['DeliveryRequests'].controls.length>l+1) && tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l+1]['controls'].CustomerCompany.value && tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l+1]['controls'].JobName.value)\">\r\n                                            <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PreLoadedFor']\"><i>Pre-Load</i></span>\r\n                                            <span class=\"color-white fs10 blinking\" *ngIf=\"tdr.controls['PostLoadedFor']\"><i>Post-Load</i></span>\r\n                                        </div>\r\n                                        <div *ngIf=\"fnIsLastDrSeq(trip, tdr) == true\">\r\n                                            <a title=\"Up Delivery Schedule\" (click)=\"LocationSequenceTrip(1,tdr.controls['JobId'].value,tdr.value,l,trip)\" *ngIf=\"disableControl===false && findFirstJobInfo(trip,tdr, tdr.controls['JobId'].value)\"><i class=\"fas fa-arrow-circle-up\"></i></a>\r\n                                            <a style=\"padding-left:10px;\" title=\"Down Delivery Schedule\" (click)=\"LocationSequenceTrip(2,tdr.controls['JobId'].value,tdr.value,l,trip)\" *ngIf=\"disableControl===false && findLastInfo(trip,tdr)\"><i class=\"fas fa-arrow-circle-down\"></i></a>\r\n                                        </div>\r\n                                        <div class=\"float-popover\"\r\n                                             *ngIf=\"l==0 || (tdr.controls['CustomerCompany'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].CustomerCompany.value || tdr.controls['JobName'].value != trip.controls['DeliveryRequests']['controls'][l-1]['controls'].JobName.value)\">\r\n                                            <button type=\"button\" class=\"btn btn-link p-0\" placement=\"{{((i == SbForm.controls['Shifts']['controls'].length-1) && (j== ScheduleLength - 1)) ? 'left' : 'right' }}\"\r\n                                                    [ngbPopover]=\"popContent\" container=\"body\"\r\n                                                    popoverClass=\"dsb-popover\" (click)=\"GetDeliveryScheduleInfo(tdr.controls['JobId'].value,trip,k,tdr.value);\">\r\n                                                <i class=\"fas fa-chevron-circle-right\"></i>\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <div class=\"load-menu-panel text-center\" *ngIf=\"disableControl==false && trip.controls['IsEditable'].value == true && trip.controls['IsPreloadDisable'].value == false\">\r\n                <a class=\"circle-icon\" data-toggle=\"modal\" data-target=\"#resetDrByRouteModal\" id=\"btnRoute{{i}}{{j}}{{k}}\"\r\n                   (click)=\"resetDrByRoutes(i, j, k, trip, schedule)\" placement=\"right\" ngbTooltip=\"Route\"\r\n                   container=\"body\">\r\n                    <i class=\"fas fa-route fs14\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\"\r\n                   (click)=\"editExisingGroup(schedule.controls['Trips']['controls'][k],i,j,k,schedule);\"\r\n                   placement=\"right\" ngbTooltip=\"Edit\" container=\"body\">\r\n                    <i class=\"fa fa-edit fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnDraftTrip{{i}}{{j}}{{k}}\" (click)=\"draftScheduleBuilder(trip)\"\r\n                   placement=\"right\" ngbTooltip=\"Save\" container=\"body\"\r\n                   *ngIf=\"(trip.controls['TripId'] != null||trip.controls['DeliveryRequests'].length>0) && trip.controls['DeliveryGroupPrevStatus'].value!=2 && disableControl==false\">\r\n                    <i class=\"far fa-save fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnPublishTrip{{i}}{{j}}{{k}}\"\r\n                   (click)=\"publishScheduleBuilder(i, j, k, schedule, trip);\" placement=\"right\"\r\n                   ngbTooltip=\"Publish\" container=\"body\">\r\n                    <i class=\"fas fa-paper-plane fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnMoveDRQueue{{i}}{{j}}{{k}}\" data-toggle=\"modal\" data-target=\"#confirm-reset\"\r\n                   (click)=\"editGroup(trip,i,j,k,schedule);\" placement=\"right\" ngbTooltip=\"Move to DR Queue\" container=\"body\">\r\n                    <i class=\"fas fa-undo fs13\"></i>\r\n                </a>\r\n                <a class=\"circle-icon\" id=\"btnCancelTrip{{i}}{{j}}{{k}}\" *ngIf=\"LoadLevelCacelButtonHideShow(trip)\"\r\n                   (click)=\"cancelScheduleBuilder(i, j, k, schedule, trip);\" placement=\"right\" ngbTooltip=\"Cancel\" container=\"body\">\r\n                    <i class=\"fas fa-remove fs13\"></i>\r\n                </a>\r\n\r\n                <a class=\"circle-icon\" id=\"btnSequence{{i}}{{j}}{{k}}\" (click)=\"setJobSequence(trip)\" placement=\"right\"\r\n                   ngbTooltip=\"Location Sequence\" container=\"body\">\r\n                    <i class=\"fas fa-map-marked-alt fs14\"></i>\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n</div>\r\n\r\n\r\n<ng-template #popContent>\r\n    <div class=\"pop-header\" id=\"drCustomerDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\" *ngIf=\"IsTBDRequest == false\">\r\n                <span class=\"location-name\">{{LocationName}},</span>\r\n                <span class=\"customer-name\">{{CustomerName}}</span>\r\n            </div>\r\n            <div class=\"col-12\" *ngIf=\"IsTBDRequest == true\">\r\n                <span class=\"location-name\">TBD</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"popover-details\" id=\"drFuelDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 product-details\" *ngFor=\"let deliveryScheduleInfo of DeliveryScheduleInfo; let i = index\"\r\n                 [ngClass]=\"getClasses(deliveryScheduleInfo, null)\">\r\n\r\n                <div *ngFor=\"let dr of deliveryScheduleInfo.DrInfo\" [ngClass]=\"getClasses(deliveryScheduleInfo, dr)\">\r\n                    <p class=\"product-name\">\r\n                        {{dr.ProductName}}\r\n                        <span *ngIf=\"deliveryScheduleInfo.Status==3\" class=\"status-flag mt-1\">\r\n                            <i class=\"far fa-clock mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==1\"></i>\r\n                            <i class=\"fas fa-times mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==3\"></i>\r\n                            <i class=\"fas fa-hourglass-half mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==2\"></i>\r\n                            <i class=\"fas fa-check mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==4\"></i>\r\n                            <i class=\"glyphicon glyphicon-share-alt mr2\" *ngIf=\"deliveryScheduleInfo.StatusClassId==5\"></i>\r\n                            {{dr.TrackScheduleStatusName}}\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                            - {{dr.RequiredQuantity | number:'1.0-2'}}\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                            <span *ngIf=\"deliveryScheduleInfo.UoM==1; else litres\">G </span>\r\n                            <ng-template #litres>L </ng-template>\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType !=1\">\r\n                            <span>- {{deliveryScheduleInfo.ScheduleQuantityTypeText}}</span>\r\n                        </span>\r\n                        <span class=\"recurring-schedule\" *ngIf=\"deliveryScheduleInfo.isRecurringSchedule==true\" placement=\"bottom\"\r\n                              ngbTooltip=\"Recurring\">\r\n                            <i class=\"fas fa-sync color-black\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"deliveryScheduleInfo.Status==11\" class=\"diverted-label\" placement=\"bottom\"\r\n                              ngbTooltip=\"Diverted\">\r\n                            <i class=\"fas fa-step-forward color-black\"></i>\r\n                        </span>\r\n                        <span class=\"auto-generated\"\r\n                              *ngIf=\"deliveryScheduleInfo.IsAutoCreatedDR==true && deliveryScheduleInfo.DelReqSource!=9\" placement=\"bottom\"\r\n                              ngbTooltip=\"Auto-Generated\">\r\n                            <i class=\"fas fa-magic ml10\"></i>\r\n                        </span>\r\n                        <span class=\"pull-right mr2 mt2\">\r\n                            <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value\"\r\n                                   type=\"checkbox\"\r\n                                   id=\"{{dr.Id}}\"\r\n                                   name=\"{{dr.Id}}\"\r\n                                   [checked]=\"deliveryScheduleInfo.IsSelectedForAssignment\"\r\n                                   (change)=\"drSelectedForCarrierAssignment($event, dr.Id, deliveryScheduleInfo.TripIndex)\">\r\n                        </span>\r\n                    </p>\r\n\r\n                    <span class=\"otto-generated\" *ngIf=\"deliveryScheduleInfo.DelReqSource==9\">\r\n                        Otto Generated\r\n                    </span>\r\n                    <span *ngIf=\"deliveryScheduleInfo.IsFilldInvoke\" class=\"filldInvoke\">\r\n                        Filld\r\n                    </span>\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsCommonPickup==true && dr.IsAdditive==false;\">\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.CommonPickupLocationType==2;\">\r\n                            <p class=\"terminal-name\">\r\n                                {{deliveryScheduleInfo.Address}},\r\n                                {{deliveryScheduleInfo.City}},{{deliveryScheduleInfo.Code}},\r\n                                {{deliveryScheduleInfo.ZipCode}}\r\n                            </p>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.CommonPickupLocationType!=2;\">\r\n                            <p class=\"terminal-name\">{{deliveryScheduleInfo.PickupLocationName}}</p>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsCommonPickup==false && dr.IsAdditive==false;\">\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.PickupLocationType==2;\">\r\n                            <p class=\"terminal-name\">\r\n                                {{dr.Address}},\r\n                                {{dr.City}},{{dr.Code}},\r\n                                {{dr.ZipCode}}\r\n                            </p>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"deliveryScheduleInfo.PickupLocationType!=2;\">\r\n                            <p class=\"terminal-name\">{{dr.PickupLocationName}}</p>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.IsMarine==true\">\r\n                        {{dr.DeliveryDateStartTime}}\r\n                    </p>\r\n                    <!-- <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.IsMarine==true\">\r\n            {{dr.Vessel}} - {{dr.Berth}}\r\n        </p> -->\r\n\r\n                    <ng-container *ngIf=\"deliveryScheduleInfo.IsMarine\">\r\n\r\n                        <p class=\"badges\" *ngIf=\"dr.Berth\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.Vessel}}-{{dr.Berth}}\">\r\n                            {{(dr.Vessel.length > 15) ? (dr.Vessel | slice:0:15)+'..':(dr.Vessel) }}\r\n                            -\r\n                            {{(dr.Berth.length > 15) ? (dr.Berth | slice:0:15)+'..':(dr.Berth) }}\r\n                        </p>\r\n\r\n                        <p class=\"badges\" *ngIf=\"!dr.Berth\" placement=\"top\" container=\"body\" ngbTooltip=\"{{dr.Vessel}}\">\r\n                            {{(dr.Vessel.length > 15) ? (dr.Vessel | slice:0:15)+'..':(dr.Vessel) }}\r\n                        </p>\r\n\r\n                    </ng-container>\r\n\r\n                </div>\r\n                <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.RouteName!='';\">\r\n                    {{deliveryScheduleInfo.RouteName}}\r\n                </p>\r\n                <p class=\"badges\" *ngIf=\"deliveryScheduleInfo.BadgeNoInfo!='';\">{{deliveryScheduleInfo.BadgeNoInfo}}</p>\r\n                <span class=\"preload color-white fs10 blinking float-left ml10\" *ngIf=\"deliveryScheduleInfo.isPreload\"><i>Pre-Load</i></span>\r\n                <span class=\"postload color-white fs10 blinking float-left ml10\" *ngIf=\"deliveryScheduleInfo.isPostload\"><i>Post-Load</i></span>\r\n                <span class=\"max-fill mt-1 mr-2\">\r\n                    MaxFill - {{deliveryScheduleInfo.TankMaxFill}}\r\n                    <span *ngIf=\"deliveryScheduleInfo.ScheduleQuantityType==1 || deliveryScheduleInfo.ScheduleQuantityType==0\">\r\n                        <span *ngIf=\"deliveryScheduleInfo.UoM==1; else litres\">G</span>\r\n                        <ng-template #litres>L</ng-template>\r\n                    </span>\r\n                </span>\r\n                <span  class=\"fs12\">\r\n                    <b>  {{deliveryScheduleInfo.ScheduleStartTime}}-{{deliveryScheduleInfo.ScheduleEndTime}} </b>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\n\n@Directive({\n    selector: '[ValidateCompartmentsQuantity]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: CompartmentQuantityValidatorDirective,\n        multi: true\n    }]\n})\nexport class CompartmentQuantityValidatorDirective {\n\n    @Input(\"ValidateCompartmentsQuantity\")\n    public DeliveryRequest: AbstractControl = null;\n\n    validate(drControl: AbstractControl): { [key: string]: any } | null {\n        if (drControl.value && this.DeliveryRequest) {\n            let _compartments = this.DeliveryRequest['controls'].Compartments['controls'];\n            if (_compartments && _compartments.length > 0) {\n                let drQty = drControl.value; let compQty = 0;\n                let regexp = new RegExp(/^([0-9]\\d*(\\.\\d+)?)$/);\n                for (var idx = 0; idx < _compartments.length; idx++) {\r\n                    let compartment = _compartments[idx]['controls']['Quantity'];\r\n                    if (compartment && compartment.value && regexp.test(compartment.value))\r\n                        compQty = compQty + parseFloat(compartment.value);\r\n                }\n                if (compQty > drQty) {\n                    return { CompartmentQuantity: true };\r\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { DeliveryRequestTypes, DeliveryShiftEnum, DrFilterPreferencesModel, OrderType, TrailerTypeEnum } from \"src/app/app.enum\";\r\nimport { DropDownItem } from \"src/app/buyer-wally-board/Models/BuyerWallyBoard\";\r\nimport { HandleError } from \"src/app/errors/HandleError\";\r\nimport { DeliveryRequestViewModel, DelRequestsByJobModel } from \"../models/DispatchSchedulerModels\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class DrFilterService extends HandleError {\r\n\r\n    private urlSaveDrFilterPreferences = '/Freight/SaveDrFilterPreferences';\r\n    private urlGetDrFilterPreferences = '/Freight/GetDrFilterPreferences';\r\n\r\n    constructor(private fb: FormBuilder, private httpClient: HttpClient) { super(); }\r\n\r\n    drFilterFormFromModel(drFilterModel: DrFilterModel) {\r\n\r\n        let form = this.fb.group({\r\n            Terminals: this.fb.control(drFilterModel.Terminals),\r\n            BulkPlants: this.fb.control(drFilterModel.Bulkplants),\r\n            Priority: this.fb.group({\r\n                Missed: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.Missed) ? true : false),\r\n                MustGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo) ? true : false),\r\n                ShouldGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo) ? true : false),\r\n                CouldGo: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo) ? true : false),\r\n                AssignedToMe: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.AssignedToMe) ? true : false),\r\n                AssignedByMe: this.fb.control(drFilterModel.Priority.includes(DeliveryRequestTypes.AssignedByMe) ? true : false)\r\n            }),\r\n            TrailerType: this.fb.group({\r\n                Lead: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Lead) ? true : false),\r\n                Pup: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Pup) ? true : false),\r\n                Tandem: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Tandem) ? true : false),\r\n                Quad: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Quad) ? true : false),\r\n                Tridem: this.fb.control(drFilterModel.TrailerType.includes(TrailerTypeEnum.Tridem) ? true : false),\r\n            }),\r\n            DeliveryShift: this.fb.group({\r\n                Morning: this.fb.control(drFilterModel.DeliveryShift.includes(DeliveryShiftEnum.Morning) ? true : false),\r\n                Evening: this.fb.control(drFilterModel.DeliveryShift.includes(DeliveryShiftEnum.Evening) ? true : false)\r\n            }),\r\n            IsFilterApplied: this.fb.control(drFilterModel.IsFilterApplied),\r\n            IsTBDRequest: this.fb.control(drFilterModel.IsTBDRequest),\r\n            DeliveryBrokeredDR: this.fb.group({\r\n                brokeredDrs: this.fb.control(drFilterModel.IsBrokeredDRs),\r\n            }),\r\n            Customers: this.fb.control(drFilterModel.Customers)\r\n        });\r\n\r\n        return form;\r\n    }\r\n\r\n    getDrFilterForm(isFilterApplied?: boolean) {\r\n\r\n        return this.fb.group({\r\n            Terminals: this.fb.control([]),\r\n            BulkPlants: this.fb.control([]),\r\n            Priority: this.fb.group({\r\n                Missed: this.fb.control(false),\r\n                MustGo: this.fb.control(isFilterApplied ? true : false),\r\n                ShouldGo: this.fb.control(false),\r\n                CouldGo: this.fb.control(false),\r\n                AssignedToMe: this.fb.control(false),\r\n                AssignedByMe: this.fb.control(false)\r\n            }),\r\n            TrailerType: this.fb.group({\r\n                Lead: this.fb.control(false),\r\n                Pup: this.fb.control(false),\r\n                Tandem: this.fb.control(false),\r\n                Quad: this.fb.control(false),\r\n                Tridem: this.fb.control(false)\r\n            }),\r\n            DeliveryShift: this.fb.group({\r\n                Morning: this.fb.control(false),\r\n                Evening: this.fb.control(false)\r\n            }),\r\n            DeliveryBrokeredDR: this.fb.group({\r\n                brokeredDrs: this.fb.control(false),\r\n            }),\r\n            IsTBDRequest: this.fb.control(false),\r\n            IsFilterApplied: this.fb.control(isFilterApplied ? true : false),\r\n            OrderType: this.fb.group({\r\n                OrderTypeLTL: this.fb.control(false),\r\n                OrderTypeFTL: this.fb.control(false),\r\n                OrderTypeALL: this.fb.control(false),\r\n            }),\r\n            Customers: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    drFilterFormToModel(drFilterForm: FormGroup, IsCarrierCompany: boolean) {\r\n\r\n        let formValue = drFilterForm.value;\r\n        let model = new DrFilterModel();\r\n\r\n        //SHIFTS\r\n        if (formValue.DeliveryShift.Evening)\r\n            model.DeliveryShift.push(DeliveryShiftEnum.Evening)\r\n        if (formValue.DeliveryShift.Morning)\r\n            model.DeliveryShift.push(DeliveryShiftEnum.Morning)\r\n        //PRIORITY\r\n        if (formValue.Priority.MustGo)\r\n            model.Priority.push(DeliveryRequestTypes.MustGo);\r\n        if (formValue.Priority.ShouldGo)\r\n            model.Priority.push(DeliveryRequestTypes.ShouldGo);\r\n        if (formValue.Priority.CouldGo)\r\n            model.Priority.push(DeliveryRequestTypes.CouldGo);\r\n        if (formValue.Priority.Missed)\r\n            model.Priority.push(DeliveryRequestTypes.Missed);\r\n        if (formValue.Priority.AssignedToMe)\r\n            model.Priority.push(DeliveryRequestTypes.AssignedToMe);\r\n        if (formValue.Priority.AssignedByMe)\r\n            model.Priority.push(DeliveryRequestTypes.AssignedByMe);\r\n        //TRAILER\r\n        if (formValue.TrailerType.Lead)\r\n            model.TrailerType.push(TrailerTypeEnum.Lead);\r\n        if (formValue.TrailerType.Pup)\r\n            model.TrailerType.push(TrailerTypeEnum.Pup);\r\n        if (formValue.TrailerType.Quad)\r\n            model.TrailerType.push(TrailerTypeEnum.Quad);\r\n        if (formValue.TrailerType.Tandem)\r\n            model.TrailerType.push(TrailerTypeEnum.Tandem);\r\n        if (formValue.TrailerType.Tridem)\r\n            model.TrailerType.push(TrailerTypeEnum.Tridem);\r\n\r\n        //LOCATIONS\r\n        model.Terminals = formValue.Terminals;\r\n        model.Bulkplants = formValue.BulkPlants;\r\n        model.IsFilterApplied = formValue.IsFilterApplied;\r\n        model.IsTBDRequest = formValue.IsTBDRequest;\r\n        if (IsCarrierCompany) {\r\n            model.IsBrokeredDRs = false;\r\n            if (formValue.DeliveryBrokeredDR.brokeredDrs) {\r\n                model.IsBrokeredDRs = true;\r\n            }\r\n        }\r\n        else {\r\n            model.IsBrokeredDRs = false;\r\n        }\r\n\r\n        //ORDER TYPE.\r\n        if (formValue.OrderType) {\r\n            if (formValue.OrderType.OrderTypeLTL)\r\n                model.OrderType.push(OrderType.LTL);\r\n            if (formValue.OrderType.OrderTypeFTL)\r\n                model.OrderType.push(OrderType.FTL);\r\n            if (formValue.Priority.OrderTypeALL)\r\n                model.OrderType.push(OrderType.ALL);\r\n        }\r\n        model.Customers = formValue.Customers;\r\n        return model;\r\n    }\r\n\r\n    validateFilterForm(formValue: any) {\r\n        if ((formValue.Priority) && (formValue.Priority.AssignedByMe || formValue.Priority.AssignedToMe || formValue.Priority.CouldGo || formValue.Priority.Missed || formValue.Priority.MustGo || formValue.Priority.ShouldGo))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    getLocationsFromDr(drs: DeliveryRequestViewModel[]) {\r\n\r\n        let _terminals: DropDownItem[] = [];\r\n        let _bulkPlants: DropDownItem[] = [];\r\n        let _cusomterCompanies: DropDownItem[] = [];\r\n\r\n        for (let i = 0; i < drs.length; i++) {\r\n\r\n            let _dr = drs[i];\r\n\r\n            //terminal\r\n            if (_dr.PickupLocationType != 2 && _dr.Terminal && _dr.Terminal.Id > 0 && !_terminals.some((term) => term.Id == _dr.Terminal.Id)) {\r\n                _terminals.push(\r\n                    { Name: _dr.Terminal.Name, Id: _dr.Terminal.Id }\r\n                );\r\n            }\r\n            //bulk plant\r\n            else if (_dr.PickupLocationType == 2 && _dr.BulkPlant && _dr.BulkPlant.SiteName && !_bulkPlants.some((bulk) => bulk.Name.toLocaleLowerCase() == _dr.BulkPlant.SiteName.toLocaleLowerCase())) {\r\n                _bulkPlants.push(\r\n                    { Name: _dr.BulkPlant.SiteName, Id: 0 }\r\n                );\r\n            }\r\n            //Customers\r\n            if (_dr.CustomerCompany && _dr.CustomerCompany.length > 0 && _dr.AssignedToCompanyId > 0) {\r\n                _cusomterCompanies.push(\r\n                    {\r\n                        Name: _dr.CustomerCompany,\r\n                        Id: _dr.AssignedToCompanyId\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        return { terminals: _terminals, bulkPlants: _bulkPlants, customerCompanies: _cusomterCompanies};\r\n    }\r\n\r\n\r\n    getDrsFromJob(deliveryRequests: DelRequestsByJobModel[]) {\r\n\r\n        let _drRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        deliveryRequests && deliveryRequests.length && deliveryRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _drRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        return _drRequests;\r\n    }\r\n\r\n    applyFilterToDrs(deliveryRequests: DeliveryRequestViewModel[], filterModel: DrFilterModel) {\r\n\r\n        let searchedRecords = deliveryRequests.filter((dr: DeliveryRequestViewModel) => (\r\n            //1.day/night delivery\r\n            ((filterModel.DeliveryShift.length == 0)\r\n                || (dr.IsAcceptNightDeliveries && filterModel.DeliveryShift.includes(DeliveryShiftEnum.Evening))\r\n                || (!dr.IsAcceptNightDeliveries && filterModel.DeliveryShift.includes(DeliveryShiftEnum.Morning)))\r\n            &&\r\n            //2.TrailerType\r\n            ((filterModel.TrailerType.length == 0) || dr.JobId == 0\r\n                || (dr.TrailerTypes.some((tr) => filterModel.TrailerType.includes(tr.Id))))\r\n            &&\r\n            //Terminals\r\n            ((filterModel.Terminals.length == 0 && filterModel.Bulkplants.length == 0)\r\n                || ((filterModel.Terminals.length > 0) && (dr.PickupLocationType != 2 && dr.Terminal && dr.Terminal.Id > 0 && filterModel.Terminals.some((loc) => loc.Id == dr.Terminal.Id)))\r\n                || ((filterModel.Bulkplants.length > 0) && (dr.PickupLocationType == 2 && dr.BulkPlant && dr.BulkPlant.SiteName && filterModel.Bulkplants.some((bulk) => bulk.Name.toLowerCase() == dr.BulkPlant.SiteName.toLowerCase()))))\r\n\r\n            &&\r\n            //Customers\r\n            ((filterModel.Customers.length == 0) \r\n                || ((filterModel.Customers.length > 0) && filterModel.Customers.some((cus) => cus.CompanyName == dr.CustomerCompany)))\r\n        ));\r\n        return searchedRecords;\r\n    }\r\n\r\n    searchRequests(deliveryRequests: DeliveryRequestViewModel[], terms: string) {\r\n\r\n        let searchedDrs = deliveryRequests.filter((dr: DeliveryRequestViewModel) =>\r\n        ((dr.CustomerCompany && dr.CustomerCompany.toLowerCase().startsWith(terms))\r\n            || (dr.JobName && dr.JobName.toLowerCase().startsWith(terms))\r\n            || (dr.JobAddress && dr.JobAddress.toLowerCase().startsWith(terms))\r\n            || (dr.RouteInfo && dr.RouteInfo.Name && dr.RouteInfo.Name.toLowerCase().startsWith(terms))\r\n            || (dr.ProductType && dr.ProductType.toLowerCase().startsWith(terms))\r\n            || dr.RequiredQuantity.toString().startsWith(terms)));\r\n\r\n        return searchedDrs;\r\n    }\r\n\r\n    searchRequestsWithParams(deliveryRequests: DeliveryRequestViewModel[], terms: string, queueMode: number, windowMode: number, drType: DeliveryRequestTypes) {\r\n\r\n        let searchedDrs = deliveryRequests.filter((dr: DeliveryRequestViewModel) =>\r\n            ((dr.CustomerCompany && dr.CustomerCompany.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobName && dr.JobName.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobAddress && dr.JobAddress.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.JobCity && dr.JobCity.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.RouteInfo && dr.RouteInfo.Name && dr.RouteInfo.Name.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.ProductType && dr.ProductType.toLowerCase().indexOf(terms) != -1)\r\n                || (dr.Vessel && dr.Vessel.toLowerCase().indexOf(terms) != -1)\r\n                || dr.RequiredQuantity.toString().startsWith(terms))\r\n            && dr.WindowMode == windowMode\r\n            && dr.QueueMode === queueMode\r\n            && ((drType == DeliveryRequestTypes.Missed && dr.ParentId != null) || (drType != DeliveryRequestTypes.Missed && dr.ParentId == null)));\r\n\r\n        return searchedDrs;\r\n    }\r\n\r\n    saveDrFilterPreferences(filter: DrFilterPreferencesModel) {\r\n        return this.httpClient.post<DrFilterPreferencesModel>(this.urlSaveDrFilterPreferences, filter)\r\n            .pipe(catchError(this.handleError<DrFilterPreferencesModel>('saveDrFilterPreferences', null)));\r\n    }\r\n\r\n    getDrFilterPreferences() {\r\n        return this.httpClient.get<DrFilterPreferencesModel>(this.urlGetDrFilterPreferences)\r\n            .pipe(catchError(this.handleError<DrFilterPreferencesModel>('getDrFilterPreferences', null)));\r\n    }\r\n}\r\n\r\nexport class DrFilterModel {\r\n    public Terminals: DropDownItem[];\r\n    public Bulkplants: DropDownItem[];\r\n    public Priority: number[];\r\n    public TrailerType: number[];\r\n    public DeliveryShift: number[];\r\n    public IsFilterApplied: boolean;\r\n    public IsBrokeredDRs: boolean;\r\n    public IsTBDRequest: boolean;\r\n    public OrderType: number[];\r\n    public Customers: any[];\r\n\r\n    constructor() {\r\n        this.Terminals = [];\r\n        this.Bulkplants = []\r\n        this.Priority = [];\r\n        this.TrailerType = [];\r\n        this.DeliveryShift = [];\r\n        this.IsFilterApplied = false;\r\n        this.IsTBDRequest = false;\r\n        this.IsBrokeredDRs = false;\r\n        this.OrderType = [];\r\n        this.Customers = [];\r\n    }\r\n}\r\n","import { Component, OnInit, Input, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, ViewChildren, QueryList, NgZone, ViewEncapsulation, ViewChild, Optional } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { DeliveryRequestViewModel, ScheduleShiftModel, TrailerModel, TripModel, RegionDetailModel, TrailerViewModel, DriverViewFilterModel, DSBSaveModel, PreLoadDrViewModel, PreLoadDrResponseViewModel, ModifiedTripInfo, LoadInfo, CompartmentModel, TrailerCompartment, DriverAdditionalDetailModel, DropAddressModel, TransferDSInfo, ShiftColumnInfo, ShiftViewModel, ShiftLoadInfo, DragDSInfo, OrderPickupDetailModel, OptionalPickupDetailModel, OrderFuelInfo, OptionalPickupLocationInfo, OrderFuelDetails, CancelDeliverySchedule, CancelDSDeliveryScheduleInfo, CancelDSDeliverySchedule, CancelDSDeliveryScheduleViewModel, ResetDeliveryGroupScheduleModel, DispatcherMapSeq } from '../../models/DispatchSchedulerModels';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { Subscription, BehaviorSubject, interval } from 'rxjs';\r\nimport { DataService } from '../../service/data.service';\r\nimport { CustomAbstractControls } from '../../customAbstractControl';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport * as moment from 'moment';\r\nimport { DriverScheduleColumnViewComponent } from '../child-components/driver-schedule-column-view.component';\r\nimport { UtilService } from '../../service/util.service';\r\nimport { TrailerFuelRetainModel } from 'src/app/tractor/model';\r\nimport { sortArrayTwice, groupDrsByProduct, sortBy, sortByKeyAsc } from 'src/app/my.functions';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { DropdownItem, StatelistService } from 'src/app/statelist.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { LoadQueueService } from '../dsb-load-queue/load-queue.service';\r\nimport { DSBLoadQueueModel, DSBLoadQueueNotificationModel } from '../dsb-load-queue/dsb-load.model';\r\nimport { AddressService } from '../../../address.service';\r\nimport { AddressModel } from '../../../invoice/models/DropDetail';\r\nimport { RegExConstants, SBConstants } from '../../../app.constants';\r\nimport { DeliveryGroupStatus, DeliveryReqStatus, DSBLoadQueueStatus, TripStatus } from 'src/app/app.enum';\r\nimport { forEach } from '@angular-devkit/schematics';\r\n\r\n@Component({\r\n    selector: 'app-driver-column-view',\r\n    templateUrl: './driver-column-view.component.html',\r\n    styleUrls: ['./driver-column-view.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DriverColumnViewComponent implements OnInit {\r\n    @Input() public SbForm: FormGroup;\r\n    @Input() public Shifts: ScheduleShiftModel[];\r\n    @Input() public RegionDetail: RegionDetailModel;\r\n    @Input() public SelectedRegionId: string;\r\n    @Input() public IsTrailerExists: boolean;\r\n    @Input() public HeaderToggle: boolean;\r\n    @Input() public IsNoDriverShiftFound: number = 0;\r\n    public _loadingRequests = false;\r\n    public _loadingDrivers = false;\r\n    public _savingBuilder = false;\r\n    public _loadingCmprts = false;\r\n    //public _otherRegionDriver = false;\r\n    public _otherRegionDriverSubject: BehaviorSubject<any>;\r\n    public _publishedRequestExists = false;\r\n\r\n    public PreLoadInfo: any = null;\r\n    private preloadSelectedTrailerId: string;\r\n\r\n    public SelectedDriverName: string = '';\r\n\r\n    public SelectedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedTrailers: TrailerViewModel[] = [];\r\n    public UnassignedDrivers: DriverAdditionalDetailModel[] = [];\r\n    public AllUnassignedDrivers: DriverAdditionalDetailModel[] = [];\r\n    public chatDriverDetails = [];\r\n    public TrailerDdlSettings = {};\r\n    public Collapsed = [];\r\n    public CollapsedIcons = [];\r\n    public draggedDelReqData: any;\r\n    public droppedTrip: any;\r\n    public CompletedScheduleStatuses: number[] = [7, 8, 9, 10, 24];\r\n    public OnTheWayScheduleStatuses: number[] = [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20];\r\n    public ScheduleStatuses: number[] = [3, 15, 11]; /*if any scheduled status or missed status*/\r\n    public CompartmentEditModel: any = {};\r\n    public TrailerCompartments: any = {};\r\n    public TrailerCompartmentRetains: TrailerCompartment[] = [];\r\n    public CompartmentDetails: TrailerFuelRetainModel[];\r\n    public CompartmentViewFormGroup: FormGroup;\r\n    public selTrailerIndex: number;\r\n    public selTrailerlist: [];\r\n    public updateDrFormGroup: FormGroup;\r\n    public DriverTrailerForm: FormGroup;\r\n    public DraftDeliveryGroupSubscription: Subscription;\r\n    public SaveModifiedLoadsSubscription: Subscription;\r\n    public PublishDeliveryGroupSubscription: Subscription;\r\n    public CancelDeliveryGroupSubscription: Subscription;\r\n    public DeleteDeliveryGroupSubscription: Subscription;\r\n    public DeliveryScheduleRemoveSubject: Subscription;\r\n    private DeletedGroup: any;\r\n    private PublishedGroup: any;\r\n    private EditDriverData: any;\r\n    private EditDriverTrailerSubscription: Subscription;\r\n    private SaveDriverAssignmentSubscription: Subscription;\r\n    private PublishEntireRowSubscription: Subscription;\r\n    private DragDropItemSubscription: Subscription;\r\n    private CreateLoadCancelSubscription: Subscription;\r\n    private CreateLoadSuccessSubscription: Subscription;\r\n    private CreatePreloadSubscription: Subscription;\r\n    private DisableControlsSubscription: Subscription;\r\n    private UpdatePostloadSubscription: Subscription;\r\n    private DeletePostloadSubscription: Subscription;\r\n    public disableControl: boolean = false;\r\n    private TrasnferDSSubscription: Subscription;\r\n    private TrailerInfoDSSubscription: Subscription;\r\n    private RemoveTrailerGroupSubject: Subscription;\r\n    private RouteInfoDSSubscription: Subscription;\r\n    public DSShifts: ShiftViewModel[] = [];\r\n    public SelectedShift: ShiftViewModel;\r\n    public SelectedShiftIndex: number;\r\n    public ShiftColumn: ShiftColumnInfo[] = [];\r\n    public SelectedShiftColumn: ShiftColumnInfo;\r\n    public ShiftLoad: ShiftLoadInfo[] = [];\r\n    public SelectedLoad: ShiftLoadInfo;\r\n    public _loadingDSData: boolean = false;\r\n    public SelectedDSDriverName: string = '';\r\n    public $eventDataTransfer: TransferDSInfo = new TransferDSInfo();\r\n    public selectedDefaultShiftIndex: number = -1;\r\n    public selectedRowIndex: number = -1;\r\n    public selectedColIndex: number = -1;\r\n    public scheduleTrailerInfo: any;\r\n    public _loadingRemoveTrailer: boolean = false;\r\n    SelectedTrip: any = null;\r\n    RouteListForTrip: any[] = [];\r\n    private ShiftVisibility: Subscription;\r\n    public RouteDeleteDeliveryGroupSubject: Subscription;\r\n    private DsbLoadQueueNotification: Subscription;\r\n    public routeInfo: any = null;\r\n    public _loadingRemoveRoute: boolean = false;\r\n    @ViewChildren(DriverScheduleColumnViewComponent) driverSchedules: QueryList<DriverScheduleColumnViewComponent>;\r\n    DriverColCDRSubscription: Subscription;\r\n    public PickupForm: FormGroup;\r\n    public LocationType: number = 1;\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public FuelTypeDetails: DropdownItem[] = [];\r\n    public SelectedFuelTypeDetails: DropdownItem[] = [];\r\n    public FuelTypeDdlSettings = {};\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    public isReadOnly: boolean = false;\r\n    public Terminals = [];\r\n    public OptionalPickupLocationInfo: OptionalPickupDetailModel[] = [];\r\n    public _loadingOptionTerminal: boolean = true;\r\n    private OptionalPickupSubscription: Subscription;\r\n    public StateList: DropdownItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public _loadingAddress: boolean = false;\r\n    public OptionPickupOrderIds = [];\r\n    public OptionalPickupShiftIndex = 0;\r\n    public OptionalPickupShiftOrderNo = 0;\r\n    public OptionalPickupDriverColIndex = 0;\r\n    public OptionalPickupShiftId: string = '';\r\n    public OptionalPickupRegionId: string = '';\r\n    public OptionalPickupScheduleBuilderId: string = '';\r\n    public OrderFuelDetails: OrderFuelDetails[] = [];\r\n    public OptionPickupScheduleGroup: FormGroup;\r\n    public OptionalPickupLocationDeleteInfo: OptionalPickupDetailModel;\r\n    public cancelDSScheduleInfo: any = {};\r\n    private CancelEntireRowSubscription: Subscription;\r\n    public CancelDSScheduleLoadInfo: any = {};\r\n    keyword = 'Name';\r\n    @ViewChildren('autoCompleteInput') autoCompleteInput: QueryList<DriverScheduleColumnViewComponent>;\r\n    public ScheduleOptionalPickupDetailModel: OptionalPickupDetailModel[] = [];\r\n    public ScheduleOrderFuelInfo: OrderFuelDetails[] = [];\r\n    public CancelDSDeliveryGroupSubscription: Subscription;\r\n    public CancelDSDeliveryGroupNormalGroupDSSubject: Subscription;\r\n    public CancelDSLocationGroupSubscription: Subscription;\r\n    public cancelDSDeliveryScheduleViewModel: CancelDSDeliveryScheduleViewModel[] = [];\r\n    public DeliveryReqCancelScheduleUpdateModel: CancelDeliverySchedule[] = [];\r\n    public DispatcherLoadDragDropSubscription: Subscription;\r\n    public DispatcherLoadDragDropMapSubscription: Subscription;\r\n    constructor(private fb: FormBuilder, private sbService: ScheduleBuilderService,\r\n        public dataService: DataService, private chatService: chatService,\r\n        private utilService: UtilService, private changeDetectorRef: ChangeDetectorRef,\r\n        private zone: NgZone, private loadQueueService: LoadQueueService,\r\n        private addresService: AddressService, private stateService: StatelistService) {\r\n        this._otherRegionDriverSubject = new BehaviorSubject(false);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.DriverTrailerForm = this.utilService.getDriverTrailerForm();\r\n        this.TrailerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'TrailerId',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n        this.CompartmentViewFormGroup = this.utilService.getCompartmentViewForm([], null);\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this.subscribeDeliveryGroupEvents();\r\n        this.subscribeSaveModifiedLoadsSubject();\r\n        this.subscribeEditDriverTrailerEvents();\r\n        this.subscribeDraftAndPublishEvents();\r\n        this.subscribeDragDropItemSubject();\r\n        this.subscribeDisableControlsSubject();\r\n        this.subscriberCreateLoadCancelSubject();\r\n        this.subscribeCreateLoadSuccessSubject();\r\n        this.subscribeCreatePreloadSubject();\r\n        this.subscribeUpdatePostloadSubject();\r\n        this.subscribeDeletePostloadSubject();\r\n        this.subscribeEditCompartmentAssigmentSubject();\r\n        this.CompartmentDetails = [];\r\n        this.TrailerCompartmentRetains = [];\r\n        this.subscribeTransferDSEvents();\r\n        this.subscribeTrailerInfoDSEvents();\r\n        this.subscribeRouteInfoDSEvents();\r\n        this.subscribeTrailerRemoveDSEvents();\r\n        this.subscribeLoadQueueNotifications();\r\n        this.subscribeChangeDetectDsbLoadQueueNotification();\r\n        this.subscribeDriverColumnChangeDetect();\r\n        this.FuelTypeDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n        this.subscribeOptionPickupEvents();\r\n        this.PickupForm = this.initOptionalPickupForm(new OrderPickupDetailModel());\r\n        this.subscribeShowScheduleBuilderLoadingSubject();\r\n        this.subscribeCancelScheduleEvents();\r\n        this.subscribeCancelDSLocationGroupSubject();\r\n        this.subscribeDispatcherLoadDragDropSubscription();\r\n        this.subscribeDispatcherLoadDragDropMapSubscription();\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.Shifts && change.Shifts.currentValue) {\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            this.subscribeDisableControlsSubject();\r\n            this.initShifts(this.Shifts);\r\n            this.dataService.setAllShiftsSubject(this.Shifts);\r\n            this.resetDriverTrailerForm();\r\n        }\r\n        if (change.RegionDetail && change.RegionDetail.currentValue) {\r\n            this.dataService.setAllTrailersSubject(this.RegionDetail.Trailers);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dataService.setUnsavedChangesAsEmptySubject();\r\n        this.setUnsavedChanges();\r\n        this.subscribeOptionalPickupLocationChange();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeDeliveryGroupEvents();\r\n        this.unsubscribeEditDriverTrailerEvents();\r\n        this.unsubscribeDraftAndPublishEvents();\r\n        this.unsubscribeDragDropItemSubject();\r\n        this.unsubscriberCreateLoadCancelSubject();\r\n        this.unsubscribeCreateLoadSuccessSubject();\r\n        this.unsubscribeCreatePreloadSubject();\r\n        this.unsubscribeUpdatePostloadSubject();\r\n        this.unsubscribeDeletePostloadSubject();\r\n        var _shifts = this.SbForm.get('Shifts') as FormArray;\r\n        if (_shifts) {\r\n            _shifts.clear(); // Clear shifts of driver view\r\n        }\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        if (this.TrasnferDSSubscription) {\r\n            this.TrasnferDSSubscription.unsubscribe();\r\n        }\r\n        if (this.TrailerInfoDSSubscription) {\r\n            this.TrailerInfoDSSubscription.unsubscribe();\r\n        }\r\n        if (this.RouteInfoDSSubscription) {\r\n            this.RouteInfoDSSubscription.unsubscribe();\r\n        }\r\n        if (this.RemoveTrailerGroupSubject) {\r\n            this.RemoveTrailerGroupSubject.unsubscribe();\r\n        }\r\n        if (this.ShiftVisibility) {\r\n            this.ShiftVisibility.unsubscribe();\r\n        }\r\n        if (this.DriverColCDRSubscription) {\r\n            this.DriverColCDRSubscription.unsubscribe();\r\n        }\r\n        if (this.OptionalPickupSubscription) {\r\n            this.OptionalPickupSubscription.unsubscribe();\r\n        }\r\n        this.unsubscribeAllDGSubscriptions();\r\n        this.unsubscribeCancelScheduleEvents();\r\n        this.unsubscribeCancelLocationScheduleEvents();\r\n        if (this.DispatcherLoadDragDropSubscription) {\r\n            this.DispatcherLoadDragDropSubscription.unsubscribe();\r\n        }\r\n        if (this.DispatcherLoadDragDropMapSubscription) {\r\n            this.DispatcherLoadDragDropMapSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    subscribeDeliveryGroupEvents(): void {\r\n        this.subscribeDraftDeliveryGroupSubject();\r\n        this.subscribePublishDeliveryGroupSubject();\r\n        this.subscribeCancelDeliveryGroupSubject();\r\n        this.subscribeDeleteDeliveryGroupSubject();\r\n        this.subscribeRouteDeleteDeliveryGroupSubject();\r\n        this.subscribeCancelDSDeliveryGroupSubject();\r\n        this.subscribeCancelDeliveryGroupNormalGroupDSSubject();\r\n        this.subscribeDeliveryScheduleRemoveSubject();\r\n    }\r\n\r\n    unsubscribeDeliveryGroupEvents(): void {\r\n        if (this.DraftDeliveryGroupSubscription) {\r\n            this.DraftDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.SaveModifiedLoadsSubscription) {\r\n            this.SaveModifiedLoadsSubscription.unsubscribe();\r\n        }\r\n        if (this.PublishDeliveryGroupSubscription) {\r\n            this.PublishDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.DeleteDeliveryGroupSubscription) {\r\n            this.DeleteDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDeliveryGroupSubscription) {\r\n            this.CancelDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDSDeliveryGroupSubscription) {\r\n            this.CancelDSDeliveryGroupSubscription.unsubscribe();\r\n        }\r\n        if (this.CancelDSDeliveryGroupNormalGroupDSSubject) {\r\n            this.CancelDSDeliveryGroupNormalGroupDSSubject.unsubscribe();\r\n        }\r\n        if (this.DeliveryScheduleRemoveSubject) {\r\n            this.DeliveryScheduleRemoveSubject.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeEditDriverTrailerEvents(): void {\r\n        if (this.EditDriverTrailerSubscription) {\r\n            this.EditDriverTrailerSubscription.unsubscribe();\r\n        }\r\n        if (this.SaveDriverAssignmentSubscription) {\r\n            this.SaveDriverAssignmentSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDraftAndPublishEvents(): void {\r\n        if (this.PublishEntireRowSubscription) {\r\n            this.PublishEntireRowSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDragDropItemSubject(): void {\r\n        if (this.DragDropItemSubscription) {\r\n            this.DragDropItemSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscriberCreateLoadCancelSubject(): void {\r\n        if (this.CreateLoadCancelSubscription) {\r\n            this.CreateLoadCancelSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeCreateLoadSuccessSubject(): void {\r\n        if (this.CreateLoadSuccessSubscription) {\r\n            this.CreateLoadSuccessSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeCreatePreloadSubject(): void {\r\n        if (this.CreatePreloadSubscription) {\r\n            this.CreatePreloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeUpdatePostloadSubject(): void {\r\n        if (this.UpdatePostloadSubscription) {\r\n            this.UpdatePostloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    unsubscribeDeletePostloadSubject(): void {\r\n        if (this.DeletePostloadSubscription) {\r\n            this.DeletePostloadSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    subscribeDraftDeliveryGroupSubject(): void {\r\n        this.DraftDeliveryGroupSubscription = this.dataService.DraftDeliveryGroupSubject.subscribe(x => {\r\n            this.draftScheduleBuilder(x.trip, x.filterChanged);\r\n        });\r\n    }\r\n\r\n    subscribeSaveModifiedLoadsSubject(): void {\r\n        this.SaveModifiedLoadsSubscription = this.dataService.SaveModifiedLoadsSubject.subscribe(x => {\r\n            if (x && x.length > 0) {\r\n                this.saveScheduleBuilderData(x, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribePublishDeliveryGroupSubject(): void {\r\n        this.PublishDeliveryGroupSubscription = this.dataService.PublishDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.isOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.publishScheduleBuilder(x.shiftIndex, x.rowIndex, x.colIndex, x.schedule, x.trip, x.isOptionalPickup);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDisableControlsSubject(): void {\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n\r\n    subscribeCancelDeliveryGroupSubject(): void {\r\n        this.CancelDeliveryGroupSubscription = this.dataService.CancelDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelScheduleBuilder(x.shiftIndex, x.rowIndex, x.tripIndex, x.trip);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDeleteDeliveryGroupSubject(): void {\r\n        this.DeleteDeliveryGroupSubscription = this.dataService.DeleteDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteGroup(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeEditDriverTrailerEvents(): void {\r\n        this.EditDriverTrailerSubscription = this.dataService.EditDriverTrailerSubject.subscribe(x => {\r\n            if (x) {\r\n                this.editDriverTrailers(x);\r\n            }\r\n        });\r\n        this.SaveDriverAssignmentSubscription = this.dataService.SaveDriverAssignmentSubject.subscribe(x => {\r\n            if (x) {\r\n                this.saveDriverAssignment(x.Index1, x.Index2);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDraftAndPublishEvents(): void {\r\n        this.PublishEntireRowSubscription = this.dataService.PublishEntireRowSubject.subscribe(x => {\r\n            if (x) {\r\n                this.ScheduleOptionalPickupDetailModel = [];\r\n                this.ScheduleOrderFuelInfo = null;\r\n                if (x.IsOptionalPickup) {\r\n                    this.ScheduleOptionalPickupDetailModel = x.OptionalPickupInfo;\r\n                    this.ScheduleOrderFuelInfo = x.OrderFuelInfo;\r\n                }\r\n                this.validateRowPublish(x.ShiftIndex, x.ScheduleIndex, x.IsOptionalPickup);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDragDropItemSubject(): void {\r\n        this.DragDropItemSubscription = this.dataService.DragDropItemSubject.subscribe(x => {\r\n            if (x) {\r\n                this.onItemDrop(x.trip, x.event, x.shiftIndex, x.rowIndex, x.colIndex, x.schedule);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscriberCreateLoadCancelSubject(): void {\r\n        this.CreateLoadCancelSubscription = this.dataService.CreateLoadCancelSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelCreateLoad(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeCreateLoadSuccessSubject(): void {\r\n        this.CreateLoadSuccessSubscription = this.dataService.CreateLoadSuccessSubject.subscribe(x => {\r\n            if (x) {\r\n                this.updateTripOnCreateLoadSucess(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeCreatePreloadSubject(): void {\r\n        this.CreatePreloadSubscription = this.dataService.CreatePreloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.processPreloadDeliveryCreation(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeUpdatePostloadSubject(): void {\r\n        this.UpdatePostloadSubscription = this.dataService.UpdatePostloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.updateEditedPostloadDrs(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeDeletePostloadSubject(): void {\r\n        this.DeletePostloadSubscription = this.dataService.DeletePostloadSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deletePreAndPostloadDrs(x);\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeEditCompartmentAssigmentSubject(): void {\r\n        this.dataService.EditCompartmentAssigmentSubject.subscribe(x => {\r\n            if (x) {\r\n                this.editCompartmentAssignments(x);\r\n            }\r\n        });\r\n    }\r\n    subscribeDeliveryScheduleRemoveSubject(): void {\r\n        this.DeliveryScheduleRemoveSubject = this.dataService.DeliveryScheduleRemoveSubject.subscribe(x => {\r\n            this.deleteSingleLoad(x);\r\n        });\r\n    }\r\n    initShifts(shifts: ScheduleShiftModel[]): void {\r\n\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        _shiftArray.clear();\r\n\r\n        shifts.forEach((x, i) => {\r\n\r\n            let _shiftForm = this.fb.group({\r\n                Id: this.fb.control(x.Id),\r\n                Schedules: this.fb.array([]), // Rows in the shift \r\n                StartTime: this.fb.control(x.StartTime),\r\n                EndTime: this.fb.control(x.EndTime),\r\n                SlotPeriod: this.fb.control(x.SlotPeriod),\r\n                IsCollapsed: this.fb.control(x.IsCollapsed),\r\n                IsVisible: this.fb.control(true),\r\n                OrderNo: this.fb.control(x.OrderNo),\r\n            })\r\n\r\n            let _sArray = this.getSchedulesFormArray(x.Schedules);\r\n            let _schedules = _shiftForm.controls['Schedules'] as FormArray;\r\n            _sArray.controls.forEach(x => _schedules.push(x));\r\n\r\n            _shiftArray.push(_shiftForm);\r\n\r\n            this.Collapsed.push((x.IsCollapsed ? '' : 'show'));\r\n            this.CollapsedIcons.push((x.IsCollapsed ? 'collapsed' : ''));\r\n        });\r\n    }\r\n    getSchedulesFormArray(schedules: TrailerModel[]): FormArray {\r\n        var _sArray = this.fb.array([]);\r\n        schedules.forEach(x => {\r\n            _sArray.push(this.fb.group({\r\n                AllowDriverChange: this.fb.control(x.AllowDriverChange),\r\n                Drivers: this.utilService.getDriversFormArray(x.Drivers),\r\n                Trailers: this.utilService.getTrailersFormArray(x.Trailers),\r\n                Trips: this.utilService.getTripsFormArray(x.Trips),\r\n                LoadQueueId: this.fb.control(x.LoadQueueId),\r\n                IsLoadQueueCollapsed: this.fb.control(x.IsLoadQueueCollapsed),\r\n                IsColumnSelected: this.fb.control(x.IsColumnSelected),\r\n                IsLoadQueueColumnBlocked: this.fb.control(x.IsLoadQueueColumnBlocked),\r\n                IsIncludeAllRegionDriver: this.fb.control(x.IsIncludeAllRegionDriver),\r\n                LoadQueueColumnStatus: this.fb.control(x.LoadQueueColumnStatus),\r\n                LoadQueueFilterVisibility: this.fb.control(true),\r\n                IsDriverScheduleExists: this.fb.control(x.IsDriverScheduleExists),\r\n                DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            }));\r\n        });\r\n        return _sArray;\r\n    }\r\n\r\n    private resetDriverTrailerForm(): void {\r\n        this.SelectedTrailers = [];\r\n        this.UnassignedTrailers = [];\r\n        if (this.DriverTrailerForm) {\r\n            this.DriverTrailerForm.reset();\r\n        }\r\n    }\r\n\r\n    validateTrailerJobCompatibility(drData: any, schedule: FormGroup): void {\r\n        var _deliveryRequests = drData.Data.value;\r\n        let _selectedTrailers = schedule.controls[\"Trailers\"].value;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        if ((_selectedTrailers && _selectedTrailers.length > 0) && (_deliveryRequests && _deliveryRequests.length > 0)) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                    } else {\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    highLightDRDiv(trips: FormArray, data) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.controls[\"IsNotCompatible\"].patchValue(false);\r\n                    deliveryRequest.controls[\"IsBlinkDR\"].patchValue(false);\r\n                    if (data) {\r\n                        if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.controls[\"Id\"].value)) {\r\n                            deliveryRequest.controls[\"IsNotCompatible\"].patchValue(true);\r\n                            deliveryRequest.controls[\"IsBlinkDR\"].patchValue(true);\r\n                            setTimeout(() => {\r\n                                this.removeClassForAllLoad(trips);\r\n                            }, 10000);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    highLightDRDivOneLoad(trip: FormGroup, data) {\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                deliveryRequest.get(\"IsNotCompatible\").patchValue(false);\r\n                deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n                if (data && data.deliveryRequestsNotCompatible) {\r\n                    if (data.deliveryRequestsNotCompatible.find(t => t.Id == deliveryRequest.get(\"Id\").value)) {\r\n                        deliveryRequest.get(\"IsNotCompatible\").patchValue(true);\r\n                        deliveryRequest.get(\"IsBlinkDR\").patchValue(true);\r\n                        setTimeout(() => {\r\n                            this.removeClassForLoad(trip);\r\n                        }, 10000);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    removeClassForAllLoad(trips: FormArray) {\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var trip = trips.controls[i] as FormGroup;\r\n            var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n            if (deliveryRequests) {\r\n                for (var j = 0; j < deliveryRequests.length; j++) {\r\n                    var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                    deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    removeClassForLoad(trip: FormGroup) {\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                deliveryRequest.get(\"IsBlinkDR\").patchValue(false);\r\n            }\r\n        }\r\n    }\r\n    IsDRCompatible(trip: FormGroup) {\r\n        var isDRCompatible = true;\r\n        var deliveryRequests = trip.get(\"DeliveryRequests\") as FormArray;\r\n        if (deliveryRequests) {\r\n            for (var j = 0; j < deliveryRequests.length; j++) {\r\n                var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                if (deliveryRequest && deliveryRequest.get(\"IsNotCompatible\").value) {\r\n                    isDRCompatible = false;\r\n                }\r\n            }\r\n        }\r\n        return isDRCompatible;\r\n    }\r\n\r\n    onItemDrop(trip: FormGroup, event: any, shiftIndex: number, rowIndex: number, colIndex: number, schedule: any): void {\r\n        let drData = event.dragData;\r\n        let dragToLoad = false;\r\n        if (drData && drData.Data && drData.Data.length == 0) {\r\n            return; //There is no dr in dragged data, so don't take any action.\r\n        }\r\n        if (drData.TripFrom) {\r\n            if (drData.TripFrom.controls['DriverRowIndex'].value == trip.controls['DriverRowIndex'].value && drData.TripFrom.controls['DriverColIndex'].value == trip.controls['DriverColIndex'].value && drData.TripFrom.controls['ShiftIndex'].value == trip.controls['ShiftIndex'].value)\r\n                return;\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        let drDataCopied = JSON.parse(JSON.stringify(drData.Data));\r\n        if (drData.TripFrom) {\r\n            let isCommonPickup = trip.get('IsCommonPickup').value as boolean;\r\n            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n            if ((drData.TripFrom.controls['DriverRowIndex'].value != trip.controls['DriverRowIndex'].value) || (drData.TripFrom.controls['ShiftIndex'].value == trip.controls['ShiftIndex'].value)) {\r\n                drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 1, drData.TripFrom);\r\n            }\r\n            else {\r\n                drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 0, drData.TripFrom);\r\n            }\r\n            this.draggedDelReqData = event.dragData;\r\n            this.droppedTrip = { Trip: trip, ShiftIndex: shiftIndex, RowIndex: rowIndex, ColIndex: colIndex, Schedule: schedule };\r\n            if (this.isDraggedDRsPublished(drData.Data.value) || (drData.TripFrom.value && drData.TripFrom.value.DeliveryRequests.length > 1 && drData.TripFrom.controls['DeliveryGroupPrevStatus'].value == 2) || trip.controls['DeliveryGroupPrevStatus'].value == 2) {\r\n                var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(drData.Data.value);\r\n                if (scheduleIds.length > 0) {\r\n                    this.dragDelReqToAnotherLoad(scheduleIds);\r\n                } else {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                }\r\n            }\r\n            else {\r\n                dragToLoad = true;\r\n            }\r\n        } else {\r\n            let isCommonPickup = trip.get('IsCommonPickup').value as boolean;\r\n            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n            drData.Data = this.utilService.getDeliveryRequestFormArray(drData.Data, isCommonPickup, IsDispatcherDragDropSequence, 0, drData.TripFrom);\r\n            trip.controls['IsEditable'].setValue(true);\r\n            dragToLoad = true;\r\n        }\r\n        if (dragToLoad == true) {\r\n            this._savingBuilder = true;\r\n            this.createLoad({\r\n                RegionId: this.SelectedRegionId,\r\n                Customer: drDataCopied[0].CustomerCompany,\r\n                JobId: drDataCopied[0].JobId,\r\n                JobName: drDataCopied[0].JobName,\r\n                Drs: drDataCopied,\r\n                ShiftIndex: shiftIndex,\r\n                RowIndex: rowIndex,\r\n                ColIndex: colIndex,\r\n                Schedule: schedule,\r\n                Trip: trip,\r\n                DrData: drData,\r\n                IsDragFromLoad: drData.TripFrom != null\r\n            });\r\n        }\r\n        this.dataService.setDeliveryPreloadOption({ ShiftIndex: shiftIndex, ScheduleIndex: colIndex, Reset: true });\r\n    }\r\n\r\n    isDraggedDRsPublished(delRequests: DeliveryRequestViewModel[]) {\r\n        return delRequests.filter(t => t.PreviousStatus == 3).length > 0;\r\n    }\r\n\r\n    getPublishedDRsTrackableScheduleIds(delRequests: DeliveryRequestViewModel[]) {\r\n        return delRequests.filter(t => t.PreviousStatus == 3).map(t => t.TrackableScheduleId);\r\n    }\r\n\r\n    dragDelReqToAnotherLoad(scheduleIds: any) {\r\n        this._savingBuilder = true;\r\n        this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n            this._savingBuilder = false;\r\n            if (response != null && response != undefined && response.length > 0) {\r\n                let completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                let isCompletedSchedule = completedSchedules.length > 0;\r\n                let onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                let cancelledSchedules = this.sbService.returnCommonElements(SBConstants.CancelledScheduleStatuses, response, true);\r\n                if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                    Declarations.msgerror(\"Can't delete from this load as drop has been made already\", 'Warning', 2500);\r\n                    this.droppedTrip = null;\r\n                    this.draggedDelReqData = null;\r\n                    return;\r\n                } else if (onTheWaySchedules.length > 0) {\r\n                    this.sbService.setConfirmationHeadingForDR(onTheWaySchedules[0]);\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                    return;\r\n                } else if (cancelledSchedules.length > 0) {\r\n                    Declarations.msgerror(\"Can't drag from this load as drop has been cancelled\", 'Warning', 2500);\r\n                    this.droppedTrip = null;\r\n                    this.draggedDelReqData = null;\r\n                    return;\r\n                }\r\n                else {\r\n                    if (this.draggedDelReqData.TripFrom.get('DeliveryGroupPrevStatus').value == 2 || this.draggedDelReqData.get('DeliveryGroupPrevStatus').value == 2) {\r\n                        jQuery('#btnconfirm-dragdrop-dr').click();\r\n                    } else {\r\n                        this.dragDelReqToAnotherLoadYes();\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.draggedDelReqData.TripFrom.get('DeliveryGroupPrevStatus').value == 2 || this.draggedDelReqData.get('DeliveryGroupPrevStatus').value == 2) {\r\n                    jQuery('#btnconfirm-dragdrop-dr').click();\r\n                } else {\r\n                    this.dragDelReqToAnotherLoadYes();\r\n                }\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    private DropDelReqToLoad(droppedToSchedule: any, droppedToTrip: FormGroup, drData: any, drsToRemove: any) {\r\n        var isDraggedFromLoad = drData.TripFrom != undefined && drData.TripFrom != null;\r\n        let isCommonPickup = droppedToTrip.controls['IsCommonPickup'].value as boolean;\r\n        var locationType = droppedToTrip.controls['PickupLocationType'].value;\r\n        var pickupLocation = null;\r\n        if (isCommonPickup) {\r\n            if (locationType != 2)\r\n                pickupLocation = droppedToTrip.controls['Terminal'].value\r\n            else\r\n                pickupLocation = droppedToTrip.controls['BulkPlant'].value;\r\n        }\r\n\r\n        var _drArray = droppedToTrip.controls['DeliveryRequests'] as FormArray;\r\n        var _drArrayValue = droppedToTrip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        var _drFormArray = drData.Data as FormArray;\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                if (isDraggedFromLoad) {\r\n                    if (!(locationType == 2 && _drForm.value.BulkPlant && _drForm.value.BulkPlant.SiteName == droppedToTrip.value.BulkPlant.SiteName)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!(locationType != 2 && _drForm.value.Terminal && _drForm.value.Terminal.Id == droppedToTrip.value.Terminal.Id)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!isCommonPickup) {\r\n                        droppedToTrip.controls['IsCommonPickup'].setValue(false);\r\n                        droppedToTrip.controls['Terminal'].disable();\r\n                        droppedToTrip.controls['BulkPlant'].disable();\r\n                        _drArray.controls.forEach((_toDrForm: FormGroup) => {\r\n                            if (locationType != 2) {\r\n                                _toDrForm.controls['Terminal'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(1);\r\n                            }\r\n                            else {\r\n                                _toDrForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(2);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                _drForm.controls['Terminal'].disable();\r\n                _drForm.controls['BulkPlant'].disable();\r\n            }\r\n            else {\r\n                var drValue = _drForm.value;\r\n                var isDRPickupExists = (drValue.PickupLocationType != 2 && drValue.Terminal && drValue.Terminal.Id > 0) || (drValue.PickupLocationType == 2 && drValue.BulkPlant && drValue.BulkPlant.SiteName && drValue.BulkPlant.SiteName.length > 0);\r\n                if (pickupLocation) {\r\n                    if (!isDRPickupExists) {\r\n                        if (locationType != 2) {\r\n                            _drForm.controls['Terminal'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(1);\r\n                        }\r\n                        else {\r\n                            _drForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!isDraggedFromLoad) {\r\n                _drForm.controls['ScheduleStatus'].setValue(14);\r\n                _drForm.controls['Status'].setValue(5);\r\n            }\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                var drFormJobId = _drForm.controls['JobId'].value;\r\n                if (_drArrayValue.find(x => x.JobId == drFormJobId) != null) {\r\n                    var jobInfoIndex = _drArrayValue.findIndex(x => x.JobId == drFormJobId);\r\n                    _drArray.insert(jobInfoIndex, _drForm);\r\n                }\r\n                else {\r\n                    _drArray.push(_drForm);\r\n                }\r\n            }\r\n            else {\r\n                _drArray.push(_drForm);\r\n            }\r\n        });\r\n\r\n        if (isDraggedFromLoad) {\r\n            var drInFromTrip = drData.TripFrom.controls['DeliveryRequests'] as FormArray;\r\n            for (let idx = 0; idx < _drFormArray.controls.length; idx++) {\r\n                let drIndex = drInFromTrip.controls.findIndex((x: FormGroup) => {\r\n                    return x.controls['Id'].value == _drFormArray.controls[idx]['controls'].Id.value\r\n                });\r\n                _drFormArray.controls[idx].get('SourceTripId').setValue(drData.TripFrom.controls['TripId'].value);\r\n                drInFromTrip.removeAt(drIndex);\r\n            }\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                droppedToTrip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n            }\r\n            this.dragDropDeliveryRequestsSave(drData.TripFrom, droppedToTrip, drData.Schedule, droppedToSchedule);\r\n        } else {\r\n            if (droppedToTrip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                droppedToTrip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n            }\r\n            this.dataService.setRemoveDroppedRequestSubject(drsToRemove);\r\n            if (droppedToTrip.value && (this.isDraggedDRsPublished(droppedToTrip.value.DeliveryRequests) || (droppedToTrip.value.DeliveryRequests.length > 1 && droppedToTrip.controls['DeliveryGroupPrevStatus'].value == 2))) {\r\n                this.publishScheduleBuilder(droppedToTrip.controls['ShiftIndex'].value, droppedToTrip.controls['DriverRowIndex'].value, droppedToTrip.controls['DriverColIndex'].value, droppedToSchedule, droppedToTrip);\r\n            }\r\n            else {\r\n                this.draftScheduleBuilder(droppedToTrip);\r\n            }\r\n        }\r\n        this.validateTrailerJobCompatibility(drData, droppedToSchedule);\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n\r\n    }\r\n\r\n    dragDelReqToAnotherLoadYes() {\r\n        this._savingBuilder = true;\r\n        let isCommonPickup = this.droppedTrip.Trip.controls['IsCommonPickup'].value as boolean;\r\n        var locationType = this.droppedTrip.Trip.controls['PickupLocationType'].value;\r\n        var pickupLocation = null;\r\n        if (isCommonPickup) {\r\n            if (locationType != 2)\r\n                pickupLocation = this.droppedTrip.Trip.controls['Terminal'].value\r\n            else\r\n                pickupLocation = this.droppedTrip.Trip.controls['BulkPlant'].value;\r\n        }\r\n        var _drArray = this.droppedTrip.Trip.controls['DeliveryRequests'] as FormArray;\r\n        var _drArrayValue = this.droppedTrip.Trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n        let isDraggedFromLoad = this.draggedDelReqData != null && this.draggedDelReqData.TripFrom != undefined && this.draggedDelReqData.TripFrom != null;\r\n        var _drFormArray = this.draggedDelReqData.Data as FormArray;\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                if (isDraggedFromLoad) {\r\n                    if (!(locationType == 2 && _drForm.value.BulkPlant && _drForm.value.BulkPlant.SiteName == this.droppedTrip.Trip.value.BulkPlant.SiteName)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!(locationType != 2 && _drForm.value.Terminal && _drForm.value.Terminal.Id == this.droppedTrip.Trip.value.Terminal.Id)) {\r\n                        isCommonPickup = false;\r\n                    }\r\n                    if (!isCommonPickup) {\r\n                        this.droppedTrip.Trip.controls['IsCommonPickup'].setValue(false);\r\n                        this.droppedTrip.Trip.controls['Terminal'].disable();\r\n                        this.droppedTrip.Trip.controls['BulkPlant'].disable();\r\n                        _drArray.controls.forEach((_toDrForm: FormGroup) => {\r\n                            if (locationType != 2) {\r\n                                _toDrForm.controls['Terminal'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(1);\r\n                            }\r\n                            else {\r\n                                _toDrForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                                _toDrForm.controls['PickupLocationType'].patchValue(2);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n            if (isCommonPickup) {\r\n                _drForm.controls['Terminal'].disable();\r\n                _drForm.controls['BulkPlant'].disable();\r\n            }\r\n            else {\r\n                var drValue = _drForm.value;\r\n                var isDRPickupExists = (drValue.PickupLocationType != 2 && drValue.Terminal && drValue.Terminal.Id > 0) || (drValue.PickupLocationType == 2 && drValue.BulkPlant && drValue.BulkPlant.SiteName && drValue.BulkPlant.SiteName.length > 0);\r\n                if (pickupLocation) {\r\n                    if (!isDRPickupExists) {\r\n                        if (locationType != 2) {\r\n                            _drForm.controls['Terminal'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(1);\r\n                        }\r\n                        else {\r\n                            _drForm.controls['BulkPlant'].patchValue(pickupLocation);\r\n                            _drForm.controls['PickupLocationType'].patchValue(2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.droppedTrip.Trip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n                var drFormJobId = _drForm.controls['JobId'].value;\r\n                if (_drArrayValue.find(x => x.JobId == drFormJobId) != null) {\r\n                    var jobInfoIndex = _drArrayValue.findIndex(x => x.JobId == drFormJobId);\r\n                    _drArray.insert(jobInfoIndex, _drForm);\r\n                }\r\n                else {\r\n                    _drArray.push(_drForm);\r\n                }\r\n            }\r\n            else {\r\n                _drArray.push(_drForm);\r\n            }\r\n        });\r\n        if (isDraggedFromLoad) {\r\n            var drInFromTrip = this.draggedDelReqData.TripFrom.controls['DeliveryRequests'] as FormArray;\r\n            for (let idx = 0; idx < _drFormArray.controls.length; idx++) {\r\n                let drIndex = drInFromTrip.controls.findIndex((x: FormGroup) => {\r\n                    return x.controls['Id'].value == _drFormArray.controls[idx]['controls'].Id.value\r\n                });\r\n                _drFormArray.controls[idx].get('SourceTripId').setValue(this.draggedDelReqData.TripFrom.controls['TripId'].value);\r\n                drInFromTrip.removeAt(drIndex);\r\n            }\r\n        }\r\n        if (this.droppedTrip.Trip.controls['IsDispatcherDragDropSequence'].value == true) {\r\n            this.droppedTrip.Trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n        }\r\n        this._savingBuilder = false;\r\n        this.validateTrailerJobCompatibility(this.draggedDelReqData, this.draggedDelReqData.Schedule);\r\n        this.draggedDelReqData.TripFrom.controls['ShiftIndex'].setValue(this.draggedDelReqData.ShiftIndex);\r\n        this.droppedTrip.Trip.controls['ShiftIndex'].setValue(this.droppedTrip.ShiftIndex);\r\n        this.dragDropDeliveryRequestsPublish(this.draggedDelReqData.TripFrom, this.droppedTrip.Trip, this.draggedDelReqData.Schedule, this.droppedTrip.Schedule);\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    dragDropDeliveryRequestsSave(tripFrom: FormGroup, tripTo: FormGroup, tripFromSchedule: FormGroup, tripToSchedule: FormGroup): void {\r\n        this._savingBuilder = true;\r\n        if (tripFrom.controls['DeliveryRequests'].value.length == 0) {\r\n            tripFrom.controls['IsCommonPickup'].setValue(false);\r\n            tripFrom.controls['Terminal'].disable();\r\n            tripFrom.controls['BulkPlant'].disable();\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n        var sourceTrip = tripFrom.value;\r\n        var destTrip = tripTo.value;\r\n        this.setTripStatus(sourceTrip);\r\n        this.setDeliveryGroupStatus(sourceTrip, DeliveryGroupStatus.Draft);\r\n        this.setTripStatus(destTrip);\r\n        this.setDeliveryGroupStatus(destTrip, DeliveryGroupStatus.Draft);\r\n        var dataToSave = this.getDSBSaveModel();\r\n        sourceTrip.Drivers = tripFromSchedule.get('Drivers').value;\r\n        sourceTrip.Trailers = tripFromSchedule.get('Trailers').value;\r\n        this.setDeliveryRequestStatusAsDraft(sourceTrip.DeliveryRequests);\r\n        dataToSave.Trips.push(sourceTrip);\r\n        destTrip.Drivers = tripToSchedule.get('Drivers').value;\r\n        destTrip.Trailers = tripToSchedule.get('Trailers').value;\r\n        this.setDeliveryRequestStatusAsDraft(destTrip.DeliveryRequests);\r\n        dataToSave.Trips.push(destTrip);\r\n        dataToSave.Status = 5;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            var trips = [];\r\n            trips.push(tripFrom);\r\n            trips.push(tripTo);\r\n            this.updateLoadForm(data, trips);\r\n        });\r\n    }\r\n\r\n    dragDropDeliveryRequestsPublish(tripFrom: FormGroup, tripTo: FormGroup, tripFromSchedule: FormGroup, tripToSchedule: FormGroup): void {\r\n        var isDraggedDRsPublished = this.isDraggedDRsPublished(this.draggedDelReqData.Data.value), isDestTripPublished = false;\r\n        if (tripFrom != null && tripFrom != undefined) {\r\n            if (tripFrom.get('GroupId').value > 0) {\r\n                if (tripFrom && tripFrom.invalid) {\r\n                    let invalidctrls = CustomAbstractControls.findRecursiveErrors(tripFrom);\r\n                    var i = tripFrom.get('ShiftIndex').value;\r\n                    var j = tripFrom.get('DriverRowIndex').value;\r\n                    var k = tripFrom.get('DriverColIndex').value;\r\n                    if (tripFrom.get('DeliveryRequests').value.length > 0) {\r\n                        this.editExisingGroup(tripFrom, i, j, k, tripFromSchedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        tripFrom.controls['IsCommonPickup'].setValue(false);\r\n                        tripFrom.controls['Terminal'].disable();\r\n                        tripFrom.controls['BulkPlant'].disable();\r\n                    }\r\n                }\r\n                else {\r\n                    this.dataService.setShowDeliveryGroupSubject(false);\r\n                }\r\n            }\r\n        }\r\n        if (tripTo != null && tripTo != undefined) {\r\n            if (tripTo.get('GroupId').value > 0) {\r\n                isDestTripPublished = true;\r\n                if (tripTo.invalid) {\r\n                    var i = tripTo.get('ShiftIndex').value;\r\n                    var j = tripTo.get('DriverRowIndex').value;\r\n                    var k = tripTo.get('DriverColIndex').value;\r\n                    let invalidctrls = CustomAbstractControls.findRecursiveErrors(tripTo);\r\n                    if (tripTo.get('DeliveryRequests').value.length > 0) {\r\n                        this.editExisingGroup(tripTo, i, j, k, tripToSchedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        return;\r\n                    }\r\n                } else {\r\n                    this.dataService.setShowDeliveryGroupSubject(false);\r\n                }\r\n            }\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var sourceTripValue = tripFrom.value;\r\n        var destTripValue = tripTo.value;\r\n        if (sourceTripValue.GroupId > 0) {\r\n            this.setTripStatus(sourceTripValue);\r\n            this.setDeliveryGroupStatus(sourceTripValue, DeliveryGroupStatus.Published);\r\n        }\r\n        else {\r\n            this.setTripStatus(sourceTripValue);\r\n            this.setDeliveryGroupStatus(sourceTripValue, DeliveryGroupStatus.Draft);\r\n        }\r\n        sourceTripValue.Drivers = tripFromSchedule.get('Drivers').value;\r\n        sourceTripValue.Trailers = tripFromSchedule.get('Trailers').value;\r\n        if (destTripValue.GroupId > 0) {\r\n            this.setTripStatus(destTripValue);\r\n            this.setDeliveryGroupStatus(destTripValue, DeliveryGroupStatus.Published);\r\n        }\r\n        else {\r\n            this.setTripStatus(destTripValue);\r\n            this.setDeliveryGroupStatus(destTripValue, DeliveryGroupStatus.Draft);\r\n        }\r\n        destTripValue.Drivers = tripToSchedule.get('Drivers').value;\r\n        destTripValue.Trailers = tripToSchedule.get('Trailers').value;\r\n\r\n        if (isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus != 2) {\r\n            this.setDeliveryRequestStatusAsDraft(destTripValue.DeliveryRequests);\r\n        }\r\n        else if (!isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus == 2) {\r\n            this.setDeliveryRequestStatusAsPublished(this.draggedDelReqData.Data.value, destTripValue.DeliveryRequests);\r\n        }\r\n        else if (isDraggedDRsPublished && destTripValue.DeliveryGroupPrevStatus == 2) {\r\n            this.setDeliveryRequestStatusAsPublished(this.draggedDelReqData.Data.value, destTripValue.DeliveryRequests);\r\n        }\r\n        dsbModel.Trips.push(sourceTripValue);\r\n        dsbModel.Trips.push(destTripValue);\r\n        dsbModel.Status = 5;\r\n        var tripArray = [];\r\n        tripArray.push(tripFrom);\r\n        tripArray.push(tripTo);\r\n        if (isDraggedDRsPublished || isDestTripPublished) {\r\n            this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, tripArray);\r\n            });\r\n        }\r\n        else {\r\n            this.sbService.saveDriverView(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, tripArray);\r\n            });\r\n        }\r\n    }\r\n\r\n    setDeliveryRequestStatusAsDraft(deliveryRequests: DeliveryRequestViewModel[]) {\r\n        deliveryRequests.forEach(t => {\r\n            t.Status = 5;\r\n            t.ScheduleStatus = 14;\r\n            t.DeliveryGroupId = null;\r\n            t.DeliveryScheduleId = null;\r\n            t.TrackableScheduleId = null;\r\n            t.TrackScheduleStatus = 0;\r\n            t.TrackScheduleEnrouteStatus = 0;\r\n            t.TrackScheduleStatusName = '';\r\n            t.StatusClassId = 0;\r\n        });\r\n    }\r\n\r\n    setDeliveryRequestStatusAsPublished(draggedDeliveryRequests: DeliveryRequestViewModel[], destTripDeliveryRequests: DeliveryRequestViewModel[]) {\r\n        for (var i = 0; i < draggedDeliveryRequests.length; i++) {\r\n            var destLoadDR = destTripDeliveryRequests.filter(t => t.Id == draggedDeliveryRequests[i].Id);\r\n            destLoadDR.forEach(t => {\r\n                t.Status = 3;\r\n                t.ScheduleStatus = 14;\r\n            });\r\n        }\r\n    }\r\n\r\n    dragDelReqToAnotherLoadNo(): void {\r\n        this.droppedTrip = null;\r\n        this.draggedDelReqData = null;\r\n    }\r\n\r\n    resetLoad(trip: FormGroup) {\r\n        if (trip) {\r\n            if (this.routeInfo == null) {\r\n                let reserveValue = {\r\n                    TripId: trip.controls['TripId'].value,\r\n                    ShiftId: trip.controls['ShiftId'].value,\r\n                    ShiftStartTime: trip.controls['ShiftStartTime'].value,\r\n                    ShiftEndTime: trip.controls['ShiftEndTime'].value,\r\n                    SlotPeriod: trip.controls['SlotPeriod'].value,\r\n                    StartDate: trip.controls['StartDate'].value,\r\n                    StartTime: trip.controls['StartTime'].value,\r\n                    EndTime: trip.controls['EndTime'].value,\r\n                    Carrier: trip.controls['Carrier'].value,\r\n                    ShiftIndex: trip.controls['ShiftIndex'].value,\r\n                    DriverRowIndex: trip.controls['DriverRowIndex'].value,\r\n                    DriverColIndex: trip.controls['DriverColIndex'].value,\r\n                    TrailerRowIndex: trip.controls['TrailerRowIndex'].value,\r\n                    TrailerColIndex: trip.controls['TrailerColIndex'].value,\r\n                    IsEditable: true,\r\n                    IsPreloadDisable: false\r\n                }\r\n                trip.reset();\r\n                (trip.controls['DeliveryRequests'] as FormArray).clear();\r\n                trip.reset(reserveValue);\r\n                this.dataService.setScheduleChangeDetectSubject(true);\r\n            }\r\n            if (this.routeInfo != null) {\r\n                this._loadingRemoveRoute = false;\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    deleteGroup(data: any) {\r\n        this.routeInfo = null;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        if (data.get('GroupId').value != null && data.get('GroupId').value > 0) {\r\n            this._savingBuilder = true;\r\n            this.changeDetectorRef.detectChanges();\r\n            var delRequests = data.get('DeliveryRequests') as FormArray;\r\n            var scheduleIds = delRequests.value.filter(top => top.TrackScheduleStatus != 5).map(t => t.TrackableScheduleId);\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                this._savingBuilder = false;\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                        var scheduleStatuses = this.sbService.returnCommonElements(this.ScheduleStatuses, response, true);\r\n                        if (scheduleStatuses.length > 0) {\r\n                            this.deleteLoad(data);\r\n                        }\r\n                        else {\r\n                            Declarations.msgerror(\"Can't delete/reset group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                            return;\r\n                        }\r\n                    } else if (onTheWaySchedules.length > 0) {\r\n                        this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                        this.DeletedGroup = data;\r\n                        jQuery('#btnconfirm-delete-delgrp').click();\r\n                        return;\r\n                    } else {\r\n                        this.deleteLoad(data);\r\n                    }\r\n                } else {\r\n                    this.deleteLoad(data);\r\n                }\r\n                //this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n        else {\r\n            this.deleteLoad(data);\r\n        }\r\n    }\r\n\r\n    public deleteLoadYes() {\r\n        Declarations.hideModal('#confirm-delete-delgrp');\r\n        if (this.routeInfo == null) {\r\n            this.deleteLoad(this.DeletedGroup);\r\n        }\r\n        else {\r\n            this.deleteRouteLoad(this.DeletedGroup);\r\n        }\r\n        this.DeletedGroup = null;\r\n    }\r\n\r\n    public deleteLoadNo() {\r\n        Declarations.hideModal('#confirm-delete-delgrp');\r\n        this.DeletedGroup = null;\r\n        if (this.routeInfo != null) {\r\n            this._loadingRemoveRoute = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    deleteLoad(trip: FormGroup) {\r\n        var tripId = trip.controls['TripId'].value;\r\n        var delRequests = trip.controls['DeliveryRequests'] as FormArray;\r\n        delRequests.value.forEach(t => { t.WindowMode = 1; t.QueueMode = 1; t.Compartments = [] });\r\n        if (tripId != null && tripId != undefined && tripId != '') {\r\n            var completedDRs = [];\r\n            var removedDRs = [];\r\n            var deliveryRequestsValue = delRequests.value as DeliveryRequestViewModel[];\r\n            deliveryRequestsValue.forEach(x => {\r\n                if (this.CompletedScheduleStatuses.filter(x1 => x1 == x.TrackScheduleStatus).length > 0) {\r\n                    completedDRs.push(x);\r\n                }\r\n                else {\r\n                    removedDRs.push(x);\r\n                }\r\n            })\r\n            if (completedDRs.length > 0) {\r\n                deliveryRequestsValue = removedDRs;\r\n            }\r\n            else {\r\n                delRequests.clear();\r\n            }\r\n            var dsbModel = this.getDSBSaveModel();\r\n            dsbModel.DeletedGroupId = trip.controls['GroupId'].value;\r\n            dsbModel.DeletedTripId = tripId;\r\n            let preloadInfo = this.getPreloadedInfoFromLoad(trip);\r\n            let preloadedTrips = this.getPrePostLoadedTrips(preloadInfo);\r\n            let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n            let postloadedTrips = this.getPrePostLoadedTrips(postloadInfo);\r\n            dsbModel.PreloadedDRs = this.getPreloadAcrossTheDateInfoFromLoad(trip);\r\n            dsbModel.PostloadedDRs = this.getPostloadAcrossTheDateInfoFromLoad(trip);\r\n            var schedule = this.SbForm.get('Shifts.' + trip.controls['ShiftIndex'].value + '.Schedules.' + trip.controls['DriverRowIndex'].value) as FormGroup;\r\n            trip.value.Drivers = schedule.controls['Drivers'].value;\r\n            trip.value.Trailers = schedule.controls['Trailers'].value;\r\n            dsbModel.Trips.push(trip.value);\r\n            dsbModel.Status = 4;\r\n\r\n            let tripArray = [];\r\n            tripArray.push(trip);\r\n            preloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            postloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            this._savingBuilder = true;\r\n            this.sbService.deleteGroup(dsbModel).subscribe(response => {\r\n                if (response != null) {\r\n                    if (response.StatusCode == 0 || response.StatusCode == 2) {\r\n                        let drsToRestore = deliveryRequestsValue.filter(t => !t.PostLoadedFor);\r\n                        this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n                        this.resetLoad(trip);\r\n                        if (completedDRs.length > 0) {\r\n                            let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                            let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                            var _drFormArray = this.utilService.getDeliveryRequestFormArray(completedDRs, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                            var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n                            _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                                drForm.push(_drForm);\r\n                            });\r\n                        }\r\n                    }\r\n                    this.updateLoadForm(response, tripArray);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                this._savingBuilder = false;\r\n            });\r\n        } else {\r\n            this.dataService.setRestoreDeletedRequestSubject(delRequests.value);\r\n            this.resetLoad(trip);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    private getPreloadedInfoFromLoad(trip: FormGroup): LoadInfo[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => x.PreLoadInfo).map(m => m.PreLoadInfo);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPostloadedInfoFromLoad(trip: FormGroup): LoadInfo[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let postloadInfo = _drs.filter(x => x.PostLoadInfo).map(m => m.PostLoadInfo);\r\n        return postloadInfo;\r\n    }\r\n\r\n    private getPreloadAcrossTheDateInfoFromLoad(trip: FormGroup): any[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => !x.PostLoadInfo && x.PostLoadedFor && !x.IsRetainFuelLoaded).map(m => m.PostLoadedFor);\r\n        preloadInfo = preloadInfo.filter((value, index, self) => self.indexOf(value) === index);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPostloadAcrossTheDateInfoFromLoad(trip: FormGroup): any[] {\r\n        let _drs = trip.controls['DeliveryRequests'].value;\r\n        let preloadInfo = _drs.filter(x => !x.PreLoadInfo && x.PreLoadedFor).map(m => m.PreLoadedFor);\r\n        return preloadInfo;\r\n    }\r\n\r\n    private getPrePostLoadedTrips(loadInfo: LoadInfo[]): FormGroup[] {\r\n        let loadedTrips = [];\r\n        loadInfo.forEach(x => {\r\n            let thisShift = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == x.ShiftId) as FormGroup;\r\n            if (thisShift) {\r\n                let thisSchedule = thisShift.get('Schedules.' + x.ScheduleIndex) as FormGroup;\r\n                let thisTrip = thisSchedule.get(\"Trips.\" + x.TripIndex) as FormGroup;\r\n                if (thisTrip) {\r\n                    thisTrip.value.Drivers = thisSchedule.controls['Drivers'].value;\r\n                    thisTrip.value.Trailers = thisSchedule.controls['Trailers'].value;\r\n                    loadedTrips.push(thisTrip);\r\n                }\r\n            }\r\n        });\r\n        loadedTrips = loadedTrips.filter((value, index, self) => self.indexOf(value) === index);\r\n        return loadedTrips;\r\n    }\r\n\r\n    getAssignedDrivers(shiftIdx: number): DriverAdditionalDetailModel[] {\r\n        var _drivers = [];\r\n        var _shift = this.SbForm.controls['Shifts']['controls'][shiftIdx] as FormGroup;\r\n        if (_shift != null && _shift != undefined) {\r\n            var _schArray = _shift.controls['Schedules'] as FormArray;\r\n            _schArray.controls.forEach((sc: FormGroup) => {\r\n                var _dArray = sc.controls['Drivers'] as FormArray;\r\n                if (_dArray && _dArray.length > 0) {\r\n                    _drivers = _drivers.concat(_dArray.value);\r\n                }\r\n            });\r\n        }\r\n        return _drivers;\r\n    }\r\n\r\n    getAssignedTrailers(shiftIdx: number): TrailerViewModel[] {\r\n        var _trailers = [];\r\n        var _shift = this.SbForm.get('Shifts.' + shiftIdx) as FormGroup;\r\n        if (_shift != null && _shift != undefined) {\r\n            var _schArray = _shift.get('Schedules') as FormArray;\r\n            _schArray.controls.forEach(sc => {\r\n                var _tArray = sc.get('Trailers') as FormArray;\r\n                if (_tArray && _tArray.length > 0) {\r\n                    _trailers = _trailers.concat(_tArray.value);\r\n                }\r\n            });\r\n        }\r\n        return _trailers;\r\n    }\r\n\r\n    getUnassignedDrivers(isFilldToggle = false): DriverAdditionalDetailModel[] {\r\n        let currentDriverId = this.DriverTrailerForm.controls['Driver'].value;\r\n        let drivers = this.AllUnassignedDrivers;\r\n        if (drivers && drivers.length > 0) {\r\n            this._loadingDrivers = true;\r\n            let shiftIdx = this.DriverTrailerForm.controls['Index1'].value;\r\n            let assigned = this.getAssignedDrivers(shiftIdx);\r\n            if (!isFilldToggle) {\r\n                assigned = assigned.filter(x => x.Id != currentDriverId);\r\n                drivers = drivers.filter(this.IdNotInComparer(assigned));\r\n            }\r\n            let isFilldCompatible = this.DriverTrailerForm.get('IsFilldCompatible').value;\r\n            if (isFilldCompatible != undefined) {\r\n                assigned = assigned.filter(x => x.Id != currentDriverId && x.IsFilldCompatible == isFilldCompatible);\r\n                drivers = drivers.filter(t => t.IsFilldCompatible == isFilldCompatible);\r\n                drivers = drivers.filter(this.IdNotInComparer(assigned));\r\n            }\r\n            this._loadingDrivers = false;\r\n        }\r\n        return drivers;\r\n    }\r\n\r\n    getUnassignedTrailers(shiftIdx: number, currentTrailers: TrailerViewModel[], IsFilldToggle: boolean = false): TrailerViewModel[] {\r\n        let _trailers = this.RegionDetail.Trailers;\r\n        if (!IsFilldToggle) {\r\n            let assignedTrailers = this.getAssignedTrailers(shiftIdx);\r\n            assignedTrailers = assignedTrailers.filter(this.IdNotInComparer(currentTrailers));\r\n            _trailers = _trailers.filter(this.IdNotInComparer(assignedTrailers));\r\n        }\r\n        let isFilldCompatible = this.DriverTrailerForm.get('IsFilldCompatible').value;\r\n        if (isFilldCompatible != undefined) {\r\n            _trailers = _trailers.filter(t => t.IsFilldCompatible == isFilldCompatible);\r\n        }\r\n        return _trailers;\r\n    }\r\n\r\n    editDriverTrailers(data: any): void {\r\n        //this.changeDetectorRef.detach();\r\n        this.EditDriverData = data;\r\n        var driverId = data.Driver;\r\n        var trailers = data.Trailers;\r\n\r\n        this.DriverTrailerForm.patchValue({\r\n            Index1: data.Index1,\r\n            Index2: data.Index2,\r\n            Driver: driverId,\r\n            Trailers: trailers,\r\n            IsIncludeAllRegionDriver: data.IsIncludeAllRegionDriver\r\n        });\r\n        this.SelectedTrailers = trailers;\r\n        if (this.SelectedTrailers.length > 0) {\r\n            let trailer1 = trailers[0];\r\n            this.DriverTrailerForm.get('IsFilldCompatible').patchValue(trailer1.IsFilldCompatible);\r\n        }\r\n        this.selTrailerIndex = data.Index1;\r\n        this.selTrailerlist = trailers;\r\n        this.UnassignedTrailers = this.getUnassignedTrailers(data.Index1, trailers);\r\n        this._loadingDrivers = true;\r\n        this.getDriverdetails();\r\n        this.changeDetectorRef.detectChanges();\r\n        // this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n        this._publishedRequestExists = false;\r\n        //this.subscribeFormChange();\r\n    }\r\n\r\n    checkOtherRegionDriver(): void {\r\n        if (this.DriverTrailerForm.get('Driver').value == \"null\") {\r\n            this.DriverTrailerForm.get('Driver').setErrors({ 'incorrect': true });\r\n        }\r\n        this.DriverTrailerForm.markAllAsTouched();\r\n\r\n        if (this.DriverTrailerForm.valid) {\r\n            var _form = this.DriverTrailerForm.value;\r\n            var status = this.validatePrePostLoadTrailer(_form);\r\n            if (status) {\r\n                var shiftId = this.SbForm.get('Shifts.' + _form.Index1 + '.Id').value;\r\n                //newly added\r\n                var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n\r\n                if (this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value) {\r\n                    var assignedDrivers = this.AllUnassignedDrivers.find(t => t.Id == _form.Driver);\r\n                    driverObj = assignedDrivers;\r\n                }\r\n\r\n                this.dataService.IsLoadingButtonSubject.next(true);\r\n                this.sbService.getSelectedDateDriverScheduleByDriverIdGridView(_form.Driver, new Date(this.SbForm.controls.Date.value).toUTCString(), shiftId).subscribe(data => {\r\n                    if (data && data.filter(f => f.ShiftId == shiftId).length > 0) {\r\n                        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                        if (!this.EditDriverData.IsPublishedRequestsExists) {\r\n                            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                        }\r\n                        else {\r\n                            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                            var trips = schedule.controls['Trips'] as FormArray;\r\n                            var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n                            var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(_deliveryRequests);\r\n                            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                                if (response != null && response != undefined && response.length > 0) {\r\n                                    let isDriverChange = false, isTrailerChange = false;\r\n                                    let _selectedTrailers = _form.Trailers.map(y => y.Id); var trips = schedule.controls['Trips'] as FormArray;\r\n                                    let currentTrailers = schedule.get('Trailers').value.map(y => y.Id);\r\n                                    let currentDriver = schedule.get('Drivers').value;\r\n                                    isTrailerChange = currentTrailers.filter(x => {\r\n                                        return _selectedTrailers.find(y => y == x) != undefined;\r\n                                    }).length != currentTrailers.length || (currentTrailers.length == 0 && _selectedTrailers.length > 0);\r\n                                    isDriverChange = (currentDriver.length == 0 && driverObj.Id > 0) || driverObj.Id != currentDriver[0].Id;\r\n                                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver/trailer for this column as drop has been made already\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    } else if (isDriverChange && onTheWaySchedules.length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver is on the way to job\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else if (isDriverChange && _deliveryRequests.filter(t => t.TrackScheduleStatus == 23).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver accepted the schedule.\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else {\r\n                                        this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    } else {\r\n                        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n                        if (!this.EditDriverData.IsPublishedRequestsExists || this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value) {\r\n                            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                        }\r\n                        else if (this.EditDriverData.IsPublishedRequestsExists) {\r\n                            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n\r\n                            let isDriverChange = false, isTrailerChange = false;\r\n                            let _selectedTrailers = _form.Trailers.map(y => y.Id); var trips = schedule.controls['Trips'] as FormArray;\r\n                            let currentTrailers = schedule.get('Trailers').value.map(y => y.Id);\r\n                            let currentDriver = schedule.get('Drivers').value;\r\n                            isTrailerChange = currentTrailers.filter(x => {\r\n                                return _selectedTrailers.find(y => y == x) != undefined;\r\n                            }).length != currentTrailers.length || (currentTrailers.length == 0 && _selectedTrailers.length > 0);\r\n                            isDriverChange = (currentDriver.length == 0 && driverObj.Id > 0) || driverObj.Id != currentDriver[0].Id;\r\n                            var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n                            var scheduleIds: number[] = this.getPublishedDRsTrackableScheduleIds(_deliveryRequests);\r\n                            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                                if (response != null && response != undefined && response.length > 0) {\r\n                                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver/trailer for this column as drop has been made already\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    } else if (onTheWaySchedules.length > 0 && isDriverChange) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver is on the way to job\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else if (isDriverChange && _deliveryRequests.filter(t => t.TrackScheduleStatus == 23).length > 0) {\r\n                                        Declarations.msgerror(\"Can't assign driver for this column as driver accepted the schedule.\", 'Warning', 2500);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                        return;\r\n                                    }\r\n                                    else {\r\n                                        this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                                        this.dataService.IsLoadingButtonSubject.next(false);\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        //this._otherRegionDriverSubject.next(true);//never come due to driver's load based on shift.\r\n\r\n                    }\r\n                    this.dataService.IsLoadingButtonSubject.next(false);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    checkForPublishedRequests(schedule: FormGroup): void {\r\n        //this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n        if (this.checkAnyPublishedTrip(schedule)) {\r\n            this._publishedRequestExists = true;\r\n        } else {\r\n            this._publishedRequestExists = false;\r\n        }\r\n    }\r\n\r\n    editDriverCancel(): void {\r\n        if (this.driverSchedules) {\r\n            this.driverSchedules.forEach(t => t.unsubscribeUpdateDriverTrailerSubject());\r\n        }\r\n    }\r\n\r\n    onPublishChangesNo(): void {\r\n        this._publishedRequestExists = false;\r\n    }\r\n\r\n    onPublishChangesYes(): void {\r\n        var _form = this.DriverTrailerForm.value;\r\n        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n        if (schedule != null && schedule != undefined) {\r\n            this.EditDriverData.IsPublishedRequestsExists = false;\r\n            var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n            this.assignDriverToSchedule(driverObj, schedule, _form);\r\n        }\r\n    }\r\n\r\n\r\n    onOtherRegionDriverNo(): void {\r\n        //this._otherRegionDriver = false;\r\n        this._otherRegionDriverSubject.next(false);\r\n    }\r\n\r\n    onOtherRegionDriverYes(): void {\r\n        if (this.DriverTrailerForm.valid) {\r\n            var _form = this.DriverTrailerForm.value;\r\n            var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n            if (schedule != null && schedule != undefined) {\r\n                var driverObj = this.RegionDetail.Drivers.find(x => x.Id == _form.Driver);\r\n                //this.checkForPublishedRequests(schedule);\r\n                this._otherRegionDriverSubject.next(false);\r\n                this._publishedRequestExists = this.EditDriverData.IsPublishedRequestsExists;\r\n                if (!this.EditDriverData.IsPublishedRequestsExists) {\r\n                    this.assignDriverToSchedule(driverObj, schedule, _form);\r\n                    let driverInfo = {\r\n                        driverId: driverObj.Id,\r\n                        regionId: this.SelectedRegionId\r\n                    };\r\n                    this.chatService.intializeChatDefault(driverInfo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    allowDriverChange(data, driverObj: DriverAdditionalDetailModel) {\r\n        var isAllow = true;\r\n        if (data && data.deliverySchedules && data.deliverySchedules.length > 0) {\r\n            if (driverObj) {\r\n                if (data.deliverySchedules.find(driverId => driverObj.Id != driverId)) {\r\n                    isAllow = false;\r\n                }\r\n            }\r\n        }\r\n        return isAllow;\r\n    }\r\n\r\n    assignDriverToSchedule(driverObj: DriverAdditionalDetailModel, schedule: FormGroup, _form: any): void {\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        schedule.get('IsIncludeAllRegionDriver').patchValue(_form.IsIncludeAllRegionDriver);\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return _form.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        // Validate Delivery Requests with trailer type\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.hideModal('#driverTrailerModel');\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                        this.editDriverCancel();\r\n\r\n                    } else if (!this.allowDriverChange(data, driverObj)) {\r\n                        Declarations.msgerror(\"The user cannot change the driver once drop is done\", undefined, undefined);\r\n                        this.editDriverCancel();\r\n                    }\r\n                    else {\r\n                        this.assignDriverToScheduleSave(driverObj, schedule, _form);\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                    if (_selectedTrailers.length > 0) {\r\n                        var trailerIds = [];\r\n                        _selectedTrailers.forEach(x => {\r\n                            trailerIds.push(x.Id);\r\n                        });\r\n                        this.GetfuelRetainDetails(trailerIds);\r\n                    }\r\n                });\r\n        } else {\r\n            this.assignDriverToScheduleSave(driverObj, schedule, _form);\r\n            this.highLightDRDiv(trips, null);\r\n            if (_selectedTrailers.length > 0) {\r\n                var trailerIds = [];\r\n                _selectedTrailers.forEach(x => {\r\n                    trailerIds.push(x.Id);\r\n                });\r\n                this.GetfuelRetainDetails(trailerIds);\r\n            }\r\n        }\r\n    }\r\n\r\n    assignDriverToScheduleSave(driverObj: DriverAdditionalDetailModel, schedule: FormGroup, _form: any): void {\r\n        Declarations.hideModal('#driverTrailerModel');\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return _form.Trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n        let data = {\r\n            Index1: _form.Index1,\r\n            Index2: _form.Index2,\r\n            Driver: driverObj,\r\n            Trailers: _selectedTrailers,\r\n            IsIncludeAllRegionDriver: _form.IsIncludeAllRegionDriver\r\n        };\r\n        this.dataService.setUpdateDriverTrailerSubject(data);\r\n    }\r\n\r\n    public saveDriverAssignment(shiftIndex: number, scheduleIndex: number): void {\r\n        var schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + scheduleIndex) as FormGroup;\r\n        var drivers = schedule.get('Drivers').value;\r\n        var trailers = schedule.get('Trailers').value;\r\n        var trips = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + scheduleIndex + '.Trips') as FormArray;\r\n\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dataToSave = this.getDSBSaveModel();\r\n        for (var i = 0; i < trips.length; i++) {\r\n            trips.value[i].Drivers = drivers;\r\n            trips.value[i].Trailers = trailers;\r\n            trips.value[i].IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n            dataToSave.Trips.push(trips.value[i]);\r\n        }\r\n        dataToSave.Status = 2;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        this._savingBuilder = true;\r\n        this.sbService.assignDriverAndTrailer(dataToSave).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadsFromRow(data, trips);\r\n        });\r\n    }\r\n\r\n    getDSBSaveModel() {\r\n        var sbModel = this.SbForm.value;\r\n        var dataToSave = new DSBSaveModel();\r\n        dataToSave.Id = sbModel.Id;\r\n        dataToSave.Date = sbModel.Date;\r\n        dataToSave.RegionId = sbModel.RegionId;\r\n        dataToSave.ObjectFilter = sbModel.ObjectFilter;\r\n        dataToSave.RegionFilter = sbModel.RegionFilter;\r\n        dataToSave.DateFilter = sbModel.DateFilter;\r\n        dataToSave.DSBFilter = sbModel.DSBFilter;\r\n        dataToSave.TimeStamp = sbModel.TimeStamp;\r\n        dataToSave.Status = sbModel.Status;\r\n        dataToSave.WindowMode = sbModel.WindowMode;\r\n        dataToSave.ToggleRequestMode = sbModel.ToggleRequestMode;\r\n        if (sbModel.Id == null) {\r\n            for (var i = 0; i < sbModel.Shifts.length; i++) {\r\n                var shift = new ScheduleShiftModel();\r\n                shift.Id = sbModel.Shifts[i].Id;\r\n                shift.StartTime = sbModel.Shifts[i].StartTime;\r\n                shift.EndTime = sbModel.Shifts[i].EndTime;\r\n                shift.SlotPeriod = sbModel.Shifts[i].SlotPeriod;\r\n                dataToSave.Shifts.push(shift);\r\n            }\r\n        }\r\n        return dataToSave;\r\n    }\r\n\r\n    setTripStatus(trip: TripModel): void {\r\n        if (trip) {\r\n            var tripPrevStatusId = trip.TripPrevStatus;\r\n            var tripStatusId = TripStatus.Added;\r\n            if (tripPrevStatusId == TripStatus.None) {\r\n                tripStatusId = TripStatus.Added;\r\n            } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\r\n                tripStatusId = TripStatus.Modified;\r\n            }\r\n            trip.TripStatus = tripStatusId;\r\n        }\r\n    }\r\n\r\n    setDeliveryGroupStatus(trip: TripModel, statusId: DeliveryGroupStatus): void {\r\n        if (trip) {\r\n            trip.DeliveryGroupStatus = statusId;\r\n        }\r\n    }\r\n\r\n    setDeliveryRequestStatus(trip: TripModel, statusId: DeliveryReqStatus, updateScheduleStatus: boolean = false): void {\r\n        if (trip) {\r\n            var deliveryRequests = trip.DeliveryRequests;\r\n            for (var i = 0; i < deliveryRequests.length; i++) {\r\n                deliveryRequests[i].Status = statusId;\r\n                //let isCompletedDrop = deliveryRequests.controls[i].get('StatusClassId').value == 4;\r\n                if (updateScheduleStatus) {\r\n                    var scheduleStatus = deliveryRequests[i].ScheduleStatus;\r\n                    if (scheduleStatus == 5) {\r\n                        continue;\r\n                    }\r\n                    else if (scheduleStatus == 14) {\r\n                        deliveryRequests[i].ScheduleStatus = 15;\r\n                    }\r\n                    else {\r\n                        deliveryRequests[i].ScheduleStatus = 14;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private processPostloadedDrToSaveEditedData(postloadInfo: LoadInfo[], modifiedTrips: ModifiedTripInfo[]): void {\r\n        let shifts = this.SbForm.controls['Shifts'].value;\r\n        let postloadInfoClone = JSON.parse(JSON.stringify(postloadInfo)) as LoadInfo[];\r\n        postloadInfoClone.forEach(f => { f.ShiftIndex = shifts.indexOf(shifts.find(t => t.Id == f.ShiftId)), f.DrId = ''; f.ShiftId = '' });\r\n        let postloadInfoArray: LoadInfo[] = [];\r\n        postloadInfoClone.forEach(t => {\r\n            if (!postloadInfoArray.find(x => x.ShiftIndex == t.ShiftIndex && x.ScheduleIndex == t.ScheduleIndex && x.TripIndex == t.TripIndex)) {\r\n                postloadInfoArray.push({ ShiftIndex: t.ShiftIndex, ScheduleIndex: t.ScheduleIndex, TripIndex: t.TripIndex, DrId: '', ShiftId: t.ShiftId });\r\n            }\r\n        });\r\n        for (var index = 0; index < postloadInfoArray.length; index++) {\r\n            let modifiedPreloadedTripInfo = {\r\n                ShiftIndex: postloadInfoArray[index].ShiftIndex,\r\n                DriverRowIndex: postloadInfoArray[index].ScheduleIndex,\r\n                DriverColIndex: postloadInfoArray[index].TripIndex,\r\n                ShiftId: postloadInfoArray[index].ShiftId,\r\n            };\r\n            modifiedTrips.push(modifiedPreloadedTripInfo);\r\n        }\r\n    }\r\n\r\n    draftScheduleBuilder(trip: FormGroup, filterChanged = false): void {\r\n        let shiftIndex = trip.controls['ShiftIndex'].value;\r\n        let shiftId = trip.controls['ShiftId'].value;\r\n        let rowIndex = trip.controls['DriverRowIndex'].value;\r\n        let loadIndex = trip.controls['DriverColIndex'].value;\r\n        let modifiedTrips = [{ ShiftIndex: shiftIndex, DriverRowIndex: rowIndex, DriverColIndex: loadIndex, ShiftId: shiftId }] as ModifiedTripInfo[];\r\n        let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n        if (postloadInfo && postloadInfo.length > 0) {\r\n            this.processPostloadedDrToSaveEditedData(postloadInfo, modifiedTrips);\r\n        }\r\n        this.draftScheduleBuilderData(modifiedTrips, filterChanged)\r\n    }\r\n\r\n    public draftScheduleBuilderData(_unsavedChanges: ModifiedTripInfo[], isDateChange: boolean) {\r\n        if (_unsavedChanges.length > 0) {\r\n            var isValidTrips = this.validateTrips(_unsavedChanges);\r\n            if (!isValidTrips) {\r\n                return;\r\n            }\r\n            this._savingBuilder = true;\r\n            var trips = [];\r\n            var dataToSave = this.getDSBSaveModel();\r\n            _unsavedChanges.forEach(t => {\r\n                let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == t.ShiftId) as FormGroup;\r\n                if (shiftInfo != null) {\r\n                    let schedule = shiftInfo.controls['Schedules']['controls'][t.DriverRowIndex] as FormGroup;\r\n                    var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n                    trips.push(trip);\r\n                    var tripModel = trip.value;\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Draft);\r\n                    tripModel.Drivers = schedule.controls['Drivers'].value;\r\n                    tripModel.Trailers = schedule.controls['Trailers'].value;\r\n                    dataToSave.Trips.push(tripModel);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            if (dataToSave.Trips.length > 0) {\r\n                dataToSave.Status = 1;\r\n                this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n                    this._savingBuilder = false;\r\n                    this.updateLoadForm(data, trips, isDateChange);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setAllowDriverChange(i: number, j: number) {\r\n        let _thisRow = this.SbForm.get('Shifts.' + i + '.Schedules.' + j) as FormGroup;\r\n        var schedule = _thisRow.value as TrailerModel;\r\n        var allowDriverchange = true;\r\n        for (var k = 0; k < schedule.Trips.length; k++) {\r\n            let thisTrip = schedule.Trips[k] as TripModel;\r\n            if (thisTrip.DeliveryGroupStatus == DeliveryGroupStatus.Published || thisTrip.DeliveryGroupPrevStatus == DeliveryGroupStatus.Published) {\r\n                allowDriverchange = false;\r\n                this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n                return;\r\n            }\r\n            var deliveryReqs = thisTrip.DeliveryRequests as DeliveryRequestViewModel[];\r\n            if (deliveryReqs.findIndex(t => (t.PreLoadedFor != null && t.PreLoadedFor.trim() != '') || (t.PostLoadedFor != null && t.PostLoadedFor.trim() != '')) != -1) {\r\n                allowDriverchange = false;\r\n                this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n                return;\r\n            }\r\n        }\r\n        this.SbForm.get('Shifts.' + i + '.Schedules.' + j).get('AllowDriverChange').setValue(allowDriverchange);\r\n    }\r\n\r\n    cancelScheduleBuilder(i: number, j: number, k: number, trip: FormGroup): void {\r\n        let _thisTrip = this.SbForm.get('Shifts.' + i + '.Schedules.' + j + '.Trips.' + k) as FormGroup;\r\n        let _thisDrArray = _thisTrip.get('DeliveryRequests') as FormArray;\r\n        _thisDrArray.clear();\r\n        let oldTripValue = trip.value;\r\n        trip.value.DeliveryRequests.forEach(x => {\r\n            _thisDrArray.push(this.utilService.getDeliveryRequestForm(x, oldTripValue.IsCommonPickup));\r\n        });\r\n        _thisTrip.patchValue(trip.value);\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    publishScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup, isOptionalPickup: boolean = false): void {\r\n        this._savingBuilder = true;\r\n        var drivers = schedule.get('Drivers').value;\r\n        var trailers: TrailerViewModel[] = schedule.get('Trailers').value;\r\n        if (drivers == null || drivers == undefined || drivers.length == 0 || ((this.IsTrailerExists) && (trailers == null || trailers == undefined || trailers.length == 0))) {\r\n            if (this.IsTrailerExists) {\r\n                Declarations.msgwarning('Please assign a driver / trailer to publish Load ' + (k + 1), 'Driver/Trailer Required', 2500);\r\n            }\r\n            else {\r\n                Declarations.msgwarning('Please assign a driver to publish Load ' + (k + 1), 'Driver Required', 2500);\r\n            }\r\n            this._savingBuilder = false;\r\n            return;\r\n        }\r\n        if (drivers != null && drivers.length > 0) {\r\n            var delReqs = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n            if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver / trailer to publish Load ' + (k + 1), 'Driver/Trailer Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n                else if (drivers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver to publish Load ' + (k + 1), 'Driver Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (isOptionalPickup) {\r\n            let isValid = true;\r\n            var delControlReqs = trip.controls['DeliveryRequests'] as FormArray;\r\n            delControlReqs.controls.forEach((x: FormGroup) => {\r\n                let OrderId = x.get('OrderId').value;\r\n                let ProductType = x.get('ProductType').value;\r\n                let terminalInfo = x.get('Terminal').value;\r\n                let bulkplantInfo = x.get('BulkPlant').value;\r\n                let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                    if (fuelTypeInfo != null) {\r\n                        var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                        let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                        if (result.length == 0) {\r\n                            Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                            isValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (isValid) {\r\n                delControlReqs.controls.forEach((x: FormGroup) => {\r\n                    this.setDRPickupValidators(x);\r\n                });\r\n            }\r\n        }\r\n        if (trip != null && trip != undefined) {\r\n            if (trip.invalid || !this.validatePublishLoad(trip)) {\r\n                let invalidctrls = CustomAbstractControls.findRecursiveErrors(trip);\r\n                this.editExisingGroup(trip, i, j, k, schedule, true);\r\n                this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                this._savingBuilder = false;\r\n                return;\r\n            } else {\r\n                this.dataService.setShowDeliveryGroupSubject(false);\r\n            }\r\n        }\r\n        //Check Job and Trailer Compatibility\r\n        var _deliveryRequests = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n\r\n        if (!this.validateLoadWithTrailerCapacity(_deliveryRequests, _selectedTrailers)) {\r\n            this._savingBuilder = false;\r\n            return;\r\n        }\r\n\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data) {\r\n                        if (data.trackableScheduleStatuses && data.trackableScheduleStatuses.length > 0) {\r\n                            var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, data.trackableScheduleStatuses, true);\r\n                            var isCompletedSchedule = completedSchedules.length > 0;\r\n                            if (isCompletedSchedule || data.trackableScheduleStatuses.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                                var scheduleStatuses = this.sbService.returnCommonElements(this.ScheduleStatuses, data.trackableScheduleStatuses, true);\r\n                                if (scheduleStatuses.length == 0) {\r\n                                    this._savingBuilder = false;\r\n                                    Declarations.msgerror(\"Can't edit group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                            this.highLightDRDivOneLoad(trip, data);\r\n                            this._savingBuilder = false;\r\n                            Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                            return;\r\n                        }\r\n                        if (data.trackableScheduleStatuses && data.trackableScheduleStatuses.length > 0) {\r\n                            var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, data.trackableScheduleStatuses, false);\r\n                            if (onTheWaySchedules.length > 0) {\r\n                                this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                                this.PublishedGroup = { shiftIndex: i, rowIndex: j, colIndex: k, schedule: schedule, trip: trip };\r\n                                this._savingBuilder = false;\r\n                                jQuery('#btnconfirm-publish-delgrp').click();\r\n                                return;\r\n                            }\r\n                        }\r\n                        this.highLightDRDivOneLoad(trip, data);\r\n                        this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //if (delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                        //    var delReqOrderIds = delReqs.map(t => { if (t.IsFilldInvoke == true) return t.OrderId; });\r\n                        //    this.sbService.validateFilldOrderCompatibility(delReqOrderIds)\r\n                        //        .subscribe(data => {\r\n                        //            if (data && data.Result == false) {\r\n                        //                this._savingBuilder = false;\r\n                        //                Declarations.msgerror(data.Message, undefined, undefined);\r\n                        //                this.changeDetectorRef.detectChanges();\r\n                        //                return;\r\n                        //            }\r\n                        //            this.highLightDRDivOneLoad(trip, data);\r\n                        //            this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //        });\r\n                        //} else {\r\n                        //    this.highLightDRDivOneLoad(trip, data);\r\n                        //    this.publishLoadSave(i, j, k, schedule, trip, isOptionalPickup);\r\n                        //}\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    validateDraftLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls['StartTime'].invalid || trip.controls['EndTime'].invalid || trip.controls['StartDate'].invalid) {\r\n            isValid = false;\r\n            trip.controls['StartDate'].touched;\r\n            !trip.controls['StartDate'].value ? Declarations.msgerror('', 'Invalid Date', 5000) : Declarations.msgerror('', 'Please fill required field', 5000);\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    validatePublishLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls.IsCommonPickup.value && !(trip.controls.Terminal.valid || trip.controls.BulkPlant.valid)) {\r\n            isValid = false;\r\n            Declarations.msgerror('', 'Please select common pickup location', 5000);\r\n        }\r\n        var _deliveryRequests = trip.get('DeliveryRequests').value as DeliveryRequestViewModel[];\r\n        if (_deliveryRequests.length > 0) {\r\n            _deliveryRequests.forEach(x => {\r\n                if (x.OrderId == 0 || x.OrderId == null) {\r\n                    isValid = false;\r\n                    Declarations.msgerror('', 'Please select an order to publish the load', 5000);\r\n                }\r\n            });\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    public publishLoadYes() {\r\n        Declarations.hideModal('#confirm-publish-delgrp');\r\n        this.publishLoadSave(this.PublishedGroup.shiftIndex, this.PublishedGroup.rowIndex, this.PublishedGroup.colIndex, this.PublishedGroup.schedule, this.PublishedGroup.trip);\r\n        this.PublishedGroup = null;\r\n    }\r\n\r\n    public publishLoadNo() {\r\n        Declarations.hideModal('#confirm-publish-delgrp');\r\n        this.PublishedGroup = null;\r\n    }\r\n\r\n    publishLoadSave(i: number, j: number, k: number, schedule: any, trip: FormGroup, isOptionalPickup: boolean = false) {\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var tripValue = trip.value;\r\n        this.setTripStatus(tripValue);\r\n        this.setDeliveryGroupStatus(tripValue, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(tripValue, DeliveryReqStatus.ScheduleCreated);\r\n        tripValue.Drivers = schedule.get('Drivers').value;\r\n        tripValue.Trailers = schedule.get('Trailers').value;\r\n        tripValue.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n        dsbModel.Trips.push(tripValue);\r\n        dsbModel.Status = 3;\r\n        this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trip);\r\n        });\r\n    }\r\n\r\n    validateLoadWithTrailerCapacity(delReqs: any[], _selectedTrailers: any[]) {\r\n        if (delReqs.length > 0 && _selectedTrailers.length > 0) {\r\n            let terminal = [];\r\n            let bulkPlant = [];\r\n            let FuelRequestQty = 0;\r\n            delReqs.forEach(t => {\r\n                if (t.Terminal && t.Terminal.Id > 0) {\r\n                    terminal.push(t.Terminal);\r\n                }\r\n                if (t.bulkPlant && t.bulkPlant.SiteId > 0 && t.bulkPlant.SiteName != null) {\r\n                    bulkPlant.push(t.bulkPlant);\r\n                }\r\n                if (t.ScheduleQuantityType == 1) {\r\n                    FuelRequestQty += t.RequiredQuantity;\r\n                }\r\n            });\r\n            let trailerCapacity = 0;\r\n            if (_selectedTrailers.length > 0) {\r\n                for (let Capacity of _selectedTrailers) {\r\n                    trailerCapacity += Capacity.FuelCapacity;\r\n                }\r\n            }\r\n            if (trailerCapacity > 0) {\r\n                if (terminal.length > 0 && bulkPlant.length == 0) {\r\n                    let Uniqueterminals = terminal.map(item => item.Id).filter((value, index, self) => self.indexOf(value) === index);\r\n                    if (Uniqueterminals.length == 1) {\r\n                        if (_selectedTrailers.length > 0) {\r\n                            if (FuelRequestQty > trailerCapacity) {\r\n                                Declarations.msgerror(\"Fuel request quantity is greater than trailer capacity\", undefined, undefined);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (bulkPlant.length > 0 && terminal.length == 0) {\r\n\r\n                        let UniquebulkPlants = bulkPlant.map(item => item.SiteId).filter((value, index, self) => self.indexOf(value) === index);\r\n                        if (UniquebulkPlants.length == 1) {\r\n                            if (FuelRequestQty > trailerCapacity) {\r\n                                Declarations.msgerror(\"Fuel request quantity is greater than trailer capacity\", undefined, undefined);\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    validateRowPublish(shiftIndex: number, rowIndex: number, isOptionalPickup: boolean): void {\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\r\n            if (this.IsTrailerExists)\r\n                Declarations.msgwarning('Please assign a driver / trailer to publish', 'Driver/Trailer Required', 2500);\r\n            else\r\n                Declarations.msgwarning('Please assign a driver to publish', 'Driver Required', 2500);\r\n            return;\r\n        }\r\n\r\n        //Check Job and Trailer Compatibility\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\r\n            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\r\n        });\r\n\r\n        if (drivers != null && drivers.length > 0) {\r\n            var delReqs = _deliveryRequests;\r\n            if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\r\n                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver / trailer to publish', 'Driver/Trailer Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n                else if (drivers.some(t => t.IsFilldCompatible == false)) {\r\n                    Declarations.msgwarning('Please assign a Filld compatible driver to publish', 'Driver Required', 2500);\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var load = trips.controls[i] as FormGroup;\r\n                var drs = load.controls[\"DeliveryRequests\"].value\r\n                if (!this.validateLoadWithTrailerCapacity(drs, _selectedTrailers)) {\r\n                    this._savingBuilder = false;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\r\n            this.sbService.validateTrailerJobCompatibility(_selectedTrailers, _deliveryRequests)\r\n                .subscribe(data => {\r\n                    if (data && data.deliveryRequestsNotCompatible && data.deliveryRequestsNotCompatible.length > 0) {\r\n                        this.highLightDRDiv(trips, data);\r\n                        Declarations.msgerror(\"This job location is not compatible with trailer type\", undefined, undefined);\r\n                        //} else if (_deliveryRequests.some(t => t.IsFilldInvoke == true)) {\r\n                        //    var delReqOrderIds = _deliveryRequests.map(t => { if (t.IsFilldInvoke == true) return t.OrderId; });\r\n\r\n                        //    this.sbService.validateFilldOrderCompatibility(delReqOrderIds)\r\n                        //        .subscribe(data => {\r\n                        //            if (data && data.Result == false) {\r\n                        //                Declarations.msgerror(data.Message, undefined, undefined);\r\n\r\n                        //            } else {\r\n                        //                this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n                        //                this.highLightDRDiv(trips, null);\r\n                        //            }\r\n                        //        });\r\n                    } else {\r\n                        this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n                        this.highLightDRDiv(trips, null);\r\n                    }\r\n                });\r\n        } else {\r\n            this.publishEntireRow(schedule, shiftIndex, rowIndex, trips, isOptionalPickup);\r\n            this.highLightDRDiv(trips, null);\r\n        }\r\n        //End Check Job and Trailer Compatibility\r\n    }\r\n    publishEntireRow(schedule: FormGroup, shiftIndex: number, rowIndex: number, trips: FormArray, isOptionalPickup: boolean = false): void {\r\n        var validTrips = [];\r\n        for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n            let thisTrip = trips.controls[i] as FormGroup;\r\n            if (isOptionalPickup) {\r\n                let isValid = true;\r\n                var delReqs = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                delReqs.controls.forEach((x: FormGroup) => {\r\n                    let OrderId = x.get('OrderId').value;\r\n                    let ProductType = x.get('ProductType').value;\r\n                    let terminalInfo = x.get('Terminal').value;\r\n                    let bulkplantInfo = x.get('BulkPlant').value;\r\n                    if (terminalInfo.Id == 0 && (bulkplantInfo.Address == null || bulkplantInfo.Address == '')) {\r\n                        let fuelTypeInfo = this.ScheduleOrderFuelInfo.find(x => x.OrderId == OrderId);\r\n                        if (fuelTypeInfo != null) {\r\n                            var fuelTypeDetails = fuelTypeInfo.FuelTypeDetails;\r\n                            let result = this.ScheduleOptionalPickupDetailModel.filter(o1 => fuelTypeDetails.some(o2 => o1.TfxFuelTypeId === o2.Id));\r\n                            if (result.length == 0) {\r\n                                Declarations.msgerror('Please assign optional pickup/pickup location for product type : ' + ProductType, 'Pickup Location Required', 2500);\r\n                                isValid = false;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                if (isValid) {\r\n                    var delReqs = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                    delReqs.controls.forEach((x: FormGroup) => {\r\n                        this.setDRPickupValidators(x);\r\n                    });\r\n                }\r\n            }\r\n            if (thisTrip && (thisTrip.invalid || !this.validatePublishLoad(thisTrip))) {\r\n                let invalidctrls = CustomAbstractControls.findRecursiveErrors(thisTrip);\r\n                if (thisTrip.get('DeliveryRequests').value.length > 0) {\r\n                    this.editExisingGroup(thisTrip, shiftIndex, rowIndex, i, schedule, true);\r\n                    this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                    return;\r\n                }\r\n            } else {\r\n                validTrips.push(i);\r\n            }\r\n        }\r\n\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var tripValue = trips.value[i];\r\n            if (validTrips.includes(tripValue.DriverColIndex)) {\r\n                this.setTripStatusToPublish(tripValue);\r\n            }\r\n            dsbModel.Trips.push(tripValue);\r\n        }\r\n        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers, t.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value });\r\n        dsbModel.Status = 3;\r\n        this.sbService.publishDriverView(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trips);\r\n        });\r\n    }\r\n\r\n    setTripStatusToPublish(trip: any) {\r\n        this.setTripStatus(trip);\r\n        this.setDeliveryGroupStatus(trip, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(trip, DeliveryReqStatus.ScheduleCreated);\r\n    }\r\n\r\n    updateLoadForm(data: DSBSaveModel, trip: any, isDateChange: boolean = false): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.droppedTrip = null;\r\n            this.draggedDelReqData = null;\r\n            this.setUnsavedChanges();\r\n            if (!isDateChange) {\r\n                this.SbForm.patchValue({\r\n                    Id: data.Id,\r\n                    TimeStamp: data.TimeStamp,\r\n                    Status: 0\r\n                });\r\n                if (data && data.Trips && data.Trips.length > 0) {\r\n                    if (trip instanceof FormGroup) {\r\n                        data.Trips[0].DeliveryRequests = this.sorDrByProductSequence(data.Trips[0].IsDispatcherDragDropSequence, data.Trips[0].DeliveryRequests);\r\n                        trip.patchValue(data.Trips[0]);\r\n\r\n                        //remove existing drs from the trip\r\n                        let tripDrArray = trip.get('DeliveryRequests') as FormArray;\r\n                        tripDrArray.clear();\r\n                        //insert newly sorted drs in trip\r\n                        let newDrArray = this.utilService.getDeliveryRequestFormArray(data.Trips[0].DeliveryRequests, data.Trips[0].IsCommonPickup, data.Trips[0].IsDispatcherDragDropSequence, 0);\r\n                        newDrArray.controls.forEach(drForm => {\r\n                            tripDrArray.push(drForm);\r\n                        });\r\n                        \r\n                        let sIndex = trip.controls['ShiftIndex'].value;\r\n                        let rIndex = trip.controls['DriverRowIndex'].value;\r\n                        this.setAllowDriverChange(sIndex, rIndex);\r\n                        this.dataService.setSavedChangesSubject(trip.value);\r\n                    }\r\n                    else if (trip instanceof FormArray) {\r\n                        for (let i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip.controls[i] as FormGroup;\r\n                            let shiftId = thisTrip.controls['ShiftId'].value;\r\n                            let shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            let rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            let colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            let savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            savedTrip.DeliveryRequests = this.sorDrByProductSequence(savedTrip.IsDispatcherDragDropSequence, savedTrip.DeliveryRequests);\r\n                            if (savedTrip) {\r\n                                thisTrip.patchValue(savedTrip);\r\n\r\n                                //remove existing drs from the trip\r\n                                let tripDrArray = thisTrip.get('DeliveryRequests') as FormArray;\r\n                                tripDrArray.clear();\r\n                                //insert newly sorted drs in trip\r\n                                let newDrArray = this.utilService.getDeliveryRequestFormArray(savedTrip.DeliveryRequests, savedTrip.IsCommonPickup, savedTrip.IsDispatcherDragDropSequence, 0);\r\n                                newDrArray.controls.forEach(drForm => {\r\n                                    tripDrArray.push(drForm);\r\n                                });\r\n                                \r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(thisTrip.value);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip[i] as FormGroup;\r\n                            let shiftId = thisTrip.controls['ShiftId'].value;\r\n                            let shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            let rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            let colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            let savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            savedTrip.DeliveryRequests = this.sorDrByProductSequence(savedTrip.IsDispatcherDragDropSequence, savedTrip.DeliveryRequests);\r\n                            if (savedTrip) {\r\n                                thisTrip.patchValue(savedTrip);\r\n                                //remove existing drs from the trip\r\n                                let tripDrArray = thisTrip.get('DeliveryRequests') as FormArray;\r\n                                tripDrArray.clear();\r\n                                //insert newly sorted drs in trip\r\n                                let newDrArray = this.utilService.getDeliveryRequestFormArray(savedTrip.DeliveryRequests, savedTrip.IsCommonPickup, savedTrip.IsDispatcherDragDropSequence, 0);\r\n                                newDrArray.controls.forEach(drForm => {\r\n                                    tripDrArray.push(drForm);\r\n                                });\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(thisTrip.value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (data.StatusCode == 0)\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            else\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            if (isDateChange) {\r\n                this.dataService.setUnsavedChangesAsEmptySubject();\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        //this.dataService.FormUnsavedChangesSubject.unsubscribe();\r\n    }\r\n\r\n    updateLoadsFromRow(data: DSBSaveModel, trips: FormArray): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            this.editDriverCancel();\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.setUnsavedChanges();\r\n            this.SbForm.patchValue({\r\n                Id: data.Id,\r\n                TimeStamp: data.TimeStamp,\r\n                Status: 0\r\n            });\r\n            for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n                let thisTrip = trips.controls[i] as FormGroup;\r\n                var shiftId = thisTrip.get('ShiftId').value;\r\n                var rowIndex = thisTrip.get('DriverRowIndex').value;\r\n                var colIndex = thisTrip.get('DriverColIndex').value;\r\n                var savedTrip = data.Trips.filter(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                if (savedTrip && savedTrip != null && savedTrip.length > 0) {\r\n                    thisTrip.patchValue({\r\n                        TripId: savedTrip[0].TripId,\r\n                        TimeStamp: savedTrip[0].TimeStamp\r\n                    });\r\n                }\r\n            }\r\n            if (data.StatusCode == 0)\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            else\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            this.editDriverCancel();\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        //this.dataService.FormUnsavedChangesSubject.unsubscribe();\r\n    }\r\n\r\n    isTrailersSelected(): boolean {\r\n        let _trailers = this.DriverTrailerForm.get('Trailers').value\r\n        return _trailers && _trailers.length > 0;\r\n    }\r\n\r\n    addShift(shiftIdx: number, scheduleIdx: number): void {\r\n        var _tArray = this.SbForm.get('Shifts.' + shiftIdx + '.Schedules.' + scheduleIdx + '.Trips') as FormArray;\r\n        let _startDate = this.SbForm.get('Date').value;\r\n        var shift = this.SbForm.get('Shifts.' + shiftIdx) as FormGroup;\r\n        let shiftId = shift.get('Id').value;\r\n        let selectedShift = this.Shifts.find(x => x.Id == shiftId);\r\n        let _startTime = selectedShift.StartTime;\r\n        if (_tArray.controls.length > 0) {\r\n            let lastTripStartTime = _tArray.controls[_tArray.controls.length - 1].get('StartTime').value;\r\n            let lastTripStartDate = _tArray.controls[_tArray.controls.length - 1].get('StartDate').value;\r\n            _startTime = _tArray.controls[_tArray.controls.length - 1].get('EndTime').value;\r\n            _startDate = this.getNewLoadStartDate(moment(lastTripStartDate + ' ' + lastTripStartTime).toDate(), moment(lastTripStartDate + ' ' + _startTime).toDate());\r\n        }\r\n        let startTime = moment(_startDate + ' ' + _startTime).toDate();\r\n        let trip = this.getTrailerTrip(startTime, selectedShift.SlotPeriod, scheduleIdx, _tArray.controls.length);\r\n        trip.ShiftStartTime = shift.get('StartTime').value;\r\n        trip.ShiftEndTime = shift.get('EndTime').value;\r\n        trip.SlotPeriod = shift.get('SlotPeriod').value;\r\n        trip.ShiftId = shiftId;\r\n        trip.ShiftIndex = shiftIdx;\r\n        _tArray.push(this.utilService.getTripFormGroup(trip));\r\n    }\r\n\r\n    getNewLoadStartDate(startDateTime: Date, endDateTime: Date) {\r\n        if (startDateTime > endDateTime) {\r\n            endDateTime.setDate(endDateTime.getDate() + 1);\r\n        }\r\n        return moment(endDateTime).format('MM/DD/YYYY');\r\n    }\r\n\r\n    getTrailerTrip(startTime: Date, slotPeriod: number, rowIndex: number, colIndex: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.IsPreloadDisable = false;\r\n        trip.DriverRowIndex = rowIndex;\r\n        trip.DriverColIndex = colIndex;\r\n        return trip;\r\n    }\r\n\r\n\r\n    onTrailerSelectAll(items: any): void {\r\n        this.DriverTrailerForm.get('Trailers').setValue(items);\r\n    }\r\n    onTrailerDeSelectAll(): void {\r\n        this.DriverTrailerForm.get('Trailers').setValue([]);\r\n    }\r\n\r\n    getDriverdetails() {\r\n        let shift = this.SbForm.controls['Shifts']['controls'][this.EditDriverData.Index1] as FormGroup;\r\n        if (shift != null) {\r\n            let ShiftId = shift.get('Id').value;\r\n            this.sbService.getShiftCompanyDrivers(this.SelectedRegionId, this.DriverTrailerForm.get('IsIncludeAllRegionDriver').value ? \"AllowOtherRegion\" : \"\", this.SbForm.controls.Date.value, ShiftId).subscribe((drivers: DriverAdditionalDetailModel[]) => {\r\n                this.AllUnassignedDrivers = drivers;\r\n                this.UnassignedDrivers = this.getUnassignedDrivers();\r\n                if (this.UnassignedDrivers.length == 0) {\r\n                    this.UnassignedDrivers = [];\r\n                }\r\n                this._loadingDrivers = false;\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n\r\n    IdNotInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 0;\r\n        }\r\n    }\r\n\r\n    CodeComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Code == current.Code\r\n            }).length == 0;\r\n        }\r\n    }\r\n\r\n    public checkAnyPublishedTrip(schedule: FormGroup): Boolean {\r\n        let isPublished = false;\r\n        var trips = schedule.get('Trips') as FormArray;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            if (trips[i] != null && trips[i] != undefined && !isPublished) {\r\n                var drs = trips[i].get('DeliveryRequests') as FormArray;\r\n                for (let k = 0; k < drs.length; k++) {\r\n                    if (drs.controls[k].get('PreviousStatus').value === 3) {\r\n                        isPublished = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (isPublished)\r\n                    break;\r\n            }\r\n        }\r\n        return isPublished;\r\n    }\r\n\r\n    editExisingGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n    }\r\n\r\n    editDroppedGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n        this.editGroup(_trip, _shiftIndex, _rowIndex, _tripIndex, _schedule, _isPublishLoadInvalid);\r\n        this.dataService.setShowDeliveryGroupSubject(true);\r\n    }\r\n\r\n    editGroup(_trip: FormGroup, _shiftIndex: number, _rowIndex: number, _tripIndex: number, _schedule: any, _isPublishLoadInvalid = false) {\r\n\r\n        const drsFormArray = _trip.controls['DeliveryRequests'] as FormArray;\r\n        let drs = drsFormArray.value || [];\r\n        drs = sortArrayTwice(drs, 'JobId', 'ProductSequence');\r\n        drsFormArray.patchValue(drs);\r\n\r\n        this.dataService.setEditDeliveryGroupSubject({\r\n            trip: _trip,\r\n            shiftIndex: _shiftIndex,\r\n            rowIndex: _rowIndex,\r\n            tripIndex: _tripIndex,\r\n            schedule: _schedule,\r\n            isPublishLoadInvalid: _isPublishLoadInvalid\r\n        });\r\n    }\r\n\r\n    private cancelCreateLoad(data: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + data.ShiftIndex + '.Schedules.' + data.RowIndex + '.Trips.' + data.ColIndex) as FormGroup;\r\n        if (trip) {\r\n            let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n            if (_drArray) {\r\n                data.Drs.forEach(x => {\r\n                    let drIndex = _drArray.controls.findIndex((y: FormGroup) => y.controls['Id'].value == x.Id);\r\n                    if (drIndex >= 0) {\r\n                        _drArray.removeAt(drIndex);\r\n                    }\r\n                });\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setRestoreDeletedRequestSubject(data.Drs);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    private updateTripOnCreateLoadSucess(data: any): void {\r\n        let schedule = this.SbForm.get('Shifts.' + data.ShiftIndex + '.Schedules.' + data.RowIndex) as FormGroup;\r\n        let trip = schedule.get('Trips.' + data.ColIndex) as FormGroup;\r\n        if (trip && data.Drs.length > 0) {\r\n            data.Drs.forEach(t => t.Status = 5);\r\n            let groupParentDrs = data.Drs.filter(x => x.GroupParentDRId != '').length;\r\n            let jobId = data.Drs[0].JobId;\r\n            let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n            if (_drArray) {\r\n                let existingDrsIndexes = [];\r\n                let existingDrs = _drArray.controls.filter((x: FormGroup, index: number) => {\r\n                    let groupParentDRId = x.controls['GroupParentDRId'].value;\r\n                    let drId = x.controls['Id'].value;\r\n                    if (groupParentDrs > 0) {\r\n                        if (data.Drs.find(x => x.GroupParentDRId == groupParentDRId && x.Id == drId)) {\r\n                            existingDrsIndexes.push(index);\r\n                        }\r\n                    }\r\n                    else if (x.controls['JobId'].value == jobId && (x.controls['Status'].value == 0 || x.controls['Status'].value == 1 || x.controls['Status'].value == 2 || x.controls['Status'].value == 5)) {\r\n                        existingDrsIndexes.push(index);\r\n                    }\r\n                    return x.controls['JobId'].value == jobId;\r\n                });\r\n                for (let index = existingDrsIndexes.length - 1; index >= 0; index--) {\r\n                    _drArray.removeAt(existingDrsIndexes[index]);\r\n                }\r\n                let isCommonPickup = trip.controls['IsCommonPickup'].value as boolean;\r\n                if (existingDrsIndexes.length > 0 && _drArray.controls.length > 0) {\r\n                    for (let index = data.Drs.length - 1; index >= 0; index--) {\r\n                        let _drForm = this.utilService.getDeliveryRequestForm(data.Drs[index], isCommonPickup);\r\n                        _drArray.insert(existingDrsIndexes[0], _drForm);\r\n                    }\r\n                } else {\r\n                    for (let index = 0; index < data.Drs.length; index++) {\r\n                        let _drForm = this.utilService.getDeliveryRequestForm(data.Drs[index], isCommonPickup);\r\n                        _drArray.push(_drForm);\r\n                    }\r\n                }\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n            this.addNewDrsInDataService(jobId, data);\r\n        }\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        // if (trip && data.Drs) {\r\n        //    this.editDroppedGroup(trip, data.ShiftIndex, data.RowIndex, data.ColIndex, schedule, false);\r\n        //}\r\n    }\r\n\r\n    private addNewDrsInDataService(jobId: number, data): void {\r\n        let AllDrs = this.dataService.AllDeliveryRequestsSubject.value as DeliveryRequestViewModel[];\r\n        //let drsToRemove = AllDrs.filter(t => t.JobId == jobId);\r\n        let subDRs = AllDrs.filter(t => t.GroupParentDRId && t.GroupParentDRId != '' && t.JobId == jobId);\r\n        let subJobDRs = AllDrs.filter(t => t.GroupParentDRId == '' && t.JobId == jobId);\r\n        AllDrs = AllDrs.filter(t => t.JobId != jobId);\r\n        AllDrs = AllDrs.concat(data.Drs);\r\n        AllDrs = AllDrs.concat(subDRs);\r\n        if (subDRs.length > 0) {\r\n            AllDrs = AllDrs.concat(subJobDRs);\r\n        }\r\n        this.dataService.setAllDeliveryRequestsSubject(AllDrs);\r\n        //this.dataService.setRemoveDroppedRequestSubject(drsToRemove);\r\n    }\r\n\r\n    private setUnsavedChanges(): void {\r\n        if (this.driverSchedules) {\r\n            this.driverSchedules.forEach(x => x.unsubscribeFormChange());\r\n        }\r\n    }\r\n\r\n    private getPreloadDrViewModel(preLoadInfo: any, drIds: any, shiftEndDate: string): PreLoadDrViewModel {\r\n        var model = new PreLoadDrViewModel();\r\n        model.PreloadDrs = drIds;\r\n        model.PreloadTrailers = preLoadInfo.PreloadTrailers;\r\n        model.PreloadDrivers = preLoadInfo.PreloadDrivers;\r\n        model.IsTrailerExists = preLoadInfo.IsTrailerExists;\r\n        model.RegionId = this.SbForm.controls['RegionId'].value;\r\n        model.SbView = this.SbForm.controls['ObjectFilter'].value;\r\n        model.ShiftEndDate = shiftEndDate;\r\n        model.ShiftId = preLoadInfo.ShiftId;\r\n        model.SbDsbView = this.SbForm.controls['DSBFilter'].value;\r\n        return model;\r\n    }\r\n\r\n    private getModifiedLoadTripInfo(loadInfo: any): any {\r\n        let _modifiedTripInfo = new ModifiedTripInfo();\r\n        _modifiedTripInfo.ShiftIndex = loadInfo.ShiftIndex;\r\n        _modifiedTripInfo.DriverRowIndex = loadInfo.ScheduleIndex;\r\n        _modifiedTripInfo.DriverColIndex = loadInfo.TripIndex;\r\n        return _modifiedTripInfo;\r\n    }\r\n\r\n    private createPreloadForAcrossTheDate(preLoadInfo: any, shiftEndDate: string): void {\r\n        // shift cross the date, need to create a draft schedule builder (or update existing)\r\n        var model = this.getPreloadDrViewModel(preLoadInfo, preLoadInfo.PreloadDrs, shiftEndDate);\r\n        this._savingBuilder = true;\r\n        this.sbService.createPreloadForAcrossTheDate(model).subscribe(data => {\r\n            if (data == null) {\r\n                Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            } else if (data.StatusCode == 0) {\r\n                this.updateAcrossTheDateDrsPreloadInfo(preLoadInfo, data);\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            } else {\r\n                this._savingBuilder = false;\r\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n            }\r\n            if (data.StatusCode == 0) {\r\n                let _modifiedTripInfo = this.getModifiedLoadTripInfo(preLoadInfo);\r\n                this.saveScheduleBuilderData([_modifiedTripInfo], false);\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    private createPreloadForSameDate(preLoadInfo: any, shifts: any, shiftEndDate: string): void {\r\n        let postLoadInfo = this.getShiftInfoWithDriverTrailerInOtherShift(preLoadInfo, shifts);\r\n        if (postLoadInfo == undefined) {\r\n            if (preLoadInfo.IsTrailerExists) {\r\n                let trailerNames = preLoadInfo.PreloadTrailers.map(t => t.TrailerId).join(\", \");\r\n                trailerNames = preLoadInfo.PreloadTrailers.length > 1 ? 'trailers ' + trailerNames + ' are' : 'trailer ' + trailerNames + ' is'\r\n                Declarations.msgerror('Preload can not be done as ' + trailerNames + ' not assigned to any other shift', undefined, undefined);\r\n            } else {\r\n                Declarations.msgerror('Preload can not be done as driver is not assigned to any other shift', undefined, undefined);\r\n            }\r\n        } else {\r\n            this._savingBuilder = true;\r\n            let drIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            this.sbService.cloneDrsForPreload(drIds).subscribe(data => {\r\n                if (data == null) {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                } else if (data.length > 0) {\r\n                    postLoadInfo[\"PostloadDrs\"] = data;\r\n                    this.updatePreloadDrsOnSuccess(preLoadInfo, postLoadInfo);\r\n                    Declarations.msgsuccess('Preload created successfully for the date ' + shiftEndDate, undefined, undefined);\r\n\r\n                    let _modifiedPreloadTripInfo = this.getModifiedLoadTripInfo(preLoadInfo);\r\n                    let _modifiedPostloadTripInfo = this.getModifiedLoadTripInfo(postLoadInfo);\r\n                    this.saveScheduleBuilderData([_modifiedPreloadTripInfo, _modifiedPostloadTripInfo], false);\r\n\r\n                    this.dataService.setDeliveryPreloadOption({ ShiftIndex: preLoadInfo.ShiftIndex, ScheduleIndex: preLoadInfo.ScheduleIndex, Reset: false });\r\n                } else {\r\n                    Declarations.msgsuccess('Failed to create preload. Please contact the administrator.', undefined, undefined);\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n\r\n    public onPreloadTrailerChange(event: any): void {\r\n        let trailerId = event.target.value;\r\n        if (trailerId) {\r\n            this.preloadSelectedTrailerId = trailerId;\r\n        }\r\n    }\r\n\r\n    public onPreloadTrailerSubmit(): void {\r\n        if (this.preloadSelectedTrailerId) {\r\n            Declarations.hideModal(\"#select-preload-trailer\");\r\n            let selectedTrailer = this.PreLoadInfo.PreloadTrailers.find(x => x.Id == this.preloadSelectedTrailerId);\r\n            this.PreLoadInfo.PreloadTrailers = [selectedTrailer];\r\n            this.processPreloadDeliveryCreation(this.PreLoadInfo);\r\n            this.preloadSelectedTrailerId = null;\r\n        }\r\n    }\r\n\r\n    private processPreloadDeliveryCreation(preLoadInfo: any): void {\r\n        let shifts = this.SbForm.controls['Shifts'].value as ScheduleShiftModel[];\r\n        let preloadShift = shifts.find(x => x.Id == preLoadInfo.ShiftId) as ScheduleShiftModel;\r\n        let result = this.isAcrossTheDateShift(preloadShift);\r\n        if (result.IsAcrossTheDateShift) {\r\n            // shift cross the date, need to create a draft schedule builder (or update existing)\r\n            this.createPreloadForAcrossTheDate(preLoadInfo, result.ShiftEndDate);\r\n        } else {\r\n            // shift is ending in same date, so search for same trailers\r\n            this.createPreloadForSameDate(preLoadInfo, shifts, result.ShiftEndDate);\r\n        }\r\n    }\r\n\r\n    private isAcrossTheDateShift(preloadShift: ScheduleShiftModel): any {\r\n        let shiftStartTime = preloadShift.StartTime;\r\n        let shifEndTime = preloadShift.EndTime;\r\n        let dsbDate = this.SbForm.controls['Date'].value;\r\n        let startDate = moment(dsbDate + ' ' + shiftStartTime).toDate();\r\n        let endDate = moment(dsbDate + ' ' + shifEndTime).toDate();\r\n        if (startDate > endDate) {\r\n            endDate.setDate(endDate.getDate() + 1);\r\n        }\r\n        let shiftEndDate = moment(endDate).format('MM/DD/YYYY');\r\n        let _isAcrossTheDateShift = dsbDate != shiftEndDate;\r\n        return {\r\n            IsAcrossTheDateShift: _isAcrossTheDateShift,\r\n            ShiftEndDate: shiftEndDate\r\n        };\r\n    }\r\n\r\n    private validateTrips(_unsavedChanges: ModifiedTripInfo[]) {\r\n        var isValidTrips = true;\r\n        _unsavedChanges.forEach(t => {\r\n            let schedule = this.SbForm.get('Shifts.' + t.ShiftIndex + '.Schedules.' + t.DriverRowIndex) as FormGroup;\r\n            var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n            if (trip.get('GroupId').value > 0) {\r\n                if (!trip.valid) {\r\n                    if (trip.get('DeliveryRequests').value.length > 0) {\r\n                        //log max fill validation issue.\r\n                        this.logDRMaxFillIssue(trip);\r\n                        this.editExisingGroup(trip, t.ShiftIndex, t.DriverRowIndex, t.DriverColIndex, schedule, true);\r\n                        this.dataService.setShowOpenedDeliveryGroupSubject(true);\r\n                        isValidTrips = false;\r\n                        return isValidTrips;\r\n                    }\r\n                }\r\n            }\r\n            else if (trip.invalid && trip.get('DeliveryRequests').value.length > 0) {\r\n                //log max fill validation issue.\r\n                this.logDRMaxFillIssue(trip);\r\n            }\r\n\r\n        });\r\n        return isValidTrips;\r\n    }\r\n\r\n    public saveScheduleBuilderData(_unsavedChanges: ModifiedTripInfo[], isDateChange: boolean) {\r\n        if (_unsavedChanges.length > 0) {\r\n            var isValidTrips = this.validateTrips(_unsavedChanges);\r\n            if (!isValidTrips) {\r\n                return;\r\n            }\r\n            this._savingBuilder = true;\r\n            var isPublish = false;\r\n            var trips = [];\r\n            var dataToSave = this.getDSBSaveModel();\r\n            _unsavedChanges.forEach(t => {\r\n                let schedule = this.SbForm.get('Shifts.' + t.ShiftIndex + '.Schedules.' + t.DriverRowIndex) as FormGroup;\r\n                var trip = schedule.get('Trips.' + t.DriverColIndex) as FormGroup;\r\n                trips.push(trip);\r\n                var tripModel = trip.value;\r\n                if (trip.controls['GroupId'].value > 0) {\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Published);\r\n                    this.setDeliveryRequestStatus(tripModel, DeliveryReqStatus.ScheduleCreated);\r\n                    isPublish = true;\r\n                }\r\n                else {\r\n                    this.setTripStatus(tripModel);\r\n                    this.setDeliveryGroupStatus(tripModel, DeliveryGroupStatus.Draft);\r\n                }\r\n\r\n                tripModel.Drivers = schedule.controls['Drivers'].value;\r\n                tripModel.Trailers = schedule.controls['Trailers'].value;\r\n                tripModel.IsIncludeAllRegionDriver = schedule.controls['IsIncludeAllRegionDriver'].value;\r\n                dataToSave.Trips.push(tripModel);\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.dataService.setShowDeliveryGroupSubject(false);\r\n            if (dataToSave.Trips.length > 0) {\r\n                if (isPublish) {\r\n                    dataToSave.Status = 3;\r\n                    this.sbService.publishDriverView(dataToSave).subscribe(data => {\r\n                        this._savingBuilder = false;\r\n                        this.updateLoadForm(data, trips, isDateChange);\r\n                    });\r\n                }\r\n                else {\r\n                    dataToSave.Status = 1;\r\n                    this.sbService.saveDriverView(dataToSave).subscribe(data => {\r\n                        this._savingBuilder = false;\r\n                        this.updateLoadForm(data, trips, isDateChange);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getShiftInfoWithDriverTrailerInOtherShift(data: any, allShifts: ScheduleShiftModel[]): any {\r\n        let shiftWithSameDriverTrailer = undefined;\r\n        for (var shiftIdx = data.ShiftIndex + 1; shiftIdx < allShifts.length; shiftIdx++) {\r\n            let schedules = allShifts[shiftIdx].Schedules;\r\n            for (var scheduleIdx = 0; scheduleIdx < schedules.length; scheduleIdx++) {\r\n                shiftWithSameDriverTrailer = this.getMatchedDriverTrailerInfo(data, allShifts, shiftIdx, scheduleIdx);\r\n                if (shiftWithSameDriverTrailer != undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            if (shiftWithSameDriverTrailer != undefined) {\r\n                break;\r\n            }\r\n        }\r\n        return shiftWithSameDriverTrailer;\r\n    }\r\n\r\n    private getMatchedDriverTrailerInfo(data: any, allShifts: ScheduleShiftModel[], shiftIdx: number, scheduleIdx: number): any {\r\n        let shiftWithSameTrailer = undefined;\r\n        let schedules = allShifts[shiftIdx].Schedules;\r\n        let matchedDriverTrailers = [];\r\n        if (data.IsTrailerExists) {\r\n            matchedDriverTrailers = schedules[scheduleIdx].Trailers.filter(this.IdInComparer(data.PreloadTrailers));\r\n        } else {\r\n            matchedDriverTrailers = schedules[scheduleIdx].Drivers.filter(this.IdInComparer(data.PreloadDrivers));\r\n        }\r\n        if (matchedDriverTrailers.length > 0) {\r\n            shiftWithSameTrailer = {\r\n                Shift: allShifts[shiftIdx],\r\n                ShiftIndex: shiftIdx,\r\n                ShiftId: allShifts[shiftIdx].Id,\r\n                Schedule: schedules[scheduleIdx],\r\n                ScheduleIndex: scheduleIdx,\r\n                TripIndex: 0\r\n            };\r\n        }\r\n        return shiftWithSameTrailer;\r\n    }\r\n\r\n    IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length > 0;\r\n        }\r\n    }\r\n\r\n    private updatePreloadDrsOnSuccess(preLoadInfo: any, postLoadInfo: any): void {\r\n        this.updatePostLoadedForIds(preLoadInfo, postLoadInfo);\r\n        this.updatePreloadDrs(preLoadInfo, postLoadInfo);\r\n        this.updatePostloadDrs(preLoadInfo, postLoadInfo);\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n\r\n    private updatePostLoadedForIds(preLoadInfo: any, postLoadInfo: any): void {\r\n        preLoadInfo.PreloadDrs.forEach(x => {\r\n            var postLoadedDr = postLoadInfo.PostloadDrs.find(y => y.PostLoadedFor == x.Id);\r\n            if (postLoadedDr) {\r\n                x['PreLoadedFor'] = postLoadedDr.Id;\r\n            }\r\n        });\r\n    }\r\n\r\n    private updatePreloadDrs(preLoadInfo: any, postLoadInfo: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + preLoadInfo.ShiftIndex + '.Schedules.' + preLoadInfo.ScheduleIndex + '.Trips.' + preLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let preloadDrIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            let preloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            let drsToUpdate = preloadDrs.controls.filter((x: FormGroup) => preloadDrIds.indexOf(x.controls['Id'].value) >= 0) as FormGroup[];\r\n            drsToUpdate.forEach((x: FormGroup) => {\r\n                let postLoadDr = postLoadInfo.PostloadDrs.find(y => y.PostLoadedFor == x.controls['Id'].value);\r\n                if (postLoadDr) { //Add post load refernce to preload DRs\r\n                    x.addControl('PreLoadedFor', this.fb.control(postLoadDr.Id));\r\n                    x.addControl('PostLoadInfo', this.utilService.getLoadInfoForm({\r\n                        ShiftId: postLoadInfo.ShiftId,\r\n                        ScheduleIndex: postLoadInfo.ScheduleIndex,\r\n                        TripIndex: postLoadInfo.TripIndex,\r\n                        DrId: postLoadDr.Id\r\n                    }));\r\n                    x.controls['ScheduleStatus'].patchValue(15);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private updatePostloadDrs(preLoadInfo: any, postLoadInfo: any): void {\r\n        let trip = this.SbForm.get('Shifts.' + postLoadInfo.ShiftIndex + '.Schedules.' + postLoadInfo.ScheduleIndex + '.Trips.' + postLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let postloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            for (var index = postLoadInfo.PostloadDrs.length - 1; index >= 0; index--) {\r\n                postLoadInfo.PostloadDrs[index].Status = 5; // New DR\r\n                postLoadInfo.PostloadDrs[index].ScheduleStatus = 14; // New DR\r\n                let preLoadDr = preLoadInfo.PreloadDrs.find(y => y.PreLoadedFor == postLoadInfo.PostloadDrs[index].Id);\r\n                let postLoadDr = this.utilService.getDeliveryRequestForm(postLoadInfo.PostloadDrs[index], false);\r\n                postLoadDr.patchValue({\r\n                    Terminal: preLoadDr.Terminal,\r\n                    BulkPlant: preLoadDr.BulkPlant,\r\n                    OrderId: preLoadDr.OrderId,\r\n                    PickupLocationType: preLoadDr.PickupLocationType\r\n                });\r\n                //Add pre load refernce to postload DRs\r\n                postLoadDr.addControl('PreLoadInfo', this.utilService.getLoadInfoForm({\r\n                    ShiftId: preLoadInfo.ShiftId,\r\n                    ScheduleIndex: preLoadInfo.ScheduleIndex,\r\n                    TripIndex: preLoadInfo.TripIndex,\r\n                    DrId: preLoadDr.Id\r\n                }));\r\n                postloadDrs.insert(0, postLoadDr);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateAcrossTheDateDrsPreloadInfo(preLoadInfo: any, data: PreLoadDrResponseViewModel): void {\r\n        let trip = this.SbForm.get('Shifts.' + preLoadInfo.ShiftIndex + '.Schedules.' + preLoadInfo.ScheduleIndex + '.Trips.' + preLoadInfo.TripIndex) as FormGroup;\r\n        if (trip) {\r\n            let preloadDrIds = preLoadInfo.PreloadDrs.map(t => t.Id);\r\n            let preloadDrs = trip.controls['DeliveryRequests'] as FormArray;\r\n            let drsToUpdate = preloadDrs.controls.filter((x: FormGroup) => preloadDrIds.indexOf(x.controls['Id'].value) >= 0) as FormGroup[];\r\n            drsToUpdate.forEach((x: FormGroup) => {\r\n                let preLoadDrModel = data.PreloadDrs.find(y => y.Id == x.controls['Id'].value);\r\n                if (preLoadDrModel) { //Add post load refernce to preload DRs\r\n                    x.addControl('PreLoadedFor', this.fb.control(preLoadDrModel.PreLoadedForId));\r\n                    x.controls['ScheduleStatus'].patchValue(15);\r\n                    trip.controls['TripStatus'].patchValue(TripStatus.Modified);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateEditedPostloadDrs(drs: DeliveryRequestViewModel[]): void {\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        drs.forEach(x => {\r\n            let postLoadInfo = x.PostLoadInfo;\r\n            if (postLoadInfo) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == postLoadInfo.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + postLoadInfo.ScheduleIndex + \".Trips.\" + postLoadInfo.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        let thisDr = thisTrip.controls['DeliveryRequests']['controls'].find((d: FormGroup) => d.controls['Id'].value == postLoadInfo.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            let updatedValues = {\r\n                                RequiredQuantity: x.RequiredQuantity,\r\n                                ScheduleStatus: 15,\r\n                                Terminal: x.Terminal == undefined ? new DropdownItem() : x.Terminal,\r\n                                BulkPlant: x.BulkPlant == undefined ? new DropAddressModel : x.BulkPlant,\r\n                                OrderId: x.OrderId\r\n                            };\r\n                            if (!thisDr.controls['IsCommonBadge'].value && !x.IsCommonBadge) {\r\n                                updatedValues['BadgeNo1'] = x.BadgeNo1 == null ? \"\" : x.BadgeNo1;\r\n                                updatedValues['BadgeNo2'] = x.BadgeNo2 == null ? \"\" : x.BadgeNo2;\r\n                                updatedValues['BadgeNo3'] = x.BadgeNo3 == null ? \"\" : x.BadgeNo3;\r\n                                updatedValues['DispactherNote'] = x.DispactherNote == null ? \"\" : x.DispactherNote;\r\n                            }\r\n                            thisDr.patchValue(updatedValues);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    private updateCompartmentPostloadDrs(drs: DeliveryRequestViewModel[], prepostloadStatus: number): void {\r\n        var posttripInfo = null;\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        drs.forEach(x => {\r\n            let postLoadInfo = null;\r\n            if (prepostloadStatus == 1) {\r\n                postLoadInfo = x.PostLoadInfo;\r\n            }\r\n            else {\r\n                postLoadInfo = x.PreLoadInfo;\r\n            }\r\n            if (postLoadInfo) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == postLoadInfo.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + postLoadInfo.ScheduleIndex + \".Trips.\" + postLoadInfo.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        posttripInfo = new ModifiedTripInfo();\r\n                        posttripInfo.ShiftIndex = thisTrip['controls']['ShiftIndex'].value;\r\n                        posttripInfo.DriverRowIndex = thisTrip['controls']['DriverRowIndex'].value;\r\n                        posttripInfo.DriverColIndex = thisTrip['controls']['DriverColIndex'].value;\r\n                        let thisDr = thisTrip.controls['DeliveryRequests']['controls'].find((d: FormGroup) => d.controls['Id'].value == postLoadInfo.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            let compartmentInfo = x.Compartments;\r\n                            let compartmentArray = thisDr.get('Compartments') as FormArray;\r\n                            let prevCompartment = compartmentArray.getRawValue();\r\n                            compartmentArray.clear();\r\n                            let disabledControl = false;\r\n                            if (x.TrackScheduleEnrouteStatus == 16 || x.TrackScheduleStatus == 7 || x.TrackScheduleStatus == 8 || x.TrackScheduleStatus == 9) {\r\n                                disabledControl = true;\r\n                            }\r\n                            for (var i = 0; i < compartmentInfo.length; i++) {\r\n                                if (prevCompartment.length > 0) {\r\n                                    var trailerExists = prevCompartment.find(top => top.TrailerId == compartmentInfo[i].TrailerId);\r\n                                    if (trailerExists) {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                    else {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (compartmentInfo[i].TrailerId != null && compartmentInfo[i].CompartmentId != null) {\r\n                                        compartmentArray.push(this.utilService.getCompartmentsFormGroup(x, compartmentInfo[i], disabledControl));\r\n                                    }\r\n                                }\r\n                            }\r\n                            for (var i = 0; i < compartmentInfo.length; i++) {\r\n\r\n                            }\r\n                            window.setTimeout(() => { this.validateDrQuantity(thisDr.controls['RequiredQuantity']); }, 1);\r\n                            thisDr.controls['ScheduleStatus'].patchValue(15);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n        return posttripInfo;\r\n\r\n    }\r\n    private deletePreAndPostloadDrs(drs: DeliveryRequestViewModel[]): void {\r\n        let drsToRestore = [];\r\n        let _shiftArray = this.SbForm.controls['Shifts'] as FormArray;\r\n        let postloadInfo = drs.filter(t => t.PostLoadInfo).map(m => m.PostLoadInfo);\r\n        let preloadInfo = drs.filter(t => t.PreLoadInfo).map(m => m.PreLoadInfo);\r\n        let prepostloadInfo = postloadInfo.concat(preloadInfo);\r\n        prepostloadInfo = prepostloadInfo.filter((value, index, self) => self.indexOf(value) === index);\r\n        prepostloadInfo.forEach(x => {\r\n            if (x) {\r\n                let thisShift = _shiftArray.controls.find((s: FormGroup) => s.controls['Id'].value == x.ShiftId) as FormGroup;\r\n                if (thisShift) {\r\n                    let thisTrip = thisShift.get('Schedules.' + x.ScheduleIndex + \".Trips.\" + x.TripIndex) as FormGroup;\r\n                    if (thisTrip) {\r\n                        let _drArray = thisTrip.controls['DeliveryRequests'] as FormArray;\r\n                        let thisDr = _drArray.controls.find((d: FormGroup) => d.controls['Id'].value == x.DrId) as FormGroup;\r\n                        if (thisDr) {\r\n                            _drArray.removeAt(_drArray.controls.indexOf(thisDr));\r\n                            if (!thisDr.controls['PostLoadedFor'] || !thisDr.controls['PostLoadedFor'].value) {\r\n                                thisDr.value.Compartments = [];\r\n                                drsToRestore.push(thisDr.value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n        if (drsToRestore && drsToRestore.length > 0) {\r\n            this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n        }\r\n    }\r\n\r\n    private editCompartmentAssignments(model: any): void {\r\n        this.CompartmentDetails = [];\r\n        this.CompartmentEditModel = model;\r\n        let trailerIds = this.CompartmentEditModel.Schedule.Trailers.map(t => t.Id);\r\n        let selectedTrailerId = 'null';\r\n        if (trailerIds.length == 1) {\r\n            selectedTrailerId = trailerIds[0];\r\n        }\r\n        this.CompartmentViewFormGroup = this.utilService.getCompartmentViewForm(this.CompartmentEditModel.Schedule.Trips, selectedTrailerId);\r\n        this._loadingCmprts = true;\r\n        this.sbService.getTrailerCompartments(trailerIds).subscribe(data => {\r\n            this._loadingCmprts = false;\r\n            if (data) {\r\n                this.TrailerCompartmentRetains = data;\r\n                for (var idx = 0; idx < data.length; idx++) {\r\n                    if (data[idx].IsCompartmentAvailable) {\r\n                        this.TrailerCompartments[data[idx].TrailerId] = data[idx].Compartments;\r\n                    }\r\n                }\r\n                this.intializeTrailerRetainVal(trailerIds);\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n\r\n        });\r\n    }\r\n    intializeTrailerRetainVal(trailerIds: []) {\r\n        if (trailerIds.length > 0) {\r\n            var tripsArray = this.CompartmentViewFormGroup.controls['Trips'] as FormArray;\r\n            tripsArray.controls.forEach((trips: FormGroup) => {\r\n                var deliveryReqArray = trips.controls['DeliveryRequests'] as FormArray;\r\n                deliveryReqArray.controls.forEach((delReq: FormGroup) => {\r\n                    var compartmentInfo = delReq.controls['Compartments'] as FormArray;\r\n                    if (compartmentInfo.length == 1) {\r\n                        compartmentInfo.controls.forEach((comp: FormGroup) => {\r\n                            var compTrailerId = comp.controls[\"TrailerId\"].value;\r\n                            var compQuantity = comp.controls[\"Quantity\"].value;\r\n                            var trailerExists = this.TrailerCompartmentRetains.find(x => x.TrailerId == compTrailerId);\r\n                            if (trailerExists != null && trailerExists.IsCompartmentAvailable == false) {\r\n                                if (compQuantity <= 0) {\r\n                                    this.getRetainTrailerInfo(comp, delReq);\r\n                                }\r\n\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n    }\r\n    public addCompartment(dr: FormGroup, trailerId: string): void {\r\n        let compartments = dr.controls['Compartments'] as FormArray;\r\n        if (!trailerId) {\r\n            let trailerIds = this.CompartmentEditModel.Schedule.Trailers.map(t => t.Id);\r\n            trailerId = trailerIds[0];\r\n        }\r\n        let model = new CompartmentModel();\r\n        model.TrailerId = trailerId;\r\n        let newComp = this.utilService.getCompartmentsFormGroup(dr.value, model, false);\r\n        compartments.push(newComp);\r\n    }\r\n\r\n    public removeCompartment(dr: FormGroup, index: number): void {\r\n        let compartments = dr.controls['Compartments'] as FormArray;\r\n        compartments.removeAt(index);\r\n        window.setTimeout(() => { this.validateDrQuantity(dr.controls['RequiredQuantity']); }, 1);\r\n    }\r\n\r\n    public saveCompartmentAssignment(): void {\r\n        let trips = this.CompartmentViewFormGroup.controls['Trips'] as FormArray;\r\n        trips.controls.forEach((x: FormGroup) => {\r\n            if (!x.valid) {\r\n                var delRequest = x.controls[\"DeliveryRequests\"] as FormArray;\r\n                delRequest.controls.forEach((_drForm: FormGroup) => {\r\n                    let isRetainFuelLoaded = _drForm.controls['IsRetainFuelLoaded'].value;\r\n                    let compartments = _drForm.controls[\"Compartments\"] as FormArray;\r\n                    compartments.controls.forEach((comp: FormGroup) => {\r\n                        let compId = comp.get('CompartmentId').value;\r\n                        if (compId == null || compId == '') {\r\n                            comp.get('CompartmentId').setValidators(null);\r\n                            comp.get('CompartmentId').updateValueAndValidity();\r\n                            comp.get('Quantity').setValidators(null);\r\n                            comp.get('Quantity').updateValueAndValidity();\r\n                        }\r\n                        else if (isRetainFuelLoaded) {\r\n                            comp.get('Quantity').setValidators(null);\r\n                            comp.get('Quantity').updateValueAndValidity();\r\n                        }\r\n                    });\r\n                });\r\n                x.markAllAsTouched();\r\n            }\r\n        });\r\n        this.CompartmentViewFormGroup.markAllAsTouched();\r\n        if (this.CompartmentViewFormGroup.invalid) {\r\n            Declarations.msgerror('Please resolve highlighted errors', undefined, undefined);\r\n            return;\r\n        } else {\r\n            let modifiedTrips = this.setCompartmentInfoToRow();\r\n            if (modifiedTrips.length > 0) {\r\n                this.saveScheduleBuilderData(modifiedTrips, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setCompartmentInfoToRow(): ModifiedTripInfo[] {\r\n        let modifiedTrips = [];\r\n        let shiftIndex = this.CompartmentEditModel.ShiftIndex;\r\n        let rowIndex = this.CompartmentEditModel.RowIndex;\r\n        let targetRow = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        if (targetRow) {\r\n            let sourceLoads = this.CompartmentViewFormGroup.controls['Trips']['controls'];\r\n            let targetLoads = targetRow.controls['Trips']['controls'];\r\n            for (var loadIdx = 0; loadIdx < targetLoads.length; loadIdx++) {\r\n                let sourceLoad = sourceLoads[loadIdx];\r\n                let targetLoad = targetLoads[loadIdx];\r\n                let sourceDrs = sourceLoad['controls']['DeliveryRequests']['controls'];\r\n                let targetDrs = targetLoad['controls']['DeliveryRequests']['controls'];\r\n                let tripInfo = null;\r\n                for (var drIdx = 0; drIdx < targetDrs.length; drIdx++) {\r\n                    let sourceDr = sourceDrs[drIdx];\r\n                    let compartments = sourceDr['controls'].Compartments.getRawValue();\r\n                    let targetDr = targetDrs[drIdx] as FormGroup;\r\n                    let targetDrCompArray = targetDr.controls['Compartments'] as FormArray;\r\n\r\n                    let delRequestUpdate = this.checkDeliveryRequestStatus(targetDr.controls['TrackScheduleStatus'].value, targetDr.controls['TrackScheduleEnrouteStatus'].value);\r\n                    if (delRequestUpdate == false) {\r\n                        targetDrCompArray.clear();\r\n                        for (var cIdx = 0; cIdx < compartments.length; cIdx++) {\r\n                            let compartment = compartments[cIdx];\r\n                            targetDrCompArray.push(this.utilService.getCompartmentsFormGroupForDR(compartment));\r\n                            if (sourceDr['controls'].IsRetainFuelLoaded.value && sourceDr['controls'].PostLoadedFor) {\r\n                                targetDr.controls[\"IsRetainFuelLoaded\"].patchValue(sourceDr['controls'].IsRetainFuelLoaded.value);\r\n                                this.setDrValues(targetDr, sourceDr['controls'].RequiredQuantity.value, 1);\r\n                                this.setPostLoadedFor(targetDr, sourceDr['controls'].PostLoadedFor.value);\r\n                                this.setDrPickupLocation(targetDr, sourceDr.value);\r\n                            }\r\n                            targetDr.controls['ScheduleStatus'].patchValue(15);\r\n                            tripInfo = new ModifiedTripInfo();\r\n                            tripInfo.ShiftIndex = targetLoad['controls']['ShiftIndex'].value;\r\n                            tripInfo.DriverRowIndex = targetLoad['controls']['DriverRowIndex'].value;\r\n                            tripInfo.DriverColIndex = targetLoad['controls']['DriverColIndex'].value;\r\n                        }\r\n                    }\r\n                }\r\n                if (tripInfo) {\r\n                    modifiedTrips.push(tripInfo);\r\n                }\r\n                var pretripInfo = this.intializePrePostLoadCompartmentInfo(targetLoad, 1);\r\n                if (pretripInfo) {\r\n                    modifiedTrips.push(pretripInfo);\r\n                }\r\n                //var posttripInfo = this.intializePreLoadCompartmentInfo(targetLoad); // not required - due to not provide edit value on postload DR.\r\n                //if (posttripInfo) {\r\n                //    modifiedTrips.push(posttripInfo);\r\n                //}\r\n            }\r\n            Declarations.closeSlidePanel();\r\n        }\r\n        return modifiedTrips;\r\n    }\r\n\r\n    validateDrQuantity(drQty: any): void {\r\n        drQty.updateValueAndValidity();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    trackByShiftId(index: number, shift: any): any {\r\n        return shift.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByScheduleIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByTripIndex(index: number, schedule: any): any {\r\n        return index;\r\n    }\r\n\r\n    trackByDrId(index: number, dr: any): any {\r\n        return dr.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByDriverId(index: number, driver: any): any {\r\n        return driver.controls[\"Id\"].value;\r\n    }\r\n\r\n    trackByTrailerId(index: number, trailer: any): any {\r\n        return trailer.controls[\"TrailerId\"].value;\r\n    }\r\n\r\n    intializePrePostLoadCompartmentInfo(targetLoad: any, prepostDRStatus: number) {\r\n        var tripInfo = null;\r\n        let updatedPrePostloadedDrs = targetLoad['controls']['DeliveryRequests'].value;\r\n        if (updatedPrePostloadedDrs.length > 0) {\r\n            var prepostloadedDrsStatus = null;\r\n            if (prepostDRStatus) {\r\n                prepostloadedDrsStatus = updatedPrePostloadedDrs.filter(x => x.PostLoadInfo);\r\n            }\r\n            else {\r\n                prepostloadedDrsStatus = updatedPrePostloadedDrs.filter(x => x.PreLoadInfo);\r\n            }\r\n            if (prepostloadedDrsStatus.length > 0) {\r\n                tripInfo = this.updateCompartmentPostloadDrs(prepostloadedDrsStatus, prepostDRStatus);\r\n            }\r\n        }\r\n        return tripInfo;\r\n    }\r\n\r\n    public TrailerRetainDetails(TrailerId: string) {\r\n        var Id = [TrailerId];\r\n        this.CompartmentDetails = [];\r\n        this._loadingCmprts = true;\r\n        this.sbService.getTrailerFuelRetain(Id).subscribe(data => {\r\n            this.CompartmentDetails = data;\r\n            this._loadingCmprts = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    public closeRetainInfo(): void {\r\n        this.CompartmentDetails = [];\r\n    }\r\n\r\n    GetfuelRetainDetails(trailerIds: any[]): void {\r\n        this.sbService.getTrailerFuelRetain(trailerIds).subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n                var trailerFuelRetainInfo = data as TrailerFuelRetainModel[];\r\n                var trailerNames = '';\r\n                trailerFuelRetainInfo.forEach(x => {\r\n                    if (trailerNames == '') {\r\n                        trailerNames = x.TrailerId;\r\n                    }\r\n                    else {\r\n                        if (trailerNames.indexOf(x.TrailerId) == -1) {\r\n                            trailerNames = trailerNames + \", \" + x.TrailerId;\r\n                        }\r\n                    }\r\n                });\r\n                Declarations.msgwarning(\"There is some fuel retained in the \" + trailerNames + \".\", undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkIfTrailerFuelRetainExists(trailerId: string): boolean {\r\n        let status = false;\r\n        var trailerInfo = this.TrailerCompartmentRetains.find(x => x.TrailerId.toString() == trailerId);\r\n        if (trailerInfo != null) {\r\n            status = trailerInfo.IsFuelRetain;\r\n        }\r\n        return status;\r\n    }\r\n\r\n    checkDeliveryRequestStatus(delStatus: any, delEncStatus: any) {\r\n        if (delEncStatus == 16 || this.CompletedScheduleStatuses.filter(x => x == delStatus).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleFilldCompatible() {\r\n        this.SelectedTrailers = [];\r\n        this.UnassignedDrivers = [];\r\n        this.DriverTrailerForm.get('Driver').patchValue(null);\r\n        this.UnassignedTrailers = this.getUnassignedTrailers(this.selTrailerIndex, this.selTrailerlist)\r\n        this.UnassignedDrivers = this.getUnassignedDrivers(true);\r\n    }\r\n\r\n    getRetainCompartmentInfo(comp: FormGroup, dr: any) {\r\n        let compartmentCtrl = comp.value;\r\n        let delRequestCtrl = dr.value;\r\n        var fuelRetain = this.TrailerCompartmentRetains.find(x => x.IsFuelRetain == true && x.TrailerId == compartmentCtrl.TrailerId);\r\n        if (fuelRetain) {\r\n            var compartment = fuelRetain.Compartments.find(x => x.CompartmentId == compartmentCtrl.CompartmentId);\r\n            if (compartment && compartment.RetainInfo) {\r\n                comp.controls[\"Quantity\"].patchValue(compartment.RetainInfo.Quantity);\r\n                dr.controls[\"IsRetainFuelLoaded\"].patchValue(true);\r\n                let drQty = this.getDRTotalQuantity(dr);\r\n                this.setDrValues(dr, drQty, 1);\r\n                this.setPostLoadedFor(dr, compartment.RetainInfo.DeliveryReqId);\r\n                this.setDrPickupLocation(dr, {\r\n                    PickupLocationType: compartment.RetainInfo.PickupLocationType,\r\n                    Terminal: compartment.RetainInfo.TfxTerminal,\r\n                    BulkPlant: compartment.RetainInfo.TfxBulkPlant\r\n                });\r\n            } else {\r\n                comp.controls[\"Quantity\"].enable();\r\n                comp.controls[\"Quantity\"].patchValue(0);\r\n                this.resetQuantity(dr, delRequestCtrl);\r\n            }\r\n        } else {\r\n            this.resetQuantity(dr, delRequestCtrl);\r\n        }\r\n        delRequestCtrl = dr.value;\r\n        if (delRequestCtrl.ScheduleQuantityType <= 1) {\r\n            let quantityValidators = [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.min(0.00000001), Validators.max(delRequestCtrl.RequiredQuantity)];\r\n            comp.controls['Quantity'].setValidators(quantityValidators);\r\n            comp.updateValueAndValidity();\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    getRetainTrailerInfo(comp: FormGroup, dr: any) {\r\n        let compartmentCtrl = comp.value;\r\n        let delRequestCtrl = dr.value;\r\n        var fuelRetain = this.TrailerCompartmentRetains.find(x => x.IsFuelRetain == true && x.TrailerId == compartmentCtrl.TrailerId);\r\n        if (fuelRetain && fuelRetain.IsCompartmentAvailable == false && fuelRetain.IsFuelRetain) {\r\n            comp.controls[\"CompartmentId\"].disable();\r\n            comp.controls[\"Quantity\"].disable();\r\n            var compartment = fuelRetain.Compartments[0];\r\n            if (compartment && compartment.RetainInfo) {\r\n                comp.controls[\"Quantity\"].patchValue(compartment.RetainInfo.Quantity);\r\n                dr.controls[\"IsRetainFuelLoaded\"].patchValue(true);\r\n                this.setDrValues(dr, compartment.RetainInfo.Quantity, 1);\r\n                this.setPostLoadedFor(dr, compartment.RetainInfo.DeliveryReqId);\r\n                this.setDrPickupLocation(dr, {\r\n                    PickupLocationType: compartment.RetainInfo.PickupLocationType,\r\n                    Terminal: compartment.RetainInfo.TfxTerminal,\r\n                    BulkPlant: compartment.RetainInfo.TfxBulkPlant\r\n                });\r\n\r\n            } else {\r\n                comp.controls[\"CompartmentId\"].enable();\r\n                comp.controls[\"Quantity\"].enable();\r\n                comp.controls[\"Quantity\"].patchValue(0);\r\n                this.resetQuantity(dr, delRequestCtrl);\r\n            }\r\n        } else {\r\n            comp.controls[\"CompartmentId\"].enable();\r\n            comp.controls[\"Quantity\"].enable();\r\n            comp.controls[\"Quantity\"].patchValue(0);\r\n            this.resetQuantity(dr, delRequestCtrl);\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    private getDRTotalQuantity(dr: any): number {\r\n        let drValue = dr.value; let quantity = 0;\r\n        let assignedComps = drValue.Compartments.map(x => { return { TrailerId: x.TrailerId, CompartmentId: x.CompartmentId }; });\r\n        for (var i = 0; i < this.TrailerCompartmentRetains.length; i++) {\r\n            let trailer = this.TrailerCompartmentRetains[i];\r\n            for (var j = 0; j < trailer.Compartments.length; j++) {\r\n                let comp = trailer.Compartments[j];\r\n                let assigned = assignedComps.find(x => x.TrailerId == trailer.TrailerId && x.CompartmentId == comp.CompartmentId);\r\n                if (assigned && comp.RetainInfo) {\r\n                    quantity += comp.RetainInfo.Quantity;\r\n                }\r\n            }\r\n        }\r\n        return quantity;\r\n    }\r\n\r\n    private resetQuantity(dr: any, delRequestCtrl: any): void {\r\n        if (delRequestCtrl.ScheduleQuantityTypeText == 'Not Specified') {\r\n            this.setDrValues(dr, 0, 5);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Small Compartment') {\r\n            this.setDrValues(dr, 0, 4);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Full Load') {\r\n            this.setDrValues(dr, 0, 3);\r\n        } else if (delRequestCtrl.ScheduleQuantityTypeText == 'Balance') {\r\n            this.setDrValues(dr, 0, 2);\r\n        } else {\r\n            this.setDrValues(dr, delRequestCtrl.RequiredQuantity, 1);\r\n        }\r\n        dr.controls[\"IsRetainFuelLoaded\"].patchValue(false);\r\n        let drQuantity = dr.controls[\"DrQuantity\"].value;\r\n        dr.patchValue({ IsRetainFuelLoaded: false, RequiredQuantity: drQuantity });\r\n    }\r\n\r\n    private setDrValues(dr: any, quantity: number, type: number): void {\r\n        dr.patchValue({\r\n            ScheduleQuantityType: type,\r\n            RequiredQuantity: quantity\r\n        });\r\n    }\r\n\r\n    private setDrPickupLocation(dr: any, source: any): void {\r\n        if (source.PickupLocationType == 2 && source.BulkPlant) {\r\n            dr.patchValue({\r\n                BulkPlant: source.BulkPlant,\r\n                PickupLocationType: source.PickupLocationType,\r\n            });\r\n        } else if (source.Terminal) {\r\n            dr.patchValue({\r\n                Terminal: source.Terminal,\r\n                PickupLocationType: source.PickupLocationType,\r\n            });\r\n        }\r\n    }\r\n\r\n    private setPostLoadedFor(dr: any, drId: string): void {\r\n        if (dr.controls['PostLoadedFor']) {\r\n            dr.controls['PostLoadedFor'].patchValue(drId);\r\n        } else {\r\n            dr.addControl(\"PostLoadedFor\", this.fb.control(drId));\r\n        }\r\n    }\r\n\r\n    validatePrePostLoadTrailer(_form: any) {\r\n        var status = true;\r\n        var trailerDetails = this.DriverTrailerForm.controls['Trailers'].value;\r\n        var schedule = this.SbForm.get('Shifts.' + _form.Index1 + '.Schedules.' + _form.Index2 + '') as FormGroup;\r\n        var assignedTrailer = schedule.get('Trailers').value;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        var _deliveryRequests = this.GetAllLoadsDR(trips);\r\n        var PreLoadInfoLength = _deliveryRequests.filter(x => x.PreLoadedFor).length;\r\n        var PostLoadInfoLength = _deliveryRequests.filter(x => x.PostLoadedFor).length;\r\n        if (PostLoadInfoLength > 0 || PreLoadInfoLength > 0) {\r\n            for (var i = 0; i < assignedTrailer.length; i++) {\r\n                if (trailerDetails.findIndex(x => x.Id == assignedTrailer[i].Id) == -1) {\r\n                    Declarations.msgerror('There is Preload/Postload DS in the shift. Please remove the Preload/Postload in order to change the assignment.', undefined, undefined);\r\n                    status = false;\r\n                    return status;\r\n                }\r\n            }\r\n        }\r\n        return status;\r\n    }\r\n    TransferDS(jobId: number, trip: FormGroup, DrIndex: number, ShiftIndex: number, RowIndex: number, ColIndex: number, schedule: any) {\r\n        var schgeduleFormGroup = schedule as FormGroup;\r\n        this.selectedColIndex = ColIndex;\r\n        this.selectedRowIndex = RowIndex;\r\n        this.selectedDefaultShiftIndex = ShiftIndex;\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = drs.filter(x => x.JobId == jobId && !x.PreLoadedFor && !x.PostLoadedFor);\r\n        this.$eventDataTransfer.dragData = new DragDSInfo();\r\n        this.$eventDataTransfer.dragData.Data = filteredDRs;\r\n        this.$eventDataTransfer.dragData.TripFrom = trip;\r\n        this.$eventDataTransfer.dragData.DrIndex = DrIndex;\r\n        this.$eventDataTransfer.dragData.ShiftIndex = ShiftIndex;\r\n        this.$eventDataTransfer.dragData.RowIndex = RowIndex;\r\n        this.$eventDataTransfer.dragData.ColIndex = ColIndex;\r\n        this.$eventDataTransfer.dragData.Schedule = schgeduleFormGroup;\r\n        this.GetShiftColumnInformation();\r\n\r\n    }\r\n    GetShiftColumnInformation() {\r\n        this._loadingDSData = true;\r\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n        var selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        this.sbService.getDriversShifts(this.SelectedRegionId, selectedDate).subscribe(x => {\r\n            this._loadingDSData = false;\r\n            if (x) {\r\n                this.DSShifts = x;\r\n                this.DSShifts.forEach(top => {\r\n                    top.ShiftInfo = \"Shift - \" + top.StartTime + \" - \" + top.EndTime;\r\n                });\r\n                if (this.DSShifts.length > 0) {\r\n                    this.SelectedShift = this.DSShifts[0];\r\n                    this.GetShiftColInfo(this.SelectedShift);\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    TransferDSInfo() {\r\n        let shiftInfoDetails = this.DSShifts.find(top => top.Id == this.SelectedShift.Id && top.StartTime == this.SelectedShift.StartTime);\r\n        if (shiftInfoDetails != null) {\r\n            let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == shiftInfoDetails.Id) as FormGroup;\r\n            let shiftColIndexDetails = this.ShiftColumn.find(top => top.ColIndex == this.SelectedShiftColumn.ColIndex);\r\n            if (shiftColIndexDetails != null) {\r\n                this.$eventDataTransfer.dragData.DropSchedule = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex];\r\n                let shiftLoadIndexDetails = this.ShiftLoad.find(top => top.LoadIndex == this.SelectedLoad.LoadIndex);\r\n                if (shiftLoadIndexDetails != null) {\r\n                    this.$eventDataTransfer.dragData.DropTrip = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Trips\"][\"controls\"][shiftLoadIndexDetails.LoadIndex];\r\n                    this.onItemDrop(this.$eventDataTransfer.dragData.DropTrip, this.$eventDataTransfer, this.SelectedShiftIndex, this.SelectedShiftColumn.ColIndex, this.SelectedLoad.LoadIndex, this.$eventDataTransfer.dragData.DropSchedule);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    GetShiftColInfo(shift: ShiftViewModel) {\r\n        this.ShiftColumn = [];\r\n        let shiftInfoDetails = this.DSShifts.findIndex(top => top.Id == shift.Id && top.StartTime == shift.StartTime);\r\n        if (shiftInfoDetails != -1) {\r\n            this.SelectedShift = this.DSShifts[shiftInfoDetails];\r\n            let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id) as FormGroup;\r\n            this.SelectedShiftIndex = this.SbForm.controls['Shifts']['controls'].findIndex((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id);\r\n            var columnInfo = shiftInfo.controls[\"Schedules\"].value.length;\r\n            var scheduleInfo = shiftInfo.controls[\"Schedules\"].value as any[];\r\n            for (var i = 0; i < columnInfo; i++) {\r\n                var scheduleColIndex = scheduleInfo.findIndex(x => x.DriverRowIndex == i);\r\n                if (scheduleColIndex >= 0) {\r\n                    var shiftColumnInfo = new ShiftColumnInfo();\r\n                    shiftColumnInfo.ColIndex = i;\r\n                    shiftColumnInfo.ColIndexName = \"C\" + (i + 1);\r\n                    this.ShiftColumn.push(shiftColumnInfo);\r\n                }\r\n            }\r\n            if (this.ShiftColumn.length > 0) {\r\n                this.SelectedShiftColumn = this.ShiftColumn[0];\r\n            }\r\n            this.GetShiftLoadInfo(this.SelectedShiftColumn);\r\n        }\r\n    }\r\n    GetShiftLoadInfo(shiftColumn: ShiftColumnInfo, colIndex: number = -1, rowIndex: number = -1) {\r\n        this.SelectedDriverName = '';\r\n        this.ShiftLoad = [];\r\n        let shiftInfo = this.SbForm.controls['Shifts']['controls'].find((f: FormGroup) => f.controls['Id'].value == this.SelectedShift.Id) as FormGroup;\r\n        let shiftColIndexDetails = this.ShiftColumn.find(top => top.ColIndex == shiftColumn.ColIndex);\r\n        if (shiftColIndexDetails != null) {\r\n            var loadDetails = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Trips\"].value.length;\r\n            for (var i = 0; i < loadDetails; i++) {\r\n                var shiftLoadInfo = new ShiftLoadInfo();\r\n                if (this.selectedRowIndex == shiftColIndexDetails.ColIndex && this.selectedDefaultShiftIndex == this.SelectedShiftIndex) {\r\n                    if (this.selectedColIndex != i) {\r\n                        shiftLoadInfo.LoadIndex = i;\r\n                        this.initShiftLoad(shiftLoadInfo, i);\r\n                    }\r\n                }\r\n                else {\r\n                    shiftLoadInfo.LoadIndex = i;\r\n                    this.initShiftLoad(shiftLoadInfo, i);\r\n                }\r\n            }\r\n            let driverDetails = shiftInfo.controls[\"Schedules\"][\"controls\"][shiftColIndexDetails.ColIndex][\"controls\"][\"Drivers\"].value;\r\n            if (driverDetails) {\r\n                this.SelectedDriverName = $.map(driverDetails, function (obj) {\r\n                    return obj.Name\r\n                }).join(',');\r\n            }\r\n        }\r\n        if (this.ShiftLoad.length > 0) {\r\n            this.SelectedLoad = this.ShiftLoad[0];\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    subscribeTransferDSEvents(): void {\r\n        this.TrasnferDSSubscription = this.dataService.TransferDSInfoSubject.subscribe(x => {\r\n            if (x) {\r\n                this.TransferDS(x.jobId, x.trip, x.DrIndex, x.ShiftIndex, x.RowIndex, x.ColIndex, x.schedule);\r\n            }\r\n        });\r\n    }\r\n    initShiftLoad(shiftLoadInfo: any, i: number) {\r\n        if (i < 10) {\r\n            shiftLoadInfo.LoadName = \"0\" + (i + 1);\r\n        }\r\n        else {\r\n            shiftLoadInfo.LoadName = (i + 1).toString();\r\n        }\r\n        this.ShiftLoad.push(shiftLoadInfo);\r\n    }\r\n    subscribeTrailerInfoDSEvents(): void {\r\n        this.TrailerInfoDSSubscription = this.dataService.TrailerDSInfoSubject.subscribe(x => {\r\n            if (x) {\r\n                this.scheduleTrailerInfo = x;\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    subscribeTrailerRemoveDSEvents(): void {\r\n        this.RemoveTrailerGroupSubject = this.dataService.RemoveTrailerGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this._loadingRemoveTrailer = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                //hide trailer information popup if no trailer found.\r\n                setTimeout(() => {\r\n                    if (this.scheduleTrailerInfo != null) {\r\n                        var scInfo = this.scheduleTrailerInfo.controls['Trips']['controls'][0];\r\n                        if (scInfo != null) {\r\n                            var schedule = this.SbForm.get('Shifts.' + scInfo.controls['ShiftIndex'].value + '.Schedules.' + scInfo.controls['DriverRowIndex'].value) as FormGroup;\r\n                            if (schedule != null) {\r\n                                if (schedule.controls['Trailers'].value.length == 0) {\r\n                                    $(\"#closeTrailerInformationModal\").click();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }, 1000);\r\n\r\n            }\r\n        });\r\n    }\r\n    subscribeRouteInfoDSEvents(): void {\r\n        this.RouteInfoDSSubscription = this.dataService.RouteDetailsSubject.subscribe(x => {\r\n            if (x) {\r\n                this.SelectedTrip = x.SelectedTrip;\r\n                this.RouteListForTrip = x.RouteListForTrip;\r\n            }\r\n        });\r\n    }\r\n\r\n    UnAssignTrailerFromShift(schedule: any, type: any, trailerId: string = '') {\r\n        let data = {\r\n            schedule: schedule,\r\n            type: type,\r\n            trailerId: trailerId\r\n        }\r\n        this._loadingRemoveTrailer = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.unassignTrailerInformationSubject(data);\r\n    }\r\n    public deleteDrsForRoute(route: DropdownItem) {\r\n        this._loadingRemoveRoute = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setRouteResetGroupSubject(route);\r\n    }\r\n    public hideDeliveryGroup() {\r\n        this.dataService.setHideDeliveryGroupSubject(true);\r\n    }\r\n    subscribeRouteDeleteDeliveryGroupSubject(): void {\r\n        this.RouteDeleteDeliveryGroupSubject = this.dataService.RouteDeleteDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.deleteRouteGroup(x);\r\n                this.changeDetectorRef.detectChanges();\r\n\r\n            }\r\n        });\r\n    }\r\n    deleteRouteGroup(routeDelete: any) {\r\n        var data = routeDelete.DelGroupForm;\r\n        this.routeInfo = routeDelete.routeName;\r\n        this.dataService.setShowDeliveryGroupSubject(false);\r\n        if (data.get('GroupId').value != null && data.get('GroupId').value > 0) {\r\n            this._savingBuilder = true;\r\n            this.changeDetectorRef.detectChanges();\r\n            var delRequests = data.get('DeliveryRequests') as FormArray;\r\n            var scheduleIds;\r\n            if (this.routeInfo != null) {\r\n                scheduleIds = delRequests.value.filter(top => top.RouteInfo != null && top.RouteInfo.Id == this.routeInfo.Id).map(t => t.TrackableScheduleId);\r\n            }\r\n            else {\r\n                scheduleIds = delRequests.value.map(t => t.TrackableScheduleId)\r\n            }\r\n            this.sbService.getScheduleStatus(scheduleIds).subscribe(response => {\r\n                this._savingBuilder = false;\r\n                if (response != null && response != undefined && response.length > 0) {\r\n                    var completedSchedules = this.sbService.returnCommonElements(this.CompletedScheduleStatuses, response, true);\r\n                    var isCompletedSchedule = completedSchedules.length > 0;\r\n                    var onTheWaySchedules = this.sbService.returnCommonElements(this.OnTheWayScheduleStatuses, response, false);\r\n                    if (isCompletedSchedule || response.filter(t => t.ScheduleEnrouteStatusId == 4).length > 0) {\r\n                        Declarations.msgerror(\"Can't delete/reset group. For one or more schedule(s) drop has been made already\", 'Warning', 2500);\r\n                        return;\r\n                    } else if (onTheWaySchedules.length > 0) {\r\n                        this.sbService.setConfirmationHeadingForDeleteGroup(onTheWaySchedules[0]);\r\n                        this.DeletedGroup = data;\r\n                        jQuery('#btnconfirm-delete-delgrp').click();\r\n                        return;\r\n                    } else {\r\n                        this.deleteRouteLoad(data);\r\n                    }\r\n                } else {\r\n                    this.deleteRouteLoad(data);\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            this.deleteRouteLoad(data);\r\n        }\r\n    }\r\n    deleteRouteLoad(trip: FormGroup) {\r\n        var delRequestIndex = [];\r\n        var tempDeliveryReq = [];\r\n        var delRequests = trip.controls['DeliveryRequests'] as FormArray;\r\n        delRequests.value.forEach(t => { t.WindowMode = 1; t.QueueMode = 1; t.Compartments = [] });\r\n        if (this.routeInfo != null) {\r\n            delRequests.controls.forEach((element: any) => {\r\n                var drRouteInfo = element.controls['RouteInfo'].value;\r\n                if (drRouteInfo != null && drRouteInfo.Id == this.routeInfo.Id) {\r\n                    tempDeliveryReq.push(element.value);\r\n                    delRequestIndex.push(element.controls['Id'].value);\r\n                }\r\n            });\r\n            if (delRequestIndex.length > 0) {\r\n                delRequestIndex.forEach(x => {\r\n                    var drIndex = delRequests.controls.findIndex(top => top.get('Id').value == x);\r\n                    if (drIndex >= 0) {\r\n                        delRequests.removeAt(drIndex);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        var tripId = trip.controls['TripId'].value;\r\n        if (tripId != null && tripId != undefined && tripId != '') {\r\n            var deliveryRequestsValue;\r\n            if (this.routeInfo != null) {\r\n                deliveryRequestsValue = tempDeliveryReq;\r\n            }\r\n            else {\r\n                deliveryRequestsValue = delRequests.value;\r\n            }\r\n            var dsbModel = this.getDSBSaveModel();\r\n            dsbModel.DeletedGroupId = trip.controls['GroupId'].value;\r\n            dsbModel.DeletedTripId = tripId;\r\n\r\n            let preloadInfo = this.getPreloadedInfoFromLoad(trip);\r\n            let preloadedTrips = this.getPrePostLoadedTrips(preloadInfo);\r\n            let postloadInfo = this.getPostloadedInfoFromLoad(trip);\r\n            let postloadedTrips = this.getPrePostLoadedTrips(postloadInfo);\r\n            dsbModel.PreloadedDRs = this.getPreloadAcrossTheDateInfoFromLoad(trip);\r\n            dsbModel.PostloadedDRs = this.getPostloadAcrossTheDateInfoFromLoad(trip);\r\n            if (this.routeInfo == null) {\r\n                delRequests.clear();\r\n            }\r\n            var schedule = this.SbForm.get('Shifts.' + trip.controls['ShiftIndex'].value + '.Schedules.' + trip.controls['DriverRowIndex'].value) as FormGroup;\r\n            trip.value.Drivers = schedule.controls['Drivers'].value;\r\n            trip.value.Trailers = schedule.controls['Trailers'].value;\r\n            if (this.routeInfo != null) {\r\n                let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                let IsDispatcherDragDropSequence = trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                var drForm = trip.controls['DeliveryRequests'] as FormArray;\r\n                let tripDeliveryRequests = drForm.value;\r\n                drForm.clear();\r\n                var _drFormArray = this.utilService.getDeliveryRequestFormArray(tripDeliveryRequests, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                    drForm.push(_drForm);\r\n                });\r\n                trip.value.DeliveryRequests = trip.controls['DeliveryRequests'].value;\r\n            }\r\n            dsbModel.Trips.push(trip.value);\r\n            dsbModel.Status = 4;\r\n\r\n            let tripArray = [];\r\n            tripArray.push(trip);\r\n            preloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n            postloadedTrips.forEach(x => {\r\n                dsbModel.Trips.push(x.value);\r\n                tripArray.push(x);\r\n            });\r\n\r\n            this._savingBuilder = true;\r\n            this.sbService.deleteGroup(dsbModel).subscribe(response => {\r\n                if (response != null) {\r\n                    if (response.StatusCode == 0 || response.StatusCode == 2) {\r\n                        let drsToRestore = deliveryRequestsValue.filter(t => !t.PostLoadedFor);\r\n                        this.dataService.setRestoreDeletedRequestSubject(drsToRestore);\r\n                        this.resetLoad(trip);\r\n                    }\r\n                    this.updateLoadForm(response, tripArray);\r\n                    if (this.routeInfo != null) {\r\n                        this.RouteListForTrip = [];\r\n                        let drValue = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n                        drValue.forEach(dr => {\r\n                            if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                                let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                                if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                            }\r\n                        });\r\n                        if (this.RouteListForTrip.length == 0) {\r\n                            $(\"#closeResetDrByRouteModal\").click();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                this._savingBuilder = false;\r\n            });\r\n        } else {\r\n            this.RouteListForTrip = [];\r\n            var deliveryRequestsValue;\r\n            if (this.routeInfo != null) {\r\n                deliveryRequestsValue = tempDeliveryReq;\r\n            }\r\n            else {\r\n                deliveryRequestsValue = delRequests.value;\r\n            }\r\n            this.dataService.setRestoreDeletedRequestSubject(deliveryRequestsValue);\r\n            let drValue = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n            drValue.forEach(dr => {\r\n                if (dr && dr.RouteInfo && dr.PostLoadedFor == undefined) {\r\n                    let drIndex = this.RouteListForTrip.findIndex(a => a.Id == dr.RouteInfo.Id);\r\n                    if (drIndex === -1) { this.RouteListForTrip.push(dr.RouteInfo); }\r\n                }\r\n            });\r\n            if (this.RouteListForTrip.length == 0) {\r\n                $(\"#closeResetDrByRouteModal\").click();\r\n            }\r\n            this.resetLoad(trip);\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        }\r\n    }\r\n\r\n    public createLoad(x: any) {\r\n        if (x.IsDragFromLoad == true) {\r\n            this.DropDelReqToLoad(x.Schedule, x.Trip, x.DrData, x.Drs);\r\n            return;\r\n        }\r\n        if (x && x.Drs.length > 0) {\r\n            let drs = x.Drs as DeliveryRequestViewModel[];\r\n            var recurringDeliveryRequests = drs.filter(top => top.isRecurringSchedule == true && top.IsBlendedRequest == false);\r\n            recurringDeliveryRequests = recurringDeliveryRequests.filter((el, i, a) => i === a.indexOf(el));\r\n            var recurringBlendedDeliveryRequests = drs.filter(top => top.isRecurringSchedule == true && top.IsBlendedRequest == true);\r\n            recurringBlendedDeliveryRequests = recurringBlendedDeliveryRequests.filter((el, i, a) => i === a.indexOf(el));\r\n\r\n            var deliveryRequests = sortBy(drs.filter(top => top.isRecurringSchedule == false && top.GroupParentDRId == '' && (top.CarrierStatus == 0 || top.CarrierStatus == 3 || top.CarrierStatus == 4)), 'ProductType');\r\n            var brokeredDeliveryRequests = drs.filter(top => top.isRecurringSchedule == false && top.GroupParentDRId == '' && top.CarrierStatus == 2);\r\n            var splitDeliveryRequests = drs.filter(top => top.GroupParentDRId != '' && top.IsBlendedRequest === false);\r\n            var tbdDrs = deliveryRequests.filter(t => t.IsTBD == true);\r\n            var groupedDeliveryRequests = groupDrsByProduct(deliveryRequests.filter(t => t.IsTBD == false && t.IsBlendedRequest === false && t.IsMarine === false && !t.UniqueOrderNo));\r\n            var splitBlendedDeliveryRequests = drs.filter(top => top.GroupParentDRId != '' && top.IsBlendedRequest === true);\r\n            deliveryRequests.filter(t => (t.IsMarine === true || t.UniqueOrderNo != null) && t.GroupParentDRId == '' && t.IsTBD == false && t.IsBlendedRequest === false).forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n            deliveryRequests.filter(t => t.IsBlendedRequest === true).forEach(x => {\r\n                if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                    var blendDrs = deliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                    blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                }\r\n            });\r\n            //recurring schedule blended DRs.\r\n            if (recurringBlendedDeliveryRequests.length > 0) {\r\n                recurringBlendedDeliveryRequests.forEach(x => {\r\n                    if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                        var blendDrs = recurringBlendedDeliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                        blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                        blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                        blendDrs.filter(b => b.IsAdditive).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    }\r\n                });\r\n            }\r\n            tbdDrs.forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n            recurringDeliveryRequests.forEach(x => {\r\n                groupedDeliveryRequests.push(x);\r\n            });\r\n\r\n            if (groupedDeliveryRequests.length == 0) {\r\n                brokeredDeliveryRequests.forEach(x => {\r\n                    groupedDeliveryRequests.push(x);\r\n                });\r\n            }\r\n            if (groupedDeliveryRequests.length == 0) {\r\n                splitDeliveryRequests.forEach(x => {\r\n                    groupedDeliveryRequests.push(x);\r\n                });\r\n            }\r\n            splitBlendedDeliveryRequests.filter(t => t.IsBlendedRequest === true).forEach(x => {\r\n                if (!groupedDeliveryRequests.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                    var blendDrs = splitBlendedDeliveryRequests.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                    blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                    blendDrs.filter(b => b.IsAdditive).forEach(p => { groupedDeliveryRequests.push(p); });\r\n                }\r\n            });\r\n            groupedDeliveryRequests.slice();\r\n            let drIds = deliveryRequests.filter(t => t.isRecurringSchedule == false && (t.CarrierStatus == 0 || t.CarrierStatus == 3 || t.CarrierStatus == 4)).map(m => m.Id);\r\n            var input = { jobId: x.JobId, regionId: x.RegionId, customer: x.Customer, deliveryReqs: groupedDeliveryRequests, existingDrIds: drIds };\r\n            this.sbService.getDeliveryReqDemands(input).subscribe(response => {\r\n                if (response == null) {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n                }\r\n                else if (response.Status && response.Status.StatusCode != 0) {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                    Declarations.msgerror(response.Status.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    if (response.Data && response.Data.length > 0) {\r\n                        let isCommonPickup = x.Trip.get('IsCommonPickup').value as boolean;\r\n                        let IsDispatcherDragDropSequence = x.Trip.get('IsDispatcherDragDropSequence').value as boolean;\r\n                        x.DrData.Data = new FormArray([]);\r\n                        x.DrData.Data = this.utilService.getDeliveryRequestFormArray(response.Data, isCommonPickup, IsDispatcherDragDropSequence, 0);\r\n                        x.Drs.forEach((req, i) => {\r\n                            if (response.Data.findIndex(t => t.Id == req.Id || (t.ProductTypeId == req.ProductTypeId\r\n                                && (t.CarrierStatus == 0 || t.CarrierStatus == 3 || t.CarrierStatus == 4))) == -1) {\r\n                                x.Drs.splice(i, 1);\r\n                            }\r\n                        })\r\n                        this.DropDelReqToLoad(x.Schedule, x.Trip, x.DrData, x.Drs);\r\n                        this.dataService.setDrUpdatedSubject(response.Data);\r\n                    }\r\n                    else {\r\n                        this._savingBuilder = false;\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //if all columns collapsed, then dont show shift\r\n    checkShiftVisibility(shift: FormGroup) {\r\n        const _schedules = shift.controls['Schedules'].value as any[];\r\n        if (_schedules.every(x => x.IsLoadQueueCollapsed == true))\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n    //collapse all columns of shift\r\n    moveShiftToLoadQueue(shiftIndex: number, shift: FormGroup) {\r\n\r\n        let data: DSBLoadQueueModel[] = [];\r\n        let _Schedules = shift.controls['Schedules'] as FormArray;\r\n\r\n        _Schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n            //all columns (one shift) collapsed in client side\r\n            schedule.get('IsLoadQueueCollapsed').patchValue(true);\r\n            data.push({\r\n                Id: null,\r\n                RegionId: this.SbForm.get('RegionId').value,\r\n                ShiftIndex: shiftIndex,\r\n                Date: this.SbForm.get('Date').value,\r\n                DriverRowIndex: scheduleIndex,\r\n                ScheduleBuilderId: '',\r\n                ShiftId: shift.controls['Id'].value,\r\n            })\r\n        });\r\n\r\n        this.loadQueueService.setLoadQueueColumnMoved(true);\r\n        this.changeDetectorRef.markForCheck();\r\n        this.dataService.setDriverColumnChangeDetect(true);\r\n\r\n        //collapsed column data sent to api\r\n        this.loadQueueService.createLoadQueue(data).subscribe((data) => {\r\n            if (data && data.StatusCode == 0) {\r\n                if (data.DsbLoadQueueSuccess && data.DsbLoadQueueSuccess.length > 0) {\r\n                    _Schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n                        schedule.get('LoadQueueId').patchValue(data.DsbLoadQueueSuccess[scheduleIndex].Id);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                Declarations.msgerror(\"Unable to collapse shift. Please try later.\", undefined, undefined);\r\n                //if api call fails, revert changes in client side\r\n                _Schedules.controls.forEach((schedule: FormGroup) => {\r\n                    schedule.get('IsLoadQueueCollapsed').patchValue(false);\r\n                });\r\n                this.loadQueueService.setLoadQueueColumnMoved(true);\r\n                this.changeDetectorRef.markForCheck();\r\n                this.dataService.setDriverColumnChangeDetect(true);\r\n            }\r\n        });\r\n    }\r\n    getLoadQueueNotifications() {\r\n        let refreshScheduleBuilder = false;\r\n        let dsbNotificationModel: DSBLoadQueueNotificationModel[] = [];\r\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\r\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\r\n            let schedules = shift.controls['Schedules'] as FormArray;\r\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\r\n                if (schedule.get('IsLoadQueueCollapsed').value && (schedule.get('LoadQueueColumnStatus').value == DSBLoadQueueStatus.New || schedule.get('LoadQueueColumnStatus').value == DSBLoadQueueStatus.InProgress)) {\r\n                    let dsbNotification = new DSBLoadQueueNotificationModel();\r\n                    dsbNotification.Date = this.SbForm.get('Date').value;\r\n                    dsbNotification.RegionId = this.SbForm.get('RegionId').value;\r\n                    dsbNotification.ScheduleBuilderId = this.SbForm.get('Id').value;\r\n                    dsbNotification.ShiftId = shift.get('Id').value;\r\n                    dsbNotification.ShiftIndex = shiftIndex;\r\n                    dsbNotification.DriverColIndex = scheduleIndex;\r\n                    dsbNotificationModel.push(dsbNotification);\r\n                }\r\n            });\r\n        });\r\n        if (dsbNotificationModel.length > 0) {\r\n            this.loadQueueService.getLoadQueueNotifications(dsbNotificationModel).subscribe(response => {\r\n                if (response.length > 0) {\r\n                    var publishColResponse = response.filter(x => x.Status == DSBLoadQueueStatus.Success);\r\n                    if (publishColResponse.length > 0) {\r\n                        publishColResponse.forEach(x => {\r\n                            var shift = this.SbForm.controls['Shifts']['controls'][x.ShiftIndex] as FormGroup;\r\n                            if (shift != null) {\r\n                                let schedule = shift.controls['Schedules']['controls'][x.DriverColIndex] as FormGroup;\r\n                                if (schedule != null) {\r\n                                    var trips = schedule.controls['Trips'] as FormArray;\r\n                                    for (var i = 0; i < trips.length; i++) {\r\n                                        var tripValue = trips.value[i];\r\n                                        this.setTripStatusToPublish(tripValue);\r\n                                    }\r\n                                    this.updateDsbLoadQueueForm(x.DSBSaveModel, trips);\r\n                                    schedule.get('LoadQueueColumnStatus').patchValue(DSBLoadQueueStatus.Success);\r\n                                    schedule.get('IsLoadQueueColumnBlocked').patchValue(false);\r\n                                    this.changeDetectorRef.detectChanges();\r\n                                }\r\n                                else {\r\n                                    refreshScheduleBuilder = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        var scheduleColResponse = response.filter(x => x.Status != DSBLoadQueueStatus.Success);\r\n                        if (scheduleColResponse.length > 0) {\r\n                            scheduleColResponse.forEach(x => {\r\n                                var shift = this.SbForm.controls['Shifts']['controls'][x.ShiftIndex] as FormGroup;\r\n                                if (shift != null) {\r\n                                    let schedule = shift.controls['Schedules']['controls'][x.DriverColIndex] as FormGroup;\r\n                                    if (schedule != null && schedule.get('LoadQueueColumnStatus').value != x.Status) {\r\n                                        schedule.get('LoadQueueColumnStatus').patchValue(x.Status);\r\n                                        if (x.Status == DSBLoadQueueStatus.Failed) {\r\n                                            schedule.get('IsLoadQueueColumnBlocked').patchValue(false);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            this.changeDetectorRef.detectChanges();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (refreshScheduleBuilder) {\r\n            Declarations.msgerror(\"Please refresh the schedule builder as load queue column(s) published successfully.\", undefined, undefined);\r\n        }\r\n    }\r\n    subscribeLoadQueueNotifications() {\r\n        interval(15000) //every 15 seconds\r\n            .pipe()\r\n            .subscribe(() => {\r\n                this.getLoadQueueNotifications();\r\n            });\r\n\r\n    }\r\n    updateDsbLoadQueueForm(data: DSBSaveModel, trip: any, isDateChange: boolean = false): void {\r\n        if (data == null) {\r\n            Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            return;\r\n        }\r\n        if (data.StatusCode == 0 || data.StatusCode == 2) {\r\n            this.droppedTrip = null;\r\n            this.draggedDelReqData = null;\r\n            this.setUnsavedChanges();\r\n            if (!isDateChange) {\r\n                this.SbForm.patchValue({\r\n                    Id: data.Id,\r\n                    TimeStamp: data.TimeStamp,\r\n                    Status: 0\r\n                });\r\n                if (data && data.Trips && data.Trips.length > 0) {\r\n                    if (trip instanceof FormGroup) {\r\n                        trip.patchValue(data.Trips[0]);\r\n                        var sIndex = trip.controls['ShiftIndex'].value;\r\n                        var rIndex = trip.controls['DriverRowIndex'].value;\r\n                        this.setAllowDriverChange(sIndex, rIndex);\r\n                        this.dataService.setSavedChangesSubject(trip.value);\r\n                    }\r\n                    else if (trip instanceof FormArray) {\r\n                        for (var i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip.controls[i] as FormGroup;\r\n                            var shiftId = thisTrip.controls['ShiftId'].value;\r\n                            var shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            var rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            var colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            var savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            if (savedTrip) {\r\n                                trip.controls[i].patchValue(savedTrip);\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(trip.controls[i].value);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (var i = 0, j = 1; i < trip.length; i++, j++) {\r\n                            let thisTrip = trip[i] as FormGroup;\r\n                            var shiftId = thisTrip.controls['ShiftId'].value;\r\n                            var shiftIndex = thisTrip.controls['ShiftIndex'].value;\r\n                            var rowIndex = thisTrip.controls['DriverRowIndex'].value;\r\n                            var colIndex = thisTrip.controls['DriverColIndex'].value;\r\n                            var savedTrip = data.Trips.find(t => t.ShiftId == shiftId && t.DriverRowIndex == rowIndex && t.DriverColIndex == colIndex);\r\n                            if (savedTrip) {\r\n                                trip[i].patchValue(savedTrip);\r\n                                this.setAllowDriverChange(shiftIndex, rowIndex);\r\n                                this.dataService.setSavedChangesSubject(trip[i].value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n        }\r\n\r\n        this._savingBuilder = false;\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    subscribeChangeDetectDsbLoadQueueNotification(): void {\r\n        this.DsbLoadQueueNotification = this.dataService.DsbQueueChangesForNotification.subscribe(x => {\r\n            if (x) {\r\n                this.subscribeLoadQueueNotifications();\r\n            }\r\n        });\r\n    }\r\n\r\n    private subscribeDriverColumnChangeDetect(): void {\r\n        this.DriverColCDRSubscription = this.dataService.DriverColumnChangeDetect.subscribe(x => {\r\n            if (x) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    initOptionalPickupForm(order: OrderPickupDetailModel): FormGroup {\r\n\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        let _pForm = this.fb.group({\r\n            SelectedFuelTypeDetails: this.fb.control([], [Validators.required]),\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control('')\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n    private subscribeOptionalPickupLocationChange(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators_(this.PickupForm, data);\r\n        }));\r\n    }\r\n    setPickupValidators_(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            this.setBulkPlantValidators_(form, false);\r\n            this.setTerminalValidators_(form, true);\r\n        } else {\r\n            this.setTerminalValidators_(form, false);\r\n            this.setBulkPlantValidators_(form, true);\r\n        }\r\n    }\r\n    setBulkPlantValidators_(form: FormGroup, required: boolean) {\r\n        form.get('BulkPlant.Address').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n    }\r\n    setTerminalValidators_(form: FormGroup, required: boolean) {\r\n        form.get('Terminal.Name').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    onTerminalSelected_(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n    }\r\n    onBulkPlantSelected_(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress_(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n    onBulkPlantSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n    onBulkPlantBlur_(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            let bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress_(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    getBulkPlantAddress_(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code, Id: response.Country.Id, Name: response.CountyName },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n    private unsubscribeAllDGSubscriptions(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n    }\r\n    onFuelTypeSelect(item: any) {\r\n        this.SelectedFuelTypeDetails = this.PickupForm.get('SelectedFuelTypeDetails').value;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeDeSelect(item: any) {\r\n        this.SelectedFuelTypeDetails = this.PickupForm.get('SelectedFuelTypeDetails').value;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeSelectAll(items: any): void {\r\n        this.SelectedFuelTypeDetails = items;\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, this.SelectedFuelTypeDetails.map(x => x.Id));\r\n    }\r\n    onFuelTypeDeSelectAll(): void {\r\n        this.SelectedFuelTypeDetails = [];\r\n        this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n        this.getTerimalDetails(this.OptionPickupOrderIds, []);\r\n    }\r\n    addOptionalPickupLocation() {\r\n        if (this.PickupForm.valid) {\r\n            let xNumber = this.OptionalPickupLocationInfo.length;\r\n            this.SelectedFuelTypeDetails.forEach(x => {\r\n                let isDuplicateRecord = false;\r\n                if (this.PickupForm.get('PickupLocationType').value == 1) {\r\n                    let TfxTerminal = this.PickupForm.get('Terminal').get('Name').value as DropdownItem;\r\n                    let optionalPickupIndex = this.OptionalPickupLocationInfo.findIndex(x1 => x1.TfxFuelTypeId == x.Id && x1.DSBPickupLocationInfo.PickupLocationType == 1 && x1.DSBPickupLocationInfo.TfxTerminal.Id == TfxTerminal.Id);\r\n                    if (optionalPickupIndex >= 0) {\r\n                        isDuplicateRecord = true;\r\n                    }\r\n                }\r\n                else {\r\n                    let TfxBulkPlant = this.PickupForm.get('BulkPlant').value as DropAddressModel\r\n                    let optionalPickupIndex = this.OptionalPickupLocationInfo.findIndex(x1 => x1.TfxFuelTypeId == x.Id && x1.DSBPickupLocationInfo.PickupLocationType == 2 && x1.DSBPickupLocationInfo.TfxBulkPlant.SiteName == TfxBulkPlant.SiteName);\r\n                    if (optionalPickupIndex >= 0) {\r\n                        isDuplicateRecord = true;\r\n                    }\r\n                }\r\n                if (!isDuplicateRecord) {\r\n                    xNumber = xNumber + 1;\r\n                    let pickupModel = new OptionalPickupDetailModel();\r\n                    pickupModel.incId = xNumber;\r\n                    pickupModel.isAdded = 1;\r\n                    pickupModel.Id = '';\r\n                    pickupModel.RegionId = this.OptionalPickupRegionId;\r\n                    pickupModel.ScheduleBuilderId = this.OptionalPickupScheduleBuilderId;\r\n                    pickupModel.ShiftId = this.OptionalPickupShiftId;\r\n                    pickupModel.ShiftIndex = this.OptionalPickupShiftIndex;\r\n                    pickupModel.ShiftOrderNumber = this.OptionalPickupShiftOrderNo;\r\n                    pickupModel.DriverColIndex = this.OptionalPickupDriverColIndex;\r\n                    pickupModel.TfxFuelTypeId = x.Id;\r\n                    pickupModel.TfxFuelTypeName = x.Name;\r\n                    pickupModel.DSBPickupLocationInfo.PickupLocationType = this.PickupForm.get('PickupLocationType').value;\r\n                    if (pickupModel.DSBPickupLocationInfo.PickupLocationType == 1) {\r\n                        pickupModel.DSBPickupLocationInfo.TfxTerminal = this.PickupForm.get('Terminal').get('Name').value as DropdownItem;\r\n                    }\r\n                    else {\r\n                        pickupModel.DSBPickupLocationInfo.TfxBulkPlant = this.PickupForm.get('BulkPlant').value as DropAddressModel;\r\n                    }\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo1 = this.PickupForm.get('BadgeNo1').value;\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo2 = this.PickupForm.get('BadgeNo2').value;\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNo3 = this.PickupForm.get('BadgeNo3').value;\r\n                    var BadgeNoInfo = [pickupModel.DSBPickupLocationInfo.BadgeNo1, pickupModel.DSBPickupLocationInfo.BadgeNo2, pickupModel.DSBPickupLocationInfo.BadgeNo3];\r\n                    pickupModel.DSBPickupLocationInfo.BadgeNoInfo = BadgeNoInfo.filter(Boolean).join(',');\r\n                    if (this.OptionPickupScheduleGroup.controls['Drivers']['controls'].length > 0) {\r\n                        pickupModel.DriverId = this.OptionPickupScheduleGroup.controls['Drivers'][\"controls\"][0][\"controls\"][\"Id\"].value;\r\n                    }\r\n                    this.OptionalPickupLocationInfo.push(pickupModel);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n            this.resetPickupForm();\r\n        }\r\n    }\r\n    resetPickupForm() {\r\n        this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n        this.PickupForm.get('PickupLocationType').setValue(1);\r\n        this.PickupForm.get('Terminal').setValue({\r\n            Id: 0,\r\n            Name: ''\r\n        });\r\n        this.PickupForm.get('BulkPlant').setValue({\r\n            Address: '',\r\n            City: '',\r\n            State: { Id: 0, Code: '' },\r\n            Country: { Id: 0, Code: '' },\r\n            CountryGroup: { Id: 0, Code: '' },\r\n            ZipCode: '',\r\n            CountyName: '',\r\n            Latitude: '',\r\n            Longitude: '',\r\n            SiteName: '',\r\n            SiteId: ''\r\n        });\r\n        this.PickupForm.get('BadgeNo1').setValue('');\r\n        this.PickupForm.get('BadgeNo2').setValue('');\r\n        this.PickupForm.get('BadgeNo3').setValue('');\r\n    }\r\n    getBulkPlanDetails() {\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => this.StateList = x);\r\n        }\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.BulkPlants || this.BulkPlants.length == 0) {\r\n            this.addresService.getBulkPlants('').subscribe(data => {\r\n                this.BulkPlants = data.slice();\r\n                this.BulkplantList = data;\r\n            });\r\n        }\r\n\r\n    }\r\n    setStateCode_(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n    addressMapper_(data: any): AddressModel {\r\n        let state = this.StateList.find(x => x.Code == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n    getAddressByZip_(event: any): void {\r\n        let zipCode = event.target.value;\r\n\r\n        if (RegExConstants.UsaZip.test(zipCode) || RegExConstants.CanZip.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        let addressModel = this.addressMapper_(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                }));\r\n        }\r\n    }\r\n    getTerimalDetails(orderIds: number[], fuelTypeIds: number[]) {\r\n        this._loadingOptionTerminal = true;\r\n        this.DGSubscription.add(this.sbService.getOptioanlPickupTerminals(orderIds, fuelTypeIds, '').subscribe((data: DropdownItem[]) => {\r\n            this._loadingOptionTerminal = false;\r\n            this.Terminals = data;\r\n            this.changeDetectorRef.detectChanges();\r\n        }));\r\n    }\r\n    subscribeOptionPickupEvents(): void {\r\n        this.OptionalPickupSubscription = this.dataService.OptionalPickupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.OptionPickupScheduleGroup = x.scheduleInfo;\r\n                this.OptionalPickupShiftIndex = x.shiftIndex;\r\n                this.OptionalPickupDriverColIndex = x.ColIndex;\r\n                this.OptionalPickupShiftId = x.ShiftId;\r\n                this.OptionalPickupRegionId = x.RegionId;\r\n                this.OptionalPickupScheduleBuilderId = x.ScheduleBuilderId;\r\n                this.OptionalPickupShiftOrderNo = x.shiftOrderNo;\r\n                this.OptionalPickupLocationInfo = [];\r\n                this.OrderFuelDetails = [];\r\n                this.SelectedFuelTypeDetails = [];\r\n                this.OptionPickupOrderIds = [];\r\n                this.FuelTypeDetails = [];\r\n                this.OptionalPickupLocationDeleteInfo = null;\r\n                this.PickupForm.get('SelectedFuelTypeDetails').setValue([]);\r\n                this.PickupForm.get('PickupLocationType').setValue(1);\r\n                this.PickupForm.get('Terminal').setValue({ Id: 0, Name: \"\" });\r\n                var BulkPlantForm = {\r\n                    Address: '',\r\n                    City: '',\r\n                    State: { Id: 0, Code: '' },\r\n                    Country: { Id: 0, Code: '' },\r\n                    CountryGroup: { Id: 0, Code: '' },\r\n                    ZipCode: '',\r\n                    CountyName: '',\r\n                    Latitude: '',\r\n                    Longitude: '',\r\n                    SiteName: '',\r\n                    SiteId: ''\r\n                };\r\n                this.PickupForm.get('BulkPlant').setValue(BulkPlantForm);\r\n                this.PickupForm.get('BadgeNo1').setValue('');\r\n                this.PickupForm.get('BadgeNo2').setValue('');\r\n                this.PickupForm.get('BadgeNo3').setValue('');\r\n                if (x.FuelTypeInfo != null) {\r\n                    var orderInfo = x.FuelTypeInfo as OrderFuelInfo;\r\n                    if (orderInfo.StatusCode == 0) {\r\n                        this.OrderFuelDetails = orderInfo.OrderFuelDetails;\r\n                        orderInfo.OrderFuelDetails.forEach(x => {\r\n                            this.OptionPickupOrderIds.push(x.OrderId);\r\n                            x.FuelTypeDetails.forEach(xItem => {\r\n                                var fuelIndex = this.FuelTypeDetails.findIndex(x => x.Id == xItem.Id);\r\n                                if (fuelIndex == -1) {\r\n                                    var fuelDetails = new DropdownItem();\r\n                                    fuelDetails.Id = xItem.Id;\r\n                                    fuelDetails.Name = xItem.Name;\r\n                                    this.FuelTypeDetails.push(fuelDetails);\r\n                                }\r\n                            });\r\n                        });\r\n                        this.getBulkPlanDetails();\r\n                        this.getOptionalPickupInfo(x, x.scheduleInfo);\r\n                    }\r\n                    this._loadingOptionTerminal = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n                else {\r\n                    this._loadingOptionTerminal = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    submitOptionalPickupLocation() {\r\n        if (this.OptionalPickupLocationInfo.length > 0) {\r\n            this._loadingOptionTerminal = true;\r\n            this.sbService.addOptionalPickup(this.OptionalPickupLocationInfo).subscribe((data: any) => {\r\n                this._loadingOptionTerminal = false;\r\n                if (data.StatusCode == 0) {\r\n                    $(\"#optional-pickup-location\").click();\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    //carrier assignmnet\r\n    isDrExistInShift(_schedules: FormArray) {\r\n        let schedules = _schedules.value as any[] || [];\r\n        return schedules.some(schedule => schedule.Trips.some(trip => trip.DeliveryRequests.length > 0));\r\n    }\r\n    isAllShiftDrSelected(_schedules: FormArray) {\r\n        let schedules = _schedules.value as any[] || [];\r\n        return schedules.every(schedule => schedule.Trips.every(trip => trip.DeliveryRequests.every(dr => dr.IsSelectedForAssignment == true)));\r\n    }\r\n    shiftSelectedForCarrierAssignment(event, _schedules: FormArray) {\r\n        _schedules.controls.forEach((schedule: FormControl) => {\r\n            let trips = schedule['controls']['Trips'] as FormArray;\r\n            trips.controls.forEach((trip: FormControl) => {\r\n                let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n                drs.controls.forEach((drForm: FormControl) => {\r\n                    if (drForm.get('IsSelectedForAssignment').value != event.target.checked) {\r\n                        drForm.get('IsSelectedForAssignment').setValue(event.target.checked);\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    getOptionalPickupInfo(x: any, scheduleInfo: any) {\r\n        this._loadingOptionTerminal = true;\r\n        this.OptionalPickupLocationInfo = [];\r\n        var optionalPickupModel = new OptionalPickupDetailModel();\r\n        optionalPickupModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n        optionalPickupModel.ShiftId = x.ShiftId;\r\n        optionalPickupModel.DriverColIndex = x.ColIndex;\r\n        this.sbService.getOptionalPickup(optionalPickupModel).subscribe(response => {\r\n            this._loadingOptionTerminal = false;\r\n            if (response != null) {\r\n                response.forEach(x1 => {\r\n                    var BadgeNoInfo = [x1.DSBPickupLocationInfo.BadgeNo1, x1.DSBPickupLocationInfo.BadgeNo2, x1.DSBPickupLocationInfo.BadgeNo3];\r\n                    x1.DSBPickupLocationInfo.BadgeNoInfo = BadgeNoInfo.filter(Boolean).join(',');\r\n                    x1.ShiftOrderNumber = x.shiftOrderNo;\r\n                    if (scheduleInfo.controls['Drivers']['controls'].length > 0) {\r\n                        x1.DriverId = scheduleInfo.controls['Drivers'][\"controls\"][0][\"controls\"][\"Id\"].value;\r\n                    }\r\n                    this.OptionalPickupLocationInfo.push(x1);\r\n                });\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n\r\n    }\r\n    deleteOptionPickup(optionalPickup: OptionalPickupDetailModel) {\r\n        let enrouteInProgress = [3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\r\n        let IsDSCompleted = false;\r\n        let IsDSProgress = false;\r\n        if (optionalPickup != null) {\r\n            if (optionalPickup.Id != '') {\r\n                this._loadingOptionTerminal = true;\r\n                let OrderIds = [];\r\n                this.OrderFuelDetails.forEach(x => {\r\n                    if (x.FuelTypeDetails.findIndex(x => x.Id == optionalPickup.TfxFuelTypeId) >= 0) {\r\n                        if (OrderIds.findIndex(x1 => x1 == x.OrderId) == -1) {\r\n                            OrderIds.push(x.OrderId);\r\n                        }\r\n                    }\r\n                });\r\n                if (OrderIds.length > 0) {\r\n                    let trips = this.OptionPickupScheduleGroup['controls']['Trips'] as FormArray;\r\n                    trips.controls.forEach((trip: FormControl) => {\r\n                        let drs = trip['controls']['DeliveryRequests'] as FormArray;\r\n                        if (drs.controls.length > 0) {\r\n                            drs.controls.forEach((drForm: FormControl) => {\r\n                                if (!IsDSCompleted && !IsDSProgress) {\r\n                                    var OrderId = drForm.get('OrderId').value;\r\n                                    var StatusClassId = drForm.get('StatusClassId').value;\r\n                                    if (StatusClassId == 4 || StatusClassId == 5)\r\n                                        if (OrderIds.findIndex(x => x == OrderId) >= 0) {\r\n                                            IsDSCompleted = true;\r\n                                            return false;\r\n                                        }\r\n                                    if (enrouteInProgress.findIndex(x => x == StatusClassId) >= 0) {\r\n                                        this.OptionalPickupLocationDeleteInfo = optionalPickup;\r\n                                        IsDSProgress = true;\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n                if (!IsDSCompleted && !IsDSProgress) {\r\n                    var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == optionalPickup.incId);\r\n                    if (findIndex >= 0) {\r\n                        this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n                    }\r\n                    this.sbService.deleteOptionalPickup(optionalPickup.Id, optionalPickup.DriverId).subscribe(x => {\r\n                        this._loadingOptionTerminal = false;\r\n                        if (x != null && x.StatusCode == 0) {\r\n                            Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n                        }\r\n                        else {\r\n                            Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n                        }\r\n                        this.changeDetectorRef.detectChanges();\r\n                    });\r\n                }\r\n                else {\r\n                    this._loadingOptionTerminal = false;\r\n                    if (IsDSProgress) {\r\n                        $(\"#btn-inprogress-onthewayoptionpickup\").click();\r\n                    }\r\n                    else {\r\n                        $(\"#btn-completed-optionpickup\").click();\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            }\r\n            else {\r\n                var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == optionalPickup.incId);\r\n                if (findIndex >= 0) {\r\n                    this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n\r\n        }\r\n    }\r\n    deleteOptionalPickupNo() {\r\n        this.OptionalPickupLocationDeleteInfo = null;\r\n    }\r\n    deleteOptionalPickupYes() {\r\n        if (this.OptionalPickupLocationDeleteInfo != null) {\r\n            var findIndex = this.OptionalPickupLocationInfo.findIndex(x => x.incId == this.OptionalPickupLocationDeleteInfo.incId);\r\n            if (findIndex >= 0) {\r\n                this.OptionalPickupLocationInfo.splice(findIndex, 1);\r\n            }\r\n            this.sbService.deleteOptionalPickup(this.OptionalPickupLocationDeleteInfo.Id, this.OptionalPickupLocationDeleteInfo.DriverId).subscribe(x => {\r\n                if (x != null && x.StatusCode == 0) {\r\n                    Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n                }\r\n                $(\"#btn-completed-onthewayoptionpickup\").click();\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    setDRPickupValidators(form: FormGroup): void {\r\n        form.get('BulkPlant.Address').setValidators(null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n        form.get('Terminal.Name').setValidators(null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    private subscribeShowScheduleBuilderLoadingSubject(): void {\r\n        let subs = this.dataService.IsScheduleBuilderSubject.subscribe(x => {\r\n            if (x != null && x != undefined) {\r\n                if (x) {\r\n                    this._savingBuilder = true;\r\n                }\r\n                else {\r\n                    this._savingBuilder = false;\r\n                }\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n\r\n        });\r\n        this.DGSubscription.add(subs);\r\n    }\r\n\r\n    get getTrailerByIdFrolList() {\r\n        return this.UnassignedTrailers.reduce((prev, curr) => {\r\n            prev[curr.Id] = curr;\r\n            return prev;\r\n        }, {});\r\n    }\r\n    hoveredTrailer: TrailerViewModel = new TrailerViewModel();\r\n    bindRetainInfo(id: string) {\r\n        this.hoveredTrailer = this.getTrailerByIdFrolList[id];\r\n    }\r\n    subscribeCancelScheduleEvents(): void {\r\n        this.CancelEntireRowSubscription = this.dataService.CancelEntireRowSubject.subscribe(x => {\r\n            if (x) {\r\n                this.CancelDSScheduleLoadInfo = null;\r\n                let cancelDSinfo = { ShiftIndex: x.ShiftIndex, ScheduleIndex: x.ScheduleIndex };\r\n                this.cancelDSScheduleInfo = cancelDSinfo;\r\n                $(\"#btn-cancel-ds\").click();\r\n\r\n            }\r\n        });\r\n    }\r\n    unsubscribeCancelScheduleEvents(): void {\r\n        if (this.CancelEntireRowSubscription) {\r\n            this.CancelEntireRowSubscription.unsubscribe();\r\n        }\r\n    }\r\n    cancelRowPublish(shiftIndex: number, rowIndex: number): void {\r\n        let schedule = this.SbForm.get('Shifts.' + shiftIndex + '.Schedules.' + rowIndex) as FormGroup;\r\n        var trips = schedule.controls['Trips'] as FormArray;\r\n        this.cancelEntireRow(schedule, shiftIndex, rowIndex, trips);\r\n    }\r\n    cancelEntireRow(schedule: FormGroup, shiftIndex: number, rowIndex: number, trips: FormArray): void {\r\n        var validTrips = [];\r\n        for (var i = 0, j = 1; i < trips.length; i++, j++) {\r\n            let thisTrip = trips.controls[i] as FormGroup;\r\n            if (thisTrip && (thisTrip.valid || this.validatePublishLoad(thisTrip))) {\r\n                if (thisTrip.get('DeliveryRequests').value.length > 0) {\r\n                    validTrips.push(i);\r\n                }\r\n            }\r\n        }\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var drivers = schedule.controls['Drivers'].value;\r\n        var trailers = schedule.controls['Trailers'].value;\r\n        for (var i = 0; i < trips.length; i++) {\r\n            var tripValue = trips.value[i];\r\n            if (validTrips.includes(tripValue.DriverColIndex)) {\r\n                this.setTripStatusToCancel(tripValue);\r\n            }\r\n            dsbModel.Trips.push(tripValue);\r\n        }\r\n        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers, t.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value });\r\n        dsbModel.Status = 3;\r\n        if (dsbModel.Trips.length > 0) {\r\n            this.sbService.CancelDriverSchedule(dsbModel).subscribe(data => {\r\n                this._savingBuilder = false;\r\n                this.updateLoadForm(data, trips);\r\n            });\r\n        }\r\n        else {\r\n            this._savingBuilder = false;\r\n        }\r\n    }\r\n    setTripStatusToCancel(trip: any) {\r\n        this.setTripStatus(trip);\r\n        this.setDeliveryGroupStatus(trip, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(trip, DeliveryReqStatus.ScheduleCreated);\r\n    }\r\n    public cancelDriverSchedule() {\r\n        if (Object.keys(this.cancelDSScheduleInfo).length > 0) {\r\n            this.cancelRowPublish(this.cancelDSScheduleInfo.ShiftIndex, this.cancelDSScheduleInfo.ScheduleIndex);\r\n        }\r\n        else if (Object.keys(this.CancelDSScheduleLoadInfo).length > 0) {\r\n            this.cancelDSScheduleBuilder(this.CancelDSScheduleLoadInfo.shiftIndex, this.CancelDSScheduleLoadInfo.rowIndex, this.CancelDSScheduleLoadInfo.colIndex, this.CancelDSScheduleLoadInfo.schedule, this.CancelDSScheduleLoadInfo.trip);\r\n        }\r\n    }\r\n    public rejectDriverSchedule() {\r\n        this.cancelDSScheduleInfo == null;\r\n        this.CancelDSScheduleLoadInfo = null;\r\n    }\r\n    subscribeCancelDSDeliveryGroupSubject(): void {\r\n        this.CancelDSDeliveryGroupSubscription = this.dataService.CancelDSDeliveryGroupSubject.subscribe(x => {\r\n            if (x) {\r\n                this.cancelDSScheduleInfo == null;\r\n                $(\"#btn-cancel-ds\").click();\r\n                this.CancelDSScheduleLoadInfo = { shiftIndex: x.shiftIndex, rowIndex: x.rowIndex, colIndex: x.colIndex, schedule: x.schedule, trip: x.trip };\r\n            }\r\n        });\r\n    }\r\n    cancelDSScheduleBuilder(i: number, j: number, k: number, schedule: any, trip: FormGroup): void {\r\n        if (trip != null && trip != undefined) {\r\n            if (trip.valid || this.validatePublishLoad(trip)) {\r\n                this.dataService.setShowDeliveryGroupSubject(false);\r\n                this.cancelDSLoadSave(i, j, k, schedule, trip);\r\n            }\r\n        }\r\n    }\r\n    cancelDSLoadSave(i: number, j: number, k: number, schedule: any, trip: FormGroup) {\r\n        this._savingBuilder = true;\r\n        this.changeDetectorRef.detectChanges();\r\n        var dsbModel = this.getDSBSaveModel();\r\n        var tripValue = trip.value;\r\n        this.setTripStatus(tripValue);\r\n        this.setDeliveryGroupStatus(tripValue, DeliveryGroupStatus.Published);\r\n        this.setDeliveryRequestStatus(tripValue, DeliveryReqStatus.ScheduleCreated);\r\n        tripValue.Drivers = schedule.get('Drivers').value;\r\n        tripValue.Trailers = schedule.get('Trailers').value;\r\n        tripValue.IsIncludeAllRegionDriver = schedule.get('IsIncludeAllRegionDriver').value;\r\n        dsbModel.Trips.push(tripValue);\r\n        dsbModel.Status = 3;\r\n        this.sbService.CancelDriverSchedule(dsbModel).subscribe(data => {\r\n            this._savingBuilder = false;\r\n            this.updateLoadForm(data, trip);\r\n        });\r\n    }\r\n    subscribeCancelDeliveryGroupNormalGroupDSSubject(): void {\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject = this.dataService.CancelDSDeliveryGroupNormalGroupDSSubject.subscribe(x1 => {\r\n            if (x1) {\r\n                this.CancelDSInfo(x1);\r\n            }\r\n        });\r\n    }\r\n    subscribeCancelDSLocationGroupSubject(): void {\r\n        this.CancelDSLocationGroupSubscription = this.dataService.CancelDSLocationSubject.subscribe(x => {\r\n            if (x) {\r\n                this.GetCancelDS(x.jobId, x.trip, x.isTBD, x.TBDGroupId);\r\n            }\r\n        });\r\n    }\r\n    subscribeDispatcherLoadDragDropSubscription(): void {\r\n        this.DispatcherLoadDragDropSubscription = this.dataService.DispatcherLoadDragDropSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let trip = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex + '.Trips.' + x.trip.value.DriverColIndex) as FormGroup;\r\n                if (trip) {\r\n                    trip.controls['IsDispatcherDragDropSequence'].setValue(true);\r\n                    trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n                    this._savingBuilder = true;\r\n                    let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                    let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n                    _drArray.clear();\r\n                    let DRsDetails = x.DRs as DeliveryRequestViewModel[];\r\n                    var _drFormArray = this.utilService.getDispatcherDeliveryRequestFormArray(DRsDetails, isCommonPickup, 0);\r\n                    _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                        _drArray.push(_drForm);\r\n                    });\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setScheduleChangeDetectSubject(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    subscribeDispatcherLoadDragDropMapSubscription(): void {\r\n        this.DispatcherLoadDragDropMapSubscription = this.dataService.DispatcherLoadDragDropMapSubject.subscribe(x => {\r\n            if (x) {\r\n\r\n                let trip = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex + '.Trips.' + x.trip.value.DriverColIndex) as FormGroup;\r\n                if (trip) {\r\n                    this._savingBuilder = true;\r\n                    let sortedDRs = [];\r\n                    let LocationSeqInfo = x.JobIds as DispatcherMapSeq[];\r\n                    trip.controls['IsDispatcherDragDropSequence'].setValue(true);\r\n                    trip.controls['IsDispatcherDragDropSequenceModified'].setValue(true);\r\n                    let deliveryRequests = trip.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\r\n                    if (LocationSeqInfo.length > 0) {\r\n                        LocationSeqInfo.forEach(x1 => {\r\n                            if (x1.IsTBD == false) {\r\n                                var drDetails = deliveryRequests.filter(x => x.JobId == x1.JobId);\r\n                                drDetails.forEach(x2 => {\r\n                                    sortedDRs.push(x2);\r\n                                });\r\n                            }\r\n                            else {\r\n                                var drDetails = deliveryRequests.filter(x => x.TBDGroupId == x1.TBDGroupId);\r\n                                drDetails.forEach(x2 => {\r\n                                    sortedDRs.push(x2);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                    let isCommonPickup = trip.controls['IsCommonPickup'].value;\r\n                    let _drArray = trip.controls['DeliveryRequests'] as FormArray;\r\n                    _drArray.clear();\r\n                    var _drFormArray = this.utilService.getDispatcherDeliveryRequestFormArray(sortedDRs, isCommonPickup, 0);\r\n                    _drFormArray.controls.forEach((_drForm: FormGroup) => {\r\n                        _drArray.push(_drForm);\r\n                    });\r\n                    this.changeDetectorRef.markForCheck();\r\n                    if ((trip.controls['TripId'] != null || trip.controls['DeliveryRequests'].value.length > 0) && trip.controls['DeliveryGroupPrevStatus'].value != 2) {\r\n                        this.draftScheduleBuilder(trip);\r\n                    }\r\n                    else {\r\n                        var schedule = this.SbForm.get('Shifts.' + x.trip.value.ShiftIndex + '.Schedules.' + x.trip.value.DriverRowIndex) as FormGroup;\r\n                        if (schedule) {\r\n                            this.publishScheduleBuilder(x.trip.value.ShiftIndex, x.trip.value.DriverRowIndex, x.trip.value.DriverColIndex, schedule, trip);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    unsubscribeCancelLocationScheduleEvents(): void {\r\n        if (this.CancelDSLocationGroupSubscription) {\r\n            this.CancelDSLocationGroupSubscription.unsubscribe();\r\n        }\r\n    }\r\n    GetCancelDS(jobId: number, trip: FormGroup, isTBD: number, TBDGroupId: string) {\r\n        this.cancelDSDeliveryScheduleViewModel = [];\r\n        var isGroupDRs = false;\r\n        let drs = trip.controls['DeliveryRequests'].value;\r\n        let filteredDRs = [];\r\n        if (isTBD == 0) {\r\n            filteredDRs = drs.filter(x => x.JobId == jobId && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n            if (filteredDRs.filter(x => x.GroupParentDRId != '' && x.GroupParentDRId != null).length > 0) {\r\n                isGroupDRs = true;\r\n            }\r\n        }\r\n        else {\r\n            filteredDRs = drs.filter(x => x.TBDGroupId == TBDGroupId && x.TrackableScheduleId > 0) as DeliveryRequestViewModel[];\r\n            if (filteredDRs.filter(x => x.GroupParentDRId != '' && x.GroupParentDRId != null).length > 0) {\r\n                isGroupDRs = true;\r\n            }\r\n        }\r\n        if (!isGroupDRs) {\r\n            if (filteredDRs.length > 0) {\r\n                //intialize the model.\r\n                this._savingBuilder = true;\r\n                let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n                cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n                cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n                filteredDRs.forEach(x1 => {\r\n                    //normal DR\r\n                    let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                    cancelDSDeliverySchedule.DeliveryReqId = x1.Id;\r\n                    cancelDSDeliverySchedule.IsSubDR = false;\r\n                    if (x1.PostLoadInfo != null) {\r\n                        cancelDSDeliverySchedule.IsPreLoadDR = true;\r\n                    }\r\n                    cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    //post load info\r\n                    if (x1.PostLoadInfo != null) {\r\n                        let cancelDSPostLoadDeliverySchedule = new CancelDSDeliverySchedule();\r\n                        cancelDSPostLoadDeliverySchedule.DeliveryReqId = x1.PostLoadInfo.DrId;\r\n                        cancelDSPostLoadDeliverySchedule.IsSubDR = false;\r\n                        cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSPostLoadDeliverySchedule);\r\n                    }\r\n                });\r\n                this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                        this.cancelDSDeliveryScheduleViewModel.forEach(x1 => {\r\n                            x1.IsChecked = true;\r\n                        });\r\n                        $(\"#btn-cancel-location-ds\").click();\r\n                    }\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                });\r\n\r\n            }\r\n        }\r\n        else {\r\n            if (filteredDRs.length > 0) {\r\n                this._savingBuilder = true;\r\n                let cancelDSDeliveryScheduleInfo = new CancelDSDeliveryScheduleInfo();\r\n                cancelDSDeliveryScheduleInfo.RegionId = this.SelectedRegionId;\r\n                cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules = [];\r\n                filteredDRs.forEach(x => {\r\n                    let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                    cancelDSDeliverySchedule.DeliveryReqId = x.Id;\r\n                    cancelDSDeliverySchedule.IsSubDR = false;\r\n                    cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    if (x.GroupParentDRId != '' && cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.findIndex(x1 => x1.DeliveryReqId == x.GroupParentDRId) == -1) {\r\n                        let cancelDSDeliverySchedule = new CancelDSDeliverySchedule();\r\n                        cancelDSDeliverySchedule.DeliveryReqId = x.GroupParentDRId;\r\n                        cancelDSDeliverySchedule.IsSubDR = true;\r\n                        cancelDSDeliveryScheduleInfo.CancelDSDeliverySchedules.push(cancelDSDeliverySchedule);\r\n                    }\r\n                });\r\n                this.sbService.GetSubDRInfoCancelDS(cancelDSDeliveryScheduleInfo).subscribe(response => {\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.cancelDSDeliveryScheduleViewModel = response as CancelDSDeliveryScheduleViewModel[];\r\n                        $(\"#btn-location-cancel-ds-info\").click();\r\n                    }\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    cancelLocationDriverSchedule() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#cancelLocationDS\").click();\r\n                this._savingBuilder = true;\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.CancelDSInfo(response);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    CancelDSInfo(x1: any) {\r\n        var cancelDsData = x1 as CancelDeliverySchedule[];\r\n        cancelDsData.forEach(x => {\r\n            var scheduleBuilderId = this.SbForm.controls[\"Id\"].value;\r\n            if (scheduleBuilderId == x.ScheduleBuilderId) {\r\n                let trip = this.SbForm.get('Shifts.' + x.ShiftIndex + '.Schedules.' + x.DriverRowIndex + '.Trips.' + x.DriverColIndex) as FormGroup;\r\n                if (trip != null) {\r\n                    var deliveryRequests = trip.controls[\"DeliveryRequests\"] as FormArray;\r\n                    if (deliveryRequests) {\r\n                        for (var j = 0; j < deliveryRequests.length; j++) {\r\n                            var deliveryRequest = deliveryRequests.controls[j] as FormGroup;\r\n                            if (x.DeliveryReqId == deliveryRequest.controls[\"Id\"].value) {\r\n                                deliveryRequest.controls[\"ScheduleStatus\"].patchValue(x.ScheduleStatus);\r\n                                deliveryRequest.controls[\"TrackScheduleStatus\"].patchValue(x.TrackScheduleStatus);\r\n                                deliveryRequest.controls[\"TrackScheduleStatusName\"].patchValue(x.TrackScheduleStatusName);\r\n                                deliveryRequest.controls[\"StatusClassId\"].patchValue(x.StatusClassId);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.changeDetectorRef.detectChanges();\r\n        this.dataService.setScheduleChangeDetectSubject(true);\r\n    }\r\n    public checkAllLocationDS() {\r\n        if ($(\"#selectAllLocationDSBGroupCancel\").is(\":checked\")) {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = true;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            this.cancelDSDeliveryScheduleViewModel.forEach(x => {\r\n                x.IsChecked = false;\r\n            });\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    public checkLocationDSChange(ele: number, ds: CancelDSDeliveryScheduleViewModel) {\r\n        var eleId = \"dsLocationCheck\" + ele;\r\n        var eleIdDom = $(\"#\" + eleId).is(\":checked\");\r\n        if (eleIdDom) {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = true;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        } else {\r\n            var deliveryReq = this.cancelDSDeliveryScheduleViewModel.find(x1 => x1.DeliveryReqId == ds.DeliveryReqId);\r\n            if (deliveryReq != null) {\r\n                deliveryReq.IsChecked = false;\r\n            }\r\n            this.changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    CancelSelectedLocationDS() {\r\n        this.DeliveryReqCancelScheduleUpdateModel = [];\r\n        if (this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true).length > 0) {\r\n            let cancelDSfinalInfo = this.cancelDSDeliveryScheduleViewModel.filter(x => x.IsChecked == true);\r\n            cancelDSfinalInfo.forEach(x => {\r\n                let delRequestCancelModel = new CancelDeliverySchedule();\r\n                delRequestCancelModel.ScheduleBuilderId = x.ScheduleBuilderId;\r\n                delRequestCancelModel.DeliveryReqId = x.DeliveryReqId;\r\n                delRequestCancelModel.DriverColIndex = x.DriverColIndex;\r\n                delRequestCancelModel.DriverId = x.DriverId;\r\n                delRequestCancelModel.DriverRowIndex = x.DriverRowIndex;\r\n                delRequestCancelModel.ShiftId = x.ShiftId;\r\n                delRequestCancelModel.ShiftIndex = x.ShiftIndex;\r\n                delRequestCancelModel.TrackableScheduleId = x.TrackableScheduleId;\r\n                this.DeliveryReqCancelScheduleUpdateModel.push(delRequestCancelModel);\r\n            });\r\n            if (this.DeliveryReqCancelScheduleUpdateModel.length > 0) {\r\n                $(\"#confirm-location-cancel-ds-dismiss\").click();\r\n                this._savingBuilder = true;\r\n                this.sbService.CancelDeliveryGroupSchedule(this.DeliveryReqCancelScheduleUpdateModel).subscribe(response => {\r\n                    this._savingBuilder = false;\r\n                    this.changeDetectorRef.markForCheck();\r\n                    this.dataService.setGroupChangeDetectSubject(true);\r\n                    if (response != null && response != undefined && response.length > 0) {\r\n                        this.CancelDSInfo(response);\r\n                        Declarations.msgsuccess(\"Delivery schedule cancelled successfully.\", 'Success', 2500);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror(\"Select at least one DS for cancel schedule.\", 'Success', 2500);\r\n        }\r\n    }\r\n    deleteSingleLoad(dsbModel: ResetDeliveryGroupScheduleModel) {\r\n        dsbModel.ScheduleBuilderId = this.SbForm.get('Id').value;\r\n        this._savingBuilder = true;\r\n        this.sbService.deleteDeliverySchedule(dsbModel).subscribe(response => {\r\n            if (response != null) {\r\n                this._savingBuilder = false;\r\n            }\r\n            else {\r\n                Declarations.msgerror(\"One of the services did not respond. Please contact the administrator.\", undefined, undefined);\r\n            }\r\n            this._savingBuilder = false;\r\n            this.changeDetectorRef.markForCheck();\r\n            this.dataService.setScheduleChangeDetectSubject(true);\r\n        });\r\n    }\r\n    private sorDrByProductSequence(IsDispatcherDragDropSequence: boolean, drList: DeliveryRequestViewModel[]): DeliveryRequestViewModel[] {\r\n        drList = sortArrayTwice(drList, 'JobId', 'ProductSequence');\r\n        if (IsDispatcherDragDropSequence) {\r\n            drList = sortByKeyAsc(drList, 'DispatcherDragDropSequence');\r\n        }\r\n        return drList;\r\n    }\r\n    private logDRMaxFillIssue(trip: any) {\r\n        //log max fill validation issue.\r\n        var delRequests: DeliveryRequestViewModel[] = [];\r\n        var _thisDrArray = trip.get('DeliveryRequests') as FormArray;\r\n        _thisDrArray.controls.forEach((delReq: FormGroup) => {\r\n            if (delReq.invalid) {\r\n                var invalidctrls = CustomAbstractControls.findErrors(delReq);\r\n                if (invalidctrls.indexOf(\"RequiredQuantity\") > -1) {\r\n                    //call api for debug log.\r\n                    delRequests.push(delReq.value);\r\n\r\n                }\r\n            }\r\n        });\r\n        if (delRequests.length > 0) {\r\n            this.sbService.postValidateDRMaxFill(delRequests).subscribe(response => {\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n","<div class=\"driver-column-view-container\" [formGroup]=\"SbForm\">\r\n    <ng-container [formArrayName]=\"'Shifts'\">\r\n        <div class=\"row flex-nowrap mx-0\" style=\"min-height: 92%;\">\r\n            <ng-container *ngFor=\"let shift of SbForm.controls['Shifts']['controls'];  let i = index; trackBy: trackByShiftId\">\r\n                <div *ngIf=\"checkShiftVisibility(shift);\">\r\n                    <div class=\"shift-view\" id=\"shift\" *ngIf=\"shift.controls['IsVisible'].value\">\r\n                        <ng-container [formGroupName]=\"i\">\r\n                            <div class=\"shift-info\">\r\n                                <span class=\"row-number mr5 fs12 mt1\">Shift {{shift.controls['OrderNo'].value+1}}</span>\r\n                                <i class=\"far fa-clock mr5\"></i> Shift - {{shift.controls['StartTime'].value}} - {{shift.controls['EndTime'].value}}\r\n                                <a (click)=\"moveShiftToLoadQueue(i, shift)\" *ngIf=\"disableControl==false\" placement=\"top\" ngbTooltip=\"Move Shift to Load Queue\" class=\"fs14 ml10 pointer\">\r\n                                    <i class=\"far fa-arrow-alt-circle-left\"></i>\r\n                                </a>\r\n                                <span class=\"mt2 ml5\">\r\n                                    <input *ngIf=\"SbForm.get('IsAssignDrEnabled').value && isDrExistInShift(shift.controls['Schedules'])\"\r\n                                           type=\"checkbox\"\r\n                                           id=\"shift_{{i}}\"\r\n                                           name=\"shift_{{i}}\"\r\n                                           [checked]=\"isAllShiftDrSelected(shift.controls['Schedules'])\"\r\n                                           (change)=\"shiftSelectedForCarrierAssignment($event, shift.controls['Schedules'])\">\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"row flex-nowrap plr-5\" [formArrayName]=\"'Schedules'\" id=\"shift{{i+1}}\">\r\n                                <ng-container *ngFor=\"let schedule of shift.controls['Schedules'].controls; let j = index; let firstSchedule = first; let isLast=last; trackBy: trackByScheduleIndex\">\r\n                                    <ng-container [formGroupName]=\"j\">\r\n                                        <ng-container *ngIf=\"schedule && schedule.get('IsLoadQueueCollapsed').value != true\">\r\n                                            <app-driver-schedule-column-view [i]=\"i\" [j]=\"j\" [shiftOrderNo]=\"shift.controls['OrderNo'].value+1\" [ShiftId]=\"shift.controls['Id'].value\" [SbForm]=\"SbForm\" [schedule]=\"schedule\" [ScheduleLength]=\"shift.controls['Schedules'].controls.length\"></app-driver-schedule-column-view>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                                <div id=\"visibilityObserver{{i}}\" [attr.data-shiftIndex]=\"i\" style=\"height:5px; background: transparent;\"></div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <div *ngIf=\"SbForm.controls['Shifts']['controls'].length==0 && IsNoDriverShiftFound==0\" class=\"text-center shift-wrapper\">\r\n        <i class=\"fa fas fa-exclamation-triangle opacity8\"></i>\r\n        <label class=\"color-grey mb0 ml10\">No shifts available in this region</label>\r\n    </div>\r\n</div>\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_savingBuilder\" style=\"position:fixed !important\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"driverTrailerModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" [ngClass]=\"{' modal-sm': !IsTrailerExists}\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\" [formGroup]=\"DriverTrailerForm\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mt2 mb15 pt0 pb0\">{{IsTrailerExists ? 'Assign Driver / Trailers' : 'Assign Driver'}}</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"editDriverCancel()\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <input type=\"hidden\" formControlName=\"Index1\" />\r\n                <input type=\"hidden\" formControlName=\"Index2\" />\r\n                <input type=\"hidden\" formControlName=\"StartTime\" />\r\n                <input type=\"hidden\" formControlName=\"EndTime\" />\r\n                <input type=\"hidden\" formControlName=\"Compartments\" />\r\n                <input type=\"hidden\" formControlName=\"TrailerType\" />\r\n                <div id=\"dt-section\" *ngIf=\"!(_otherRegionDriverSubject | async) && !_publishedRequestExists\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-check form-check-inline pull-right\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsFilldCompatible\" (change)=\"toggleFilldCompatible();\" id=\"FilldCompatible\">\r\n                                <label class=\"form-check-label\" for=\"FilldCompatible\">TrueFill Inc. Compatible</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"(DriverTrailerForm.controls['IsIncludeAllRegionDriver'].value || (!UnassignedDrivers || UnassignedDrivers.length == 0)) && SbForm.get('IsDsbDriverSchedule').value\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"form-check form-check-inline pull-right\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsIncludeAllRegionDriver\" (change)=\"getDriverdetails();\" id=\"IncludeAllRegion\">\r\n                                <label class=\"form-check-label\" for=\"IncludeAllRegion\">Other Regions' Drivers</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6 form-group\" *ngIf=\"IsTrailerExists\">\r\n                            <label>Trailers</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Trailers\" [(ngModel)]=\"SelectedTrailers\" [placeholder]=\"'Select Trailers'\"\r\n                                                     [settings]=\"TrailerDdlSettings\" [data]=\"UnassignedTrailers||[]\" (onSelectAll)=\"onTrailerSelectAll($event)\"\r\n                                                     (onDeSelectAll)=\"onTrailerDeSelectAll()\">\r\n\r\n                                <ng-template #optionsTemplate let-item let-option=\"option\" let-id=\"id\" let-isSelected=\"isSelected\">\r\n                                    <div>\r\n                                        <label>\r\n                                            {{getTrailerByIdFrolList[id].TrailerId}}\r\n\r\n                                            <label *ngIf=\"getTrailerByIdFrolList[id].RetainFuel && getTrailerByIdFrolList[id].RetainFuel.length>0\"\r\n                                                   class=\"multiselect-letf-text\"\r\n                                                   placement=\"right\"\r\n                                                   [ngbPopover]=\"retain_popContent\"\r\n                                                   #p=\"ngbPopover\"\r\n                                                   container=\"body\"\r\n                                                   popoverClass=\"dsb-popover-retain\"\r\n                                                   (mouseenter)=\"p.open();bindRetainInfo(id);\"\r\n                                                   (mouseleave)=\"p.close();\">\r\n                                                ({{getTrailerByIdFrolList[id].RetainFuel.length}})\r\n                                            </label>\r\n                                        </label>\r\n                                    </div>\r\n                                </ng-template>\r\n\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"form-group\" [ngClass]=\"{' col-sm-12 ': !IsTrailerExists,' col-sm-6':IsTrailerExists }\">\r\n                            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingDrivers\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                            <label>Driver</label>\r\n                            <select class=\"form-control\" formControlName=\"Driver\" id=\"scheduleDriver\">\r\n                                <option [value]=\"null\">Select Driver</option>\r\n                                <ng-container *ngFor=\"let driver Of UnassignedDrivers||[]\">\r\n                                    <option [value]=\"driver.Id\" [selected]=\"driver.Id == DriverTrailerForm.controls['Driver'].value\">\r\n                                        {{driver.Name}}\r\n                                    </option>\r\n                                </ng-container>\r\n                            </select>\r\n                            <span class=\"color-maroon\" *ngIf=\"DriverTrailerForm.controls['Driver'].errors && (DriverTrailerForm.controls['Driver'].touched ||\r\n                                  DriverTrailerForm.controls['Driver'].dirty)\">\r\n                                <span *ngIf=\"DriverTrailerForm.controls['Driver'].errors.required\">\r\n                                    Required.\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnDriverTrailerDismiss\" class=\"btn btn-lg\" data-dismiss=\"modal\" (click)=\"editDriverCancel()\">Cancel</button>\r\n                        <button type=\"button\" id=\"btnDriverTrailerUpdate\" class=\"btn btn-lg btn-primary\" (click)=\"checkOtherRegionDriver()\">\r\n                            Save &nbsp;\r\n                            <i *ngIf=\"(dataService.IsLoadingButtonSubject | async)\" class=\"fa fa-circle-o-notch fa-spin\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"dt-alert\" *ngIf=\"(_otherRegionDriverSubject | async)\">\r\n                    <label><b>{{SelectedDriverName}}</b> does not work in this shift. Do you really want to assign?</label>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnOtherRegionDriverNo\" class=\"btn btn-lg\" (click)=\"onOtherRegionDriverNo()\">No</button>\r\n                        <button type=\"button\" id=\"btnOtherRegionDriverYes\" class=\"btn btn-lg btn-primary\" (click)=\"onOtherRegionDriverYes()\">Yes</button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"dt-alert\" *ngIf=\"_publishedRequestExists\">\r\n                    <label> Do you want to reflect this changes to already published group(s)?</label>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnPublishChangesNo\" class=\"btn btn-lg\" (click)=\"onPublishChangesNo()\">No</button>\r\n                        <button type=\"button\" id=\"btnPublishChangesYes\" class=\"btn btn-lg btn-danger\" (click)=\"onPublishChangesYes()\">Yes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-delete-delgrp\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-delgrp\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-delgrp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Driver is on the way to job.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-publish-delgrp\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-publish-delgrp\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-publish-delgrp\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"publishDelGrpHeading\">Driver is on the way to job.</p>\r\n                <div class=\"text-right mt10\">\r\n                    <button type=\"button\" (click)=\"publishLoadNo()\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"publishLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" id=\"btnconfirm-dragdrop-dr\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-dragdrop-dr\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-dragdrop-dr\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDrHeading\">Changes will reflect for already published load(s).</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" (click)=\"dragDelReqToAnotherLoadNo()\">No</button>\r\n                    <button type=\"button\" (click)=\"dragDelReqToAnotherLoadYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Yes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"compartment-assigning\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper col-sm-12\">\r\n        <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingCmprts\"><span class=\"spinner-dashboard pa\"></span></div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-8 pt10\">\r\n                <a class=\"close-panel\" onclick=\"closeSlidePanel();\">\r\n                    <i class=\"fa fa-close fs18\"></i>\r\n                </a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">\r\n                    <ng-container *ngFor=\"let trailer of CompartmentEditModel.Schedule?.Trailers||[]; let isLast= last\">\r\n                        {{trailer.TrailerId}} <a (click)=\"TrailerRetainDetails(trailer.Id);\" title=\"Fuel Retain Details\" *ngIf=\"checkIfTrailerFuelRetainExists(trailer.Id)\"><i class=\"fa fa-info-circle color-maroon\"></i> </a> <span *ngIf=\"!isLast\">,</span>\r\n                    </ng-container> : <small>Assign products to compartments</small>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"compartment-wrapper\">\r\n            <div class=\"row\" *ngIf=\"CompartmentDetails.length>0\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"alert alert-warning pa5 pb0 mb0\">\r\n                        <h2 class=\"fs12 f-bold mb10 mt0\">There is some fuel retained in container <a class=\"fa fa-times color-maroon pull-right\" (click)=\"closeRetainInfo()\"></a></h2>\r\n                        <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                            <thead>\r\n                                <tr class=\"f-bold\">\r\n                                    <th>Compartment</th>\r\n                                    <th>Fuel Type</th>\r\n                                    <th>Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let compData of CompartmentDetails\">\r\n                                    <td>{{compData.CompartmentId}}</td>\r\n                                    <td>{{compData.ProductType}}</td>\r\n                                    <td>\r\n                                        {{compData.Quantity}}\r\n                                        <span *ngIf=\"compData.UOM==1\">G</span>\r\n                                        <span *ngIf=\"compData.UOM!=1\">L</span>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row row-mlr5\" [formGroup]=\"CompartmentViewFormGroup\">\r\n                <ng-container [formArrayName]=\"'Trips'\">\r\n                    <ng-container *ngFor=\"let trip of CompartmentViewFormGroup.controls['Trips']['controls']; let i = index;\">\r\n                        <div class=\"col-sm-3 col-plr5 mb10\" [formGroupName]=\"i\">\r\n                            <div class=\"border pa5 shadow-b radius-5 mt10 mb15 full-height\">\r\n                                <div class=\"mt0 mb0 fs14\">\r\n                                    Load {{i+1}} -\r\n                                    <span class=\"opacity8\"><i class=\"far fa-clock\"></i></span>\r\n                                    <span class=\"ml5 mr5 opacity8\">{{trip.controls['StartTime'].value}}</span>\r\n                                </div>\r\n                                <input type=\"hidden\" formControlName=\"ShiftIndex\" />\r\n                                <input type=\"hidden\" formControlName=\"DriverRowIndex\" />\r\n                                <input type=\"hidden\" formControlName=\"DriverColIndex\" />\r\n                                <ng-container [formArrayName]=\"'DeliveryRequests'\">\r\n                                    <ng-container *ngFor=\"let dr of trip.controls['DeliveryRequests']['controls']; let j = index;\">\r\n                                        <div class=\"bg-lightgrey pa5 shadow-b radius-5\" [formGroupName]=\"j\">\r\n                                            <input type=\"hidden\" formControlName=\"RequiredQuantity\" [ValidateCompartmentsQuantity]=\"dr\" />\r\n                                            <h5 class=\"fs14\">\r\n                                                {{dr.controls['ProductType'].value}},\r\n                                                <span *ngIf=\"dr.controls['ScheduleQuantityType'].value==1\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}} {{dr.controls['UoM'].value==1 ? 'G' : 'L'}}</span>\r\n                                                <span *ngIf=\"dr.controls['ScheduleQuantityType'].value>1\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span> -\r\n                                                <small>{{dr.controls['PickupName'].value}}</small>\r\n                                            </h5>\r\n                                            <ng-container [formArrayName]=\"'Compartments'\">\r\n                                                <ng-container *ngFor=\"let comp of dr.controls['Compartments']['controls']; let k = index; let isLast = last;\">\r\n                                                    <div class=\"row row-mlr5\" [formGroupName]=\"k\">\r\n                                                        <div class=\"col-sm-12 col-plr5\" [ngClass]=\"{'hide-element': CompartmentEditModel.Schedule.Trailers.length<=1}\">\r\n                                                            <select class=\"form-control mb5\" formControlName=\"TrailerId\" [ngClass]=\"{'border-red' : comp.controls['TrailerId'].touched && comp.controls['TrailerId'].errors?.required}\" (change)=\"getRetainTrailerInfo(comp, dr)\">\r\n                                                                <option [value]=\"null\">Select Trailer</option>\r\n                                                                <ng-container *ngFor=\"let trailer of CompartmentEditModel.Schedule.Trailers\">\r\n                                                                    <option [value]=\"trailer.Id\">{{trailer.TrailerId}}</option>\r\n                                                                </ng-container>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-7 col-plr5\">\r\n                                                            <select class=\"form-control\" formControlName=\"CompartmentId\" [ngClass]=\"{'border-red' : comp.controls['CompartmentId'].touched && comp.controls['CompartmentId'].errors?.required}\" (change)=\"getRetainCompartmentInfo(comp, dr)\">\r\n                                                                <option [value]=null>Select Compartment</option>\r\n                                                                <ng-container *ngFor=\"let cpt of TrailerCompartments[comp.controls['TrailerId'].value]||[]; let l = index\">\r\n                                                                    <option [value]=\"cpt.CompartmentId\">\r\n                                                                        {{cpt.CompartmentId}} ({{cpt.Capacity | number:'1.0-2'}} {{dr.controls['UoM'].value==1 ? 'G' : 'L'}})\r\n                                                                    </option>\r\n                                                                </ng-container>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-5 col-plr5\">\r\n                                                            <div class=\"input-group\" *ngIf=\"dr.controls['ScheduleQuantityType'].value<=1\">\r\n                                                                <input [readonly]=\"(dr.controls['disabledControl'].value || dr.controls['IsRetainFuelLoaded']?.value)?true:null\" type=\"text\" formControlName=\"Quantity\" class=\"form-control\" placeholder=\"Quantity\" (change)=\"validateDrQuantity(dr.controls['RequiredQuantity'])\"\r\n                                                                       [ngClass]=\"{'border-red' : comp.controls['Quantity'].touched && comp.controls['Quantity'].errors}\" />\r\n                                                                <div class=\"input-group-append\">\r\n                                                                    <span class=\"input-group-text fs12\">\r\n                                                                        {{dr.controls['UoM'].value==1 ? 'G' : 'L'}}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"mt9\" *ngIf=\"dr.controls['ScheduleQuantityType'].value>1\">\r\n                                                                {{dr.controls['ScheduleQuantityTypeText'].value}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-12 col-plr5\" *ngIf=\"!dr.controls['disabledControl'].value\">\r\n                                                            <button type=\"button\" class=\"btn btn-link mr5 fs11 mb5 pt0 mt2\" (click)=\"removeCompartment(dr, k)\">\r\n                                                                <i class=\"fa fa-trash-alt color-maroon float-left mr5 mt3 fs11\"></i><span class=\"float-left mt1\">Remove</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-6 col-plr5\" *ngIf=\"isLast && !dr.controls['disabledControl'].value\">\r\n                                                            <button type=\"button\" class=\"btn btn-link mr5 pt0\" (click)=\"addCompartment(dr, comp.controls['TrailerId'].value)\">\r\n                                                                <i class=\"fa fa-plus-circle float-left mr5 mt3\"></i><span class=\"float-left\">Compartment</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                            <div *ngIf=\"dr.controls['RequiredQuantity'].errors?.CompartmentQuantity\">\r\n                                                <span class=\"color-maroon\">Compartment(s) exceeded DR quantity.</span>\r\n                                            </div>\r\n                                            <button *ngIf=\"dr.controls['Compartments']['controls'].length==0\" type=\"button\" class=\"btn btn-link mr5\" (click)=\"addCompartment(dr, null)\">\r\n                                                <i class=\"fa fa-plus-circle float-left mr5 mt3\"></i><span class=\"float-left\">Compartment</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"text-right col-sm-12\">\r\n                <button class=\"btn btn-lg\" type=\"button\" onclick=\"closeSlidePanel();\">Cancel</button>\r\n                <button class=\"btn btn-primary btn-lg\" (click)=\"saveCompartmentAssignment()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"TransferDSModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingDSData\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mt2 mb15 pt0 pb0 heading\">Transfer DS to another load</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectshift\">Shift</label>\r\n                                <select class=\"form-control\" id=\"selectshift\" [(ngModel)]=\"SelectedShift\" (change)=\"GetShiftColInfo(SelectedShift)\">\r\n                                    <option *ngFor=\"let shift of DSShifts\" [ngValue]=\"shift\">{{shift.ShiftInfo}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectcolumn\">Column</label>\r\n                                <select class=\"form-control\" [(ngModel)]=\"SelectedShiftColumn\" (change)=\"GetShiftLoadInfo(SelectedShiftColumn)\">\r\n                                    <option *ngFor=\"let shiftCol of ShiftColumn\" [ngValue]=\"shiftCol\">{{shiftCol.ColIndexName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectload\">Loads</label>\r\n                                <select class=\"form-control\" id=\"selectload\" [(ngModel)]=\"SelectedLoad\">\r\n                                    <option *ngFor=\"let shiftld of ShiftLoad\" [ngValue]=\"shiftld\">{{shiftld.LoadName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"form-group\" *ngIf=\"SelectedDriverName!=''\">\r\n                                <label class=\"d-block mb-1\">Driver</label>\r\n                                <label class=\"driver-name d-block\">{{SelectedDriverName}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right mt10\">\r\n                        <button type=\"button\" id=\"btnTransferDS\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\" (click)=\"TransferDSInfo()\">Transfer</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"TrailerInformation\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingRemoveTrailer\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb15 pt0 pb0 heading\">Trailer Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"closeTrailerInformationModal\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <ng-container *ngIf=\"scheduleTrailerInfo\">\r\n                                <ng-container *ngFor=\"let trailer of scheduleTrailerInfo.controls['Trailers']['controls']; let y = index; let islast = last; trackBy: trackByTrailerId\">\r\n                                    <ng-container>\r\n                                        <div class=\"card mb5\">\r\n                                            <div class=\"card-body pt5 pb5 pl10 pr10\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-9\"><span class=\"mt2 dib\">{{trailer.controls['TrailerId'].value}}</span></div>\r\n                                                    <div class=\"col-sm-3 text-right\" *ngIf=\"disableControl==false\">\r\n                                                        <a (click)=\"UnAssignTrailerFromShift(scheduleTrailerInfo,'trailer',trailer.controls['Id'].value)\" class=\"dib\" placement=\"bottom\" ngbTooltip=\"Unassign Trailer\">\r\n                                                            <i class=\"far fa-times-circle mt4 fs16\"></i>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<a class=\"hidden-element\" data-toggle=\"modal\" data-target=\"#resetDrByRouteModal\" id=\"openRouteListModal\"></a>\r\n<div id=\"resetDrByRouteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 350px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingRemoveRoute\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Reset Delivery Request(s) By Route</h4>\r\n                    <button type=\"button\" id=\"closeResetDrByRouteModal\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\"\r\n                            aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fs21\"></i>\r\n                    </button>\r\n                </div>\r\n                <div class=\"mt20\">\r\n                    <table class=\"table\">\r\n                        <tr *ngFor=\"let route of RouteListForTrip\">\r\n                            <td>\r\n                                {{route.Name}}\r\n                                <a class=\"ml20 pull-right\" (click)=\"deleteDrsForRoute(route);\">\r\n                                    <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\"text-right mt15\">\r\n                    <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"optional-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"_loadingOptionTerminal\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Optional Pickup(s) Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n\r\n                <div class=\"mt10 mb10\" *ngIf=\"disableControl==false\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-10\">\r\n                            <ng-multiselect-dropdown formControlName=\"SelectedFuelTypeDetails\"\r\n                                                     [placeholder]=\"'Select Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"FuelTypeDetails\" \r\n                                                     (onSelect)=\"onFuelTypeSelect($event)\" (onDeSelect)=\"onFuelTypeDeSelect($event)\"\r\n                                                     (onSelectAll)=\"onFuelTypeSelectAll($event)\"\r\n                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll()\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"PickupForm.get('SelectedFuelTypeDetails').invalid && PickupForm.get('SelectedFuelTypeDetails').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"PickupForm.get('SelectedFuelTypeDetails').errors.required\">\r\n                                    Fuel Type is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"overflow-h\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"section-optpickup pr-2\">\r\n                    <div class=\"mt10 mb10\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <!-- terminal start -->\r\n                        <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                            <div class=\"col-sm-10\">\r\n                                <div class=\"ng-autocomplete\">\r\n                                    <ng-autocomplete [data]=\"Terminals\" formControlName=\"Name\"\r\n                                                     [searchKeyword]=\"keyword\"\r\n                                                     placeholder=\"Terminal Name\"\r\n                                                     (selected)='onTerminalSelected_($event)'\r\n                                                     [itemTemplate]=\"itemTemplate\"\r\n                                                     [notFoundTemplate]=\"notFoundTemplate\">\r\n                                    </ng-autocomplete>\r\n\r\n                                    <ng-template #itemTemplate let-item>\r\n                                        <a [innerHTML]=\"item.Name\"></a>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template #notFoundTemplate let-notFound>\r\n                                        <div [innerHTML]=\"notFound\"></div>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <!-- terminal ends -->\r\n                        <!-- bulk plant starts -->\r\n                        <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Bulk Plant</label>\r\n                                            <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                            <ul class=\"auto-select border-dash\">\r\n                                                <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                    [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                            </ul>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Address</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                            <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                    Invalid {{ CountryBasedZipcodeLabel }}\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>City</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                            <label>State</label>\r\n                                            <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                                <option [value]=\"null\">Select State</option>\r\n                                                <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                    {{st.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                                <option [value]=\"null\">Select State</option>\r\n                                                <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                    {{st.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                            <input type=\"hidden\" formControlName=\"Code\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                            <label>Country</label>\r\n                                            <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                                <option [value]=\"null\">Select Country</option>\r\n                                                <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                    {{ct.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\">\r\n                                                <option [value]=\"null\">Select Country</option>\r\n                                                <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                    {{ct.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>County</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                    Invalid (alphanumeric with comma spaces only)\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Latitude</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                    Invalid\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Longitude</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                            <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                    Required\r\n                                                </label>\r\n                                                <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                    Invalid\r\n                                                </label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                                <span class='spinner-dashboard pa'></span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- bulk plant ends -->\r\n                    </div>\r\n                    <div class=\"mt10 mb10\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge#\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\" *ngIf=\"SelectedFuelTypeDetails.length>0 && disableControl==false\">\r\n                        <button type=\"button\" [disabled]=\"!PickupForm.valid\" (click)=\"addOptionalPickupLocation()\" class=\"btn btn-primary\">Add</button>\r\n                    </div>\r\n                    <div class=\"mt10 mb10\" *ngIf=\"OptionalPickupLocationInfo.length>0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                    <thead>\r\n                                        <tr class=\"f-bold\">\r\n                                            <th>Fuel Type</th>\r\n                                            <th>Location Type</th>\r\n                                            <th>Location Info</th>\r\n                                            <th>BadgeNo#</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let optionPickupInfo of OptionalPickupLocationInfo\">\r\n                                            <td>{{optionPickupInfo.TfxFuelTypeName}}</td>\r\n                                            <td>{{optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==1?'Terminal':'Bulk Plant'}}</td>\r\n                                            <td *ngIf=\"optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==1\">\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxTerminal.Name}}\r\n                                            </td>\r\n                                            <td *ngIf=\"optionPickupInfo.DSBPickupLocationInfo.PickupLocationType==2\">\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.SiteName}} -\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.Address}},\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.City}},\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.TfxBulkPlant.State.Name}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{optionPickupInfo.DSBPickupLocationInfo.BadgeNoInfo}}\r\n                                            </td>\r\n                                            <td>\r\n                                                <a class=\"ml20 pull-left\" *ngIf=\"disableControl==false\" (click)=\"deleteOptionPickup(optionPickupInfo);\">\r\n                                                    <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.OptionalPickupLocationInfo.length>0 && disableControl==false\">\r\n                    <button type=\"button\" (click)=\"submitOptionalPickupLocation()\" class=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-completed-optionpickup\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-completed-optionpickup\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-completed-optionpickup\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Optional Pickup Information:</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Unable to delete the optional pickup information due to some of DS in completed state.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-inprogress-onthewayoptionpickup\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-delete-onthewayoptionpickup\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-onthewayoptionpickup\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Driver is on the way to job OR Some of DS are in-progress.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"deleteOptionalPickupNo()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"deleteOptionalPickupYes()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #retain_popContent>\r\n    <div class=\"pop-header\"></div>\r\n    <div class=\"popover-details\">\r\n        <table class=\"table table-sm table-striped table-borderless\">\r\n            <tbody>\r\n                <tr *ngFor=\"let retain of hoveredTrailer.RetainFuel; let i = index;\">\r\n                    <td>{{retain.CompartmentId}}</td>\r\n                    <td>{{retain.ProductType}}</td>\r\n                    <td>{{retain.Quantity}}&nbsp;{{retain.UOM==1 ? 'G' : 'L'}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-cancel-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Only Accepted/Scheduled/on the way to pick up DS are cancelled.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"rejectDriverSchedule()\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"cancelDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btn-cancel-location-ds\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-location-cancel-ds\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade confirm-box\" id=\"confirm-location-cancel-ds\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Do you want to cancel DS(s)?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\">Only Accepted/Scheduled/on the way to pick up DS are cancelled.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" id=\"cancelLocationDS\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n                    <button type=\"button\" (click)=\"cancelLocationDriverSchedule()\" data-dismiss=\"modal\" class=\"btn btn-danger btn-lg\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--Cancel DS Infomration-->\r\n<button type=\"button\" id=\"btn-location-cancel-ds-info\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-location-cancel-ds-info\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-location-cancel-ds-info\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <h4 class=\"pull-left mb5 pt0 pb0\">Delivery Schedule Information</h4>\r\n                    <button type=\"button\" class=\"close color-grey pull-right pa\" id=\"confirm-location-cancel-ds-dismiss\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\" *ngIf=\"cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table fs12 table-sm table-borderless mb0\">\r\n                                <thead>\r\n                                    <tr class=\"f-bold\">\r\n                                        <th><input id=\"selectAllLocationDSBGroupCancel\" type=\"checkbox\" class=\"form-check-input\" (change)=\"checkAllLocationDS()\" /></th>\r\n                                        <th>Driver Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Fuel Type</th>\r\n                                        <th>Current State</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let dsInfo of cancelDSDeliveryScheduleViewModel;let j = index\">\r\n                                        <td><input type=\"checkbox\" class=\"form-check-input\" id=\"dsLocationCheck{{j}}\" (change)=\"checkLocationDSChange(j,dsInfo)\" [(ngModel)]='dsInfo.IsChecked'></td>\r\n                                        <td>{{dsInfo.DriverName}}</td>\r\n                                        <td>{{dsInfo.Quantity}}</td>\r\n                                        <td>{{dsInfo.FuelType}}</td>\r\n                                        <td>{{dsInfo.CurrentState}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"text-right mt-2\" *ngIf=\"this.cancelDSDeliveryScheduleViewModel.length>0\">\r\n                    <button type=\"button\" (click)=\"CancelSelectedLocationDS()\" class=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { LoadQueueService } from './load-queue.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownItem, ShiftLoadQueueDropdownItem } from 'src/app/statelist.service';\nimport { Subscription } from 'rxjs';\nimport { LoadQueueColumnValidations, LoadQueueStatusViewModel, TrailerJobNonCompatibleDrs, TrailersDeliveryRequestViewModel, TripError } from './dsb-load.model';\nimport { DSBSaveModel, RegionDetailModel, TripModel, DeliveryRequestViewModel, OrderPickupLocationModel } from '../../models/DispatchSchedulerModels';\nimport { DataService } from '../../service/data.service';\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\nimport { ColumnStatusEnum, DeliveryReqStatus, DSBLoadQueueStatus, TripStatus } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-dsb-load-queue',\n    templateUrl: './dsb-load-queue.component.html',\n    styleUrls: ['./dsb-load-queue.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class DsbLoadQueueComponent implements OnInit, OnDestroy {\n\n    @Input() SbForm: FormGroup;\n    @Input() public RegionDetail: RegionDetailModel;\n    @Input() public IsTrailerExists: boolean;\n\n    LoadQueueFilterForm: FormGroup;\n    subscriptions: Subscription = new Subscription();\n    columnValidations: LoadQueueColumnValidations[] = [];\n    validationObj = new LoadQueueColumnValidations();\n    InCompatibleDrs: TrailerJobNonCompatibleDrs[] = [];\n    compatibilityModels: TrailersDeliveryRequestViewModel[] = [];\n    dsbModelsToPublish: DSBSaveModel[] = [];\n    public OrderList: any = {};\n    public statuses: DropdownItem[] = [\n        { Id: ColumnStatusEnum.Completed, Code: null, Name: 'Completed' },\n        { Id: ColumnStatusEnum.Partial, Code: null, Name: 'Partially Completed' },\n        { Id: ColumnStatusEnum.Empty, Code: null, Name: 'Empty' },\n        { Id: ColumnStatusEnum.Published, Code: null, Name: 'Published' },\n    ];\n    public selectedStatuses: DropdownItem[] = []\n    public settings: IDropdownSettings = {\n        singleSelection: false,\n        idField: 'Id',\n        textField: 'Name',\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        itemsShowLimit: 1,\n        allowSearchFilter: true\n    };\n    public shifts: ShiftLoadQueueDropdownItem[] = [];\n    public selectedShifts: DropdownItem[] = [];\n    public _opened: boolean = false;\n    public _isQueuePanelInitiated: boolean = false;\n    public _selectAll: boolean = false;\n    _loading: boolean = false;\n    public panels: string[] = ['panel-1', 'panel-2', 'panel-3'];\n    @Input() public isDisableControl: boolean;\n\n    constructor(\n        private loadQueueService: LoadQueueService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private dataService: DataService, private sbService: ScheduleBuilderService) { }\n\n    ngOnInit() {\n        this.LoadQueueFilterForm = this.loadQueueService.getFilterForm();\n        this.subscribeFormChanges();\n    }\n\n    ngOnDestroy(): void {\n        this.unSubscribeFormChanges();\n    }\n    subscribeFormChanges() {\n        this.subscriptions.add(this.LoadQueueFilterForm.valueChanges\n            .subscribe(change => {\n                this.applyFilter();\n            }))\n\n        this.subscriptions.add(this.loadQueueService.loadQueueColumnMovedSubject\n            .subscribe(value => {\n                this.setSelectAllButtonvalue();\n                this.bindShifts();\n                this.bindValidation();\n            }))\n    }\n\n    openPanel() {\n        this._opened = true;\n        if (!this._isQueuePanelInitiated) {\n            this._isQueuePanelInitiated = true;\n            this.loadQueueService.setLoadQueueColumnMoved(true);\n        }\n    }\n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n\n    setSelectAllButtonvalue() {\n        let allSchedules = 0;\n        let selectedSchedules = 0;\n\n        let _shifts = this.SbForm.controls['Shifts'].value as any[] || [];\n        _shifts.forEach((shift) => {\n            shift && shift.Schedules && shift.Schedules.forEach((schedule) => {\n                if (schedule.IsLoadQueueCollapsed) {\n                    allSchedules++;\n                    if (schedule.IsColumnSelected)\n                        selectedSchedules++;\n                }\n            });\n        });\n\n        if (allSchedules && selectedSchedules == allSchedules)\n            this._selectAll = true;\n        else\n            this._selectAll = false;\n    }\n\n    applyFilter() {\n        this.selectedShifts = this.LoadQueueFilterForm.controls['Shift'].value || [];\n        this.selectedStatuses = this.LoadQueueFilterForm.controls['Status'].value || [];\n        this._selectAll = false;\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            let shiftId = shift.controls['Id'].value;\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n                //un-select all columns\n                schedule.get('IsColumnSelected').setValue(false);\n                //apply filter only for collapsed columns\n                if (schedule.get('IsLoadQueueCollapsed').value) {\n                    //both\n                    if (this.selectedShifts.length > 0 && this.selectedStatuses.length > 0) {\n                        if (this.selectedShifts.some(sh => sh.Id == shift.get('Id').value && this.getColumnStatus(shiftIndex, scheduleIndex, shiftId))) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    //shift\n                    else if ((this.selectedShifts.length > 0 && this.selectedStatuses.length == 0)) {\n                        if (this.selectedShifts.some(sh => sh.Id == shift.get('Id').value)) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    //status\n                    else if ((this.selectedShifts.length == 0 && this.selectedStatuses.length > 0)) {\n                        if (this.getColumnStatus(shiftIndex, scheduleIndex, shiftId)) {\n                            schedule.get('LoadQueueFilterVisibility').setValue(true);\n                        }\n                        else {\n                            schedule.get('LoadQueueFilterVisibility').setValue(false);\n                        }\n                    }\n                    else {\n                        schedule.get('LoadQueueFilterVisibility').setValue(true);\n                    }\n                }\n            });\n        });\n\n    }\n\n    getColumnStatus(shiftIndex: number, scheduleIndex: number, shiftId: string) {\n        let obj = this.columnValidations.find(val => val.ShiftId == shiftId && val.ScheduleIndex == scheduleIndex && this.selectedStatuses.some(s => s.Id == val.ColumnStatus));\n        if (obj) {\n            return true;\n        }\n        else\n            return false;\n    }\n\n    bindShifts() {\n        this.shifts = [];\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, index: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsLoadQueueCollapsed').value && !this.shifts.some(sh => sh.Id == shift.get('Id').value)) {\n                    this.shifts.push({ Id: shift.get('Id').value, Code: shift.get('OrderNo').value.toString(), Name: 'Shift ' + (shift.get('OrderNo').value + 1), OrderNo: shift.get('OrderNo').value + 1 });\n                }\n            });\n        });\n        this.shifts = this.shifts.sort(this.SortByOrder);\n    }\n\n    checkShiftVisibility(shift: FormGroup) {\n        let _shiftSelected = this.LoadQueueFilterForm.controls['Shift'].value as ShiftLoadQueueDropdownItem[];\n        if (_shiftSelected == null) {\n            let _schedules = shift.controls['Schedules'].value as any[];\n            if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                return true;\n            else\n                return false;\n        }\n        else if (_shiftSelected.length == 0) {\n            let _schedules = shift.controls['Schedules'].value as any[];\n            if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                return true;\n            else\n                return false;\n        }\n        else {\n            var shiftIndex = _shiftSelected.findIndex(x => x.Id == shift.controls[\"Id\"].value);\n            if (shiftIndex >= 0) {\n                let _schedules = shift.controls['Schedules'].value as any[];\n                if (_schedules.some(x => x.IsLoadQueueCollapsed == true) && _schedules.some(x => x.LoadQueueFilterVisibility == true))//&& shift.get('LoadQueueFilterVisibility').value\n                    return true;\n                else\n                    return false;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n\n    getClassByStatus(i: number, j: number) {\n        let obj = this.columnValidations.find(val => val.ShiftIndex == i && val.ScheduleIndex == j) || new LoadQueueColumnValidations();\n        let schedule = this.SbForm.get('Shifts.' + i + '.Schedules.' + j + '') as FormGroup;\n        switch (obj.ColumnStatus) {\n            case ColumnStatusEnum.Completed:\n                //here verify the completed column published from notifcation or not.\n                if (schedule != null) {\n                    let loadQueueColumnStatus = schedule.get('LoadQueueColumnStatus').value;\n                    if (loadQueueColumnStatus == DSBLoadQueueStatus.Success) {\n                        return \"published\";\n                    }\n                }\n                return 'completed';\n            case ColumnStatusEnum.Published:\n                return 'published';\n            case ColumnStatusEnum.Empty:\n                return 'empty';\n            case ColumnStatusEnum.Partial:\n                return 'partial';\n            case ColumnStatusEnum.None:\n                return 'partial';\n        }\n    }\n    selectColumn(event: any, schedule: FormGroup) {\n        schedule.get('IsColumnSelected').setValue(event.target.checked);\n        this.setSelectAllButtonvalue();\n    }\n\n    selectAllColumn() {\n        this._selectAll = !this._selectAll;\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsLoadQueueCollapsed').value) {\n                    schedule.get('IsColumnSelected').setValue(this._selectAll);\n                }\n            });\n        });\n    }\n\n    moveColumnsToGrid() {\n        //updated client side first\n        let shifts = this.SbForm.controls['Shifts'] as FormArray;\n        let loadQueueIds: string[] = [];\n\n        shifts.controls.forEach((shift: FormGroup) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup) => {\n                if (schedule.get('IsColumnSelected').value) {\n                    schedule.get('IsLoadQueueCollapsed').setValue(false);\n                    schedule.get('IsColumnSelected').setValue(false);////unselect\n                    loadQueueIds.push(schedule.get('LoadQueueId').value);////collect object ids\n                }\n            });\n        });\n\n        if (loadQueueIds.length) {\n\n            this.loadQueueService.setLoadQueueColumnMoved(true);//refresh load queue panel\n            this.changeDetectorRef.markForCheck();//detect form changes\n            this.dataService.setDriverColumnChangeDetect(true);\n\n            //delete expanded column data from api\n            this.loadQueueService.deleteLoadQueue(loadQueueIds).subscribe((data) => {\n                if (!data || data.StatusCode !== 0) {\n                    Declarations.msgerror(\"Unable to move selected column(s). Please try later.\", undefined, undefined);\n                    //if api fails to update, revert changes\n                    shifts.controls.forEach((shift: FormGroup) => {\n                        let schedules = shift.controls['Schedules'] as FormArray;\n                        schedules.controls.forEach((schedule: FormGroup) => {\n                            if (schedule.get('IsColumnSelected').value) {\n                                schedule.get('IsLoadQueueCollapsed').setValue(true);\n                            }\n                        });\n                    });\n                    this.loadQueueService.setLoadQueueColumnMoved(true);\n                    this.changeDetectorRef.markForCheck();\n                    this.dataService.setDriverColumnChangeDetect(true);\n                }\n            });\n        }\n    }\n\n    getValidationsAndDrsFromLoad(trips: FormArray, validation: LoadQueueColumnValidations, scheduleIndex: number, shiftIndex: number) {\n\n        var _drList = [];\n\n        for (let tripIndex = 0; tripIndex < trips.length; tripIndex++) {\n\n            let tripError = new TripError();\n            tripError.TripIndex = tripIndex;\n\n            let trip = trips.controls[tripIndex] as FormGroup;\n            var isCommonPickup: boolean = trip.controls['IsCommonPickup'].value;\n            var _drsForm = trip.controls[\"DeliveryRequests\"] as FormArray;\n\n            /////LOAD LEVEL PICKUP VALIDATION/////////////\n            if (_drsForm.controls.length > 0 && isCommonPickup && !(trip.controls.Terminal.get('Name').value || trip.controls.BulkPlant.get('SiteName').value)) {\n                tripError.Errors.push('Please select common pickup location.');\n            }\n\n            for (let i = 0; i < _drsForm.controls.length; i++) {\n                var x = _drsForm.controls[i] as FormGroup;\n                let dr = x.value\n                if (x) {\n                    if (dr.ScheduleQuantityType == 1 && dr.TankMaxFill > 0 && dr.RequiredQuantity > dr.TankMaxFill) {\n                        tripError.Errors.push('Required quantity is more than Max Fill for dr ' + (i + 1) + '.');\n                    }\n                    _drList.push(dr);\n                    this.getOrderList(x, isCommonPickup, trip.controls['StartDate'].value, tripError, i);\n                }\n            }\n            validation.TripErrors.push(tripError);\n        }\n        return _drList;\n    }\n\n    getValidationsByColumn(schedule: FormGroup, validation: LoadQueueColumnValidations, scheduleIndex: number, shiftIndex: number) {\n        let completedDRStatus = [3, 7, 8, 9, 11, 12, 14, 21, 22, 23, 25];\n        var trips = schedule.controls['Trips'] as FormArray;\n        var _deliveryRequests: DeliveryRequestViewModel[] = this.getValidationsAndDrsFromLoad(trips, validation, scheduleIndex, shiftIndex);\n        let NotpublishTripCount = 0;\n\n        var drivers = schedule.controls['Drivers'].value;\n        var trailers = schedule.controls['Trailers'].value;\n\n        if (_deliveryRequests && _deliveryRequests.length > 0) {\n\n            let jobAndCustomers = this.loadQueueService.getCustomerAndJobFromDr(_deliveryRequests);\n            validation.Customers = jobAndCustomers.customers;\n            validation.Locations = jobAndCustomers.Locations;\n            validation.DrCount = _deliveryRequests.length;\n\n            _deliveryRequests.forEach(dr => {\n                if (completedDRStatus.indexOf(dr.TrackScheduleStatus) == -1) {\n                    NotpublishTripCount = NotpublishTripCount + 1;\n                }\n                else if (dr.TrackScheduleStatus == DeliveryReqStatus.ScheduleCreated && dr.TrackableScheduleId == null) {\n                    NotpublishTripCount = NotpublishTripCount + 1;\n                }\n            });\n\n            if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\n                if (this.IsTrailerExists) {\n                    validation.Errors.push('Please assign a driver / trailer to publish');\n                }\n                else {\n                    validation.Errors.push('Please assign a driver to publish');\n                }\n            }\n\n            if (drivers != null && drivers.length > 0) {\n                var delReqs = _deliveryRequests;\n                if (delReqs.length > 0 && delReqs.some(t => t.IsFilldInvoke == true)) {\n                    if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\n                        validation.Errors.push('Please assign a Filld compatible driver / trailer to publish', 'Driver/Trailer Required');\n                    }\n                    else if (drivers.some(t => t.IsFilldCompatible == false)) {\n                        validation.Errors.push('Please assign a Filld compatible driver to publish', 'Driver Required');\n                    }\n                }\n            }\n        }\n\n        //ColumnStatus\n        if (validation.DrCount == 0) {\n            validation.ColumnStatus = ColumnStatusEnum.Empty;\n        }\n        else if (validation.Errors.length > 0 || validation.TripErrors.some(tr => tr.Errors.length > 0)) {\n            validation.ColumnStatus = ColumnStatusEnum.Partial;\n        }\n        else if (NotpublishTripCount == 0) {\n            validation.ColumnStatus = ColumnStatusEnum.Published;\n        }\n        else {\n            validation.ColumnStatus = ColumnStatusEnum.Completed;\n        }\n        this.columnValidations.push(validation);\n    }\n\n    setColumnStatusAfterApi() {\n        this.columnValidations.forEach((validation: LoadQueueColumnValidations) => {\n            if (validation.DrCount == 0) {\n                validation.ColumnStatus = ColumnStatusEnum.Empty;\n            }\n            else if (validation.Errors.length > 0 || validation.TripErrors.some(tr => tr.Errors.length > 0)) {\n                validation.ColumnStatus = ColumnStatusEnum.Partial;\n            }\n        });\n    }\n\n    bindValidation() {\n\n        this.columnValidations = [];\n\n        if (this.RegionDetail) {\n            let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n            _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n                let schedules = shift.controls['Schedules'] as FormArray;\n                let shiftId = shift.controls['Id'].value;\n                schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n                    if (schedule.get('IsLoadQueueCollapsed').value) {\n                        let validation = new LoadQueueColumnValidations();\n                        validation.ShiftIndex = shiftIndex;\n                        validation.ScheduleIndex = scheduleIndex;\n                        validation.ShiftId = shiftId;\n                        this.getValidationsByColumn(schedule, validation, scheduleIndex, shiftIndex);\n                    }\n                });\n            });\n        }\n    }\n\n    setValidationObjectFromList(i: number, j: number) {\n        this.validationObj = this.columnValidations.find(val => val.ShiftIndex == i && val.ScheduleIndex == j) || new LoadQueueColumnValidations();\n    }\n\n    setTripStatus(trip: TripModel): void {\n        if (trip) {\n            var tripPrevStatusId = trip.TripPrevStatus;\n            var tripStatusId = TripStatus.Added;\n            if (tripPrevStatusId == TripStatus.None) {\n                tripStatusId = TripStatus.Added;\n            } else if (tripPrevStatusId == TripStatus.Added || tripPrevStatusId == TripStatus.Modified) {\n                tripStatusId = TripStatus.Modified;\n            }\n            trip.TripStatus = tripStatusId;\n        }\n    }\n\n    iniatePublishColumns() {\n        this.getColumnForCompatibilityCheck();\n        this.getTrailerJobCompatibility();\n    }\n\n    getTrailerJobCompatibility() {\n        if (this.IsTrailerExists) {\n            if (this.compatibilityModels && this.compatibilityModels.length > 0) {\n\n                this._loading = true;\n                this.InCompatibleDrs = []\n\n                this.loadQueueService.getTrailerJobCompatibility(this.compatibilityModels).subscribe(\n                    (response) => {\n\n                        this._loading = false;\n                        if (response && response.deliveryRequestsNotCompatible && response.deliveryRequestsNotCompatible.length > 0) {\n                            this.InCompatibleDrs = response.deliveryRequestsNotCompatible;\n\n                            if (this.InCompatibleDrs.some(el => el.drCount > 0)) {\n                                let tempString = ''\n                                this.InCompatibleDrs.forEach(element => {\n                                    if (element.drCount > 0) {\n                                        tempString + '' + element.scheduleIndex + ', ';\n                                    }\n                                })\n                                Declarations.msgerror(\"Non-compatible trailer(s) is assigned to Location(s) in columns \" + tempString, 'Warning', 4000);\n                            }\n                            else {\n                                this.publishValidatedColumns();\n                            }\n                        }\n                    }\n                );\n            }\n            else {\n                Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n            }\n        }\n        else {\n            this.publishValidatedColumns();\r\n        }\n    }\n\n    publishValidatedColumns() {\n\n        let selected_schedule = [];\n        let selectedSchedules = 0;\n        let selectedDSBModelsToPublish: DSBSaveModel[] = [];\n        let _shifts = this.SbForm.controls['Shifts'].value as any[] || [];\n\n        _shifts.forEach((shift, shiftIndex: number) => {\n            shift && shift.Schedules && shift.Schedules.forEach((schedule, scheduleIndex: number) => {\n                if (schedule.IsLoadQueueCollapsed) {\n                    if (schedule.IsColumnSelected) {\n                        selectedSchedules++;\n                        var obj = {\n                            shiftIndex: shiftIndex,\n                            scheduleIndex: scheduleIndex,\n                            shiftId: shift.Id\n                        }\n                        selected_schedule.push(obj);\n                    }\n                }\n            });\n        });\n        if (selectedSchedules > 0) {\n            for (var i = 0; i < selected_schedule.length; i++) {\n                let obj = this.columnValidations.find(val => val.ShiftId == selected_schedule[i].shiftId && val.ScheduleIndex == selected_schedule[i].scheduleIndex);\n                if (obj.ColumnStatus == ColumnStatusEnum.Completed) {\n                    let _shifts = this.SbForm.controls['Shifts'][\"controls\"][selected_schedule[i].shiftId] as FormGroup;\n                    if (_shifts != null) {\n                        let schedule = _shifts.controls['Schedules'][\"controls\"][selected_schedule[i].scheduleIndex] as FormGroup;\n                        var dsbModel = this.loadQueueService.getDSBSaveModel(this.SbForm);\n                        var drivers = schedule.controls['Drivers'].value;\n                        var trailers = schedule.controls['Trailers'].value;\n                        var trips = schedule.controls['Trips'] as FormArray;\n                        for (let i = 0; i < trips.length; i++) {\n                            var tripValue = trips.value[i];\n                            this.setTripStatus(tripValue);\n                            dsbModel.Trips.push(tripValue);\n                        }\n                        dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers });\n                        dsbModel.Status = 3;\n                        selectedDSBModelsToPublish.push(dsbModel);\n                    }\n                }\n            }\n            //start publish\n            if (selectedDSBModelsToPublish.length == 0) {\n                Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n            }\n            else {\n                Declarations.msgwarning('Only completed columns(s) publish from load queue.', 'Warning', 4000);\n                this.intializePublish(selectedDSBModelsToPublish, 1);\n            }\n        }\n        else {\n            //start publish\n            this.intializePublish(this.dsbModelsToPublish, 0);\n        }\n    }\n\n    getColumnForCompatibilityCheck() {\n        this._loading = true;\n        this.compatibilityModels = [];\n        this.dsbModelsToPublish = [];\n\n        let _shifts = this.SbForm.controls['Shifts'] as FormArray;\n        _shifts.controls.forEach((shift: FormGroup, shiftIndex: number) => {\n            let schedules = shift.controls['Schedules'] as FormArray;\n            schedules.controls.forEach((schedule: FormGroup, scheduleIndex: number) => {\n\n                if (schedule.get('IsLoadQueueCollapsed').value && schedule.get('LoadQueueFilterVisibility').value && schedule.get('IsLoadQueueColumnBlocked').value != true) {\n\n                    let isValidForCompatibilityCheck = true;\n                    var drivers = schedule.controls['Drivers'].value;\n                    var trailers = schedule.controls['Trailers'].value;\n                    if (drivers == null || drivers == undefined || drivers.length == 0 || (this.IsTrailerExists && (trailers == null || trailers == undefined || trailers.length == 0))) {\n                        isValidForCompatibilityCheck = false;\n                    }\n                    else {\n                        var trips = schedule.controls['Trips'] as FormArray;\n                        var _deliveryRequests = this.loadQueueService.GetAllLoadsDR(trips);\n                        var _deliveryRequests = this.loadQueueService.GetAllLoadsDR(trips);\n                        let _selectedTrailers = this.RegionDetail.Trailers.filter(x => {\n                            return trailers.find(y => y.TrailerId == x.TrailerId) != undefined;\n                        });\n\n                        if (drivers != null && drivers.length > 0) {\n\n                            if (_deliveryRequests.length > 0 && _deliveryRequests.some(t => t.IsFilldInvoke == true)) {\n                                if (this.IsTrailerExists && trailers.some(t => t.IsFilldCompatible == false)) {\n                                    isValidForCompatibilityCheck = false;\n                                }\n                                else if (drivers.some(t => t.IsFilldCompatible == false)) {\n                                    isValidForCompatibilityCheck = false;\n                                }\n                            }\n                        }\n\n                        if (isValidForCompatibilityCheck && _deliveryRequests && _deliveryRequests.length > 0 && ((this.IsTrailerExists === true && _selectedTrailers && _selectedTrailers.length > 0) || this.IsTrailerExists === false)) {\n\n                            var validTrips = [];\n\n                            trips.controls.forEach((thisTrip: FormGroup, tripIndex: number) => {\n                                if (thisTrip && (thisTrip.valid && this.loadQueueService.validatePublishLoad(thisTrip))) {\n                                    ////////////////////////\n                                    let model = new TrailersDeliveryRequestViewModel();\n                                    model.deliveryRequests = _deliveryRequests;\n                                    model.trailers = _selectedTrailers;\n                                    model.scheduleIndex = scheduleIndex;\n                                    model.shiftIndex = shiftIndex;\n                                    this.compatibilityModels.push(model);\n                                    ///////////////\n                                    validTrips.push(tripIndex);\n                                }\n                            });\n\n\n                            if (validTrips.length > 0) {\n                                var dsbModel = this.loadQueueService.getDSBSaveModel(this.SbForm);\n                                var drivers = schedule.controls['Drivers'].value;\n                                var trailers = schedule.controls['Trailers'].value;\n\n                                for (let i = 0; i < trips.length; i++) {\n                                    var tripValue = trips.value[i];\n                                    if (validTrips.includes(tripValue.DriverColIndex)) {\n                                        this.setTripStatus(tripValue);\n                                    }\n                                    dsbModel.Trips.push(tripValue);\n                                }\n                                dsbModel.Trips.forEach(t => { t.Drivers = drivers, t.Trailers = trailers });\n                                dsbModel.Status = 3;\n                                let obj = this.columnValidations.find(val => val.ShiftIndex == shiftIndex && val.ScheduleIndex == scheduleIndex);\n                                if (obj != null && obj.ColumnStatus == ColumnStatusEnum.Completed) {\n                                    this.dsbModelsToPublish.push(dsbModel);\n                                }\n                            }\n\n                        }\n                    }\n                }\n            });\n        });\n        this._loading = false;\n    }\n    getLoadQueueStatus(status: number, shiftIndex: number, scheduleIndex: number) {\n        if (status == 0) {\n            return \"In-Queue\";\n        }\n        else if (status == 1) {\n            return \"In-Progress\"\n        }\n        else if (status == 2) {\n            return \"Success\"\n        }\n        else if (status == 3) {\n            var columnValidations = this.columnValidations.find(top => top.ShiftIndex == shiftIndex && top.ScheduleIndex == scheduleIndex);\n            if (columnValidations != null) {\n                if (columnValidations.ColumnStatus == ColumnStatusEnum.Published) {\n                    return \"\";\n                }\n            }\n            return \"Failed\"\n        }\n    }\n    private getOrderList(delReq: FormGroup, isCommonPickup: boolean, startDate: string, tripError: TripError, drIndex: number): void {\n\n        var _jobId = delReq.controls['JobId'].value;\n        var _productTypeId = delReq.controls['ProductTypeId'].value;\n        var _orderId = delReq.controls['OrderId'];\n        var _carrierStatus = delReq.controls['CarrierStatus'].value;\n        let isBlendReq = delReq.controls['IsBlendedRequest'].value;\n        var existing = this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)];\n\n        if (existing == undefined || existing == null || existing.length == 0) {\n            this._loading = true;\n            this.sbService.getOrders(_jobId, _productTypeId, startDate, _carrierStatus, isBlendReq).subscribe(data => {\n                this._loading = false;\n                this.OrderList[_jobId.toString() + '_' + _productTypeId.toString() + '_' + (isBlendReq ? 1 : 0)] = data;\n                if (data.length > 0) {\n                    var order = data[0];\n                    if (_orderId && _orderId.value > 0) {\n                        var orderFromData = data.filter(t => t.OrderId == _orderId.value);\n                        if (orderFromData != null && orderFromData.length > 0) {\n                            order = orderFromData[0];\n                        }\n                    }\n                    if (_orderId.value == null || _orderId.value == 0) {\n                        delReq.controls['OrderId'].setValue(order.OrderId);\n                    }\n                    if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\n                        let location = OrderPickupLocationModel.ToLocation(order);\n                        this.setPickupLocation(delReq, location);\n                    }\n                    this.setTruckLoadType(delReq, order);\n                }\n                else {\n                    if (delReq.value.OrderId == null || delReq.value.OrderId == 0 || delReq.value.OrderId == undefined || delReq.value.OrderId == '') {\n                        tripError.Errors.push('Order not available for dr number ' + (drIndex + 1) + '.');\n                        this.setColumnStatusAfterApi();\n                    }\n                }\n                /////DR LEVEL PICKUP VALIDATION/////////////\n                if (!isCommonPickup && delReq.get('PickupLocationType').value != 2 && !delReq.controls.Terminal.get('Name').value) {\n                    tripError.Errors.push('Please select pickup location for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n                else if (!isCommonPickup && delReq.get('PickupLocationType').value == 2 && !delReq.controls.BulkPlant.get('SiteName').value) {\n                    tripError.Errors.push('Please select bulk plant for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n            });\n        }\n        else {\n\n            if (_orderId.value == undefined || _orderId.value == null || _orderId.value == '') {\n                _orderId.setValue(existing[0].OrderId);\n                let location = OrderPickupLocationModel.ToLocation(existing[0]);\n                this.setPickupLocation(delReq, location);\n                this.setTruckLoadType(delReq, existing[0]);\n            }\n            else if ((delReq.value.Terminal == null || delReq.value.Terminal.Id == 0) && (delReq.value.BulkPlant == null || delReq.value.BulkPlant.SiteName == '' || delReq.value.BulkPlant.SiteName == null) && !isCommonPickup) {\n                var order = existing[0];\n                if (_orderId.value != undefined && _orderId.value != null && _orderId.value > 0) {\n                    var orderFromData = existing.filter(t => t.OrderId == _orderId.value);\n                    if (orderFromData != null && orderFromData.length > 0) {\n                        order = orderFromData[0];\n                    }\n                }\n                let location = OrderPickupLocationModel.ToLocation(order);\n                this.setPickupLocation(delReq, location);\n                this.setTruckLoadType(delReq, order);\n            }\n            else {\n                if (delReq.value.OrderId == null || delReq.value.OrderId == 0 || delReq.value.OrderId == undefined || delReq.value.OrderId == '') {\n                    tripError.Errors.push('Order not available for dr number ' + (drIndex + 1) + '.');\n                    this.setColumnStatusAfterApi();\n                }\n            }\n            /////DR LEVEL PICKUP VALIDATION/////////////\n            if (!isCommonPickup && delReq.get('PickupLocationType').value != 2 && !delReq.controls.Terminal.get('Name').value) {\n                tripError.Errors.push('Please select pickup location for dr number ' + (drIndex + 1) + '.');\n                this.setColumnStatusAfterApi();\n            }\n            else if (!isCommonPickup && delReq.get('PickupLocationType').value == 2 && !delReq.controls.BulkPlant.get('SiteName').value) {\n                tripError.Errors.push('Please select bulk plant for dr number ' + (drIndex + 1) + '.');\n                this.setColumnStatusAfterApi();\n            }\n        }\n    }\n    setPickupLocation(form: FormGroup, order: OrderPickupLocationModel): void {\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\n        if (order.PickupLocationType != 2) {\n            if (order.Terminal) {\n                form.controls['Terminal'].patchValue(order.Terminal);\n            }\n        } else {\n            if (order.BulkPlant) {\n                if (order.BulkPlant.ZipCode) {\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\n                }\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\n            }\n        }\n    }\n    setTruckLoadType(delReq: FormGroup, order) {\n        delReq.controls['TruckLoadType'].setValue(order.TruckLoadType);\n        if (order.TruckLoadType != 1) {\n            delReq.controls['IsFilldInvoke'].setValue(false);\n        }\n    }\n\n    public intializePublish(dsbModelsToPublish: DSBSaveModel[], status: number = 0) {\n        if (dsbModelsToPublish.length > 0) {\n            this._loading = true;\n            this.loadQueueService.saveDsbLoadQueue(dsbModelsToPublish).subscribe((responce: LoadQueueStatusViewModel) => {\n                if (responce && responce.StatusCode == 0) {\n\n                    //get all error messages if exist\n                    let apiErrSring = '';\n                    if (responce.LoadQueueErrorInfo.length) {\n                        responce.LoadQueueErrorInfo.forEach(loadQueue => {\n                            if (loadQueue.Messages.length) {\n                                apiErrSring = apiErrSring + loadQueue.Messages.join(\", \");\n                            }\n                        });\n                    }\n                    if (status == 0) {\n                        if (responce.LoadQueueSuccessInfo.length > 0 && responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' out of ' + (responce.LoadQueueSuccessInfo.length + responce.LoadQueueErrorInfo.length) + ' columns.', 'Success', 4000);\n                            Declarations.msgerror('Publish falied for ' + responce.LoadQueueErrorInfo.length + ' columns with errors -' + apiErrSring, 'Error', 4000);\n                        }\n                        else if (responce.LoadQueueSuccessInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for all the columns.', 'Success', 4000);\n                        }\n                        else if (responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgerror('All the columns you are trying to publish have been failed.' + apiErrSring, 'Error', 4000);\n                        }\n                    }\n                    else {\n                        if (responce.LoadQueueSuccessInfo.length > 0 && responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' out of ' + (responce.LoadQueueSuccessInfo.length + responce.LoadQueueErrorInfo.length) + ' columns.', 'Success', 4000);\n                            Declarations.msgerror('Publish falied for ' + responce.LoadQueueErrorInfo.length + ' columns with errors -' + apiErrSring, 'Error', 4000);\n                        }\n                        else if (responce.LoadQueueSuccessInfo.length > 0) {\n                            Declarations.msgsuccess('Publish successfully initiated for ' + responce.LoadQueueSuccessInfo.length + ' columns.', 'Success', 4000);\n                        }\n                        else if (responce.LoadQueueErrorInfo.length > 0) {\n                            Declarations.msgerror('Selected the columns you are trying to publish have been failed.' + apiErrSring, 'Error', 4000);\n                        }\n                    }\n                    //bind status and block columns\n                    if (responce && responce.LoadQueueSuccessInfo.length > 0) {\n                        responce.LoadQueueSuccessInfo.forEach(sch => {\n                            var columnValidation = this.columnValidations.find(top => top.ShiftIndex == sch.ShiftIndex && top.ScheduleIndex == sch.DriverColIndex);\n                            if (columnValidation != null && columnValidation.ColumnStatus != ColumnStatusEnum.Published) {\n                                let schedule = this.SbForm.get('Shifts.' + sch.ShiftIndex + '.Schedules.' + sch.DriverColIndex + '') as FormGroup;\n                                schedule.get('IsLoadQueueColumnBlocked').setValue(true);\n                                schedule.get('IsColumnSelected').setValue(false);\n                                schedule.get('LoadQueueColumnStatus').setValue(DSBLoadQueueStatus.New);\n                            }\n                        });\n                        this.dataService.setDsbQueueChangesForNotification(true);\n                    }\n                }\n                else {\n                    Declarations.msgerror('Unable to Publish columns. Please try again later.', 'Error', 4000);\n                }\n                this._loading = false;\n            })\n        }\n        else {\n            Declarations.msgwarning('No completed columns(s) found for publish load queue.', 'Warning', 4000);\n        }\n    }\n    public SortByOrder(a: ShiftLoadQueueDropdownItem, b: ShiftLoadQueueDropdownItem) {\n        var aOrderNo = a.OrderNo;\n        var bOrderNo = b.OrderNo;\n        return ((aOrderNo < bOrderNo) ? -1 : ((aOrderNo > bOrderNo) ? 1 : 0));\n    }\n}\n\n\n","<div class=\"load-queue-container\">\r\n    <button *ngIf=\"SbForm.controls['DSBFilter'].value==2 && isDisableControl==false\" type=\"button\" class=\"btn btn-primary btn-block btn-sm mt3\"\r\n        (click)=\"openPanel()\">\r\n        Load Queue\r\n    </button>\r\n    <ng-sidebar-container style=\"z-index: 99;\" *ngIf=\"_isQueuePanelInitiated\">\r\n        <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'left'\" style=\"height: 100vh\">\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loading\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <form [formGroup]=\"LoadQueueFilterForm\">\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <h3 class=\"dib title\">Load Queue</h3>\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs18 float-right\"></i></a>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <ng-multiselect-dropdown #multiSelect_shift [placeholder]=\"'Select Shift'\"\r\n                                [settings]=\"settings\" [data]=\"shifts\"\r\n                                [formControl]=\"LoadQueueFilterForm.controls['Shift']\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <ng-multiselect-dropdown #multiSelect_shift [placeholder]=\"'Select Status'\"\r\n                                [settings]=\"settings\" [data]=\"statuses\"\r\n                                [formControl]=\"LoadQueueFilterForm.controls['Status']\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"status-panel\">\r\n                        <span class=\"text\"><span class=\"dot empty mr5\"></span>Empty</span>\r\n                        <span class=\"text\"><span class=\"dot partial mr5\"></span>Partially Completed</span>\r\n                        <span class=\"text\"><span class=\"dot completed mr5\"></span>Completed</span>\r\n                        <span class=\"text\"><span class=\"dot published mr5\"></span>Published</span>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <div class=\"scroll-body\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"panels\">\r\n                        <ng-container *ngFor=\"let shift of SbForm.controls['Shifts']['controls'];  let i = index;\">\r\n                            <ng-container *ngIf=\"checkShiftVisibility(shift)\">\r\n                                <!-- shift -->\r\n                                <ngb-panel id=\"panel-{{i+1}}\">\r\n                                    <ng-template ngbPanelTitle>\r\n                                        <div>\r\n                                            <span class=\"shift-name\">Shift {{i+1}}&nbsp;</span>\r\n                                            <span class=\"shift-time\">{{shift.get('StartTime').value}}&nbsp;-&nbsp;{{shift.get('EndTime').value}}</span>\r\n                                            <i class=\"fas fa-chevron-up ml10\"></i>\r\n                                            <i class=\"fas fa-chevron-down ml10\"></i>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                    <ng-template ngbPanelContent>\r\n                                        <!-- column -->\r\n                                        <div class=\"load-panel-row\">\r\n                                            <ng-container *ngFor=\"let schedule of shift.controls['Schedules'].controls; let j = index;\">\r\n                                                <!-- [schedule.isValid?'completed':'', !schedule.isValid?'partial':''] -->\r\n                                                <div class=\"load-panel\" [ngClass]=\"getClassByStatus(i, j)\"\r\n                                                    placement=\"right\" [ngbPopover]=\"popContent\" container=\"body\"\r\n                                                    popoverClass=\"load-queue-popover\" [autoClose]=\"'outside'\"\r\n                                                    *ngIf=\"schedule.get('IsLoadQueueCollapsed').value && schedule.get('LoadQueueFilterVisibility').value\"\r\n                                                    (click)=\"setValidationObjectFromList(i, j)\">\r\n                                                    <div class=\"column-inital-div\">\r\n                                                        <div class=\"column-inital\">\r\n                                                            C{{j+1}}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"driver-name\">\r\n                                                        <div>\r\n                                                            <ng-container *ngIf=\"schedule.get('Drivers').value.length;else naTemplate\">\r\n                                                                <span placement=\"top\"\r\n                                                                    ngbTooltip=\"{{schedule.get('Drivers').value[0].Name}}\">{{schedule.get('Drivers').value[0].Name}}</span>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                        <small *ngIf=\"schedule.get('LoadQueueColumnStatus').value!=-1 && schedule.get('LoadQueueColumnStatus').value!=2 && getLoadQueueStatus(schedule.get('LoadQueueColumnStatus').value,i,j)!=''\">{{getLoadQueueStatus(schedule.get('LoadQueueColumnStatus').value,i,j)}}</small>\r\n                                                    </div>\r\n                                                    <div class=\"col-check\"\r\n                                                        *ngIf=\"!schedule.get('IsLoadQueueColumnBlocked').value\">\r\n                                                        <div class=\"custom-control custom-checkbox\">\r\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"checkbox_{{i\r\n                                                                   }}_{{j}}\"\r\n                                                                [checked]=\"schedule.get('IsColumnSelected').value\"\r\n                                                                (change)=\"selectColumn($event, schedule)\">\r\n                                                            <label class=\"custom-control-label\"\r\n                                                                for=\"checkbox_{{i}}_{{j}}\"></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </ng-template>\r\n                                </ngb-panel>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ngb-accordion>\r\n                </div>\r\n                <div class=\"footer\" *ngIf=\"shifts.length\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <button type=\"button\" class=\"btn btn-large\"\r\n                                [ngClass]=\" _selectAll== true ? 'btn-danger' : 'btn-primary'\"\r\n                                (click)=\"selectAllColumn();\">\r\n                                <span>{{ _selectAll ? 'UnSelect All' :' Select All' }}</span>\r\n                            </button>\r\n                            <button type=\"button\" placement=\"top\" container=\"body\" ngbTooltip=\"Move To Grid\"\r\n                                (click)=\"moveColumnsToGrid()\" class=\"btn btn-danger\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-4 text-right\">\r\n                            <button type=\"button\" class=\"btn btn-large btn-success\" (click)=\"iniatePublishColumns()\">\r\n                                Publish\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <ul class=\"nav nav-tabs\" id=\"popoverTabs\" role=\"tablist\">\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <a class=\"nav-link active\" id=\"validation-tab\" data-toggle=\"tab\" href=\"#validation\" role=\"tab\"\r\n                    aria-controls=\"validation\" aria-selected=\"true\">Validations</a>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <a class=\"nav-link\" id=\"location-tab\" data-toggle=\"tab\" href=\"#location\" role=\"tab\"\r\n                    aria-controls=\"location\" aria-selected=\"false\">Locations/Customers</a>\r\n            </li>\r\n        </ul>\r\n        <div class=\"tab-content\" id=\"popoverTabsContent\">\r\n            <div class=\"tab-pane fade show active\" id=\"validation\" role=\"tabpanel\" aria-labelledby=\"validation-tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <ng-container *ngIf=\"validationObj.DrCount>0; else emptyLoad\">\r\n                            \r\n                            <ng-container>\r\n                                <!-- *ngIf=\"validationObj.Errors && validationObj.Errors.length\" -->\r\n                                <h4 *ngIf=\"validationObj.Errors.length\" class=\"title\">Column</h4>\r\n                                <ng-container *ngFor=\"let colErr of validationObj.Errors; let colIndex = index;\">\r\n                                    <p class=\"sub-text error-text\">\r\n                                        <i class=\"fa fa-arrow-circle-right\"\r\n                                           aria-hidden=\"true\"></i> {{colErr}}\r\n                                    </p>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"validationObj.TripErrors.length\">\r\n                                <ng-container\r\n                                    *ngFor=\"let trErrors of validationObj.TripErrors; let trErrIndex = index;\">\r\n\r\n                                    <h4 *ngIf=\"trErrors.Errors.length\" class=\"title\">\r\n                                        Load {{(+trErrIndex+1)}}\r\n                                    </h4>\r\n\r\n                                    <p class=\"sub-text error-text\" *ngFor=\"let err of trErrors.Errors;\">\r\n                                        <i class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\r\n                                        {{err}}\r\n                                    </p>\r\n                                </ng-container>                               \r\n                            </ng-container>\r\n                            <ng-container *ngIf=\"validationObj.TripErrors.length==0\">\r\n                                <h4 class=\"title\">No error found.</h4>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"tab-pane fade\" id=\"location\" role=\"tabpanel\" aria-labelledby=\"location-tab\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n\r\n                        <!-- <h4 *ngIf=\"validationObj.Locations && validationObj.Locations.length\" class=\"title\">Locations</h4> -->\r\n\r\n                        <p *ngFor=\"let jb of validationObj.Locations; let jbIndex = index;\" class=\"sub-text\">\r\n                            {{+jbIndex+1}}) {{jb}}--{{validationObj.Customers[jbIndex]}}\r\n                        </p>\r\n\r\n                        <!-- <h4 *ngIf=\"validationObj.Customers && validationObj.Customers.length\" class=\"title\">\r\n                            Customers</h4>\r\n\r\n                        <p *ngFor=\"let cst of validationObj.Customers; let cstIndex = index;\" class=\"sub-text\">\r\n                            {{+cstIndex+1}}) {{cst}}</p> -->\r\n\r\n                        <p *ngIf=\"validationObj.Locations.length==0\">Locations\r\n                            and customers not available.</p>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #naTemplate>\r\n    <div class=\"fs12 text-truncate\" container=\"body\" placement=\"bottom\" ngbTooltip=\"Driver not assigned\">Driver not\r\n        assigned</div>\r\n</ng-template>\r\n<ng-template #emptyLoad>\r\n    <p>Delivery requests does not exist in selected column.</p>\r\n</ng-template>\r\n<ng-template #validColumn>\r\n    <p>Valid column.</p>\r\n</ng-template>","import { ColumnStatusEnum } from \"src/app/app.enum\";\r\nimport { DropDownItem } from \"src/app/buyer-wally-board/Models/BuyerWallyBoard\";\r\nimport { DropdownItem } from \"src/app/statelist.service\";\r\nimport { DeliveryRequestViewModel, TrailerModel } from \"../../models/DispatchSchedulerModels\";\r\n\r\nimport { DSBSaveModel} from '../../models/DispatchSchedulerModels';\r\nexport class DSBLoadQueueModel {\r\n    Id: string;\r\n    ScheduleBuilderId: string;\r\n    RegionId: string;\r\n    Date: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n}\r\n\r\nexport class DsbLoadQueueSuccess {\r\n    Id: string;\r\n    RegionId: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n}\r\n\r\n\r\nexport class DrError {\r\n    DrIndex: number;\r\n    Errors: string[];\r\n\r\n    constructor() {\r\n        this.DrIndex = 0;\r\n        this.Errors = [];\r\n    }\r\n}\r\n\r\n\r\nexport class TripError {\r\n    TripIndex: number;\r\n    Errors: string[];\r\n    //DrErrors: DrError[];\r\n\r\n    constructor() {\r\n        this.TripIndex = 0;\r\n        this.Errors = [];\r\n        //this.DrErrors = [];\r\n    }\r\n}\r\nexport class LoadQueueColumnValidations {\r\n    DrCount: number;\r\n    TrailerJobIncompatibleDrs: number;\r\n    ShiftIndex: number;\r\n    ShiftId: string;\r\n    ScheduleIndex: number;\r\n    Errors: string[];\r\n    TripErrors: TripError[];\r\n    ColumnStatus: ColumnStatusEnum;\r\n    Customers: string[];\r\n    Locations: string[];\r\n\r\n    constructor() {\r\n        this.DrCount = 0;\r\n        this.ShiftIndex = 0;\r\n        this.ScheduleIndex = 0;\r\n        this.Errors = [];\r\n        this.TripErrors = [];\r\n        this.ColumnStatus = 0;\r\n        this.Customers = [];\r\n        this.Locations = [];\r\n    }\r\n}\r\n\r\nexport class TrailersDeliveryRequestViewModel {\r\n    trailers: any[];//TrailerModel\r\n    deliveryRequests: DeliveryRequestViewModel[];\r\n    shiftIndex: number;\r\n    scheduleIndex: number;\r\n\r\n    constructor() {\r\n        this.trailers = [];\r\n        this.deliveryRequests = [];\r\n    }\r\n}\r\n\r\nexport class TrailerJobNonCompatibleDrs {\r\n    drCount: number;\r\n    shiftIndex: number;\r\n    scheduleIndex: number;\r\n}\r\n\r\nexport class LoadQueueStatusViewModel {\r\n    StatusCode: number;\r\n    LoadQueueSuccessInfo: DsbLoadQueueStatusViewModel[];\r\n    LoadQueueErrorInfo: DsbLoadQueueStatusViewModel[];\r\n}\r\n\r\nexport class DsbLoadQueueStatusViewModel {\r\n    ShiftIndex: number;\r\n    DriverColIndex: number;\r\n    TfxDriverName: string;\r\n    TfxUserId: number;\r\n    TfxCompanyId: number;\r\n    Messages: LoadQueueStatus[];\r\n}\r\n\r\nexport class LoadQueueStatus {\r\n    StatusMessage: string;\r\n}\r\n\r\n\r\nexport class DSBLoadQueueNotificationResponse {\r\n    public ScheduleBuilderId: string;\r\n    public RegionId: string;\r\n    public Date: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverColIndex: number;\r\n    public Status: number;\r\n    public DSBSaveModel: DSBSaveModel = new DSBSaveModel();\r\n\r\n}\r\nexport class DSBLoadQueueNotificationModel {\r\n    public ScheduleBuilderId: string;\r\n    public RegionId: string;\r\n    public Date: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HandleError } from '../../../errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { FormArray, FormControl, FormGroup } from \"@angular/forms\";\r\nimport { DSBLoadQueueModel, DSBLoadQueueNotificationModel, DSBLoadQueueNotificationResponse, TrailersDeliveryRequestViewModel } from \"./dsb-load.model\";\r\nimport { DeliveryRequestViewModel, DSBSaveModel, ScheduleShiftModel } from \"../../models/DispatchSchedulerModels\";\r\n\r\n\r\n@Injectable()\r\n\r\nexport class LoadQueueService extends HandleError {\r\n\r\n    private validateTrailerJobCompatibilityUrl = '/Carrier/ScheduleBuilder/ValidateTrailerJobCompatibilityForLoadQueue';\r\n    private createLoadQueueUrl = '/Carrier/Freight/CreateLoadQueue';\r\n    private deleteLoadQueueUrl = '/Carrier/Freight/DeleteLoadQueue';\r\n    private saveLoadQueueUrl = '/Carrier/ScheduleBuilder/SaveDsbLoadQueue';\r\n    private getLoadQueueNotificationsUrl = '/Carrier/Freight/GetLoadQueueNotifications';\r\n\r\n    public loadQueueColumnMovedSubject: Subject<boolean> = new Subject<boolean>();\r\n\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getTrailerJobCompatibility(models: TrailersDeliveryRequestViewModel[]): Observable<any> {\r\n        return this.httpClient.post(this.validateTrailerJobCompatibilityUrl, models).pipe(catchError(this.handleError<any>('getTrailerJobCompatibility', null)));\r\n    }\r\n\r\n    createLoadQueue(data: DSBLoadQueueModel[]): Observable<any> {\r\n        return this.httpClient.post(this.createLoadQueueUrl, data).pipe(catchError(this.handleError<any>('createLoadQueue', null)));\r\n    }\r\n\r\n    deleteLoadQueue(ids: string[]): Observable<any> {\r\n        return this.httpClient.post(this.deleteLoadQueueUrl, ids).pipe(catchError(this.handleError<any>('deleteLoadQueue', null)));\r\n    }\r\n\r\n    saveDsbLoadQueue(data: any[]): Observable<any> {\r\n        return this.httpClient.post(this.saveLoadQueueUrl, data).pipe(catchError(this.handleError<any>('saveDsbLoadQueue', null)));\r\n    }\r\n\r\n    getFilterForm() {\r\n        return new FormGroup({ Shift: new FormControl(null), Status: new FormControl(null) });\r\n    }\r\n\r\n    getLoadQueueNotifications(data: DSBLoadQueueNotificationModel[]): Observable<DSBLoadQueueNotificationResponse[]> {\r\n        return this.httpClient.post(this.getLoadQueueNotificationsUrl, data).pipe(catchError(this.handleError<any>('getLoadQueueNotifications', null)));\r\n    }\r\n\r\n    setLoadQueueColumnMoved(data: boolean) {\r\n        this.loadQueueColumnMovedSubject.next(data);\r\n    }\r\n\r\n    validatePublishLoad(trip: FormGroup) {\r\n        var isValid = true;\r\n        if (trip.controls.IsCommonPickup.value && !(trip.controls.Terminal.valid || trip.controls.BulkPlant.valid))\r\n            isValid = false;\r\n        return isValid;\r\n    }\r\n\r\n    getCustomerAndJobFromDr(drs: DeliveryRequestViewModel[]) {\r\n\r\n        let _jobs: string[] = [];\r\n        let _customers: string[] = [];\r\n\r\n        drs.forEach(dr => {\r\n            if (dr.CustomerCompany && !_customers.includes(dr.CustomerCompany)) {\r\n                _customers.push(dr.CustomerCompany);\r\n                _jobs.push(dr.JobName || '');\r\n            }\r\n        });\r\n        return { Locations: _jobs, customers: _customers };\r\n    }\r\n\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    getDSBSaveModel(SbForm: FormGroup) {\r\n        var sbModel = SbForm.value;\r\n        var dataToSave = new DSBSaveModel();\r\n        dataToSave.Id = sbModel.Id;\r\n        dataToSave.Date = sbModel.Date;\r\n        dataToSave.RegionId = sbModel.RegionId;\r\n        dataToSave.ObjectFilter = sbModel.ObjectFilter;\r\n        dataToSave.RegionFilter = sbModel.RegionFilter;\r\n        dataToSave.DateFilter = sbModel.DateFilter;\r\n        dataToSave.DSBFilter = sbModel.DSBFilter;\r\n        dataToSave.TimeStamp = sbModel.TimeStamp;\r\n        dataToSave.Status = sbModel.Status;\r\n        dataToSave.WindowMode = sbModel.WindowMode;\r\n        dataToSave.ToggleRequestMode = sbModel.ToggleRequestMode;\r\n        if (sbModel.Id == null) {\r\n            for (var i = 0; i < sbModel.Shifts.length; i++) {\r\n                var shift = new ScheduleShiftModel();\r\n                shift.Id = sbModel.Shifts[i].Id;\r\n                shift.StartTime = sbModel.Shifts[i].StartTime;\r\n                shift.EndTime = sbModel.Shifts[i].EndTime;\r\n                shift.SlotPeriod = sbModel.Shifts[i].SlotPeriod;\r\n                dataToSave.Shifts.push(shift);\r\n            }\r\n        }\r\n        return dataToSave;\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, AfterViewInit, ChangeDetectorRef, Input } from '@angular/core';\r\nimport { ShiftViewModel, DeliveryRequestViewModel, OttoTripModel, OttoBuilder } from '../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataService } from '../service/data.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-otto-builder',\r\n    templateUrl: './otto-builder.component.html',\r\n    styleUrls: ['./otto-builder.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OttoBuilderComponent implements OnInit, AfterViewInit {\r\n    public _loadingOttoDRs: boolean = true;\r\n    public _loadingShifts: boolean = true;\r\n    public _EnableScheduleDR: boolean = false;\r\n\r\n    @Input() public SelectedDate: string;\r\n    @Input() public DSBFilter: number;\r\n\r\n    public SelectedRegionId: string;\r\n    public SelectedShiftId: string;\r\n    private ShiftStartTime: string = null;\r\n    private ShiftEndTime: string = null;\r\n\r\n    public MinInputDate: Date = new Date();\r\n    public MaxInputDate: Date = new Date();\r\n\r\n    public Shifts: ShiftViewModel[] = [];\r\n    public Loads: OttoTripModel[] = [];\r\n    public AllDeliveryRequests: DeliveryRequestViewModel[] = [];\r\n    public SelectedDeliveryRequests: DeliveryRequestViewModel[] = [];\r\n    public SelectedLoads: Map<number, DeliveryRequestViewModel[]> = new Map<number, DeliveryRequestViewModel[]>();\r\n\r\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef) {\r\n        this.MaxInputDate.setDate(this.MinInputDate.getDate() + 30);\r\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n        //this.SelectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n        this.SelectedShiftId = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.DSBFilter == 1) {\r\n            this.sbService.getShifts(this.SelectedRegionId).subscribe(x => {\r\n                if (x) {\r\n                    this.Shifts = x;\r\n                    if (this.Shifts && this.Shifts.length > 0) {\r\n                        this.SelectedShiftId = this.Shifts[0].Id;\r\n                        this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                        this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                    }\r\n                }\r\n                this._loadingShifts = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                    this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                }\r\n                else {\r\n                    this._loadingOttoDRs = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.sbService.getDriversShifts(this.SelectedRegionId, this.SelectedDate).subscribe(x => {\r\n                if (x) {\r\n                    this.Shifts = x;\r\n                    if (this.Shifts && this.Shifts.length > 0) {\r\n                        this.SelectedShiftId = this.Shifts[0].Id;\r\n                        this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                        this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                    }\r\n                }\r\n                this._loadingShifts = false;\r\n                this.changeDetectorRef.detectChanges();\r\n                if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                    this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                }\r\n                else {\r\n                    this._loadingOttoDRs = false;\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        //this.getScheduleDetails(this.SelectedRegionId, this.SelectedDate);\r\n    }\r\n\r\n    public closeSlider(): void {\r\n        this.dataService.setOpenDsbOttoBuilderSubject(false);\r\n    }\r\n\r\n    public filterByShift(): void {\r\n\r\n        let selectedShift: ShiftViewModel = null;\r\n        if (this.SelectedShiftId) {\r\n            selectedShift = this.Shifts.find(x => x.Id == this.SelectedShiftId);\r\n        }\r\n        if (selectedShift) {\r\n            this.ShiftStartTime = selectedShift.StartTime;\r\n            this.ShiftEndTime = selectedShift.EndTime;\r\n            this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n            this.SelectedLoads.clear();\r\n            this._EnableScheduleDR = false;\r\n        }\r\n    }\r\n\r\n    public selectDR(loadIdx: number, drIdx: number) {\r\n        let indexvalue = loadIdx + \"_\" + drIdx;\r\n        let dr = this.Loads[loadIdx].DeliveryRequests[drIdx];\r\n        if ($(\"#ottoschedule_\" + indexvalue).hasClass(\"selected-dr\")) {\r\n            $(\"#ottoschedule_\" + indexvalue).removeClass(\"selected-dr\");\r\n            let drs = this.SelectedLoads.get(loadIdx) || [];\r\n            let drIndex = drs.findIndex(x => x == dr);\r\n            if (drIndex >= 0) {\r\n                drs.splice(drIndex, 1);\r\n                this.SelectedLoads.set(loadIdx, drs);\r\n                this._EnableScheduleDR = drs.length != 0;\r\n            }\r\n        } else {\r\n            let drs = this.SelectedLoads.get(loadIdx) || [];\r\n            drs.push(dr);\r\n            this.SelectedLoads.set(loadIdx, drs);\r\n            this._EnableScheduleDR = drs.length != 0;\r\n            $(\"#ottoschedule_\" + indexvalue).addClass(\"selected-dr\");\r\n        }\r\n        //console.log(this.SelectedLoads.get(loadIdx));\r\n    }\r\n\r\n    public filterScheduleDetails(date: string): void {\r\n        if (date && date != '' && this.SelectedDate != date) {\r\n            this.SelectedDate = date;\r\n            if (this.DSBFilter == 2) {\r\n                this.ShiftStartTime = null;\r\n                this.ShiftEndTime = null;\r\n                this.sbService.getDriversShifts(this.SelectedRegionId, this.SelectedDate).subscribe(x => {\r\n                    if (x) {\r\n                        this.Shifts = x;\r\n                        if (this.Shifts && this.Shifts.length > 0) {\r\n                            this.SelectedShiftId = this.Shifts[0].Id;\r\n                            this.ShiftStartTime = this.Shifts[0].StartTime;\r\n                            this.ShiftEndTime = this.Shifts[0].EndTime;\r\n                        }\r\n                    }\r\n                    this.changeDetectorRef.detectChanges();\r\n                    if (this.ShiftStartTime && this.ShiftEndTime) {\r\n                        this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, this.SelectedDate);\r\n                        this.SelectedLoads.clear();\r\n                        this._EnableScheduleDR = false;\r\n                    }\r\n                    else {\r\n                        this._loadingOttoDRs = false;\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.getScheduleDetails(this.SelectedRegionId, this.ShiftStartTime, this.ShiftEndTime, date);\r\n                this.SelectedLoads.clear();\r\n                this._EnableScheduleDR = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getScheduleDetails(regionId: string, shiftStartTime: string, shiftEndTime: string, date: string) {\r\n        this._loadingOttoDRs = true;\r\n        this.sbService.getOttoScheduleDetails(regionId, shiftStartTime, shiftEndTime, date).subscribe(data => {\r\n            if (data != null && data.length > 0) {\r\n                this.Loads = data;\r\n            }\r\n            this._loadingOttoDRs = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n\r\n    public ScheduleDRs(): void {\r\n        let ottoBuilder = new OttoBuilder();\r\n        ottoBuilder.Date = this.SelectedDate;\r\n        ottoBuilder.RegionId = this.SelectedRegionId;\r\n        ottoBuilder.ShiftId = this.SelectedShiftId;\r\n        this.SelectedLoads.forEach((value, key) => {\r\n            let load = new OttoTripModel();\r\n            load.DriverRowIndex = 0;\r\n            load.DriverColIndex = key;\r\n            load.StartTime = this.Loads[key].StartTime;\r\n            load.EndTime = this.Loads[key].EndTime;\r\n            load.DeliveryRequests = value;\r\n            ottoBuilder.Loads.push(load);\r\n        });\r\n        this._loadingOttoDRs = true;\r\n        this.sbService.scheduleOttoDRs(ottoBuilder).subscribe(x => {\r\n            this._loadingOttoDRs = false;\r\n            this.changeDetectorRef.detectChanges();\r\n            if (x.StatusCode == 0) {\r\n                this.dataService.setOpenDsbOttoBuilderSubject(false);\r\n                this.dataService.refreshDsbOttoBuilderSubject(true);\r\n                Declarations.msgsuccess(x.StatusMessage, undefined, undefined);\r\n            } else {\r\n                Declarations.msgerror(x.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"pt10 pb10 border-b\">\r\n    <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"closeSlider()\"><i class=\"fa fa-close fs18\"></i></a>\r\n    <div class=\"dib ml15 mr15\"><input type=\"text\" class=\"form-control datepicker\" [(ngModel)]=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"filterScheduleDetails($event);\" /></div>\r\n    <div class=\"dib\">\r\n        <select [(ngModel)]=\"SelectedShiftId\" class=\"form-control\" (change)=\"filterByShift()\">\r\n            <option [ngValue]=\"null\" selected>Select Shift</option>\r\n            <option *ngFor=\"let shift of Shifts\" [ngValue]=\"shift.Id\">\r\n                {{'Shift - ' + shift.StartTime + ' - ' + shift.EndTime}}\r\n            </option>\r\n        </select>\r\n        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingShifts\">\r\n            <span class='spinner-dashboard pa'></span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-sm-12\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingOttoDRs\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n    <div class=\"text-center mt10\" *ngIf=\"Loads.length==0\">\r\n        <i class=\"fa fas fa-exclamation-triangle opacity8 fs12\"></i>\r\n        <label class=\"color-grey fs12 mb0 ml10\">No delivery request exists</label>\r\n    </div>\r\n        <div class=\"row mt10 otto-drpanel mb10\">\r\n            <div class=\"col-sm-2\" *ngFor=\"let load of Loads; let i = index\">\r\n                <label>{{load.StartTime}} - {{load.EndTime}}</label>\r\n                <ng-container *ngIf=\"load.DeliveryRequests.length > 0\">\r\n                    <div class=\"drwrapper pr5\" *ngFor=\"let dr of load.DeliveryRequests; let j = index\">\r\n                        <!--add selected-dr class if div is selected-->\r\n                        <div id=\"ottoschedule_{{i}}_{{j}}\" (click)=\"selectDR(i,j)\" class=\"radius-5 mb2 pr pa5 handpointer\" [ngClass]=\"{'mustgo_bg':dr.Priority == 1,'shouldgo_bg':dr.Priority == 2,'couldgo_bg':dr.Priority == 3}\">\r\n                            <i class=\"fas fa-check-circle pa fs16 checkbox animated bounceIn\"></i>\r\n                            <label class=\"f-bold fs11 mb0\">{{dr.DeliveryWindow}}</label>\r\n                            <div>\r\n                                {{dr.CustomerCompany}} | {{dr.JobName}}<br />\r\n                                <span class=\"mr5\">{{dr.ProductType}}</span>\r\n                                <span class=\"mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">{{dr.RequiredQuantity | number:'1.0-2'}}</span>\r\n                                <span class=\"mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">\r\n                                    <span *ngIf=\"dr.UoM==1; else litres\">G</span>\r\n                                    <ng-template #litres>L</ng-template>\r\n                                </span>\r\n                                <!--{dr.TankName}, {dr.LocationName}<br />-->\r\n                                <!--<span class=\"pull-left mr5\">{dr.TankMaxFill}</span>\r\n        <span class=\"pull-left mr5\" *ngIf=\"dr.ScheduleQuantityType==1 || dr.ScheduleQuantityType==0\">\r\n            <span *ngIf=\"dr.UoM==1; else litres\">G</span>\r\n            <ng-template #litres>L</ng-template>\r\n        </span>-->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"!_EnableScheduleDR\" (click)=\"ScheduleDRs()\">Schedule DRs</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { OttoNotifications } from '../../models/DispatchSchedulerModels';\r\nimport { ScheduleBuilderService } from '../../service/schedule-builder.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DataService } from '../../service/data.service';\r\ndeclare function closeSlidePanel(): any;\n@Component({\n    selector: 'app-otto-notification',\n    templateUrl: './otto-notification.component.html',\n    styleUrls: ['./otto-notification.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OttoNotificationComponent implements OnInit {\n    public SelectedRegionId: string;\n    public _loadingOttoNotification: boolean = false;\n    public OttoNotificationsDetails: OttoNotifications[] = [];\n    constructor(private sbService: ScheduleBuilderService, private dataService: DataService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        this.SelectedRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\n    }\n\n    ngOnInit() {\n        this.getOttoNotification();\n    }\n    public closeSlider(): void {\r\n        this.dataService.setOpenDsbOttoNotificationSubject(false);\r\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n    public getOttoNotification() {\n        this._loadingOttoNotification = true;\n        this.sbService.getOttoNotificationDetails(this.SelectedRegionId)\r\n            .subscribe(detail => {\r\n                this.OttoNotificationsDetails = detail;\r\n                this.dataService.setDsbOttoNotificationCountSubject(this.OttoNotificationsDetails.length);\r\n                this._loadingOttoNotification = false;\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n    }\n    public updateNotificationStatus(Id:string) {\n        this._loadingOttoNotification = true;\n        this.sbService.updateNotificationStatus(Id)\r\n            .subscribe(detail => {\r\n                this._loadingOttoNotification = false;\r\n                if (detail.StatusCode == 0) {\r\n                    this.getOttoNotification();\r\n                }\r\n            });\r\n    }\n}\n","<div class=\"pt10 pb0\"><a class=\"ml20 close-panel\" (click)=\"closeSlider()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a><h3 class=\"dib mt0 mb0 ml15\">Change in Delivery Window</h3></div>\r\n<div class=\"pt10 pb10 pl20 pr20\" *ngIf=\"OttoNotificationsDetails.length>0\">\r\n    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingOttoNotification\">\r\n        <span class='spinner-dashboard pa'></span>\r\n    </div>\r\n    <div class=\"well mb10 pr\" *ngFor=\"let ottoNotification of OttoNotificationsDetails let i = index\">\r\n        <a class=\"pa right0 top0 mr15 mt10 color-grey\" (click)=\"updateNotificationStatus(ottoNotification.Id)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <div [innerHTML]=\"ottoNotification.Message\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"text-center\" *ngIf=\"OttoNotificationsDetails.length==0\">\r\n    No records found.\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { RouteInformationModel, JobWithSequence, RouteTfxJobsList } from '../../models/location';\nimport { RouteInfoService } from '../../service/route-info.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { PanelStatus } from 'src/app/app.enum';\n\n@Component({\n  selector: 'app-route-info',\n  templateUrl: './route-info.component.html',\n  styleUrls: ['./route-info.component.css']\n})\nexport class RouteInfoComponent implements OnInit {\n\n  public RouteForm: FormGroup;\n  public RouteName: string;\n  public RouteList: RouteInformationModel[] = [];\n  public RouteLocationList: RouteTfxJobsList[] = [];\n\n  public JobList: DropdownItem[] = [];\n  public SelectedRegionId: string = '';\n  public currentUserCompanyId: number = 0;\n  public multiDropdownSettings: IDropdownSettings;\n  public PanelStatus = PanelStatus.ShowRouteList;\n  public IsLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private routeInfoService: RouteInfoService) { }\n\n  ngOnInit() {\n    this.RouteForm = this.initForm();\n    this.multiDropdownSettings = {\n      singleSelection: true,\n      idField: 'Id',\n      textField: 'Name',\n      itemsShowLimit: 1,\n      allowSearchFilter: true\n    };\n  }\n  validateLocations(): boolean {\n    let tfxJobs = this.RouteForm.get('TfxJobs').value as any[];\n    let seen = new Set();\n    return tfxJobs.some(function(currentObject) {\n        return seen.size === seen.add(currentObject.JobDetails[0].Id).size;\n    });\n  }\n  onSubmit() {\n\n    if (!this.validateLocations()) {\n      let formValue = this.RouteForm.value;\n      let data: RouteInformationModel = {\n        Id: formValue.Id,\n        Name: formValue.Name,\n        TfxJobs: formValue.TfxJobs.map((job, index) => ({ SequenceNo: (index + 1), Id: job.JobDetails[0].Id, Name: job.JobDetails[0].Name })),\n        RegionId: formValue.RegionId,\n        TfxCompanyId: formValue.TfxCompanyId,\n        CreatedBy: null,\n        ShiftInfoDetails: null\n      };\n\n      this.IsLoading = true;\n      if (this.RouteForm.get('Id').value) {\n        this.routeInfoService.updateRouteInfo(data).subscribe(response => {\n          if (response != null && response['StatusCode'] == 0) {\n            this.PanelStatus = PanelStatus.ShowRouteList;\n            this.getRoutesByRegion();\n            Declarations.msgsuccess(\"Route updated.\", undefined, undefined);\n          }\n          else {\n            Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n          }\n          this.IsLoading = false;\n        });\n      }\n      else {\n        this.routeInfoService.createRouteInfo(data).subscribe(response => {\n          if (response != null && response['StatusCode'] == 0) {\n            this.PanelStatus = PanelStatus.ShowRouteList;\n            this.getRoutesByRegion();\n            Declarations.msgsuccess(response['StatusMessage'], undefined, undefined);\n          }\n          else {\n            Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n          }\n          this.IsLoading = false;\n        });\n      }\n    }\n    else{\n      Declarations.msgerror('Duplicate locations exist.', undefined, undefined);\n    }\n  }\n  setRegionId(companyId: number, regionId: string) {\n    this.PanelStatus = PanelStatus.ShowRouteList;\n    this.SelectedRegionId = regionId;\n    this.currentUserCompanyId = companyId;\n    this.getRoutesByRegion();\n  }\n  editRouteClicked(route: RouteInformationModel) {\n    this.getLocationsByRoute(route.Id);\n    this.PanelStatus = PanelStatus.ShowForm;\n    this.buildForm(route);\n  }\n  getRouteInfo(route: RouteInformationModel) {\n    var routeLocInfo = this.RouteList.find(top => top.Id == route.Id);\n    if (routeLocInfo != null) {\n      this.routeInfoService.sendRouteInfo(routeLocInfo);\n    }\n  }\n  deleteRouteClicked(route: RouteInformationModel) {\n    this.IsLoading = true;\n    this.PanelStatus = PanelStatus.ShowRouteList;\n    let data = {\n      RouteId: route.Id,\n      RegionId: route.RegionId\n    }\n    this.routeInfoService.deleteRouteInfo(data).subscribe(response => {\n      if (response != null && response['StatusCode'] == 0) {\n        Declarations.msgsuccess(response['StatusMessage'], undefined, undefined);\n      }\n      else {\n        Declarations.msgerror(response['StatusMessage'], undefined, undefined);\n      }\n      this.IsLoading = false;\n      this.getRoutesByRegion();\n    });\n  }\n  newRouteClicked() {\n    this.PanelStatus = PanelStatus.ShowForm;\n    this.getLocationsByRegion();\n    this.RouteForm = this.initForm();\n    this.addLocation(null);\n  }\n\n  initForm(): FormGroup {\n    return this.fb.group({\n      Id: this.fb.control(''),\n      Name: this.fb.control('', Validators.required),\n      RegionId: this.fb.control(this.SelectedRegionId, Validators.required),\n      TfxCompanyId: this.fb.control(this.currentUserCompanyId),\n      ShiftInfoDetails: this.fb.control(''),\n      TfxJobs: this.fb.array([], Validators.required)\n    });\n  }\n\n  buildForm(route: any) {\n    let jobs: JobWithSequence[] = [];\n    if (route && route.TfxJobs.length > 0) {\n      jobs = route.TfxJobs.map(job => ({\n        SequenceNo: job.SequenceNo,\n        JobDetails: { Id: job.Id.toString(), Name: job.Name }\n      }));\n    }\n\n    this.RouteForm = this.initForm();\n    let name = this.RouteForm.get('Name') as FormControl;\n    name.patchValue(route.Name);\n    let id = this.RouteForm.get('Id') as FormControl;\n    id.patchValue(route.Id);\n    let shift = this.RouteForm.get('ShiftInfoDetails') as FormControl;\n    shift.patchValue(route.ShiftInfoDetails);\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    jobs.forEach(job => {\n      tfxJobs.push(this.getRouteJob(job));\n    });\n  }\n  addLocation(data: JobWithSequence) {\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    tfxJobs.push(this.getRouteJob(data));\n  }\n  getRouteJob(data: JobWithSequence): FormGroup {\n    return this.fb.group({\n      SequenceNo: new FormControl(data && data.SequenceNo ? data.SequenceNo : null),\n      JobDetails: new FormControl(data && data.JobDetails ? [data.JobDetails] : null, Validators.required),\n    })\n  }\n  removeLocation(i: number) {\n    let tfxJobs = this.RouteForm.get('TfxJobs') as FormArray;\n    tfxJobs.removeAt(i);\n    if (tfxJobs.length === 0) {\n      this.addLocation(null);\n    }\n  }\n  getRoutesByRegion(): void {\n    this.IsLoading = true;\n    this.RouteList = [];\n    this.routeInfoService.getRoutesByRegion(this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.RouteList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n  getLocationsByRegion(): void {\n    this.IsLoading = true;\n    this.JobList = [];\n    this.routeInfoService.getLocationsByRegion(this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.JobList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n  getLocationsByRoute(routeId: string): void {\n    this.IsLoading = true;\n    this.JobList = [];\n    this.routeInfoService.getLocationsByRoute(routeId, this.SelectedRegionId).subscribe(response => {\n      if (response != null && response['ResponseData'] && response['ResponseData'].length > 0) {\n        this.JobList = response['ResponseData'];\n      }\n      this.IsLoading = false;\n    });\n  }\n}\n\n","<div class=\"side-panel-wrapper col-sm-12\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 pt10\">\r\n            <a class=\"close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">Route Information</h3>\r\n            <div class=\"dib\" *ngIf=\"PanelStatus==1\">\r\n                <a class=\"btn btn-default btn-sm mtm5 ml10\" (click)=\"newRouteClicked();\">\r\n                    <i class=\"fa fa-plus fs14\"></i> Create Route\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"pt10 pb10 col-sm-12\">\r\n            <div *ngIf=\"PanelStatus==1\" class=\"\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\" *ngFor=\"let route of RouteList\">\r\n                        <div class=\"card mb20\">\r\n                            <div class=\"card-body pt10\">\r\n                                <small>Route Name</small>\r\n                                <h4 class=\"card-title pt0\">{{route.Name}}</h4>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-8\">\r\n                                        <a title=\"View Locations\" (click)=\"getRouteInfo(route);\">\r\n                                            <i class=\"fa fa-map-marker mr5 fs14\"></i>Locations\r\n                                        </a>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 text-right\">\r\n                                        <a class=\"mr10\" title=\"Edit\" (click)=\"editRouteClicked(route);\">\r\n                                            <i class=\"fa fa-pencil-square-o fs14\"></i>\r\n                                        </a>\r\n                                        <a title=\"Delete\" (click)=\"deleteRouteClicked(route);\">\r\n                                            <i class=\"fa fa-trash-alt mt14 color-maroon\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"PanelStatus==2\">\r\n                <form name=\"RouteForm\" [formGroup]=\"RouteForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\" *ngIf=\"RouteForm.get('ShiftInfoDetails') && RouteForm.get('ShiftInfoDetails').value\">\r\n                            <div class=\"form-group mb5\">\r\n                                <label>Shift</label>\r\n                                <input type=\"text\" class=\"form-control\" disabled value=\"{{RouteForm.get('ShiftInfoDetails').value}}\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group mb5\">\r\n                                <label for=\"Name\">Name</label>\r\n                                <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"Name\" required />\r\n                                <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('Name').invalid\">\r\n                                    <div class=\"mt5 color-red f-normal\">Route name is required</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"location-wrapper mb15\">\r\n                        <div class=\"row mt10\">\r\n                            <div class=\"col-sm-12\">\r\n                                <label for=\"Name\"><b>Locations</b></label>\r\n                                <table class=\"table mb0\">\r\n                                    <thead>\r\n                                    <td width=\"10%\" class=\"pl0\">Sequence</td>\r\n                                    <td>Location</td>\r\n                                    <td></td>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr formArrayName=\"TfxJobs\" *ngFor=\"let tfxJob of RouteForm.get('TfxJobs')['controls'];  let j = index;\">\r\n                                            <td class=\"pl0\"> <span class=\"btn btn-primary img-circle ml0\">{{(j+1)}}</span> </td>\r\n                                            <td>\r\n                                                <div class=\"form-group mb5\">\r\n                                                    <div [formGroupName]=\"j\">\r\n\r\n                                                        <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':RouteForm.get('TfxJobs').touched && RouteForm.get('TfxJobs').invalid}\"\r\n                                                                                 formControlName=\"JobDetails\" [placeholder]=\"'Select Locations'\"\r\n                                                                                 [settings]=\"multiDropdownSettings\" [data]=\"JobList\">\r\n                                                        </ng-multiselect-dropdown>\r\n\r\n                                                        <!-- <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('TfxJobs').invalid\">\r\n                                            <div class=\"mt5 color-red f-normal\">Location is required</div>\r\n                                        </div> -->\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td class=\"text-right pr0\">\r\n                                                <a class=\"ml20\" (click)=\"removeLocation(j);\">\r\n                                                    <i class=\"fa fa-trash-alt mt14 color-maroon mt8\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <table width=\"100%\">\r\n                                    <tr>\r\n                                        <td width=\"11%\">&nbsp;</td>\r\n                                        <td colspan=\"2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a (click)=\"addLocation(null);\">\r\n                                                    <i class=\"fa fa-plus-circle fs14\"></i> Add Location\r\n                                                </a>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group text-right col-sm-12\">\r\n                            <button type=\"button\" class=\"btn btn-lg\" (click)=\"PanelStatus=1\">Cancel</button>\r\n                            <button class=\"btn btn-primary btn-lg\" [disabled]=\"!RouteForm.valid\">Save</button>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"col-sm-6\">\r\n        <div class=\"form-group mb5\">\r\n            <label for=\"TfxJobs\">Locations</label>\r\n            <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':RouteForm.get('TfxJobs').touched && RouteForm.get('TfxJobs').invalid}\"\r\n                                     [formControl]=\"RouteForm.controls['TfxJobs']\" [placeholder]=\"'Select Locations'\"\r\n                                     [data]=\"JobList\" [settings]=\"multiDropdownSettings\">\r\n            </ng-multiselect-dropdown>\r\n            <div *ngIf=\"RouteForm.get('Name').touched && RouteForm.get('TfxJobs').invalid\">\r\n                <div class=\"mt5 color-red f-normal\">Location is required</div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div>\r\n    <form [formGroup]=\"SbForm\">\r\n        <!-- header -->\r\n        <div class=\"header_panel\">\r\n            <div class=\"row border-b pb10 mb10\" *ngIf=\"_toggle_header\">\r\n                <div class=\"col-sm-2\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingRegions\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <select formControlName=\"RegionId\" class=\"form-control mt5\">\r\n                        <option *ngFor=\"let region of Regions\" [value]=\"region.Id\"\r\n                                [selected]=\"region.Id==SbForm.controls['RegionId'].value\">\r\n                            {{region.Name}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-sm-10 pl10 text-left\">\r\n                    <div class=\"dib rounded icon-toggle\" *ngIf=\"disableControl==false\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'singleMode1'\" id=\"singleMode\" [value]=\"1\" [checked]=\"SbForm.controls['WindowMode'].value==1\">\r\n                            <label class=\"btn ml0 first-icon\" (click)=\"onWindowFilterChange(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'multiwindowmode1'\" id=\"multiwindowmode\" [value]=\"2\" [checked]=\"SbForm.controls['WindowMode'].value==2\">\r\n                            <label class=\"btn last-icon\" (click)=\"onWindowFilterChange(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"dib border pa5 radius-capsule ml20\" id=\"daySelector\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterYesterDay\" [value]=\"4\" [checked]=\"SbForm.controls['DateFilter'].value==4\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"onDateFilterChange(4)\">Yesterday</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterToday\" [value]=\"1\" [checked]=\"SbForm.controls['DateFilter'].value==1\">\r\n                            <label class=\"btn mr5 ml0\" (click)=\"onDateFilterChange(1)\">Today</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterTomorrow\" [value]=\"2\" [checked]=\"SbForm.controls['DateFilter'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onDateFilterChange(2)\">Tomorrow</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'DateFilter1'\" id=\"filterDate\" [value]=\"3\" [checked]=\"SbForm.controls['DateFilter'].value==3\">\r\n                            <div class=\"dib pl10\" id=\"dateInputLabel\">\r\n                                <input type=\"text\" class=\"form-control datepicker\" formControlName=\"Date\" id=\"dateInput\" myDatePicker [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\"\r\n                                       (onDateChange)=\"setSelectedDate($event);\" autocomplete=\"off\" placeholder=\"__/__/____\" for=\"filterDate\" (click)=\"onDateFilterChange(3)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"dib pa5 ml20 shift-wrapper\" *ngIf=\"SbForm.controls['DSBFilter'].value==2\">\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Shift'\"\r\n                                                 [settings]=\"shiftFilterSettings\" [data]=\"Shifts\"\r\n                                                 formControlName=\"SelectedShifts\"\r\n                                                 (onSelect)=\"onShiftsSelect($event)\" (onDeSelect)=\"onShiftsDeSelect($event)\"\r\n                                                 (onSelectAll)=\"onShiftsSelectAll()\"\r\n                                                 (onDeSelectAll)=\"onShiftsDeSelectAll()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"side-panel\" id=\"schedulechange\">\r\n                        <div class=\"side-panel-wrapper\">\r\n                            <app-otto-notification *ngIf=\"IsOttoNotificationOpened\"></app-otto-notification>\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"javascript:void(0);\" *ngIf=\"disableControl==false\" class=\"btn border border-secondary pull-right mt5 pr\" (click)=\"openOttoNotification()\" onclick=\"slidePanel('#schedulechange','30%')\" placement=\"left\" ngbTooltip=\"Delivery Window Change\">\r\n                        <i class=\"fas fa-bell fs16\"></i>\r\n                        <span class=\"dsb-notification-count fs10 bg-danger pa dib\" *ngIf=\"OttoNotificationCount>0\">{{OttoNotificationCount}}</span>\r\n                    </a>\r\n                    <button class=\"btn border border-secondary mt5 pull-right\" id=\"showLoadSummery\" *ngIf=\"disableControl==true\" (click)=\"onRedirectWallyBoardPage()\" placement=\"bottom\" ngbTooltip=\"Load Summary\">\r\n                        <i class=\"fas fa fa-user-clock fs14\"></i>\r\n                    </button>\r\n                    <a class=\"btn border border-secondary mt5 pull-right\" *ngIf=\"disableControl==false\" (click)=\"openDRReportGrid()\" placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\r\n                    <div *ngIf=\"isSupplierCompany && isSupplierOrDispatcher && disableControl==false\" class=\"dib mt5 shift-wrapper float-right\">\r\n                        <app-add-location [RegionId]=\"SbForm.get('RegionId').value\" [MapsApiKey]=\"_mapsApiKey\" (OnTheFlyLocationCreate)=\"refreshDeliveryRequests(0)\"></app-add-location>\r\n                    </div>\r\n                    <div class=\"d-inline-block pull-right position-relative\">\r\n                        <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openCalendarView()\" placement=\"bottom\" ngbTooltip=\"Calendar View\"><i class=\"fa fa-calendar-alt fs18\" aria-hidden=\"true\"></i></a>\r\n                        <div class=\"dib pa5 ml20 shift-wrapper position-absolute blinker-calendar\" *ngIf=\"isDrScheduledforToday\">\r\n                            <i class=\"fas fa-circle animated flash infinite text-info\" title=\"You have some loads to be scheduled today. Please click on the calendar here.\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <button class=\"btn border border-secondary mt5 pull-right\" *ngIf=\"isDisplayOttoButton && disableControl==false\" (click)=\"openOttoBuilder()\" onclick=\"slidePanel('#otto','97%')\" placement=\"bottom\" ngbTooltip=\"Otto\"><i class=\"far fa-clock fs16\"></i></button>\r\n                    <div class=\"side-panel\" id=\"otto\">\r\n                        <div class=\"side-panel-wrapper\">\r\n                            <app-otto-builder *ngIf=\"IsOttoBuilderOpened\" [SelectedDate]=\"SbForm.controls['Date'].value\" [DSBFilter]=\"SbForm.controls['DSBFilter'].value\"></app-otto-builder>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"panel_icon\" [ngClass]=\"{'panel_icon_b5': !_toggle_header, 'z-index101': !_toggle_header}\">\r\n                <div class=\"icon_drop\" (click)=\"hideHeader();\">\r\n                    <i class=\"fas fa-lg\" [ngClass]=\"_toggle_header ? 'fa-angle-up' : 'fa-angle-down' \" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{ _toggle_header ? 'Hide' : 'Show'}} Date Header\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Schedules end -->\r\n        <div class=\"row\">\r\n            <!-- Delivery Requests -->\r\n            <div class=\"toggle-dr-panel\" [ngClass]=\"{'d-none':_toggle_dr_panel===true}\" id=\"toggle_dr_panel_id\">\r\n                <div>\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingRegions\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"pa5 mtm5 radius-capsule mb5 mrm10\" *ngIf=\"_pubWindowmode==1 && disableControl==false\">\r\n                        <div class=\"btn-group btn-filter dr_panel_filter\">\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestDR1'\" id=\"toggleRequestDR\" [value]=\"1\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==1\">\r\n                            <label class=\"btn ml0\" (click)=\"onQueueFilterChange(1);\">DRs</label>\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestQD1'\" id=\"toggleRequestQD\" [value]=\"2\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onQueueFilterChange(2);\"><span class=\"pr\">Clipboard</span> <sup *ngIf=\"_refreshQueue===true\"><i class=\"fas fs8 fa-circle color-green animated flash infinite ml2 pa top5 left2\"></i></sup> </label>\r\n                        </div>\r\n                        <div id=\"toggle_dr_panel_btn\" class=\"pull-right pr pa0 text-right mt3\">\r\n                            <span>\r\n                                <i class=\"fas fa-search fs18 cursor_pointer mr5 color-lighticon\" [ngClass]=\"{'text-active': _toggle_search}\" (click)=\"toggleSearch();\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"{{ drFilterForm.get('IsFilterApplied').value ? 'Filter is applied.' : 'Filter is not applied.'}}\">\r\n                                <i id=\"toogle_panel_icon\" class=\"fas fa-filter fs18 cursor_pointer color-lighticon mr5\"\r\n                                   (click)=\"openDrFilterForm()\" [class.filterApplied]=\"drFilterForm.get('IsFilterApplied').value\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"Collapse DR panel\" placement=\"right\">\r\n                                <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-left\" (click)=\"toggleDrPanel()\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"pa5 mtm5 radius-capsule mb5 mrm10\" *ngIf=\"_pubWindowmode==2 && disableControl==false\">\r\n                        <div class=\"btn-group btn-filter dr_panel_filter\">\r\n                            <a class=\"btn mr5 ml0 color-orange f-bold\" (click)=\"onRedirectMultiWindowScreen(1)\">DRs <i class=\"far fa-window-restore fs11 mtm2 pull-right ml5\"></i></a>\r\n\r\n                            <input type=\"radio\" class=\"hide-element\" [name]=\"'toggleRequestQD2'\" id=\"toggleRequestQD1\" [value]=\"2\" [checked]=\"SbForm.controls['ToggleRequestMode'].value==2\">\r\n                            <label class=\"btn\" (click)=\"onQueueFilterChange(2);\"><span class=\"pr\">Clipboard</span><sup *ngIf=\"_refreshQueue===true\"><i class=\"fas fs8 fa-circle color-green animated flash infinite ml2 pa top5 left2\"></i></sup></label>\r\n                        </div>\r\n                        <div id=\"toggle_dr_panel_btn\" class=\"pull-right pr pa0 text-right mt3\">\r\n                            <span>\r\n                                <i class=\"fas fa-search fs18 cursor_pointer mr5 color-lighticon\" [ngClass]=\"{'text-active': _toggle_search}\" (click)=\"toggleSearch();\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"{{ drFilterForm.get('IsFilterApplied').value ? 'Filter is applied.' : 'Filter is not applied.'}}\">\r\n                                <i id=\"toogle_panel_icon\" class=\"fas fa-filter fs18 cursor_pointer color-lighticon mr5\"\r\n                                   (click)=\"openDrFilterForm()\" [class.filterApplied]=\"drFilterForm.get('IsFilterApplied').value\"></i>\r\n                            </span>\r\n                            <span ngbTooltip=\"Collapse DR panel\">\r\n                                <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-left\" (click)=\"toggleDrPanel()\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row mb5\" *ngIf=\"_toggle_search\">\r\n                    <div class=\"col-sm-12 pr10\">\r\n                        <div class=\"inner-addon right-addon\">\r\n                            <i class=\"glyphicon glyphicon-remove text-danger\" (click)=\"toggleSearch();\"></i>\r\n                            <input type=\"text\" name=\"txtSearch\" formControlName=\"searchDRS\" id=\"txtSearch\" class=\"form-control\" placeholder=\"Search\" (keydown.enter)=\"$event.preventDefault()\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"_toggle_search == false && (loadUniqueProducts.length > 0)\">\r\n                    <select formControlName=\"selectedProduct\" class=\"form-control mb5 btn-rounded\" (change)=\"filterDrByProductType($event.target.value)\" *ngIf=\"disableControl==false\">\r\n                        <option value=\"-1\" selected>All Products</option>\r\n                        <option *ngFor=\"let productName of loadUniqueProducts\" [value]=\"productName\">\r\n                            {{productName}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"dr_accordian_panel\" [ngClass]=\"{'dr_accordian_panel_h_150': !_toggle_header}\" *ngIf=\"disableControl==false\">\r\n                    <div *ngIf=\"_loadingDrRequests\" class=\"pa bg-white z-index5 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"panel-group dr-accordian\" id=\"accordion\">\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('Missed').value)\">\r\n                            <app-delivery-request [Title]=\"'Missed'\" [isToggleDrPanel]=\"_toggle_dr_panel\" [CollapaseId]=\"'collapse4'\"\r\n                                                  [CollapaseInClass]=\"'show'\"\r\n                                                  [TitleClass]=\"'missed'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"missedRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('MustGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Must Go'\" [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('MustGo').value && drFilterForm.controls.Priority.get('Missed').value != true)? 'show': ''\"\r\n                                                  [CollapaseId]=\"'collapse1'\"\r\n                                                  [TitleClass]=\"'mustgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"mustGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('ShouldGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Should Go'\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('ShouldGo').value && drFilterForm.controls.Priority.get('Missed').value != true && drFilterForm.controls.Priority.get('MustGo').value != true)? 'show': ''\"\r\n                                                  [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseId]=\"'collapse2'\"\r\n                                                  [TitleClass]=\"'shouldgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"shouldGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('CouldGo').value)\">\r\n                            <app-delivery-request [Title]=\"'Could Go'\"\r\n                                                  [CollapaseInClass]=\"(drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('CouldGo').value && drFilterForm.controls.Priority.get('Missed').value != true && drFilterForm.controls.Priority.get('MustGo').value != true && drFilterForm.controls.Priority.get('ShouldGo').value != true)? 'show': ''\"\r\n                                                  [isToggleDrPanel]=\"_toggle_dr_panel\"\r\n                                                  [CollapaseId]=\"'collapse3'\"\r\n                                                  [TitleClass]=\"'couldgo'\"\r\n                                                  (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                  [Locations]=\"couldGoRequests\"\r\n                                                  [PriorityTabCount]=\"drFilterForm.get('IsFilterApplied').value? drFilterModel.Priority.length: 0\">\r\n                            </app-delivery-request>\r\n                        </div>\r\n                        <div class=\"panel panel-default py-1\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('AssignedByMe').value)\">\r\n                            <app-assigned-by-me (onDeliveryRequestEdit)=\"getDeliveryReq($event)\"\r\n                                                [regionId]=\"SbForm.controls['RegionId'].value\"\r\n                                                [SelectedDate]=\"SbForm.controls['Date'].value\">\r\n                            </app-assigned-by-me>\r\n                        </div>\r\n                        <div class=\"panel panel-default border-top py-2\" *ngIf=\"drFilterForm.get('IsFilterApplied').value != true || (drFilterForm.get('IsFilterApplied').value && drFilterForm.controls.Priority.get('AssignedToMe').value)\">\r\n\r\n                            <app-assigned-to-me #AssignedToMe [regionId]=\"SbForm.controls['RegionId'].value\"\r\n                                                [SelectedDate]=\"SbForm.controls['Date'].value\" (OnAcceptRejectDR)=\"changeCarrierBrokeredDrStatus($event)\">\r\n                            </app-assigned-to-me>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Schedules -->\r\n            <!--'col-sm-10 schedule-panel': disableControl===false,-->\r\n            <div class=\"schedule-panel mt-n1\" [ngClass]=\"_toggle_dr_panel ? (disableControl===true ? 'toggled' : 'toggled') : (disableControl===true ? 'toggled' : 'non-toggle') \" id=\"schedule-panel_id\" style=\"min-height:80px;\">\r\n                <span class=\"float-btn\" *ngIf=\"_toggle_dr_panel\" ngbTooltip=\"Expand DR panel\">\r\n                    <i id=\"toogle_panel_icon\" class=\"far fs18 cursor_pointer color-lighticon fa-arrow-alt-circle-right pluse-icon\" (click)=\"toggleDrPanel()\"></i>\r\n                    <!-- [ngClass]=\"_toggle_dr_panel ? 'fa-arrow-alt-circle-left' : ' fa-arrow-alt-circle-right'\" -->\r\n                </span>\r\n                <div class=\"row\">\r\n                    <div [ngClass]=\"(disableControl || _toggle_dr_panel) ? 'col-sm-8' : 'col-sm-8'\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\" *ngIf=\"SbForm.controls['DSBFilter'].value==2 && disableControl==false\">\r\n                                <app-dsb-load-queue [isDisableControl]=\"disableControl\" [SbForm]='SbForm' [IsTrailerExists]=\"_isTrailerExists\" [RegionDetail]=\"RegionDetail\"></app-dsb-load-queue>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-7\">\r\n                                        <app-schedule-builder-filter #SBFilter [isDisableControl]=\"disableControl\" [SbFilterData]=\"SbFilter\" (OnSbFilterApply)=\"onApplyFilter($event)\" *ngIf=\"UpdateSbFilter && SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==1\" [IsTrailerExists]=\"_isTrailerExists\">\r\n                                        </app-schedule-builder-filter>\r\n                                        <app-schedule-builder-grid-filter [isDisableControl]=\"disableControl\" #SbGridViewFilter [SbGridFilterData]=\"SbGridViewFilter\" (OnSbGridFilterApply)=\"onApplyGridViewFilter($event)\" *ngIf=\"SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==2\">\r\n                                        </app-schedule-builder-grid-filter>\r\n                                    </div>\r\n                                    <div class=\"col-sm-5\" style=\"margin-left: -25px;\">\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value != true && disableControl==false\" type=\"button\" class=\"btn btn-primary btn-sm mt3\"\r\n                                                (click)=\"assignDrsToCarrier()\">\r\n                                            Assign DR(s)\r\n                                        </button>\r\n\r\n\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value == true && disableControl==false\" type=\"button\" class=\"btn btn-primary btn-sm mt3\"\r\n                                                (click)=\"assignCarriersToDrs()\">\r\n                                            Select Carrier\r\n                                        </button>\r\n                                        <button *ngIf=\"SbForm.controls['IsAssignDrEnabled'].value == true && disableControl==false\" type=\"button\" class=\"btn btn-link ml-2 btn-sm mt3\"\r\n                                                (click)=\"cancelAssignDrsToCarrier()\">\r\n                                            Cancel\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div [ngClass]=\"(disableControl || _toggle_dr_panel) ? 'col-sm-4' : 'col-sm-4'\">\r\n                        <button *ngIf=\"disableControl==false\" type=\"button\" class=\"btn btn-link pull-right mr5 pa0\" data-target=\"#route-info\"\r\n                                (click)=\"setRegionForRoute()\" onclick=\"slidePanel('#route-info','40%')\">\r\n                            <i class=\"fas fa-route fs14 mr5\"></i> Routes\r\n                        </button>\r\n                        <app-dip-test [isDisableControl]=\"disableControl\" (onRaiseDR)=\"refreshDeliveryRequests(0);\" [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n                    </div>\r\n                </div>\r\n                <app-driver-column-view *ngIf=\"SbForm.controls['ObjectFilter'].value==1 && SbForm.controls['DSBFilter'].value==2\" [SbForm]=\"SbForm\" [HeaderToggle]=\"_toggle_header\" [Shifts]=\"DriverViewShifts\" [RegionDetail]=\"RegionDetail\" [SelectedRegionId]=\"SelectedRegionId\" [IsTrailerExists]=\"_isTrailerExists\" [IsNoDriverShiftFound]=\"IsNoDriverShiftFound\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                </app-driver-column-view>\r\n            </div>\r\n            <!-- Delivery Group -->\r\n            <app-delivery-group [SelectedRegionId]=\"SelectedRegionId\"\r\n                                [SelectedDate]=\"SbForm.controls['Date'].value\"\r\n                                [ScheduleBuilderId]=\"SbForm.controls['Id'].value\"\r\n                                [isSupplierCompany]=\"isSupplierCompany\" #deliveryGroup (onRaiseSubDR)=\"refreshDeliveryRequests(0);\"></app-delivery-group>\r\n            <!--<app-create-load [SelectedRegionId]=\"SelectedRegionId\" [selectedProduct]=\"SbForm.controls['selectedProduct'].value\"></app-create-load>-->\r\n        </div>\r\n\r\n    </form>\r\n    <ng-sidebar-container style=\"z-index: 99999;\" *ngIf=\"_isInitiated\">\r\n        <ng-sidebar [(opened)]=\"_opened\"\r\n                    [animate]=\"_animate\"\r\n                    [position]=\"_POSITIONS[_positionNum]\"\r\n                    [showBackdrop]=\"_showBackdrop\"\r\n                    style=\"height: 100vh\">\r\n            <div class=\"DR-filter-panel\">\r\n                <div class=\"row border-bottom \">\r\n                    <div class=\"col-12\">\r\n                        <h3 class=\"dib\">Delivery Request Filter</h3>\r\n                        <a class=\"ml20 close-panel\" (click)=\"_toggleClosed();setLastDrFilterForm();\"><i class=\"fa fa-close fs18 pull-right mt4\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <form [formGroup]=\"drFilterForm\" novalidate>\r\n                    <div class=\"row border-bottom mt10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Pickup </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <div id=\"terminal\">\r\n                                        <label>Terminals:</label>\r\n                                        <div class=\"form-group\">\r\n                                            <ng-multiselect-dropdown #multiSelect1\r\n                                                                     [formControl]=\"drFilterForm.controls['Terminals']\"\r\n                                                                     [settings]=\"settings\" [data]=\"terminalsForFilter\">\r\n                                            </ng-multiselect-dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <div id=\"bulkPlant\">\r\n                                        <label>Bulk Plants:</label>\r\n                                        <div class=\"form-group\">\r\n                                            <ng-multiselect-dropdown #multiSelect2\r\n                                                                     [formControl]=\"drFilterForm.controls['BulkPlants']\"\r\n                                                                     [settings]=\"settings\" [data]=\"bulkPlantsForFilter\">\r\n                                            </ng-multiselect-dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 mt10 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Priority </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"Priority\">\r\n                                        <div class=\"form-check form-check-inline \">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_0\"\r\n                                                   name=\"priority\" value=\"4\" formControlName=\"Missed\">\r\n                                            <label class=\"form-check-label\" for=\"priority_0\">Missed</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_1\"\r\n                                                   name=\"priority\" value=\"1\" formControlName=\"MustGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_1\">Must Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_2\"\r\n                                                   name=\"priority\" value=\"2\" formControlName=\"ShouldGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_2\">Should Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_3\"\r\n                                                   name=\"priority\" value=\"3\" formControlName=\"CouldGo\">\r\n                                            <label class=\"form-check-label\" for=\"priority_3\">Could Go</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_4\"\r\n                                                   name=\"priority\" value=\"5\" formControlName=\"AssignedToMe\">\r\n                                            <label class=\"form-check-label\" for=\"priority_4\">Assigned to me</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"priority_5\"\r\n                                                   name=\"priority\" value=\"6\" formControlName=\"AssignedByMe\">\r\n                                            <label class=\"form-check-label\" for=\"priority_5\">Assigned by me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Trailer Type </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"TrailerType\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_0\"\r\n                                                   name=\"TrailerType\" value=\"1\" formControlName=\"Lead\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_0\">Lead</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_1\"\r\n                                                   name=\"TrailerType\" value=\"2\" formControlName=\"Pup\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_1\">Pup</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_2\"\r\n                                                   name=\"TrailerType\" value=\"3\" formControlName=\"Quad\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_2\">Quad</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_3\"\r\n                                                   name=\"TrailerType\" value=\"4\" formControlName=\"Tandem\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_3\">Tandem</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TrailerType_4\"\r\n                                                   name=\"TrailerType\" value=\"5\" formControlName=\"Tridem\">\r\n                                            <label class=\"form-check-label\" for=\"TrailerType_4\">Tridem</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Delivery Shift </h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"DeliveryShift\">\r\n\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"drshift_0\"\r\n                                                   name=\"drshift\" value=\"1\" formControlName=\"Morning\">\r\n                                            <label class=\"form-check-label\" for=\"drshift_0\">Morning</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"drshift_1\"\r\n                                                   name=\"drshift\" value=\"2\" formControlName=\"Evening\">\r\n                                            <label class=\"form-check-label\" for=\"drshift_1\">Evening</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\" *ngIf=\"this.IsCarrierCompanyStatus\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Brokered DRs</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"DeliveryBrokeredDR\">\r\n\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"dr_brokeredDrs\"\r\n                                                   name=\"brokeredDrs\" value=\"1\" formControlName=\"brokeredDrs\">\r\n                                            <label class=\"form-check-label\" for=\"dr_brokeredDrs\">Show only Brokered DRs</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Show only TBD DRs</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"dr_tbdDrs\"\r\n                                               name=\"IsTBDRequest\" value=\"1\" formControlName=\"IsTBDRequest\">\r\n                                        <label class=\"form-check-label\" for=\"dr_tbdDrs\">Show only TBD DRs</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mb15 mt10 pb10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\">Order Type</h6>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12\">\r\n                                    <div formGroupName=\"OrderType\">\r\n                                        <div class=\"form-check form-check-inline \">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"orderType_LTL\"\r\n                                                   name=\"priority\" value=\"4\" formControlName=\"OrderTypeLTL\">\r\n                                            <label class=\"form-check-label\" for=\"orderType_LTL\">LTL</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"orderType_FTL\"\r\n                                                   name=\"priority\" value=\"1\" formControlName=\"OrderTypeFTL\">\r\n                                            <label class=\"form-check-label\" for=\"orderType_FTL\">FTL</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row border-bottom mt10\">\r\n                        <div class=\"col-12\">\r\n                            <h6 class=\"heading-title\"> Customer </h6>\r\n                            <div class=\"form-group\">\r\n                                <ng-multiselect-dropdown [formControl]=\"drFilterForm.controls['Customers']\"\r\n                                                         [placeholder]=\"'Select Customer(s)'\"\r\n                                                         [settings]=\"CustomerFilterSettings\"\r\n                                                         [data]=\"bulkCustomersForFilter\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br /> <br /> <br />\r\n                </form>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 text-right\">\r\n                        <button type=\"button\" class=\"btn btn1-default mr10\" (click)=\"clearDrFilterForm(true);\">Clear Filter</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"applyDrFilterInitiated()\">Apply</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n\r\n\r\n</div>\r\n\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingBuilder\" style=\"position:fixed !important\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div id=\"openUpdateDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#updateDeliveryRequestModal\"></div>\r\n<div id=\"updateDeliveryRequestModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Update Delivery Request</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!-- #blended Dr to update -->\r\n                    <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularDRToUpdate\">\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{blendedProducts}} Tank, Location ID: {{blendRequestsToUpdate[0]?.SiteId}}</div>\r\n                                <small class=\"mb10 fs12 opacity8\"><b>{{blendRequestsToUpdate[0]?.JobName}},</b> {{blendRequestsToUpdate[0]?.JobAddress}} </small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Total Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"blendTotalQuantity\" [(ngModel)]=\"blendTotalQuantity\" (input)=\"toggleBlendTotalQuantity()\" required>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Delivery Level PO#</span>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngFor=\"let blendUpdateRequest of blendRequestsToUpdate; index as j\" [ngModelGroup]=\"j\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div>{{blendUpdateRequest.ProductType}} - {{blendUpdateRequest.FuelType}}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"text\" numberWithDecimal class=\"form-control\" (input)=\"toggleBlendQuantity(blendUpdateRequest,false)\" name=\"RequiredQuantity\" [(ngModel)]=\"blendUpdateRequest.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                            <div class=\"input-group-addon\">\r\n                                                <span *ngIf=\"blendUpdateRequest?.UoM==1; else litres\">G</span>\r\n                                                <ng-template #litres>L</ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"number\" name=\"QuantityInPercent\" [(ngModel)]=\"blendUpdateRequest.QuantityInPercent\" #QuantityInPercent=\"ngModel\"\r\n                                                   numberWithDecimal class=\"form-control\"\r\n                                                   placeholder=\"Quantity In Percent\" (input)=\"toggleBlendQuantity(blendUpdateRequest,true)\" />\r\n                                            <div class=\"input-group-addon\">%</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- additive fuel -->\r\n                        <div *ngIf=\"blendAddRequestToUpdate\">\r\n                            <div *ngFor=\"let additiveReq of blendAddRequestToUpdate; index as k\" [ngModelGroup]=\"k\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div>{{additiveReq.ProductType}} - {{additiveReq.FuelType}}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" name=\"AdRequiredQuantity\" numberWithDecimal [(ngModel)]=\"additiveReq.RequiredQuantity\" #AdRequiredQuantity=\"ngModel\" required>\r\n                                                <div class=\"input-group-addon\">\r\n                                                    <span *ngIf=\"additiveReq?.UoM==1; else litres\">G</span>\r\n                                                    <ng-template #litres>L</ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- #blended Dr to update end-->\r\n                    <!-- #Regular Dr to update -->\r\n                    <ng-template #regularDRToUpdate>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{requestToUpdate?.ProductType}} Tank, Location ID: {{requestToUpdate?.SiteId}}</div>\r\n                                <small class=\"mb10 fs12 opacity8\"><b>{{requestToUpdate?.JobName}},</b> {{requestToUpdate?.JobAddress}} </small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                        <span>Quantity Type</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"requestToUpdate.ScheduleQuantityType\" name=\"ScheduleQuantityType\" #ScheduleQuantityType=\"ngModel\">\r\n                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                            {{sqType.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\" *ngIf=\"requestToUpdate.ScheduleQuantityType==1 || requestToUpdate.ScheduleQuantityType==0\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Required Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"RequiredQuantity\" [(ngModel)]=\"requestToUpdate.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Delivery Level PO#</span>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </ng-template>\r\n                    <!-- #Regular Dr to update end-->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Schedule Date</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Select Date\" class=\"form-control datepicker\" name=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" [(ngModel)]=\"requestToUpdate.SelectedDate\" #SelectedDate=\"ngModel\" (onDateChange)=\"requestToUpdate.SelectedDate = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">Start Time</label>\r\n                                <input type=\"text\" placeholder=\"Start Time\" name=\"ScheduleStartTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleStartTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleStartTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">End Time</label>\r\n                                <input type=\"text\" placeholder=\"End Time\" name=\"ScheduleEndTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleEndTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleEndTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div [ngClass]=\"requestToUpdate.GroupParentDRId =='' ? 'col-sm-12' : 'col-sm-12 subSectionOpacity pntr-none'\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"1\" name=\"Priority\" id=\"mustgo\">\r\n                                <label class=\"form-check-label\" for=\"mustgo\"> Must Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"2\" name=\"Priority\" id=\"shouldgo\">\r\n                                <label class=\"form-check-label\" for=\"shouldgo\">Should Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"3\" name=\"Priority\" id=\"couldgo\">\r\n                                <label class=\"form-check-label\" for=\"couldgo\">Could Go</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group mt10\">\r\n                                <textarea name=\"Notes\" [(ngModel)]=\"requestToUpdate.Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--Spilt DR Logic-->\r\n                    <ng-container *ngIf=\"requestToUpdate.GroupParentDRId!=''\">\r\n                        <div *ngFor=\"let spiltDR of requestToUpdate.SpiltDRs;let i = index;\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"ScheduleQuantityType\" class=\"mr5\">\r\n                                            <span>Quantity Type</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" [(ngModel)]=\"spiltDR.ScheduleQuantityType\" name=\"ScheduleQuantityType_{{i}}\" #ScheduleQuantityType=\"ngModel\">\r\n                                            <option *ngFor=\"let sqType of SpiltScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                {{sqType.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"spiltDR.ScheduleQuantityType==1 || spiltDR.ScheduleQuantityType==0\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"name\" class=\"mr5\">\r\n                                            <span>Required Quantity</span>\r\n                                            <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                            <ng-template #litres> (L)</ng-template>\r\n                                        </label>\r\n                                        <input type=\"text\" class=\"form-control\" name=\"SpiltRequiredQuantity_{{i}}\" [(ngModel)]=\"spiltDR.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                    <div class=\"row mt10\" *ngIf=\"requestToUpdate.GroupParentDRId!=''\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"fs18 pull-left\" (click)=\"addSpiltDR()\">\r\n                                <i class=\"fa fa-plus-circle fs18 mt4 mr5 float-left\"></i><span class=\"fs14 mt1 pull-left\">Add Sub DR</span>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right \">\r\n                        <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularUpdate\">\r\n                            <div *ngIf=\"blendTotalQuantity > 0 && !IsValidBlendQuantity()\" class=\"color-maroon mb15\">Sum of entered quantity should match with {{blendTotalQuantity}}.</div>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button [disabled]=\"!IsValidBlendQuantity()\" type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </div>\r\n                        <ng-template #regularUpdate>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </ng-template>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openDeleteDeliveryRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#deleteDeliveryRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"deleteDeliveryRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Delete Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                    <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                </div>\r\n                                <ng-template #quantity>\r\n                                    <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                    <ng-template #litres>(L)</ng-template>\r\n                                    <div>{{requestToUpdate?.IsBlendedRequest ? requestToUpdate?.TotalBlendedQuantity: requestToUpdate?.RequiredQuantity}}</div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onDeliveryReqUpdate(2)\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\">Delete</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<button type=\"button\" id=\"btnconfirm-unsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-unsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-unsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Filter Confirmation</h2>\r\n                <p class=\"pb10\">You are having unsaved changes. Do you want to save pending changes?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnno_trucks\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_trucks\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_trucks\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/tractor.png\" width=\"75\" class=\"mb10\" alt=\"Trailer Image\" />\r\n                <p class=\"pb5 text-center\">No Trailer Available!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateTrailer()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--style=\"display:block !important;\"-->\r\n<button type=\"button\" id=\"btnno_regions\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_regions\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_regions\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/ico-region.png\" width=\"75\" class=\"mb10\" alt=\"Region Image\" />\r\n                <p class=\"pb5 text-center\">No Region Available!!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateRegion()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!----region change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnconfirm-regionunsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-regionunsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-regionunsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Region change confirmation : {{this.regionName}}</h2>\r\n                <p class=\"pb10\">Your session data lost if you change the region. Do you want to still continue?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeRegionConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeRegionConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!----window change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnconfirm-windowunsavedchanges\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-windowunsavedchanges\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-windowunsavedchanges\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Window mode change confirmation</h2>\r\n                <p class=\"pb10\">Your session data lost if you change the window mode. Do you want to still continue?</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeWindowConfirmation(true)\">Yes</button>\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg\" data-dismiss=\"modal\" (click)=\"filterChangeWindowConfirmation(false)\">No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<button type=\"button\" id=\"btndriverTrailerAssignemtMsg\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#driverTrailerAssignemtMsg\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"driverTrailerAssignemtMsg\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Driver / Trailer Assignment</h2>\r\n                    <div *ngIf=\"SbForm.controls['ObjectFilter'].value==1\">\r\n                        Please assign trailers to all non empty loads to switch to trailer view.\r\n                    </div>\r\n                    <div *ngIf=\"SbForm.controls['ObjectFilter'].value==2\">\r\n                        Please assign drivers to all non empty loads to switch to driver view.\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg btn-default\" data-dismiss=\"modal\">Ok</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div><!----region change dialog confirmation\"-->\r\n<button type=\"button\" id=\"btnno_shifts\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#no_shifts\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"no_shifts\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-xs\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body text-center\">\r\n                <img src=\"src/assets/ico-region.png\" width=\"75\" class=\"mb10\" alt=\"Shift Image\" />\r\n                <p class=\"pb5 text-center\">No shifts in region !!! <br /> Do you want to add?</p>\r\n                <div class=\"text-center\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" (click)=\"RedirectToCreateRegion()\" class=\"btn btn-primary btn-rnd btn-block mb5\">Yes, Lets's Add</button>\r\n                    <a data-dismiss=\"modal\" href=\"#\">Later</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>Last Seen At</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td [ngClass]=\"{'text-center' : member.lastSeenAt==='-'}\">{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-routeListInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-routeListInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-routeListInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h4 class=\"pt0 dib\"><small class=\"fs11\">Route Name</small><br />{{RouteName}}</h4>\r\n                <h4 class=\"pt0 dib ml20\" *ngIf=\"ShiftInfo!=''\"><small class=\"fs11\">Shift Info</small><br /> {{ShiftInfo}}</h4>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th width=\"15%\">Sequence No</th>\r\n                            <th>Location Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let routeLoc of RouteLocationList\">\r\n                            <td>{{routeLoc.SequenceNo}}</td>\r\n                            <td>{{routeLoc.Name}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openAssignCarrierRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#assignCarrierRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"assignCarrierRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" [class.modal-lg]=\"SbForm.get('IsAssignDrEnabled').value\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div [formGroup]=\"AssignDrForm\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingCarriers\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mt2 mb15 pt0 pb0\">Assign Supplier/Carrier Details</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"brokerDrClose\">\r\n                            <i class=\"fa fa-close fs21\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value\" formArrayName=\"DeliveryRequestWithOrder\" class=\"row\">\r\n\r\n                        <label class=\"ml15\">Delivery Request(s)<span class=\"required pl4\" aria-required=\"true\">*</span></label>\r\n\r\n                        <div class=\"col-12\">\r\n                            <div class=\"overflow-auto carrierlist\">\r\n                                <table *ngIf=\"AssignDrForm.get('DeliveryRequestWithOrder')['controls']?.length>0;\" class=\"table table-sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>Location</th>\r\n                                            <th>Product</th>\r\n                                            <th>Order</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let drWithOrder of this.AssignDrForm.get('DeliveryRequestWithOrder')['controls']; let m = index;\" [formGroupName]=\"m\">\r\n                                            <th>{{(m+1)}}</th>\r\n                                            <td>{{drWithOrder.get('DeliveryRequest')?.value?.JobAddress}}</td>\r\n                                            <td>{{drWithOrder.get('DeliveryRequest')?.value?.ProductType}}</td>\r\n                                            <td>\r\n                                                <select class=\"form-control mb5\" formControlName=\"OrderId\">\r\n                                                    <option *ngFor=\"let order of drWithOrder.get('Orders').value\" [value]=\"order.Id\" [selected]=\"order.Id == drWithOrder.get('OrderId').value\">{{order.Name}}</option>\r\n                                                </select>\r\n\r\n                                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"drWithOrder.get('OrderId')?.errors?.required\">\r\n                                                    Required\r\n                                                </label>\r\n\r\n                                            </td>\r\n                                            <td>\r\n                                                <a class=\"float-right\">\r\n                                                    <i class=\"fa fa-trash text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeDrSelection(m, drWithOrder.get('DeliveryRequest').value?.Id)\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value\" class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <div>\r\n                                <label>Select Carriers</label>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown #multiSelect3\r\n                                                             [settings]=\"carrierDdlSetting\" [data]=\"CarrierRegions\"\r\n                                                             [formControl]=\"AssignDrForm.controls['SelectedCarrier']\"\r\n                                                             (onSelect)=\"onCarrierSelect($event, true)\"\r\n                                                             (onDeSelect)=\"onCarrierSelect($event, false)\"\r\n                                                             (onSelectAll)=\"onCarrierSelectAll($event, true)\"\r\n                                                             (onDeSelectAll)=\"onCarrierSelectAll($event, false)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"this.SbForm.get('IsAssignDrEnabled').value != true\" class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">Order</label>\r\n                                <select formControlName=\"BrokerOrderId\" class=\"form-control\">\r\n                                    <option *ngFor=\"let orderDetails of OrderList\" [value]=\"orderDetails.Id\">\r\n                                        {{orderDetails.Name}}\r\n                                    </option>\r\n                                </select>\r\n                                <label class=\"fs12\" style=\"color:red\" *ngIf=\"AssignDrForm.get('BrokerOrderId')?.errors?.required\">\r\n                                    Required\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <div>\r\n                                <label>Select Carriers/Supplier</label>\r\n                                <div class=\"form-group\">\r\n                                    <ng-multiselect-dropdown #multiSelect3\r\n                                                             [settings]=\"carrierDdlSetting\" [data]=\"RegionCarriers\"\r\n                                                             [formControl]=\"AssignDrForm.controls['SelectedCarrier']\"\r\n                                                             (onSelect)=\"onCarrierSelect($event, true)\"\r\n                                                             (onDeSelect)=\"onCarrierSelect($event, false)\"\r\n                                                             (onSelectAll)=\"onCarrierSelectAll($event, true)\"\r\n                                                             (onDeSelectAll)=\"onCarrierSelectAll($event, false)\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div formArrayName=\"Carriers\" class=\"col-sm-12\">\r\n                            <label>Carriers<span class=\"required pl4\" aria-required=\"true\">*</span></label>\r\n                            <div class=\"dragable-pane col-12 overflow-auto carrierlist\" id=\"sortableDrCarriers\">\r\n                                <div class=\"row\" *ngFor=\"let carr of AssignDrForm.get('Carriers')['controls']; let j = index;\" [formGroupName]=\"j\" id=\"{{carr.get('Id').value}}\">\r\n                                    <div class=\"col-6 list-drag carr-seq-sortable-cursor\">\r\n                                        <span class=\"float-left\">{{carr.get('Name').value}}</span>\r\n                                        <a class=\"float-right\">\r\n                                            <i class=\"fa fa-trash-alt text-danger\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Remove\" (click)=\"removeCarrier(carr.get('Id').value)\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <select class=\"custom-select\" formControlName=\"RegionId\">\r\n                                            <option disabled [ngValue]=\"\" [selected]=\"!carr.get('RegionId').value\">Select Region</option>\r\n                                            <option *ngFor=\"let rgn of getRegionsByCarrierId(carr.get('Id').value)\" [ngValue]=\"rgn.Id\" [selected]=\"rgn.Id == carr.get('RegionId').value\">\r\n                                                {{rgn.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\"></div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <label class=\"fs12\" style=\"color:red\" *ngIf=\"carr.get('RegionId')?.touched && carr.get('RegionId')?.errors?.required\">\r\n                                            Region is required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\">Dispatcher Note</label>\r\n                                <textarea formControlName=\"DispatcherNote\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n\r\n                        <button *ngIf=\"SbForm.get('IsAssignDrEnabled').value!=true\" type=\"button\"\r\n                                (click)=\"SaveAssignCarrierDetails()\"\r\n                                [disabled]=\"AssignDrForm.invalid || AssignDrForm.get('Carriers')['controls']?.length==0\"\r\n                                class=\"btn btn-primary btn-lg\">\r\n                            Submit\r\n                        </button>\r\n\r\n                        <button *ngIf=\"SbForm.get('IsAssignDrEnabled').value\" type=\"button\"\r\n                                (click)=\"saveMultipleDrCarrierSequence()\"\r\n                                [disabled]=\"AssignDrForm.invalid || AssignDrForm.get('DeliveryRequestWithOrder')['controls']?.length==0 || AssignDrForm.get('Carriers')['controls']?.length==0\"\r\n                                class=\"btn btn-primary btn-lg\">\r\n                            Submit\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- proceed brokered dr start -->\r\n<div id=\"openProceedBrokeredDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#proceedBrokeredDrModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"proceedBrokeredDrModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingCarriers\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form #proceedBrokeredDrForm=\"ngForm\" novalidate>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==2\" class=\"fs18 f-bold mt0\">Accept Brokered Delivery Request?</h2>\r\n                    <h2 *ngIf=\"this.BrokeredDrStatus==3\" class=\"fs18 f-bold mt0\">Reject Brokered Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                            <small class=\"mb10\">{{requestToUpdate?.JobName}} - {{requestToUpdate?.JobAddress}} </small>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                            <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                            </div>\r\n                            <ng-template #quantity>\r\n                                <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                <ng-template #litres>(L)</ng-template>\r\n                                <div>{{requestToUpdate?.RequiredQuantity}}</div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button *ngIf=\"this.BrokeredDrStatus==2\" type=\"button\" (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 2)\" class=\"btn btn-primary btn-lg\">Accept</button>\r\n                        <button *ngIf=\"this.BrokeredDrStatus==3\" type=\"button\" (click)=\"changeBrokeredDrStatus(requestToUpdate.Id,requestToUpdate.BlendedGroupId, 3)\" class=\"btn btn-primary btn-lg\">Reject</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- proceed brokered dr end -->\r\n<div class=\"chat-wrapper\">\r\n    <app-sendbird></app-sendbird>\r\n</div>\r\n<div id=\"route-info\" class=\"side-panel pl5 pr5\">\r\n    <app-route-info></app-route-info>\r\n</div>\r\n<div>\r\n    <app-split-delivery-request (onRaiseDR)=\"refreshDeliveryRequests(0);\"></app-split-delivery-request>\r\n</div>\r\n\r\n<a class=\" hidden pull-left\" id=\"open-CreateDelivery\" data-toggle=\"modal\" data-target=\"#TBD-Drop-location-popUp\"></a>\r\n\r\n<div class=\"modal fade\" id=\"TBD-Drop-location-popUp\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"float-right\">\r\n                    <a (click)=\"clearDropLocationControls()\" id=\"TBD-Drop-location-Close-popUp\" data-dismiss=\"modal\"><i class=\"fa fa-close\"></i></a>\r\n                </div>\r\n                <div *ngIf=\"AddDropLocationLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"row col-md-12\">\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedCustomer\"\r\n                                                 [placeholder]=\"'Select Customer (Optional)'\"\r\n                                                 [settings]=\"CustomerSettings\"\r\n                                                 [data]=\"companyList\"\r\n                                                 (onSelect)=\"onCustomerSelect($event)\"\r\n                                                 (onDeSelect)=\"onCustomerDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedSite\"\r\n                                                 [placeholder]=\"'Select location'\"\r\n                                                 [settings]=\"SiteddlSettings\"\r\n                                                 [data]=\"SiteList\"\r\n                                                 (onSelect)=\"onSiteSelect($event)\"\r\n                                                 (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row col-md-12 mt10\">\r\n                    <div class=\"col-md-6\">\r\n                        <ng-multiselect-dropdown class=\"single-select\"\r\n                                                 [(ngModel)]=\"selectedOrder\"\r\n                                                 [placeholder]=\"'Select order'\"\r\n                                                 [settings]=\"multiDropdownSettings\" [data]=\"Orders\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" (click)=\"AddDropLocation()\" class=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"load-Sequence-container\">\r\n    <ng-sidebar-container *ngIf=\"_isSequencePanelInitiated\">\r\n        <ng-sidebar [(opened)]=\"_locSequenceOpened\" [animate]=\"true\" [position]=\"'right'\" style=\"height: 100vh\">\r\n\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loader\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n\r\n            <div class=\"heading\">\r\n                <a (click)=\"_locSequenceOpened=false\"><i class=\"fa fa-close fs18 float-left mr10 mt3\"></i></a>\r\n                <h3 class=\"dib title\">Location Sequencing</h3>\r\n            </div>\r\n           <div class=\"row mb10 h-75\" *ngIf=\"_locSequenceOpened\">\r\n                <div class=\"col-sm-4 scrollable\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\" id=\"sortableLocations\">\r\n                            <div *ngFor=\"let location of TripLocations;let i = index;\" class=\"mt15\" id=\"{{location.JobId}}\">\r\n                                <div *ngIf=\"location.Latitude && location.Longitude && !location.IsTBD\">\r\n\r\n                                    <div class=\"list-drag carr-seq-sortable-cursor sortable-loc\" style=\"background-color:beige;\"\r\n                                         placement=\"bottom-left\" container=\"body\"\r\n                                         ngbTooltip=\"{{location.JobName}}-{{location.JobAddress}}, {{location.JobCity}}\">\r\n\r\n                                        {{(location.JobName.length > 12) ? (location.JobName | slice:0:12)+'..':(location.JobName)}}-&nbsp;\r\n                                        {{(location.JobAddress.length > 12) ? (location.JobAddress |slice:0:12)+'..':(location.JobAddress) }},&nbsp;\r\n                                        {{(location.JobCity.length > 12) ? (location.JobCity | slice:0:12)+'..':(location.JobCity) }}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            \r\n                </div>\r\n            \r\n                <div class=\"col-sm-8\">\r\n                    <agm-map [zoom]=\"3\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                        [fullscreenControlOptions]=\"{position:3}\" [fitBounds]=\"true\" class=\"h-100\">\r\n            \r\n                        <ng-container *ngFor=\"let tripLocation of TripLocations\">\r\n            \r\n                            <ng-container *ngIf=\"tripLocation.Latitude && tripLocation.Longitude && !tripLocation.IsTBD\">\r\n            \r\n                                <agm-marker *ngFor=\"let m of TripLocations; let i = index\" [latitude]=\"m.Latitude\"\r\n                                    [longitude]=\"m.Longitude\" [label]=\"m.Sequence\" [agmFitBounds]=\"true\">\r\n            \r\n                                    <agm-info-window [disableAutoPan]=\"true\">\r\n                                        {{m.JobName}},&nbsp;{{m.JobAddress}},&nbsp;{{m.JobCity}}\r\n                                    </agm-info-window>\r\n            \r\n                                </agm-marker>\r\n            \r\n                            </ng-container>\r\n            \r\n                        </ng-container>\r\n                    </agm-map>\r\n                </div>\r\n            \r\n            </div>\r\n            <div class=\"mt10 float-right\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"_locSequenceOpened=false\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveLocationSequence()\">Save</button>\r\n            </div>\r\n\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>\r\n<div class=\"container-fluid fs12 text-center color-lightgrey\">\r\n    <div class=\"footer-wrapper py-4 mt-3\">\r\n        <span class=\"pull-left mtm10\" id=\"dynamic-footer-text\">&copy; 2022 TrueFill, Inc.</span>\r\n        <span class=\"pull-right dib\"><img src=\"/Content/images/comodo-secure-logo.png\" border=\"0\"></span>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { CarrierService } from '../service/carrier.service';\nimport { ScheduleBuilderService } from '../service/schedule-builder.service';\nimport { DropdownItemExt, DropdownItem } from 'src/app/statelist.service';\nimport { DeliveryRequestViewModel, SbDriverViewModel, RegionDetailModel, ScheduleShiftModel, TrailerViewModel, SbFilterModel, TrailerViewFilterModel, DropAddressModel, TripModel, DriverViewFilterModel, ModifiedTripInfo, DSBSaveModel, DeliveryRequestBrokerInfoViewModel, ShiftViewModel, DelRequestsByJobModel, OrderPartialDetailModel, BrokerDrModel, JobDetailsWithOrders, CustomerJobsForCarrier, RegionDSBModel, SpiltDRsModel, JobLocationDetailsModal } from '../models/DispatchSchedulerModels';\nimport { Declarations } from 'src/app/declarations.module';\nimport { Subject, Subscription } from 'rxjs';\nimport { DeliveryGroupComponent } from '../delivery-group/delivery-group.component';\nimport { DataService } from '../service/data.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird//sendbird.component';\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\nimport { DeliveryRequestService } from 'src/app/delivery-request-display/services/DeliveryRequestService';\nimport { RouteInfoComponent } from './route-info/route-info.component';\nimport { RouteInfoService } from '../service/route-info.service';\nimport { RouteInformationModel, RouteTfxJobsList } from '../models/location';\nimport { MyLocalStorage } from 'src/app/my.localstorage';\nimport { DispatcherService } from '../service/dispatcher.service';\nimport { SplitDeliveryRequestComponent } from '../delivery-request/split-delivery-request/split-delivery-request.component';\nimport { DeliveryrequestService } from '../service/deliveryrequest.service';\nimport { DrFilterModel, DrFilterService } from './dr-filter.utility';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DropDownItem, SalesTankFilterModal, TfxModule } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport * as moment from 'moment';\nimport { Shift } from 'src/app/company-addresses/region/model/shift';\nimport { CarrierRegionModel, TfxCarrierDropdownDisplayItem, TfxCarrierRegionDetailsModel } from 'src/app/company-addresses/region/model/region';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { UtilService } from '../service/util.service';\nimport { sortArrayTwice, sortBy } from 'src/app/my.functions';\nimport { BrokeredDrCarrierStatus, DateFilter, DeliveryReqPriority, DeliveryReqStatus, DeliveryRequestTypes, DrFilterPreferencesModel, ObjectFilter, OrderType, PickupLocationType, QueueFilter, WindowModeFilter } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\ndeclare var currentUserCompanyId: number;\ndeclare var IsCarrierCompany: boolean;\ndeclare var currentUserCompanyType: number;\ndeclare var mapsApiKey: string;\ndeclare var isSupplierCompany: boolean;\ndeclare var isSupplierOrDispatcher: boolean;\ndeclare function IsUserActive(): boolean;\n\n@Component({\n    selector: 'app-schedule-builder',\n    templateUrl: './schedule-builder.component.html',\n    styleUrls: ['./schedule-builder.component.scss']\n})\nexport class ScheduleBuilderComponent implements OnInit {\n    public MinDate: Date = new Date();\n    public MaxDate: Date = new Date();\n    public _toggle_dr_panel: boolean = false;\n    public _toggle_search: boolean = false;\n    public _toggle_header: boolean = true;\n    public _loading_dr_panel: boolean = false;\n    public _isTrailerExists: boolean = false;\n    public drRequestClick: boolean = true;\n    public intervalTime: any;\n    public intervalTimeQueue: any;\n    public _mapsApiKey: string = mapsApiKey ? mapsApiKey : '';\n    public _refreshQueue: boolean = false;\n    public _mustGoRefresh: number = 0;\n    public _shouldGoRefresh: number = 0;\n    public _couldGoRefresh: number = 0;\n    public _missedRefresh: number = 0;\n    public _loadingRegions = false;\n    public _loadingRequests = false;\n    public _loadingDrRequests = false;\n    public _loadingBuilder = false;\n    public _loadingCarriers = false;\n    public _acceptRejectDr = false;\n    public _loadingRejectDR = false;\n    public _unsavedChanges: ModifiedTripInfo[] = [];\n    public _pubWindowmode: number = 1;\n    public Regions: DropdownItemExt[] = [];\n    public RegionDetail: RegionDetailModel;\n    public ScheduleBuilder: SbDriverViewModel;\n    public DriverViewShifts: ScheduleShiftModel[] = [];\n    public TripDriverInfo = [];\n    public TrailerViewTrailers: TrailerViewModel[] = [];\n    public SbFilter: SbFilterModel = new SbFilterModel();\n    public UpdateSbFilter: boolean = false;\n    public TrailerViewFilter: TrailerViewFilterModel = new TrailerViewFilterModel;\n    public DriverViewFilter: DriverViewFilterModel = new DriverViewFilterModel;\n    public SelectedRegionId: string;\n    public MaxInputDate: Date = new Date();\n    public regionName: string = '';\n    public OrderList: OrderPartialDetailModel[] = [];\n    public CarrierRegions: CarrierRegionModel[] = [];\n    public RegionCarriers: CarrierRegionModel[] = [];\n    public AssignDrForm: FormGroup;\n    public carrierDdlSetting: IDropdownSettings = {};\n    //public CustomerLabel: string = \"Carrier\";\n    public IsNoDriverShiftFound: number = 0;\n    public ScheduleBuilderFilters = {\n        ObjectFilter: ObjectFilter.Driver,\n        DateFilter: DateFilter.Tomorrow,\n        WindowMode: WindowModeFilter.Single,\n        ToggleRequestMode: QueueFilter.DRs,\n        RegionId: '',\n        Date: '',\n        DSBFilter: 2,\n    };\n\n    public allApiDeliveryRequest: DeliveryRequestViewModel[] = [];\n    //public originalDRs_OnPageRefresh: DeliveryRequestViewModel[] = [];\n    //unique products for product filter ddl\n    public loadUniqueProducts: any[] = [];\n    public deliveryRequests: DeliveryRequestViewModel[] = [];\n    public activeQueueList: DeliveryRequestViewModel[] = [];\n    public mustGoRequests: DelRequestsByJobModel[] = [];\n    public tempmustGoRequests: DelRequestsByJobModel[] = [];\n    public localmustGoRequests: DelRequestsByJobModel[] = [];\n    public shouldGoRequests: DelRequestsByJobModel[] = [];\n    public tempshouldGoRequests: DelRequestsByJobModel[] = [];\n    public localshouldGoRequests: DelRequestsByJobModel[] = [];\n    public couldGoRequests: DelRequestsByJobModel[] = [];\n    public missedRequests: DelRequestsByJobModel[] = [];\n    public tempMissedRequests: DelRequestsByJobModel[] = [];\n    public localMissedRequests: DelRequestsByJobModel[] = [];\n    public tempcouldGoRequests: DelRequestsByJobModel[] = [];\n    public localcouldGoRequests: DelRequestsByJobModel[] = [];\n    public tempDraggedRequest: DeliveryRequestViewModel[] = [];\n    public memberInfo: MemberInfo[] = [];\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n    public blendRequestsToUpdate: DeliveryRequestViewModel[] = [];\n    public blendTotalQuantity: number = 0;\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\n    public blendedProducts = \"\";\n    public requestToBroker: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\n\n    public assignedByOtherRegionRequests: DeliveryRequestViewModel[] = [];\n    public assignedByOtherOperatorRequests: DeliveryRequestViewModel[] = [];\n    public assignedToOtherRegionRequests: DeliveryRequestViewModel[] = [];\n    public assignedToOtherOperatorRequests: DeliveryRequestViewModel[] = [];\n    public SbForm: FormGroup;\n    public updateDrForm: FormGroup;\n    public DateChangeSubscription: Subscription;\n    public UnsavedChangesSubscription: Subscription;\n    public SavedChangesSubscription: Subscription;\n    public EmptyUnSavedChangesSubscription: Subscription;\n    public RegionChangeSubscription: Subscription;\n    public RestoreDeletedRequestSubscription: Subscription;\n    public DrUpdatedSubscription: Subscription;\n\n    public RemoveDroppedRequestSubscription: Subscription;\n    public DSBFilterChangeSubscription: Subscription;\n    public tempChangeRegionChange: any;\n    @ViewChild(DeliveryGroupComponent) deliveryGroupComponent: DeliveryGroupComponent;\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\n    public clickMultiRequest: boolean = false;\n    public disableControl: boolean = false;\n\n    //route information\n    public RouteName: string;\n    public ShiftInfo: string;\n    public RouteLocationList: RouteTfxJobsList[] = [];\n    //schedule quantity type\n    public ScheduleQuantityTypes: any = [];\n\n    //otto setting\n    public isDisplayOttoButton = false;\n    public MinInputDate: Date = new Date();\n    public IsOttoBuilderOpened: boolean = false;\n    public IsOttoNotificationOpened: boolean = false;\n    public OttoNotificationCount: number = 0;\n    @ViewChild(RouteInfoComponent) routeInfoComponent: RouteInfoComponent;\n    @ViewChild(SplitDeliveryRequestComponent) splitDeliveryRequestComponent: SplitDeliveryRequestComponent;\n\n    //\n    public shiftFilterSettings = {};\n    public Shifts: ShiftViewModel[] = [];\n    //dr filter \n    public drFilterForm: FormGroup;\n    public terminalsForFilter: DropDownItem[] = [];\n    public bulkPlantsForFilter: DropDownItem[] = [];\n    public bulkCustomersForFilter = [];\n    public settings: IDropdownSettings = {};\n    public drFilterModel: DrFilterModel = new DrFilterModel();\n    //private drFilterPreferences: any;\n    private filterDataFromAPI = { FormData: null, RegionId: null };\n    public IsDeliveryRequestRecieved: boolean = false;\n    private drQueueChangesSubscription: Subscription;\n\n    // filter aside\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 0;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    public _showBackdrop: boolean = true;\n    public _isInitiated: boolean = false;\n    public IsCarrierCompanyStatus: boolean = false;\n    //tpo location\n    public currentUserCompanyType: number = currentUserCompanyType ? currentUserCompanyType : 0;\n    public isSupplierCompany: boolean = isSupplierCompany;\n    public isSupplierOrDispatcher: boolean = isSupplierOrDispatcher;\n\n    public multiDropdownSettings = {};\n    public CustomerSettings = {};\n    public CustomerFilterSettings = {};\n    public SiteddlSettings = {};\n    public companyList = [];\n    public SiteList = [];\n    public AddDropLocationLoader: boolean = false;\n    public Orders = [];\n    public selectedOrder: any[] = [];\n    public selectedCustomer: any[] = [];\n    public selectedSite: any[] = [];\n    public SelectedLocationId: number;\n    public SelectedCustomerId: string;\n    public SelectedFuelId: number;\n    public CurrentDr: FormGroup;\n    public currentJobDetails: JobDetailsWithOrders;\n    public drOrders: JobDetailsWithOrders[];\n    public isGroupDelivery: boolean = false;\n    public regionDSBModel: RegionDSBModel = new RegionDSBModel();\n    //spilt schedule quantity type\n    public SpiltScheduleQuantityTypes: any = [];\n    //show blinker if DR's of todays date.\n    public isDrScheduledforToday: boolean = false;\n    constructor(private fb: FormBuilder, private carrierService: CarrierService,\n        private sbService: ScheduleBuilderService, private dataService: DataService,\n        public deliveryRequestService: DeliveryRequestService, private chatService: chatService,\n        private routeService: RouteInfoService, private cdRef: ChangeDetectorRef,\n        private dispatcherService: DispatcherService, private deliveryReqService: DeliveryrequestService,\n        private regionService: RegionService,\n        private drFilterService: DrFilterService,\n        public utilService: UtilService) {\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\n        this.MinInputDate.setDate(this.MaxInputDate.getDate() + 1);\n        this.drFilterForm = this.drFilterService.getDrFilterForm(true);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        this.initilizeAssignDrForm();\n        this.IsCarrierCompanyStatus = IsCarrierCompany;\n    }\n\n    ngOnInit() {\n        this.getDrFilterPreferences();\n        this.subscribeDrQueueChanges();\n        this.multiSelectSettings();\n        this.subscribeLoadLocationSequenceSubject();\n        this.settings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n\n        this.carrierDdlSetting = {\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n        };\n\n        //this.resetLocalStorage();\n        //this.resetTimer();\n        this.tempDraggedRequest = [];\n        this.tempChangeRegionChange = null;\n        this.clickMultiRequest = false;\n        this.SbForm = this.initForm();\n        this._loadingRegions = true;\n\n        this.updateFiltersFromLocalStorage();\n        if (this.ScheduleBuilderFilters.Date == '') {\n            this.ScheduleBuilderFilters.Date = moment().add(1, 'days').format('MM/DD/YYYY');\n        }\n        this.sbService.getRegions().subscribe(data => {\n            this._loadingRegions = false;\n            if (data != null && data != undefined) {\n                this.Regions = data;\n                if (data.length == 0) {\n                    jQuery('#btnno_regions').click();\n                }\n                if (data.length > 0) {\n                    this.refreshScheduleBuilder(this.ScheduleBuilderFilters.RegionId, this.ScheduleBuilderFilters.Date, this.ScheduleBuilderFilters.ObjectFilter, this.ScheduleBuilderFilters.DSBFilter, this.initScheduleBuilder);\n                }\n            }\n        });\n        this.SbForm.get('searchDRS').valueChanges\n            .pipe(\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                if (searchText != undefined) {\n                    this.searchRecords(searchText);\n                }\n            });\n\n        this.deliveryRequestService.localStroage.subscribe((data) => {\n            if (data != undefined) {\n                this.MoveActiveQueue(data);\n            }\n        });\n        this.chatService.driverDetails.subscribe((data) => {\n            if (data != undefined) {\n                this.IntializeChat(data);\n            }\n        });\n        this.chatService.loaderDetails.subscribe((data) => {\n            if (data != undefined) {\n                this._loadingBuilder = data;\n            }\n        });\n        this.chatService.memberInfoDetails.subscribe((data) => {\n            if (data != undefined) {\n                this.memberInfo = data as MemberInfo[];\n                this._loadingBuilder = false;\n                jQuery('#btnconfirm-memberInfo').click();\n            }\n        });\n        this.routeService.routeInfoDetails.subscribe((data) => {\n            if (data != undefined) {\n                var route = data as RouteInformationModel;\n                this.RouteName = route.Name;\n                this.ShiftInfo = route.ShiftInfoDetails;\n                this.RouteLocationList = route.TfxJobs;\n                jQuery('#btnconfirm-routeListInfo').click();\n            }\n        });\n        this.chatService.defaultdriverChatDetails.subscribe((data) => {\n            if (data != undefined) {\n                let regionId = data.regionId;\n                let driverArray = [];\n                driverArray.push(data.driverId);\n                this.IntializeSendBirdAccount(driverArray, regionId);\n            }\n        });\n        this.SbForm.get('Shifts').valueChanges\n            .pipe(\n                debounceTime(500),\n                distinctUntilChanged()\n            )\n            .subscribe(x => {\n                this.setProductsForFilterDr(x);\n            });\n        this.activeQueueIcon();\n        this.getOttoSetting();\n        this.dataService.OpenDsbOttoNotificationSubject.subscribe(x => {\n            this.IsOttoNotificationOpened = x;\n        });\n        this.dataService.DsbOttoNotificationCountSubject.subscribe(x => {\n            this.OttoNotificationCount = x;\n        });\n        this.dataService.SplitDrsInfoSubject.subscribe(x => {\n            this.splitDeliveryRequestComponent.getDeliveryRequestInfo(x);\n        });\n        this.shiftFilterSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'ShiftInfo',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n        };\n        this.makeCarrierUIsortable()\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\n    }\n\n    multiSelectSettings() {\n        this.multiDropdownSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            allowSearchFilter: true,\n            itemsShowLimit: 1\n        };\n        this.CustomerSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.CustomerFilterSettings = {\n            closeDropDownOnSelection: true,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            enableCheckAll: true,\n            allowSearchFilter: true\n        };\n        this.SiteddlSettings = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n\n        };\n    }\n\n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n    public _toggleClosed(): void {\n        this._opened = false;\n    }\n\n    public hideHeader() {\n        this._toggle_header = !this._toggle_header;\n    }\n\n    public toggleDrPanel() {\n        this._toggle_dr_panel = !this._toggle_dr_panel;\n    }\n\n    public toggleSearch() {\n\n        this._toggle_search ? this.SbForm.get('searchDRS').setValue('') : null;\n        this._toggle_search = !this._toggle_search;\n    }\n    clearDrFilterForm(flag: boolean) {\n        this.drFilterForm = this.drFilterService.getDrFilterForm();\n        this.drFilterForm.get('IsFilterApplied').setValue(flag);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n    }\n    openDrFilterForm() {\n        this._isInitiated = true;\n        this._toggleOpened(false);\n        //close serach if open\n        this._toggle_search ? this.toggleSearch() : null;\n\n        this.validateFilterLocations();\n        this.getCompaniesByRegion();\n    }\n    validateFilterLocations() {\n        //get unique locations from dr\n        let locations = this.drFilterService.getLocationsFromDr(this.allApiDeliveryRequest);\n        this.terminalsForFilter = locations.terminals || [];\n        this.bulkPlantsForFilter = locations.bulkPlants || [];\n        this.bulkCustomersForFilter = locations.customerCompanies || [];\n        //remove\n        let selectedTerminals = this.drFilterForm.get('Terminals').value as DropDownItem[];\n        let selectedBulkPlants = this.drFilterForm.get('BulkPlants').value as DropDownItem[];\n        let selectedCustomers = this.drFilterForm.get('Customers').value as any[];\n\n        if (selectedTerminals.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedTerminals.some(selected => this.terminalsForFilter.some(term => term.Id == selected.Id))) {\n                this.drFilterForm.get('Terminals').patchValue([]);\n            }\n        }\n        if (selectedBulkPlants.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedBulkPlants.some(selected => this.bulkPlantsForFilter.some(bulk => bulk.Id == selected.Id))) {\n                this.drFilterForm.get('BulkPlants').patchValue([]);\n            }\n        }\n\n        //filter customers from drs\n        if (selectedCustomers.length && this.IsDeliveryRequestRecieved && (this.SbForm.get('RegionId').value != this.filterDataFromAPI.RegionId)) {\n            if (!selectedCustomers.some(selected => this.bulkCustomersForFilter.some(bulk => bulk.Id == selected.CompanyId))) {\n                this.drFilterForm.get('Customers').patchValue([]);\n            }\n        }\n    }\n\n    //Get Customers by Region\n    getCompaniesByRegion() {\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\n            this.carrierService.getJobListForCarrier(this.SelectedRegionId).subscribe(t2 => {\n                this.bulkCustomersForFilter = t2 as CustomerJobsForCarrier[];\n            });\n        }\n        else {\n            Declarations.msgerror('No order exists for this Customers ', 'error', 2500)\n        }\n    }\n    setLastDrFilterForm() {\n        //if filter panel closed\n        if (this.drFilterModel.Priority.length == 0 && this.drFilterForm.get('IsFilterApplied').value) {\n            this.drFilterForm.get('Priority').get('MustGo').setValue(true);\n            this.drFilterForm.get('IsFilterApplied').setValue(true);\n            this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        }\n        else {\n            this.drFilterForm = this.drFilterService.drFilterFormFromModel(this.drFilterModel);\n        }\n    }\n    applyDrFilterInitiated() {\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        if (this.drFilterModel.Priority.length == 0) {\n            Declarations.msgerror(\"Please select at least one priority.\", null, null, \"bottom-right\");\n            return;\n        }\n        //close panel\n        this._toggleClosed();\n        //apply filter to dr\n        this.applyDrFilter();\n        //api call to save user preferences\n        this.saveDrFilterPreferences();\n    }\n    applyDrFilter() {\n        this.validateFilterLocations();\n        this.drFilterForm.get('IsFilterApplied').setValue(true);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n        var toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            this.filterRequests(toggleRequestMode, this._pubWindowmode);\n        }\n        else {\n            this.filterMultiWindowRequests();\n        }\n    }\n\n    clearDrFiltersAndSearches() {\n        let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1)\n            this.assignTempRequest(toggleRequestMode, this._pubWindowmode);\n        else\n            this.assignMultiWindowRequest();\n        //this.assignAssignedTabDrs();\n    }\n    saveDrFilterPreferences(): void {\n        let data = new DrFilterPreferencesModel();\n        data.Date = new Date();\n        data.RegionId = this.SbForm.get('RegionId').value;\n        data.FilterData = JSON.stringify(this.drFilterForm.value);\n        this.filterDataFromAPI.FormData = this.drFilterForm.value;\n        this.filterDataFromAPI.RegionId = this.SbForm.get('RegionId').value;\n        this.drFilterService.saveDrFilterPreferences(data).subscribe();\n    }\n\n    getDrFilterPreferences(): void {\n        this.drFilterService.getDrFilterPreferences().subscribe((setting: DrFilterPreferencesModel) => {\n            if (setting && setting.StatusCode == 0 && setting.FilterData && this.drFilterService.validateFilterForm(JSON.parse(setting.FilterData))) {\n                this.filterDataFromAPI.RegionId = setting.RegionId;\n                this.filterDataFromAPI.FormData = JSON.parse(setting.FilterData);\n                this.drFilterForm.patchValue(this.filterDataFromAPI.FormData);\n                this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n            }\n        });\n    }\n    searchRecords(terms: string) {\n        if (terms == undefined || terms == null) { terms = ''; }\n        terms = terms.toLowerCase().trim();\n        let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            if (terms == '') {\n                this.assignTempRequest(toggleRequestMode, this._pubWindowmode);\n                //this.assignAssignedTabDrs();\n            }\n            else {\n                this.searchRequests(terms, toggleRequestMode, this._pubWindowmode);\n                //this.searchAssignedTabDr(terms);\n            }\n        }\n        else {\n            if (terms == '') {\n                this.assignMultiWindowRequest();\n                //this.assignAssignedTabDrs();\n            }\n            else {\n                this.searchMultiWindowRequests(terms, toggleRequestMode, this._pubWindowmode);\n                //this.searchAssignedTabDr(terms);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.resetTimer();\n        if (this.drQueueChangesSubscription) {\n            this.drQueueChangesSubscription.unsubscribe();\n        }\n\n        if (this.locationsequenceSubscription) {\n            this.locationsequenceSubscription.unsubscribe();\n        }\n    }\n\n    assignTempRequest(queueMode: number, windowMode: number) {\n        if (this.tempDraggedRequest.length > 0) {\n            this.deliveryRequests = this.deliveryRequests.filter(({ Id: id1 }) => !this.tempDraggedRequest.some(({ Id: id2 }) => id2 === id1));\n            this.deliveryRequests.slice();//update delivery request by removing draggred dr.\n        }\n        var priorityRequests = this.deliveryRequests.filter(element => element.WindowMode == windowMode && element.QueueMode === queueMode && element.ParentId == null);\n        var missedRequests = this.deliveryRequests.filter(element => element.WindowMode == windowMode && element.QueueMode === queueMode && element.ParentId != null);\n        this.getRequestsByPriority(priorityRequests, missedRequests);\n    }\n\n    assignMultiWindowRequest() {\n        this.getLocalStorageQueueData();\n    }\n\n    resetTimer() {\n        if (this.intervalTime) {\n            clearInterval(this.intervalTime);\n        }\n    }\n\n    resetLocalStorage() {\n        localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify([]));\n        localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify([]));\n        this.localmustGoRequests = [];\n        this.localshouldGoRequests = [];\n        this.localcouldGoRequests = [];\n        this.localMissedRequests = [];\n        //this.tempDraggedRequest = [];\n        localStorage.setItem(\"updateRequest\", JSON.stringify(false));\n        localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n        localStorage.setItem(\"recordPriorityChange\", JSON.stringify([]));\n        this._refreshQueue = false;\n    }\n\n    initForm(): FormGroup {\n        let date = this.getDayAfterTomorrowsDate();\n        let _form = this.fb.group({\n            Id: this.fb.control(''),\n            Date: this.fb.control(date),\n            RegionId: this.fb.control(''),\n            ObjectFilter: this.fb.control(''),\n            WindowMode: this.fb.control(''),\n            ToggleRequestMode: this.fb.control(''),\n            searchDRS: this.fb.control(''),\n            selectedProduct: this.fb.control('-1'),\n            RegionFilter: this.fb.control(''),\n            DateFilter: this.fb.control(''),\n            TimeStamp: this.fb.control(''),\n            Status: this.fb.control(0),\n            DeletedTripId: this.fb.control(null),\n            DeletedGroupId: this.fb.control(null),\n            Shifts: this.fb.array([]),\n            Trailers: this.fb.array([]),\n            DSBFilter: this.fb.control(2),\n            SelectedShifts: this.fb.control([]),\n            IsDsbDriverSchedule: this.fb.control(null),\n            IsAssignDrEnabled: this.fb.control(null),\n        });\n        return _form;\n    }\n    subscribeEventSubscription(): void {\n        this.subscribeDateChange();\n        this.subscribeRegionChange();\n        this.subscribeUnsavedChangesSubject();\n        this.subscribeSavedChangesSubject();\n        this.subscribeEmptyUnsavedChangesSubject();\n        this.subscribeRestoreDeletedRequestSubject();\n        this.subscribeDrUpdatedSubject();\n        this.subscribeRemoveDroppedRequestSubject();\n        this.subscribeDSBFilterChange();\n    }\n\n    unsubscribeEventSubscription(): void {\n        if (this.DateChangeSubscription) {\n            this.DateChangeSubscription.unsubscribe();\n        }\n        if (this.UnsavedChangesSubscription) {\n            this.UnsavedChangesSubscription.unsubscribe();\n        }\n        if (this.SavedChangesSubscription) {\n            this.SavedChangesSubscription.unsubscribe();\n        }\n        if (this.EmptyUnSavedChangesSubscription) {\n            this.EmptyUnSavedChangesSubscription.unsubscribe();\n        }\n        if (this.RegionChangeSubscription) {\n            this.RegionChangeSubscription.unsubscribe();\n        }\n        if (this.RestoreDeletedRequestSubscription) {\n            this.RestoreDeletedRequestSubscription.unsubscribe();\n        }\n        if (this.DrUpdatedSubscription) {\n            this.DrUpdatedSubscription.unsubscribe();\n        }\n        if (this.RemoveDroppedRequestSubscription) {\n            this.RemoveDroppedRequestSubscription.unsubscribe();\n        }\n        if (this.DSBFilterChangeSubscription) {\n            this.DSBFilterChangeSubscription.unsubscribe();\n        }\n    }\n\n    subscribeDateChange(): void {\n        this.DateChangeSubscription = this.SbForm.get('Date').valueChanges.subscribe(x => {\n            if (x != null && x != undefined && x.trim() != '') {\n                let regionId = this.SbForm.get('RegionId').value;\n                let sbViewId = this.SbForm.get('ObjectFilter').value;\n                let selectedDate = moment(x).format('MM/DD/YYYY');\n                let sbDsbView = this.SbForm.get('DSBFilter').value;\n                MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, selectedDate);\n                this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n                this.dataService.setDisableDSBControls(this.disableControl);\n            }\n        });\n    }\n    subscribeDSBFilterChange(): void {\n        this.DSBFilterChangeSubscription = this.SbForm.get('DSBFilter').valueChanges.subscribe(x => {\n            if (x != null && x != undefined) {\n                let regionId = this.SbForm.get('RegionId').value;\n                let sbViewId = this.SbForm.get('ObjectFilter').value;\n                let selectedDate = this.SbForm.get('Date').value;\n                let sbDsbView = this.SbForm.get('DSBFilter').value;\n                this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n            }\n        });\n    }\n\n    subscribeUnsavedChangesSubject(): void {\n        this.UnsavedChangesSubscription = this.dataService.UnsavedChangesSubject.subscribe(x => {\n            if (x) {\n                var existingObjectIndex = this._unsavedChanges.findIndex(t => t.ShiftIndex == x.ShiftIndex && t.DriverRowIndex == x.DriverRowIndex && t.DriverColIndex == x.DriverColIndex);\n                if (existingObjectIndex == -1 && x.ShiftIndex != null && x.DriverRowIndex != null && x.DriverColIndex != null) {\n                    let unSavedTrip: ModifiedTripInfo = new ModifiedTripInfo();\n                    unSavedTrip.ShiftIndex = x.ShiftIndex;\n                    unSavedTrip.DriverRowIndex = x.DriverRowIndex;\n                    unSavedTrip.DriverColIndex = x.DriverColIndex;\n                    this._unsavedChanges.push(unSavedTrip);\n                }\n            }\n        });\n    }\n\n    subscribeSavedChangesSubject(): void {\n        this.SavedChangesSubscription = this.dataService.SavedChangesSubject.subscribe(x => {\n            if (x) {\n                var existingObjectIndex = this._unsavedChanges.findIndex(t => t.ShiftIndex == x.ShiftIndex && t.DriverRowIndex == x.DriverRowIndex && t.DriverColIndex == x.DriverColIndex);\n                if (existingObjectIndex > -1) {\n                    this._unsavedChanges.splice(existingObjectIndex, 1);\n                }\n            };\n        });\n    }\n\n    subscribeEmptyUnsavedChangesSubject(): void {\n        this.EmptyUnSavedChangesSubscription = this.dataService.EmptyUnsavedChangesSubject.subscribe(x => {\n            this._unsavedChanges = [];\n        });\n    }\n\n    subscribeRegionChange(): void {\n        this.RegionChangeSubscription = this.SbForm.get('RegionId').valueChanges.subscribe(x => {\n            if (this.SbForm.get('WindowMode').value == 2 && this.clickMultiRequest == true) {\n                var elementFound = this.Regions.find(element => element.Id === x);\n                if (elementFound) {\n                    this.regionName = elementFound.Name;\n                }\n                this.tempChangeRegionChange = x;\n                jQuery('#btnconfirm-regionunsavedchanges').click();\n            }\n            else {\n                this.onRegionChange(x);\n                this.dataService.setShowDeliveryGroupSubject(false);\n                MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, x);\n            }\n        });\n    }\n\n    subscribeDrUpdatedSubject(): void {\n        this.DrUpdatedSubscription = this.dataService.DrUpdatedSubject.subscribe(x => {\n            if (x) {\n                let updatedDrs: DeliveryRequestViewModel[] = x;\n                updatedDrs.forEach(\n                    t => {\n                        var dr = this.deliveryRequests.find(t1 => t1.Id == t.Id);\n                        if (dr) {\n                            dr.RequiredQuantity = t.RequiredQuantity;\n                        }\n                    }\n                )\n            }\n        })\n    }\n\n    subscribeRestoreDeletedRequestSubject(): void {\n        this.RestoreDeletedRequestSubscription = this.dataService.RestoreDeletedRequestSubject.subscribe(x => {\n            if (x) {\n                let newDrs: DeliveryRequestViewModel[] = x;\n                newDrs.forEach(t => {\n                    t.StatusClassId = 0;\n                    t.Status = 2;\n                    t.PreviousStatus = 0;\n                    t.ScheduleStatus = 0;\n                    t.SchedulePreviousStatus = 0;\n                    t.DeliveryScheduleId = null;\n                    t.DeliveryGroupId = null;\n                    t.TrackableScheduleId = null;\n                    t.GroupParentDRId = t.GroupParentDRId == null ? '' : t.GroupParentDRId;\n                    t.TrackScheduleStatusName = '';\n                });\n                this.restoreDeleteDRs(newDrs);\n                this.allApiDeliveryRequest = this.allApiDeliveryRequest.concat(newDrs);\n                this.dataService.setAllDeliveryRequestsSubject(this.allApiDeliveryRequest);\n            }\n        });\n    }\n\n    subscribeRemoveDroppedRequestSubject(): void {\n        this.RemoveDroppedRequestSubscription = this.dataService.RemoveDroppedRequestSubject.subscribe(x => {\n            if (x) { // x will be array of objects\n                for (var index = 0; index < x.length; index++) {\n                    let dr = x[index];\n                    var drIndex = this.tempDraggedRequest.findIndex(data => data.Id == dr.Id);\n                    if (drIndex == -1) {\n                        this.tempDraggedRequest.push(dr);\n                    }\n                    this.allApiDeliveryRequest = this.allApiDeliveryRequest.filter(t => t.Id != dr.Id);\n                }\n                //this.removeRequestFromLeftPanel(x);\n                this.dataService.setAllDeliveryRequestsSubject(this.allApiDeliveryRequest);\n            }\n        });\n    }\n\n    isTrailerAssignedToDriverView(): boolean {\n        let _assigned = true;\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            let _schedules = x.get('Schedules') as FormArray;\n            _schedules.controls.forEach(y => {\n                let _trips = y.get('Trips') as FormArray;\n                let _trailers = y.get('Trailers').value;\n                _trips.controls.forEach(z => {\n                    if (_trailers.length == 0 && z.get('DeliveryRequests').value.length > 0) {\n                        _assigned = false;\n                    }\n                });\n            });\n        });\n        return _assigned;\n    }\n\n    isDriverAssignedToTrailerView(): boolean {\n        let _assigned = true;\n        let _trailers = this.SbForm.get('Trailers') as FormArray;\n        _trailers.controls.forEach(x => {\n            let _shifts = x.get('Shifts') as FormArray;\n            _shifts.controls.forEach(y => {\n                let _trips = y.get('Trips') as FormArray;\n                _trips.controls.forEach(z => {\n                    if (z.get('Drivers').value.length == 0 && z.get('DeliveryRequests').value.length > 0) {\n                        _assigned = false;\n                    }\n                });\n            });\n        });\n        return _assigned;\n    }\n\n    isDriverTrailerAssigned(filter: ObjectFilter): boolean {\n        let _driverTrailerAssigned = false;\n        if (filter == ObjectFilter.Driver) {\n            _driverTrailerAssigned = this.isDriverAssignedToTrailerView();\n        } else {\n            _driverTrailerAssigned = this.isTrailerAssignedToDriverView();\n        }\n        return _driverTrailerAssigned;\n    }\n\n    onObjectFilterChange(filter: ObjectFilter): void {\n        this.resetSbFilter();\n        if (this.disableControl === false) {\n            let _driverTrailedAssigned = this.isDriverTrailerAssigned(filter);\n            if (!_driverTrailedAssigned) {\n                jQuery('#btndriverTrailerAssignemtMsg').click();\n                return;\n            }\n        }\n        this.ScheduleBuilderFilters.ObjectFilter = filter;\n        if (this._unsavedChanges.length > 0) {\n            jQuery('#btnconfirm-unsavedchanges').click();\n        } else {\n            this.setObjectFilter(this.ScheduleBuilderFilters.ObjectFilter);\n            let regionId = this.SbForm.get('RegionId').value;\n            let sbViewId = this.SbForm.get('ObjectFilter').value;\n            let date = this.SbForm.get('Date').value;\n            let selectedDate = moment(date).format('MM/DD/YYYY');\n            let sbDsbView = this.SbForm.get('DSBFilter').value;\n            MyLocalStorage.setData(MyLocalStorage.DSB_OBJECTFILTER_KEY, filter);\n            this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n        }\n    }\n\n    onWindowFilterChange(filter: WindowModeFilter): void {\n        this._refreshQueue = false;\n        var previousWindowMode = this.ScheduleBuilderFilters.WindowMode;\n        this.ScheduleBuilderFilters.WindowMode = filter;\n        this._pubWindowmode = filter;\n        this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n        if (filter == 2) {\n            this.updateLocalStorageActiveQueue();\n            this.onQueueFilterChange(2);\n            localStorage.setItem(\"refreshLocalStorage\", 'true');\n            this.activeTimer();\n        }\n        if (filter == 1 && previousWindowMode == 2 && this.clickMultiRequest == true) {\n            //update local storage data.\n            this.refreshSingleWindow();\n        }\n        MyLocalStorage.setData(MyLocalStorage.DSB_WINDOWMODE_KEY, filter);\n    }\n    updateLocalStorageActiveQueue() {\n        var mustShouldCouldgoRecords = this.deliveryRequests.filter(top => top.ParentId == null && top.WindowMode === 1 && top.QueueMode === 2);\n        if (mustShouldCouldgoRecords.length > 0) {\n            mustShouldCouldgoRecords.forEach(function (value, index) {\n                mustShouldCouldgoRecords[index].WindowMode = 2;\n                mustShouldCouldgoRecords[index].QueueMode = 2;\n            });\n            var groupedDrs = this.deliveryReqService.groupDrsByJob(mustShouldCouldgoRecords);\n            var mustGoRecords = this.deliveryReqService.getMustGoRequests(groupedDrs);\n            if (mustGoRecords && mustGoRecords.length > 0)\n                localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(mustGoRecords));\n            var shouldGoRecords = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n            if (shouldGoRecords && shouldGoRecords.length > 0)\n                localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(shouldGoRecords));\n            var couldGoRecords = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n            if (couldGoRecords && couldGoRecords.length > 0)\n                localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(couldGoRecords));\n        }\n\n        var missedRecords = this.deliveryRequests.filter(top => top.ParentId != null && top.WindowMode === 1 && top.QueueMode === 2);\n        if (missedRecords.length > 0) {\n            missedRecords.forEach(function (value, index) {\n                missedRecords[index].WindowMode = 2;\n                missedRecords[index].QueueMode = 2;\n            });\n            var missedReqLocations = this.deliveryReqService.groupDrsByJob(missedRecords, DeliveryRequestTypes.Missed);\n            if (missedReqLocations && missedReqLocations.length > 0)\n                localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(missedReqLocations));\n        }\n    }\n    onQueueFilterChange(filter: QueueFilter): void {\n        this._loading_dr_panel = true;\n        this.ScheduleBuilderFilters.ToggleRequestMode = filter;\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        if (filter == 1) {\n            this.deliveryRequestService.ToggleQueueIcon(true);\n            this._loading_dr_panel = false;\n        } else {\n            this.deliveryRequestService.ToggleQueueIcon(false);\n            this._loading_dr_panel = false;\n        }\n        if (filter == 2 && this._pubWindowmode == 1) {\n            this._refreshQueue = false;\n            this._loading_dr_panel = false;\n        }\n        this.updateRecordsToggleRequest(filter);\n        //this.SbForm.get('searchDRS').setValue('');\n        this.clearDrFiltersAndSearches();\n        MyLocalStorage.setData(MyLocalStorage.DSB_TOGGLEREQUESTMODE_KEY, filter);\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    onDateFilterChange(filter: DateFilter): void {\n        this.resetSbFilter();\n        this.ScheduleBuilderFilters.DateFilter = filter;\n        if (this._unsavedChanges.length > 0) {\n            jQuery('#btnconfirm-unsavedchanges').click();\n        } else {\n            this.setFilterDate(this.ScheduleBuilderFilters.DateFilter);\n            if (filter == DateFilter.Date) {\n                jQuery('#dateInput').focus();\n            }\n            MyLocalStorage.setData(MyLocalStorage.DSB_DATEFILTER_KEY, filter);\n        }\n    }\n\n    filterChangeConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            return this.dataService.setSaveModifiedLoadsSubject(this._unsavedChanges);\n        }\n        else {\n            this._unsavedChanges = [];\n            //jQuery('#dateInput').click();\n            //jQuery('#dateInput').focus();\n        }\n        this.dataService.setShowDeliveryGroupSubject(false);\n        this.setObjectFilter(this.ScheduleBuilderFilters.ObjectFilter);\n        this.setFilterDate(this.ScheduleBuilderFilters.DateFilter);\n        this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        MyLocalStorage.setData(MyLocalStorage.DSB_OBJECTFILTER_KEY, this.ScheduleBuilderFilters.ObjectFilter);\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATEFILTER_KEY, this.ScheduleBuilderFilters.DateFilter);\n        MyLocalStorage.setData(MyLocalStorage.DSB_WINDOWMODE_KEY, this.ScheduleBuilderFilters.WindowMode);\n    }\n\n    filterChangeRegionConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            this.onRegionChange(this.tempChangeRegionChange);\n            this.dataService.setShowDeliveryGroupSubject(false);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n            MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.tempChangeRegionChange);\n        }\n        else {\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n            var tempRegionId = JSON.parse(localStorage.getItem(\"regionId\"));\n            if (tempRegionId != '') {\n                this.SbForm.get('RegionId').setValue(tempRegionId);\n                MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, tempRegionId);\n            }\n        }\n    }\n    filterChangeWindowConfirmation(saveChanges: boolean): void {\n        if (saveChanges) {\n            let regionId = this.SbForm.get('RegionId').value;\n            let todaysDate = moment().add(1, 'days').format('MM/DD/YYYY');\n            let sbViewId = this.SbForm.get('ObjectFilter').value;\n            let sbDsbView = this.SbForm.get('DSBFilter').value;\n            this.refreshScheduleBuilder(regionId, todaysDate, sbViewId, sbDsbView, this.initScheduleBuilder);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n        }\n        else {\n            this.ScheduleBuilderFilters.WindowMode = 2;\n            this._pubWindowmode = 2;\n            this.setWindowFilter(this.ScheduleBuilderFilters.WindowMode);\n            localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\n        }\n    }\n    setFilterDate(filter: DateFilter): void {\n        this.SbForm.get('DateFilter').setValue(filter);\n        if (filter == DateFilter.Today) {\n            this.SbForm.get('Date').setValue(this.getTodaysDate());\n        } else if (filter == DateFilter.Tomorrow) {\n            this.SbForm.get('Date').setValue(this.getTomorrowsDate());\n        } else if (filter == DateFilter.YesterDay) {\n            this.SbForm.get('Date').setValue(this.getYesterDayDate());\n        }\n        this.setReadOnlyControlsValue();\n    }\n\n    setObjectFilter(filter: ObjectFilter): void {\n        let _objectFilter = this.SbForm.get('ObjectFilter');\n        if (_objectFilter.value != filter) {\n            _objectFilter.setValue(filter);\n        }\n    }\n\n    setWindowFilter(filter: WindowModeFilter): void {\n        let _windowFilter = this.SbForm.get('WindowMode');\n        if (_windowFilter.value != filter) {\n            _windowFilter.setValue(filter);\n        }\n    }\n\n    setQueueFilter(filter: QueueFilter): void {\n        let _queueFilter = this.SbForm.get('ToggleRequestMode');\n        if (_queueFilter.value != filter) {\n            _queueFilter.setValue(filter);\n        }\n    }\n\n    getTodaysDate(): string {\n        this.disableControl = false;\n        return moment().format('MM/DD/YYYY');\n    }\n\n    getTomorrowsDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() + 1);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n    getYesterDayDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() - 1);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n    getDayAfterTomorrowsDate(): string {\n        var current = new Date();\n        current.setDate(current.getDate() + 2);\n        this.disableControl = false;\n        return moment(current).format('MM/DD/YYYY');\n    }\n\n    setSelectedDate(date: string) {\n        if (date != null && date != undefined && date.trim() != '') {\n            var _date = this.SbForm.controls['Date'];\n            if (_date.value != date) {\n                _date.setValue(date);\n            }\n            let status = this.disableControls(date);\n            this.setReadOnlyControlsValue();\n            this.dataService.setDisableDSBControls(status);\n        }\n    }\n    disableControls(date: any): boolean {\n        var currentDate = moment(date, \"MM/DD/YYYY\");\n        let status = false;\n        if (moment().diff(currentDate, 'days') > 1) {\n            status = true;\n        }\n        this.disableControl = status;\n        return status;\n    }\n    onRegionChange(regionId: any): void {\n        //var regionId = event.target.selectedOptions[0].value;\n        this.IsDeliveryRequestRecieved = false;\n        this.resetSbFilter();\n        let selectedDate = moment(this.SbForm.get('Date').value).format('MM/DD/YYYY');\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        let sbDsbView = this.SbForm.get('DSBFilter').value;\n        this.refreshScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, null);\n        if (regionId != null) {\n            this.getRegiondetail(regionId);\n        }\n        this.resetTimer();\n        this.resetLocalStorage();\n    }\n\n    private dateFormat = new RegExp(\"^((0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](20)?[0-9]{4})*$\");\n    refreshScheduleBuilder(regionId: string, selectedDate: string, sbViewId: number, sbDsbView: number, callback: any): void {\n        if (this.dateFormat.test(selectedDate)) {\n            this.getScheduleBuilder(regionId, selectedDate, sbViewId, sbDsbView, callback);\n        }\n    }\n\n    getRegiondetail(regionId: string): void {\n        this.SelectedRegionId = regionId;\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        this.sbService.getRegionDetails(regionId)\n            .subscribe(detail => {\n                this.RegionDetail = detail;\n                if (detail && detail.Trailers && detail.Trailers.length == 0) {\n                    this._isTrailerExists = false;\n                }\n                else {\n                    this._isTrailerExists = true;\n                }\n                this.setSbFilter();\n            });\n        this.getOttoNotificationCount();\n    }\n\n    initScheduleBuilder(self: any, sbModel): void {\n        self.SbForm.patchValue({\n            Id: sbModel.Id,\n            Date: sbModel.Date,\n            RegionId: sbModel.RegionId,\n            ObjectFilter: sbModel.ObjectFilter,\n            RegionFilter: sbModel.RegionFilter,\n        });\n        var _dateFilter = self.SbForm.get('DateFilter');\n        if (_dateFilter.value == null || _dateFilter.value == undefined || _dateFilter.value == '') {\n            _dateFilter.setValue(sbModel.DateFilter);\n        }\n        if (sbModel.RegionId != null)\n            self.getRegiondetail(sbModel.RegionId);\n    }\n\n    //get unique products for dr filter\n    setProductsForFilterDr(formDr: ScheduleShiftModel[]) {\n        this._loadingBuilder = true;\n        this.SbForm.get('selectedProduct').setValue('-1');\n        this.loadUniqueProducts = []\n        let sbDr = this.ScheduleBuilder.Shifts;\n        let finalDr: ScheduleShiftModel[] = [];\n\n        if (formDr && formDr.length) { finalDr.push(...formDr); }\n        if (sbDr && sbDr.length) { finalDr.push(...sbDr); }\n\n        if (finalDr && finalDr.length) {\n            finalDr.forEach(shft => {\n                if (shft && shft.Schedules) {\n                    shft.Schedules.forEach(schdl => {\n                        if (schdl && schdl.Trips) {\n                            schdl.Trips.forEach(trp => {\n                                if (trp && trp.DeliveryRequests) {\n                                    trp.DeliveryRequests.forEach(dlReq => {\n                                        if (dlReq && dlReq.ProductType) {\n                                            if (this.loadUniqueProducts.indexOf(dlReq.ProductType) === -1) {\n                                                this.loadUniqueProducts.push(dlReq.ProductType);\n                                            }\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        this.cdRef.detectChanges();\n        if (this.drFilterForm.get('IsFilterApplied').value != true) {\n            this.clearDrFiltersAndSearches();\n        }\n        else {\n            this.applyDrFilter();\n        }\n        this._loadingBuilder = false;\n    }\n\n    private getDateFilter(date: string): number {\n        var today = this.getTodaysDate();\n        var tomorrow = this.getTomorrowsDate();\n        var yesterday = this.getYesterDayDate();\n        let dateFilter = 3;\n        if (date == today)\n            dateFilter = 1;\n        else if (date == tomorrow)\n            dateFilter = 2;\n        else if (date == yesterday)\n            dateFilter = 4;\n        return dateFilter;\n    }\n\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number, callback: any): void {\n        //if region id null or dropdown of region id empty then set first region id value and fetch the schedule builder.\n        if (this.Regions.length > 0 && this.Regions.findIndex(x => x.Id == regionId) == -1) {\n            this.SbForm.controls['RegionId'].setValue(this.Regions[0].Id);\r\n            regionId = this.Regions[0].Id;\r\n        }\n        this._loadingBuilder = true;\n        this._unsavedChanges = [];\n        this.activeQueueList = [];\n        this.tempDraggedRequest = [];\n        this.tempmustGoRequests = [];\n        this.tempshouldGoRequests = [];\n        this.tempcouldGoRequests = [];\n        this.tempMissedRequests = [];\n        this.unsubscribeEventSubscription();\n        this.dataService.FormChangeSubscription && this.dataService.FormChangeSubscription.forEach(t => {\n            if (t) {\n                t.unsubscribe();\n            }\n        });\n        this.sbService.getScheduleBuilder(regionId, date, sbViewId, sbDsbView)\n            .subscribe(data => {\n                //this.resetLocalStorage();\n                //this.resetTimer();\n                data.DateFilter = this.getDateFilter(data.Date);\n                this._loadingBuilder = false;\n                //call get delivery requests method only for current and yesterday date.\n                this.disableControls(data.Date);\n                if (this.disableControl == false) {\n                    this.getDeliveryRequests(data.RegionId, sbViewId, null, date);\n                }\n                this.ScheduleBuilder = data;\n                if (this.ScheduleBuilder.ObjectFilter == 2) {\n                    this.dataService.setTrailerShiftsSubject(this.ScheduleBuilder.Shifts);\n                }\n                this.DriverViewShifts = this.ScheduleBuilder.Shifts;\n                this.TrailerViewTrailers = this.ScheduleBuilder.Trailers;\n                this.SbForm.controls['Id'].patchValue(data.Id);\n                this.SbForm.controls['TimeStamp'].patchValue(data.TimeStamp);\n                this.SbForm.controls['IsDsbDriverSchedule'].patchValue(data.IsDsbDriverSchedule);\n                if (data.WindowMode == 0) {\n                    data.WindowMode = 1;\n                }\n                let _windowMode = MyLocalStorage.getData(MyLocalStorage.DSB_WINDOWMODE_KEY);\n                if (_windowMode != '') { data.WindowMode = _windowMode; }\n                this.SbForm.controls['WindowMode'].patchValue(data.WindowMode);\n                let _toggleReqMode = MyLocalStorage.getData(MyLocalStorage.DSB_TOGGLEREQUESTMODE_KEY);\n                if (_toggleReqMode != '') { data.ToggleRequestMode = _toggleReqMode; }\n                if (data.DSBFilter != 0) {\n                    MyLocalStorage.setData(MyLocalStorage.DSB_FILTER_KEY, data.DSBFilter);\n                }\n                let _dsbFilterKey = MyLocalStorage.getData(MyLocalStorage.DSB_FILTER_KEY);\n                if (_dsbFilterKey != '') { data.DSBFilter = _dsbFilterKey; }\n                this.SbForm.controls['ToggleRequestMode'].patchValue(data.ToggleRequestMode);\n                this.SbForm.controls['DateFilter'].patchValue(data.DateFilter);\n                this.SbForm.controls['DSBFilter'].patchValue(data.DSBFilter);\n                let status = this.disableControls(data.Date);\n                this.dataService.setDisableDSBControls(status);\n                this._pubWindowmode = data.WindowMode;\n                this.resetSbFilter();\n                this.setSbFilter();\n\n                if (callback) {\n                    callback(this, this.ScheduleBuilder);\n                }\n                //this._loadingBuilder = false;\n                this.subscribeEventSubscription();\n                let objectFilter = this.SbForm.get('ObjectFilter').value\n                this.IsNoDriverShiftFound = this.ScheduleBuilder.IsNoDriverShiftFound;\n                if ((this.Regions && this.Regions.length > 0) && (objectFilter == 1) && (this.DriverViewShifts && this.DriverViewShifts.length == 0)) {\n                    //IsNoDriverShiftFound verify driver does not have schedules for that shifts.\n                    //but regions has shifts here.\n                    if (this.ScheduleBuilder.DSBFilter == 2) {\n                        if (this.ScheduleBuilder.IsNoDriverShiftFound == 0) {\n                            jQuery('#btnno_shifts').click();\n                        }\n                        else {\n                            if (this.DriverViewShifts.length == 0) {\n                                this.Shifts = [];\n                                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                            }\n                        }\n                    }\n                    else {\n                        jQuery('#btnno_shifts').click();\n                    }\n                }\n                if (this.RegionDetail && this.RegionDetail.Trailers && this.RegionDetail.Trailers.length == 0) {\n                    this._isTrailerExists = false;\n                }\n                else {\n                    this._isTrailerExists = true;\n                }\n\n                //assign driver information\n                if (this.ScheduleBuilder.ObjectFilter == 1) {\n                    let driverdetails = this.LoadDriverDetails(this.DriverViewShifts) as [];\n                    if (driverdetails.length > 0) {\n                        this.TripDriverInfo.push.apply(driverdetails);\n                        this.IntializeSendBirdAccount(driverdetails, regionId);\n                    }\n                }\n                else {\n                    let driverdetails = this.LoadDriverDetailsShift(this.TrailerViewTrailers) as [];\n                    if (driverdetails.length > 0) {\n                        this.TripDriverInfo.push.apply(driverdetails);\n                        this.IntializeSendBirdAccount(driverdetails, regionId);\n                    }\n                }\n                //get shift information for region.. used for filter.\n                this.getShiftInformation(this.ScheduleBuilder.Shifts, data.RegionId);\n            });\n    }\n    isCalendarDrPresent(drs: any, date?: string) {\n        return drs.some(p => p.IsCalendarView == true && p.SelectedDate == date) ? true : false\n    }\n    getDeliveryRequests(regionId: string, sbViewId: number, status: number = 0, date?: string): void {\n        if (date == null || date == undefined) {\n            date = this.ScheduleBuilderFilters.Date;\n        }\n        this._loadingDrRequests = true;\n        this.carrierService.getDeliveryRequests(regionId, date).subscribe((drs: any[]) => {\n            if (drs != null && drs != undefined) {\n                this.isDrScheduledforToday = this.isCalendarDrPresent(drs, date); // verify before filtering Dr\n                drs = drs.filter(t => !t.IsCalendarView);\n                if (sbViewId == 1) {\n                    drs = this.filterDrByScheduleBuilder(drs);\n                }\n                drs = this.updateRequest(drs, status);\n                this.allApiDeliveryRequest = drs;\n                //this.originalDRs_OnPageRefresh = drs;\n                this.filterRequest(drs);\n                this.refreshUpdateData(status);\n                if (this._pubWindowmode == 2) {\n                    this.getLocalStorageQueueData();\n                    localStorage.setItem(\"refreshLocalStorage\", 'true');\n                    this.activeTimer();\n                } else {\n                    this.resetTimer();\n                }\n                this.dataService.setAllDeliveryRequestsSubject(drs);\n            }\n            this.IsDeliveryRequestRecieved = true;\n            if (this.drFilterForm.get('IsFilterApplied').value) {\n                this.dataService.setDrQueueChangesForFilter(true);\n            }\n            this._loadingDrRequests = false;\n        });\n    }\n\n    subscribeDrQueueChanges() {\n        this.drQueueChangesSubscription = this.dataService.drQueueChangesForFilter\n            //.pipe(debounceTime(250))\n            .subscribe(value => {\n                if (value) {\n                    this._toggle_search = false;\n                    this.applyDrFilter();\n                }\n            })\n    }\n\n    filterDrByProductType(productType: string) {\n        this.drFilterForm.get('IsFilterApplied').setValue(false);\n        this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n\n        //if 'all product' selected\n        if (productType == \"-1\") {\n            this.searchRecords('');\n        }\n        //else filter dr by product\n        else {\n            var priorityRequests = this.allApiDeliveryRequest.filter(t => t.ProductType == productType && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n            var missedRequests = this.allApiDeliveryRequest.filter(t => t.ProductType == productType && t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n    }\n\n    filterRequest(dr: DeliveryRequestViewModel[]) {\n        this.deliveryRequests = dr;\n        var priorityRequests = this.allApiDeliveryRequest.filter(t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n        var missedRequests = dr.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n        this.getRequestsByPriority(priorityRequests, missedRequests);\n\n        this.tempshouldGoRequests = this.shouldGoRequests;\n        this.tempcouldGoRequests = this.couldGoRequests;\n        this.tempmustGoRequests = this.mustGoRequests;\n        this.tempMissedRequests = this.missedRequests;\n        this.assignedByOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedByOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId != currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedToOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n        this.assignedToOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId != currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\n    }\n\n    removeRequestFromLeftPanel(draggedRequests: DeliveryRequestViewModel[]): void {\n        var deliveryRequests = this.getAllRequests();\n        deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n        var priorityReqs = deliveryRequests.filter(t => t.ParentId = null);\n        var missedReqs = deliveryRequests.filter(t => t.ParentId != null);\n        this.getRequestsByPriority(priorityReqs, missedReqs);\n    }\n\n    restoreDeleteDRs(requests: any) {\n        var delReqs: DeliveryRequestViewModel[] = requests;\n        delReqs.forEach(x => {\n            var originalDr = this.tempDraggedRequest.find(data => data.Id == x.Id);\n            if (originalDr) {\n                x['WindowMode'] = originalDr.WindowMode;\n                x['QueueMode'] = originalDr.QueueMode;\n            }\n        });\n        delReqs = delReqs.filter(x => x.SchedulePreviousStatus != DeliveryReqStatus.ScheduleCreated);\n        if (this._pubWindowmode == 2) {\n            var localStorageRequests = this.getLocalStorageRequests();\n            delReqs.forEach(x => {\n                var isDrExists = localStorageRequests.findIndex(t => t.Id == x.Id) != -1;\n                if (isDrExists) {\n                    if (x.ParentId != null) {\n                        this.pushItemsInMissedAndUpdateDrPanel(x);\n                    }\n                    else {\n                        this.pushItemsAndUpdateDrPanel(x);\n                    }\n                }\n                else {\n                    Declarations.msgwarning(\"The reset item already removed from the session.so we are not moving that item in active queue.\", undefined, undefined);\n                }\n                this.removeItemFromTempDrageQueue(x.Id, x.Priority, x.ParentId);\n            });\n        }\n        else {\n            delReqs.forEach(x => {\n                if (this.deliveryRequests.findIndex(r => r.Id == x.Id) == -1) {\n                    this.deliveryRequests.push(x);\n                }\n                else {\n                    var deliveryRequests = this.deliveryRequests.find(r => r.Id == x.Id);\n                    if (deliveryRequests != null) {\n                        deliveryRequests.DeliveryLevelPO = x.DeliveryLevelPO;\n                        deliveryRequests.Notes = x.Notes;\n                        deliveryRequests.RequiredQuantity = x.RequiredQuantity;\n                        deliveryRequests.ScheduleQuantityType = x.ScheduleQuantityType;\n                        deliveryRequests.Priority = x.Priority;\n                        deliveryRequests.ScheduleStartTime = x.ScheduleStartTime;\n                        deliveryRequests.ScheduleEndTime = x.ScheduleEndTime;\n                        deliveryRequests.SelectedDate = x.SelectedDate;\n                    }\n                }\n                this.removeItemFromTempDrageQueue(x.Id, x.Priority, x.ParentId);\n                let toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n                this.updateRecordsToggleRequest(toggleRequestMode);\n            });\n        }\n    }\n\n    pushLocation(job: DelRequestsByJobModel) {\n        switch (job.Priority) {\n            case DeliveryReqPriority.MustGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.MustGo;\n                this.mustGoRequests.push(job);\n                this.mustGoRequests.slice();\n                break;\n            case DeliveryReqPriority.ShouldGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.ShouldGo;\n                this.shouldGoRequests.push(job);\n                this.shouldGoRequests.slice();\n                break;\n            case DeliveryReqPriority.CouldGo:\n                job.DeliveryRequestType = DeliveryRequestTypes.CouldGo;\n                this.couldGoRequests.push(job);\n                this.couldGoRequests.slice();\n                break;\n        }\n    }\n\n    pushItemsAndUpdateDrPanel(dr: DeliveryRequestViewModel) {\n        var jobIndex = this.mustGoRequests.findIndex(t => t.JobId == dr.JobId);\n        if (jobIndex != -1) {\n            var job = this.mustGoRequests[jobIndex];\n            job.DeliveryRequests.push(dr);\n            job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n            if (job.Priority == DeliveryReqPriority.MustGo) {\n                this.mustGoRequests[jobIndex] = job;\n                this.mustGoRequests = this.mustGoRequests.slice();\n            }\n            else {\n                this.pushLocation(job);\n                this.mustGoRequests.splice(jobIndex, 1);\n            }\n        }\n        else {\n            jobIndex = this.shouldGoRequests.findIndex(t => t.JobId == dr.JobId);\n            if (jobIndex != -1) {\n                var job = this.shouldGoRequests[jobIndex];\n                job.DeliveryRequests.push(dr);\n                job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n                if (job.Priority == DeliveryReqPriority.ShouldGo) {\n                    this.shouldGoRequests[jobIndex] = job;\n                    this.shouldGoRequests = this.shouldGoRequests.slice();\n                }\n                else {\n                    this.pushLocation(job);\n                    this.shouldGoRequests.splice(jobIndex, 1);\n                }\n            }\n            else {\n                jobIndex = this.couldGoRequests.findIndex(t => t.JobId == dr.JobId);\n                if (jobIndex != -1) {\n                    var job = this.mustGoRequests[jobIndex];\n                    job.DeliveryRequests.push(dr);\n                    job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n                    if (job.Priority == DeliveryReqPriority.MustGo) {\n                        this.couldGoRequests[jobIndex] = job;\n                        this.couldGoRequests = this.couldGoRequests.slice();\n                    }\n                    else {\n                        this.pushLocation(job);\n                        this.couldGoRequests.splice(jobIndex, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    pushItemsInMissedAndUpdateDrPanel(dr: DeliveryRequestViewModel) {\n        var jobIndex = this.missedRequests.findIndex(t => t.JobId == dr.JobId);\n        if (jobIndex != -1) {\n            var job = this.missedRequests[jobIndex];\n            job.DeliveryRequests.push(dr);\n            job.Priority = this.deliveryReqService.getPriority(job.DeliveryRequests);\n            this.missedRequests[jobIndex] = job;\n            this.missedRequests = this.missedRequests.slice();\n        }\n    }\n\n    removeItemFromTempDrageQueue(Id: string, Priority: number, ParentId: string) {\n        var index = this.tempDraggedRequest.findIndex(data => data.Id == Id);\n        if (index != -1) {\n            this.tempDraggedRequest.splice(index, 1);\n            this.tempDraggedRequest.slice(); //refresh tempDragged Queue\n        }\n    }\n\n    getTotalBlendQuantity(): number {\n        return this.blendRequestsToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0);\n    }\n    toggleBlendQuantity(req: DeliveryRequestViewModel, isPercent: boolean) {\n        if (isPercent) {\n            req.RequiredQuantity = (this.blendTotalQuantity * req.QuantityInPercent) / 100;\n        } else {\n            req.QuantityInPercent = (req.RequiredQuantity / this.blendTotalQuantity) * 100;\n        }\n    }\n    toggleBlendTotalQuantity() {\n        this.blendRequestsToUpdate.forEach(t => {\n            this.toggleBlendQuantity(t, true);\n        });\n    }\n    IsValidBlendQuantity(): boolean {\n        return this.blendRequestsToUpdate.map(t => t.QuantityInPercent).reduce((a, b) => a + b, 0) == 100;\n    }\n\n    onDeliveryReqUpdate(status: number) {\n        //VALIDATION\n        if (status == 1) {\n            var tnkRequiredQuantity: number = this.requestToUpdate.RequiredQuantity;\n            if (this.requestToUpdate.IsBlendedRequest) {\n                tnkRequiredQuantity = this.getTotalBlendQuantity();\n                if (this.blendAddRequestToUpdate)\n                    tnkRequiredQuantity = (+tnkRequiredQuantity) + (+this.blendAddRequestToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0));\n            }\n            if (this.requestToUpdate.ScheduleQuantityType == 1 && (!(tnkRequiredQuantity > 0) || tnkRequiredQuantity < 0.00001)) {\n                Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined); return;\n            }\n            else if (this.requestToUpdate.ScheduleQuantityType == 1 && this.requestToUpdate.TankMaxFill && this.requestToUpdate.TankMaxFill > 0 && !this.requestToUpdate.IsMaxFillAllowed) {\n                if (tnkRequiredQuantity > this.requestToUpdate.TankMaxFill) {\n                    Declarations.msgerror(\"Should not exceed max fill. (\" + this.requestToUpdate.TankMaxFill + \")\", undefined, undefined); return;\n                }\n            }\n        }\n        if (this.requestToUpdate.IsSpiltDRAdded) {\n            var filter = this.requestToUpdate.SpiltDRs.filter(x => !(x.RequiredQuantity > 0)).length;\n            if (filter > 0) {\n                Declarations.msgerror(\"Quantity required for Spilt DRs.\", undefined, undefined); return;\n            }\n        }\n        jQuery('#closeEditDrPanel').click();\n        this._loadingDrRequests = true;\n        if (this.requestToUpdate.ScheduleQuantityType > 1) { this.requestToUpdate.RequiredQuantity = 0; }\n        let updateRequests = [this.requestToUpdate];\n        if (this.requestToUpdate.IsBlendedRequest) {\n            if (status == 1) {\n                let drNotes = this.requestToUpdate.Notes;\n                let drSelectedDate = this.requestToUpdate.SelectedDate;\n                let drScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\n                let drScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\n                let deliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\n                let drPriority = this.requestToUpdate.Priority;\n                $.each(this.blendRequestsToUpdate, function () {\n                    this.Notes = drNotes; this.Priority = drPriority; this.DeliveryLevelPO = deliveryLevelPO;\n                    this.SelectedDate = drSelectedDate; this.ScheduleStartTime = drScheduleStartTime; this.ScheduleEndTime = drScheduleEndTime;\n                });\n            }\n            updateRequests = this.blendRequestsToUpdate;\n            if (this.blendAddRequestToUpdate) {\n                this.blendAddRequestToUpdate.forEach(t => {\n                    t.SelectedDate = this.requestToUpdate.SelectedDate;\n                    t.ScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\n                    t.ScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\n                    t.DeliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\n                    if (t.RequiredQuantity > 0 || t.ScheduleQuantityType != 1)\n                        updateRequests.push(t);\n                })\n            }\n        }\n        this.carrierService.updateDeliveryRequest(updateRequests)\n            .subscribe((data: any) => {\n                this._loadingDrRequests = false;\n                if (data.StatusCode == 0) {\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                    this.refreshDeliveryRequests(status);\n\n                }\n                else if (data.StatusCode == 2) {\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n                    this.refreshDeliveryRequests(status);\n                }\n                else {\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n                }\n            });\n\n    }\n\n    refreshUpdateData(status: number) {\n        if (this._pubWindowmode == 1) {\n            if (this.SbForm.get('ToggleRequestMode').value === 1) {\n                this.onQueueFilterChange(1);\n            }\n            else {\n                this.onQueueFilterChange(2);\n            }\n        }\n        else {\n            this.setQueueFilter(2);\n            this.refreshUpdateRecordMultiwindow(this.requestToUpdate, status);\n        }\n    }\n\n    public refreshDeliveryRequests(status: number) {\n        let regionId = this.SbForm.get('RegionId').value;\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        let selectedDate = this.SbForm.get('Date').value;\n        this.getDeliveryRequests(regionId, sbViewId, status, selectedDate);\n    }\n\n    getScheduleQuantityType() {\n        if (this.ScheduleQuantityTypes.length == 0) {\n            this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n                this.ScheduleQuantityTypes = SQT || [];\n                this.SpiltScheduleQuantityTypes = SQT.filter(x => x.Id == 1) || [];\n            });\n        }\n    }\n\n    public BrokeredDrStatus: BrokeredDrCarrierStatus = null;\n    getDeliveryReq(delReqForm: any) {\n        let delReq = delReqForm.deliveryRequest.value as DeliveryRequestViewModel;\n        this.BrokeredDrStatus = delReqForm.CarrierStatus;\n        var allDrs = this.getAllRequests();\n        var drToupdate = allDrs.find(t => t.Id == delReq.Id);\n        this.blendRequestsToUpdate = [];\n        this.blendTotalQuantity = 0;\n        this.blendAddRequestToUpdate = [];\n        this.requestToUpdate = Object.assign({}, drToupdate);\n        if (this.requestToUpdate.IsBlendedRequest) {\n            var tempBlendDrs = allDrs.filter(t => t.BlendedGroupId == delReq.BlendedGroupId);\n            this.blendedProducts = tempBlendDrs.map(t => t.ProductType).join(\", \");\n            this.blendRequestsToUpdate = tempBlendDrs.filter(t => !t.IsAdditive);\n            this.blendAddRequestToUpdate = tempBlendDrs.filter(t => t.IsAdditive);\n            this.blendTotalQuantity = this.getTotalBlendQuantity();\n        }\n        this.AssignDrForm.get('DispatcherNote').setValue('');\n        if (delReqForm.isDeleted) {\n            this.requestToUpdate.IsDeleted = true;\n            if (this.requestToUpdate.IsBlendedRequest) {\n                $.each(this.blendRequestsToUpdate, function () { this.IsDeleted = true; });\n                if (this.blendAddRequestToUpdate)\n                    $.each(this.blendAddRequestToUpdate, function () { this.IsDeleted = true; });\n            }\n            let element = document.getElementById(\"openDeleteDeliveryRequestModal\");\n            element ? element.click() : null;\n        }\n        else if (delReqForm.isAssignCarrier) {\n            this.getAllCarrierRegions();\n            this.cancelAssignDrsToCarrier()\n            this.initilizeAssignDrForm();\n            this.getOrdersAndCarrierDetails(delReq);\n        }\n        else if (delReqForm.isApproveRejectBrokeredDr) {\n            this.requestToUpdate = Object.assign({}, delReq);\n            let element = document.getElementById(\"openProceedBrokeredDrModal\");\n            element ? element.click() : null;\n        }\n        else if (delReqForm.isCreateDeliveryForTBD) {\n            this.isGroupDelivery = delReqForm.isDeliveryGroup;\n            let elem = document.getElementById('open-CreateDelivery'); elem.click();\n            this.getDropLocationDetails(delReqForm.deliveryRequest);\n        }\n        else {\n            this.getScheduleQuantityType();\n            if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1 }\n            let element = document.getElementById(\"openUpdateDrModal\");\n            element ? element.click() : null;\n        }\n        this.requestToUpdate.IsSpiltDRAdded = false;\n        this.requestToUpdate.SpiltDRs = [];\n    }\n\n    public changeBrokeredDrStatus(drId: string, blendedGroupId: string, status: BrokeredDrCarrierStatus) {\n        this._acceptRejectDr = true;\n        this._loadingCarriers = true;\n        this.carrierService.changeBrokeredDrStatus(drId, blendedGroupId, status).subscribe((data: any) => {\n            this._acceptRejectDr = false;\n            this._loadingCarriers = false;\n            if (data.StatusCode != 1) {\n                if (status == BrokeredDrCarrierStatus.Accepted) {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Accepted;\n                    //this.dataService.setRestoreDeletedRequestSubject([this.requestToUpdate]);\n                    this.getDeliveryRequests(this.SelectedRegionId, this.SbForm.get('ObjectFilter').value, null, this.ScheduleBuilderFilters.Date)\n                }\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                Declarations.hideModal('#proceedBrokeredDrModal');\n                if (this.drFilterForm.get('IsFilterApplied').value) {\n                    this.dataService.setDrQueueChangesForFilter(true);\n                }\n                //this.getBrokeredDrAssignedToMe(this.SelectedRegionId, this.ScheduleBuilderFilters.Date);\n            } else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    public async changeCarrierBrokeredDrStatus(drId: any) {\n        this._acceptRejectDr = true;\n        let status = drId.status;\n        let _id = drId.drId;\n        let blendedGroupId = drId.blendedGroupId;\n        await this.carrierService.changeBrokeredDrStatus(_id, blendedGroupId, status).subscribe(data => {\n            this._acceptRejectDr = false;\n            if (data.StatusCode == 0) {\n                if (status == BrokeredDrCarrierStatus.Accepted) {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Accepted;\n                    this.getDeliveryRequests(this.SelectedRegionId, this.SbForm.get('ObjectFilter').value, null, this.ScheduleBuilderFilters.Date)\n                }\n                else {\n                    this.requestToUpdate.CarrierStatus = BrokeredDrCarrierStatus.Rejected;\n                }\n                this.dataService.setAcceptRejectDRSubject({ 'RegionId': this.SelectedRegionId, 'Date': this.ScheduleBuilderFilters.Date });\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                Declarations.hideModal('#proceedBrokeredDrModal');\n                if (this.drFilterForm.get('IsFilterApplied').value) {\n                    this.dataService.setDrQueueChangesForFilter(true);\n                }\n\n            } else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    private getAllRequests() {\n        let allDrs = [] as DeliveryRequestViewModel[];\n\n        let missedReqs = this.missedRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let mustGoReqs = this.mustGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let shouldGoReqs = this.shouldGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let couldGoReqs = this.couldGoRequests.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        allDrs = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n        return allDrs;\n    }\n\n    updateRequest(drs: DeliveryRequestViewModel[], status: number) {\n        if (IsCarrierCompany) {\n            drs.forEach(function (element, index) {\n                if (element.CarrierStatus == 2) {\n                    drs[index].IsBrokeredCarrierDR = true;\n                }\n            });\n        }\n        if (status == 0) {\n            drs.forEach(function (element, index) {\n                drs[index].WindowMode = 1;\n                drs[index].QueueMode = 1;\n            });\n            return drs;\n        }\n        else {\n            let pubWindowmode = this._pubWindowmode;\n            if (pubWindowmode == 1) {\n                var tempmustGoRequests = this.activeQueueList.filter(top => top.Priority == 1 && top.ParentId == null);\n                var tempshouldGoRequests = this.activeQueueList.filter(top => top.Priority == 2 && top.ParentId == null);\n                var tempcouldGoRequests = this.activeQueueList.filter(top => top.Priority == 3 && top.ParentId == null);\n                var tempMissedRequests = this.activeQueueList.filter(top => top.ParentId != null);\n                drs.forEach(function (element, index) {\n                    if (tempmustGoRequests.length > 0 || tempshouldGoRequests.length > 0 || tempcouldGoRequests.length > 0 || tempMissedRequests.length > 0) {\n                        var mustrecordFound = tempmustGoRequests.find(top => top.Id === element.Id);\n                        var shouldrecordFound = tempshouldGoRequests.find(top => top.Id === element.Id);\n                        var couldrecordFound = tempcouldGoRequests.find(top => top.Id === element.Id);\n                        var missedrecordFound = tempMissedRequests.find(top => top.Id === element.Id);\n                        if (missedrecordFound) {\n                            drs[index].WindowMode = missedrecordFound.WindowMode;\n                            drs[index].QueueMode = missedrecordFound.QueueMode;\n                        }\n                        else if (mustrecordFound) {\n                            drs[index].WindowMode = mustrecordFound.WindowMode;\n                            drs[index].QueueMode = mustrecordFound.QueueMode;\n                        }\n                        else if (shouldrecordFound) {\n                            drs[index].WindowMode = shouldrecordFound.WindowMode;\n                            drs[index].QueueMode = shouldrecordFound.QueueMode;\n                        }\n                        else if (couldrecordFound) {\n                            drs[index].WindowMode = couldrecordFound.WindowMode;\n                            drs[index].QueueMode = couldrecordFound.QueueMode;\n                        }\n                        else {\n                            drs[index].WindowMode = 1;\n                            drs[index].QueueMode = 1;\n                        }\n                    }\n                    else {\n                        drs[index].WindowMode = 1;\n                        drs[index].QueueMode = 1;\n                    }\n                });\n            }\n            else {\n                drs.forEach(function (element, index) {\n                    drs[index].WindowMode = 2;\n                    drs[index].QueueMode = 2;\n                });\n            }\n            return drs;\n        }\n    }\n\n    filterDrByScheduleBuilder(drs: DeliveryRequestViewModel[]): DeliveryRequestViewModel[] {\n\n        var _scheduleRequests = [];\n        var scheduleBuilder = this.SbForm;\n        if (scheduleBuilder != undefined && scheduleBuilder != null) {\n            scheduleBuilder.value.Shifts.forEach(s => {\n                s.Schedules.forEach(sc => {\n                    sc.Trips.forEach(t => {\n                        t.DeliveryRequests.forEach(d => {\n                            _scheduleRequests.push(d.Id);\n                        });\n                    });\n                });\n            });\n            drs = drs.filter(x => {\n                return _scheduleRequests.find(y => y == x.Id) == undefined;\n            });\n        }\n        return drs;\n    }\n\n    toggledrRequestClick(status: boolean) {\n        this.drRequestClick = status;\n    }\n\n    updateRecordsToggleRequest(status: number) {\n        if (this._pubWindowmode == 1) {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\n            let draggedmissedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n            var priorityRequests = [] as DeliveryRequestViewModel[];\n            var missedRequests = [] as DeliveryRequestViewModel[];\n            if (status == 1) {\n                priorityRequests = this.deliveryRequests.filter(t => t.ParentId == null && t.WindowMode == 1 && t.QueueMode == 1);\n                missedRequests = this.deliveryRequests.filter(top => top.WindowMode == 1 && top.QueueMode == 1 && top.ParentId != null);\n            }\n            else {\n                priorityRequests = this.deliveryRequests.filter(t => t.ParentId == null && t.WindowMode == 1 && t.QueueMode == 2);\n                missedRequests = this.deliveryRequests.filter(top => top.WindowMode == 1 && top.QueueMode == 2 && top.ParentId != null);\n            }\n            if (draggedRequests.length > 0) {\n                priorityRequests = priorityRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            if (draggedmissedRequests.length > 0) {\n                missedRequests = missedRequests.filter(({ Id: id1 }) => !draggedmissedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n        else {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.ParentId == null);\n            let draggedmissedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.ParentId != null);\n\n            //must go requests\n            var mustGodeliveryRequests = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (mustGodeliveryRequests != null) {\n                this.mustGoRequests = mustGodeliveryRequests;\n            }\n            if (draggedRequests.length > 0) {\n                this.mustGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.mustGoRequests = this.mustGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.mustGoRequests.slice();\n\n            //should go requests\n            var shouldGodeliveryRequests = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (shouldGodeliveryRequests != null) {\n                this.shouldGoRequests = shouldGodeliveryRequests;\n            }\n            if (draggedRequests.length > 0) {\n                this.shouldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.shouldGoRequests = this.shouldGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.shouldGoRequests.slice();\n\n            //could go records filters\n            var couldGodeliveryRequests = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (couldGodeliveryRequests != null) {\n                this.couldGoRequests = couldGodeliveryRequests;\n\n            }\n            if (draggedRequests.length > 0) {\n                this.couldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.couldGoRequests = this.couldGoRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.couldGoRequests.slice();\n\n            var misseddeliveryRequests = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (misseddeliveryRequests != null) {\n                this.missedRequests = misseddeliveryRequests;\n            }\n            if (draggedmissedRequests.length > 0) {\n                this.missedRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(({ Id: id1 }) => !draggedmissedRequests.some(({ Id: id2 }) => id2 === id1)));\n                this.missedRequests = this.missedRequests.filter(t => t.DeliveryRequests && t.DeliveryRequests.length > 0);\n            }\n            this.missedRequests.slice();\n        }\n    }\n\n    getLocalStorageQueueData() {\n        this._loadingRequests = true;\n        let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        var missedLocations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var mustGoLocations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var shouldGoLocations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var couldGoLocations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        if (draggedRequests && draggedRequests.length > 0) {\n            let deliveryRequests = [] as DeliveryRequestViewModel[];\n\n            let missedReqs = missedLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let mustGoReqs = mustGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let shouldGoReqs = shouldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            let couldGoReqs = couldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n            deliveryRequests = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n\n            deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n\n            var priorityRequests = deliveryRequests.filter(t => t.ParentId == null);\n            var missedRequests = deliveryRequests.filter(t => t.ParentId != null);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n        }\n        else {\n            this.mustGoRequests = mustGoLocations;\n            this.mustGoRequests.slice();\n            this.shouldGoRequests = shouldGoLocations;\n            this.shouldGoRequests.slice();\n            this.couldGoRequests = couldGoLocations;\n            this.couldGoRequests.slice();\n            this.missedRequests = missedLocations;\n            this.missedRequests.slice();\n        }\n        this.localmustGoRequests = this.mustGoRequests;\n        this.localmustGoRequests.slice();  //refresh the data\n        this._mustGoRefresh = this.mustGoRequests.length;\n\n        this.localshouldGoRequests = this.shouldGoRequests;\n        this.localshouldGoRequests.slice();//refresh the data\n        this._shouldGoRefresh = this.shouldGoRequests.length;\n\n        this.localcouldGoRequests = this.couldGoRequests;\n        this.localcouldGoRequests.slice();//refresh the data\n        this._couldGoRefresh = this.couldGoRequests.length;\n\n        this.localMissedRequests = this.missedRequests;\n        this.localMissedRequests.slice();//refresh the data\n        this._missedRefresh = this.missedRequests.length;\n\n        localStorage.setItem(\"refreshLocalStorage\", 'false');\n        this._loadingRequests = false;\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    activeTimer() {\n        if (this.intervalTime) {\n            clearInterval(this.intervalTime);\n        }\n        this.intervalTime = setInterval(() => {\n            if (IsUserActive()) {\n                if (this._pubWindowmode == 2) {\n                    const refreshLocalStorage = localStorage.getItem(\"refreshLocalStorage\");\n\n                    if (refreshLocalStorage != null && refreshLocalStorage == 'true') {\n                        this.getLocalStorageQueueData();\n                    }\n                }\n            }\n        }, 3000);\n    }\n\n    activeQueueIcon() {\n        this.intervalTimeQueue = setInterval(() => {\n\n            if (IsUserActive()) {\n                this._refreshQueue = false;\n                if (this._pubWindowmode == 1) {\n                    var deliveryRequests = this.deliveryRequests;\n                    if (this.tempDraggedRequest.length > 0) {\n                        deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !this.tempDraggedRequest.some(({ Id: id2 }) => id2 === id1));\n                    }\n                    if (deliveryRequests.filter(top => top.QueueMode == 2).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                }\n                else {\n                    if (this.mustGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.shouldGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.couldGoRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                    if (this.missedRequests.filter(jobObj => jobObj.DeliveryRequests && jobObj.DeliveryRequests.findIndex(t1 => t1.QueueMode == 2) != -1).length > 0) {\n                        this._refreshQueue = true;\n                    }\n                }\n            }\n        }, 3000);\n    }\n\n    onRedirectMultiWindowScreen(filter: QueueFilter): void {\n        this.clickMultiRequest = true;\n        this.ScheduleBuilderFilters.ToggleRequestMode = 2;\n        this.setQueueFilter(this.ScheduleBuilderFilters.ToggleRequestMode);\n        this.updateRecordsToggleRequest(2);\n        if (this.ScheduleBuilderFilters.WindowMode === 2 && filter === 1) {\n            this.deliveryRequestService.ToggleQueueIcon(false);\n            localStorage.setItem(\"refreshLocalStorage\", 'true');\n            this.activeTimer();\n            window.open(\"/Carrier/ScheduleBuilder/DeliveryRequests?regionId=\" + this.SbForm.get('RegionId').value + '&selectedDate=' + this.SbForm.controls['Date'].value, \"_blank\");\n        }\n    }\n\n\n    searchRequests(terms: string, queueMode: number, windowMode: number) {\n\n        //must should could go requests\n        let dragged_must_should_could = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        let searchedRecords = this.drFilterService.searchRequestsWithParams(this.deliveryRequests, terms, queueMode, windowMode, DeliveryRequestTypes.MustGo);\n\n        if (dragged_must_should_could.length > 0) {\n            searchedRecords = searchedRecords.filter(({ Id: id1 }) => !dragged_must_should_could.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        //missed requests\n        let draggedMissedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n        let missedrecords = this.drFilterService.searchRequestsWithParams(this.deliveryRequests, terms, queueMode, windowMode, DeliveryRequestTypes.Missed);\n\n        if (draggedMissedRequests.length > 0) {\n            missedrecords = missedrecords.filter(({ Id: id1 }) => !draggedMissedRequests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.drFilterModel = this.drFilterService.drFilterFormToModel(this.drFilterForm, IsCarrierCompany);\n            searchedRecords = this.drFilterService.applyFilterToDrs(searchedRecords, this.drFilterModel);\n            missedrecords = this.drFilterService.applyFilterToDrs(missedrecords, this.drFilterModel);\n        }\n\n        let groupedDrs = this.deliveryReqService.groupDrsByJob(searchedRecords);\n\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedrecords, DeliveryRequestTypes.Missed);\n\n    }\n    filterRequests(queueMode: number, windowMode: number) {\n\n        this._loadingDrRequests = true;\n        let _mustShoulCouldGoRecords = this.deliveryRequests.filter((dr: DeliveryRequestViewModel) => (\n            dr.WindowMode == windowMode && dr.QueueMode === queueMode && dr.ParentId == null)\n        );\n\n        let _draggedRequests = this.tempDraggedRequest.filter(\n            t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n        );\n\n        if (_draggedRequests.length > 0) {\n            _mustShoulCouldGoRecords = _mustShoulCouldGoRecords.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        let _filteredMustShoulCouldGoRecords = this.drFilterService.applyFilterToDrs(_mustShoulCouldGoRecords, this.drFilterModel);\n        if (IsCarrierCompany) {\n            if (this.drFilterModel.IsBrokeredDRs) {\n                _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(x => x.IsBrokeredCarrierDR == true);\n            }\n        }\n        if (this.drFilterModel.IsTBDRequest == true) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.IsTBD == true);\n        }\n        //filter records based on Order Type.\n        if (this.drFilterModel.OrderType.length > 1) {\n            if (this.drFilterModel.OrderType.includes(OrderType.FTL && OrderType.LTL)) {\n                _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.FTL || t.OrderType == OrderType.LTL);\n            }\n        }\n        else if (this.drFilterModel.OrderType.includes(OrderType.LTL)) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.LTL);\n        }\n        else if (this.drFilterModel.OrderType.includes(OrderType.FTL)) {\n            _filteredMustShoulCouldGoRecords = _filteredMustShoulCouldGoRecords.filter(t => t.OrderType == OrderType.FTL);\n        }\n        let groupedDrs = this.deliveryReqService.groupDrsByJob(_filteredMustShoulCouldGoRecords)\n\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo)) {\n            this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo)) {\n            this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo)) {\n            this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.Missed)) {\n\n            let draggedRequests = this.tempDraggedRequest.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\n\n            let _missedDrs = this.deliveryRequests.filter(dr => (dr.WindowMode == windowMode && dr.QueueMode === queueMode && dr.ParentId != null));\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _missedDrs = _missedDrs.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _missedDrs = _missedDrs.filter(x => x.IsTBD == true);\n            }\n            if (draggedRequests.length > 0) {\n                _missedDrs = _missedDrs.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _missedDrs = this.drFilterService.applyFilterToDrs(_missedDrs, this.drFilterModel);\n\n            //filter records based on Order Type.\n            if (_missedDrs.length > 0) {\n                if (this.drFilterModel.OrderType.length > 1) {\n                    if (this.drFilterModel.OrderType.includes(OrderType.FTL && OrderType.LTL)) {\n                        _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.FTL || t.OrderType == OrderType.LTL);\n                    }\n                }\n                else if (this.drFilterModel.OrderType.includes(OrderType.LTL)) {\n                    _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.LTL);\n                }\n                else if (this.drFilterModel.OrderType.includes(OrderType.FTL)) {\n                    _missedDrs = _missedDrs.filter(t => t.OrderType == OrderType.FTL);\n                }\n            }\n            this.missedRequests = this.deliveryReqService.groupDrsByJob(_missedDrs, DeliveryRequestTypes.Missed);\n        }\n        this._loadingDrRequests = false;\n    }\n\n    searchMultiWindowRequests(terms: string, queueMode: number, windowMode: number) {\n        let dragged_requests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n\n        let _localmustGoRequests = this.drFilterService.getDrsFromJob(this.localmustGoRequests);\n        let _localShouldGoRequests = this.drFilterService.getDrsFromJob(this.localshouldGoRequests);\n        let _localCouldGoRequests = this.drFilterService.getDrsFromJob(this.localcouldGoRequests);\n        let _localMissedDr = this.drFilterService.getDrsFromJob(this.localMissedRequests);\n\n        let mustGorecords = this.drFilterService.searchRequests(_localmustGoRequests, terms);\n        let shouldGorecords = this.drFilterService.searchRequests(_localShouldGoRequests, terms);\n        let couldGorecords = this.drFilterService.searchRequests(_localCouldGoRequests, terms);\n        let missedrecords = this.drFilterService.searchRequests(_localMissedDr, terms);\n\n\n        if (dragged_requests.length > 0) {\n            mustGorecords = mustGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            shouldGorecords = shouldGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            couldGorecords = couldGorecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n            missedrecords = missedrecords.filter(({ Id: id1 }) => !dragged_requests.some(({ Id: id2 }) => id2 === id1));\n        }\n\n        let mustGoGroupedDrs = this.deliveryReqService.groupDrsByJob(mustGorecords);\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(mustGoGroupedDrs);\n\n        let shouldGoGroupedDrs = this.deliveryReqService.groupDrsByJob(shouldGorecords);\n        this.mustGoRequests = this.deliveryReqService.getShouldGoRequests(shouldGoGroupedDrs);\n\n        let couldGoGroupedDrs = this.deliveryReqService.groupDrsByJob(couldGorecords);\n        this.mustGoRequests = this.deliveryReqService.getCouldGoRequests(couldGoGroupedDrs);\n\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedrecords, DeliveryRequestTypes.Missed);\n    }\n\n\n    filterMultiWindowRequests() {\n\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.MustGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(t =>\n                t.Priority == 1 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localmustGoRequests = this.drFilterService.getDrsFromJob(this.localmustGoRequests);\n\n            if (_draggedRequests.length > 0) {\n                _localmustGoRequests = _localmustGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localmustGoRequests = this.drFilterService.applyFilterToDrs(_localmustGoRequests, this.drFilterModel);\n\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localmustGoRequests = _localmustGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localmustGoRequests = _localmustGoRequests.filter(x => x.IsTBD == true);\n            }\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localmustGoRequests);\n            this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.ShouldGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(\n                t => t.Priority == 2 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localshouldGoRequests = this.drFilterService.getDrsFromJob(this.localshouldGoRequests);\n\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localshouldGoRequests = _localshouldGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localshouldGoRequests = _localshouldGoRequests.filter(x => x.IsTBD == true);\n            }\n            if (_draggedRequests.length > 0) {\n                _localshouldGoRequests = _localshouldGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localshouldGoRequests = this.drFilterService.applyFilterToDrs(_localshouldGoRequests, this.drFilterModel);\n\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localshouldGoRequests);\n            this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.CouldGo)) {\n\n            let _draggedRequests = this.tempDraggedRequest.filter(\n                t => t.Priority == 3 && t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _localcouldGoRequests = this.drFilterService.getDrsFromJob(this.localcouldGoRequests);\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _localcouldGoRequests = _localcouldGoRequests.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _localcouldGoRequests = _localcouldGoRequests.filter(x => x.IsTBD == true);\n            }\n            if (_draggedRequests.length > 0) {\n                _localcouldGoRequests = _localcouldGoRequests.filter(({ Id: id1 }) => !_draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _localcouldGoRequests = this.drFilterService.applyFilterToDrs(_localcouldGoRequests, this.drFilterModel);\n\n            let groupedDrs = this.deliveryReqService.groupDrsByJob(_localcouldGoRequests);\n            this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        }\n        if (this.drFilterModel.Priority.includes(DeliveryRequestTypes.Missed)) {\n\n            let _draggedMissedRequests = this.tempDraggedRequest.filter(\n                t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId\n            );\n\n            let _missedrecords = this.drFilterService.getDrsFromJob(this.localMissedRequests);\n            if (IsCarrierCompany) {\n                if (this.drFilterModel.IsBrokeredDRs) {\n                    _missedrecords = _missedrecords.filter(x => x.IsBrokeredCarrierDR == true);\n                }\n            }\n            if (this.drFilterModel.IsTBDRequest == true) {\n                _missedrecords = _missedrecords.filter(x => x.IsTBD == true);\n            }\n            if (_draggedMissedRequests.length > 0) {\n                _missedrecords = _missedrecords.filter(({ Id: id1 }) => !_draggedMissedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n\n            _missedrecords = this.drFilterService.applyFilterToDrs(_missedrecords, this.drFilterModel);\n\n            this.missedRequests = this.deliveryReqService.groupDrsByJob(_missedrecords, DeliveryRequestTypes.Missed);\n        }\n    }\n\n\n    // searchAssignedTabDr(terms: string) {\n\n    // }\n    // assignAssignedTabDrs() {\n\n    // }\n\n    RedirectToCreateTrailer() {\n        window.location.href = \"/Carrier/Tractor/View\";\n    }\n    RedirectToCreateRegion() {\n        window.location.href = \"/Supplier/Region/View\";\n    }\n\n    MoveActiveQueue(dr: DeliveryRequestViewModel[]): void {\n        if (dr != null) {\n            this.updateDrRequest(dr.map(t => t.Id));\n            this.deliveryRequests.slice(); // refresh the delivery request.\n            this.assignTempRequest(1, 1);\n            Declarations.msgsuccess(dr[0].CustomerCompany + \" moved to clipboard.\", undefined, undefined);\n            this._refreshQueue = true;\n        }\n    }\n\n    updateDrRequest(drID: string[]) {\n        let deliveryRequest = this.deliveryRequests.filter(t => drID.some(t1 => t1 == t.Id)) as DeliveryRequestViewModel[];\n        if (deliveryRequest != null) {\n            deliveryRequest.forEach(t => {\n                t.WindowMode = 1;\n                t.QueueMode = 2;\n                this.activeQueueList.push(t);\n                var foundIndex = this.deliveryRequests.findIndex(x => x.Id == t.Id);\n                this.deliveryRequests[foundIndex] = t;\n            });\n        }\n    }\n\n    updateDrRequestMultiScreenMode(drArray: DeliveryRequestViewModel[]) {\n        drArray.forEach(t => {\n            let foundIndex = this.deliveryRequests.findIndex(x => x.Id == t.Id);\n            if (foundIndex != -1) {\n                this.deliveryRequests[foundIndex].WindowMode = 1;\n                this.deliveryRequests[foundIndex].QueueMode = 2;\n            }\n        });\n    }\n\n    refreshLeftPanelData() {\n        var toggleRequestMode = this.SbForm.get('ToggleRequestMode').value;\n        if (this._pubWindowmode == 1) {\n            if (toggleRequestMode == 1) {\n                this.mustGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.mustGoRequests.slice();\n\n                this.shouldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.shouldGoRequests.slice();\n\n                this.couldGoRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.couldGoRequests.slice();\n\n                this.missedRequests.forEach(t => t.DeliveryRequests = t.DeliveryRequests.filter(top => top.QueueMode === 1 && top.WindowMode === 1));\n                this.missedRequests.slice();\n            }\n        }\n    }\n\n    refreshSingleWindow() {\n        var status = false;\n        if (localStorage.getItem(\"missedDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"mustGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"shouldGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n            if (locations.length > 0)\n                status = true;\n\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        }\n        if (localStorage.getItem(\"couldGoDeliveryRequest\") != null) {\n            var locations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[];\n            if (locations.length > 0)\n                status = true;\n            locations.forEach(x => {\n                this.updateDrRequestMultiScreenMode(x.DeliveryRequests);\n            });\n        };\n        if (status) {\n            Declarations.msgwarning(\"Due to window mode change all items are moved to clipboard from the session.\", undefined, undefined);\n        }\n        this.resetLocalStorage();\n        this.resetTimer();\n        this.onQueueFilterChange(1);\n        localStorage.setItem(\"refreshRegion\", JSON.stringify(true));\n    }\n\n\n    getLocalStorageRequests() {\n        var missedLocations = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var mustGoLocations = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var shouldGoLocations = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n        var couldGoLocations = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\n\n        let deliveryRequests = [] as DeliveryRequestViewModel[];\n\n        let missedReqs = missedLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let mustGoReqs = mustGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let shouldGoReqs = shouldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        let couldGoReqs = couldGoLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\n        deliveryRequests = [].concat(missedReqs, mustGoReqs, shouldGoReqs, couldGoReqs);\n\n        return deliveryRequests;\n    }\n\n    refreshUpdateRecordMultiwindow(requestToUpdate: DeliveryRequestViewModel, status: number) {\n        let draggedRequests = this.tempDraggedRequest.filter(t => t.AssignedToCompanyId == currentUserCompanyId);\n        if (requestToUpdate != null) {\n            var deliveryRequests = this.getLocalStorageRequests();\n            var updatedDrIndex = deliveryRequests.findIndex(t => t.Id == requestToUpdate.Id);\n            if (updatedDrIndex != -1) {\n                if (status == 1) {\n                    deliveryRequests[updatedDrIndex] = requestToUpdate;\n                    localStorage.setItem(\"recordPriorityChange\", JSON.stringify(requestToUpdate));\n                }\n                else {\n                    deliveryRequests.splice(updatedDrIndex, 1);\n                }\n            }\n            if (draggedRequests && draggedRequests.length > 0) {\n                deliveryRequests = deliveryRequests.filter(({ Id: id1 }) => !draggedRequests.some(({ Id: id2 }) => id2 === id1));\n            }\n            var priorityRequests = deliveryRequests.filter(t => t.ParentId == null);\n            var missedRequests = deliveryRequests.filter(t => t.ParentId != null);\n            this.getRequestsByPriority(priorityRequests, missedRequests);\n\n            localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(this.missedRequests));\n            localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(this.mustGoRequests));\n            localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(this.shouldGoRequests));\n            localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(this.couldGoRequests));\n            localStorage.setItem(\"updateRequest\", JSON.stringify(true));\n        }\n    }\n\n    getRequestsByPriority(priorityReqs: DeliveryRequestViewModel[], missedReqs: DeliveryRequestViewModel[]) {\n        var groupedDrs = this.deliveryReqService.groupDrsByJob(priorityReqs);\n        this.mustGoRequests = this.deliveryReqService.getMustGoRequests(groupedDrs);\n        this.mustGoRequests.slice();\n        this.shouldGoRequests = this.deliveryReqService.getShouldGoRequests(groupedDrs);\n        this.shouldGoRequests.slice();\n        this.couldGoRequests = this.deliveryReqService.getCouldGoRequests(groupedDrs);\n        this.couldGoRequests.slice();\n        this.missedRequests = this.deliveryReqService.groupDrsByJob(missedReqs, DeliveryRequestTypes.Missed);\n        this.missedRequests.slice();\n\n        if (this.drFilterForm.get('IsFilterApplied').value) {\n            this.dataService.setDrQueueChangesForFilter(true);\n        }\n    }\n\n    async onApplyFilter($event) {\n        if ($event.SelectedDrivers == undefined)\n            $event.SelectedDrivers = [];\n        if ($event.SelectedTrailers == undefined)\n            $event.SelectedTrailers = [];\n        if ($event.SelectedPickups == undefined)\n            $event.SelectedPickups = [];\n\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        if (sbViewId == 1) {\n            // driver view\n            await this.filterDriverView($event)\n        }\n        else if (sbViewId == 2) {\n            // trailer view\n            await this.filterTrailerView($event);\n        }\n    }\n\n    setSbFilter() {\n        if (this.RegionDetail == undefined || this.RegionDetail == null) {\n            return;\n        }\n\n        this.UpdateSbFilter = false;\n        this.SbFilter.Drivers = this.RegionDetail.Drivers;\n        this.SbFilter.Trailers = this.RegionDetail.Trailers;\n        this.SbFilter.Pickups = this.getPickups();\n        this.UpdateSbFilter = true;\n    }\n\n    resetSbFilter() {\n        this.UpdateSbFilter = false;\n\n        this.DriverViewFilter = null;\n        this.TrailerViewFilter = null;\n        this.SbFilter.SelectedDrivers = [];\n        this.SbFilter.SelectedTrailers = [];\n        this.SbFilter.SelectedPickups = [];\n\n        this.UpdateSbFilter = true;\n    }\n\n    getPickups() {\n        var pickups: DropdownItem[] = [];\n        if (this.ScheduleBuilder.ObjectFilter == 1) {\n            // driver view\n            if (this.DriverViewShifts != undefined && this.DriverViewShifts != null && this.DriverViewShifts.length > 0) {\n                this.DriverViewShifts.map((shift, shiftIdx) => {\n                    shift.Schedules.map((schedule, scheduleIdx) => {\n                        schedule.Trips.map((trip, tripIdx) => {\n                            this.addPickupLocation(pickups, trip);\n                        });\n                    });\n                });\n            }\n        }\n        else {\n            // trailer view\n            if (this.TrailerViewTrailers != undefined && this.TrailerViewTrailers != null && this.TrailerViewTrailers.length > 0) {\n                this.TrailerViewTrailers.map((trailer, trailerIdx) => {\n                    trailer.Shifts.map((shift, shiftIdx) => {\n                        shift.Trips.map((trip, tripIdx) => {\n                            this.addPickupLocation(pickups, trip);\n                        });\n                    });\n                });\n            }\n        }\n        return pickups;\n    }\n\n    addPickupLocation(pickups: DropdownItem[], trip: TripModel) {\n        if (trip.IsCommonPickup) {\n            if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                this.addBulkplantAddress(pickups, trip.BulkPlant);\n            }\n            else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                this.addTerminalAddress(pickups, trip.Terminal);\n            }\n        }\n        else {\n            trip.DeliveryRequests.map((dr, drIdx) => {\n                if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                    this.addBulkplantAddress(pickups, dr.BulkPlant);\n                }\n                else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                    this.addTerminalAddress(pickups, dr.Terminal);\n                }\n            });\n        }\n    }\n\n    addBulkplantAddress(pickups: DropdownItem[], bulkplant: DropAddressModel) {\n        var bulkplantTxt = 'Bulkplant: ';\n        var siteName = bulkplant.SiteName.replace(' ', '');\n\n        var pickup = pickups.filter(p => p.Code == siteName && p.Name.search(bulkplantTxt) != -1);\n        if (pickup.length == 0 && bulkplant.SiteName != undefined && bulkplant.SiteName != null) {\n            pickups.push({ \"Id\": 0, \"Code\": siteName, \"Name\": bulkplantTxt + bulkplant.Address + \",\" + bulkplant.City + \",\" + bulkplant.State.Code + \",\" + bulkplant.ZipCode });\n        }\n    }\n\n    addTerminalAddress(pickups: DropdownItem[], terminal: DropdownItem) {\n        var terminalTxt = 'Terminal: ';\n        var pickup = pickups.filter(p => p.Code == terminal.Id.toString() && p.Name.search(terminalTxt) != -1);\n        if (pickup.length == 0) {\n            pickups.push({ \"Id\": 0, \"Code\": terminal.Id.toString(), \"Name\": terminalTxt + terminal.Name });\n        }\n\n    }\n\n    async filterDriverView($event) {\n        var shifts = this.SbForm.get('Shifts').value;\n        var shiftIndex = 0;\n        this.DriverViewFilter = new DriverViewFilterModel;\n        for (let shift of shifts) {\n            var schedules = shift.Schedules;\n            await schedules != undefined && schedules != null &&\n                schedules.map((sche, scheduleIdx) => {\n                    var isPickup = false;\n                    if ($event.SelectedPickups.length > 0) {\n                        var trips = sche.Trips;\n                        trips != undefined && trips != null &&\n                            trips.map((trip, tripIdx) => {\n                                var code = \"\";\n                                var isExit = false;\n                                if (!isExit) {\n                                    if (trip.IsCommonPickup) {\n                                        if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                                            code = trip.BulkPlant.SiteName;\n                                        }\n                                        else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                                            code = trip.Terminal.Id.toString();\n                                        }\n                                    }\n                                    else {\n                                        trip.DeliveryRequests.map((dr, drIdx) => {\n                                            if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                                                code = dr.BulkPlant.SiteName;\n                                            }\n                                            else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                                                code = dr.Terminal.Id.toString();\n                                            }\n                                        });\n                                    }\n                                    if (code != undefined && code != \"\") {\n                                        var pickup = $event.SelectedPickups.some(pick => pick.Code == code.replace(' ', ''));\n                                        if (pickup) {\n                                            isExit = true;\n                                            isPickup = true;\n                                        }\n                                    }\n                                }\n                            });\n                    }\n\n                    var isDriver = sche.Drivers.filter(d => $event.SelectedDrivers.some(driver => driver.Id == d.Id)).length > 0;\n                    var isTrailer = sche.Trailers.filter(t => $event.SelectedTrailers.some(trailer => trailer.Id == t.Id)).length > 0;\n                    var isShowShift = false;\n                    if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isTrailer && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isTrailer) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver && isTrailer) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isTrailer && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isPickup) {\n                            isShowShift = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedTrailers.length == 0 && $event.SelectedPickups.length == 0) {\n                        isShowShift = true;\n                    }\n\n                    if (isShowShift) {\n                        this.DriverViewFilter.Shifts[shiftIndex + \"-\" + scheduleIdx] = true;\n                    }\n                    else {\n                        this.DriverViewFilter.Shifts[shiftIndex + \"-\" + scheduleIdx] = false;\n                    }\n                });\n            shiftIndex++;\n        }\n    }\n\n    async filterTrailerView($event) {\n        this.TrailerViewFilter = new TrailerViewFilterModel;\n        var trailers = this.SbForm.get('Trailers').value;\n        if (trailers == null || trailers == undefined || trailers.length == 0) {\n            return;\n        }\n        if ($event.SelectedTrailers.length == 0 && $event.SelectedDrivers.length == 0 && $event.SelectedPickups.length == 0) {\n            return;\n        }\n\n        var trailerIdx = 0;\n        for (let trailer of trailers) {\n            var shifts = trailer.Shifts;\n            await shifts != undefined && shifts != null &&\n                shifts.map((shift, shiftIdx) => {\n                    var trips = shift.Trips;\n                    var isExitLoop = false;\n                    var isPickup = false;\n                    var isDriver = false;\n                    trips != undefined && trips != null &&\n                        trips.map((trip, tripIdx) => {\n                            if ($event.SelectedDrivers.length > 0) {\n                                if (!isExitLoop) {\n                                    var drivers = trip.Drivers;\n                                    var driver = drivers.filter(d => $event.SelectedDrivers.some(driver => driver.Id == d.Id));\n                                    if (driver != null && driver.length > 0) {\n                                        isExitLoop = true;\n                                        isDriver = true;\n                                    }\n                                }\n                            }\n\n                            var code = \"\";\n                            if ($event.SelectedPickups.length > 0) {\n                                if (!isExitLoop) {\n                                    if (trip.IsCommonPickup) {\n                                        if (trip.PickupLocationType == PickupLocationType.BulkPlant) {\n                                            code = trip.BulkPlant.SiteName;\n                                        }\n                                        else if (trip.PickupLocationType == PickupLocationType.Terminal) {\n                                            code = trip.Terminal.Id.toString();\n                                        }\n                                    }\n                                    else {\n                                        trip.DeliveryRequests.map((dr, drIdx) => {\n                                            if (dr.PickupLocationType == PickupLocationType.BulkPlant) {\n                                                code = dr.BulkPlant.SiteName;\n                                            }\n                                            else if (dr.PickupLocationType == PickupLocationType.Terminal) {\n                                                code = dr.Terminal.Id.toString();\n                                            }\n                                        });\n                                    }\n\n                                    if (code != undefined && code != \"\") {\n                                        var pickup = $event.SelectedPickups.some(pick => pick.Code == code.replace(' ', ''));\n                                        if (pickup) {\n                                            isExitLoop = true;\n                                            isPickup = true;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n\n                    var isShiftShow = false;\n                    if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length > 0) {\n                        if (isDriver && isPickup) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length > 0 && $event.SelectedPickups.length == 0) {\n                        if (isDriver) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedPickups.length > 0) {\n                        if (isPickup) {\n                            isShiftShow = true;\n                        }\n                    }\n                    else if ($event.SelectedDrivers.length == 0 && $event.SelectedPickups.length == 0) {\n                        isShiftShow = true;\n                    }\n\n                    if (isShiftShow)\n                        this.TrailerViewFilter.Shifts[trailerIdx + \"-\" + shiftIdx] = true;\n                    else\n                        this.TrailerViewFilter.Shifts[trailerIdx + \"-\" + shiftIdx] = false;\n                });\n\n            if ($event.SelectedTrailers.length > 0) {\n                var trail = $event.SelectedTrailers.some(tr => tr.Id == trailer.Id);\n                if (!trail) {\n                    this.TrailerViewFilter.Trailers[trailerIdx] = false;\n                }\n                else {\n                    this.TrailerViewFilter.Trailers[trailerIdx] = true;\n                }\n            }\n            trailerIdx++;\n        }\n    }\n\n    IntializeChat(driverId) {\n        this.sendbirdComponent.IntializeDriverChat(driverId, this.SelectedRegionId);\n    }\n    LoadDriverDetails(driverViewShifts: ScheduleShiftModel[]) {\n        let driverinfo = [];\n        driverViewShifts.forEach(xshiftItem => {\n            var items = xshiftItem.Schedules.filter(top => top.Drivers.length > 0);\n            items.forEach(driverItem => {\n                driverItem.Drivers.forEach(drItem => {\n                    if (driverinfo.findIndex(top => top === drItem.Id) === -1) {\n                        driverinfo.push(drItem.Id);\n                    }\n                });\n\n            });\n        });\n        return driverinfo;\n    }\n    LoadDriverDetailsShift(driverViewShifts: TrailerViewModel[]) {\n        let driverinfo = [];\n        driverViewShifts.forEach(xshiftItem => {\n            if (xshiftItem.Shifts.length > 0) {\n                xshiftItem.Shifts.forEach(shiftItem => {\n                    var items = shiftItem.Trips.filter(top => top.Drivers.length > 0);\n                    items.forEach(driverItem => {\n                        driverItem.Drivers.forEach(drItem => {\n                            if (driverinfo.findIndex(top => top === drItem.Id) === -1) {\n                                driverinfo.push(drItem.Id);\n                            }\n                        });\n\n                    });\n                });\n            }\n        });\n        return driverinfo;\n    }\n    IntializeSendBirdAccount(driverInfo: any[], regionId) {\n        this.sendbirdComponent.IntializeChatDefault(driverInfo, regionId);\n    }\n\n    updateFiltersFromLocalStorage(): void {\n        let _regionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\n        if (_regionId != '') {\n            this.ScheduleBuilderFilters.RegionId = _regionId;\n        }\n        let _dateFilter = MyLocalStorage.getData(MyLocalStorage.DSB_DATEFILTER_KEY);\n        if (_dateFilter != '') {\n            this.ScheduleBuilderFilters.DateFilter = _dateFilter;\n        }\n        let _objectFilter = MyLocalStorage.getData(MyLocalStorage.DSB_OBJECTFILTER_KEY);\n        if (_objectFilter != '') {\n            this.ScheduleBuilderFilters.ObjectFilter = _objectFilter;\n        }\n        let _windowFilter = MyLocalStorage.getData(MyLocalStorage.DSB_WINDOWMODE_KEY);\n        if (_windowFilter != '') {\n            this.ScheduleBuilderFilters.WindowMode = _windowFilter;\n        }\n        let _date = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\n        if (_date != '') {\n            this.ScheduleBuilderFilters.Date = _date;\n        }\n        let _dsbViewFilter = MyLocalStorage.getData(MyLocalStorage.DSB_FILTER_KEY);\n        if (_dsbViewFilter != '') {\n            this.ScheduleBuilderFilters.DSBFilter = _dsbViewFilter;\n        }\n        this.disableControlsonLoad();\n    }\n\n    disableControlsonLoad() {\n        if (this.ScheduleBuilderFilters.DateFilter == 1) {\n            this.disableControl = false;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 2) {\n            this.disableControl = false;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 3) {\n            let status = this.disableControls(this.ScheduleBuilderFilters.Date);\n            this.disableControl = status;\n        }\n        else if (this.ScheduleBuilderFilters.DateFilter == 4) {\n            this.disableControl = true;\n        }\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        this.dataService.setDisableDSBControls(this.disableControl);\n    }\n\n    onRedirectWallyBoardPage() {\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        let date = this.SbForm.get('Date').value;\n        let selectedDate = moment(date).format('MM/DD/YYYY');\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, selectedDate);\n        window.open(\"/Dispatcher/Dashboard\", \"_blank\");\n    }\n\n    setReadOnlyControlsValue() {\n        MyLocalStorage.setData(MyLocalStorage.DSB_READONLY_KEY, this.disableControl);\n        MyLocalStorage.setData(MyLocalStorage.DSB_REGION_KEY, this.SelectedRegionId);\n        MyLocalStorage.setData(MyLocalStorage.DSB_DATE_KEY, this.SbForm.get('Date').value);\n    }\n\n    setRegionForRoute() {\n        this.routeInfoComponent.setRegionId(currentUserCompanyId, this.SelectedRegionId);\n    }\n\n    private getOttoSetting(): void {\n        this.IsOttoBuilderOpened = false;\n        this.isDisplayOttoButton = false;\n        this.sbService.getOttoSetting().subscribe(data => {\n            if (data.StatusCode == 0) {\n                this.isDisplayOttoButton = true;\n            }\n        });\n        this.dataService.OpenDsbOttoBuilderSubject.subscribe(x => {\n            this.IsOttoBuilderOpened = x;\n            if (!x) {\n                Declarations.closeSlidePanel();\n            }\n        });\n        this.dataService.RefreshDsbOttoBuilderSubject.subscribe(x => {\n            if (x) {\n                this.refreshScheduleBuilder(this.ScheduleBuilderFilters.RegionId, this.ScheduleBuilderFilters.Date, this.ScheduleBuilderFilters.ObjectFilter, this.ScheduleBuilderFilters.DSBFilter, this.initScheduleBuilder);\n            }\n        });\n    }\n\n    public openOttoBuilder(): void {\n        this.IsOttoBuilderOpened = true;\n    }\n    public openOttoNotification(): void {\n        this.IsOttoNotificationOpened = true;\n    }\n    public getOttoNotificationCount() {\n        this.sbService.getOttoNotificationCount(this.SelectedRegionId)\n            .subscribe(detail => {\n                if (detail.StatusCode == 0) {\n                    this.OttoNotificationCount = detail.OttoNotificationCount;\n                }\n                else {\n                    this.OttoNotificationCount = 0;\n                }\n            });\n    }\n    onDSBFilterChange(filter: number): void {\n        this.resetSbFilter();\n        this.ScheduleBuilderFilters.DSBFilter = filter;\n        MyLocalStorage.setData(MyLocalStorage.DSB_FILTER_KEY, filter);\n        let _dSBFilter = this.SbForm.get('DSBFilter');\n        if (_dSBFilter.value != filter) {\n            _dSBFilter.setValue(filter);\n        }\n    }\n    onShiftsSelect(shift: any) {\n        if (shift != null && shift.ShiftInfo != '') {\n            var shiftStartInfo = shift.ShiftInfo.split('-')[1].trim();\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                let shiftId = x.get('Id').value;\n                let startTime = x.get('StartTime').value;\n                if (shiftId == shift.Id && startTime == shiftStartInfo) {\n                    x.get('IsVisible').patchValue(true);\n                }\n            });\n            if (this.regionDSBModel != null) {\n                var shiftInfo = this.regionDSBModel.DSBShiftInfo.findIndex(x => x.Id == shift.Id);\n                if (shiftInfo == -1) {\n                    var shiftmodel = new ShiftViewModel();\n                    shiftmodel.Id = shift.Id;\n                    shiftmodel.ShiftInfo = shift.ShiftInfo;\n                    this.regionDSBModel.DSBShiftInfo.push(shiftmodel);\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n            }\n        }\n\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsDeSelect(shift: any) {\n        if (shift != null && shift.ShiftInfo != '') {\n            var shiftStartInfo = shift.ShiftInfo.split('-')[1].trim();\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                let shiftId = x.get('Id').value;\n                let startTime = x.get('StartTime').value;\n                if (shiftId == shift.Id && startTime == shiftStartInfo) {\n                    x.get('IsVisible').patchValue(false);\n                }\n            });\n            if (this.regionDSBModel != null) {\n                var shiftInfo = this.regionDSBModel.DSBShiftInfo.findIndex(x => x.Id == shift.Id);\n                if (shiftInfo >= 0) {\n                    this.regionDSBModel.DSBShiftInfo.splice(shiftInfo, 1);\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n            }\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsSelectAll() {\n        let DSBShiftInfo: ShiftViewModel[] = [];\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            x.get('IsVisible').patchValue(true);\n            let shiftViewModel = new ShiftViewModel();\n            shiftViewModel.Id = x.get('Id').value;\n            var shiftInfo = this.Shifts.find(x => x.Id == shiftViewModel.Id);\n            if (shiftInfo != null) {\n                shiftViewModel.ShiftInfo = shiftInfo.ShiftInfo;\n            }\n            DSBShiftInfo.push(shiftViewModel);\n        });\n        if (this.regionDSBModel != null) {\n            this.regionDSBModel.DSBShiftInfo = DSBShiftInfo;\n            var filterModel = JSON.stringify(this.regionDSBModel);\n            this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                if (res) {\n\n                }\n            });\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    onShiftsDeSelectAll() {\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(x => {\n            x.get('IsVisible').patchValue(false);\n        });\n        if (this.regionDSBModel != null) {\n            this.regionDSBModel.DSBShiftInfo = [];\n            var filterModel = JSON.stringify(this.regionDSBModel);\n            this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                if (res) {\n\n                }\n            });\n        }\n        this.dataService.setShiftVisibility(true);\n    }\n    getShiftInformation(shiftInfo: ScheduleShiftModel[], regionId: string) {\n        this._loadingBuilder = true;\n        this.regionDSBModel.RegionId = regionId;\n        this.regionDSBModel.DSBShiftInfo = [];\n        this.dispatcherService.getDSBShiftFilters(TfxModule.DSBShift, regionId).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n            if (shiftInfo.length > 0) {\n                this.Shifts = [];\n                shiftInfo.forEach(x => {\n                    var shiftExists = this.Shifts.findIndex(top => top.Id == x.Id);\n                    if (shiftExists == -1) {\n                        var shiftModel = new ShiftViewModel();\n                        shiftModel.Id = x.Id;\n                        shiftModel.ShiftInfo = \"Shift - \" + x.StartTime + \" - \" + x.EndTime;\n                        shiftModel.StartTime = x.StartTime;\n                        shiftModel.EndTime = x.EndTime;\n                        this.Shifts.push(shiftModel);\n                    }\n                });\n                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                if (this.regionDSBModel != null && this.regionDSBModel.DSBShiftInfo.length > 0) {\n                    var shiftChangeDetect = false;\n                    this.regionDSBModel.DSBShiftInfo.forEach(x => {\n                        var shiftExists = this.Shifts.find(x1 => x1.Id == x.Id);\n                        if (shiftExists == null) {\n                            shiftChangeDetect = true;\n                            return;\n                        }\n                    });\n                    if (shiftChangeDetect) {\n                        this.regionDSBModel.DSBShiftInfo = this.Shifts;\n                        var filterModel = JSON.stringify(this.regionDSBModel);\n                        this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                            if (res) {\n\n                            }\n                        });\n                        this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                    }\n                    else {\n                        this.SbForm.get('SelectedShifts').patchValue(this.regionDSBModel.DSBShiftInfo);\n                    }\n                }\n                else {\n                    this.regionDSBModel.DSBShiftInfo = this.Shifts;\n                    var filterModel = JSON.stringify(this.regionDSBModel);\n                    this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                        if (res) {\n\n                        }\n                    });\n                }\n\n            }\n            else {\n                this.Shifts = [];\n                this.SbForm.get('SelectedShifts').patchValue(this.Shifts);\n                this.regionDSBModel.DSBShiftInfo = [];\n                var filterModel = JSON.stringify(this.regionDSBModel);\n                this.dispatcherService.postFiltersData(TfxModule.DSBShift, filterModel).subscribe(res => {\n                    if (res) {\n                    }\n                });\n            }\n            let _shifts = this.SbForm.get('Shifts') as FormArray;\n            _shifts.controls.forEach(x => {\n                if (this.regionDSBModel.DSBShiftInfo.length > 0) {\n                    var shiftIndex = this.regionDSBModel.DSBShiftInfo.findIndex(x1 => x1.Id == x.get('Id').value);\n                    if (shiftIndex >= 0) {\n                        x.get('IsVisible').patchValue(true);\n                    }\n                    else {\n                        x.get('IsVisible').patchValue(false);\n                    }\n                }\n                else {\n                    x.get('IsVisible').patchValue(true);\n                }\n            });\n            this._loadingBuilder = false;\n        });\n\n    }\n    onApplyGridViewFilter($event) {\n        if ($event.SearchLocation == undefined)\n            $event.SearchLocation = '';\n        let sbViewId = this.SbForm.get('ObjectFilter').value;\n        if (sbViewId == 1) {\n            // driver view\n            this.filterGridViewDriverView($event)\n        }\n\n    }\n    filterGridViewDriverView($event) {\n        var searchLocation = $event.SearchLocation;\n        let data = {\n            searchLocation: searchLocation\n        }\n        this.dataService.setGridViewSearch(data);\n\n\n    }\n    openDRReportGrid() {\n        window.open(\"Carrier/ScheduleBuilder/DeliveryRequestsReport\", \"_blank\");\n    }\n    // assign dr start\n    getOrdersAndCarrierDetails(delReq: DeliveryRequestViewModel): void {\n\n        document.getElementById('openAssignCarrierRequestModal').click();\n        this.requestToBroker = delReq;\n        this._loadingCarriers = true;\n        this.OrderList = [];\n\n        this.sbService.getAssignCarrierDetails(delReq.CreatedByRegionId, delReq.JobId, delReq.ProductTypeId).subscribe(data => {\n            this._loadingCarriers = false;\n            if (data != null && data != undefined) {\n                this.setCarrierRegions(data.CarrierDetails);\n                if (data.OrderDetails && data.OrderDetails.length > 0) {\n                    this.OrderList = data.OrderDetails;\n                    this.AssignDrForm.controls.BrokerOrderId.setValue(this.OrderList[0].Id);\n                    this.AssignDrForm.controls.DispatcherNote.setValue(this.OrderList[0].DRNote);\n                }\n                if (delReq.OrderId != null) {\n                    this.OrderList = this.OrderList.filter(top => top.Id == delReq.OrderId);\n                    if (this.OrderList.length > 0) {\n                        this.AssignDrForm.controls.BrokerOrderId.setValue(this.OrderList[0].Id);\n                        this.AssignDrForm.controls.DispatcherNote.setValue(this.OrderList[0].DRNote);\n                    }\n                }\n            }\n        });\n    }\n    getAllCarrierRegions() {\n        if (this.CarrierRegions.length > 0)\n            return false;\n        this.CarrierRegions = [];\n        this.regionService.getCarrierRegions().subscribe(response => {\n            if (response && response.length > 0) {\n                this.CarrierRegions = response;\n            }\n        });\n    }\n\n    onCarrierSelect(data: any, isSelect: boolean) {\n        if (isSelect) {\n            let selection = this.CarrierRegions.find(c => c.Id == data.Id);\n            if (selection) {\n                let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n                _formArray.push(this.fb.group({\n                    Id: this.fb.control(selection.Id),\n                    Name: this.fb.control(selection.Name),\n                    RegionId: this.fb.control(null, [Validators.required]),\n                    SequenceNo: this.fb.control(null),\n                }));\n            }\n        }\n        else {\n            let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n            _formArray.removeAt(_formArray.value.findIndex(carr => carr.Id == data.Id));\n        }\n    }\n    public onCarrierSelectAll(items: any, isSelect: boolean) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        if (isSelect) {\n            let existingFormCarriers = _formArray.value as any[] || [];\n            this.CarrierRegions.forEach((carrierRegion: CarrierRegionModel) => {\n                if (!existingFormCarriers.some(c => c.Id == carrierRegion.Id)) {\n                    let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n                    this.pushRowInCarrierForm(_formArray, { Id: carrierRegion.Id, Code: null, Name: carrierRegion.Name, RegionId: null, SequenceNo: null });\n                }\n            });\n        }\n        else {\n            _formArray.clear();\n        }\n    }\n    initilizeAssignDrForm() {\n        this.AssignDrForm = this.fb.group({\n            BrokerOrderId: this.fb.control(null),\n            DispatcherNote: this.fb.control(null),\n            SelectedCarrier: this.fb.control(null),\n            Carriers: this.fb.array([]),\n            DeliveryRequestWithOrder: this.fb.array([]),\n        })\n    }\n    setCarrierRegions(_carrRegions: TfxCarrierDropdownDisplayItem[]) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        _formArray.clear();\n        _carrRegions.forEach(carr => {\n            this.pushRowInCarrierForm(_formArray, carr);\n        });\n        this.AssignDrForm.get('SelectedCarrier').setValue(_formArray.value);\n        this.RegionCarriers = _formArray.value;\n        $(\"#sortableDrCarriers\").click()\n    }\n    removeCarrier(id: number) {\n        //remove from form\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        _formArray.removeAt(_formArray.value.findIndex(carr => carr.Id == id));\n        //remove from dropdown\n        let currentSelection: any[] = this.AssignDrForm.get('SelectedCarrier').value || [];\n        currentSelection.splice(currentSelection.findIndex(carr => carr.Id == id), 1);\n        this.AssignDrForm.get('SelectedCarrier').patchValue(currentSelection);\n    }\n    getRegionsByCarrierId(id: number): TfxCarrierRegionDetailsModel[] {\n        let response = []\n        let carr = this.CarrierRegions.find(f => f.Id == id);\n        if (carr != null && carr.Regions)\n            response = carr.Regions;\n        return response;\n    }\n    makeCarrierUIsortable() {\n        var _this = this;\n        $(function () {\n            let sortable: any = $(\"#sortableDrCarriers\");\n            sortable.sortable({\n                stop: function (event, ui) {\n                    var carrierIds = sortable.sortable(\"toArray\") as number[];\n                    _this.updateSequence(carrierIds); sortable.click();\n                }\n            });\n        });\n    }\n    updateSequence(carrIds: number[]) {\n        let _formArray = this.AssignDrForm.controls['Carriers'] as FormArray;\n        let carriers = _formArray.value as TfxCarrierDropdownDisplayItem[]\n        _formArray.clear();\n\n        carrIds.forEach(id => {\n            let carr = carriers.find(c => c.Id == id);\n            this.pushRowInCarrierForm(_formArray, carr);\n        });\n    }\n    pushRowInCarrierForm(_formArray: FormArray, data: TfxCarrierDropdownDisplayItem) {\n        _formArray.push(this.fb.group({\n            Id: this.fb.control(data.Id),\n            Name: this.fb.control(data.Name),\n            RegionId: this.fb.control(this.CarrierRegions.some(f => f.Regions.some(r => r.Id == data.RegionId)) ? data.RegionId : null, [Validators.required]),\n            SequenceNo: this.fb.control(data.SequenceNo),\n        }));\n    }\n    SaveAssignCarrierDetails(): void {\n\n        let assignDrModel = this.AssignDrForm.value;\n        if (assignDrModel.Carriers && assignDrModel.Carriers.length > 0) {\n            assignDrModel.Carriers.forEach((carr, index: number) => {\n                carr.SequenceNo = (index + 1)\n            })\n        }\n        if (assignDrModel.Carriers.length > 0) {\n            let model = new DeliveryRequestBrokerInfoViewModel();\n            model.CarrierRegionId = assignDrModel.Carriers[0].RegionId;\n            model.CarrierCompanyId = assignDrModel.Carriers[0].Id;\n            model.DeliveryRequest = this.requestToBroker;\n            model.OrderId = assignDrModel.BrokerOrderId;\n            model.DispatcherNote = assignDrModel.DispatcherNote;\n            model.CarrierInfo = assignDrModel.Carriers;\n            model.CarrierInfoJson = JSON.stringify(assignDrModel.Carriers);\n            model.IsDispatchRetainedByCustomer = false;\n            model.BlendedGroupId = this.requestToBroker.BlendedGroupId;\n            var orderInfo = this.OrderList.find(top => top.Id == assignDrModel.BrokerOrderId);\n            if (orderInfo != null && orderInfo.Code == \"1\") {\n                model.IsDispatchRetainedByCustomer = true;\n            }\n\n            this._loadingCarriers = true;\n            this.sbService.BrokerDeliveryRequestToCarrier(model).subscribe(data => {\n                Declarations.hideModal('#assignCarrierRequestModal');\n                this._loadingCarriers = false;\n                if (data.StatusCode != 1) {\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                    this.dataService.setRemoveDroppedRequestSubject([this.requestToBroker]);\n                    this.dataService.setDrQueueChangesForFilter(true);\n                } else {\n                    Declarations.msgerror(data.StatusMessage, undefined, undefined);\n                }\n            });\n        }\n    }\n    assignDrsToCarrier() {\n        this.SbForm.get('IsAssignDrEnabled').setValue(true);\n        this.dataService.setScheduleChangeDetectSubject(true);\n        //GET ALL CARRIERS FOR REGION\n        this.getAllCarrierRegions();\n    }\n    async cancelAssignDrsToCarrier() {\n        this.SbForm.get('IsAssignDrEnabled').setValue(false);\n        let _shifts = this.SbForm.get('Shifts') as FormArray;\n        _shifts.controls.forEach(shift => {\n            let _schedules = shift.get('Schedules') as FormArray;\n            _schedules.controls.forEach(schedule => {\n                let _trips = schedule.get('Trips') as FormArray;\n                _trips.controls.forEach(trip => {\n                    let _drs = trip.get('DeliveryRequests') as FormArray;\n                    _drs.controls.forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value == true) {\n                            dr.get('IsSelectedForAssignment').setValue(false);\n                        }\n                    })\n                });\n            });\n        });\n        this.dataService.setScheduleChangeDetectSubject(true);\n    }\n    getSelectedCarriersByRegion() {\n        this.regionService.getSelectedCarriersByRegion(this.SbForm.get('RegionId').value).subscribe(response => {\n            if (response && response.length > 0) {\n                this.setCarrierRegions(response);\n            }\n        });\n    }\n\n    assignCarriersToDrs() {\n        document.getElementById('openAssignCarrierRequestModal').click();\n        //INITILIZE FORM\n        this.initilizeAssignDrForm();\n        //GET SELECTED CARRIERS IN REGION\n        this.getSelectedCarriersByRegion();\n        this.setDeliveryRequestWithOrder();\n    }\n    setDeliveryRequestWithOrder() {\n\n        //GET SELECTED DRS\n        let selectedDrs = [];\n\n        this.SbForm.get('Shifts')['controls'].forEach(shift => {\n            shift.get('Schedules')['controls'].forEach(schedule => {\n                schedule.get('Trips')['controls'].forEach(trip => {\n                    trip.get('DeliveryRequests')['controls'].forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value == true) {\n                            if (dr.get('IsBlendedRequest').value == false) {\n                                selectedDrs.push(dr.value);\n                            }\n                            else if (dr.get('IsBlendedRequest').value == true && dr.get('IsBlendedDrParent').value == true) {\n                                selectedDrs.push(dr.value);\n                            }\n\n                        }\n                    })\n                });\n            });\n        });\n\n        if (selectedDrs.length == 0) {\n            return false;\n        }\n        //GET ORDERS BY JOB AND FUEL TYPE\n        let uniqueJobAndFuelType: any[] = []\n        selectedDrs.forEach(dr => {\n            if (!uniqueJobAndFuelType.includes(x => x.JobId == dr.JobId && x.ProductTypeId == dr.ProductTypeId)) {\n                uniqueJobAndFuelType.push({ JobId: dr.JobId, ProductTypeId: dr.ProductTypeId, BlendedGroupId: dr.BlendedGroupId, IsBlendedDrParent: dr.IsBlendedDrParent, IsBlendedRequest: dr.IsBlendedRequest, IsAdditive: dr.IsAdditive, OrderId: dr.OrderId })\n            }\n        });\n\n        this._loadingCarriers = true;\n        this.sbService.getOrdersByDeliveryRequests(uniqueJobAndFuelType).subscribe((response) => {\n            this._loadingCarriers = false;\n            if (response != null && response != undefined) {\n                this.OrderList = response;\n\n                let fmArr = this.AssignDrForm.get('DeliveryRequestWithOrder') as FormArray;\n                selectedDrs.forEach(dr => {\n                    let orders = this.OrderList.filter(o => o.JobId == dr.JobId && o.FuelTypeId == dr.ProductTypeId);\n                    if (orders.length > 0) {\n                        fmArr.push(\n                            this.fb.group({\n                                DeliveryRequest: this.fb.control(dr),\n                                Orders: this.fb.control(dr.IsBlendedDrParent == false ? orders : orders.filter(x => x.Id == dr.OrderId)),\n                                OrderId: this.fb.control((dr.OrderId > 0 ? dr.OrderId : (orders.length > 0 ? orders[0].Id : null)), Validators.required)\n                            })\n                        );\n                    }\n                    if (!uniqueJobAndFuelType.includes(x => x.JobId == dr.JobId && x.ProductTypeId == dr.ProductTypeId)) {\n                        uniqueJobAndFuelType.push({ JobId: dr.JobId, ProductTypeId: dr.ProductTypeId })\n                    }\n                });\n            }\n        });\n    }\n\n    removeDrSelection(index: number, drId: string) {\n        let formArray = this.AssignDrForm.get('DeliveryRequestWithOrder') as FormArray;\n        if (formArray.length > 1 && drId) {\n            formArray.removeAt(index)\n            this.unselectDrById(drId);\n        }\n        else {\n            Declarations.msgerror(\"Minimum one delivery request is required.\", undefined, undefined);\n        }\n    }\n\n    unselectDrById(drId: string) {\n        this.SbForm.get('Shifts')['controls'].forEach(shift => {\n            shift.get('Schedules')['controls'].forEach(schedule => {\n                schedule.get('Trips')['controls'].forEach(trip => {\n                    trip.get('DeliveryRequests')['controls'].forEach(dr => {\n                        if (dr.get('IsSelectedForAssignment').value && dr.get('Id').value == drId)\n                            dr.get('IsSelectedForAssignment').setValue(false);\n                    })\n                });\n            });\n        });\n        this.dataService.setScheduleChangeDetectSubject(true);\n    }\n\n    resetLoad(trip: FormGroup) {\n        if (trip) {\n\n            let reserveValue = {\n                TripId: trip.controls['TripId'].value,\n                ShiftId: trip.controls['ShiftId'].value,\n                ShiftStartTime: trip.controls['ShiftStartTime'].value,\n                ShiftEndTime: trip.controls['ShiftEndTime'].value,\n                SlotPeriod: trip.controls['SlotPeriod'].value,\n                StartDate: trip.controls['StartDate'].value,\n                StartTime: trip.controls['StartTime'].value,\n                EndTime: trip.controls['EndTime'].value,\n                Carrier: trip.controls['Carrier'].value,\n                ShiftIndex: trip.controls['ShiftIndex'].value,\n                DriverRowIndex: trip.controls['DriverRowIndex'].value,\n                DriverColIndex: trip.controls['DriverColIndex'].value,\n                TrailerRowIndex: trip.controls['TrailerRowIndex'].value,\n                TrailerColIndex: trip.controls['TrailerColIndex'].value,\n                IsEditable: true,\n                IsPreloadDisable: false,\n                TimeStamp: trip.controls['TimeStamp'].value\n            }\n            trip.reset();\n            (trip.controls['DeliveryRequests'] as FormArray).clear();\n            trip.reset(reserveValue);\n        }\n    }\n\n    saveMultipleDrCarrierSequence() {\n\n        let formModel = this.AssignDrForm.value;\n\n        let input = new DeliveryRequestBrokerInfoViewModel();\n\n        input.ScheduleBuilderId = this.SbForm.get('Id').value;\n        input.BrokerDrModel = [];\n\n        //set carr sequence\n        if (formModel.Carriers && formModel.Carriers.length > 0) {\n            formModel.Carriers.forEach((carr, index: number) => {\n                carr.SequenceNo = (index + 1)\n            })\n        }\n        else {\n            Declarations.msgerror(\"Assign at least one carrier.\", undefined, undefined);\n            return;\n        }\n\n        formModel.DeliveryRequestWithOrder.forEach(drObj => {\n            let drDetails = new BrokerDrModel();\n            drDetails.CarrierRegionId = formModel.Carriers[0].RegionId;\n            drDetails.CarrierCompanyId = formModel.Carriers[0].Id;\n            drDetails.DeliveryRequest = drObj.DeliveryRequest;\n            drDetails.OrderId = drObj.OrderId;\n            drDetails.IsDispatchRetainedByCustomer = false;\n            drDetails.BlendedGroupId = drDetails.DeliveryRequest.BlendedGroupId;\n            if (drDetails.BlendedGroupId != '' || drDetails.BlendedGroupId != null) {\n                drDetails.IsBlendedGroupProduct = true;\n            }\n            var orderInfo = this.OrderList.find(top => top.Id == drObj.OrderId);\n            if (orderInfo != null && orderInfo.Code == \"1\")\n                drDetails.IsDispatchRetainedByCustomer = true;\n            var checkBlendedProduct = input.BrokerDrModel.filter(x => x.IsBlendedGroupProduct == true);\n            if (checkBlendedProduct) {\n                var blendedDRExists = input.BrokerDrModel.find(x => x.BlendedGroupId == drDetails.BlendedGroupId);\n                if (blendedDRExists == null) {\n                    input.BrokerDrModel.push(drDetails);\n                }\n            }\n            else {\n                input.BrokerDrModel.push(drDetails);\n            }\n        });\n\n        input.DispatcherNote = formModel.DispatcherNote;\n        input.CarrierInfo = formModel.Carriers;\n        input.CarrierInfoJson = JSON.stringify(formModel.Carriers);\n\n        this._loadingCarriers = true;\n        this.sbService.BrokerDeliveryRequestsToCarriers(input).subscribe(data => {\n            Declarations.hideModal('#assignCarrierRequestModal');\n            this._loadingCarriers = false;\n            if (data && data.StatusCode != 1) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                //REMOVE DR FROM DSB FORM\n                this.SbForm.get('Shifts')['controls'].forEach((shift: FormGroup) => {\n                    shift.get('Schedules')['controls'].forEach((schedule: FormGroup) => {\n                        schedule.get('Trips')['controls'].forEach((trip: FormGroup) => {\n                            if (trip.get('DeliveryRequests')['controls'].length > 0) {\n\n                                let allDrs = trip.get('DeliveryRequests').value as any[];\n                                let existingDrs = allDrs.filter(dr => dr.IsSelectedForAssignment != true);\n\n                                let deliveryRequests = trip.get('DeliveryRequests') as FormArray;\n                                deliveryRequests.clear();\n\n                                if (existingDrs.length > 0) {\n\n                                    existingDrs = sortArrayTwice(existingDrs, 'JobId', 'ProductSequence');\n                                    existingDrs.forEach(x => {\n                                        var _form = this.utilService.getDeliveryRequestForm(x, trip.get('IsCommonPickup').value);\n                                        deliveryRequests.push(_form);\n                                    });\n                                }\n                                else {\n                                    this.resetLoad(trip);\n                                }\n                            }\n                        });\n                    });\n                });\n                this.dataService.setScheduleChangeDetectSubject(true);\n            } else {\n                Declarations.msgerror(data.StatusMessage, undefined, undefined);\n            }\n            this.cancelAssignDrsToCarrier();\n        });\n    }\n    // assign dr end   \n\n    //Add Drop location   \n\n    clearDropLocationControls() {\n        this.Orders = [];\n        this.SiteList = [];\n        this.companyList = [];\n        this.selectedOrder = [];\n        this.selectedCustomer = [];\n        this.selectedSite = [];\n    }\n\n    getDropLocationDetails(tdr: FormGroup): void {\n        this.CurrentDr = tdr;\n        this.SelectedFuelId = tdr.controls['FuelTypeId'].value;\n        let productTypeId = tdr.controls['ProductTypeId'].value;\n        let dr = tdr.value as DeliveryRequestViewModel;\n        let terminalId = null, bulkplantId = null;\n        if ((dr.BadgeNo1 == null || dr.BadgeNo1 == '') && (dr.BadgeNo2 == null || dr.BadgeNo2 == '') && (dr.BadgeNo3 == null || dr.BadgeNo3 == '')) {\n            if (dr.Terminal && dr.Terminal.Id > 0) {\n                terminalId = dr.Terminal.Id;\n            }\n            if (dr.BulkPlant && dr.BulkPlant.SiteId > 0) {\n                bulkplantId = dr.BulkPlant.SiteId;\n            }\n        }\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\n            this.sbService.getJobDetailsWithOrders(this.SelectedRegionId, this.SelectedFuelId, productTypeId, terminalId, bulkplantId, this.SbForm.get('Date').value).subscribe(response => {\n                if (response) {\n                    this.drOrders = response as JobDetailsWithOrders[];\n                    this.companyList = response.map((element) => ({ CompanyId: element.CompanyId, CompanyName: element.CompanyName }));\n                    this.companyList = this.GetUniqueLocations(this.companyList.reduce((p, n) => p.concat(n), []));\n                    this.SiteList = response.map((element) => ({ Id: element.JobId, Name: element.JobName }));\n                    this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n                }\n                else {\n                    Declarations.msgerror('No order exists for this fuel type', 'error', 2500)\n                }\n            });\n        }\n    }\n\n    public onSiteSelect(item: any): void {\n        this.SelectedLocationId = item.Id\n        let orders = this.drOrders.filter(t => t.JobId == item.Id);\n        if (orders && orders.length > 0) {\n            this.Orders = orders.map((element) => ({ Id: element.OrderId, Name: element.PoNumber }));;\n        }\n    }\n\n    public onSiteDeSelect(item: DropdownItem): void {\n        this.Orders = [];\n    }\n\n    public onCustomerSelect(item: any): void {\n        this.selectedSite = [];\n        this.selectedOrder = [];\n        this.SelectedCustomerId = item.CompanyId;\n        this.SiteList = this.drOrders.filter(x => x.CompanyId == item.CompanyId).map((element) => ({ Id: element.JobId, Name: element.JobName }));\n        this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n    }\n\n    public onCustomerDeSelect(item: any): void {\n        this.SelectedCustomerId = null;\n        this.selectedSite = [];\n        this.selectedOrder = [];\n        this.SiteList = this.drOrders.map((element) => ({ Id: element.JobId, Name: element.JobName }));\n        this.SiteList = this.GetUniqueLocations(this.SiteList.reduce((p, n) => p.concat(n), []));\n    }\n\n    GetUniqueLocations(items) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\n    }\n\n    GetUniqueCustomers(items) {\n        const ids = [];\n        var uniqueItems = items.filter(item => ids.includes(item.CompanyId) ? false : ids.push(item.CompanyId));\n        return uniqueItems.sort((a, b) => a.CompanyName.localeCompare(b.CompanyName));\n    }\n\n    AddDropLocation() {\n        if (this.selectedOrder.length <= 0) {\n            Declarations.msgerror('please select order', 'Validation', 2500);\n            return false;\n        }\n        let order = this.drOrders.filter(t => t.OrderId == this.selectedOrder[0].Id)[0];\n        if (order) {\n            this.CurrentDr.get('JobId').setValue(order.JobId);\n            this.CurrentDr.get('OrderId').setValue(order.OrderId);\n            this.CurrentDr.get('JobName').setValue(order.JobName);\n            this.CurrentDr.get('JobAddress').setValue(order.Address);\n            this.CurrentDr.get('JobCity').setValue(order.City)\n            this.CurrentDr.get('UoM').setValue(order.UoM);\n            this.CurrentDr.get('CustomerCompany').setValue(order.CompanyName);\n            this._loadingDrRequests = true;\n            let input = this.CurrentDr.value as DeliveryRequestViewModel;\n            this.carrierService.updateDeliveryRequest([input])\n                .subscribe((data: any) => {\n                    this._loadingDrRequests = false;\n                    if (data.StatusCode == 0) {\n                        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                        var elem = document.getElementById('TBD-Drop-location-Close-popUp'); elem.click();\n                        this.carrierService.getDeliveryRequestById(this.CurrentDr.value.ParentId).subscribe(x => {\n                            if (order.JobId && x.TrackableScheduleId != null) {\n                                let dropUrl = '/Supplier/Invoice/CreateNew?orderId=' + order.OrderId + '&trackableScheduleId=' + x.TrackableScheduleId;\n                                window.location.href = dropUrl;\n                            }\n                        })\n                    }\n                });\n        }\n    }\n    SetFilters(input: any) {\n        this.regionDSBModel = JSON.parse(input);\n    }\n    addSpiltDR() {\n        if (this.requestToUpdate != null) {\n            this.requestToUpdate.IsSpiltDRAdded = true;\n            let spiltDRModel = new SpiltDRsModel();\n            spiltDRModel.ScheduleQuantityType = 1;\n            this.requestToUpdate.SpiltDRs.push(spiltDRModel);\n        }\n    }\n    openCalendarView() {\n        window.location.href = '/Carrier/Calendar';\n    }\n\n    //LOCATION SEQUENCING IN LOAD\n    public _loader: boolean = false;\n    public TripLocations: any[] = [];\n    //public LoadLocationsequence: string[] = [];\n    public _isSequencePanelInitiated: boolean = false;\n    private locationsequenceSubscription: Subscription = new Subscription();\n    public _locSequenceOpened: boolean = false;\n    public loadForSequence: FormGroup;\n    public lat = 47.962741;\n    public long = -96.050422;\n\n    subscribeLoadLocationSequenceSubject() {\n\n        this.locationsequenceSubscription = this.dataService.LoadLocationSequenceSubject.subscribe(tripFormGroup => {\n            if (tripFormGroup) {\n\n                this.TripLocations = [];\n                this.loadForSequence = tripFormGroup;\n                let drs = tripFormGroup.controls['DeliveryRequests'].value as DeliveryRequestViewModel[];\n\n                if (drs && drs.length > 1) {\n\n                    let uniqueByJobId = [...new Map(drs.map((item) => [item.JobId, item])).values()];\n                    let uniqueByTbdGroupId = [...new Map(drs.map((item) => [item.TBDGroupId, item])).values()];\n                    //remove null values\n                    uniqueByJobId = uniqueByJobId.filter(j => j.JobId);\n                    uniqueByTbdGroupId = uniqueByTbdGroupId.filter(j => j.TBDGroupId);\n                    //set default sequence\n                    uniqueByJobId.forEach((element, index) => {\n                        element['Sequence'] = (+index + 1).toString();\n                    });\n                    uniqueByTbdGroupId.forEach((element) => {\n                        element['Sequence'] = '999';\n                    });\n                    uniqueByTbdGroupId = uniqueByTbdGroupId.filter(j => j.TBDGroupId && !j.JobId);//0, null, undefined\n\n                    if (uniqueByJobId && uniqueByJobId.length > 1) {\n\n                        this.TripLocations = [...uniqueByJobId, ...uniqueByTbdGroupId];\n                        let jobIds = uniqueByJobId.map(item => item.JobId) as number[];\n\n                        if (jobIds && jobIds.length > 1) {\n\n                            this.openPanel();\n                            this._loader = true;\n\n                            this.sbService.getJobCoordinates(jobIds).subscribe(data => {\n                                this._loader = false;\n\n                                if (data && data.length > 0) {\n                                    data.forEach((element, index) => {\n                                        let _location = this.TripLocations.find(loc => loc.JobId == element.JobId);\n                                        if (_location) {\n                                            _location.Latitude = element.Latitude;\n                                            _location.Longitude = element.Longitude;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    openPanel() {\n        this._locSequenceOpened = true;\n        if (!this._isSequencePanelInitiated) {\n            this._isSequencePanelInitiated = true;\n        }\n        this.makeLocationsSrtable();\n    }\n\n    makeLocationsSrtable() {\n        var _this = this;\n        $(function () {\n            let sortable: any = $(\"#sortableLocations\");\n            sortable.sortable({\n                stop: (event, ui) => {\n                    let locationIds = sortable.sortable(\"toArray\") as string[];\n\n                    if (locationIds && locationIds.length > 0) {\n\n                        locationIds.forEach((locId, index) => {\n                            let _location = _this.TripLocations.find(loc => loc.JobId == locId);\n                            if (_location) {\n                                _location.Sequence = (+index + 1).toString();\n                            }\n                        });\n                    }\n                    sortable.click();\n                }\n            });\n        });\n    }\n\n\n    saveLocationSequence() {\n\n        this._locSequenceOpened = false;\n        this.TripLocations = sortBy(this.TripLocations, 'Sequence');\n        let data = { JobIds: this.TripLocations, trip: this.loadForSequence };\n        this.dataService.setDispatcherLoadDragDropMapSubject(data);\n    }\n}\n\n\n\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DeliveryRequestService {\n    localStroageData: any;\n    localStroage: BehaviorSubject<any>;\r\n    QueueIcon: any;\r\n    localQueueIcon: BehaviorSubject<any>;\r\n\r\n\r\n    smallLoader: any;\r\n    smallLoaderBeh: BehaviorSubject<any>;\r\n\r\n    constructor() {\r\n        this.localStroage = new BehaviorSubject(this.localStroageData);\r\n        this.localQueueIcon = new BehaviorSubject(this.QueueIcon);\r\n        this.smallLoaderBeh = new BehaviorSubject(this.smallLoader);\r\n    }\r\n\r\n    pushItemData(dr: any) {\r\n        this.localStroage.next(dr);\r\n    }\r\n    ToggleQueueIcon(status: any) {\r\n        this.localQueueIcon.next(status);\r\n    }\r\n    displayLoader(status: any) {\r\n        this.smallLoaderBeh.next(status);\r\n    }\r\n}"]}