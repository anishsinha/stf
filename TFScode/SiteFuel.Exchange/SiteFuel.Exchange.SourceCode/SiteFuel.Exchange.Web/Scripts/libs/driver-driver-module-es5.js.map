{"version":3,"sources":["webpack:///src/app/driver/create-driver-schedule/create-driver-schedule.component.html","webpack:///src/app/driver/create-driver-schedule/create-driver-schedule.component.ts","webpack:///src/app/driver/create-region-schedule/create-region.component.html","webpack:///src/app/driver/create-region-schedule/create-region.component.ts","webpack:///src/app/driver/create-trailer-schedule/create-trailer-schedule.component.html","webpack:///src/app/driver/create-trailer-schedule/create-trailer-schedule.component.ts","webpack:///src/app/driver/driver-management/create-driver/create-driver.component.ts","webpack:///src/app/driver/driver-management/create-driver/create-driver.component.html","webpack:///src/app/driver/driver-management/driver-management.component.ts","webpack:///src/app/driver/driver-management/driver-management.component.html","webpack:///src/app/driver/driver-management/view-driver/view-driver.component.html","webpack:///src/app/driver/driver-management/view-driver/view-driver.component.ts","webpack:///src/app/driver/driver-routing.module.ts","webpack:///src/app/driver/driver-schedule-calender/driver-schedule-calender.component.html","webpack:///src/app/driver/driver-schedule-calender/driver-schedule-calender.component.ts","webpack:///src/app/driver/driver.module.ts","webpack:///src/app/driver/driver/driver.component.ts","webpack:///src/app/driver/driver/driver.component.html","webpack:///src/app/driver/models/DriverManagementModel.ts","webpack:///src/app/driver/models/DriverSchedule.ts","webpack:///src/app/driver/models/TrailerSchedule.ts","webpack:///src/app/driver/models/regionSchedule.ts","webpack:///src/app/driver/services/driver.service.ts"],"names":["CreateDriverScheduleComponent","regionService","_fb","OnScheduleAdded","DriverList","regionList","isLoading","_opened","_animate","_positionNum","_POSITIONS","SelectedShiftList","ShiftList","SelectedScheduleDriverList","RepeatList","DateList","MinStartDate","Date","MaxStartDate","DriverShiftDetailList","init","getRegions","createScheduleForm","setMonth","getMonth","multiselectDriverSettingsById","singleSelection","idField","textField","itemsShowLimit","allowSearchFilter","enableCheckAll","multiselectShiftSettingsById","multiselectRepeatSettingsById","multiselectDateSettingsById","DriverScheduleForm","group","id","shiftId","required","regionId","type","driverId","fromDate","toDate","repeat","customDates","dt","controls","setValue","format","shouldOpen","subscribe","region","getRegionDropDwn","Regions","$event","find","f","Id","tDate","setFromDate","Drivers","Shifts","map","res","Name","StartTime","EndTime","name","result","get","invalid","dirty","touched","errors","event","d","value","_fromDate","_toDate","InitializeDates","validateShiftForDriver","days","setDate","getDate","getDay","push","markAllAsTouched","msgerror","undefined","length","dates","model","DriverId","repeatDayListString","forEach","x","ScheduleList","getTime","IsActive","StartDate","EndDate","RepeatDayList","RepeatDayStringList","ShiftId","Type","RepeatEveryDay","TypeId","addDriverSchedule","onLoadingChanged","next","response","StatusCode","msgsuccess","_toggleOpened","driver","reset","emit","StatusMessage","driverIds","drivers","join","getShiftByDrivers","data","Result","isSubmit","i","rpDayList","item","shift","ele","idx","findIndex","msgwarning","preventDefault","onRegionSelect","onRegionDeSelect","onDriverSelect","onDriverDeSelect","setToDate","closedSideBar","onSubmit","selector","templateUrl","styleUrls","CreateRegionComponent","RouteList","ColumnsList","ShiftScheduleList","IsDuplicateShift","Init","clear","multiselectRegionSettingsById","multiselectRouteSettingsById","CreateRegionForm","control","RegionId","RouteId","ColumnIndex","RegionShiftDetail","array","getShift","getRoutes","createColumnList","getShiftSchedules","CheckDuplicateShits","validateShiftForRegion","_shifts","index","removeAt","CheckDuplicateShitsOnSubmit","element","objShiftModel","parseInt","Repeat","addRouteSchedule","k","iShift","j","jShift","addRegionSchedule","num","obj","col","cnt","checkDuplicate","routeId","getRegionSchedule","schedules","pushRegionShiftDetail","getRoutesByRegion","routes","getRouteDropDown","routeList","ResponseData","onRouteSelect","addShift","CreateTrailerScheduleComponent","driverService","TrailerList","ColumnList","SelectedRegionId","createTrailerForm","multiselectDropDownSettingsById","TrailerScheduleForm","Trailers","Code","trailerId","shifts","columnId","TrailerId","TrailerShiftDetail","ColumnId","addTrailerSchedule","CreateDriverComponent","fb","MinDate","MaxDate","TrailerTypeEnum","TrailerTypeList","LicenceTypeEnum","LicenceTypes","RegionList","ContactNumberValidationMessage","IsOnboarded","IsLoading","trailerDdlSettings","regionDdlSettings","onSaveDriverData","DriverForm","FirstName","LastName","CompanyName","Email","pattern","LicenseNumber","ExpiryDate","LicenseTypeId","SelectedLicenseTypes","TrailerType","SelectedTrailerTypes","ContactNumber","InvitedBy","UserId","SelectedRegions","IsFilldAuthorized","selectAllText","unSelectAllText","Object","keys","filter","setFullYear","getFullYear","contactNumber","licenseType","formatContactNumber","onLicenseTypeChange","valid","driverForm","patchValue","userId","trailerTypeIds","t","regionIds","submitForm","clearForm","disable","trailerTypesToBind","indexOf","regionsToBind","postAddDriver","getRawValue","closeSlidePanel","setDefaultValue","enable","date","_date","setErrors","split","replace","setSelectedDate","DriverManagementComponent","ViewDriverComponent","dtOptions","dtTrigger","dtOptionsOnboarded","dtTriggerOnboarded","InvitedDrivers","OnboardedDrivers","popoverTitle","confirmButtonText","cancelButtonText","ShiftInfo","IsShowShiftInfoPopup","IsLoadingdriverDelete","IsScheduleExists","HeaderText","initializeInvitedDrivers","initializeOnboardedDrivers","getAllDrivers","exportInvitedColumns","columns","dom","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","lengthMenu","exportOnboardedColumns","isOnboarded","CreateDriver","loadDriverDetail","setDeleteDriverInfo","postDeleteDriver","getDriverDetails","$","click","isActive","changeDriverStatus","toString","DriverName","setShiftInfo","headerText","DataTable","destroy","shiftDetail","FromDate","ToDate","ShiftFrom","ShiftDetail","ShiftTo","driverInfo","setPanelHeader","clearPanelControls","deleteDriver","routeDriver","path","component","DriverScheduleRoutingModule","forChild","imports","exports","DriverScheduleCalenderComponent","routeService","CalendarView","isShowCalender","DriverRegionList","SelectedDriverList","isShowEditPannel","isApplyAll","driverSchedule","driverScheduleMapping","view","Month","viewDate","Selectedevent","IsUpdateForMultiple","scheduleType","refresh","evt","activeDayIsOpen","RegionShiftDetailList","_openedEditPanel","IsSheduleEdit","Selectedregion","SelectedDriver","IsShiftRepeted","selectedType","IsConfirmDelete","deleteOption","hideDeleteRange","ConflictDateList","IsShowConflictTable","getDrivers","multiselectSettingsById","singleselectSettingsById","disabledField","multiselectShiftById","events","SelectedDate","document","getElementById","setNextMonthEvents","getSchedulesByRegion","regions","mnth","year","getRandomColor","color","driverShortName","getShortDriverName","startDate","changeTimeFormat","endDate","mappingId","repeatEvery","typeId","repeatDayList","regionName","RegionName","driverName","shiftFrom","shiftTo","StrStartDate","StrEndDate","start","end","resizable","beforeStart","afterEnd","draggable","isUnplanedSchedule","IsUnplanedSchedule","description","Description","currentDate","eDate","toLocaleString","setHours","sDate","daysInMonth","currentMonthLastDate","addEventShift","month","time","hours","Number","match","minutes","AMPM","sHours","sMinutes","setMinutes","letters","Math","floor","random","primary","secondary","setEvents","slice","eventDelete","AssignVeriables","selectedShifts","indexof","sdate","reOrder","r","getCurrentSelectedShift","checkShift","list","update","_editToggleOpened","TypeCheck","dRegion","eFromDate","eToDate","edate","startDateEnable","chCustomDates","xdate","sdt","selectedDates","scheduleList","newScheduleId","CurrentDriverShiftDetailList","driverScheduleMappingIndex","getCurrent","getIndex","pre","loop","newDate","olst","sort","oDt","eDt","splice","oDateList","oDateListString","some","oScheduleList","e","newList","y","stringList","oShifScheduleList","pop","ab","deleteDriverSchedule","setTimeout","setView","clearEditForm","Isdelete","updateDriverSchedule","closeViewDayDetailModel","fullName","lastName","firstName","substring","DaysRepeateCount","CheckConflictDays","selecteddateList","ShiftDetails","elm","dte","slDate","currentDriverShiftDetailList","driverShiftMapping","Single","currentDelete","Range","sList","Whole","oSchedule","changeDetection","OnPush","DriverModule","forRoot","provide","useFactory","declarations","DriverComponent","isDriverShow","isProfileShow","tabClick","changeTab","DriverManagementModel","LicenseTypes","TrailerTypes","DriverViewModel","TrailerTypeId","LicenseType","Status","DriverShiftModel","ShiftDetailModel","DriverScheduleMapping","DriverSchedule","selectedRepeatList","ConflictDates","TrailerSchedule","RegionScheduleViewModel","ShiftSchedule","RegionScheduleMappingViewModel","ShiftDetailViewModel","httpOptions","headers","DriverService","httpClient","getShiftUrl","getAllDriversUrl","postAddDriverUrl","postDeleteDriverUrl","changeDriverStatusUrl","getRegionsUrl","addTrailerScheduleUrl","pipe","handleError","driverModel","post","driverdelteInfo","ScheduleBuilderIdInfo","providedIn"],"mappings":"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","file":"driver-driver-module-es5.js","sourcesContent":["<button id=\"driverSchedule\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\">Add Schedule   <span> <i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span></button>\r\n<!--side bar menu-->\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Schedule Driver </h3>\r\n\r\n        <content class=\"pr30\" [formGroup]=\"DriverScheduleForm\" name=\"DriverScheduleForm\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"regionList\" (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\"\r\n                                                 formControlName=\"regionId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('regionId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('regionId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Drivers\">Driver:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"DriverList\" (onSelect)=\"onDriverSelect($event)\" (onDeSelect)=\"onDriverDeSelect($event)\"\r\n                                                 formControlName=\"driverId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('driverId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('driverId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Shift\">Shift:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\"\r\n                                                 [settings]=\"multiselectDriverSettingsById\" [data]=\"ShiftList\" (onSelect)=\"validateShiftForDriver(false)\"\r\n                                                 formControlName=\"shiftId\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('shiftId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('shiftId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date:</label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date:</label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\" id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\" id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\" id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\"  *ngIf=\"DriverScheduleForm.get('fromDate').value && DriverScheduleForm.get('toDate').value\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\" id=\"inlineRadioCustom\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                        </div>\r\n\r\n                        <!--<div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\">Daily</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"radio-inline\" *ngIf=\"DriverScheduleForm.get('fromDate').value && DriverScheduleForm.get('toDate').value\">\r\n                            <label><input type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\">Custom</label>\r\n                        </div>\r\n                        <div *ngIf=\"isInvalid('type')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('type')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>-->\r\n                    </div>\r\n\r\n                </div>\r\n             \r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\" *ngIf=\"DriverScheduleForm.get('type').value=='4'\">\r\n                        <label for=\"Dates\"> Dates:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\"\r\n                                                 [settings]=\"multiselectDateSettingsById\" [data]=\"DateList\"\r\n                                                 (onSelect)=\"validateShiftForDriver(false)\"\r\n                                                 formControlName=\"customDates\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\"  *ngIf=\"DriverScheduleForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\"  min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n<!--end side bar menu-->\r\n\r\n\r\n\r\n<!--<div *ngIf=\"(regionService.onLoadingChanged | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>-->","import { Component, OnInit, Input, ViewChild, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\nimport { DropdownItem } from '../../statelist.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { Declarations } from 'src/app/declarations.module';\nimport { DriverScheduleMapping } from 'src/app/driver/models/DriverSchedule';\nimport * as moment from 'moment';\nimport { RegionModel } from '../../company-addresses/region/model/region';\n@Component({\n    selector: 'create-driver-schedule',\n    templateUrl: './create-driver-schedule.component.html',\n    styleUrls: ['./create-driver-schedule.component.css']\n})\nexport class CreateDriverScheduleComponent implements OnInit {\n    //@ViewChild('DriverScheduleForm') public form: NgForm;\n    @Output() OnScheduleAdded = new EventEmitter();\n    DriverList = [];\n    public regionList = [];\n    DriverScheduleForm: FormGroup;\n    isLoading = false;\n    //sidebar variables\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    SelectedShiftList = [];\n    ShiftList = [];\n    SelectedScheduleDriverList = [];\n    RepeatList = [];\n    DateList = [];\n    //end\n    public multiselectShiftSettingsById: IDropdownSettings;\n    public multiselectRepeatSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectDriverSettingsById: IDropdownSettings;\n\n    //min max date\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n\n    //end\n    constructor(public regionService: RegionService, private _fb: FormBuilder) { }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngAfterViewInit(): void {\n        this.isLoading = false;\n    }\n\n    \n\n   \n\n\n    init() {\n        this.getRegions();\n        this.createScheduleForm();\n        \n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\n        // this.getDrivers();\n        //  this.getShifts();\n       \n        // this.getDateList();\n        this.multiselectDriverSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectShiftSettingsById = {\n            singleSelection: true,\n            idField: 'Code',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.multiselectRepeatSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\n    }\n\n\n\n    private createScheduleForm(): void {\n        this.DriverScheduleForm = this._fb.group({\n            id: [''],\n            shiftId: ['', Validators.required],\n            regionId: ['', Validators.required],\n            type: ['1', Validators.required],\n            driverId: ['', Validators.required],\n            fromDate: ['', Validators.required],\n            toDate: ['', Validators.required],\n            repeat: [1],\n            customDates: [[]],\n\n        });\n        var dt = moment(new Date()).toDate();\n        //alert(moment(dt).format('MM/DD/YYYY'));\n        this.DriverScheduleForm.controls.fromDate.setValue(moment(dt).format('MM/DD/YYYY'));\n    }\n\n\n  \n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n\n    private getRegions(): void {\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.getRegionDropDwn(region.Regions);\n            });\n    }\n\n    public onRegionSelect($event) {\n        var region = this.regionList.find(f => f.Id == $event.Id);\n        this.DriverScheduleForm.controls.driverId.setValue('');\n        this.DriverScheduleForm.controls.shiftId.setValue('');\n        let tDate = new Date()\n        this.DriverScheduleForm.controls.fromDate.setValue(moment(tDate).format('MM/DD/YYYY'));\n        this.setFromDate(moment(tDate).format('MM/DD/YYYY'));\n        this.DriverList = region.Drivers;\n        this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\n    }\n\n    public onRegionDeSelect($event) {\n        this.DriverList = [];\n        this.DriverScheduleForm.controls.driverId.setValue('');\n        this.ShiftList = [];\n        this.DriverScheduleForm.controls.shiftId.setValue('');\n    }\n\n    private getRegionDropDwn(regionList): void {\n        this.regionList = regionList;\n\n    }\n\n   \n\n\n    isInvalid(name: string): boolean {\n        var result = this.DriverScheduleForm.get(name).invalid && (this.DriverScheduleForm.get(name).dirty || this.DriverScheduleForm.get(name).touched)\n        return result;\n    }\n\n    isRequired(name: string): boolean {\n        return this.DriverScheduleForm.get(name).errors.required;\n    }\n    setFromDate(event: any): void {\n        this.DriverScheduleForm.controls.fromDate.setValue(event);\n\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\n        !this.DriverScheduleForm.controls.toDate.value ? this.DriverScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.DriverScheduleForm.controls.fromDate.value != '' && this.DriverScheduleForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.DriverScheduleForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.DriverScheduleForm.controls.toDate.value).toDate();\n            if (_toDate < _fromDate) {\n                this.DriverScheduleForm.controls.toDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n         this.validateShiftForDriver(false);\n    }\n\n    async  setToDate(event: any) {\n        this.DriverScheduleForm.controls.toDate.setValue(event);\n        if (this.DriverScheduleForm.controls.fromDate.value != '' && this.DriverScheduleForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.DriverScheduleForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.DriverScheduleForm.controls.toDate.value).toDate();\n            if (_fromDate > _toDate) {\n                this.DriverScheduleForm.controls.fromDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n        await this.validateShiftForDriver(false);\n    }\n\n    async InitializeDates(type?: number, repeat?: number) {\n        this.DriverScheduleForm.controls.customDates.setValue([]);\n        this.DateList = [];\n        !repeat ? repeat = 0 : '';\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        // alert(this.DriverScheduleForm.controls.fromDate.value);\n        // alert(this.DriverScheduleForm.controls.toDate.value);\n        if (this.DriverScheduleForm.controls.fromDate.value && this.DriverScheduleForm.controls.toDate.value) {\n\n            for (var dt = new Date(this.DriverScheduleForm.controls.fromDate.value); dt <= new Date(this.DriverScheduleForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\n                if (type && type == 2) //weekend\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\n                else\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\n            }\n\n            return this.DateList;\n        }\n    }\n\n    async onSubmit() {\n        //this.DriverScheduleForm.controls.repeat.value &&  this.DriverScheduleForm.controls.repeat.value[0].Id == '1' ? await this.DriverScheduleForm.controls.customDates.setValue(this.DateList) : '';\n        if (this.DriverScheduleForm.invalid) {\n            this.DriverScheduleForm.markAllAsTouched();\n            return false;\n        } else if (this.DriverScheduleForm.controls.type.value == '3') {\n            if (!(this.DriverScheduleForm.controls.repeat.value && this.DriverScheduleForm.controls.repeat.value > 0)) {\n                Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\n                return false;\n            }\n        } else if (this.DriverScheduleForm.controls.type.value == '4') {\n            if (!(this.DriverScheduleForm.controls.customDates.value.length > 0)) {\n                Declarations.msgerror('Select custom dates', undefined, undefined);\n                return false;\n            }\n        }\n        if (await this.validateShiftForDriver(true) == 1) { return false;}\n        //this.DriverScheduleForm.controls.customDates.setValue([]);\n        if (this.DriverScheduleForm.controls.type.value == '2') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.DriverScheduleForm.controls.type.value)); }\n        else if (this.DriverScheduleForm.controls.type.value == '3') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.DriverScheduleForm.controls.type.value, this.DriverScheduleForm.controls.repeat.value)); }\n        else if (this.DriverScheduleForm.controls.type.value == '1') { this.DriverScheduleForm.controls.customDates.setValue(await this.InitializeDates()) }\n        let dates = [];\n\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        //!this.DriverScheduleForm.controls.toDate.value ? this.DriverScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n\n        await this.DriverScheduleForm.controls.customDates.value.map(res => { dates.push(res.Id) });\n        let model = new DriverScheduleMapping();\n        this.DriverScheduleForm.controls.id.value ? model.Id = this.DriverScheduleForm.controls.id.value : '';\n        model.DriverId = this.DriverScheduleForm.controls.driverId.value[0].Id;\n       var repeatDayListString = [];\n        dates.forEach(x => {\n            repeatDayListString.push(moment(x).format('MM/DD/YYYY'));\n        })\n        model.ScheduleList.push({ Id: `${model.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: this.DriverScheduleForm.controls.fromDate.value, EndDate: this.DriverScheduleForm.controls.toDate.value, RepeatDayList: dates, RepeatDayStringList: repeatDayListString, ShiftId: this.DriverScheduleForm.controls.shiftId.value[0].Id, Type: this.DriverScheduleForm.controls.type.value, RepeatEveryDay :this.DriverScheduleForm.controls.repeat.value ,TypeId : this.DriverScheduleForm.controls.type.value });\n       \n        this.addDriverSchedule(model);\n    }\n\n    private addDriverSchedule(model): void {\n        this.isLoading = true;\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.addDriverSchedule(model)\n            .subscribe((response: any) => {\n\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule created successfully', undefined, undefined);\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    this._toggleOpened(false);\n                    let driver = this.DriverScheduleForm.controls.driverId.value;\n                    this.DriverScheduleForm.reset();\n                    this.OnScheduleAdded.emit(driver);\n                    this.DriverScheduleForm.controls.type.setValue('1');\n\n                }\n                else {\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                }\n            });\n    }\n\n    public closedSideBar(): void { this._opened = false; }\n\n   \n    //public getDateList() {\n    //    this.DateList=  this.regionService.getDateList();\n    //}\n\n    //public onRepeatSelect($event): void {\n    //    if ($event.Id == '1')\n    //        this.DriverScheduleForm.controls.customDates.setValue(this.DateList);\n    //    else\n    //        this.DriverScheduleForm.controls.customDates.setValue([]);\n    //}\n\n    //public onRepeatDeSelect($event): void {\n    //       this.DriverScheduleForm.controls.customDates.setValue([]);\n\n    //}\n\n    DriverShiftDetailList: any[] = [];\n\n    async onDriverSelect($event) {\n        this.regionService.onLoadingChanged.next(true);\n\n        let driverIds = [];\n        this.DriverScheduleForm.controls.driverId.value.forEach(res => { driverIds.push(res.Id) });\n        let drivers = driverIds.join();\n        if (driverIds.length > 0) {\n            this.regionService.getShiftByDrivers(drivers,0) // schedule type\n                .subscribe((data) => {\n                    if (data.Result)\n                        this.DriverShiftDetailList = data.Result;\n                });\n        }\n\n        this.regionService.onLoadingChanged.next(false);\n\n    }\n\n    async onDriverDeSelect($event) {\n    }\n\n    \n\n    async validateShiftForDriver(isSubmit:boolean) {       \n        var i = 0;           \n        let rpDayList = [];\n        if (this.DriverScheduleForm.controls.type.value == 4)\n            rpDayList = this.DriverScheduleForm.controls.customDates.value;\n        else\n            rpDayList = this.DateList;\n        if (this.DriverScheduleForm.controls.fromDate.value && this.DriverScheduleForm.controls.toDate.value && this.DriverScheduleForm.controls.shiftId.value && this.DriverScheduleForm.controls.shiftId.value.length > 0) {\n            for await (let item of this.DriverShiftDetailList) {\n                for await (let shift of item.ScheduleList) {\n                    if (shift.RepeatDayList !=null &&  (moment(this.DriverScheduleForm.controls.fromDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                        moment(this.DriverScheduleForm.controls.fromDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY')) ||\n                        (moment(this.DriverScheduleForm.controls.toDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                            moment(this.DriverScheduleForm.controls.toDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY'))) {\n                        if (this.DriverScheduleForm.controls.shiftId.value[0].Id == shift.ShiftId) {\n                            shift.RepeatDayList.forEach(ele => {\n                                let idx = rpDayList.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(ele).format('MM/DD/YYYY'));\n                                if (idx >= 0) {\n                                    if (i != 1) {\n                                        Declarations.msgerror(\"Shift is already assigned to the driver\", undefined, undefined);\n                                        i = 1;\n                                    }\n                                }\n                            });\n\n                            if (i == 1)\n                                break;\n                           \n                        } else {\n                            !isSubmit ? Declarations.msgwarning(\"Another shift is already assigned to the driver\", undefined, undefined):'';\n                            //i = 1;\n                            //break;\n                        }\n                    }\n                }\n                if (i == 1)\n                    break;\n            }\n            return i;\n        }\n        return i;\n    }\n}","<button id=\"CreateRoute\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\"> Add Route\r\n    <span> <i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span></button>\r\n<!--side bar menu-->\r\n\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [opened]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh;\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Create Route</h3>\r\n\r\n        <!-- <pre>\r\n            {{CreateRegionForm.value | json}}\r\n        </pre> -->\r\n\r\n        <content class=\"pr30\" [formGroup]=\"CreateRegionForm\" autocomplete=\"off\"\r\n            (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\" \r\n                            formControlName=\"RegionId\" [settings]=\"multiselectRegionSettingsById\" [data]=\"regionList\"\r\n                            (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('RegionId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('RegionId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Route\">Route</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Route(s)'\" formControlName=\"RouteId\"\r\n                            [settings]=\"multiselectRegionSettingsById\" [data]=\"RouteList\" \r\n                            (onSelect)=\"onRouteSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"isInvalid('RouteId')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('RouteId')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>            \r\n<div class=\"row\">\r\n    <div class=\"col-sm-6\" style=\"padding-left: 90%;\" >\r\n        <a href=\"javascript:void(0)\" (click)=\"addShift()\"><i class=\"fa fa-plus  \"> Add Shift</i></a>  \r\n        <!-- <link id=\"addShift\" (click)=\"addShift()\"  [disabled]= \"IsDuplicateShift\">\r\n        <button (click)=\"addShift()\"  [disabled]= \"IsDuplicateShift\" ><span> <i class=\"fa fa-plus\"\r\n                    aria-placeholder=\"Add\"></i></span></button> -->\r\n    </div>\r\n</div>\r\n            <div formArrayName=\"RegionShiftDetail\" *ngFor=\"let shift of CreateRegionForm.get('RegionShiftDetail')['controls']; let i = index;\">              \r\n                <div [formGroupName]=\"i\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"RegionShiftDetail\">Shift <span class=\"Required\">*</span> </label>\r\n                                <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\" formControlName=\"ShiftId\"\r\n                                    [settings]=\"multiselectRegionSettingsById\" [data]=\"ShiftList\" \r\n                                    (onSelect)=\"onShiftSelect($event)\" (onDeSelect)=\"onShiftDeSelect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"isInvalid('ShiftId')\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"isRequired('ShiftId')\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"columns\">Column<span class=\"Required\">*</span></label>\r\n                                <ng-multiselect-dropdown [placeholder]=\"'Columns'\" formControlName=\"ColumnIndex\"\r\n                                    [settings]=\"multiselectRegionSettingsById\" [data]=\"ColumnsList\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"isInvalid('ColumnIndex')\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"isRequired('ColumnIndex')\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>                       \r\n                        <div class=\"col-sm-1\">\r\n                            <label for=\"columns\"></label>\r\n                            <!-- <button (click)=\"removeShift(i)\"><span> <i class=\"fa fa-remove\"\r\n                                        aria-placeholder=\"Remove\"></i></span></button> -->\r\n\r\n                                        <a href=\"javascript:void(0)\" (click)=\"removeShift(i)\" style=\"padding-top: 50%;\"><i class=\"fa fa-remove\">Remove</i></a>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date<span class=\"Required\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\"\r\n                            placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                            (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date<span class=\"Required\">*</span></label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\"\r\n                            placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"\r\n                            [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\"\r\n                                id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\"\r\n                                id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\"\r\n                                id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <!-- <div class=\"form-check form-check-inline\"  *ngIf=\"CreateRegionForm.get('fromDate').value && CreateRegionForm.get('toDate').value\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" (change)=\"InitializeDates()\" value=\"4\" id=\"inlineRadioCustom\">\r\n                    <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\"  *ngIf=\"CreateRegionForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\"  min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" [disabled]= \"IsDuplicateShift\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\"\r\n                    aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>","import { Component, OnInit, Input, ViewChild, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { FormGroup, FormBuilder, Validators, NgForm, FormArray } from '@angular/forms';\nimport { RegionModel } from '../../company-addresses/region/model/region';\nimport * as moment from 'moment';\nimport { DropdownItem } from '../../statelist.service';\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\nimport { Declarations } from 'src/app/declarations.module';\nimport { RegionScheduleViewModel, ShiftSchedule } from 'src/app/driver/models/regionSchedule';\nimport { el } from 'date-fns/locale';\nimport { NullVisitor } from '@angular/compiler/src/render3/r3_ast';\n\n@Component({\n    selector: 'app-create-region',\n    templateUrl: './create-region.component.html',\n    styleUrls: ['./create-region.component.css']\n})\n\nexport class CreateRegionComponent implements OnInit {\n\n\n    @Output() OnScheduleAdded = new EventEmitter();\n    constructor(public regionService: RegionService, private _fb: FormBuilder) { }\n    public regionList = [];\n    DriverList = [];\n    RouteList = [];\n    ShiftList = [];\n    RepeatList = [];\n    DateList = [];\n    ColumnsList = [];\n    ShiftScheduleList: any[] = [];\n    CreateRegionForm: FormGroup;\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n    SelectedShiftList = [];\n    isLoading = false;\n    IsDuplicateShift = false;\n\n    public multiselectRouteSettingsById: IDropdownSettings;\n    public multiselectRepeatSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectRegionSettingsById: IDropdownSettings;\n\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n    ngOnInit() {\n\n        this.Init();\n    }\n    Init() {\n      \n        this.createScheduleForm();\n        this.clear();\n        this.getRegions();\n        this.multiselectRegionSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.multiselectRouteSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n    }\n\n    ngAfterViewInit() {\n        this.isLoading = false;\n    }\n\n    //#region  Page Load Functions\n\n    private createScheduleForm(): void {\n        this.CreateRegionForm = this._fb.group({\n            id: this._fb.control[''],\n            RegionId:['', Validators.required],\n            RouteId: ['', Validators.required],\n            ShiftId: [''],\n            ColumnIndex: [''],\n            type: ['1', Validators.required],\n            RegionShiftDetail: this._fb.array([this.getShift()]),\n            fromDate: ['', Validators.required],\n            toDate: ['', Validators.required],\n            repeat: [1],\n            customDates: [[]]            \n        });\n        var dt = (moment(new Date()).toDate())\n    }\n\n    private getRegions(): void {\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.getRegionDropDwn(region.Regions);\n            });\n    }\n\n    getShift() {\n        return this._fb.group({\n            ShiftId: this._fb.control('', Validators.required),\n            ColumnIndex: this._fb.control('', Validators.required)\n        })\n }\n    //#endregion\n\n   \n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n\n//#region Multiselect events \n\npublic onRegionSelect($event) {\n\n    this.ColumnsList = [];\n    var region = this.regionList.find(f => f.Id == $event.Id);       \n    this.getRoutes(region.Id);\n    this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.Name} ( ${res.StartTime} - ${res.EndTime})` } });\n    this.createColumnList(region);\n}\n\npublic onRegionDeSelect($event) {\n    this.clear();\n}\n\n\npublic clear(){\n    this.DriverList = [];\n    this.ShiftList = [];\n    this.ColumnsList = [];\n    this.RouteList = [];\n    this.CreateRegionForm.controls.RegionShiftDetail =  this._fb.array([]);\n    this.CreateRegionForm.controls.RegionShiftDetail =  this._fb.array([this.getShift()]),\n    this.CreateRegionForm.reset();\n}\n\npublic onRouteSelect($event) {\n    var regionId = this.CreateRegionForm.controls.RegionId.value[0].Id;\n    this.getShiftSchedules(regionId, $event.Id)\n}  \n\npublic onShiftSelect($event) {\n   \n    var shift = this.ShiftList.find(f => f.Id == $event.Id);\n    this.IsDuplicateShift = false;\n    this.CheckDuplicateShits(shift);\n}\npublic onShiftDeSelect($event) {\n\n}\n\n//#endregion\n      \n    //#region   Date\n    setFromDate(event: any): void {\n        this.CreateRegionForm.controls.fromDate.setValue(event);\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\n        !this.CreateRegionForm.controls.toDate.value ? this.CreateRegionForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.CreateRegionForm.controls.fromDate.value != '' && this.CreateRegionForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.CreateRegionForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.CreateRegionForm.controls.toDate.value).toDate();\n            if (_toDate < _fromDate) {\n                this.CreateRegionForm.controls.toDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n        this.validateShiftForRegion(false);\n\n    }\n\n    async setToDate(event: any) {\n        this.CreateRegionForm.controls.toDate.setValue(event);\n        if (this.CreateRegionForm.controls.fromDate.value != '' && this.CreateRegionForm.controls.toDate.value != '') {\n            let _fromDate = moment(this.CreateRegionForm.controls.fromDate.value).toDate();\n            let _toDate = moment(this.CreateRegionForm.controls.toDate.value).toDate();\n            if (_fromDate > _toDate) {\n                this.CreateRegionForm.controls.fromDate.setValue(event);\n            }\n        }\n        this.InitializeDates();\n       this.validateShiftForRegion(false);\n\n    }\n\n    async InitializeDates(type?: number, repeat?: number) {\n        this.CreateRegionForm.controls.customDates.setValue([]);\n        this.DateList = [];\n        !repeat ? repeat = 0 : '';\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        if (this.CreateRegionForm.controls.fromDate.value && this.CreateRegionForm.controls.toDate.value) {\n\n            for (var dt = new Date(this.CreateRegionForm.controls.fromDate.value); dt <= new Date(this.CreateRegionForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\n                if (type && type == 2) //weekend\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} ` }) : '';//(${days[new Date(dt).getDay()]})\n                else\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')}` }); //(${days[new Date(dt).getDay()]})\n            }\n\n            return this.DateList;\n        }\n    }\n\n    isInvalid(name: string): boolean {\n        var result = this.CreateRegionForm.get(name).invalid && (this.CreateRegionForm.get(name).dirty || this.CreateRegionForm.get(name).touched)\n        return result;\n    }\n\n    isRequired(name: string): boolean {\n        return this.CreateRegionForm.get(name).errors.required;\n    }\n //#endregion\n\n    \n   //#region  Button Events \n   public closedSideBar(): void { \n       this.clear();\n       this._opened = false; \n    }\n\n   addShift() {\n    let _shifts = this.CreateRegionForm.get('RegionShiftDetail') as FormArray;\n            _shifts.push(this.getShift());\n}\n\nremoveShift(index: number) {\n    let _shifts = this.CreateRegionForm.get('RegionShiftDetail') as FormArray;\n    _shifts.removeAt(index);\n    this.IsDuplicateShift = false;\n}\nasync onSubmit() {\n      \n    if (this.CreateRegionForm.invalid) {\n        this.CreateRegionForm.markAllAsTouched();\n        Declarations.msgerror('All fields are mandatory', undefined, undefined);\n        return false;\n    } else if (this.CreateRegionForm.controls.type.value == '3') {\n        if (!(this.CreateRegionForm.controls.repeat.value && this.CreateRegionForm.controls.repeat.value > 0)) {\n            Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\n            return false;\n        }\n    } else if (this.CreateRegionForm.controls.type.value == '4') {\n        if (!(this.CreateRegionForm.controls.customDates.value.length > 0)) {\n            Declarations.msgerror('Select custom dates', undefined, undefined);\n            return false;\n        }\n    }\n    var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n    if(ScheduleList !=null && ScheduleList.length > 0){\n       \n       if(this.CheckDuplicateShitsOnSubmit()) {\n        Declarations.msgerror(\"Same selection of shift will not work\", undefined, undefined);\n        return false;\n       }\n    }\n    else{\n        Declarations.msgerror('Atlease one schedule is required, please select Shift and column', undefined, undefined);\n        return false;\n    }\n\n    if (await this.validateShiftForRegion(true) == 1) { return false;}\n\n    if (this.CreateRegionForm.controls.type.value == '2') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates(this.CreateRegionForm.controls.type.value)); }\n    else if (this.CreateRegionForm.controls.type.value == '3') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates(this.CreateRegionForm.controls.type.value, this.CreateRegionForm.controls.repeat.value)); }\n    else if (this.CreateRegionForm.controls.type.value == '1') { this.CreateRegionForm.controls.customDates.setValue(await this.InitializeDates()) }\n    let dates = [];\n    await this.CreateRegionForm.controls.customDates.value.map(res => { dates.push(res.Name) });\n    let model = new RegionScheduleViewModel();\n    this.CreateRegionForm.controls.id.value ? model.Id = this.CreateRegionForm.controls.id.value : '';\n    model.RegionId = this.CreateRegionForm.controls.RegionId.value[0].Id;\n    model.RouteId = this.CreateRegionForm.controls.RouteId.value[0].Id;\n    model.StartDate = this.CreateRegionForm.controls.fromDate.value;\n    model.EndDate = this.CreateRegionForm.controls.toDate.value;\n\n    ScheduleList.forEach(element => {\n        var objShiftModel = new ShiftSchedule();\n        objShiftModel.ShiftId = element['ShiftId'][0]['Id'];\n        objShiftModel.ColumnIndex = parseInt(element['ColumnIndex'][0]['Id']);\n        model.RegionShiftDetail.push(objShiftModel);\n    });\n    \n    model.Repeat = this.CreateRegionForm.controls.repeat.value\n    model.RepeatDayList = dates;\n    model.IsActive = true;\n    this.addRouteSchedule(model);\n}\n   //#endregion\n\n    //#region private functions \n\n    async validateShiftForRegion(isSubmit:boolean) {\n        var k = 0;\n        if (this.CreateRegionForm.controls.fromDate.value && this.CreateRegionForm.controls.toDate.value && this.CreateRegionForm.controls.RegionId.value && this.CreateRegionForm.controls.RouteId.value) {\n            var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n            for (let shift of this.ShiftScheduleList) {\n                //for await (let shift of item) {\n                    if ((moment(this.CreateRegionForm.controls.fromDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                        moment(this.CreateRegionForm.controls.fromDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY')) ||\n                        (moment(this.CreateRegionForm.controls.toDate.value).format('MM/DD/YYYY') >= moment(shift.StartDate).format('MM/DD/YYYY') &&\n                            moment(this.CreateRegionForm.controls.toDate.value).format('MM/DD/YYYY') <= moment(shift.EndDate).format('MM/DD/YYYY'))) {                            \n                               \n                        if (ScheduleList != null && ScheduleList.length > 0) {\n                            for (var i = 0; i < ScheduleList.length; i++) {\n                                var iShift = ScheduleList[i];\n                                for (var j = 0; j < shift.RegionShiftDetail.length; j++) {\n                                    var jShift = shift.RegionShiftDetail[j]\n                                    if(iShift.ShiftId != null && iShift.ShiftId[0].Id==  jShift.ShiftId)\n                                    {\n                                        Declarations.msgerror(\"Shift is already assigned to the Region\", undefined, undefined);\n                                        k = 1;\n                                        return false;                                        \n                                    }\n                                    else\n                                    {\n                                        !isSubmit ? Declarations.msgwarning(\"Another shift is already assigned to the Region\", undefined, undefined):'';\n                                    }\n                                }\n                            }\n\n                        }\n                    }\n              //  }\n                if (k == 1)\n                    break;\n            }\n            return k;\n        }\n        return k;\n    }\n\n    private addRouteSchedule(model): void {\n        this.isLoading = true;\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.addRegionSchedule(model)\n            .subscribe((response: any) => {\n\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Region Schedule created successfully', undefined, undefined);\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    this._toggleOpened(false);\n                    let driver = this.CreateRegionForm.controls.driverId.value;\n                    this.CreateRegionForm.reset();\n                    this.OnScheduleAdded.emit(driver);\n\n                }\n                else {\n                    this.isLoading = false;\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                }\n            });\n    }\n\n    private createColumnList(region) {\n        this.DriverList = region.Drivers;\n        if (region.Drivers.length > 0) {\n            var num = 0;\n            this.DriverList.forEach(obj => {\n                var col = {\n                    Id: 0,\n                    Name: \"\"\n                }\n                col.Id = num;\n                col.Name = \"C\" + num;\n                this.ColumnsList.push(col)\n                num++\n            })\n        }\n    }\n\n    private CheckDuplicateShits(shift) {\n        var cnt = 1;\n        var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n        if (ScheduleList.length > 1) {\n            for (var i = 0; i < ScheduleList.length; i++) {\n                var iShift = ScheduleList[i];\n                if (iShift.ShiftId !=\"\"  && iShift.ShiftId[0].Id == shift.Id) {\n                    if (cnt > 1)\n                        this.IsDuplicateShift = true;\n                    cnt++\n                }\n            }\n        }\n        if (this.IsDuplicateShift) {\n            Declarations.msgerror(\"Same selection of shift will not work\", undefined, undefined);\n        }\n    }\n\n    private CheckDuplicateShitsOnSubmit() {        \n        var checkDuplicate= false;\n        var ScheduleList = this.CreateRegionForm.get('RegionShiftDetail').value;\n        if (ScheduleList.length > 1) {\n            for (var j = 0; j < ScheduleList.length; j++) {\n             var   shift = ScheduleList[j];\n             var cnt = 1;\n            for (var i = 0; i < ScheduleList.length; i++) {\n                var iShift = ScheduleList[i];\n                if (iShift.ShiftId !=\"\" && shift.ShiftId !=\"\" && iShift.ShiftId[0].Id == shift.ShiftId[0].Id) {\n                    if (cnt > 1){                                        \n                        return checkDuplicate = true;\n                    }  \n                    cnt++\n                }\n            }\n        }\n        }\n        \n        return checkDuplicate;\n    }\n\n\n    private getShiftSchedules(regionId, routeId): void {\n        this.regionService.getRegionSchedule(regionId, routeId)\n            .subscribe((schedules: RegionScheduleViewModel[]) => {\n                this.pushRegionShiftDetail(schedules);\n            });\n    }\n\n    public pushRegionShiftDetail(schedules) {   \n\n        this.ShiftScheduleList = schedules;\n    }\n\n    private getRoutes(id): void {\n        this.regionService.getRoutesByRegion(id)\n            .subscribe((routes: RouteInformationModel[]) => {\n                this.getRouteDropDown(routes);\n            });\n    }\n\n    private getRouteDropDown(routeList): void {\n        this.RouteList = routeList.ResponseData\n    }\n    private getRegionDropDwn(regionList): void {\n        this.regionList = regionList;\n    }\n\n    //#endregion\n}","<button id=\"trailerSchedule\" type=\"button\" class=\"btn btn-default float-right\" (click)=\"_toggleOpened(false)\"><i class=\"fa fa-plus mr5\" aria-hidden=\"true\"></i>Add Trailer</button>\r\n<!--side bar menu-->\r\n\r\n<ng-sidebar-container style=\"z-index: 99999;\">\r\n    <ng-sidebar [(opened)]=\"_opened\"\r\n                [animate]=\"_animate\"\r\n                [position]=\"_POSITIONS[_positionNum]\"\r\n                style=\"height: 100vh\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Schedule Trailer </h3>\r\n        <content class=\"pr30\" [formGroup]=\"TrailerScheduleForm\" name=\"TrailerScheduleForm\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Region\">Region:</label>\r\n                    </div>\r\n\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                             [settings]=\"multiselectDropDownSettingsById\" [data]=\"regionList\"\r\n                                             (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionDeSelect($event)\"\r\n                                             formControlName=\"regionId\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"isInvalid('regionId')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('regionId')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Trailer\">Trailer:</label>\r\n                    </div>\r\n                    <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                             [settings]=\"multiselectDropDownSettingsById\" [data]=\"TrailerList\"\r\n                                             formControlName=\"trailerId\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"isInvalid('trailerId')\" class=\"color-maroon\">\r\n                        <div *ngIf=\"isRequired('trailerId')\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\" formArrayName=\"shifts\" *ngFor=\"let shift of TrailerScheduleForm.get('shifts')['controls'];  let j = index;\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"row\" [formGroupName]=\"j\">\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Shift\">Shift:</label>\r\n                                <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':TrailerScheduleForm.get('shifts').touched && TrailerScheduleForm.get('shifts').invalid}\"\r\n                                                         formControlName=\"shiftId\" [placeholder]=\"'Select Shifts'\"\r\n                                                          [settings]=\"multiselectDropDownSettingsById\" [data]=\"ShiftList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-5\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Column\">Column:</label>\r\n                                <ng-multiselect-dropdown [ngClass]=\"{'is-invalid':TrailerScheduleForm.get('shifts').touched && TrailerScheduleForm.get('shifts').invalid}\"\r\n                                                         formControlName=\"columnId\" [placeholder]=\"'Select Columns'\"\r\n                                                         [settings]=\"multiselectDropDownSettingsById\" [data]=\"ColumnList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-2 text-right\">\r\n                            <a class=\"ml20\" (click)=\"removeShift(j);\">\r\n                                <i class=\"fa fa-trash-alt mt14 color-maroon mt8\"></i>\r\n                            </a>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <table width=\"100%\">\r\n                        <tr>\r\n                            <td width=\"15%\">&nbsp;</td>\r\n                            <td colspan=\"2\">\r\n                                <div class=\"form-group\">\r\n                                    <a (click)=\"addShift();\">\r\n                                        <i class=\"fa fa-plus-circle fs14\"></i> Add Shift\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">From Date:</label>\r\n                        <input type=\"text\" formControlName=\"fromDate\" #fromDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('fromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">To Date:</label>\r\n                        <input type=\"text\" formControlName=\"toDate\" #EndDate class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                        <div *ngIf=\"isInvalid('toDate')\" class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('toDate')\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"1\" id=\"inlineRadioDaily\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"2\" id=\"inlineRadioWdays\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"3\" id=\"inlineRadioEvery\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\" *ngIf=\"TrailerScheduleForm.get('fromDate').value && TrailerScheduleForm.get('toDate').value\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"type\" formControlName=\"type\" value=\"4\" id=\"inlineRadioCustom\">\r\n                            <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\" *ngIf=\"TrailerScheduleForm.get('type').value=='4'\">\r\n                        <label for=\"Dates\"> Dates:</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\"\r\n                                                 [settings]=\"multiselectDateSettingsById\"\r\n                                                 formControlName=\"customDates\" [data]=\"DateList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\" *ngIf=\"TrailerScheduleForm.get('type').value=='3'\">\r\n                        <label for=\"Days\">Days:</label>\r\n                        <input type=\"number\" placeholder=\"days\" min=\"1\" class=\"form-control\" formControlName=\"repeat\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-12 text-right form-buttons\">\r\n                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"closedSideBar()\">\r\n                <button id=\"Submit\" type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n            </div>\r\n        </content>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { RegionModel } from 'src/app/company-addresses/region/model/region';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TrailerSchedule } from 'src/app/driver/models/TrailerSchedule';\r\nimport { DriverService } from '../services/driver.service';\r\n\r\n@Component({\r\n    selector: 'app-create-trailer-schedule',\r\n    templateUrl: './create-trailer-schedule.component.html',\r\n    styleUrls: ['./create-trailer-schedule.component.css']\r\n})\r\nexport class CreateTrailerScheduleComponent implements OnInit {\r\n    @Output() OnScheduleAdded = new EventEmitter();\r\n    public regionList = [];\r\n    ShiftList = [];\r\n    TrailerList = [];\r\n    DriverList = [];\r\n    ColumnList = [];\r\n    isLoading = false;\r\n    TrailerScheduleForm: FormGroup;\r\n    public SelectedRegionId: string = '';\r\n    //sidebar variables\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public multiselectDropDownSettingsById: IDropdownSettings;\r\n    public multiselectDateSettingsById: IDropdownSettings;\r\n    DateList = [];\r\n\r\n    //min max date\r\n    MinStartDate = new Date();\r\n    MaxStartDate = new Date();\r\n\r\n    constructor(private regionService: RegionService,private driverService:DriverService, private _fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.getRegions();\r\n        this.createTrailerForm();\r\n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\r\n\r\n        this.multiselectDropDownSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: false,\r\n            enableCheckAll: false\r\n        }\r\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.isLoading = false;\r\n    }\r\n\r\n    public _toggleOpened(shouldOpen: boolean): void {\r\n        if (shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n        }\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.TrailerScheduleForm.get(name).invalid && (this.TrailerScheduleForm.get(name).dirty || this.TrailerScheduleForm.get(name).touched)\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.TrailerScheduleForm.get(name).errors.required;\r\n    }\r\n\r\n    private getRegions(): void {\r\n        this.regionService.getRegions()\r\n            .subscribe((region: RegionModel) => {\r\n                this.getRegionDropDwn(region.Regions);\r\n            });\r\n    }\r\n\r\n    public closedSideBar(): void { this._opened = false; }\r\n\r\n    public onRegionSelect($event) {\r\n        var region = this.regionList.find(f => f.Id == $event.Id);\r\n        //this.TrailerScheduleForm.controls.shiftId.setValue('');\r\n        this.ShiftList = region.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\r\n        this.TrailerList = region.Trailers.map(res => { return { Id: res.Code, Name: `${res.Name}` } });\r\n        this.SelectedRegionId = region.Id;\r\n        this.createColumnList(region);\r\n    }\r\n\r\n    private createColumnList(region) {\r\n        this.DriverList = region.Drivers;\r\n        if (region.Drivers.length > 0) {\r\n            var num = 1;\r\n            this.DriverList.forEach(obj => {\r\n                var col = {\r\n                    Id: 0,\r\n                    Name: \"\"\r\n                }\r\n                col.Id = num;\r\n                col.Name = \"C\" + num;\r\n                this.ColumnList.push(col);\r\n                num++;\r\n            })\r\n        }\r\n    }\r\n\r\n    private getRegionDropDwn(regionList): void {\r\n        this.regionList = regionList;\r\n    }\r\n\r\n    public onRegionDeSelect($event) {\r\n        //var region = this.regionList.find(f => f.Id == $event.Id);\r\n        //this.ShiftList = [];\r\n        //this.TrailerScheduleForm.controls.trailerId.setValue('');\r\n    }\r\n\r\n    public createTrailerForm(): void {\r\n        this.TrailerScheduleForm = this._fb.group({\r\n            id: this._fb.control(null),\r\n            regionId: this._fb.control('', Validators.required),\r\n            trailerId: this._fb.control('', Validators.required),\r\n            shifts: this._fb.array([this.getShift()]),\r\n            fromDate: this._fb.control('', Validators.required),\r\n            toDate: this._fb.control('', Validators.required),\r\n            //type: this._fb.control(''),\r\n            type: ['1', Validators.required],\r\n            repeat: [1],\r\n            customDates: [[]],\r\n        });\r\n        var dt = moment(new Date()).toDate();\r\n        this.TrailerScheduleForm.controls.fromDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n    }\r\n\r\n    addShift() {\r\n        let _shifts = this.TrailerScheduleForm.get('shifts') as FormArray;\r\n        _shifts.push(this.getShift());\r\n    }\r\n\r\n    getShift() {\r\n        return this._fb.group({\r\n            shiftId: this._fb.control('', Validators.required),\r\n            columnId: this._fb.control('', Validators.required)\r\n        })\r\n    }\r\n\r\n    removeShift(index: number) {\r\n        let _shifts = this.TrailerScheduleForm.get('shifts') as FormArray;\r\n        _shifts.removeAt(index);\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        this.TrailerScheduleForm.controls.fromDate.setValue(event);\r\n\r\n        //let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\r\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 2))).toDate();\r\n        !this.TrailerScheduleForm.controls.toDate.value ? this.TrailerScheduleForm.controls.toDate.setValue(moment(d).format('MM/DD/YYYY')) : '';\r\n        if (this.TrailerScheduleForm.controls.fromDate.value != '' && this.TrailerScheduleForm.controls.toDate.value != '') {\r\n            let _fromDate = moment(this.TrailerScheduleForm.controls.fromDate.value).toDate();\r\n            let _toDate = moment(this.TrailerScheduleForm.controls.toDate.value).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.TrailerScheduleForm.controls.toDate.setValue(event);\r\n            }\r\n        }\r\n        this.InitializeDates();\r\n    }\r\n\r\n    async  setToDate(event: any) {\r\n        this.TrailerScheduleForm.controls.toDate.setValue(event);\r\n        if (this.TrailerScheduleForm.controls.fromDate.value != '' && this.TrailerScheduleForm.controls.toDate.value != '') {\r\n            let _fromDate = moment(this.TrailerScheduleForm.controls.fromDate.value).toDate();\r\n            let _toDate = moment(this.TrailerScheduleForm.controls.toDate.value).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.TrailerScheduleForm.controls.fromDate.setValue(event);\r\n            }\r\n        }\r\n        this.InitializeDates();\r\n    }\r\n\r\n    async InitializeDates(type?: number, repeat?: number) {\r\n        this.TrailerScheduleForm.controls.customDates.setValue([]);\r\n        this.DateList = [];\r\n        !repeat ? repeat = 0 : '';\r\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        if (this.TrailerScheduleForm.controls.fromDate.value && this.TrailerScheduleForm.controls.toDate.value) {\r\n\r\n            for (var dt = new Date(this.TrailerScheduleForm.controls.fromDate.value); dt <= new Date(this.TrailerScheduleForm.controls.toDate.value); dt.setDate(dt.getDate() + repeat + 1)) {\r\n                if (type && type == 2) //weekend\r\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\r\n                else\r\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\r\n            }\r\n\r\n            return this.DateList;\r\n        }\r\n    }\r\n\r\n    async onSubmit() {\r\n        if (this.TrailerScheduleForm.invalid) {\r\n            this.TrailerScheduleForm.markAllAsTouched();\r\n            return false;\r\n        } else if (this.TrailerScheduleForm.controls.type.value == '3') {\r\n            if (!(this.TrailerScheduleForm.controls.repeat.value && this.TrailerScheduleForm.controls.repeat.value > 0)) {\r\n                Declarations.msgerror('Repeat field is greater than 0', undefined, undefined);\r\n                return false;\r\n            }\r\n        } else if (this.TrailerScheduleForm.controls.type.value == '4') {\r\n            if (!(this.TrailerScheduleForm.controls.customDates.value.length > 0)) {\r\n                Declarations.msgerror('Select custom dates', undefined, undefined);\r\n                return false;\r\n            }\r\n        }\r\n       \r\n        if (this.TrailerScheduleForm.controls.type.value == '2') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.TrailerScheduleForm.controls.type.value)); }\r\n        else if (this.TrailerScheduleForm.controls.type.value == '3') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates(this.TrailerScheduleForm.controls.type.value, this.TrailerScheduleForm.controls.repeat.value)); }\r\n        else if (this.TrailerScheduleForm.controls.type.value == '1') { this.TrailerScheduleForm.controls.customDates.setValue(await this.InitializeDates()) }\r\n        let dates = [];\r\n\r\n        await this.TrailerScheduleForm.controls.customDates.value.map(res => { dates.push(res.Id) });\r\n        let model = new TrailerSchedule();\r\n        this.TrailerScheduleForm.controls.id.value ? model.Id = this.TrailerScheduleForm.controls.id.value : '';\r\n        model.RegionId = this.TrailerScheduleForm.controls.regionId.value[0].Id;\r\n        model.TrailerId = this.TrailerScheduleForm.controls.trailerId.value[0].Id;\r\n        model.StartDate = this.TrailerScheduleForm.controls.fromDate.value;\r\n        model.EndDate = this.TrailerScheduleForm.controls.toDate.value;\r\n        model.IsActive = true;\r\n        model.RepeatDayList = dates;\r\n        model.Type = this.TrailerScheduleForm.controls.type.value;\r\n        model.TrailerShiftDetail = this.TrailerScheduleForm.controls.shifts.value.map(item => ({ ShiftId: item.shiftId[0].Id, ColumnId: item.columnId[0].Id }));\r\n        this.addTrailerSchedule(model);\r\n    }\r\n\r\n    private addTrailerSchedule(model): void {\r\n        this.isLoading = true;\r\n        this.driverService.onLoadingChanged.next(true);\r\n        this.driverService.addTrailerSchedule(model)\r\n            .subscribe((response: any) => {\r\n\r\n                if (response != null && response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Trailer Schedule created successfully', undefined, undefined);\r\n                    this.isLoading = false;\r\n                    this.driverService.onLoadingChanged.next(false);\r\n                    this._toggleOpened(false);\r\n                    //let driver = this.TrailerScheduleForm.controls.driverId.value;\r\n                    this.TrailerScheduleForm.reset();\r\n                    //this.OnScheduleAdded.emit(driver);\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                    this.driverService.onLoadingChanged.next(false);\r\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DriverViewModel } from '../../models/DriverManagementModel';\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\nimport { DriverService } from '../../services/driver.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { LicenceRequirement, TrailerType } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-create-driver',\n    templateUrl: './create-driver.component.html',\n    styleUrls: ['./create-driver.component.css']\n})\nexport class CreateDriverComponent implements OnInit {\n    public DriverModel: DriverViewModel;\n    public MinDate: Date = new Date();\n    public MaxDate: Date = new Date();\n    public DriverForm: FormGroup;\n    public TrailerTypeEnum: typeof TrailerType = TrailerType;\n    public TrailerTypeList: DropdownItem[] = [];\n    public LicenceTypeEnum: typeof LicenceRequirement = LicenceRequirement;\n    public LicenceTypes: DropdownItemExt[] = [];\n    //public DriverStatusEnum: typeof Status = Status;\n    //public Statuses: DropdownItem[] = [];\n    public RegionList: DropdownItem[] = [];\n    public ContactNumberValidationMessage: string = \"Invalid Contact number\";\n    public IsOnboarded: boolean = false;\n    public IsLoading: boolean = false;\n    public trailerDdlSettings = {};\n    public regionDdlSettings = {};\n    @Output() onSaveDriverData: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private fb: FormBuilder, private driverService: DriverService) {\n        this.DriverForm = this.fb.group({\n            DriverId: this.fb.control(0),\n            FirstName: this.fb.control('', [Validators.required]),\n            LastName: this.fb.control('', [Validators.required]),\n            CompanyName: this.fb.control(''),\n            Email: this.fb.control('', [Validators.required, Validators.pattern(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$\")]),\n            LicenseNumber: this.fb.control('', [Validators.required]),\n            ExpiryDate: this.fb.control('', [Validators.required]),\n            LicenseTypeId: this.fb.control(null),\n            SelectedLicenseTypes: this.fb.control(null, [Validators.required]),\n            TrailerType: this.fb.control(null),\n            SelectedTrailerTypes: this.fb.control(null),\n            ContactNumber: this.fb.control(''),\n            //DriverStatus: this.fb.control(Status.Active),\n            InvitedBy: this.fb.control(''),\n            UserId: this.fb.control(0),\n            //IsActive: this.fb.control(true),\n            Regions: this.fb.control(null),\n            SelectedRegions: this.fb.control(null),\n            IsFilldAuthorized: this.fb.control(false),\n        });\n    }\n\n    ngOnInit() {\n        this.trailerDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        this.regionDdlSettings = {\n            singleSelection: true,\n            idField: 'Code',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: true\n        };\n\n        // load regions\n        this.getRegions();\n\n        this.TrailerTypeList = (Object.keys(this.TrailerTypeEnum).filter(k => typeof this.TrailerTypeEnum[k] === \"number\") as string[]).map(x => { return { Id: this.TrailerTypeEnum[x], Name: x, Code: \"\" } as DropdownItem });\n        this.LicenceTypes = (Object.keys(this.LicenceTypeEnum).filter(k => typeof this.LicenceTypeEnum[k] === \"number\") as string[]).map(x => { return { Id: x, Name: x == \"Class1\" ? \"Class 1\" : x == \"Class3\" ? \"Class 3\" : x, Code: \"\" } as DropdownItemExt });\n        //this.Statuses = (Object.keys(this.DriverStatusEnum).filter(k => typeof this.DriverStatusEnum[k] === \"number\") as string[]).map(x => { return { Id: this.DriverStatusEnum[x], Name: x == \"InActive\" ? \"In-Active\" : x, Code: \"\" } as DropdownItem });\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\n    }\n\n    onSubmit() {\n        // validate contact number     \n        var contactNumber = this.DriverForm.get('ContactNumber').value;\n        var licenseType = this.DriverForm.get('SelectedLicenseTypes').value;\n\n        this.formatContactNumber(contactNumber);\n        this.onLicenseTypeChange(licenseType);\n\n        if (this.DriverForm.valid) {\n            var driverForm = this.DriverForm.value;\n\n            var driverId = (driverForm.DriverId == \"\" || driverForm.DriverId == null) ? 0 : driverForm.DriverId;\n            this.DriverForm.get(\"DriverId\").patchValue(driverId);\n\n            var userId = (driverForm.UserId == \"\" || driverForm.UserId == null) ? 0 : driverForm.UserId;\n            this.DriverForm.get(\"UserId\").patchValue(userId);\n\n\n            if (driverForm.SelectedTrailerTypes != null && driverForm.SelectedTrailerTypes.length > 0) {\n                var trailerTypeIds = [];\n                driverForm.SelectedTrailerTypes.forEach(t => { trailerTypeIds.push(this.TrailerTypeEnum[t.Name]); });\n                this.DriverForm.get(\"TrailerType\").patchValue(trailerTypeIds);\n            }\n\n            if (driverForm.SelectedRegions != null && driverForm.SelectedRegions.length > 0) {\n                var regionIds = [];\n                driverForm.SelectedRegions.forEach(t => { regionIds.push(t.Code) });\n                this.DriverForm.get(\"Regions\").patchValue(regionIds);\n            }\n\n            if (driverForm.SelectedLicenseTypes != null) {\n                this.DriverForm.get(\"LicenseTypeId\").patchValue(driverForm.SelectedLicenseTypes);\n            }\n\n            //if (driverForm.IsActive == undefined || driverForm.IsActive == null) {\n            //    var isActive = driverForm.DriverStatus == 1 ? true : false;\n            //    this.DriverForm.get(\"IsActive\").patchValue(isActive);\n            //}\n           if(!driverForm.IsFilldAuthorized)\n           { \n            this.DriverForm.get(\"IsFilldAuthorized\").patchValue(false);\n           }\n            this.submitForm();\n        }\n        else {\n            this.DriverForm.markAllAsTouched();\n        }\n    }\n\n    loadDriverDetail(driver: DriverViewModel) {\n        this.clearForm();\n        if (driver.ContactNumber == 'NA') { driver.ContactNumber = null; }\n        this.DriverForm.patchValue(driver);\n\n        if (driver.UserId && driver.UserId > 0) {\n            this.DriverForm.get(\"FirstName\").disable();\n            this.DriverForm.get(\"LastName\").disable();\n            this.DriverForm.get(\"Email\").disable();\n        }\n        if (driver.TrailerType != null) {\n            var trailerTypesToBind = this.TrailerTypeList.filter(t => driver.TrailerType.indexOf(t.Id) != -1);\n            this.DriverForm.controls.SelectedTrailerTypes.setValue(trailerTypesToBind);\n        }\n\n        if (driver.Regions != null) {\n            var regionsToBind = this.RegionList.filter(t => driver.Regions.indexOf(t.Code) != -1);\n            this.DriverForm.controls.SelectedRegions.setValue(regionsToBind);\n        }\n\n        if (driver.LicenseTypeId != null)\n            this.DriverForm.controls.SelectedLicenseTypes.setValue(driver.LicenseTypeId);\n    }\n\n    submitForm() {\n        this.IsLoading = true;\n        this.driverService.postAddDriver(this.DriverForm.getRawValue()).subscribe(data => {\n            this.IsLoading = false;\n            if (data.StatusCode == 0) {\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n                closeSlidePanel();\n                this.clearForm();\n                this.onSaveDriverData.emit();\n            }\n            else if (data.StatusCode == 2) {\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\n            }\n            else {\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n            }\n        });\n    }\n\n    getRegions() {\n        this.IsLoading = true;\n        this.driverService.getRegions().subscribe(data => {\n            this.IsLoading = false;\n            this.RegionList = data as DropdownItem[];\n        });\n    }\n\n    clearForm() {\n        this.DriverForm.reset();\n        this.setDefaultValue();\n        this.DriverForm.get(\"FirstName\").enable();\n        this.DriverForm.get(\"LastName\").enable();\n        this.DriverForm.get(\"Email\").enable();\n    }\n\n    setDefaultValue() {\n        // this.DriverForm.get(\"DriverStatus\").patchValue(Status.Active);\n        this.DriverForm.get(\"Regions\").patchValue(null);\n        this.DriverForm.get(\"TrailerType\").patchValue(null);\n\n        this.IsOnboarded = false;\n    }\n\n    setSelectedDate(date: string) {\n        var _date = this.DriverForm.get('ExpiryDate');\n        if (_date.value != date) {\n            _date.setValue(date);\n        }\n    }\n\n    onLicenseTypeChange(licenseType: any) {\n        if (licenseType == null || licenseType == \"null\")\n            this.DriverForm.controls['SelectedLicenseTypes'].setErrors({ 'required': true });\n        else\n            this.DriverForm.controls['SelectedLicenseTypes'].setErrors(null);\n    }\n\n    formatContactNumber(contactNumber: string) {\n        if (contactNumber != null && contactNumber != '') {\n            contactNumber = contactNumber.split('-').join(\"\");\n            if (contactNumber.length == 10) {\n                contactNumber = contactNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\")\n\n                this.DriverForm.controls['ContactNumber'].setErrors(null);\n                this.DriverForm.get(\"ContactNumber\").patchValue(contactNumber);\n            }\n            else {\n                this.DriverForm.controls['ContactNumber'].setErrors({ 'incorrect': true });\n            }\n        }\n        else {\n            this.DriverForm.controls['ContactNumber'].setErrors(null);\n        }\n    }\n}\n","<form [formGroup]=\"DriverForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"sidePanel_overflow\">\r\n        <div class=\"col-sm-12\" id=\"driver-Form\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"hidden\" formControlName=\"DriverId\" /> <!--User table Id-->\r\n                        <input type=\"hidden\" formControlName=\"InvitedBy\" />\r\n                        <input type=\"hidden\" formControlName=\"UserId\" /> <!--Invited User table Id-->\r\n\r\n                        <label>First Name<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"FirstName\" />\r\n                        <div *ngIf=\"DriverForm.get('FirstName').invalid && DriverForm.get('FirstName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('FirstName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Last Name<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"LastName\" />\r\n                        <div *ngIf=\"DriverForm.get('LastName').invalid && DriverForm.get('LastName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('LastName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Company Name</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"CompanyName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>E-mail<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" [ngClass]=\"{'pntr-none subSectionOpacity' : IsOnboarded}\" formControlName=\"Email\" />\r\n                        <div *ngIf=\"DriverForm.get('Email').invalid && DriverForm.get('Email').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('Email').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                            <div *ngIf=\"DriverForm.get('Email').errors.pattern\">\r\n                                Invalid email.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Contact Number</label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"ContactNumber\" (change)=\"formatContactNumber($event.target.value)\" />\r\n                        <div *ngIf=\"DriverForm.get('ContactNumber').invalid && DriverForm.get('ContactNumber').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"!DriverForm.get('ContactNumber').valid || DriverForm.get('ContactNumber').errors?.pattern\">\r\n                                {{ContactNumberValidationMessage}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Expiry Date<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control datepicker\" formControlName=\"ExpiryDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"setSelectedDate($event);\" />\r\n                        <div *ngIf=\"DriverForm.get('ExpiryDate').invalid && DriverForm.get('ExpiryDate').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('ExpiryDate').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Number<span class=\"color-maroon\">*</span></label>\r\n                        <input type=\"text\" class=\"form-control\" formControlName=\"LicenseNumber\" />\r\n                        <div *ngIf=\"DriverForm.get('LicenseNumber').invalid && DriverForm.get('LicenseNumber').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('LicenseNumber').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Licence Type<span class=\"color-maroon\">*</span></label>\r\n                        <select class=\"form-control\" formControlName=\"SelectedLicenseTypes\">\r\n                            <option [value]=\"null\">Select</option>\r\n                            <option *ngFor=\"let key of LicenceTypes\" [value]=\"key.Id\">{{key.Name}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"DriverForm.get('SelectedLicenseTypes').invalid && DriverForm.get('SelectedLicenseTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"DriverForm.get('SelectedLicenseTypes').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Trailer Type</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Type'\"\r\n                                                 [settings]=\"trailerDdlSettings\"\r\n                                                 formControlName=\"SelectedTrailerTypes\" [data]=\"TrailerTypeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>Region</label>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Region'\"\r\n                                                 [settings]=\"regionDdlSettings\" [data]=\"RegionList\"\r\n                                                 formControlName=\"SelectedRegions\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"IsFilldAuthorized\" formControlName=\"IsFilldAuthorized\">\r\n                            <label class=\"form-check-label\" for=\"IsFilldAuthorized\">TrueFill Inc. Compatible</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"col-sm-12 text-right form-buttons\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearForm()\">\r\n            <button id=\"submit-driver-form\" type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-driver-management',\n  templateUrl: './driver-management.component.html',\n  styleUrls: ['./driver-management.component.css']\n})\nexport class DriverManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\r\n    <app-view-driver #viewDriver></app-view-driver>\r\n</div>\n","<div class=\"row\">\r\n    <div class=\"col-12 col-sm-12\" id=\"addDriver\">\r\n        <h4 class=\"pt0 pull-left mb5\">Invited</h4>\r\n        <a (click)=\"setPanelHeader('Add Driver')\" onclick=\"slidePanel('#driver-panel','35%')\" class=\"fs18 pull-left ml15\">\r\n            <i class=\"fa fa-plus-circle fs18 mt2 pull-left\"></i><span class=\"fs14 pull-left\">Add Driver</span>\r\n        </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-invited-driver-grid\" class=\"table-responsive\">\r\n                        <!--Enum - GridName.InvitedDriverSummaryGrid - 17-->\r\n                        <table id=\"invited-driver-grid-datatable\" data-gridname=\"17\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"InvitedDriverName\">Driver Name</th>\r\n                                    <th data-key=\"InvitedEmail\">Email</th>\r\n                                    <th data-key=\"InvitedContactNumber\">Contact Number</th>\r\n                                    <th data-key=\"InvitedCompanyName\">Company Name</th>\r\n                                    <th data-key=\"InvitedLicenseNumber\">Licence Number</th>\r\n                                    <th data-key=\"InvitedLicenseType\">Licence Type</th>\r\n                                    <th data-key=\"InvitedExpiryDate\">Expiration Date</th>\r\n                                    <th data-key=\"InvitedTrailerTypes\">Trailer Type(s)</th>\r\n                                    <th data-key=\"InvitedFilldAuthorized\">TrueFill Inc.Compatible</th>\r\n                                    <th data-key=\"InvitedShiftInfo\">Shift Info</th>\r\n                                    <th data-key=\"InvitedAction\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let driver of InvitedDrivers\">\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Driver');editDriver(driver, false);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','30%')\">\r\n                                            <span>{{driver.FirstName}} {{driver.LastName}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{{driver.Email}}</td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ContactNumber != null\">{{driver.ContactNumber}}</span>\r\n                                        <span *ngIf=\"driver.ContactNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.CompanyName != null\">{{driver.CompanyName}}</span>\r\n                                        <span *ngIf=\"driver.CompanyName == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.LicenseNumber != null\">{{driver.LicenseNumber}}</span>\r\n                                        <span *ngIf=\"driver.LicenseNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType != null\">{{driver.DisplayLicenseType}}</span>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ExpiryDate != null\">{{driver.ExpiryDate}}</span>\r\n                                        <span *ngIf=\"driver.ExpiryDate == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes != null\">{{driver.DisplayTrailerTypes}}</span>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized != null\">{{driver.IsFilldAuthorized?'Yes':'No'}}</span>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized == null\">No</span>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" (click)=\"showDriverShifts(driver)\" data-toggle=\"modal\" data-target=\"#driverShiftsModal\">\r\n                                            <i class=\"far fa-clock-o color-blue fs16\" alt=\"Shifts\" title=\"Shifts\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" data-toggle=\"modal\" data-target=\"#confirm-delete-driver\" (click)=\"setdeleteDriver(driver)\"><i class=\"fas fa-trash-alt color-maroon\" alt=\"Delete\" title=\"Delete\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row mt15\">\r\n    <div class=\"col-md-12 mt10\">\r\n        <h4 class=\"pt0 pull-left mb5\">Onboarded</h4>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-onboarded-driver-grid\" class=\"table-responsive\">\r\n                        <!--Enum - GridName.OnboardedDriverSummaryGrid - 22-->\r\n                        <table id=\"onboarded-driver-grid-datatable\" data-gridname=\"22\" datatable [dtOptions]=\"dtOptionsOnboarded\" [dtTrigger]=\"dtTriggerOnboarded\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"OnboardedDriverName\">Driver Name</th>\r\n                                    <th data-key=\"OnboardedEmail\">Email</th>\r\n                                    <th data-key=\"OnboardedContactNumber\">Contact Number</th>\r\n                                    <th data-key=\"OnboardedCompanyName\">Company Name</th>\r\n                                    <th data-key=\"OnboardedLicenseNumber\">Licence Number</th>\r\n                                    <th data-key=\"OnboardedLicenseType\">Licence Type</th>\r\n                                    <th data-key=\"OnboardedExpiryDate\">Expiration Date</th>\r\n                                    <th data-key=\"OnboardedTrailerTypes\">Trailer Type</th>\r\n                                    <th data-key=\"InvitedFilldAuthorized\">TrueFill Inc.Compatible</th>\r\n                                    <th data-key=\"OnboardedShiftInfo\">Shift Info</th>\r\n                                    <th data-key=\"OnboardedAction\">Active</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let driver of OnboardedDrivers\">\r\n                                    <td>\r\n                                        <a (click)=\"setPanelHeader('Edit Driver');editDriver(driver, true);\" class=\"btn btn-link\" onclick=\"slidePanel('#driver-panel','30%')\">\r\n                                            <span>{{driver.FirstName}} {{driver.LastName}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                    <td>{{driver.Email}}</td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ContactNumber != null\">{{driver.ContactNumber}}</span>\r\n                                        <span *ngIf=\"driver.ContactNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.CompanyName != null\">{{driver.CompanyName}}</span>\r\n                                        <span *ngIf=\"driver.CompanyName == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.LicenseNumber != null\">{{driver.LicenseNumber}}</span>\r\n                                        <span *ngIf=\"driver.LicenseNumber == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType != null\">{{driver.DisplayLicenseType}}</span>\r\n                                        <span *ngIf=\"driver.DisplayLicenseType == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.ExpiryDate != null\">{{driver.ExpiryDate}}</span>\r\n                                        <span *ngIf=\"driver.ExpiryDate == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes != null\">{{driver.DisplayTrailerTypes}}</span>\r\n                                        <span *ngIf=\"driver.DisplayTrailerTypes == null\">--</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized != null\">{{driver.IsFilldAuthorized?'Yes':'No'}}</span>\r\n                                        <span *ngIf=\"driver.IsFilldAuthorized == null\">No</span>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <button type=\"button\" class=\"btn btn-link\" (click)=\"showDriverShifts(driver)\" data-toggle=\"modal\" data-target=\"#driverShiftsModal\">\r\n                                            <i class=\"far fa-clock-o color-blue fs16\" alt=\"Shifts\" title=\"Shifts\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <input type=\"checkbox\" (confirm)=\"changeDriverStatus(driver)\" [(ngModel)]=\"driver.IsActive\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"driver-panel\" class=\"side-panel pl5 pr5\">\r\n    <div class=\"side-panel-wrapper\">\r\n        <div class=\"pt15 pb0 mb10\">\r\n            <a class=\"ml15 close-panel\" (click)=\"clearPanelControls()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib mt0 mb0 ml15\">{{HeaderText}}</h3>\r\n        </div>\r\n        <div>\r\n            <app-create-driver #createDriver (onSaveDriverData)=\"getDriverDetails()\"></app-create-driver>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"driverShiftsModal\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowShiftInfoPopup\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt10 pb5\">\r\n                <h4 class=\"modal-title pt0\">{{ShiftInfo.DriverName}}</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"closeDriverShiftsPopup();\">&times;</button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Shift</th>\r\n                            <th>From Date</th>\r\n                            <th>To Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let shift of ShiftInfo.Shifts\">\r\n                            <td>{{shift.ShiftFrom}} - {{shift.ShiftTo}}</td>\r\n                            <td>{{shift.FromDate}}</td>\r\n                            <td>{{shift.ToDate}}</td>\r\n                        </tr>\r\n                        <tr *ngIf=\"ShiftInfo.Shifts == null || ShiftInfo.Shifts.length == 0\">\r\n                            <td colspan=\"3\" class=\"text-center pa5\">No schedule found</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"closeDriverShiftsPopup()\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Confirmation -->\r\n<div class=\"modal fade confirm-box\" id=\"confirm-delete-driver\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"IsLoadingdriverDelete\" id=\"deleteDriverLoading\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                <h2 class=\"fs18 f-bold mt0\">Are you sure?</h2>\r\n                <p class=\"pb10\" id=\"deleteDelGrpHeading\" *ngIf=\"IsScheduleExists\">Driver schedule exists.</p>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-danger btn-lg btnDriverYes\" (click)=\"deleteDriver()\">Confirm</button>\r\n                    <button type=\"button\" id=\"btnDriverCancel\" class=\"btn btn-primary\" data-dismiss=\"modal\">Cancel</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CreateDriverComponent } from '../create-driver/create-driver.component';\r\nimport { DriverViewModel, DriverShiftModel, ShiftDetailModel } from '../../models/DriverManagementModel';\r\nimport { DriverService } from '../../services/driver.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport * as moment from 'moment';\r\nimport { Driver } from '../../../shared-components/sendbird/sendbirdCommon';\r\n\r\n@Component({\r\n    selector: 'app-view-driver',\r\n    templateUrl: './view-driver.component.html',\r\n    styleUrls: ['./view-driver.component.css']\r\n})\r\nexport class ViewDriverComponent implements OnInit {\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    dtOptionsOnboarded: any = {};\r\n    dtTriggerOnboarded: Subject<any> = new Subject();\r\n    public InvitedDrivers: DriverViewModel[] = [];\r\n    public OnboardedDrivers: DriverViewModel[] = [];\r\n    public HeaderText: string;\r\n    public IsLoading: boolean = false;\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public ShiftInfo: DriverShiftModel = new DriverShiftModel();\r\n    public IsShowShiftInfoPopup: boolean = false;\r\n    public setDeleteDriverInfo: DriverViewModel;\r\n    public IsLoadingdriverDelete: boolean = false;\r\n    public IsScheduleExists: boolean = false;\r\n    DriverShiftDetailList: any[] = [];\r\n\r\n    constructor(private driverService: DriverService, private regionService: RegionService) {\r\n    }\r\n    @ViewChild(CreateDriverComponent) CreateDriver: CreateDriverComponent;\r\n\r\n    ngOnInit() {\r\n        this.HeaderText = 'Create Driver';\r\n        this.initializeInvitedDrivers();\r\n        this.initializeOnboardedDrivers();\r\n        this.getAllDrivers();\r\n    }\r\n\r\n    initializeInvitedDrivers() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Driver Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Driver Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    initializeOnboardedDrivers() {\r\n        let exportOnboardedColumns = { columns: ':visible' };\r\n        this.dtOptionsOnboarded = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportOnboardedColumns },\r\n                { extend: 'csv', title: 'Driver Details', exportOptions: exportOnboardedColumns },\r\n                { extend: 'pdf', title: 'Driver Details', orientation: 'landscape', exportOptions: exportOnboardedColumns },\r\n                { extend: 'print', exportOptions: exportOnboardedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n\r\n    getAllDrivers() {\r\n        this.IsLoading = true;\r\n        this.driverService.getAllDrivers().subscribe(data => {\r\n            this.IsLoading = false;\r\n            this.InvitedDrivers = data.InvitedDrivers as DriverViewModel[];\r\n            this.OnboardedDrivers = data.OnboardedDrivers as DriverViewModel[];\r\n            this.dtTrigger.next();\r\n            this.dtTriggerOnboarded.next();\r\n        });\r\n    }\r\n\r\n    editDriver(driver: DriverViewModel, isOnboarded: boolean) {\r\n        if (this.CreateDriver != undefined) {\r\n            this.CreateDriver.IsOnboarded = isOnboarded;\r\n            this.CreateDriver.loadDriverDetail(driver);\r\n        }\r\n    }\r\n\r\n    deleteDriver() {\r\n        if (this.setDeleteDriverInfo != null) {\r\n            this.IsLoadingdriverDelete = true;\r\n            this.IsLoading = true;\r\n            this.driverService.postDeleteDriver(this.setDeleteDriverInfo).subscribe(data => {\r\n                this.IsLoading = false;\r\n                this.IsLoadingdriverDelete = false;\r\n                this.getDriverDetails();\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n                $(\"#btnDriverCancel\").click();\r\n            });\r\n        }\r\n    }\r\n\r\n    changeDriverStatus(driver: any) {\r\n        var isActive = driver.IsActive;\r\n        var userId = driver.UserId;\r\n        this.IsLoading = true;\r\n        this.driverService.changeDriverStatus(userId, isActive).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else if (data.StatusCode == 2) {\r\n                Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    async showDriverShifts(driver: DriverViewModel) {\r\n        var driverIds = driver.DriverId.toString();\r\n        this.IsShowShiftInfoPopup = true;\r\n        this.IsLoading = true;\r\n        this.regionService.getShiftByDrivers(driverIds, 0).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if (data != null && data.Result) {\r\n                this.ShiftInfo.DriverName = driver.FirstName + \" \" + driver.LastName;\r\n                this.DriverShiftDetailList = data.Result;\r\n                this.setShiftInfo();\r\n            }\r\n            else {\r\n                this.ShiftInfo = new DriverShiftModel();\r\n            }\r\n        });\r\n    }\r\n\r\n    closeDriverShiftsPopup() {\r\n        this.IsShowShiftInfoPopup = false;\r\n        this.ShiftInfo = new DriverShiftModel();\r\n    }\r\n\r\n    clearPanelControls() {\r\n        if (this.CreateDriver != undefined) {\r\n            this.CreateDriver.clearForm();\r\n        }\r\n    }\r\n\r\n    setPanelHeader(headerText: string) {\r\n        this.HeaderText = headerText;\r\n    }\r\n\r\n    getDriverDetails() {\r\n        this.getAllDrivers();\r\n        $(\"#invited-driver-grid-datatable\").DataTable().clear().destroy();\r\n        $(\"#onboarded-driver-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    async setShiftInfo() {\r\n        this.DriverShiftDetailList.forEach(async (driver) => {\r\n            for await (let shift of driver.ScheduleList) {\r\n                var shiftDetail = new ShiftDetailModel();\r\n                shiftDetail.FromDate = moment(shift.StartDate).format('MM/DD/YYYY');\r\n                shiftDetail.ToDate = moment(shift.EndDate).format('MM/DD/YYYY');\r\n                shiftDetail.ShiftFrom = shift.ShiftDetail.StartTime;\r\n                shiftDetail.ShiftTo = shift.ShiftDetail.EndTime;\r\n                this.ShiftInfo.Shifts.push(shiftDetail);\r\n            }\r\n        });\r\n    }\r\n    setdeleteDriver(driverInfo: DriverViewModel) {\r\n        this.IsScheduleExists = false;\r\n        this.setDeleteDriverInfo = driverInfo;\r\n        if (driverInfo.IsScheduleExists) {\r\n            this.IsScheduleExists = true;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DriverScheduleCalenderComponent } from './driver-schedule-calender/driver-schedule-calender.component';\nimport { DriverManagementComponent } from './driver-management/driver-management.component';\nimport { DriverComponent } from './driver/driver.component';\n\nconst routeDriver: Routes = [\n  {\n    path: '',\n    component: DriverComponent\n  },\n  {\n    path: 'View',\n    component: DriverManagementComponent\n  },\n  {\n    path: 'schedule',\n    component: DriverScheduleCalenderComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routeDriver)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class DriverScheduleRoutingModule { }\n","<div>\r\n    <!--<div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <img src=\"src/assets/trailer.png\" class=\"pull-left mr10\" width=\"40\" />\r\n            <h4 class=\"pt0 pull-left\">Driver  Schedule</h4>\r\n        </div>\r\n    </div>-->\r\n    <div class=\"row justify-content-between\">\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\"\r\n                                         [settings]=\"multiselectShiftById\" [data]=\"regionList\"\r\n                                         (onSelect)=\"onRegionSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\" \r\n                    [settings]=\"multiselectSettingsById\" [data]=\"DriverList\" (onSelect)=\"onDriverSelect($event)\"\r\n                    (onDeSelect)=\"onDriverDeSelect($event)\" [(ngModel)]=\"SelectedDriverList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Trailer(s)'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"TrailerList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <!--<div class=\"col-sm-2\">\r\n            <div class=\"form-group mb10\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Route(s)'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"RouteList\"\r\n                                         (onSelect)=\"onRouteSelect($event)\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-6\" style=\"display:none\">\r\n            <div class=\"form-group\">\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" [value]=\"0\">All</label>\r\n                </div>\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" [value]=\"1\">Planned Schedule</label>\r\n                </div>\r\n                <div class=\"radio-inline\">\r\n                    <label><input type=\"radio\" name=\"scheduleType\" ng-control=\"scheduleType\" [(ngModel)]=\"scheduleType\"\r\n                            (change)=\"onDriverSelect()\" value=\"2\">UnPlanned Schedule </label>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <!--<div class=\"col-sm-3 float-right\">\r\n            <app-create-trailer-schedule></app-create-trailer-schedule>\r\n        </div>-->\r\n        <div class=\"col-sm-3 float-right\">\r\n            <create-driver-schedule (OnScheduleAdded)=\"OnScheduleAdded($event)\"></create-driver-schedule>\r\n        </div>\r\n        <!--<div class=\"col-sm-3 float-right\">\r\n            <app-create-region (OnScheduleAdded)=\"OnScheduleAdded($event)\"></app-create-region>\r\n        </div>-->\r\n    </div>\r\n\r\n    <div class=\"row\" *ngIf=\"isShowCalender\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n\r\n                        <!--start-->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 text-center\">\r\n\r\n                            </div>\r\n                            <div class=\"col-md-5 text-center\">\r\n                                <div>\r\n                                    <div class=\"btn btn-default btn-xs\" mwlCalendarPreviousView [view]=\"view\"\r\n                                        [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n                                        (click)=\"setNextMonthEvents(viewDate,'Previous')\">\r\n                                        <i class=\"fas fa-arrow-left\"></i>\r\n                                    </div>\r\n\r\n                                    <div class=\"btn\tbtn-default btn-xs\" id=\"idToday\" mwlCalendarToday\r\n                                        [(viewDate)]=\"viewDate\" (click)=\"setNextMonthEvents(viewDate,'Today')\">\r\n                                        {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n                                    </div>\r\n                                    <div class=\"btn\tbtn-default btn-xs\" mwlCalendarNextView [view]=\"view\"\r\n                                        [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\"\r\n                                        (click)=\"setNextMonthEvents(viewDate,'Next')\">\r\n                                        <i class=\"fas fa-arrow-right\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!--<div class=\"col-md-4 text-center\">\r\n        <h3 class=\"mt5\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n    </div>-->\r\n                            <div class=\"col-md-4 text-right\">\r\n                                <div>\r\n                                    <a  class=\"btn\"  [ngClass]=\"view === CalendarView.Month ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Month)\"\r\n                                         [class.active]=\"view === CalendarView.Month\" id=\"idMonth\">\r\n                                         <label for=\"idMonth\" >Month</label>\r\n                                    </a>\r\n                                    <a  class=\"btn\" [ngClass]=\"view === CalendarView.Week ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Week)\"\r\n                                         [class.active]=\"view === CalendarView.Week\" id=\"idWeek\">\r\n                                         <label for=\"idWeek\" >Week </label>\r\n                                        \r\n                                </a>\r\n                                    <a  class=\"btn\" [ngClass]=\"view === CalendarView.Day ? 'btn-primary': 'btn-default'\"\r\n                                         (click)=\"setView(CalendarView.Day)\"\r\n                                         [class.active]=\"view === CalendarView.Day\" id=\"idDay\">\r\n                                         <label for=\"idDay\">Day</label>\r\n                                        \r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div [ngSwitch]=\"view\">                          \r\n                            <button type=\"button\" id=\"idViewDay\" hidden data-toggle=\"modal\"\r\n                                data-target=\"#idViewDayDetail\">Open Modal</button>                           \r\n                            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\"\r\n                                [events]=\"evt\" [cellTemplate]=\"customCellTemplate\" [refresh]=\"refresh\"\r\n                                [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\">\r\n                            </mwl-calendar-month-view>\r\n                            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\"\r\n                                [events]=\"evt\" [refresh]=\"refresh\">\r\n                            </mwl-calendar-week-view>\r\n                            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"evt\"\r\n                                [refresh]=\"refresh\">\r\n                            </mwl-calendar-day-view>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--custom template for the month view-->\r\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <!--<span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>-->\r\n        <div>\r\n            <table class=\"table table-hover\">\r\n\r\n                <tr *ngFor=\"let item of day.events let i = index;\">\r\n                    <td [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                        class=\"label  calender-grid\" *ngIf=\"i<2\"> <span><strong>{{item.driverShortName }} </strong>\r\n                            <strong>{{item.shiftFrom}}</strong> - <strong>{{item.shiftTo}}</strong></span></td>\r\n                    <!--<td [ngStyle]=\"{'background-color': item.color.primary}\" class=\"cal-day-badge\" *ngIf=\"i<2\"><span><strong>{{item.shiftFrom}}</strong> - <strong>{{item.shiftTo}}</strong></span> </td>-->\r\n                </tr>\r\n                <tr *ngIf=\"day.events.length>2\">\r\n                    <td><strong>...</strong></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <span class=\"cal-day-number\"><strong>{{ day.date | calendarDate:'monthViewDayNumber':locale }}</strong> </span>\r\n\r\n    </div>\r\n\r\n    <div class=\"cell-totals\">\r\n        <span *ngFor=\"let group of day.eventGroups\" class=\"badge badge-{{ group[0] }}\">\r\n            {{ group[1].length }}\r\n        </span>\r\n    </div>\r\n</ng-template>\r\n\r\n<!--view shifts-->\r\n\r\n<div id=\"idViewDayDetail\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                <h4 class=\"modal-title\">{{SelectedDate}} <span\r\n                        class=\"pull-right\">{{driverScheduleMapping.DriverName}}</span></h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <table class=\"table table-bordered\" *ngIf=\"!isShowEditPannel && !IsConfirmDelete\">\r\n                    <thead>\r\n                        <tr>\r\n\r\n                            <td>Driver</td>\r\n                            <td>Shift</td>\r\n                            <td> From Date </td>\r\n                            <td>To Date</td>\r\n                            <td>Total Days</td>\r\n                            <!--<td>Schedule Type</td>-->\r\n                            <td>Action</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let event of Selectedevent\">\r\n\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.driverName}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\"> {{event.shiftFrom}} -\r\n                                {{event.shiftTo}} {{event.description}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.fromDate}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.toDate}}</td>\r\n                            <td [ngStyle]=\"{'background-color': event.color.primary}\">{{event.repeatDayList?.length}}\r\n                            </td>\r\n                            <!--<td [ngStyle]=\"{'background-color': event.color.primary}\"><span class=\"label-font label\" [ngClass]=\"event.isUnplanedSchedule ? 'label-warning': 'label-primary'\"> {{event.isUnplanedSchedule ? 'UnPlaned Schedule':'Planed Schedule'}}</span></td>-->\r\n                            <td *ngIf=\"!event.isUnplanedSchedule\">\r\n                                <i class=\"fas fa-edit  icon-zoom btn-primary label-font\"\r\n                                    (click)=\"editSchedule(event)\"></i> &nbsp;&nbsp;&nbsp;\r\n                                <i class=\"fas fa-trash-alt color-maroon icon-zoom label-font\"\r\n                                    (click)=\"rmvSchedule(event)\"></i> &nbsp;&nbsp;\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n                <!--edit--> \r\n\r\n                <!-- delete -->\r\n\r\n                <div class=\"form-group col-md-12\" *ngIf=\"IsConfirmDelete\">                   \r\n                        <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                        <h4 class=\"modal-title\"><span>Do you wish to :</span></h4>\r\n                    \r\n                    <div class=\"row col-md-12\">\r\n                        <div class=\"form-control\">\r\n                            <input  class=\"form-check-input\" type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"1\" id=\"deleteOptionsSingle\" [(ngModel)]=\"deleteOption\">                               \r\n                            <label class=\"form-check-label\" for=\"deleteOptionsSingle\">Delete only this day's\r\n                                schedule</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-md-12\" *ngIf=\"!hideDeleteRange\">\r\n                        <div class=\"form-control\">\r\n                            <input class=\"form-check-input\"  type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"2\" id=\"deleteOptionsRange\" [(ngModel)]=\"deleteOption\">\r\n                            <label class=\"form-check-label\" for=\"deleteOptionsRange\">Delete the entire range of this\r\n                                schedule</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row col-md-12\" >\r\n                        <div class=\"form-control\">\r\n                            <input class=\"form-check-input\"  type=\"radio\" name=\"deleteOptions\"\r\n                                [value]=\"3\" id=\"deleteOptionsEntire\" [(ngModel)]=\"deleteOption\">\r\n                            <label class=\"form-check-label\" for=\"deleteOptionsEntire\">Delete the whole schedule for this\r\n                                driver</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-default\" id=\"closeDelete\" (click)=\"closeDeleteModel()\" data-dismiss=\"modal\" >Close</button>\r\n                        <button type=\"button\" class=\"btn btn-default\" id=\"deleteSchedule\" (click)=\"RemoveSchedule(eventDelete)\">Submit</button>                \r\n                    </div>\r\n                </div>\r\n\r\n                <!-- End Delete -->\r\n                         \r\n            <div class=\"modal-footer\" *ngIf=\"!IsConfirmDelete\">\r\n                <!-- <button type=\"button\" class=\"btn btn-default\" *ngIf=\"isShowEditPannel && !isApplyAll\" (click)=\"updateCurrentSchedule()\">Submit</button>\r\n                <button type=\"button\" class=\"btn btn-default\" *ngIf=\"isShowEditPannel && isApplyAll\" (click)=\"UpdateSchedule()\">Submit</button> -->\r\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"closeViewDayDetailModel()\" id=\"idCloseModel\"\r\n                    data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!--end view Shift-->\r\n<div class=\"loader\" *ngIf=\"(regionService.onLoadingChanged | async)\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"IsSheduleEdit\">\r\n    <ng-sidebar-container style=\"z-index: 99999;\">\r\n        <ng-sidebar [(opened)]=\"_openedEditPanel\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\"\r\n            style=\"height: 100vh\">\r\n            <a (click)=\"_editToggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib ml10 mt10 mb10\">Modify Driver Schedule</h3>\r\n\r\n            <content class=\"pr30\" autocomplete=\"off\" (keydown.enter)=\"$event.preventDefault()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group readonly\">\r\n                            <label for=\"Region\">Region:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Region(s)'\" \r\n                                [settings]=\"singleselectSettingsById\" [data]=\"DriverRegionList\" [(ngModel)]=\"Selectedregion\"\r\n                                [disabled]=\"true\">\r\n                            </ng-multiselect-dropdown>                         \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group readonly\">\r\n                            <label for=\"Drivers\">Driver:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Driver(s)'\" \r\n                                [settings]=\"singleselectSettingsById\" [data]=\"SelectedDriverList\" [(ngModel)]=\"SelectedDriver\"\r\n                                [disabled]=\"true\" >\r\n                            </ng-multiselect-dropdown>                          \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Shift\">Shift:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Select Shift(s)'\" \r\n                                [settings]=\"multiselectShiftById\" [data]=\"ShiftList\" [(ngModel)]=\"driverSchedule.selectedShifts\"\r\n                                (onSelect)=\"validateShiftForDriver($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>               \r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\" *ngIf=\"!startDateEnable\">\r\n                            <label for=\"fromDate\">From Date:</label>\r\n                            <input type=\"text\" [readonly]=\"true\" [(ngModel)]=\"eFromDate\" class=\"form-control datepicker\"\r\n                                placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\"\r\n                                [maxDate]=\"MaxStartDate\" />                          \r\n                        <!-- </div> -->\r\n                        </div>\r\n                        <div class=\"form-group\" *ngIf=\"startDateEnable\">\r\n                            <label for=\"fromDate\">From Date:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"eFromDate\" class=\"form-control datepicker\"\r\n                                placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                (onDateChange)=\"setFromDate($event);\" [minDate]=\"MinStartDate\"\r\n                                [maxDate]=\"MaxStartDate\" />\r\n                            <!-- <div *ngIf=\"isInvalid('fromDate')\" class=\"color-maroon\"> -->\r\n                            <div *ngIf=\"isRequired('eFromDate')\">\r\n                                Required.\r\n                            </div>\r\n                        <!-- </div> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">                      \r\n                        <div class=\"form-group\">\r\n                            <label for=\"ToDate\">To Date:</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"eToDate\" class=\"form-control datepicker\" placeholder=\"Date\"\r\n                                myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"\r\n                                [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\" *ngIf=\"IsUpdateForMultiple\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input type=\"radio\" class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\"\r\n                                    [value]=\"1\" id=\"inlineRadioDaily\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioDaily\">Daily</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\" [value]=\"2\"\r\n                                    id=\"inlineRadioWdays\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioWdays\">WeekDays (Mon to Fri)</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\" [value]=\"3\"\r\n                                    id=\"inlineRadioEvery\" [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioEvery\">Repeat Every</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\" *ngIf=\"eToDate && eFromDate\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"selectedTypes\"\r\n                                    (change)=\"InitializeDates()\" [value]=\"4\" id=\"inlineRadioCustom\"\r\n                                    [(ngModel)]=\"selectedType\">\r\n                                <label class=\"form-check-label\" for=\"inlineRadioCustom\">Custom</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\" *ngIf=\"IsUpdateForMultiple && selectedType=='4'\">\r\n                            <label for=\"Dates\"> Dates:</label>\r\n                            <ng-multiselect-dropdown [placeholder]=\"'Date (s)'\" \r\n                                [settings]=\"multiselectDateSettingsById\" [data]=\"DateList\" [(ngModel)]=\"customDates\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\" *ngIf=\"IsUpdateForMultiple && selectedType=='3'\">\r\n                            <label for=\"Days\">Days:</label>\r\n                            <input type=\"number\" placeholder=\"days\" min=\"1\" class=\"form-control\" [(ngModel)]=\"repeat\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row form-group\">\r\n                    <div class=\"col-sm-12\" *ngIf=\"ConflictDateList.length > 0\">\r\n                        <div class=\"alert alert-warning fs12 mt10 mb0 radius-10\">\r\n                            <i class=\"fas fa-exclamation-circle mr5\"></i> <strong>Warning:</strong> Driver Schedule(s) exists <a\r\n                                (click)=\"showDriverConflictSchedules()\">Show Details</a>\r\n                            <table class=\"table table-striped table-bordered table-hover\" *ngIf=\"IsShowConflictTable\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Shift</th>\r\n                                        <th> Conflict Dates</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let event of ConflictDateList\">\r\n                                        <td>{{driverSchedule.selectedShifts[0].Name}}</td>\r\n                                        <td>{{event}}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div>\r\n                <div class=\"col-sm-12 row-fluid text-right form-buttons\">\r\n                    <div class=\"text-right\" >\r\n                        <input type=\"button\" value=\"Cancel\" class=\"btn btn-default\" (click)=\"_editToggleOpened(false)\">\r\n                        <button type=\"button\" id=\"Submit\" class=\"btn btn-primary\"\r\n                        (click)=\"UpdateSchedule()\">Submit</button>\r\n                    </div>                    \r\n                </div>\r\n            </content>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>","import { Component, ViewChild, TemplateRef, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours } from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport * as moment from 'moment';\nimport { DriverSchedule, DriverScheduleMapping, ConflictDates } from '../models/DriverSchedule';\nimport { Declarations } from '../../declarations.module';\nimport { RegionModel } from '../../company-addresses/region/model/region';\nimport { RouteInfoService } from 'src/app/carrier/service/route-info.service';\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\nimport { RegionScheduleMappingViewModel } from '../models/regionSchedule';\nimport { DeleteDriverSchedule } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-driver-schedule-calender',\n    templateUrl: './driver-schedule-calender.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./driver-schedule-calender.component.css']\n})\nexport class DriverScheduleCalenderComponent implements OnInit {\n\n    public CalendarView = CalendarView;\n    public isShowCalender = true;\n    public IsLoading = false;\n    public DriverList: DropdownItem[];\n    public RegionList: DropdownItem[];\n    public DriverRegionList: any = [];\n    driverIds = '';\n    public SelectedDriverList = [];\n    public multiselectSettingsById: IDropdownSettings;\n    public multiselectDateSettingsById: IDropdownSettings;\n    public multiselectShiftById: IDropdownSettings;\n    public singleselectSettingsById: IDropdownSettings;\n    isShowEditPannel = false;\n    isApplyAll = false; //edit schedule\n    DriverShiftDetailList: any[] = [];\n    RepeatList: any[] = [];\n    DateList: any[] = [];\n    ShiftList: any[] = [];\n    regionList: any[] = [];\n    TrailerList: any[] = [];\n    RouteList: any[] = [];\n    driverSchedule: DriverSchedule = {};\n    driverScheduleMapping: DriverScheduleMapping = {};\n    repeat: number = 1\n    customDates: any = [];\n    CurrentScheduleId: '';\n    //min max date\n    MinStartDate = new Date();\n    MaxStartDate = new Date();\n    startDateEnable: boolean;\n    view: CalendarView = CalendarView.Month;\n    viewDate: Date = new Date();\n    //view \n    Selectedevent = [];\n    SelectedDate: any;\n    //end      \n    IsUpdateForMultiple: any = false;\n    scheduleType = 0;\n    refresh: Subject<any> = new Subject();\n    //evt: CalendarEvent[] = [];\n    evt: any = [];\n    activeDayIsOpen: boolean = false;\n    RegionShiftDetailList: any[] = []\n\n    public _opened: boolean = false;\n    public _animate: boolean = true;\n    public _positionNum: number = 1;\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\n\n    //#region  Edit & Delete\n    public _openedEditPanel: boolean = false;\n    IsSheduleEdit = false;\n    eFromDate: any;\n    eToDate: any;\n    public Selectedregion?: any = [];\n    public SelectedDriver?: any = [];\n    public IsShiftRepeted: boolean = false;\n    selectedType: any = 0;\n    public IsConfirmDelete: boolean = false;\n    public deleteOption: any = 1;\n    public eventDelete: any;\n    public DriverId: string;\n    public hideDeleteRange: boolean = false;\n    public ConflictDateList = [];\n    public conflictDates: any;\n    public IsShowConflictTable: boolean = false;\n    //#endregion\n\n    constructor(public regionService: RegionService, private routeService: RouteInfoService) {\n\n    }\n    ngOnInit() {\n        this.getDrivers();\n        //  this.getShifts();\n        this.getRegions();\n        this.init();\n        this.MaxStartDate.setMonth(this.MaxStartDate.getMonth() + 2);\n        //this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 10);\n    }\n\n    ngAfterViewInit(): void {\n        this.IsLoading = false;\n    }\n\n    init() {\n        this.multiselectSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n\n        this.singleselectSettingsById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 5,\n            allowSearchFilter: false,\n            enableCheckAll: false,\n            disabledField: \"true\"\n        }\n\n        this.multiselectShiftById = {\n            singleSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: false\n        }\n        this.multiselectDateSettingsById = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            itemsShowLimit: 2,\n            allowSearchFilter: false,\n            enableCheckAll: true\n        }\n    }\n\n    public dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n\n        if (isSameMonth(date, this.viewDate)) {\n            if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n                this.activeDayIsOpen = false;\n            } else {\n\n                this.Selectedevent = events;\n                this.SelectedDate = moment(date).format('MM/DD/YYYY');\n                let element: HTMLElement = document.getElementById('idViewDay') as HTMLElement;\n                element.click();\n                //this.activeDayIsOpen = true;\n\n            }\n            this.viewDate = date;\n        }\n    }\n\n    async setView(view: CalendarView) {\n        this.view = view;\n        this.setNextMonthEvents(this.viewDate, this.view);\n    }\n\n    public closeOpenMonthViewDay() {\n        this.activeDayIsOpen = false;\n    }\n    private getDrivers(): void {\n        this.regionService.getDrivers()\n            .subscribe((drivers: DropdownItem[]) => {\n                this.DriverList = drivers;\n            });\n    }\n\n    // public onRegionSelect($event) {\n\n    //     var region = this.regionList.find(f => f.Id == $event.Id);\n    //     this.TrailerList = region.Trailers.map(res => { return { Id: res.Code, Name: `${res.Name}` } });\n    //     this.DriverList = region.Drivers.map(res => { return { Id: res.Id, Name: `${res.Name}` } });\n    //     this.getRoutes(region.Id);\n\n    //     this.getRegionScheduls(region) \n\n    // }\n\n    private getRegionScheduls(region) {\n        this.regionService.getSchedulesByRegion(region.Id, this.scheduleType)\n            .subscribe((regions: RegionScheduleMappingViewModel[]) => {\n                this.RegionShiftDetailList = regions;\n            });\n    }\n\n\n    private getRoutes(regionId): void {\n        this.routeService.getRoutesByRegion(regionId)\n            .subscribe((routes: RouteInformationModel[]) => {\n                this.getRouteDropDown(routes);\n            });\n    }\n\n    private getRouteDropDown(routeList): void {\n        this.RouteList = routeList.ResponseData\n    }\n\n    async onDriverSelect($event?) {\n        this.regionService.onLoadingChanged.next(true);\n        this.evt = [];\n        let driverIds = [];\n        this.SelectedDriverList.forEach(res => { driverIds.push(res.Id) });\n        let drivers = driverIds.join();\n        if (driverIds.length > 0) {\n            this.regionService.getShiftByDrivers(drivers, this.scheduleType)\n                .subscribe((data) => {\n                    if (data.Result) {\n                        this.DriverShiftDetailList = [];\n                        this.DriverShiftDetailList = data.Result;\n                        this.setNextMonthEvents(this.viewDate, 'Today');\n                    }\n                    //let element: HTMLElement = document.getElementById('idToday') as HTMLElement;\n                    // element.click();\n                    this.IsLoading = false;\n                });\n        }\n        this.regionService.onLoadingChanged.next(false);\n    }\n\n\n\n    async onDriverDeSelect($event) {\n        this.isShowCalender = false;\n        this.evt = await this.evt.filter(f => f.driverId != $event.Id);\n        //  this.DriverShiftDetailList = await this.DriverShiftDetailList.filter(f => f.DriverId != $event.Id);\n        this.isShowCalender = true;\n    }\n\n    async setEvents(mnth?, year?) {\n        this.regionService.onLoadingChanged.next(true);\n        this.DriverShiftDetailList.forEach(async (driver) => {\n            let color = await this.getRandomColor();\n            let driverShortName = this.getShortDriverName(driver.DriverName);\n\n            for await (let shift of driver.ScheduleList) {\n                let startDate = this.changeTimeFormat(shift.ShiftDetail.StartTime);\n                let endDate = this.changeTimeFormat(shift.ShiftDetail.EndTime);\n                //previous and next logic\n                if (year) {\n                    startDate = new Date(new Date(new Date(new Date(startDate).setMonth(mnth))).setFullYear(year)).getTime();\n                    endDate = new Date(new Date(new Date(new Date(endDate).setMonth(mnth))).setFullYear(year)).getTime();\n                }\n                //end\n\n                if (this.view != CalendarView.Month && startDate > endDate) // if start time is greater than end time then add 1 day in end time\n                {\n                    endDate = addDays(new Date(endDate), 1).getTime();\n                }\n\n                // creating template for event schedule\n                var event = {\n                    mappingId: driver.Id,\n                    repeatEvery: shift.RepeatEveryDay,\n                    typeId: shift.TypeId,\n                    id: shift.Id,\n                    repeatDayList: shift.RepeatDayList,\n                    shiftId: shift.ShiftId,\n                    regionName: shift.ShiftDetail.RegionName,\n                    driverId: driver.DriverId,\n                    driverName: driver.DriverName,\n                    driverShortName: driverShortName,\n                    shiftFrom: shift.ShiftDetail.StartTime,\n                    shiftTo: shift.ShiftDetail.EndTime,\n                    fromDate: moment(shift.StrStartDate).format('MM/DD/YYYY'),\n                    toDate: moment(shift.StrEndDate).format('MM/DD/YYYY'),\n                    start: new Date(startDate),  // day wise start date time\n                    end: new Date(endDate),       // day wise end date time\n                    title: `<table class=\"table \"> <tr><td> Driver - <strong>${driver.DriverName}</strong></td> <td><strong>${shift.ShiftDetail.StartTime} - ${shift.ShiftDetail.EndTime}</strong></td></tr></table> `,\n                    color: color,\n                    resizable: {\n                        beforeStart: true,\n                        afterEnd: true\n                    },\n                    draggable: false,\n                    isUnplanedSchedule: driver.IsUnplanedSchedule,\n                    description: shift.Description,\n                }\n                //end\n                //this.evt.push(event)\n                let currentDate = new Date().getDate();\n                let eDate = new Date((moment(shift.StrEndDate).toLocaleString())).setHours(23, 59, 59, 0);\n                let sDate = new Date((moment(shift.StrStartDate).toLocaleString())).setHours(0, 0, 0, 0);\n                let date = new Date(new Date().setMonth(mnth)).setFullYear(year);\n                let currentMonthLastDate = await this.daysInMonth(mnth + 1, year);\n\n                for (let i = -currentDate; i < ((currentMonthLastDate + 1) - currentDate); i++) {\n                    if (new Date(sDate).getTime() <= addDays(new Date(date), i).getTime() && new Date(eDate).getTime() >= addDays(new Date(date), i).getTime() && shift.RepeatDayList && shift.RepeatDayStringList.filter(dt => moment(dt).format('MM/DD/YYYY') == moment(addDays(new Date(event.start), i)).format('MM/DD/YYYY')).length > 0)\n                        await this.addEventShift(event, i);\n                }\n            }\n\n        })\n        this.regionService.onLoadingChanged.next(false);\n    }\n\n\n\n\n    async addEventShift(event, i) {\n        let evt = { ...event };\n        evt.start = addDays(new Date(event.start), i);\n        evt.end = addDays(new Date(event.end), i);\n        this.evt.push(evt);\n    }\n\n    async daysInMonth(month, year) {\n        return new Date(year, month, 0).getDate();\n    }\n    private changeTimeFormat(time) {\n        //var time = '06:30 PM';\n        var hours = Number(time.match(/^(\\d+)/)[1]);\n        var minutes = Number(time.match(/:(\\d+)/)[1]);\n        var AMPM = time.match(/\\s(.*)$/)[1];\n        if (AMPM == \"PM\" && hours < 12) hours = hours + 12;\n        if (AMPM == \"AM\" && hours == 12) hours = hours - 12;\n        var sHours = hours.toString();\n        var sMinutes = minutes.toString();\n        if (hours < 10) sHours = \"0\" + sHours;\n        if (minutes < 10) sMinutes = \"0\" + sMinutes;\n        var date = (new Date(new Date().setHours(+sHours)).setMinutes(+sMinutes));\n        return date;\n    }\n\n    async getRandomColor() {\n        var letters = 'BCDEF'.split('');\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * letters.length)];\n        }\n        return { primary: color, secondary: color };\n    }\n\n    async setNextMonthEvents(date, event) {\n        this.evt = [];\n        await this.setEvents(new Date(date).getMonth(), new Date(date).getFullYear());\n    }\n\n    async OnScheduleAdded($event) {\n        this.regionService.onLoadingChanged.next(false);\n        this.IsLoading = false;\n        if ($event) {\n            this.scheduleType = 0;\n            this.SelectedDriverList.forEach(res => {\n                let cnt = $event.findIndex(x => x.Id == res.Id)\n                if (cnt < 0)\n                    $event.push(res)\n            });\n            this.SelectedDriverList = $event.slice();\n            this.onDriverSelect();\n        }\n    }\n    //edit\n\n    async rmvSchedule(event) {\n        this.eventDelete = event;\n        this.AssignVeriables(event);\n        this.IsConfirmDelete = true;\n    }\n\n    async updateCurrentSchedule() {\n        if (this.driverSchedule.selectedShifts.length == 0) {\n            Declarations.msgerror('Select shift', undefined, undefined);\n            return false;\n        }\n        //rmv todays\n\n        this.driverScheduleMapping = await this.DriverShiftDetailList.find(f => f.Id == this.driverScheduleMapping.Id);\n        if (this.driverScheduleMapping != null && this.driverScheduleMapping.ScheduleList.length > 0) {\n            this.driverScheduleMapping.ScheduleList.forEach(f => {\n                if (f.IsActive = true && f.Id == this.driverSchedule.Id && f.ShiftId == this.driverSchedule.ShiftId) {\n                    if (f.RepeatDayList != null && f.RepeatDayList.length > 0) {\n                        if (f.RepeatDayList.length == 1) {\n                            delete f.RepeatDayList[0];\n                            f.RepeatDayList = [];\n                        } else {\n                            let indexof = f.RepeatDayList.findIndex(x => moment(x).format('MM/DD/YYYY') == moment(this.sdate).format('MM/DD/YYYY'));\n                            delete f.RepeatDayList[indexof];\n                            let reOrder = []\n                            f.RepeatDayList.forEach(r => { reOrder.push(r) });\n                            f.RepeatDayList = reOrder;\n                        }\n                    }\n                }\n            });\n\n            let getCurrentSelectedShift = this.driverSchedule.selectedShifts[0].Id;\n            let checkShift = this.driverScheduleMapping.ScheduleList.filter(x => x.IsActive = true && x.ShiftId == getCurrentSelectedShift && x.RepeatDayList == null);\n            if (checkShift != null && checkShift.length > 0) {\n                let index = this.driverScheduleMapping.ScheduleList.findIndex(x => x.IsActive = true && x.ShiftId == getCurrentSelectedShift && x.RepeatDayList == null);\n                this.driverScheduleMapping.ScheduleList[index].RepeatDayList = [];\n                this.driverScheduleMapping.ScheduleList[index].RepeatDayList.push(moment(this.sdate).toDate());\n                this.driverScheduleMapping.ScheduleList[index].StartDate = moment(this.sdate).toDate();\n                this.driverScheduleMapping.ScheduleList[index].EndDate = moment(this.sdate).toDate();\n            }\n            else {\n                this.driverSchedule.RepeatDayList = [];\n                this.driverSchedule.RepeatDayList.push(moment(this.SelectedDate).toDate());\n                this.driverScheduleMapping.ScheduleList.push({ Id: `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: moment(this.SelectedDate).toDate(), EndDate: moment(this.SelectedDate).toDate(), RepeatDayList: this.driverSchedule.RepeatDayList, ShiftId: getCurrentSelectedShift })\n            }\n        }\n        for await (let item of this.driverScheduleMapping.ScheduleList) {\n            if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                var list = [];\n                for await (let repeat of item.RepeatDayList) {\n                    list.push(moment(repeat).toDate());\n                }\n                item.RepeatDayList = list;\n            }\n\n        }\n        this.update(this.driverScheduleMapping);\n    }\n\n    sdate: any;\n    edate: any;\n    async editSchedule(event) {\n        this.DriverRegionList = [];\n        let currentDate = new Date((moment().toLocaleString())).setHours(0, 0, 0, 0);\n        if (new Date(event.toDate).getTime() < new Date(currentDate).getTime()) {\n            Declarations.msgerror('You cannot edit past records.', undefined, undefined);\n        } else {\n            this._editToggleOpened(true);\n            this.TypeCheck(event);\n            this.AssignVeriables(event);\n        }\n    }\n\n    async AssignVeriables(event) {\n        this.deleteOption = this.deleteOption ? this.deleteOption : 1;\n        this.DriverRegionList = [];\n        let currentDate = new Date((moment().toLocaleString())).setHours(0, 0, 0, 0);\n        for await (let item of this.regionList) {\n            if (item.Drivers.find(f => f.Id == event.driverId)) {\n                var dRegion = { Id: 0, Name: \"\" };\n                dRegion.Id = item.Id;\n                dRegion.Name = item.Name;\n                this.DriverRegionList.push(dRegion)\n                this.Selectedregion = this.DriverRegionList;\n                this.SelectedDriver = item.Drivers.filter(f => f.Id == event.driverId);\n                this.ShiftList = item.Shifts.map(res => { return { Id: res.Id, Name: `${res.StartTime} - ${res.EndTime}` } });\n            }\n        }\n        this.driverSchedule.selectedShifts = this.ShiftList.filter(f => f.Id == event.shiftId);           // this.isShowEditPannel = true;\n        this.eFromDate = moment(event.start).format('MM/DD/YYYY');\n        this.eToDate = moment(event.toDate).format('MM/DD/YYYY');\n        this.driverScheduleMapping.Id = event.mappingId;\n        this.driverSchedule.Id = event.Id;\n        this.driverSchedule.ShiftId = event.shiftId;\n        this.driverScheduleMapping.DriverId = event.driverId;\n        this.DriverId = event.driverId;\n        this.driverScheduleMapping.DriverName = event.driverName;\n        this.sdate = moment(event.start).format('MM/DD/YYYY');//this.SelectedDate;\n        this.edate = moment(event.toDate).format('MM/DD/YYYY');\n        this.IsSheduleEdit = true;\n        //this.SelectedDate = moment(this.sdate).format('MM/DD/YYYY');\n        this.IsUpdateForMultiple = false;\n        if (this.eFromDate < this.eToDate) {\n            this.IsUpdateForMultiple = true;\n        }\n        this.hideDeleteRange = false;\n        if (new Date(this.sdate).getTime() == new Date(this.eToDate).getTime()) {\n\n            this.hideDeleteRange = true;\n        }\n        if (new Date(this.sdate).getTime() < new Date(currentDate).getTime()) {\n\n            this.startDateEnable = true;\n        }\n        this.driverSchedule.Id = event.id;\n        this.driverSchedule.RepeatDayList = event.repeatDayList;\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n\n        this.InitializeDates();\n        if (this.selectedType == 4\n            && event.repeatDayList != null\n            && event.repeatDayList.length > 0) {\n\n            this.customDates = [];\n            let chCustomDates = [];\n            let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n            event.repeatDayList.forEach(x => {\n                let xdate = moment(x).toDate();\n                let dt = `${moment(xdate).format('MM/DD/YYYY')} (${days[new Date(xdate).getDay()]})`;\n                let sdt = this.DateList.find(x => x.Name == dt);\n                if (sdt != null)\n                    chCustomDates.push({ Id: sdt.Id, Name: sdt.Name });\n            })\n            this.customDates = chCustomDates;\n        }\n    }\n    private TypeCheck(event: any) {\n        this.selectedType = event.typeId ? event.typeId : \"1\";\n        this.repeat = event.repeatEvery ? event.repeatEvery : \"1\";\n    }\n    async UpdateSchedule() {\n\n        if (this.sdate && this.edate) {\n            this.driverSchedule.StartDate = new Date(moment(this.sdate).toDate().getTime());\n            this.driverSchedule.EndDate = new Date(moment(this.edate).toDate().getTime());\n        } else {\n            Declarations.msgerror('Select valid dates', undefined, undefined);\n            return false;\n        }\n        if (moment(this.sdate) > moment(this.edate)) {\n            Declarations.msgerror('From date cannot less than end date', undefined, undefined);\n            return false;\n        }\n        if (this.driverSchedule.selectedShifts.length < 0) {\n            Declarations.msgerror('Please select shift', undefined, undefined);\n            return false;\n        }\n        this.InitializeDates();\n        if (this.driverSchedule.selectedShifts.length == 0 || !this.driverSchedule.StartDate || !this.driverSchedule.EndDate || this.DateList.length == 0) { return false; }\n        //update logic\n        else {\n            let selectedDates = []\n            if (this.selectedType == 4)\n                selectedDates = this.customDates;\n            else\n                selectedDates = this.DateList;\n\n            let ShiftId = this.driverSchedule.selectedShifts[0].Id;\n            let scheduleList = {};\n            let newScheduleId = null;\n            this.driverScheduleMapping = this.DriverShiftDetailList.find(f => f.Id == this.driverScheduleMapping.Id);\n\n            let CurrentDriverShiftDetailList = this.DriverShiftDetailList.filter(f => f.DriverId == this.SelectedDriver[0].Id);\n            let driverScheduleMappingIndex = CurrentDriverShiftDetailList.findIndex(f => f.Id == this.driverScheduleMapping.Id);\n\n            if (this.driverScheduleMapping != null && this.driverScheduleMapping.ScheduleList != null && this.driverScheduleMapping.ScheduleList.length > 0) {\n\n                let getCurrent = this.driverScheduleMapping.ScheduleList.find(x => x.Id == this.driverSchedule.Id && x.ShiftId == this.driverSchedule.ShiftId && x.IsActive);\n                let getIndex = this.driverScheduleMapping.ScheduleList.findIndex(x => x.Id == this.driverSchedule.Id && x.ShiftId == this.driverSchedule.ShiftId && x.IsActive)\n                //Update current one\n\n                if (this.driverSchedule.ShiftId != ShiftId && getCurrent != null && getCurrent.RepeatDayList != null) {\n\n                    // \n\n                    let rpDayList = [];\n                    getCurrent.RepeatDayList.forEach(pre => {\n                        let idx = selectedDates.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(pre).format('MM/DD/YYYY'));\n                        if (idx < 0)\n                            rpDayList.push(pre);\n                    })\n                    getCurrent.RepeatDayList = [];\n                    getCurrent.RepeatDayList = rpDayList;\n                }\n                else {\n                    if (getCurrent != null && getCurrent.RepeatDayList != null) {\n                        let rpDayList = [];\n                        var loop = new Date(this.driverSchedule.StartDate);\n                        let cnt = 0\n                        while (loop <= this.driverSchedule.EndDate) {\n                            var newDate = loop.setDate(loop.getDate() + cnt);\n                            if (!(newDate > this.driverSchedule.EndDate.setDate(this.driverSchedule.EndDate.getDate()))) {\n                                getCurrent.RepeatDayList = getCurrent.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') != moment(newDate).format('MM/DD/YYYY'));\n                                if (cnt != 1) {\n                                    cnt++\n                                }\n                            }\n                        }\n                        selectedDates.forEach(element => getCurrent.RepeatDayList.push(\"/Date(\" + element.Id.setDate(element.Id.getDate()) + \")\"));\n                        let olst = [];\n                        getCurrent.RepeatDayList.forEach(x => olst.push(moment(x).format('DD/MM/YYYY')));\n                        olst.sort(); getCurrent.RepeatDayList = []; getCurrent.RepeatDayList = olst;\n                        olst = []; getCurrent.RepeatDayList.forEach(x => {\n                            var dt = x.split('/');\n                            let oDt = dt[1] + '/' + dt[0] + '/' + dt[2];\n                            let eDt = moment(oDt).toDate()\n                            olst.push(eDt.setDate(eDt.getDate()));\n                        });\n                        getCurrent.RepeatDayList = olst;\n                        olst = []; getCurrent.RepeatDayList.forEach(x => olst.push(moment(x).toDate()));\n                        getCurrent.RepeatDayList = olst;\n                    }\n                    else {\n                        getCurrent.RepeatDayList = [];\n                        selectedDates.forEach(element => getCurrent.RepeatDayList.push(element.Id));\n                    }\n                }\n                getCurrent.StartDate = getCurrent.RepeatDayList[0];\n                getCurrent.RepeatDayStringList = [];\n                getCurrent.RepeatDayList.forEach(x => {\n                    getCurrent.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                });\n                getCurrent.EndDate = getCurrent.RepeatDayList[getCurrent.RepeatDayList.length - 1];\n                delete this.driverScheduleMapping.ScheduleList[getIndex];\n                this.driverScheduleMapping.ScheduleList.splice(getIndex, 0, getCurrent);\n                //Update current done\n                //start add new logic    \n\n                if (this.driverSchedule.ShiftId != ShiftId) {\n                    let oDateList = []\n                    let oDateListString = []\n                    if (this.selectedType == 4) {\n                        this.customDates.forEach(x => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(x.Id).format('MM/DD/YYYY'))) {\n                                oDateList.push(new Date(x.Id).getTime())\n                            }\n                        });\n                    }\n                    else {\n                        this.DateList.forEach(x => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(x.Id).format('MM/DD/YYYY'))) {\n                                oDateList.push(new Date(x.Id).getTime());\n                            }\n                        });\n                    }\n                    this.DateList.forEach(x => { oDateListString.push(moment(x.Id).format('MM/DD/YYYY')) });\n                    newScheduleId = `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`;\n                    scheduleList = { Id: `${this.driverScheduleMapping.DriverId}_${new Date().getTime()}`, IsActive: true, StartDate: new Date(oDateList[0]).getTime(), EndDate: new Date(oDateList[oDateList.length - 1]).getTime(), RepeatDayList: oDateList, RepeatDayStringList: oDateListString, ShiftId: ShiftId, RepeatEveryDay: this.repeat, TypeId: this.selectedType };\n                    this.driverScheduleMapping.ScheduleList.push(scheduleList)\n                }\n            }\n\n            // reset index\n\n            let oScheduleList = [];\n            this.driverScheduleMapping.ScheduleList.forEach(e => { oScheduleList.push(e) });\n            this.driverScheduleMapping.ScheduleList = [];\n            this.driverScheduleMapping.ScheduleList = oScheduleList;\n\n            //Check previous records exist or not for same shift with conflict dates \n            this.driverScheduleMapping.ScheduleList.forEach(x => {\n                if (x.IsActive && x.ShiftId == ShiftId && newScheduleId != x.Id) {\n                    let newList = [];\n                    if (x.RepeatDayList != null && x.RepeatDayList.length > 0) {\n                        x.RepeatDayList.forEach(y => {\n                            if (!this.ConflictDateList.some((item) => moment(item).format('MM/DD/YYYY') == moment(y).format('MM/DD/YYYY'))) {\n                                newList.push(moment(y).toDate())\n                            }\n                        });\n                        x.RepeatDayList = newList;\n                        if (x.RepeatDayList.length > 0) {\n                            x.StartDate = x.RepeatDayList[0];\n                            x.EndDate = x.RepeatDayList[x.RepeatDayList.length - 1];\n                            x.RepeatDayStringList = [];\n                            x.RepeatDayList.forEach(t => x.RepeatDayStringList.push(moment(t).format('MM/DD/YYYY')));\n                        }\n                        else {\n                            x.IsActive = false;\n                        }\n                    }\n                }\n            });\n\n            for await (let item of this.driverScheduleMapping.ScheduleList) {\n                if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                    item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                    item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                    var list = [];\n                    var stringList = [];\n                    item.RepeatDayStringList = [];\n                    for await (let repeat of item.RepeatDayList) {\n                        list.push(moment(repeat).toDate());\n                        if (item.RepeatDayStringList == null || item.RepeatDayStringList.length == 0) {\n                            stringList.push(moment(repeat).format('MM/DD/YYYY'))\n                        }\n                    }\n                    item.RepeatDayList = list;\n                    item.RepeatDayStringList = stringList;\n                }\n            }\n\n            //reset Index of \n            delete CurrentDriverShiftDetailList[driverScheduleMappingIndex];\n            CurrentDriverShiftDetailList.splice(driverScheduleMappingIndex, 0, this.driverScheduleMapping);\n            let oShifScheduleList = [];\n            CurrentDriverShiftDetailList.forEach(e => { oShifScheduleList.push(e) });\n            CurrentDriverShiftDetailList = [];\n            CurrentDriverShiftDetailList = oShifScheduleList;\n            //End Reset Index of \n\n            CurrentDriverShiftDetailList.forEach(ele => {\n                if (ele.Id != this.driverScheduleMapping.Id) {\n                    ele.ScheduleList.forEach(pop => {\n                        if (pop.IsActive && pop.ShiftId == ShiftId && pop.RepeatDayList != null && pop.RepeatDayList.length > 0) {\n\n                            let rpDayList = [];\n                            pop.RepeatDayList.forEach(pre => {\n                                let idx = selectedDates.findIndex(x => moment(x.Id).format('MM/DD/YYYY') == moment(pre).format('MM/DD/YYYY'));\n                                if (idx < 0)\n                                    rpDayList.push(pre);\n                            })\n                            pop.RepeatDayList = [];\n                            pop.RepeatDayList = rpDayList;\n\n\n                            pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                            pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                            pop.RepeatDayStringList = [];\n                            pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                        }\n                        if (pop.RepeatDayList == null || pop.RepeatDayList.length == 0)\n                            pop.IsActive = false;\n                        else {\n                            pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                            pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                            pop.RepeatDayStringList = [];\n                            pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                        }\n\n                    });\n                }\n            });\n            //end\n            this.update(CurrentDriverShiftDetailList);\n        }\n\n    }\n    async delete(model, sDate) {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.deleteDriverSchedule(model, sDate)\n            .subscribe((response: any) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule deleted successfully', undefined, undefined);\n                    setTimeout(function () {\n                        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                        element.click();\n                    }, 2000);\n                    this.regionService.onLoadingChanged.next(false);\n                    this.refresh.next();\n                    this.onDriverSelect();\n                    this.setView(CalendarView.Month);\n                    this.deleteOption = 1;\n                }\n                else {\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    setTimeout(function () {\n                        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                        element.click();\n                    }, 1500);\n                    this.regionService.onLoadingChanged.next(false);\n                    this.refresh.next();\n                    this.deleteOption = 1;\n                    this.onDriverSelect();\n                    this.setView(CalendarView.Month);\n                }\n                this.clearEditForm();\n            });\n\n        this.hideDeleteRange = false;\n        this.IsConfirmDelete = false;\n    }\n    async update(model, Isdelete?: boolean) {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.updateDriverSchedule(model, this.SelectedDate)\n            .subscribe((response: any) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess('Driver Schedule updated successfully', undefined, undefined);\n                    if (!Isdelete) {\n                        this.regionService.onLoadingChanged.next(false);\n                        this.closeViewDayDetailModel();\n                        this.onDriverSelect();\n                        this.refresh.next();\n                        this.deleteOption = 1;\n                    }\n                    else {\n                        this.IsConfirmDelete = false;\n                        setTimeout(function () {\n                            let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n                            element.click();\n                        }, 1500);\n                        this.regionService.onLoadingChanged.next(false);\n                        this.onDriverSelect();\n                        this.refresh.next();\n                        this.deleteOption = 1;\n                    }\n                }\n                else {\n                    this.closeViewDayDetailModel();\n                    this.regionService.onLoadingChanged.next(false);\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\n                    this.refresh.next();\n                }\n                this.clearEditForm();\n            });\n    }\n\n    private getRegions(): void {\n        this.regionService.onLoadingChanged.next(true);\n        this.regionService.getRegions()\n            .subscribe((region: RegionModel) => {\n                this.regionList = region.Regions;\n                this.regionService.onLoadingChanged.next(false);\n            });\n    }\n\n    async InitializeDates(sdate?, end?) {\n        this.driverSchedule.RepeatDayList = [];\n        this.DateList = [];\n        this.repeat = this.selectedType == 3 ? this.repeat : 0;\n        var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        if (this.sdate && this.edate) {\n            for (var dt = new Date(this.sdate); dt <= new Date(this.edate); dt.setDate(dt.getDate() + this.repeat + 1)) {\n                if (this.selectedType && this.selectedType == 2) {\n                    (new Date(dt).getDay() != 0 && new Date(dt).getDay() != 6) ? this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` }) : '';\n                }\n                else {\n                    this.DateList.push({ Id: new Date(dt), Name: `${moment(dt).format('MM/DD/YYYY')} (${days[new Date(dt).getDay()]})` });\n                }\n            }\n        }\n        for (var dt = new Date(sdate); dt <= new Date(end); dt.setDate(dt.getDate() + 1)) {\n            this.driverSchedule.RepeatDayList.push(new Date(dt));\n        }\n        //this.customDates = this.DateList;\n        this.validateShiftForDriver(this.driverSchedule.selectedShifts[0]);\n        return this.DateList;\n    }\n\n    setFromDate(event: any): void {\n        this.sdate = (event);\n        let d = moment(new Date(new Date().setFullYear(new Date().getFullYear() + 1))).toDate();\n        !this.edate ? this.edate = (moment(d).format('MM/DD/YYYY')) : '';\n        if (this.sdate != '' && this.edate != '') {\n            let _fromDate = moment(this.sdate).toDate();\n            let _toDate = moment(this.edate).toDate();\n            if (_toDate < _fromDate) {\n                this.edate = (event);\n            }\n        }\n    }\n\n    async setToDate(event: any) {\n\n        this.IsUpdateForMultiple = false;\n        this.edate = (event);\n        if (this.sdate != '' && this.edate != '') {\n            let _fromDate = moment(this.sdate).toDate();\n            let _toDate = moment(this.edate).toDate();\n            if (_fromDate > _toDate) {\n                this.sdate = (event);\n            }\n            if (_toDate > _fromDate) {\n                this.IsUpdateForMultiple = true;\n            }\n        }\n        this.InitializeDates();\n    }\n\n    public closeViewDayDetailModel(): void {\n        this.isShowEditPannel = false;\n        this.startDateEnable = false;  // validate from date if it is less than current date.\n        this.isApplyAll = false;\n        this.driverScheduleMapping = {};\n        this.driverSchedule = {};\n        this._openedEditPanel = false;\n        let element: HTMLElement = document.getElementById('idCloseModel') as HTMLElement;\n        element.click();\n    }\n\n    private getShortDriverName(name): any {\n        const fullName = name.split(' ');\n        const lastName = fullName.pop();\n        const firstName = fullName.join(' ');\n        return firstName.substring(0, 1) + \" \" + lastName;\n\n    }\n\n    public _toggleOpened(shouldOpen: boolean): void {\n        if (shouldOpen) {\n            this._opened = true;\n        }\n        else {\n            this._opened = !this._opened;\n        }\n    }\n    public _editToggleOpened(shouldOpen: boolean): void {\n\n        if (shouldOpen) {\n            this._openedEditPanel = true;\n        }\n        else {\n            this._openedEditPanel = !this._openedEditPanel;\n        }\n        this.clearEditForm();\n    }\n\n    public clearEditForm() {\n        this.Selectedregion = [];\n        this.SelectedDriver = [];\n        this.driverSchedule.selectedShifts = [];\n        this.startDateEnable = false;\n        this.eToDate = null;\n        this.eFromDate = null;\n        this.IsUpdateForMultiple = false;\n        this.selectedType = 0;\n        this.customDates = [];\n        this.repeat = 0;\n        this.IsShiftRepeted = false\n        this.IsSheduleEdit = false;\n        this.SelectedDate = new Date();\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n    }\n\n    public changeIsApplyAll() {\n        this.isApplyAll = !this.isApplyAll;\n        this.selectedType = 1;\n        this.InitializeDates();\n    }\n\n    public validateShiftForDriver(event) {\n        let DaysRepeateCount = 1;\n        this.ConflictDateList = [];\n        this.IsShowConflictTable = false;\n        this.IsShiftRepeted = false;\n        if (this.sdate && this.edate) {\n\n            let CheckConflictDays = this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n            if (CheckConflictDays != null && CheckConflictDays.length > 0) {\n                let selecteddateList = [];\n                if (this.selectedType == 4) {\n                    selecteddateList = this.customDates;\n                }\n                else {\n                    selecteddateList = this.DateList;\n                }\n                CheckConflictDays.forEach(ShiftDetails => {\n                    if (ShiftDetails.ScheduleList != null) {\n                        if (selecteddateList.length > 0) {\n                            ShiftDetails.ScheduleList.forEach(elm => {\n                                if (elm.ShiftId == event.Id && elm.ShiftId != this.driverSchedule.ShiftId) {\n                                    if (elm.RepeatDayList != null && elm.RepeatDayList.length > 0) {\n                                        elm.RepeatDayList.forEach(dte => {\n                                            selecteddateList.forEach(slDate => {\n                                                if (moment(slDate.Id).format('MM/DD/YYYY') == moment(dte).format('MM/DD/YYYY')) {\n                                                    this.ConflictDateList.push(moment(slDate.Id).format('MM/DD/YYYY'));\n                                                    DaysRepeateCount++;\n                                                }\n                                            });\n                                        });\n                                    }\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            Declarations.msgwarning('Please select dates first', undefined, undefined);\n            return true;\n        }\n        if (this.ConflictDateList.length > 0) {\n            Declarations.msgwarning(\"Following shifts are already assigned to the drive\", undefined, undefined);\n        }\n\n\n    }\n\n    public isRequired(name) {\n        if (name == \"\" || name == null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    public closeDeleteModel() {\n        this.IsConfirmDelete = false;\n    }\n    async RemoveSchedule(event) {\n        let currentDelete: DriverSchedule;\n        this.driverScheduleMapping = await this.DriverShiftDetailList.find(f => f.Id == event.mappingId);\n\n        let currentDriverShiftDetailList = await this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n        let driverScheduleMappingIndex = await currentDriverShiftDetailList.findIndex(f => f.Id == event.mappingId);\n\n        let driverShiftMapping = await this.DriverShiftDetailList.filter(f => f.DriverId == this.DriverId);\n        if (this.deleteOption != \"\" && this.deleteOption != null) {\n            if (this.deleteOption == DeleteDriverSchedule.Single) {\n                this.driverScheduleMapping.ScheduleList.forEach(f => {\n                    if (f.IsActive = true && f.Id == this.driverSchedule.Id && f.ShiftId == this.driverSchedule.ShiftId) {\n                        if (f.RepeatDayList != null && f.RepeatDayList.length > 0) {\n                            currentDelete = f;\n                            if (f.RepeatDayList.length == 1) {\n                                delete f.RepeatDayList[0];\n                                f.RepeatDayList = null;\n                            } else {\n                                let indexof = f.RepeatDayList.findIndex(x => moment(x).format('MM/DD/YYYY') == moment(this.sdate).format('MM/DD/YYYY'));\n                                delete f.RepeatDayList[indexof];\n                                let reOrder = []\n                                f.RepeatDayList.forEach(r => { reOrder.push(r) });\n                                f.RepeatDayList = reOrder;\n                                f.StartDate = f.RepeatDayList[0];\n                                f.EndDate = f.RepeatDayList[f.RepeatDayList.length - 1];\n                                f.RepeatDayStringList = [];\n                                f.RepeatDayList.forEach(x => {\n                                    f.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                                });\n                            }\n                        }\n                    }\n                });\n                this.IsConfirmDelete = false;\n            }\n            if (this.deleteOption == DeleteDriverSchedule.Range) {\n                if (this.driverScheduleMapping.ScheduleList.length > 0) {\n                    let sList = this.driverScheduleMapping.ScheduleList.forEach(res => {\n                        if (res.Id == this.driverSchedule.Id) {\n                            let reOrder = [] = res.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') < moment(this.sdate).format('MM/DD/YYYY'));\n                            res.RepeatDayList = reOrder;\n                            res.StartDate = res.RepeatDayList[0];\n                            res.EndDate = res.RepeatDayList[res.RepeatDayList.length - 1];\n                            res.RepeatDayStringList = [];\n                            res.RepeatDayList.forEach(x => {\n                                res.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                            });\n                        }\n                    });\n                }\n                this.IsConfirmDelete = false;\n            }\n\n            if (this.deleteOption == DeleteDriverSchedule.Whole) {\n                if (driverShiftMapping.length > 0) {\n                    for await (let oSchedule of driverShiftMapping) {\n                        if (oSchedule.ScheduleList.length > 0) {\n                            oSchedule.ScheduleList.forEach(ele => {\n                                if (ele.RepeatDayList != null) {\n                                    let reOrder = [] = ele.RepeatDayList.filter(x => moment(x).format('MM/DD/YYYY') < moment(this.sdate).format('MM/DD/YYYY'));\n                                    ele.RepeatDayList = reOrder;\n                                    ele.StartDate = ele.RepeatDayList[0];\n                                    ele.EndDate = ele.RepeatDayList[ele.RepeatDayList.length - 1];\n                                    ele.RepeatDayStringList = [];\n                                    ele.RepeatDayList.forEach(x => {\n                                        ele.RepeatDayStringList.push(moment(x).format('MM/DD/YYYY'))\n                                    });\n                                }\n                            });\n                        }\n                    }\n\n                    await driverShiftMapping.forEach(element => {\n                        for (let item of element.ScheduleList) {\n                            if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                                item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                                item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                                var list = [];\n                                for (let repeat of item.RepeatDayList) {\n                                    list.push(moment(repeat).toDate());\n                                }\n                                item.RepeatDayList = list;\n                            }\n                        }\n                    });\n                    this.delete(driverShiftMapping, this.SelectedDate);\n                }\n            }\n\n            if (this.deleteOption == DeleteDriverSchedule.Range || this.deleteOption == DeleteDriverSchedule.Single) {\n\n                for await (let item of this.driverScheduleMapping.ScheduleList) {\n                    if (item.RepeatDayList != null && item.RepeatDayList.length > 0) {\n                        item.StartDate = moment(item.RepeatDayList[0]).toDate();\n                        item.EndDate = moment(item.RepeatDayList[item.RepeatDayList.length - 1]).toDate();\n                        var list = [];\n                        for await (let repeat of item.RepeatDayList) {\n                            list.push(moment(repeat).toDate());\n                        }\n                        item.RepeatDayList = list;\n                    }\n                }\n\n                delete currentDriverShiftDetailList[driverScheduleMappingIndex];\n                currentDriverShiftDetailList.splice(driverScheduleMappingIndex, 0, this.driverScheduleMapping);\n                let oShifScheduleList = [];\n                currentDriverShiftDetailList.forEach(e => { oShifScheduleList.push(e) });\n                this.DriverShiftDetailList = [];\n                currentDriverShiftDetailList = oShifScheduleList;\n                //End Reset Index of \n\n                currentDriverShiftDetailList.forEach(ele => {\n                    if (ele.Id != this.driverScheduleMapping.Id) {\n                        ele.ScheduleList.forEach(pop => {\n                            if (pop.IsActive && pop.RepeatDayList != null && pop.RepeatDayList.length > 0) {\n                                pop.StartDate = moment(pop.RepeatDayList[0]).toDate();\n                                pop.EndDate = moment(pop.RepeatDayList[pop.RepeatDayList.length - 1]).toDate();\n                                pop.RepeatDayStringList = [];\n                                pop.RepeatDayList.forEach(ab => pop.RepeatDayStringList.push(moment(ab).format('MM/DD/YYYY')));\n                            }\n                            else\n                                pop.IsActive = false;\n                        });\n                    }\n                });\n                this.update(currentDriverShiftDetailList, true);\n                return true;\n            }\n\n        } else {\n            Declarations.msgwarning('Please select delete option', undefined, undefined);\n            return false;\n        }\n    }\n\n    public showDriverConflictSchedules() {\n        this.IsShowConflictTable = !this.IsShowConflictTable;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { DriverScheduleRoutingModule } from './driver-routing.module';\nimport { DriverScheduleCalenderComponent } from './driver-schedule-calender/driver-schedule-calender.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from 'src/app/modules/shared.module';\nimport { FlatpickrModule } from 'angularx-flatpickr';\nimport { DriverManagementComponent } from './driver-management/driver-management.component';\nimport { CreateDriverScheduleComponent } from './create-driver-schedule/create-driver-schedule.component';\nimport { DriverComponent } from './driver/driver.component';\nimport { ViewDriverComponent } from './driver-management/view-driver/view-driver.component';\nimport { CreateDriverComponent } from './driver-management/create-driver/create-driver.component';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { CreateTrailerScheduleComponent } from './create-trailer-schedule/create-trailer-schedule.component';\nimport { CreateRegionComponent } from './create-region-schedule/create-region.component';\n\n\n@NgModule({\n    declarations: [DriverScheduleCalenderComponent, DriverManagementComponent, CreateDriverScheduleComponent, DriverComponent, ViewDriverComponent, CreateDriverComponent, CreateTrailerScheduleComponent, CreateRegionComponent],\n    \n  imports: [\n      DriverScheduleRoutingModule,\n      SharedModule,\n      DirectiveModule,\n      NgbModalModule,\n      DataTablesModule,\n      FlatpickrModule.forRoot(),\n      CalendarModule.forRoot({\n          provide: DateAdapter,\n          useFactory: adapterFactory\n      }),\n     \n  ]\n})\nexport class DriverModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { RegionService } from '../../company-addresses/region/service/region.service';\n\n@Component({\n  selector: 'app-driver',\n  templateUrl: './driver.component.html',\n  styleUrls: ['./driver.component.css']\n})\nexport class DriverComponent implements OnInit {\n    \n    isDriverShow = true;\n    isProfileShow=false;\n    constructor(public regionService: RegionService) { }\n\n  ngOnInit() {\n  }\n\n    public changeTab(tabClick:string): void {\n      this.isDriverShow = false;\n      this. isProfileShow=false;\n       if(tabClick===\"DriverShow\")\n       {\n        this.isDriverShow = true;\n       }\n       if(tabClick==\"ProfileShow\")\n       {\n        this.isProfileShow = true;\n       }\n    }\n}\n","<div class=\"small-tab\" id=\"driverManagement-Tab\">\r\n    <!--<ul class=\"nav nav-tabs mb15\">\r\n        <li class=\"active\"><a data-toggle=\"tab\" href=\"#driver\" class=\"fs16 mr15\" (click)=\"changeTab()\">Drivers</a></li>\r\n        <li><a data-toggle=\"tab\" href=\"#schedule\" class=\"fs16\" (click)=\"changeTab()\">Schedules</a></li>\r\n    </ul>-->\r\n    <ul class=\"nav nav-tabs mb15\" role=\"tablist\">\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link active fs16 mr15\" id=\"home-tab\" data-toggle=\"tab\" href=\"#driver\"(click)=\"changeTab('DriverShow')\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Drivers</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link fs16 mr15\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#schedule\"  (click)=\"changeTab('ProfileShow')\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Profile</a>\r\n        </li>\r\n    </ul>\r\n    <div class=\"tab-content\">\r\n        <div id=\"driver\" class=\"tab-pane fade show active\">\r\n            <div *ngIf=\"isDriverShow\">\r\n                <app-driver-management></app-driver-management>\r\n            </div>\r\n\r\n        </div>\r\n        <div id=\"schedule\" class=\"tab-pane fade\">\r\n            <div *ngIf=\"isProfileShow\">\r\n                <app-driver-schedule-calender></app-driver-schedule-calender>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"(regionService.onLoadingChanged | async)\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class DriverManagementModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.LicenseTypes = [];\r\n        this.TrailerTypes = [];\r\n    }\r\n\r\n    public Drivers: DriverViewModel[];\r\n    public LicenseTypes: DropdownItem[];\r\n    public TrailerTypes: DropdownItem[];\r\n}\r\n\r\nexport class DriverViewModel {\r\n    constructor() {\r\n        this.LicenseType = new DropdownItem();\r\n        this.TrailerType = {};\r\n        this.Status = new DropdownItem();\r\n        this.ShiftId = [];\r\n    }\r\n\r\n    public DriverId: string;\r\n    public FirstName: string;\r\n    public LastName: string;\r\n    public CompanyName: string;\r\n    public Email: string;\r\n    public LicenseNumber: string;\r\n    public ExpiryDate: string;\r\n    public ContactNumber: string;\r\n    public DisplayTrailerTypes: string;\r\n    public DisplayLicenseType: string;\r\n    public LicenseTypeId: string;\r\n    public LicenseType: DropdownItem;\r\n    public TrailerType: any;\r\n    public TrailerTypeId: number[] = []; \r\n    public ShiftId: string[];\r\n    public Regions: string[];\r\n    public InvitedBy: string;\r\n    public UserId: number;\r\n    public Status: DropdownItem;\r\n    public IsActive: boolean;\r\n    public IsScheduleExists: boolean;\r\n    public ScheduleBuilderIdInfo : string; \r\n}\r\n\r\nexport class DriverShiftModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n    }\r\n    public DriverName: string;\r\n    public Shifts: ShiftDetailModel[];\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public FromDate: string;\r\n    public ToDate: string;\r\n    public ShiftFrom: any;\r\n    public ShiftTo: any;\r\n}\r\n","export class DriverScheduleMapping {\r\n    Id?: string;\r\n    DriverId?: number;    \r\n    DriverName?: string;    \r\n    ScheduleList?: DriverSchedule[]=[];\r\n}\r\n\r\nexport class  DriverSchedule {\r\n\r\n    Id?: string;\r\n    ShiftId? : string;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    RepeatDayList?: any[] = [];\r\n    RepeatDayStringList?: any[] = [];\r\n    Type?: number;\r\n    IsActive?: boolean;\r\n    Repeat?: number;  //daily or custom\r\n    selectedShifts?: any[] = [];\r\n    selectedRepeatList?: any[] = [];\r\n    TypeId?:number;\r\n    RepeatEveryDay?: number; \r\n    }\r\n\r\n    export class ConflictDates {      \r\n        Date: string;        \r\n      }","\r\nexport class TrailerSchedule {\r\n\r\n    Id: string;\r\n    RegionId: string;\r\n    TrailerId: string;\r\n    TrailerShiftDetail: TrailerShiftDetail[] = [];\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    RepeatDayList: any[] = [];\r\n    Type: number;\r\n    IsActive: boolean;\r\n}\r\n\r\nexport class TrailerShiftDetail {\r\n    ShiftId: string;\r\n    ColumnId: number;\r\n}\r\n\r\n\r\n","export class RegionScheduleViewModel {\r\n    Id?: string;\r\n    RegionId?: string;\r\n    RouteId?: string;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    IsActive: boolean;\r\n    Repeat?: number;\r\n    RepeatDayList?: any[] = [];\r\n    Type?: number;\r\n    RegionShiftDetail?: ShiftSchedule[] = [];\r\n}\r\n\r\nexport class ShiftSchedule {\r\n    ShiftId?: string;\r\n    ColumnIndex?: number;\r\n}\r\n\r\nexport class RegionScheduleMappingViewModel {\r\n    Id?: String;\r\n    RegionId?: String;\r\n    RouteId?: String;\r\n    RegionName?: String;\r\n    RouteName?: String;\r\n    IsUnplanedSchedule?: boolean;\r\n    StartDate?: Date;\r\n    EndDate?: Date;\r\n    Description?: String;\r\n    RepeatDayList?: any[] = [];\r\n    ShiftDetail?: ShiftDetailViewModel[] = []\r\n}\r\n\r\nexport class ShiftDetailViewModel {\r\n    ShiftId?: string;\r\n    ShiftName: string;\r\n    ColumnIndex: string;\r\n    ColumnName: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { DriverViewModel } from '../models/DriverManagementModel';\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriverService extends HandleError {\n    private getShiftUrl: string = '/Settings/Profile/GetShifts';\r\n    private getAllDriversUrl: string = '/Settings/Profile/GetAllDrivers';\r\n    private postAddDriverUrl: string = '/Settings/Profile/AddDriver';\r\n    private postDeleteDriverUrl: string = '/Settings/Profile/DeleteInvitedUser';\r\n    private changeDriverStatusUrl: string = '/Settings/Profile/ChangeUserStatus?id=';\r\n    private getRegionsUrl: string = '/Supplier/Region/GetRegionsDdl';\r\n    private addTrailerScheduleUrl: string = '/Supplier/Dispatch/AddTrailerSchedule';\n    onLoadingChanged: BehaviorSubject<any>;\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\n\n    getShifts(): Observable<any> {\r\n        return this.httpClient.get(this.getShiftUrl)\r\n            .pipe(catchError(this.handleError<any>('getShifts', null)));\r\n    }\n\n    getAllDrivers(): Observable<any> {\r\n        return this.httpClient.get(this.getAllDriversUrl)\r\n            .pipe(catchError(this.handleError<any>('getAllDrivers', null)));\r\n    }\n\n    postAddDriver(driverModel: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postAddDriverUrl, driverModel)\r\n            .pipe(catchError(this.handleError<any>('postAddDriver', null)));\r\n    }\n\n    postDeleteDriver(driverdelteInfo: DriverViewModel): Observable<any> {\r\n        var data = { Id: driverdelteInfo.UserId, IsScheduleExists: driverdelteInfo.IsScheduleExists, ScheduleBuilderIdInfo: driverdelteInfo.ScheduleBuilderIdInfo };\r\n        return this.httpClient.post<any>(this.postDeleteDriverUrl, data)\r\n            .pipe(catchError(this.handleError<any>('postDeleteDriver', null)));\r\n    }\n\n    changeDriverStatus(id: number, isActive: boolean): Observable<any> {\r\n        return this.httpClient.get(this.changeDriverStatusUrl + id + \"&isActive=\" + isActive)\r\n            .pipe(catchError(this.handleError<any>('changeDriverStatus', null)));\r\n    }\n\n    getRegions(): Observable<any> {\r\n        return this.httpClient.get(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getRegions', null)));\r\n    }\n\n    addTrailerSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addTrailerScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addTrailerSchedule', model)));\r\n    }\n}\n"]}