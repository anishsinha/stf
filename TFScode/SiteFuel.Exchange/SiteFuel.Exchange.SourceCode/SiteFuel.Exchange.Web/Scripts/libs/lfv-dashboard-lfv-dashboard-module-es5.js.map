{"version":3,"sources":["webpack:///node_modules/angular7-csv/dist/Angular-csv.js","webpack:///src/app/lfv-dashboard/carrier-bol-report/carrier-bol-report.component.ts","webpack:///src/app/lfv-dashboard/carrier-bol-report/carrier-bol-report.component.html","webpack:///src/app/lfv-dashboard/carrier/carrier.component.ts","webpack:///src/app/lfv-dashboard/carrier/carrier.component.html","webpack:///src/app/lfv-dashboard/left-side-filter/left-side-filter.component.ts","webpack:///src/app/lfv-dashboard/left-side-filter/left-side-filter.component.html","webpack:///src/app/lfv-dashboard/lfv-accrual-report/lfv-accrual-report.component.ts","webpack:///src/app/lfv-dashboard/lfv-accrual-report/lfv-accrual-report.component.html","webpack:///src/app/lfv-dashboard/lfv-dashboard.module.ts","webpack:///src/app/lfv-dashboard/lfv-scratch-report/lfv-scratch-report.component.ts","webpack:///src/app/lfv-dashboard/lfv-scratch-report/lfv-scratch-report.component.html","webpack:///src/app/lfv-dashboard/master/master.component.html","webpack:///src/app/lfv-dashboard/master/master.component.ts","webpack:///src/app/lfv-dashboard/service/liftfiledashboardservice.service.ts","webpack:///src/app/lfv-dashboard/supplier-bol-report/supplier-bol-report.component.ts","webpack:///src/app/lfv-dashboard/supplier-bol-report/supplier-bol-report.component.html","webpack:///src/app/lfv-dashboard/validation/validation.component.ts","webpack:///src/app/lfv-dashboard/validation/validation.component.html"],"names":["Object","defineProperty","exports","value","CsvConfigConsts","EOL","BOM","DEFAULT_FIELD_SEPARATOR","DEFAULT_DECIMAL_SEPARATOR","DEFAULT_QUOTE","DEFAULT_SHOW_TITLE","DEFAULT_TITLE","DEFAULT_FILENAME","DEFAULT_SHOW_LABELS","DEFAULT_USE_BOM","DEFAULT_HEADER","DEFAULT_NO_DOWNLOAD","ConfigDefaults","filename","fieldSeparator","quoteStrings","decimalseparator","showLabels","showTitle","title","useBom","headers","noDownload","AngularCsv","DataJSON","options","csv","config","data","JSON","parse","_options","objectAssign","generateCsv","prototype","getHeaders","getBody","console","log","blob","Blob","navigator","msSaveBlob","replace","uri","encodeURI","link","document","createElement","href","URL","createObjectURL","setAttribute","download","body","appendChild","click","removeChild","_this","length","row","reduce","headerRow","header","slice","i","index","formartData","isFloat","toLocaleString","toString","indexOf","input","isFinite","Boolean","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","target","source","_i","arguments","from","to","symbols","s","key","call","getOwnPropertySymbols","CarrierBolReportComponent","dashboardservice","ReportRecords","dtOptions","dtTrigger","ShowGridLoader","fromDate","toDate","intializeGrid","exportColumns","columns","dom","buttons","extend","exportOptions","orientation","pagingType","pageLength","lengthMenu","getCarrierBOLReport","event","msgerror","reloadGrid","$","DataTable","clear","destroy","subscribe","next","setFromDate","setToDate","ClearFilter","selector","templateUrl","styleUrls","CarrierComponent","_lfvService","changes","LFValidationList","currentValue","isFirstChange","createChartData","carrierList","chartHeight","chart","e","colors","series","type","height","stacked","toolbar","show","animations","enabled","markers","size","responsive","breakpoint","plotOptions","bar","horizontal","dataLabels","xaxis","categories","legend","position","horizontalAlign","offsetX","fill","opacity","ApexCharts","querySelector","render","mapList","mtchRec","map","res","MatchedRecordCount","match","split","Number","nomtchRec","NoMatchRecordCount","nomatch","partialRec","PartialMatchRecordCount","partial","dupRec","DuplicateRecordCount","duplicate","pendingRec","PendingMatchCount","pending","activeExcRec","ActiveExceptionRecordCount","activeExc","ignoreRec","IgnoredMatchRecordCount","Ignore","unmstchRec","UnmatchedRecordCount","unMatch","forcedIgnoredRec","ForcedIgnoredMatchRecordCount","forcedIgnored","push","name","lfv","CarrierID","RendorChart","window","open","LeftSideFilterComponent","_lfvSevice","DateType","CarrierDrpDwnList","search","MinStartDate","Date","MaxStartDate","matchingWindowDays","selectedCarrierList","isMatchingWindow","selectedStatus","Clean","LFVRecordStatus","format","add","minfromdate","getLFCarrier","multiselectSettingsById","singleSelection","idField","textField","itemsShowLimit","allowSearchFilter","enableCheckAll","m","DisplayName","Name","Code","day","onSearch","$event","find","f","startDate","endDate","result","diff","msgwarning","emit","changeDateType","onCarrierSelect","onCarrierDeSelect","onExport","LfvAccrualReportComponent","_lfvservice","IsLoading","records","ProductTypesList","selectedProductTypesList","ProductTypeIds","FromDate","ToDate","gridcolumnsDetails","serverSide","processing","ajax","dataTablesParameters","callback","inputs","inputData","assign","getLFVAccrualReportGrid","resp","recordsTotal","recordsFiltered","order","getLFAccrualGrid","getLFVValidationStatsAndProductTypesDDL","refreshDatatable","GetLFVValidationStatsAndProductTypesDDL","dtElements","forEach","dtElement","dtInstance","then","draw","getSelectedProductTypes","Id","join","unsubscribe","route","path","component","LfvDashboardModule","forChild","declarations","imports","bolResolveForm","setValue","LfvScratchReportComponent","fb","_opened","_animate","_positionNum","_POSITIONS","LFRecords","cancelButtonText","isChecked","LFRecordIdsForIgnoreMatch","ShowSideBarLoader","SelectedTerminalList","SelectedFuelTypeList","preferenceSetting","selectedReason","reasonList","dropdownSettings","selectAllText","unSelectAllText","buildForm","getPreferencesSetting","getLFRecords","fg","group","BolNumber","control","required","LiftDate","GrossQuantity","NetQuantity","BadgeNumber","SelectedTerminal","SelectedFuelType","Notes","LIftFileRecordId","InvoiceFtlDetailId","IsBulkPlantLift","lfRecord","IsFromScratchReport","getBolDetailsForResolve","_toggleOpened","selectedLiftFileRecord","LiftRecord","TerminalList","FuelTypeList","InvoiceFtlDetailIdList","InvoiceFtlDetailsList","initFormData","eventData","checked","LFRecordIds","getLFRecordIds","IsLiftFileValidationEnabled","IsReasonCodesEnabled","GetReasonDescriptionList","getElementById","addRecordsForForcedIgnoreMatchProcessing","descriptionId","descriptionText","response","StatusCode","msgsuccess","StatusMessage","selectedLiftFileRecordId","LiftFileRecordId","invoiceFtlDetailId","parseInt","LFRecord","InvFtlDetailId","bol","TerminalName","TerminalItemCode","LoadDate","ProductType","correctedQuantity","currObj","reset","get","DisplayLiftDate","clearValidators","updateValueAndValidity","inputPostObject","fuelTypeId","FuelTypeId","selectedTerminal","terminalId","TerminalId","markAsTouched","valid","requestObj","createPostObject","saveBolDetailsForResolve","shouldOpen","table","rowcollection","each","elem","is","attr","selectAllRecords","ValidateForIgnoreMatchProcessing","submitIgnoreDescription","LFVRecordEditForm","MasterComponent","viewType","gridType","LFVRecordGrid","isValidationCarrier","bolSearchQuery","fileNameSearchQuery","showSearchControls","showSearchBtn","LiftFilesearchResults","searchGridDtOptions","searchGridDtTrigger","csvOptions","QuantityPattern","_EditOpened","_EditAnimate","_EditPositionNum","_EditPOSITIONS","initializeGrid","buildLFVRecordEditForm","exportInvitedColumns","fixedHeader","getLfvData","ids","carrierOrderIds","filterComponent","getLFValidationGrid","isCarrierPerFormanceDashboard","carrierIds","None","status","getLfvFilterGrid","getLFVRecordGrid","recordStatus","isAdminUser","IsAdminUser","LfvValidationParameters","addUnmatchedRecordForReProcessing","bolQuery","fileNameQuery","bolNumber","trim","fileName","getLFSearchRecords","el","btnOpenModal","nativeElement","shouldShow","generateCSV","exportData","Terminal","Terminals","RecordDate","CarrierName","Reason","ReasonCode","ReasonCategory","Username","ModifiedDate","LFVResolutionTime","TimeToBol","record","_EditToggleOpened","initRecordEditForm","formGroup","TerminalCode","CorrectedQuantity","CarrierId","CIN","IsBolReq","controls","setValidators","IsCorrectedQtyRes","IsGrossReq","IsCorrectedQtyOrGrossReq","pattern","IsLoadDateReq","IsTerminalCodeReq","IsTermItemCodeReq","IsCINReq","IsCarrierNameReq","markAllAsTouched","values","requestModel","correctValues","updateLiftFileRecord","loadDateWithOutSlash","changeViewType","OnSearch","OnExport","changeGridType","encapsulation","LiftfiledashboardserviceService","httpClient","urlGetLFRecordsGrid","urlGetBolDetailsForResolve","urlSaveBolDetailsForResolve","urlAddRecordsForForceIgnoreProcessing","urlAddUnmatchedRecordForReProcessing","urlGetLiftFileRecordsWithMissingTFXDeliveryDetails","urlGetTFXDeliveryDetailsWithMissingLiftFileRecords","UrlGetLFValidation","UrlGetLFCarrier","UrlGetLFVRecordGrid","urlGetLFSearchRecordsByBolFileName","UrlGetLFVAccrualReportGrid","UrlGetLFVValidationStatsAndProductTypesDDL","UrlUpdateLiftFileRecord","urlGetReasonDescriptionList","urlGetPreferencesSetting","pipe","handleError","post","LfRecordIds","lfCallId","providedIn","SupplierBolReportComponent","getSupplierBOLReport","ValidationComponent","init","events","w","columnWidth","distributed","labels","style","fontSize","TotalRecordCount"],"mappings":"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","file":"lfv-dashboard-lfv-dashboard-module-es5.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CsvConfigConsts = /** @class */ (function () {\n    function CsvConfigConsts() {\n    }\n    CsvConfigConsts.EOL = \"\\r\\n\";\n    CsvConfigConsts.BOM = \"\\ufeff\";\n    CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\n    CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\n    CsvConfigConsts.DEFAULT_QUOTE = '\"';\n    CsvConfigConsts.DEFAULT_SHOW_TITLE = false;\n    CsvConfigConsts.DEFAULT_TITLE = 'My Report';\n    CsvConfigConsts.DEFAULT_FILENAME = 'mycsv.csv';\n    CsvConfigConsts.DEFAULT_SHOW_LABELS = false;\n    CsvConfigConsts.DEFAULT_USE_BOM = true;\n    CsvConfigConsts.DEFAULT_HEADER = [];\n    CsvConfigConsts.DEFAULT_NO_DOWNLOAD = false;\n    return CsvConfigConsts;\n}());\nexports.CsvConfigConsts = CsvConfigConsts;\nexports.ConfigDefaults = {\n    filename: CsvConfigConsts.DEFAULT_FILENAME,\n    fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n    quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n    decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n    showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n    showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n    title: CsvConfigConsts.DEFAULT_TITLE,\n    useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n    headers: CsvConfigConsts.DEFAULT_HEADER,\n    noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD\n};\nvar AngularCsv = /** @class */ (function () {\n    function AngularCsv(DataJSON, filename, options) {\n        this.csv = \"\";\n        var config = options || {};\n        this.data = typeof DataJSON != 'object' ? JSON.parse(DataJSON) : DataJSON;\n        this._options = objectAssign({}, exports.ConfigDefaults, config);\n        if (this._options.filename) {\n            this._options.filename = filename;\n        }\n        this.generateCsv();\n    }\n    /**\n     * Generate and Download Csv\n     */\n    AngularCsv.prototype.generateCsv = function () {\n        if (this._options.useBom) {\n            this.csv += CsvConfigConsts.BOM;\n        }\n        if (this._options.showTitle) {\n            this.csv += this._options.title + '\\r\\n\\n';\n        }\n        this.getHeaders();\n        this.getBody();\n        if (this.csv == '') {\n            console.log(\"Invalid data\");\n            return;\n        }\n        if (this._options.noDownload) {\n            return this.csv;\n        }\n        var blob = new Blob([this.csv], { \"type\": \"text/csv;charset=utf8;\" });\n        if (navigator.msSaveBlob) {\n            var filename = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            navigator.msSaveBlob(blob, filename);\n        }\n        else {\n            var uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n            var link = document.createElement(\"a\");\n            link.href = URL.createObjectURL(blob);\n            link.setAttribute('visibility', 'hidden');\n            link.download = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    };\n    /**\n     * Create Headers\n     */\n    AngularCsv.prototype.getHeaders = function () {\n        var _this = this;\n        if (this._options.headers.length > 0) {\n            var headers = this._options.headers;\n            var row = headers.reduce(function (headerRow, header) {\n                return headerRow + header + _this._options.fieldSeparator;\n            }, '');\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Create Body\n     */\n    AngularCsv.prototype.getBody = function () {\n        for (var i = 0; i < this.data.length; i++) {\n            var row = \"\";\n            for (var index in this.data[i]) {\n                row += this.formartData(this.data[i][index]) + this._options.fieldSeparator;\n            }\n            row = row.slice(0, -1);\n            this.csv += row + CsvConfigConsts.EOL;\n        }\n    };\n    /**\n     * Format Data\n     * @param {any} data\n     */\n    AngularCsv.prototype.formartData = function (data) {\n        if (this._options.decimalseparator === 'locale' && AngularCsv.isFloat(data)) {\n            return data.toLocaleString();\n        }\n        if (this._options.decimalseparator !== '.' && AngularCsv.isFloat(data)) {\n            return data.toString().replace('.', this._options.decimalseparator);\n        }\n        if (typeof data === 'string') {\n            data = data.replace(/\"/g, '\"\"');\n            if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\n                data = this._options.quoteStrings + data + this._options.quoteStrings;\n            }\n            return data;\n        }\n        if (typeof data === 'boolean') {\n            return data ? 'TRUE' : 'FALSE';\n        }\n        return data;\n    };\n    /**\n     * Check if is Float\n     * @param {any} input\n     */\n    AngularCsv.isFloat = function (input) {\n        return +input === input && (!isFinite(input) || Boolean(input % 1));\n    };\n    return AngularCsv;\n}());\nexports.AngularCsv = AngularCsv;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n/**\n * Convet to Object\n * @param {any} val\n */\nfunction toObject(val) {\n    if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n    return Object(val);\n}\n/**\n * Assign data  to new Object\n * @param {any}   target\n * @param {any[]} ...source\n */\nfunction objectAssign(target) {\n    var source = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        source[_i - 1] = arguments[_i];\n    }\n    var from;\n    var to = toObject(target);\n    var symbols;\n    for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n                to[key] = from[key];\n            }\n        }\n        if (Object.getOwnPropertySymbols) {\n            symbols = Object.getOwnPropertySymbols(from);\n            for (var i = 0; i < symbols.length; i++) {\n                if (propIsEnumerable.call(from, symbols[i])) {\n                    to[symbols[i]] = from[symbols[i]];\n                }\n            }\n        }\n    }\n    return to;\n}\n//# sourceMappingURL=Angular-csv.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { CarrierBOLReport } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n@Component({\r\n  selector: 'app-carrier-bol-report',\r\n  templateUrl: './carrier-bol-report.component.html',\r\n  styleUrls: ['./carrier-bol-report.component.css']\r\n})\r\nexport class CarrierBolReportComponent implements OnInit {\r\n    public ReportRecords: CarrierBOLReport [] = [];\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n    public fromDate: any;\r\n    public toDate: any;\r\n    constructor(private dashboardservice: LiftfiledashboardserviceService) {\r\n        this.fromDate = null;\r\n        this.toDate = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.intializeGrid();\r\n    }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getCarrierBOLReport();\r\n    }\r\n\r\n    public setFromDate(event: any): void {\r\n        this.fromDate = event;\r\n    }\r\n\r\n    public setToDate(event: any): void {\r\n        this.toDate = event;\r\n    }\r\n    ApplyFilter() {\r\n        if ((this.fromDate == null || this.fromDate == undefined || this.fromDate == \"\")\r\n            || (this.toDate == null || this.toDate == undefined || this.toDate == \"\")) {\r\n            Declarations.msgerror(\"From/To date not selected\", undefined, undefined);\r\n        } else {\r\n            this.reloadGrid();\r\n        }\r\n    }\r\n    reloadGrid() {\r\n        $(\"#carrierbolreport-datatable\").DataTable().clear().destroy();\r\n        this.getCarrierBOLReport();\r\n    }\r\n\r\n    ClearFilter() {\r\n        this.fromDate = null;\r\n        this.toDate = null;\r\n        this.reloadGrid();\r\n    }\r\n    getCarrierBOLReport() {\r\n        let fromDate = this.fromDate\r\n        let toDate = this.toDate;\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getCarrierBOLReport(fromDate, toDate).subscribe((data: CarrierBOLReport[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.ReportRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","\r\n<div class=\"row mb10\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well pb10 mb0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-2 col-md-1 pt5 pr0\"><i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                <div class=\"col-md-3 \">\r\n                    <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"From\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" />\r\n                </div>\r\n                <div class=\"col-md-3 \">\r\n                    <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"To\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" [minDate]=\"fromDate\" (onDateChange)=\"setToDate($event);\" />\r\n                </div>\r\n                <div class=\"col-12 col-sm-4 col-md-3 mt5-xs\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Apply\" (click)=\" ApplyFilter();\" />\r\n                    <input type=\"button\" class=\"btn ml5\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <table id=\"carrierbolreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"Bol\">BOL#</th>\r\n                                    <th data-key=\"TerminalName\">Terminal Name</th>\r\n                                    <th data-key=\"LoadDate\">Lift Date</th>\r\n                                    <th data-key=\"NetQuantity\">Net Quantity</th>\r\n                                    <th data-key=\"GrossQuantity\">Gross Quantity</th>\r\n                                    <th data-key=\"BadgeNumber\">Badge#</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"FuelTypeName\">Fuel Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"ReportRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of ReportRecords; let i = index\">\r\n                                    <td>{{record.BOL}}</td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LoadDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.NetQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.GrossQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.BadgeNumber}}\r\n                                    </td>\r\n                                    <td> {{record.CarrierName}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.FuelTypeName}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { LFValidationGridViewModel } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\ndeclare var ApexCharts;\r\n@Component({\r\n  selector: 'app-carrier-performace',\r\n  templateUrl: './carrier.component.html',\r\n  styleUrls: ['./carrier.component.css']\r\n})\r\nexport class CarrierComponent implements OnInit, OnChanges {\r\n  chart: any;\r\n  @Input() LFValidationList: LFValidationGridViewModel[];\r\n  constructor(private _lfvService: LiftfiledashboardserviceService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.LFValidationList.currentValue && !changes.LFValidationList.isFirstChange()) {\r\n      this.createChartData();\r\n    }\r\n\r\n  }\r\n\r\n  //public openLFVScratchReportGrid(): void {\r\n  //  window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  //}\r\n\r\n  async RendorChart(data, carrierList, chartHeight) {\r\n    try {\r\n      if (this.chart)\r\n        this.chart.destroy();\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n    var options = {\r\n        colors: [\"#00FF00\", \"#ff0000\", \"#FF69B4\", \"#FFFF00\", \"#000080\", \"#00A7C6\", \"#800080\",'#0077ff','#A9D794'],\r\n      series: data,\r\n      chart: {\r\n        type: 'bar',\r\n        height: chartHeight,\r\n        stacked: true,\r\n        toolbar: {\r\n          show: true\r\n        },\r\n        animations: {\r\n          enabled: false\r\n        }\r\n\r\n      },\r\n      markers: {\r\n        size: 0\r\n      },\r\n      responsive: [{\r\n        breakpoint: undefined,\r\n        options: {\r\n        }\r\n      }],\r\n      plotOptions: {\r\n        bar: {\r\n          // borderRadius: 8,\r\n          horizontal: true,\r\n          dataLabels: {\r\n            //  position: 'bottom'\r\n          }\r\n        },\r\n      },\r\n     \r\n      xaxis: {\r\n        type: 'category',\r\n        categories: carrierList,\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'left',\r\n        offsetX: 40\r\n        //  offsetY: 40\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      //  colors: [\"red\", \"#F27036\", \"#663F59\", \"#6A6E94\", \"#4E88B4\", \"#00A7C6\", \"#18D8D8\", '#A9D794']\r\n      }\r\n    };\r\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline1\"), options);\r\n    try {\r\n      if (this.chart)\r\n        this.chart.render();\r\n    } catch (e) {\r\n      this.chart.destroy();\r\n      this.chart.render();\r\n    }\r\n  }\r\n\r\n  async createChartData() {\r\n    var mapList = [];\r\n    var carrierList = [];\r\n    var chartHeight = 300;\r\n\r\n    //Match Records\r\n    var mtchRec = this.LFValidationList.map(res => { return [res.MatchedRecordCount] }).toString();\r\n    var match = mtchRec && mtchRec.split(\",\").map(Number);\r\n    //NoMatch Records\r\n    var nomtchRec = this.LFValidationList.map(res => { return [res.NoMatchRecordCount] }).toString();\r\n    var nomatch = nomtchRec && nomtchRec.split(\",\").map(Number);\r\n    //Partial Match\r\n    var partialRec = this.LFValidationList.map(res => { return [res.PartialMatchRecordCount] }).toString();\r\n    var partial = partialRec && partialRec.split(\",\").map(Number);\r\n    //Duplicate\r\n    var dupRec = this.LFValidationList.map(res => { return [res.DuplicateRecordCount] }).toString();\r\n    var duplicate = dupRec && dupRec.split(\",\").map(Number);\r\n    //PendingMatchCount\r\n    var pendingRec = this.LFValidationList.map(res => { return [res.PendingMatchCount] }).toString();\r\n    var pending = pendingRec && pendingRec.split(\",\").map(Number);\r\n    //activeException\r\n    var activeExcRec = this.LFValidationList.map(res => { return [res.ActiveExceptionRecordCount] }).toString();\r\n    var activeExc = activeExcRec && activeExcRec.split(\",\").map(Number);\r\n    //IgnoredMatchRecordCount\r\n    var ignoreRec = this.LFValidationList.map(res => { return [res.IgnoredMatchRecordCount] }).toString();\r\n    var Ignore = ignoreRec && ignoreRec.split(\",\").map(Number);\r\n    //UnmatchedRecordCount\r\n    var unmstchRec = this.LFValidationList.map(res => { return [res.UnmatchedRecordCount] }).toString();\r\n    var unMatch = unmstchRec && unmstchRec.split(\",\").map(Number);\r\n      //ForcedIgnoreRecordCount\r\n      var forcedIgnoredRec = this.LFValidationList.map(res => { return [res.ForcedIgnoredMatchRecordCount] }).toString();\r\n      var forcedIgnored = forcedIgnoredRec && forcedIgnoredRec.split(\",\").map(Number);\r\n    if (this.LFValidationList.length > 0) {\r\n      await mapList.push({ name: 'Matched ', data: match })\r\n      await mapList.push({ name: 'No Match ', data: nomatch })\r\n      await mapList.push({ name: 'Partial Match ', data: partial })\r\n      await mapList.push({ name: 'Pending Match ', data: pending })\r\n      await mapList.push({ name: 'Duplicate  ', data: duplicate })\r\n      await mapList.push({ name: 'Active Exception ', data: activeExc })\r\n      await mapList.push({ name: 'Ignored Match ', data: Ignore })\r\n      await mapList.push({ name: 'Forced Ignore', data: forcedIgnored })\r\n      await mapList.push({ name: 'Unmatched  ', data: unMatch })      \r\n      await this.LFValidationList && this.LFValidationList.map(lfv => {\r\n        carrierList.push(lfv.CarrierID ? lfv.CarrierID : '-')\r\n      })\r\n      chartHeight = chartHeight + (carrierList.length * 40);\r\n    } else {\r\n      await mapList.push({ name: 'Matched ', data: [] })\r\n      await mapList.push({ name: 'No Match ', data: [] })\r\n      await mapList.push({ name: 'Partial Match ', data: [] })\r\n      await mapList.push({ name: 'Pending Match ', data: [] })\r\n      await mapList.push({ name: 'Duplicate  ', data: [] })\r\n      await mapList.push({ name: 'Active Exception ', data: [] })\r\n      await mapList.push({ name: 'Ignored Match ', data: [] })\r\n      await mapList.push({ name: 'Forced Ignore  ', data: [] })\r\n      await mapList.push({ name: 'Unmatched  ', data: [] })\r\n    }\r\n\r\n\r\n    await this.RendorChart(mapList, carrierList, chartHeight);\r\n  }\r\n  openSupplierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/SupplierBolReport\", \"_blank\");\r\n  }\r\n  openCarrierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/CarrierBolReport\", \"_blank\");\r\n  }\r\n}\r\n\r\n","<div class=\"well bg-white shadow-b pr\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-10\">\r\n\r\n            <div id=\"chart-timeline1\"></div>\r\n        </div>\r\n        <!--<div class=\"col-md-2\">\r\n        <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openLFVScratchReportGrid()\"\r\n            placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\r\n\r\n    </div>-->\r\n        \r\n    </div>\r\n</div>\r\n\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport * as moment from 'moment';\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\nimport { DropDownItem } from '../LiftFileModels';\nimport { Declarations } from 'src/app/declarations.module';\nimport { LFVRecordStatus } from 'src/app/app.enum';\ndeclare var matchingWindowDays;\n\n@Component({\n  selector: 'app-left-side-filter',\n  templateUrl: './left-side-filter.component.html',\n  styleUrls: ['./left-side-filter.component.css']\n})\n\nexport class LeftSideFilterComponent implements OnInit {\n  DateType = 3;\n  CarrierDrpDwnList: DropDownItem[] = [];\n  //min max date\n  @Output() search = new EventEmitter<any>();\n  @Output() export = new EventEmitter<any>();\n  MinStartDate = new Date();\n  MaxStartDate = new Date();\n  minfromdate: any;\n  matchingWindowDays = matchingWindowDays;\n  public fromDate: any;\n  public toDate: any;\n  public selectedCarrierList: DropDownItem[] = [];\n  public multiselectSettingsById: IDropdownSettings;\n  public isMatchingWindow = false;\n  selectedStatus=LFVRecordStatus.Clean;\n  public LFVRecordStatus=LFVRecordStatus;\n\n  constructor(private _lfvSevice: LiftfiledashboardserviceService) {\n    this.toDate = moment().format('MM/DD/YYYY');\n    this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n    this.minfromdate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n  }\n\n  ngOnInit() {\n    this.getLFCarrier();\n    this.multiselectSettingsById = {\n      singleSelection: false,\n      idField: 'DisplayName',\n      textField: 'DisplayName',\n      itemsShowLimit: 2,\n      allowSearchFilter: true,\n      enableCheckAll: true\n    }\n\n  }\n\n    private getLFCarrier() {\n        let fromDate = this.fromDate\n        let toDate = this.toDate;\n        this._lfvSevice.getLFCarrier(fromDate, toDate).subscribe(res => {\n            if (res) {\n                this.CarrierDrpDwnList = res;\n                this.CarrierDrpDwnList && this.CarrierDrpDwnList.map(m => { m.DisplayName = `${m.Name}-${m.Code}` })\n                //code=>carrierId\n                //name=CarrierName\n            }\n            else\n                this.CarrierDrpDwnList = [];\n        })\n    }\n\n  public changeDateType(value): void {\n    this.DateType = value;\n    if (this.DateType == 1) {\n      this.toDate = moment().format('MM/DD/YYYY');\n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-1, 'days').format('MM/DD/YYYY');\n      this.isMatchingWindow = false;\n    } else if (this.DateType == 3) {\n      this.toDate = moment().format('MM/DD/YYYY');\n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n      this.isMatchingWindow = false;\n    } else {\n      this.isMatchingWindow = true;\n      var day = this.matchingWindowDays ? this.matchingWindowDays : 3;//3 is default \n      this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-day, 'days').format('MM/DD/YYYY');\n\n    }\n\n    this.onSearch();\n  }\n\n  public setFromDate(event: any): void {\n    this.fromDate = event;\n\n  }\n\n  public setToDate(event: any): void {\n    this.toDate = event;\n    this.fromDate = moment(this.toDate, \"MM/DD/YYYY\").add(-7, 'days').format('MM/DD/YYYY');\n  }\n  async onCarrierSelect($event) {\n\n    await this.selectedCarrierList.map(m => { m.Name = this.CarrierDrpDwnList.find(f => f.DisplayName == m.DisplayName).Code })\n  }\n  async onCarrierDeSelect($event) {\n\n    await this.selectedCarrierList.map(m => { m.Name = this.CarrierDrpDwnList.find(f => f.DisplayName == m.DisplayName).Code })\n  }\n  public onSearch(): void {\n    var startDate = moment(this.fromDate, \"MM/DD/YYYY\");\n    var endDate = moment(this.toDate, \"MM/DD/YYYY\");\n    var result = endDate.diff(startDate, 'days');\n    if (result > 8) {\n      Declarations.msgwarning(\"Date Difference should be less than 7 days\", undefined, undefined);\n    } else\n      this.search.emit(true);\n  }\n\n  public onExport() {\n    this.export.emit(this.selectedStatus);\n  }\n}\n","<div class=\"well bg-white shadow-b pr\">\n    <div class=\"row mb10\">\n        <div class=\"col-sm-12 text-center sticky-header-dash\">\n            <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\n                <div class=\"btn-group btn-filter\">\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"DateType==1\">\n                    <label class=\"btn ml0\" (click)=\"changeDateType(1)\">Today</label>\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"DateType==2\">\n                    <label class=\"btn\" (click)=\"changeDateType(2)\">Matching Window</label>\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"DateType==3\">\n                    <label class=\"btn\" (click)=\"changeDateType(3)\">Day Range</label>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <!-- <div class=\"row mb10\">\n       \n            <div class=\"col-md-6 \">\n                <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n                    [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"/>\n            </div>\n            <div class=\"col-md-6 \">\n                <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n                    [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" [minDate]=\"MinStartDate\"\n                    [maxDate]=\"MaxStartDate\" />\n            </div>\n\n        \n    </div>\n    <div class=\"row mb10\">\n        <div class=\"col-sm-12\">\n            <ng-multiselect-dropdown [placeholder]=\"'Select Carrier(s)'\" [data]=\"CarrierDrpDwnList\"\n                [settings]=\"multiselectSettingsById\" (onSelect)=\"onCarrierSelect($event)\"\n                (onDeSelect)=\"onCarrierDeSelect($event)\">\n            </ng-multiselect-dropdown>\n\n        </div>\n    </div>\n    <div class=\"row \">\n        <div class=\"col-sm-12 text-right form-buttons\">\n            <button id=\"Submit\" type=\"button\" value=\"Search\" (click)=\"onSearch()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\n        </div>\n    </div>\n</div> -->\n\n<div class=\"row mb10\">\n       \n    <div class=\"col-md-3 \">\n        <input type=\"text\" [(ngModel)]=\"fromDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n            [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"    [disabled]=\"DateType!=3\"/>\n    </div>\n    <div class=\"col-md-3 \">\n        <input type=\"text\" [(ngModel)]=\"toDate\" class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker\n            [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\"  [disabled]=\"DateType!=3\"\n             />\n    </div>\n    <div class=\"col-sm-3\">\n        <ng-multiselect-dropdown [placeholder]=\"'Select Carrier(s)'\" \n            [settings]=\"multiselectSettingsById\" [data]=\"CarrierDrpDwnList\" [(ngModel)]=\"selectedCarrierList\" (onSelect)=\"onCarrierSelect($event)\"\n            (onDeSelect)=\"onCarrierDeSelect($event)\">\n        </ng-multiselect-dropdown>\n\n    </div>\n    <div class=\"col-sm-3 text-right form-buttons\">\n        <button id=\"Submit\" type=\"button\" value=\"Search\" (click)=\"onSearch()\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\n        <button id=\"statusSelectbtn\" type=\"button\" value=\"Export\" data-toggle=\"modal\" data-target=\"#statusSelect\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Export</button>\n    </div>\n</div>\n</div>\n\n<!-- <button type=\"button\"  class=\"btn btn-primary hide-element\" data-toggle=\"modal\" data-target=\"#statusSelect\">\n    Launch demo modal\n  </button> -->\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"statusSelect\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"statusSelectLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-sm modal-dialog-scrollable modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"statusSelectLabel\">Select Status</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n            <select class=\"form-control\" [(ngModel)]=\"selectedStatus\">\n                <option [value]=\"LFVRecordStatus.Clean\">Match</option>\n                <option [value]=\"LFVRecordStatus.NoMatch\">No Match</option>\n                <option [value]=\"LFVRecordStatus.PartialMatch\">Partial Match</option>\n                <option [value]=\"LFVRecordStatus.PendingMatch\">Pending</option>\n                <option [value]=\"LFVRecordStatus.Duplicate\">Duplicate</option>\n                <option [value]=\"LFVRecordStatus.ActiveExceptions\">Active Exception</option>\n                <option [value]=\"LFVRecordStatus.IgnoreMatch\">Ignored</option>\n                <option [value]=\"LFVRecordStatus.UnMatched\">Unmatched</option>\n                <option [value]=\"LFVRecordStatus.ForcedIgnore\">Forced Ignore</option>\n            </select>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onExport()\">Generate CSV</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, ViewChild, ViewChildren, QueryList } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { LFRecordGridModel, DropDownItem } from '../LiftFileModels';\r\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-lfv-accrual-report',\r\n    templateUrl: './lfv-accrual-report.component.html',\r\n    styleUrls: ['./lfv-accrual-report.component.css']\r\n})\r\nexport class LfvAccrualReportComponent implements OnInit {\r\n    public dtOptions: any = {};\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    public IsLoading: boolean = false;\r\n    public records: LFRecordGridModel[] = [];\r\n    public FromDate: any;\r\n    public ToDate: any;\r\n    public ProductTypesList: DropDownItem[] = [];\r\n    public selectedProductTypesList: DropDownItem[] = [];\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public ProductTypeIds: string = \"\";\r\n\r\n    constructor(private _lfvservice: LiftfiledashboardserviceService) {\r\n        this.FromDate = null;\r\n        this.ToDate = null;\r\n        this.ProductTypeIds = \"\";\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 2,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        let exportColumns = { columns: ':visible' };\r\n        let gridcolumnsDetails = [];\r\n        gridcolumnsDetails = [\r\n            { title: 'CallID', name: 'CallId', data: 'CallId', \"autoWidth\": true },\r\n            { title: 'Record Date', name: 'RecordDate', data: 'RecordDate', \"autoWidth\": true },\r\n            { title: 'BOL#', name: 'BOL', data: 'bol', \"autoWidth\": true },            \r\n            { title: 'Terminal Code', name: 'TerminalName', data: 'TerminalName', \"autoWidth\": true },\r\n            { title: 'Terminals', name: 'Terminal', data: 'Terminals', \"autoWidth\": true },\r\n            { title: 'Terminal Item Code', name: 'TerminalItemCode', data: 'TerminalItemCode', \"autoWidth\": true },\r\n            { title: 'Product Type', name: 'ProductType', data: 'ProductType', \"autoWidth\": true },\r\n            { title: 'Corrected Quantity', name: 'correctedQuantity', data: 'correctedQuantity', \"autoWidth\": true },\r\n            { title: 'Load Date', name: 'LoadDate', data: 'LoadDate', \"autoWidth\": true },\r\n            { title: 'CarrierID', name: 'CarrierID', data: 'CarrierID', \"autoWidth\": true },\r\n            { title: 'Carrier Name', name: 'CarrierName', data: 'CarrierName', \"autoWidth\": true },\r\n            { title: 'FileName', name: 'FileName', data: 'FileName', \"autoWidth\": true },           \r\n            //{ title: 'Reason', name: 'Reason', data: 'Reason', \"autowidth\": true },\r\n            { title: 'Status', name: 'RecordStatus', data: 'recordStatus', \"autowidth\": true },\r\n            { title: 'User Name', name: 'Username', data: 'Username', \"autowidth\": true },\r\n            { title: 'Modified Date (MST)', name: 'ModifiedDate', data: 'ModifiedDate', \"autowidth\": true },\r\n            { title: 'Resolution Time', name: 'LFVResolutionTime', data: 'LFVResolutionTime', \"autowidth\": true },\r\n            { title: 'Time to BOL', name: 'TimeToBol', data: 'TimeToBol', \"autowidth\": true }\r\n            //{ title: 'Reason Code', name: 'ReasonCode', data: 'ReasonCode', \"autowidth\": true },\r\n            //{ title: 'Reason Category', name: 'ReasonCategory', data: 'ReasonCategory', \"autowidth\": true }\r\n        ]\r\n\r\n        this.dtOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\r\n            serverSide: true,\r\n            processing: true,\r\n            ajax: (dataTablesParameters: any, callback) => {\r\n                let inputs = {\r\n                    FromDate: this.FromDate,\r\n                    ToDate: this.ToDate,\r\n                    ProductTypeIds: this.ProductTypeIds\r\n                };\r\n                let inputData = Object.assign(dataTablesParameters, inputs);\r\n                this.IsLoading = true;\r\n                this._lfvservice.getLFVAccrualReportGrid(inputData).subscribe((resp: DataTablesResponse) => {\r\n                    this.records = resp.data;\r\n                    this.IsLoading = false;\r\n                    callback({\r\n                        recordsTotal: resp.recordsTotal,\r\n                        recordsFiltered: resp.recordsFiltered,\r\n                        data: resp.data\r\n                    });\r\n                   // this.getLFVValidationStatsAndProductTypesDDL();\r\n                });\r\n            },\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            order: [[0, 'desc']],\r\n            buttons: [\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'LiftFile Accrual Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'LiftFile Accrual Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            columns: gridcolumnsDetails\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getLFAccrualGrid();\r\n        this.dtTrigger.next();\r\n        this.getLFVValidationStatsAndProductTypesDDL();\r\n    }\r\n    getLFAccrualGrid(): void {\r\n        this.IsLoading = true;\r\n        this.refreshDatatable();\r\n        this.IsLoading = false;\r\n    }\r\n    getLFVValidationStatsAndProductTypesDDL() {\r\n        this.IsLoading = true;\r\n            let input = {\r\n                FromDate: this.FromDate,\r\n                ToDate: this.ToDate\r\n            };\r\n            this._lfvservice.GetLFVValidationStatsAndProductTypesDDL(input).subscribe((resp: any) => {              \r\n                this.ProductTypesList = resp;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    ApplyFilter() {\r\n        if ((this.FromDate != null && this.FromDate != undefined && this.FromDate != \"\")\r\n            && (this.ToDate == null || this.ToDate == undefined || this.ToDate == \"\")) {\r\n            Declarations.msgerror(\"To Date is required\", undefined, undefined);\r\n            return;\r\n        }\r\n        this.getSelectedProductTypes();\r\n        this.refreshDatatable();\r\n    }\r\n    ClearFilter() {\r\n        this.FromDate = null;\r\n        this.ToDate = null;\r\n        this.selectedProductTypesList = [];\r\n        this.getSelectedProductTypes();\r\n        this.refreshDatatable();\r\n    }\r\n    getSelectedProductTypes(): void {\r\n        if (this.selectedProductTypesList == null || this.selectedProductTypesList.length == 0 || this.selectedProductTypesList == undefined) {\r\n            this.ProductTypeIds = \"\";\r\n        }\r\n        else if (this.selectedProductTypesList != null || this.selectedProductTypesList.length > 0) {\r\n            this.ProductTypeIds = this.selectedProductTypesList.map(m => m.Id).join(',');\r\n        }\r\n    }\r\n\r\n\r\n    public setFromDate(event: any): void {\r\n        this.FromDate = event;\r\n    }\r\n    public setToDate(event: any): void {\r\n        this.ToDate = event;\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n}\r\n","<div class=\"row mb10\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well pb10 mb0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-1 pr0 mt-1\">\r\n                <i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" [(ngModel)]=\"FromDate\" class=\"form-control datepicker\" placeholder=\"From\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <input type=\"text\" [(ngModel)]=\"ToDate\" class=\"form-control datepicker\" placeholder=\"To\" myDatePicker\r\n                           [format]=\"'MM/DD/YYYY'\" [minDate]=\"FromDate\" (onDateChange)=\"setToDate($event);\" />\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>\r\n                        <ng-multiselect-dropdown [placeholder]=\"'Select Products'\" \r\n                                                 [settings]=\"multiselectSettingsById\" [data]=\"ProductTypesList\" [(ngModel)]=\"selectedProductTypesList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-sm-2 mt5-xs\">\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Apply\" (click)=\" ApplyFilter();\" />\r\n                    <input type=\"button\" class=\"btn ml5\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <table id=\"accrualreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallID</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                    <th data-key=\"Bol\">BOL#</th>\r\n                                    <th data-key=\"TerminalCode\">Terminal Code</th>\r\n                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                    <th data-key=\"TerminalItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"CorrectedQuanity\">Corrected Quanity</th>\r\n                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"FileName\">File Name</th>\r\n                                    <!--<th data-key=\"Reason\">Reason</th>-->-->\r\n                                    <th data-key=\"RecordStatus\">Status</th>\r\n                                    <th data-key=\"UserName\">User Name</th>\r\n                                    <th data-key=\"ModifiedDate\">Modified Date</th>\r\n                                    <th data-key=\"LFVResolutionTime\">Resolution Time</th>\r\n                                    <th data-key=\"TimeToBol\">Time to BOL</th>\r\n                                    <!--<th data-key=\"ReasonCode\">Reason Code</th>\r\n    <th data-key=\"ReasonCategory\">Reason Category</th>-->\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"records?.length > 0\">\r\n                                <tr *ngFor=\"let record of records; let i = index\">\r\n                                    <td>{{record.CallId}}</td>\r\n                                    <td>\r\n                                        {{record.RecordDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.bol}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminals}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td> {{record.ProductType}}</td>\r\n                                    <td>\r\n                                        {{record.correctedQuantity}}\r\n                                    </td>\r\n                                    <td> {{record.LoadDate}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td> {{record.CarrierName}}</td>\r\n                                    <td>\r\n                                        {{record.FileName}}\r\n                                    </td>\r\n                                    <!-- <td> {{record.Reason}}</td>-->\r\n                                    <td> {{record.recordStatus}}</td>\r\n                                    <td>{{record.Username}} </td>\r\n                                    <td>{{record.ModifiedDate}} </td>\r\n                                    <td>{{record.LFVResolutionTime}} </td>\r\n                                    <!--<td>{{record.ReasonCode}} </td>\r\n\r\n    <td>{{record.ReasonCategory}} </td>-->\r\n                                    <td>{{record.TimeToBol}} </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tbody *ngIf=\"records?.length == 0\">\r\n                                <tr>\r\n                                    <td colspan=\"14\" class=\"text-center\">No Data Available</td>\r\n                                </tr>                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterComponent } from './master/master.component';\nimport { ValidationComponent } from './validation/validation.component';\nimport { CarrierComponent } from './carrier/carrier.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LeftSideFilterComponent } from './left-side-filter/left-side-filter.component';\nimport { LfvScratchReportComponent } from './lfv-scratch-report/lfv-scratch-report.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { CarrierBolReportComponent } from './carrier-bol-report/carrier-bol-report.component';\nimport { SupplierBolReportComponent } from './supplier-bol-report/supplier-bol-report.component';\nimport { LfvAccrualReportComponent } from './lfv-accrual-report/lfv-accrual-report.component';\nconst route: Routes = [\n  { path: '', component: MasterComponent },\n    { path: 'Dashboard', component: MasterComponent },\n    { path: 'LFVScratchReport', component: LfvScratchReportComponent },\n    { path: 'CarrierBolReport', component: CarrierBolReportComponent },\n    { path: 'SupplierBolReport', component: SupplierBolReportComponent },\n    { path: 'LFVAccrualReport', component: LfvAccrualReportComponent }\n]\n\n@NgModule({\n    declarations: [MasterComponent, ValidationComponent, CarrierComponent,\n        LeftSideFilterComponent, LfvScratchReportComponent, CarrierBolReportComponent,\n        SupplierBolReportComponent,\n        LfvAccrualReportComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    FormsModule,\n    DataTablesModule,\n    RouterModule.forChild(route),\n    DirectiveModule\n  ]\n})\nexport class LfvDashboardModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { LFRecordGridModel, LFBolEditModel, DropDownItem } from '../LiftFileModels';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n    selector: 'app-lfv-scratch-report',\r\n    templateUrl: './lfv-scratch-report.component.html',\r\n    styleUrls: ['./lfv-scratch-report.component.css']\r\n})\r\nexport class LfvScratchReportComponent implements OnInit, OnDestroy {\r\n\r\n    //side bar related variables\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n    //grid variables\r\n    public LFRecords: LFRecordGridModel[] = [];\r\n    public cancelButtonText: string = 'No';\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n    public isChecked = false;\r\n    public LFRecordIdsForIgnoreMatch: number[] = [];\r\n\r\n    //partial match resolve related variables\r\n    public bolResolveForm: FormGroup;\r\n    public selectedLiftFileRecord: LFRecordGridModel; //used for display purpose only\r\n    public ShowSideBarLoader: boolean = false;\r\n    public TerminalList: DropDownItem[];\r\n    public FuelTypeList: DropDownItem[];\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public InvoiceFtlDetailIdList: DropDownItem[];\r\n    public SelectedBolProduct: any;\r\n    public SelectedTerminalList: DropDownItem[] = [];\r\n    public SelectedFuelTypeList: DropDownItem[] = [];\r\n\r\n    constructor(private fb: FormBuilder, private dashboardservice: LiftfiledashboardserviceService) { }\r\n    ngOnInit() {\r\n\r\n        this.multiselectSettingsById = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.intializeGrid();\r\n        this.bolResolveForm = this.buildForm();\r\n        this.getPreferencesSetting();\r\n    }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns:[ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16]};\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Scratch Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Scratch Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getLFRecords();\r\n    }\r\n    buildForm(): FormGroup {\r\n        let fg = this.fb.group({\r\n            BolNumber: this.fb.control('', [Validators.required]),\r\n            LiftDate: this.fb.control('', [Validators.required]),\r\n            GrossQuantity: this.fb.control('', [Validators.required]),\r\n            NetQuantity: this.fb.control('', [Validators.required]),\r\n            BadgeNumber: this.fb.control(''),\r\n            SelectedTerminal: this.fb.control('', [Validators.required]),\r\n            SelectedFuelType: this.fb.control('', [Validators.required]),\r\n            Notes: this.fb.control(''),\r\n            LIftFileRecordId: this.fb.control(''),\r\n            InvoiceFtlDetailId: this.fb.control(''),\r\n            IsBulkPlantLift: this.fb.control('')\r\n        });\r\n        this.SelectedFuelTypeList = [];\r\n        this.SelectedTerminalList = [];\r\n        return fg;\r\n    }\r\n    getLFRecords() {\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getLFRecords().subscribe((data: LFRecordGridModel[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.LFRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n    reloadGrid() {\r\n        $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n        this.getLFRecords();\r\n    }\r\n\r\n    getBolDetailsForResolve(lfRecord: LFRecordGridModel) {\r\n        this.ShowSideBarLoader = true;\r\n        lfRecord.IsFromScratchReport = true;\r\n        this.dashboardservice.getBolDetailsForResolve(lfRecord).subscribe((data: LFBolEditModel) => {\r\n            if (data) {\r\n                this._toggleOpened(true);\r\n                this.selectedLiftFileRecord = data.LiftRecord;\r\n                this.TerminalList = data.TerminalList;\r\n                this.FuelTypeList = data.FuelTypeList;\r\n                this.InvoiceFtlDetailIdList = data.InvoiceFtlDetailsList;\r\n                this.initFormData(data)\r\n                this.ShowSideBarLoader = false;\r\n            }\r\n        });\r\n    }\r\n    selectAllRecords(eventData: any) {\r\n        if (eventData != null && eventData != undefined) {\r\n            if (eventData.target.checked) {\r\n                this.isChecked = true;\r\n            }\r\n            else {\r\n                this.isChecked = false;\r\n            }\r\n        }\r\n    }\r\n    ValidateForIgnoreMatchProcessing() {\r\n        let LFRecordIds = this.getLFRecordIds();\r\n        \r\n        this.selectedReason = [];\r\n\r\n        if (LFRecordIds != null && LFRecordIds != undefined && LFRecordIds.length > 0) {\r\n\r\n            if (this.preferenceSetting && this.preferenceSetting.IsLiftFileValidationEnabled && this.preferenceSetting.IsReasonCodesEnabled) {\r\n                this.GetReasonDescriptionList();\r\n                document.getElementById('openIgnoreModal2').click();\r\n              } else {\r\n                this.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds);\r\n              }\r\n        }\r\n        else{ Declarations.msgerror(\"No Records selected\", undefined, undefined);}\r\n\r\n    }\r\n    addRecordsForForcedIgnoreMatchProcessing(LFRecordIds: any[]) {\r\n\r\n        let descriptionId: number = 0;\r\n        let descriptionText: string = '';\r\n    \r\n        if (this.selectedReason && this.selectedReason.length > 0) {\r\n          descriptionId = this.selectedReason[0].Id;\r\n          descriptionText = this.selectedReason[0].Name;\r\n        }\r\n\r\n        this.ShowSideBarLoader = true;\r\n        this.dashboardservice.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds, descriptionId, descriptionText).subscribe((response: any) => {\r\n            if (response.StatusCode == 0) {\r\n                Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                this.reloadGrid();\r\n            } else {\r\n                Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n            }\r\n        });\r\n        this.ShowSideBarLoader = false;\r\n\r\n    }\r\n    GetBolRecord(InvoiceFtlDetailId: any) {\r\n        if (InvoiceFtlDetailId != null && InvoiceFtlDetailId != undefined && InvoiceFtlDetailId != '') {\r\n            let selectedLiftFileRecordId = this.selectedLiftFileRecord.LiftFileRecordId;\r\n            let invoiceFtlDetailId = parseInt(InvoiceFtlDetailId);\r\n            let LFRecord = new LFRecordGridModel();\r\n\r\n            LFRecord.LiftFileRecordId = selectedLiftFileRecordId;\r\n            LFRecord.InvFtlDetailId = invoiceFtlDetailId;\r\n            LFRecord.bol = this.selectedLiftFileRecord.bol;\r\n            LFRecord.TerminalName = this.selectedLiftFileRecord.TerminalName;\r\n            LFRecord.TerminalItemCode = this.selectedLiftFileRecord.TerminalItemCode;\r\n            LFRecord.LoadDate = this.selectedLiftFileRecord.LoadDate;\r\n            LFRecord.ProductType = this.selectedLiftFileRecord.ProductType;\r\n            LFRecord.correctedQuantity = this.selectedLiftFileRecord.correctedQuantity;\r\n            LFRecord.IsFromScratchReport = true;\r\n            this.getBolDetailsForResolve(LFRecord);\r\n        }\r\n    }\r\n\r\n    initFormData(data: LFBolEditModel) {\r\n        var currObj = this;\r\n        this.bolResolveForm.reset();//clear previous values\r\n        if ((this.bolResolveForm != null && this.bolResolveForm != undefined) && (data != null && data != undefined)) {\r\n            this.bolResolveForm.get('BolNumber').setValue(data.BolNumber);\r\n            this.bolResolveForm.get('LiftDate').setValue(data.DisplayLiftDate);\r\n            this.bolResolveForm.get('GrossQuantity').setValue(data.GrossQuantity);\r\n            this.bolResolveForm.get('NetQuantity').setValue(data.NetQuantity);\r\n            this.bolResolveForm.get('Notes').setValue(data.Notes);\r\n            this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n            this.bolResolveForm.get('InvoiceFtlDetailId').setValue(data.InvoiceFtlDetailId);\r\n            this.bolResolveForm.get('IsBulkPlantLift').setValue(data.IsBulkPlantLift);\r\n            this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n            this.bolResolveForm.get('BadgeNumber').setValue(data.BadgeNumber);\r\n            if (data.IsBulkPlantLift == true) { // no terminal dropdown for pickup from bulk plants\r\n                this.bolResolveForm.get('SelectedTerminal').clearValidators();\r\n                this.bolResolveForm.get('SelectedTerminal').updateValueAndValidity();\r\n            }\r\n            if (data != null && data.SelectedTerminal != null) {\r\n                this.bolResolveForm.get('SelectedTerminal').setValue(data.SelectedTerminal);\r\n                this.SelectedTerminalList = [];\r\n                this.SelectedTerminalList.push(data.SelectedTerminal);                               \r\n            }\r\n            if (data != null && data.SelectedFuelType != null) {\r\n                this.bolResolveForm.get('SelectedFuelType').setValue(data.SelectedFuelType);                \r\n                this.SelectedFuelTypeList = [];\r\n                this.SelectedFuelTypeList.push(data.SelectedFuelType);\r\n            }\r\n        }\r\n    }\r\n    createPostObject(): LFBolEditModel{\r\n        let inputPostObject = new LFBolEditModel();\r\n        inputPostObject.BadgeNumber = this.bolResolveForm.get('BadgeNumber').value;\r\n        inputPostObject.BolNumber = this.bolResolveForm.get('BolNumber').value;\r\n        inputPostObject.GrossQuantity = this.bolResolveForm.get('GrossQuantity').value;\r\n        inputPostObject.InvoiceFtlDetailId = this.bolResolveForm.get('InvoiceFtlDetailId').value;\r\n        inputPostObject.IsBulkPlantLift = this.bolResolveForm.get('IsBulkPlantLift').value;\r\n        inputPostObject.LiftRecord.LiftFileRecordId = this.bolResolveForm.get('LIftFileRecordId').value;\r\n        inputPostObject.LiftDate = this.bolResolveForm.get('LiftDate').value;\r\n        inputPostObject.NetQuantity = this.bolResolveForm.get('NetQuantity').value;\r\n        inputPostObject.Notes = this.bolResolveForm.get('Notes').value;\r\n        let SelectedFuelType = this.bolResolveForm.get('SelectedFuelType').value;\r\n        let fuelTypeId = SelectedFuelType[0].Id;\r\n        inputPostObject.FuelTypeId = fuelTypeId;\r\n        let selectedTerminal = this.bolResolveForm.get('SelectedTerminal').value;\r\n        let terminalId = inputPostObject.IsBulkPlantLift ? selectedTerminal.Id : selectedTerminal[0].Id;\r\n        inputPostObject.TerminalId = terminalId;\r\n        return inputPostObject;\r\n    }\r\n\r\n    //resetSelections(isReset: boolean) {\r\n    //    if (isReset) {\r\n    //        this.isChecked = false;\r\n    //    }\r\n    //    else {\r\n    //        this.isChecked = true;\r\n    //    }\r\n\r\n    //}\r\n    redirectToMyApprovalTab() {\r\n        window.open(\"Supplier/Exception/Manage\", \"_blank\");\r\n    }\r\n\r\n    onSubmit() {\r\n        this.ShowSideBarLoader = true;\r\n        this.bolResolveForm.markAsTouched();\r\n        if (this.bolResolveForm.valid) {\r\n            let requestObj = this.createPostObject();\r\n            if (requestObj != null) {\r\n                this.dashboardservice.saveBolDetailsForResolve(requestObj).subscribe((response:any) => {\r\n                    if (response.StatusCode == 0) {\r\n                        this.ShowSideBarLoader = false;\r\n                        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                        this._toggleOpened(false);\r\n                        this.reloadGrid();\r\n                    } else {\r\n                        this.ShowSideBarLoader = false;\r\n                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.ShowSideBarLoader = false;\r\n    }\r\n\r\n    _toggleOpened(shouldOpen: boolean) {\r\n        if(shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n            this.bolResolveForm.reset();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    //ignore by reason\r\n    public preferenceSetting: any = null;\r\n    public selectedReason = [];\r\n    public reasonList = [];\r\n    public dropdownSettings: IDropdownSettings = { singleSelection: true, idField: 'Id', textField: 'Name', allowSearchFilter: true };\r\n    \r\n    public getLFRecordIds() {\r\n        let LFRecordIds = [];\r\n        let table = $('#liftfilerecords-datatable').DataTable();\r\n        var rowcollection = table.$(\".dt-checkbox\", { \"page\": \"all\" });\r\n        rowcollection.each(function (index, elem) {\r\n            if ($(this).is(\":checked\")) {\r\n                LFRecordIds.push(parseInt($(this).attr('id')));\r\n            }\r\n        });\r\n        return LFRecordIds;\r\n        }\r\n    \r\n        public getPreferencesSetting() {\r\n            if (!this.preferenceSetting) {\r\n                this.dashboardservice.getPreferencesSetting().subscribe(response => {\r\n                    this.preferenceSetting = response;\r\n                });\r\n            }\r\n        }\r\n    \r\n      public GetReasonDescriptionList() {\r\n        if (this.reasonList && this.reasonList.length == 0) {\r\n          this.ShowGridLoader = true;\r\n          this.dashboardservice.GetReasonDescriptionList().subscribe((response: any) => {\r\n            if (response && response.length > 0) {\r\n              this.reasonList = response;\r\n            }\r\n            this.ShowGridLoader = false;\r\n          });\r\n        }\r\n      }\r\n      public submitIgnoreDescription() {\r\n        this.addRecordsForForcedIgnoreMatchProcessing(this.getLFRecordIds());\r\n      }\r\n\r\n}\r\n","\r\n<div>\r\n    <ng-sidebar-container>\r\n        <ng-sidebar [(opened)]=\"_opened\"\r\n                    [animate]=\"_animate\"\r\n                    [position]=\"_POSITIONS[_positionNum]\"\r\n                    style=\"height: 100vh;\" class=\"Lfv-resolve-sidebar\">\r\n            <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 class=\"dib ml10 mt10 mb10\">Edit BOL Details</h3> <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n            <div class=\"well bg-white shadow-b lfrecord-section\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border no-padding\">\r\n                        <div id=\"LFrecord\" class=\"table-responsive\">\r\n                            <table id=\"table-Lfrecord\" class=\"table table-striped table-bordered table-hover lfvrecord\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th>BOL#</th>\r\n                                        <th>Terminal</th>\r\n                                        <th>Corrected Quantity</th>\r\n                                        <th>Terminal Item Code</th>\r\n                                        <th>Load Date</th>\r\n                                        <th>ProductType</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                    <td>{{selectedLiftFileRecord?.bol}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalName}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.correctedQuantity}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalItemCode}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.LoadDate}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.ProductType}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null\" class=\"row\">\r\n                <div class=\"col-sm-6\" *ngIf=\"InvoiceFtlDetailIdList !=null && InvoiceFtlDetailIdList.length > 0\">\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" id=\"select-bol\" (change)=\"GetBolRecord($event.target.value)\">\r\n                            <option [value]=\"null\">Select BOL-Product to edit </option>\r\n                            <ng-container *ngFor=\"let bol Of InvoiceFtlDetailIdList\">\r\n                                <option [value]=\"bol.Id\" [selected]=\"bol.Id == bolResolveForm.get('InvoiceFtlDetailId').value\">\r\n                                    {{bol.Name}}\r\n                                </option>\r\n                            </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>           \r\n            <content class=\"pr30\" *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null && bolResolveForm.get('InvoiceFtlDetailId').value >0\">\r\n                <form [formGroup]=\"bolResolveForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 section-bol-details-edit\">\r\n                            <div class=\"mt10 row\">\r\n                                <div class=\"col-sm-3 bol\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BolNumber\">BOL/LiftTicket#<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"InvoiceFtlDetailId\" type=\"hidden\" class=\"hide-element\">\r\n                                        <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                        <input formControlName=\"BolNumber\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('BolNumber').invalid && (bolResolveForm.get('BolNumber').dirty || bolResolveForm.get('BolNumber').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('BolNumber').errors.required\">\r\n                                                BOL/LiftTicket# is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 lifdt\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"LiftDate\">Lift Date<span class=\"color-maroon\">*</span></label>\r\n                                        <input name=\"LiftDate\" class=\"form-control\" formControlName=\"LiftDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"bolResolveForm.get('LiftDate').setValue($event)\">\r\n                                        <div *ngIf=\"bolResolveForm.get('LiftDate').invalid && (bolResolveForm.get('LiftDate').dirty || bolResolveForm.get('LiftDate').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('LiftDate').errors.required\">\r\n                                                Lift Date is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 grossQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"GrossQuantity\">Gross Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"GrossQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('GrossQuantity').invalid && (bolResolveForm.get('GrossQuantity').dirty || bolResolveForm.get('GrossQuantity').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('GrossQuantity').errors.required\">\r\n                                                Gross quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 netQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"NetQuantity\">Net Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"NetQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('NetQuantity').invalid && (bolResolveForm.get('NetQuantity').dirty || bolResolveForm.get('NetQuantity').touched)\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('NetQuantity').errors.required\">\r\n                                                Net quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BadgeNumber\">Badge#</label>\r\n                                        <input formControlName=\"BadgeNumber\" class=\"form-control\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6 terminal-section\" *ngIf=\"!bolResolveForm.get('IsBulkPlantLift').value\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Jobs\">Terminal Name</label>\r\n                                                <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                                         [placeholder]=\"'Select Terminal'\"\r\n                                                                         [settings]=\"multiselectSettingsById\" [data]=\"TerminalList\"\r\n                                                                         [(ngModel)]=\"SelectedTerminalList\">\r\n                                                </ng-multiselect-dropdown>\r\n                                                <div *ngIf=\"bolResolveForm.get('SelectedTerminal').invalid && (bolResolveForm.get('SelectedTerminal').dirty || bolResolveForm.get('SelectedTerminal').touched)\" class=\"color-maroon\">\r\n                                                    <div *ngIf=\"bolResolveForm.get('SelectedTerminal').errors.required\">\r\n                                                        Terminal is required.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-6 fuelType\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"Jobs\">Fuel</label>\r\n                                                <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                         [placeholder]=\"'Select Fuel'\"\r\n                                                                         [settings]=\"multiselectSettingsById\" [data]=\"FuelTypeList\"\r\n                                                                         [(ngModel)]=\"SelectedFuelTypeList\">\r\n                                                </ng-multiselect-dropdown>\r\n                                            </div>\r\n                                            <div *ngIf=\"bolResolveForm.get('SelectedFuelType').invalid && (bolResolveForm.get('SelectedFuelType').dirty || bolResolveForm.get('SelectedFuelType').touched)\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"bolResolveForm.get('SelectedFuelType').errors.required\">\r\n                                                    Fuel Type is required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"Notes\">Notes</label>\r\n                                <textarea formControlName=\"Notes\" class=\"form-control\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 text-right\">\r\n                            <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                            <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save & Re-Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n    <div class=\"loader\" *ngIf=\"ShowSideBarLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div  class=\"table-responsive\">\r\n                        <table id=\"liftfilerecords-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallID</th>\r\n                                    <th data-key=\"BolNumber\">Bol#</th>\r\n                                    <th data-key=\"Terminal\">Terminal Code</th>\r\n                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                    <th data-key=\"CorrectedQuantity\">Corrected Quantity</th>\r\n                                    <th data-key=\"TerminalITemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"Reason\">Reason</th>\r\n                                    <th data-key=\"ReasonCode\">Reason Code</th>\r\n                                    <th data-key=\"ReasonCategory\">Reason Category</th>\r\n                                    <th data-key=\"RecordStatus\">Status</th>\r\n                                    <th data-key=\"ModifiedBy\">Modified By</th>\r\n                                    <th data-key=\"ModifiedDate\">Modified Date (MST)</th>\r\n                                    <th data-key=\"LFVResolutionTime\">Resolution Time</th>\r\n                                    <th data-key=\"SelectAll\">SelectAll <input type=checkbox id='select-all-records' value='select-all-records' (click)=\"selectAllRecords($event)\"></th>\r\n                                    <th data-key=\"Action\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"LFRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of LFRecords; let i = index\">\r\n                                    <td> {{record.CallId}}</td>\r\n                                    <td>{{record.bol}}</td>\r\n                                    <td>\r\n                                        {{record.TerminalName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminals}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.correctedQuantity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ProductType}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LoadDate}}\r\n                                    </td>\r\n                                    <td> {{record.RecordDate}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CarrierName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Reason}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ReasonCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ReasonCategory}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.recordStatus}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Username}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.ModifiedDate}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.LFVResolutionTime}}\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <input type=\"checkbox\" class=\"dt-checkbox\" id=\"{{record.LiftFileRecordId}}\" [checked]=\"isChecked\" value=\"{{record.LiftFileRecordId}}\" />\r\n                                    </td>\r\n                                    <td class=\"text-center\">\r\n                                        <span *ngIf=\"record.Status == 9\">\r\n                                            <!--partial match -->\r\n                                            <button type=\"button\" (click)=\"getBolDetailsForResolve(record)\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\" title=\"Resolve Partial Match\"></i></button>\r\n                                        </span>\r\n                                        <span *ngIf=\"record.Status == 6\">\r\n                                            <button type=\"button\" (click)=\"redirectToMyApprovalTab()\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\" title=\"Resolve Exception\"></i></button>\r\n                                        </span>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 text-right mb25 btn-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-sm-12\">\r\n                <input type=\"button\" id=\"btnCancel\" class=\"btn btn-default\" value=Cancel  />\r\n                <input type=\"button\" class=\"btn btn-primary\" value=\"Ignore\" id=\"btnForceIgnoreRecords\" (click)=\"ValidateForIgnoreMatchProcessing()\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- trigger ignoreModal -->\r\n<div type=\"hidden\" id=\"openIgnoreModal2\" data-toggle=\"modal\" data-target=\"#ignoreModal2\"></div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"ignoreModal2\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Select Reason</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Reason'\" [settings]=\"dropdownSettings\"\r\n                    [data]=\"reasonList\" [(ngModel)]=\"selectedReason\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitIgnoreDescription()\"\r\n                    [disabled]=\"selectedReason && selectedReason.length==0\" data-dismiss=\"modal\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"well bg-white shadow-b pr\">\r\n    <div class=\"row \">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 pr-5 text-right sticky-header-dash\">\r\n                    <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\"\r\n                                   [checked]=\"viewType==1\">\r\n                            <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Validation Performance</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\"\r\n                                   [checked]=\"viewType==2\">\r\n                            <label class=\"btn\" (click)=\"changeViewType(2)\">Carrier Performance</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <a class=\"btn border border-secondary float-right pb-1\" (click)=\"openLFVScratchReportGrid()\"\r\n                           placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fab fa-firstdraft fs16 mt2\"></i></a>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <a class=\"btn border border-secondary float-right pb-1\" (click)=\"openAccrualReportGrid()\"\r\n                           placement=\"bottom\" ngbTooltip=\"Accrual Report\"><i class=\"fas fa-file-invoice fs16 mt2\"></i></a>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 1\">\r\n                        <button #btnSearchRecords class=\"btn btn-default mt0\" (click)=\"toggleRecordSearchControls(true)\"><i class=\"fas fa-search mr5\"></i>Search Records</button>\r\n                        <div class=\"record-search-controls bg-white pa shadow border z-index10\" *ngIf=\"showSearchControls\">\r\n                            <div class=\"col-auto text-right\">\r\n                                <a #btnCancelSearch (click)=\"toggleRecordSearchControls(false)\"><i class=\"fa fa-close fs18 my-2\" title=\"Cancel\"></i> </a>\r\n                            </div>\r\n                            <div class=\"col-auto form-group\">\r\n                                <input type=\"text\" class=\"form-control\" #BOLSearchInput [(ngModel)]=\"bolSearchQuery\" placeholder=\"Search BOL#\" />\r\n                            </div>\r\n                            <div class=\"col-auto form-group\">\r\n                                <input type=\"text\" class=\"form-control\" #FileNameSearchInput [(ngModel)]=\"fileNameSearchQuery\" placeholder=\"Search FileName\" />\r\n                            </div>\r\n                            <div class=\"col-auto form-group text-right\">\r\n                                <button class=\"btn btn-primary btn-sm\" (click)=\"searchLiftFileRecords()\">Search</button>\r\n                                <button id=\"openModal\" #btnOpenModal [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#searchoutputdetailsgrid-modal\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"float-right\" *ngIf=\"viewType == 2\">\r\n                        <a class=\"btn border border-secondary float-right\" (click)=\"openCarrierBOLReportGrid()\" placement=\"bottom\" ngbTooltip=\"Carrier BOL Report\"><i class=\"fas fa-user fs16\"></i></a>\r\n                        <a class=\"btn border border-secondary float-right\" (click)=\"openSupplierBOLReportGrid()\" placement=\"bottom\" ngbTooltip=\"Supplier BOL Report\"><i class=\"fas fa-truck fs16\"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <!-- <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <app-left-side-filter (search)=\"OnSearch($event)\"></app-left-side-filter>\r\n                </div>\r\n                <div class=\"col-8\">\r\n                    <app-validation [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==1\"></app-validation>\r\n                    <app-carrier-performace [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==2\">\r\n                    </app-carrier-performace>\r\n                </div>\r\n            </div> -->\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <app-left-side-filter (search)=\"OnSearch($event)\" (export)=\"OnExport($event)\"></app-left-side-filter>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <app-validation [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==1\"></app-validation>\r\n                    <app-carrier-performace [LFValidationList]=\"LFValidationList\" *ngIf=\"viewType==2\">\r\n                    </app-carrier-performace>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 text-center sticky-header-dash\">\r\n                    <div class=\"dib border pa5 radius-capsule shadow-b  mb10\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <!-- match -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\" [value]=\"LFVRecordStatus.Clean\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.Clean\">\r\n                            <label class=\"btn ml0\" (click)=\"changeGridType(LFVRecordStatus.Clean)\">Match</label>\r\n                            <!-- nomatch -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.NoMatch\" [checked]=\"gridType==LFVRecordStatus.NoMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.NoMatch)\">No Match</label>\r\n                            <!-- Partial Match -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.PartialMatch\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.PartialMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.PartialMatch)\">\r\n                                Partial\r\n                                Match\r\n                            </label>\r\n                            <!-- Pending -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.PendingMatch\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.PendingMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.PendingMatch)\">Pending</label>\r\n                            <!-- Duplicate -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.Duplicate\" [checked]=\"gridType==LFVRecordStatus.Duplicate\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.Duplicate)\">Duplicate</label>\r\n                            <!-- Active Exception -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.ActiveExceptions\"\r\n                                   [checked]=\"gridType==LFVRecordStatus.ActiveExceptions\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.ActiveExceptions)\">\r\n                                Active\r\n                                Exception\r\n                            </label>\r\n                            <!-- Ignored -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.IgnoreMatch\" [checked]=\"gridType==LFVRecordStatus.IgnoreMatch\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.IgnoreMatch)\">Ignored</label>\r\n                            <!-- Forced Ignore Match-->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.ForcedIgnore\" [checked]=\"gridType==LFVRecordStatus.ForcedIgnore\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.ForcedIgnore)\">Forced Ignore</label>\r\n                            <!-- Unmatched -->\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'gridType'\"\r\n                                   [value]=\"LFVRecordStatus.UnMatched\" [checked]=\"gridType==LFVRecordStatus.UnMatched\">\r\n                            <label class=\"btn\" (click)=\"changeGridType(LFVRecordStatus.UnMatched)\">Unmatched</label>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" [ngClass]=\"{'hide-element': gridType==0}\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"well bg-white shadow-b pr\">\r\n                        <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div class=\"ibox mb0\">\r\n                            <div class=\"ibox-content no-padding no-border location_table\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table id=\"liftfilerecords-datatable\" datatable [dtOptions]=\"dtOptions\"\r\n                                           [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                        <!--<table id=\"api-dashboard-datatable\" data-gridname=\"18\" class=\"table table-bordered\" datatable>-->\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th data-key=\"BOL\">BOL</th>\r\n                                                <th data-key=\"Terminal\">Terminal Code</th>\r\n                                                <th data-key=\"Terminals\">Terminal</th>\r\n                                                <th data-key=\"Corrected_Quantity\">Corrected Quantity</th>\r\n                                                <th data-key=\"Terminal_Item_Code\">Terminal Item Code</th>\r\n                                                <th data-key=\"Product_Type\">Product Type</th>\r\n                                                <th data-key=\"Load_Date\">Load Date</th>\r\n                                                <th data-key=\"Record_Date\">Record Date</th>\r\n                                                <th data-key=\"Carrier_ID\">Carrier ID</th>\r\n                                                <th data-key=\"Carrier_Name\">Carrier Name</th>\r\n                                                <th data-key=\"Reasons\">Reasons</th>\r\n                                                <th data-key=\"Reason_Code\"\r\n                                                    [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                    Reason Code</th>\r\n                                                <th data-key=\"Reason_Category\"\r\n                                                    [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                    Reason Category\r\n                                                </th>\r\n                                                <th data-key=\"User_Name\">Modified By</th>\r\n                                                <th data-key=\"Modified_Date\">Modified Date (MST)</th>\r\n                                                <th data-key=\"Modified_Date\">Resolution Time</th>\r\n                                                <th data-key=\"TimeToBol\"\r\n                                                     [ngClass]=\"{'hide-element': (gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Clean) ? false : true}\">\r\n                                                   Time To BOL\r\n                                                </th>\r\n                                                <th data-key=\"SelectAll\"\r\n                                                    [ngClass]=\"{'hide-element': !(gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched || gridType==LFVRecordStatus.Duplicate)}\">\r\n                                                    SelectAll\r\n                                                    <input type=checkbox id='select-all-records' value='select-all-records'\r\n                                                           (click)=\"selectAllRecords($event)\" />\r\n                                                </th>\r\n                                                <th data-key=\"Action\"\r\n                                                    [ngClass]=\"{'hide-element': gridType!=LFVRecordStatus.PartialMatch}\">\r\n                                                    Action\r\n                                                </th>\r\n                                                <!-- Below th is for LiftFileRecord edit Workflow-->\r\n                                                <th data-key=\"Edit\"\r\n                                                    [ngClass]=\"{'hide-element': gridType ==LFVRecordStatus.IgnoreMatch || gridType ==LFVRecordStatus.Clean || gridType ==LFVRecordStatus.ForcedIgnore || !isAdminUser}\">\r\n                                                    Edit\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ng-container>\r\n                                                <tr *ngFor=\"let item of LFVRecordGrid\">\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.bol}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.TerminalName}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Terminals}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.correctedQuantity}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.TerminalItemCode}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.ProductType}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.LoadDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.RecordDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.CarrierID}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.CarrierName}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Reason}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi, 'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                        {{item?.ReasonCode}}\r\n                                                    </td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi, 'hide-element': (gridType==LFVRecordStatus.Clean || gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.PendingMatch)}\">\r\n                                                        {{item?.ReasonCategory}}\r\n                                                    </td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.Username}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.ModifiedDate}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi}\">{{item?.LFVResolutionTime}}</td>\r\n                                                    <td [ngClass]=\"{'highlight-record':((item.Status == LFVRecordStatus.Clean) || (item.Status == LFVRecordStatus.IgnoreMatch) || (item.Status == LFVRecordStatus.ForcedIgnore)) && !item.IsRecordPushedToExternalApi,'hide-element': (gridType==LFVRecordStatus.PartialMatch || gridType==LFVRecordStatus.Clean) ? false : true}\">{{item?.TimeToBol}}</td>\r\n                                                    <!-- Below td is for Reprocess and Ignore Match Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': !(gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched || gridType==LFVRecordStatus.Duplicate)}\">\r\n                                                        <input type=\"checkbox\" class=\"dt-checkbox\"\r\n                                                               id=\"{{item.LiftFileRecordId}}\" [checked]=\"isChecked\"\r\n                                                               value=\"{{item.LiftFileRecordId}}\" />\r\n                                                    </td>\r\n                                                    <!-- Below td is for partial Match Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': gridType!=LFVRecordStatus.PartialMatch}\">\r\n\r\n                                                        <button type=\"button\" (click)=\"getBolDetailsForResolve(item)\"\r\n                                                                class=\"btn btn-link\">\r\n                                                            <i class=\"fas fa-edit fs16\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                    <!-- Below td is for LiftFileRecord edit Workflow-->\r\n                                                    <td class=\"text-center\"\r\n                                                        [ngClass]=\"{'hide-element': gridType ==LFVRecordStatus.IgnoreMatch || gridType ==LFVRecordStatus.Clean || gridType ==LFVRecordStatus.ForcedIgnore || !item.IsAdminUser,\r\n                                                        'highlight-record': gridType ==LFVRecordStatus.Clean &&!item.IsRecordPushedToExternalApi}\">\r\n                                                        <button type=\"button\"\r\n                                                                class=\"btn btn-link\" (click)=\"editLiftFileRecord(item)\">\r\n                                                            <i class=\"fas fa-edit fs16 \" title=\"Edit Lf Record\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-12 text-right mb25 btn-wrapper\" *ngIf=\"LFVRecordGrid?.length>0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-12\">\r\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"Ignore\" id=\"btnForceIgnoreRecords\"\r\n                                   (click)=\"ValidateForIgnoreMatchProcessing('ignore')\"\r\n                                   *ngIf=\"gridType==LFVRecordStatus.NoMatch || gridType==LFVRecordStatus.UnMatched\" />\r\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"ReProcess\" id=\"btnForceReprocessRecords\"\r\n                                   (click)=\"ValidateForIgnoreMatchProcessing('reprocess')\"\r\n                                   *ngIf=\"gridType==LFVRecordStatus.Duplicate || gridType==LFVRecordStatus.UnMatched\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- LFV Partial match resolve sidebar  -->\r\n<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\"\r\n                class=\"Lfv-resolve-sidebar\">\r\n        <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Edit BOL Details</h3>\r\n        <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n        <div class=\"scroll-auto\">\r\n            <div class=\"well bg-white shadow-b lfrecord-section\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border no-padding\">\r\n                        <div id=\"LFrecord\" class=\"table-responsive\">\r\n                            <table id=\"table-Lfrecord\" class=\"table table-striped table-bordered table-hover lfvrecord\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th>BOL#</th>\r\n                                        <th>Terminal</th>\r\n                                        <th>Corrected Quantity</th>\r\n                                        <th>Terminal Item Code</th>\r\n                                        <th>Load Date</th>\r\n                                        <th>ProductType</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                    <td>{{selectedLiftFileRecord?.bol}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalName}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.correctedQuantity}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.TerminalItemCode}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.LoadDate}}</td>\r\n                                    <td>{{selectedLiftFileRecord?.ProductType}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null\">\r\n                <div class=\"col-sm-6\" *ngIf=\"InvoiceFtlDetailIdList !=null && InvoiceFtlDetailIdList.length > 0\">\r\n                    <div class=\"form-group\">\r\n                        <select class=\"form-control\" id=\"select-bol\" (change)=\"GetBolRecord($event.target.value)\">\r\n                            <option [value]=\"null\">Select BOL-Product to edit </option>\r\n                            <ng-container *ngFor=\"let bol Of InvoiceFtlDetailIdList\">\r\n                                <option [value]=\"bol.Id\"\r\n                                        [selected]=\"bol.Id == bolResolveForm.get('InvoiceFtlDetailId').value\">\r\n                                    {{bol.Name}}\r\n                                </option>\r\n                            </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <content class=\"pr30\" *ngIf=\"bolResolveForm !=undefined && bolResolveForm !=null && bolResolveForm.get('InvoiceFtlDetailId').value >0\">\r\n                <form [formGroup]=\"bolResolveForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div>\r\n                        <div class=\"col-sm-12 section-bol-details-edit\">\r\n                            <div class=\"mt10 row\">\r\n                                <div class=\"col-sm-3 bol\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BolNumber\">BOL/LiftTicket#<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"InvoiceFtlDetailId\" type=\"hidden\" class=\"hide-element\">\r\n                                        <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                        <input formControlName=\"BolNumber\" class=\"form-control\" required>\r\n                                        <div *ngIf=\"bolResolveForm.get('BolNumber').invalid && (bolResolveForm.get('BolNumber').dirty || bolResolveForm.get('BolNumber').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('BolNumber').errors.required\">\r\n                                                BOL/LiftTicket# is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 lifdt\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"LiftDate\">Lift Date<span class=\"color-maroon\">*</span></label>\r\n                                        <input name=\"LiftDate\" class=\"form-control\" formControlName=\"LiftDate\" myDatePicker\r\n                                               [format]=\"'MM/DD/YYYY'\"\r\n                                               (onDateChange)=\"bolResolveForm.get('LiftDate').setValue($event)\">\r\n                                        <div *ngIf=\"bolResolveForm.get('LiftDate').invalid && (bolResolveForm.get('LiftDate').dirty || bolResolveForm.get('LiftDate').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('LiftDate').errors.required\">\r\n                                                Lift Date is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 grossQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"GrossQuantity\">Gross Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"GrossQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('GrossQuantity').invalid && (bolResolveForm.get('GrossQuantity').dirty || bolResolveForm.get('GrossQuantity').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('GrossQuantity').errors.required\">\r\n                                                Gross quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3 netQty\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"NetQuantity\">Net Quantity<span class=\"color-maroon\">*</span></label>\r\n                                        <input formControlName=\"NetQuantity\" class=\"form-control\">\r\n                                        <div *ngIf=\"bolResolveForm.get('NetQuantity').invalid && (bolResolveForm.get('NetQuantity').dirty || bolResolveForm.get('NetQuantity').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('NetQuantity').errors.required\">\r\n                                                Net quantity is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n\r\n\r\n                                <div class=\"col-sm-6 terminal-section\" *ngIf=\"!bolResolveForm.get('IsBulkPlantLift').value\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Jobs\">Terminal Name</label>\r\n                                        <ng-multiselect-dropdown formControlName=\"SelectedTerminal\"\r\n                                                                 [placeholder]=\"'Select Terminal'\" \r\n                                                                 [settings]=\"multiselectSettingsById\" [data]=\"TerminalList\" [(ngModel)]=\"SelectedTerminalList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <!-- <select class=\"form-control\"  placeholder=\"Select Terminal\"  >\r\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\" *ngFor=\"let item of TerminalList\">{{item.Name}}</option>\r\n                                          </select> -->\r\n                                        <div *ngIf=\"bolResolveForm.get('SelectedTerminal').invalid && (bolResolveForm.get('SelectedTerminal').dirty || bolResolveForm.get('SelectedTerminal').touched)\"\r\n                                             class=\"color-maroon\">\r\n                                            <div *ngIf=\"bolResolveForm.get('SelectedTerminal').errors.required\">\r\n                                                Terminal is required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6 fuelType\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Jobs\">Fuel</label>\r\n                                        <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                 [placeholder]=\"'Select Fuel'\" \r\n                                                                 [settings]=\"multiselectSettingsById\" [data]=\"FuelTypeList\" [(ngModel)]=\"SelectedFuelTypeList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <!-- <select class=\"form-control\"  placeholder=\"Select Fuel\"  >\r\n                                            <option id=\"{{item.Id}}\" value=\"{{item.Id}}\" *ngFor=\"let item of FuelTypeList\">{{item.Name}}</option>\r\n                                          </select> -->\r\n                                    </div>\r\n                                    <div *ngIf=\"bolResolveForm.get('SelectedFuelType').invalid && (bolResolveForm.get('SelectedFuelType').dirty || bolResolveForm.get('SelectedFuelType').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"bolResolveForm.get('SelectedFuelType').errors.required\">\r\n                                            Fuel Type is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"BadgeNumber\">Badge#</label>\r\n                                        <input formControlName=\"BadgeNumber\" class=\"form-control\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"Notes\">Notes</label>\r\n                                        <textarea class=\"form-control\" id=\"Notes\" placeholder=\"Notes\" formControlName=\"Notes\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                        <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save &Re-Submit</button>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </div>\r\n\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n<!-- LFV Record search output modal -->\r\n<div id=\"searchoutputdetailsgrid-modal\" class=\"modal fade\" role=\"dialog\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog modal-xl modal-dialog-scrollable modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<h3 class=\"modal-title\" id=\"counttypeheader\"></h3>-->\r\n                <button type=\"button\" class=\"close searchoutputdetailsgrid\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"well bg-white shadowb-b\">\r\n                            <div class=\"ibox mb0\">\r\n                                <div class=\"ibox-content no-padding no-border\">\r\n                                    <div class=\"table-responsive\">\r\n                                        <table id=\"liftfileSearchrecords-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"searchGridDtOptions\" [dtTrigger]=\"searchGridDtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th data-key=\"CallId\">CallID</th>\r\n                                                    <th data-key=\"BolNumber\">BOL#</th>\r\n                                                    <th data-key=\"Terminal\">Terminal Code</th>\r\n                                                    <th data-key=\"Terminals\">Terminal</th>\r\n                                                    <th data-key=\"FileName\">File Name</th>\r\n                                                    <th data-key=\"TerminalITemCode\">Terminal Item Code</th>\r\n                                                    <th data-key=\"LoadDate\">Load Date</th>\r\n                                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                                    <th data-key=\"Status\">Status</th>\r\n                                                    <th data-key=\"Reason\">Reason</th>\r\n                                                    <th data-key=\"Reason_Code\">Reason Code</th>\r\n                                                    <th data-key=\"Reason_Category\">Reason Category</th>\r\n                                                    <th data-key=\"UserName\">Modified By</th>\r\n                                                    <th data-key=\"Modified_Date\"> Modified Date (MST)</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf=\"LiftFilesearchResults?.length > 0\">\r\n                                                <tr *ngFor=\"let record of LiftFilesearchResults; let i = index\">\r\n                                                    <td> {{record.CallId}}</td>\r\n                                                    <td>{{record.bol}}</td>\r\n                                                    <td>\r\n                                                        {{record.TerminalName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Terminals}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.FileName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.TerminalItemCode}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.LoadDate}}\r\n                                                    </td>\r\n                                                    <td> {{record.RecordDate}}</td>\r\n                                                    <td>\r\n                                                        {{record.CarrierID}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.CarrierName}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.recordStatus}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Reason}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ReasonCode}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ReasonCategory}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.Username}}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {{record.ModifiedDate}}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- LFV Record edit sidebar -->\r\n<ng-sidebar-container>\r\n    <ng-sidebar [(opened)]=\"_EditOpened\" [animate]=\"_EditAnimate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\"\r\n                class=\"Lfv-edit-sidebar\">\r\n        <a (click)=\"_EditToggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n        <h3 class=\"dib ml10 mt10 mb10\">Edit Lift File Record </h3>\r\n        <!-- Need to give this sidebar a z-index = 3 for UI issue fix-->\r\n        <div class=\"scroll-auto\">\r\n            <content class=\"pr30\" *ngIf=\"LFVRecordEditForm !=undefined && LFVRecordEditForm !=null && LfvValidationParameters != undefined && LfvValidationParameters != null\">\r\n                <form [formGroup]=\"LFVRecordEditForm\" (ngSubmit)=\"onRecordEditSubmit()\">\r\n                    <div class=\"col-sm-12 section-lfv-record-edit\">\r\n                        <div class=\"mt10 row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"BolNumber\">BOL#<span *ngIf=\"LfvValidationParameters.IsBolReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"LIftFileRecordId\" type=\"hidden\" class=\"hide-element\" />\r\n                                    <input formControlName=\"BolNumber\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsBolReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('BolNumber').invalid && (LFVRecordEditForm.get('BolNumber').dirty || LFVRecordEditForm.get('BolNumber').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('BolNumber').errors.required\">\r\n                                            BOL# is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"TerminalCode\">Terminal Code<span *ngIf=\"LfvValidationParameters.IsTerminalCodeReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"TerminalCode\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsTerminalCodeReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('TerminalCode').invalid && (LFVRecordEditForm.get('TerminalCode').dirty || LFVRecordEditForm.get('TerminalCode').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('TerminalCode').errors.required\">\r\n                                            Terminal Code is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"TerminalItemCode\">Terminal Item Code<span *ngIf=\"LfvValidationParameters.IsTermItemCodeReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"TerminalItemCode\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsTermItemCodeReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('TerminalItemCode').invalid && (LFVRecordEditForm.get('TerminalItemCode').dirty || LFVRecordEditForm.get('TerminalItemCode').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('TerminalItemCode').errors.required\">\r\n                                            Terminal Item Code is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CIN\">CIN<span *ngIf=\"LfvValidationParameters.IsCINReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CIN\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCINReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CIN').invalid && (LFVRecordEditForm.get('CIN').dirty || LFVRecordEditForm.get('CIN').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CIN').errors.required\">\r\n                                            CIN is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mt10 row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CarrierName\">Carrier Name<span *ngIf=\"LfvValidationParameters.IsCarrierNameReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CarrierName\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCarrierNameReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CarrierName').invalid && (LFVRecordEditForm.get('CarrierName').dirty || LFVRecordEditForm.get('CarrierName').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierName').errors.required\">\r\n                                            Carrier Name is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"LoadDate\">Load Date<span *ngIf=\"LfvValidationParameters.IsLoadDateReq\" class=\"color-maroon\">*</span></label>\r\n                                    <input name=\"LoadDate\" class=\"form-control\" formControlName=\"LoadDate\" myDatePicker\r\n                                           [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"LFVRecordEditForm.get('LoadDate').setValue($event)\"\r\n                                           [readonly]=\"!LfvValidationParameters.IsLoadDateReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('LoadDate').invalid && (LFVRecordEditForm.get('LoadDate').dirty || LFVRecordEditForm.get('LoadDate').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('LoadDate').errors.required\">\r\n                                            Load Date is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CorrectedQuantity\">Corrected Quantity<span *ngIf=\"LfvValidationParameters.IsCorrectedQtyRes || LfvValidationParameters.IsGrossReq \" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"CorrectedQuantity\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCorrectedQtyOrGrossReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').invalid && (LFVRecordEditForm.get('CorrectedQuantity').dirty || LFVRecordEditForm.get('CorrectedQuantity').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').errors.required\">\r\n                                            Corrected quantity is required.\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CorrectedQuantity').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"GrossQuantity\">Gross Quantity<span *ngIf=\"LfvValidationParameters.IsGrossReq ||LfvValidationParameters.IsCorrectedQtyRes\" class=\"color-maroon\">*</span></label>\r\n                                    <input formControlName=\"GrossQuantity\" class=\"form-control\" [readonly]=\"!LfvValidationParameters.IsCorrectedQtyOrGrossReq\">\r\n                                    <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').invalid && (LFVRecordEditForm.get('GrossQuantity').dirty || LFVRecordEditForm.get('GrossQuantity').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('GrossQuantity').errors.required\">\r\n                                            Gross Quantity is required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mt10 row\">                         \r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ProductType\">Product Type</label>\r\n                                    <input name=\"ProductType\" class=\"form-control\" formControlName=\"ProductType\"\r\n                                           [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('ProductType').invalid && (LFVRecordEditForm.get('ProductType').dirty || LFVRecordEditForm.get('ProductType').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('ProductType').errors.required\">\r\n                                            Product Type is required.\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"RecordDate\">Record Date</label>\r\n                                    <input formControlName=\"RecordDate\" class=\"form-control\" [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('RecordDate').invalid && (LFVRecordEditForm.get('RecordDate').dirty || LFVRecordEditForm.get('RecordDate').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('RecordDate').errors.required\">\r\n                                            Corrected quantity is required.\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('RecordDate').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"CarrierId\">CarrierID</label>\r\n                                    <input formControlName=\"CarrierId\" class=\"form-control\" [readonly]=\"true\">\r\n                                    <!--<div *ngIf=\"LFVRecordEditForm.get('CarrierId').invalid && (LFVRecordEditForm.get('CarrierId').dirty || LFVRecordEditForm.get('CarrierId').touched)\"\r\n                                         class=\"color-maroon\">\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierId').errors.pattern\">\r\n                                            Invalid\r\n                                        </div>\r\n                                        <div *ngIf=\"LFVRecordEditForm.get('CarrierId').errors.required\">\r\n                                            Gross Quantity is required.\r\n                                        </div>\r\n                                    </div>-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button (click)=\"_EditToggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                        <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save &Re-Submit</button>\r\n                    </div>\r\n                </form>\r\n            </content>\r\n        </div>\r\n    </ng-sidebar>\r\n</ng-sidebar-container>\r\n\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- trigger ignoreModal -->\r\n<div type=\"hidden\" id=\"openIgnoreModal\" data-toggle=\"modal\" data-target=\"#ignoreModal\"></div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"ignoreModal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Select Reason</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ng-multiselect-dropdown [placeholder]=\"'Select Reason'\" [settings]=\"dropdownSettings\"\r\n                    [data]=\"reasonList\" [(ngModel)]=\"selectedReason\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitIgnoreDescription()\"\r\n                    [disabled]=\"selectedReason && selectedReason.length==0\" data-dismiss=\"modal\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation, ElementRef } from '@angular/core';\r\nimport { LeftSideFilterComponent } from '../left-side-filter/left-side-filter.component';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { DropDownItem, LFBolEditModel, LFRecordGridModel, LFRecordsGridExport, LFRecordsGridViewModel, LFValidationGridViewModel, LFVValidationParameters } from '../LiftFileModels';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv'\r\nimport { LFVRecordStatus } from 'src/app/app.enum';\r\n\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(LeftSideFilterComponent) filterComponent: LeftSideFilterComponent;\r\n  viewType = 1;\r\n  gridType = 0;\r\n  LFValidationList: LFValidationGridViewModel[] = [];\r\n  LFVRecordGrid: LFRecordsGridViewModel[] = [];\r\n  IsLoading = false;\r\n  isValidationCarrier = false;\r\n  dtTrigger: Subject<any> = new Subject();\r\n  dtOptions: any = {};\r\n  public isChecked = false;\r\n  public LFVRecordStatus = LFVRecordStatus;\r\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n  //side bar related variables\r\n  public _opened: boolean = false;\r\n  public _animate: boolean = true;\r\n  public _positionNum: number = 1;\r\n  public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n\r\n  public bolResolveForm: FormGroup;\r\n  public selectedLiftFileRecord: LFRecordGridModel; //used for display purpose only\r\n  public TerminalList: DropDownItem[];\r\n  public FuelTypeList: DropDownItem[];\r\n  public multiselectSettingsById: IDropdownSettings;\r\n  public InvoiceFtlDetailIdList: DropDownItem[];\r\n  public SelectedBolProduct: any;\r\n  public SelectedTerminalList: DropDownItem[] = [];\r\n  public SelectedFuelTypeList: DropDownItem[] = [];\r\n\r\n  //search Liftfile records variables\r\n  public bolSearchQuery: string = \"\";\r\n  public fileNameSearchQuery: string = \"\";\r\n  public showSearchControls: boolean = false;\r\n  public showSearchBtn: boolean = false;\r\n  public LiftFilesearchResults: LFRecordGridModel[] = [];\r\n  searchGridDtOptions: any = {};\r\n  searchGridDtTrigger: Subject<any> = new Subject();\r\n  @ViewChild('btnOpenModal') btnOpenModal: ElementRef<HTMLElement>;\r\n\r\n  csvOptions = {\r\n    fieldSeparator: ',',\r\n    quoteStrings: '\"',\r\n    decimalseparator: '.',\r\n    showLabels: true,\r\n    showTitle: false,\r\n    title: 'LFV' + new Date(),\r\n    useBom: true,\r\n    noDownload: false,\r\n      headers: [\"BOL\", \"Terminal Code\", \"Terminal\", \"Corrected Quantity\", \"Terminal Item Code\", \"Product Type\", \"Load Date\", \"Record Date\", \"Carrier ID\", \"Carrier Name\", \"Reasons\", \"Reason Code\", \"Reason Category\", \"Modified By\", \"Modified Date\", \"Resolution Time\",\"Time to BOL\"]\r\n    };\r\n\r\n    //LFV Record Edit variables \r\n    public isAdminUser: boolean;\r\n    public LfvValidationParameters: LFVValidationParameters;\r\n    public LFVRecordEditForm: FormGroup;\r\n    public  QuantityPattern: string = \"^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$\";\r\n    \r\n    public _EditOpened: boolean = false;\r\n    public _EditAnimate: boolean = true;\r\n    public _EditPositionNum: number = 1;\r\n    public _EditPOSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n\r\n    //ignore by reason\r\n    public preferenceSetting: any = null;\r\n    public selectedReason = [];\r\n    public reasonList = [];\r\n    public dropdownSettings: IDropdownSettings = { singleSelection: true, idField: 'Id', textField: 'Name', allowSearchFilter: true };\r\n\r\n    constructor(private _lfvService: LiftfiledashboardserviceService, private fb: FormBuilder) {\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.getPreferencesSetting();\r\n    this.multiselectSettingsById = {\r\n      singleSelection: true,\r\n      idField: 'Id',\r\n      textField: 'Name',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      itemsShowLimit: 1,\r\n      allowSearchFilter: true\r\n    };\r\n    this.initializeGrid();\r\n      this.bolResolveForm = this.buildForm();\r\n      this.LFVRecordEditForm = this.buildLFVRecordEditForm();\r\n  }\r\n  buildForm(): FormGroup {\r\n    let fg = this.fb.group({\r\n      BolNumber: this.fb.control('', [Validators.required]),\r\n      LiftDate: this.fb.control('', [Validators.required]),\r\n      GrossQuantity: this.fb.control('', [Validators.required]),\r\n      NetQuantity: this.fb.control('', [Validators.required]),\r\n      BadgeNumber: this.fb.control(''),\r\n      SelectedTerminal: this.fb.control('', [Validators.required]),\r\n      SelectedFuelType: this.fb.control('', [Validators.required]),\r\n      Notes: this.fb.control(''),\r\n      LIftFileRecordId: this.fb.control(''),\r\n      InvoiceFtlDetailId: this.fb.control(''),\r\n      IsBulkPlantLift: this.fb.control('')\r\n    });\r\n    this.SelectedFuelTypeList = [];\r\n    this.SelectedTerminalList = [];\r\n    return fg;\r\n  }\r\n  initFormData(data: LFBolEditModel) {\r\n    this.bolResolveForm.reset();//clear previous values\r\n    if ((this.bolResolveForm != null && this.bolResolveForm != undefined) && (data != null && data != undefined)) {\r\n      this.bolResolveForm.get('BolNumber').setValue(data.BolNumber);\r\n      this.bolResolveForm.get('LiftDate').setValue(data.DisplayLiftDate);\r\n      this.bolResolveForm.get('GrossQuantity').setValue(data.GrossQuantity);\r\n      this.bolResolveForm.get('NetQuantity').setValue(data.NetQuantity);\r\n      this.bolResolveForm.get('Notes').setValue(data.Notes);\r\n      this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n      this.bolResolveForm.get('InvoiceFtlDetailId').setValue(data.InvoiceFtlDetailId);\r\n      this.bolResolveForm.get('IsBulkPlantLift').setValue(data.IsBulkPlantLift);\r\n      this.bolResolveForm.get('LIftFileRecordId').setValue(data.LiftRecord.LiftFileRecordId);\r\n      this.bolResolveForm.get('BadgeNumber').setValue(data.BadgeNumber);\r\n      if (data.IsBulkPlantLift == true) { // no terminal dropdown for pickup from bulk plants\r\n        this.bolResolveForm.get('SelectedTerminal').clearValidators();\r\n        this.bolResolveForm.get('SelectedTerminal').updateValueAndValidity();\r\n      }\r\n      if (data != null && data.SelectedTerminal != null) {\r\n        this.bolResolveForm.get('SelectedTerminal').setValue(data.SelectedTerminal);\r\n        this.SelectedTerminalList = [];\r\n        this.SelectedTerminalList.push(data.SelectedTerminal);\r\n      }\r\n      if (data != null && data.SelectedFuelType != null) {\r\n        this.bolResolveForm.get('SelectedFuelType').setValue(data.SelectedFuelType);\r\n        this.SelectedFuelTypeList = [];\r\n        this.SelectedFuelTypeList.push(data.SelectedFuelType);\r\n      }\r\n    }\r\n  }\r\n\r\n  createPostObject(): LFBolEditModel {\r\n    let inputPostObject = new LFBolEditModel();\r\n    inputPostObject.BadgeNumber = this.bolResolveForm.get('BadgeNumber').value;\r\n    inputPostObject.BolNumber = this.bolResolveForm.get('BolNumber').value;\r\n    inputPostObject.GrossQuantity = this.bolResolveForm.get('GrossQuantity').value;\r\n    inputPostObject.InvoiceFtlDetailId = this.bolResolveForm.get('InvoiceFtlDetailId').value;\r\n    inputPostObject.IsBulkPlantLift = this.bolResolveForm.get('IsBulkPlantLift').value;\r\n    inputPostObject.LiftRecord.LiftFileRecordId = this.bolResolveForm.get('LIftFileRecordId').value;\r\n    inputPostObject.LiftDate = this.bolResolveForm.get('LiftDate').value;\r\n    inputPostObject.NetQuantity = this.bolResolveForm.get('NetQuantity').value;\r\n    inputPostObject.Notes = this.bolResolveForm.get('Notes').value;\r\n    let SelectedFuelType = this.bolResolveForm.get('SelectedFuelType').value;\r\n    let fuelTypeId = SelectedFuelType[0].Id;\r\n    inputPostObject.FuelTypeId = fuelTypeId;\r\n    let selectedTerminal = this.bolResolveForm.get('SelectedTerminal').value;\r\n    let terminalId = inputPostObject.IsBulkPlantLift ? selectedTerminal.Id : selectedTerminal[0].Id;\r\n    inputPostObject.TerminalId = terminalId;\r\n    return inputPostObject;\r\n  }\r\n  initializeGrid() {\r\n    let exportInvitedColumns = { columns: ':visible' };\r\n    this.dtOptions = {\r\n      dom: '<\"html5buttons\"B>lTfgitp',\r\n      buttons: [\r\n        { extend: 'colvis' },\r\n        { extend: 'copy', exportOptions: exportInvitedColumns },\r\n        { extend: 'csv', title: 'LiftFileRecords', exportOptions: exportInvitedColumns },\r\n        { extend: 'pdf', title: 'LiftFileRecords', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n        { extend: 'print', exportOptions: exportInvitedColumns }\r\n      ],\r\n        pagingType: 'first_last_numbers',\r\n        fixedHeader: false,\r\n      pageLength: 10,\r\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n    };\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.getLfvData();\r\n\r\n  }\r\n  public changeViewType(value) {\r\n    this.viewType = value;\r\n    if (value == 1)\r\n      this.isValidationCarrier = false;\r\n    else\r\n      this.isValidationCarrier = true;\r\n    this.getLfvData();\r\n  }\r\n\r\n  private getLfvData() {\r\n    this.LFValidationList = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this.IsLoading = true;\r\n    this._lfvService.getLFValidationGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, isCarrierPerFormanceDashboard: this.isValidationCarrier, carrierIds: carrierOrderIds, isMatchingWindow: this.filterComponent.isMatchingWindow }).subscribe(async (res) => {\r\n      if (res)\r\n        this.LFValidationList = res;\r\n      else\r\n        this.LFValidationList = [];\r\n\r\n      this.IsLoading = false;\r\n    })\r\n  }\r\n\r\n  public OnSearch($event): void {\r\n    if ($event) {\r\n      try {\r\n        $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n        this.gridType = LFVRecordStatus.None;\r\n        this.LFVRecordGrid = [];\r\n        // this.dtTrigger.next();\r\n        this.getLfvData();\r\n\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n  changeGridType(status) {\r\n    this.gridType = status;\r\n    this.getLfvFilterGrid(status);\r\n  }\r\n\r\n  private getLfvFilterGrid(status) {\r\n    // if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n    //   this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n    // }\r\n    try {\r\n      $(\"#liftfilerecords-datatable\").DataTable().clear().destroy();\r\n    } catch (e) {\r\n    }\r\n    this.IsLoading = true;\r\n    this.LFVRecordGrid = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this._lfvService.getLFVRecordGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, recordStatus: status, isMatchingWindow: this.filterComponent.isMatchingWindow, carrierIds: carrierOrderIds }).subscribe(async (res) => {\r\n        if (res) {\r\n            this.LFVRecordGrid = await res;\r\n            if (this.LFVRecordGrid != null && this.LFVRecordGrid.length > 0) {\r\n                this.isAdminUser = this.LFVRecordGrid[0].IsAdminUser;\r\n                this.LfvValidationParameters = this.LFVRecordGrid[0].LfvValidationParameters;\r\n            }\r\n        }      \r\n      else\r\n        this.LFVRecordGrid = [];\r\n      this.dtTrigger.next();\r\n\r\n      this.IsLoading = false;\r\n    })\r\n  }\r\n  public openLFVScratchReportGrid(): void {\r\n    window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  }\r\n  public openAccrualReportGrid(): void {\r\n     window.open(\"Supplier/LiftFile/LFVAccrualReport\", \"_blank\");\r\n  }\r\n  public selectAllRecords(eventData: any) {\r\n    if (eventData != null && eventData != undefined) {\r\n      if (eventData.target.checked) {\r\n        this.isChecked = true;\r\n      }\r\n      else {\r\n        this.isChecked = false;\r\n      }\r\n    }\r\n  }\r\n  public getLFRecordIds() {\r\n    let LFRecordIds = [];\r\n    let table = $('#liftfilerecords-datatable').DataTable();\r\n    var rowcollection = table.$(\".dt-checkbox\", { \"page\": \"all\" });\r\n    rowcollection.each(function (index, elem) {\r\n      if ($(this).is(\":checked\")) {\r\n        LFRecordIds.push(parseInt($(this).attr('id')));\r\n      }\r\n    });\r\n    return LFRecordIds;\r\n    }\r\n\r\n    public getPreferencesSetting() {\r\n        if (!this.preferenceSetting) {\r\n            this._lfvService.getPreferencesSetting().subscribe(response => {\r\n                this.preferenceSetting = response;\r\n            });\r\n        }\r\n    }\r\n\r\n  public GetReasonDescriptionList() {\r\n    if (this.reasonList && this.reasonList.length == 0) {\r\n      this.IsLoading = true;\r\n      this._lfvService.GetReasonDescriptionList().subscribe((response: any) => {\r\n        if (response && response.length > 0) {\r\n          this.reasonList = response;\r\n        }\r\n        this.IsLoading = false;\r\n      });\r\n    }\r\n  }\r\n  public submitIgnoreDescription() {\r\n    this.addRecordsForForcedIgnoreMatchProcessing(this.getLFRecordIds());\r\n  }\r\n  public ValidateForIgnoreMatchProcessing(status: string) { //ignore or reprocess\r\n\r\n    let LFRecordIds = this.getLFRecordIds();\r\n    this.selectedReason = [];\r\n\r\n    if (LFRecordIds != null && LFRecordIds != undefined && LFRecordIds.length > 0) {\r\n      if (status == 'ignore') {\r\n         if (this.preferenceSetting && this.preferenceSetting.IsLiftFileValidationEnabled && this.preferenceSetting.IsReasonCodesEnabled) {\r\n           this.GetReasonDescriptionList();\r\n           document.getElementById('openIgnoreModal').click();\r\n         } else {\r\n           this.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds);\r\n         }\r\n      }\r\n      else if (status == 'reprocess')\r\n        this.addUnmatchedRecordForReProcessing(LFRecordIds);\r\n    }\r\n    else { Declarations.msgerror(\"No Records selected\", undefined, undefined); }\r\n\r\n  }\r\n  addRecordsForForcedIgnoreMatchProcessing(LFRecordIds: any[]) {\r\n    let descriptionId: number = 0;\r\n    let descriptionText: string = '';\r\n\r\n    if (this.selectedReason && this.selectedReason.length > 0) {\r\n      descriptionId = this.selectedReason[0].Id;\r\n      descriptionText = this.selectedReason[0].Name;\r\n    }\r\n\r\n    this.IsLoading = true;\r\n    this._lfvService.addRecordsForForcedIgnoreMatchProcessing(LFRecordIds, descriptionId, descriptionText).subscribe((response: any) => {\r\n      if (response.StatusCode == 0) {\r\n        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n        this.getLfvFilterGrid(this.gridType);\r\n      } else {\r\n        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n      }\r\n    });\r\n    this.IsLoading = true;\r\n\r\n  }\r\n  addUnmatchedRecordForReProcessing(LFRecordIds: any[]) {\r\n    this.IsLoading = true;\r\n    this._lfvService.addUnmatchedRecordForReProcessing(LFRecordIds).subscribe((response: any) => {\r\n      if (response.StatusCode == 0) {\r\n        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n        this.getLfvFilterGrid(this.gridType);\r\n      } else {\r\n        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n      }\r\n    });\r\n    this.IsLoading = true;\r\n\r\n  }\r\n  getBolDetailsForResolve(lfRecord: LFRecordGridModel) {\r\n    this.IsLoading = true;\r\n    lfRecord.IsFromScratchReport = true;\r\n    this._lfvService.getBolDetailsForResolve(lfRecord).subscribe((data: LFBolEditModel) => {\r\n      if (data) {\r\n        this._toggleOpened(true);\r\n        this.selectedLiftFileRecord = data.LiftRecord;\r\n        this.TerminalList = data.TerminalList;\r\n        this.FuelTypeList = data.FuelTypeList;\r\n        this.InvoiceFtlDetailIdList = data.InvoiceFtlDetailsList;\r\n        this.initFormData(data)\r\n        this.IsLoading = false;\r\n      }\r\n    });\r\n  }\r\n  onSubmit() {\r\n    this.IsLoading = true;\r\n    this.bolResolveForm.markAsTouched();\r\n    if (this.bolResolveForm.valid) {\r\n      let requestObj = this.createPostObject();\r\n      if (requestObj != null) {\r\n        this._lfvService.saveBolDetailsForResolve(requestObj).subscribe((response: any) => {\r\n          if (response.StatusCode == 0) {\r\n            this.IsLoading = false;\r\n            Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n            this._toggleOpened(false);\r\n            this.getLfvFilterGrid(this.gridType);\r\n          } else {\r\n            this.IsLoading = false;\r\n            Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.IsLoading = false;\r\n  }\r\n  _toggleOpened(shouldOpen: boolean) {\r\n    if (shouldOpen) {\r\n      this._opened = true;\r\n    }\r\n    else {\r\n      this._opened = !this._opened;\r\n      this.bolResolveForm.reset();\r\n    }\r\n    }\r\n\r\n  GetBolRecord(InvoiceFtlDetailId: any) {\r\n    if (InvoiceFtlDetailId != null && InvoiceFtlDetailId != undefined && InvoiceFtlDetailId != '') {\r\n      let selectedLiftFileRecordId = this.selectedLiftFileRecord.LiftFileRecordId;\r\n      let invoiceFtlDetailId = parseInt(InvoiceFtlDetailId);\r\n      let LFRecord = new LFRecordGridModel();\r\n\r\n      LFRecord.LiftFileRecordId = selectedLiftFileRecordId;\r\n      LFRecord.InvFtlDetailId = invoiceFtlDetailId;\r\n      LFRecord.bol = this.selectedLiftFileRecord.bol;\r\n      LFRecord.TerminalName = this.selectedLiftFileRecord.TerminalName;\r\n      LFRecord.TerminalItemCode = this.selectedLiftFileRecord.TerminalItemCode;\r\n      LFRecord.LoadDate = this.selectedLiftFileRecord.LoadDate;\r\n      LFRecord.ProductType = this.selectedLiftFileRecord.ProductType;\r\n      LFRecord.correctedQuantity = this.selectedLiftFileRecord.correctedQuantity;\r\n      LFRecord.IsFromScratchReport = true;\r\n      this.getBolDetailsForResolve(LFRecord);\r\n    }\r\n  }\r\n  openSupplierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/SupplierBolReport\", \"_blank\");\r\n  }\r\n  openCarrierBOLReportGrid() {\r\n    window.open(\"Supplier/LiftFile/CarrierBolReport\", \"_blank\");\r\n  }\r\n\r\n \r\n  searchLiftFileRecords() {\r\n    let bolQuery = this.bolSearchQuery;\r\n    let fileNameQuery = this.fileNameSearchQuery;\r\n    if ((bolQuery == \"\" || bolQuery == null || bolQuery == undefined) &&\r\n      (fileNameQuery == \"\" || fileNameQuery == undefined || fileNameQuery == null)) {\r\n      Declarations.msgerror(\"Please provide either Bol# or Filename\", undefined, undefined);\r\n    }\r\n    else {\r\n      let exportColumns = { columns: ':visible' };\r\n      this.searchGridDtOptions = {\r\n        dom: '<\"html5buttons\"B>lTfgitp',\r\n        buttons: [\r\n          { extend: 'colvis' },\r\n          { extend: 'copy', exportOptions: exportColumns },\r\n          { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n          { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n          { extend: 'print', exportOptions: exportColumns }\r\n        ],\r\n          pagingType: 'first_last_numbers',\r\n          fixedHeader:false,\r\n        pageLength: 10,\r\n        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n      };\r\n      let bolNumber = (bolQuery == null || bolQuery == undefined) ? \"\" : bolQuery.trim();\r\n      let fileName = (fileNameQuery == null || fileNameQuery == undefined) ? \"\" : fileNameQuery.trim();\r\n      this.IsLoading = true;\r\n      this._lfvService.getLFSearchRecords(bolNumber, fileName).subscribe(data => {\r\n        let el: HTMLElement = this.btnOpenModal.nativeElement;\r\n        el.click();\r\n        $(\"#liftfileSearchrecords-datatable\").DataTable().clear().destroy();\r\n        this.LiftFilesearchResults = data;\r\n        this.searchGridDtTrigger.next();\r\n        this.IsLoading = false;\r\n      });\r\n    }\r\n\r\n  }\r\n  toggleRecordSearchControls(shouldShow: boolean) {\r\n    this.bolSearchQuery = \"\";\r\n    this.fileNameSearchQuery = \"\";\r\n    this.showSearchControls = shouldShow;\r\n    this.showSearchBtn = shouldShow;\r\n\r\n  }\r\n  async OnExport(status) {\r\n    this.generateCSV(status);\r\n  }\r\n\r\n  public generateCSV(status) {\r\n    this.IsLoading = true;\r\n    var exportData: LFRecordsGridExport[] = [];\r\n    let ids = [];\r\n    let carrierOrderIds = \"\";\r\n    if (this.filterComponent.selectedCarrierList.length == this.filterComponent.CarrierDrpDwnList.length) {\r\n      carrierOrderIds = \"\";\r\n    } else {\r\n      this.filterComponent.selectedCarrierList && this.filterComponent.selectedCarrierList.forEach(res => { ids.push(res.Name) });\r\n      carrierOrderIds = ids.join();\r\n    }\r\n    this._lfvService.getLFVRecordGrid({ fromDate: this.filterComponent.fromDate, toDate: this.filterComponent.toDate, recordStatus: status, isMatchingWindow: this.filterComponent.isMatchingWindow, carrierIds: carrierOrderIds }).subscribe(async (res) => {\r\n      if (res)\r\n          exportData = res.map(m => {\r\n              return {\r\n                  bol: m.bol, TerminalName: m.TerminalName, Terminal: m.Terminals,correctedQuantity:m.correctedQuantity,\r\n        TerminalItemCode:m.TerminalItemCode,  ProductType:m.ProductType,   LoadDate:m.LoadDate,RecordDate:m.RecordDate,\r\n          CarrierID: m.CarrierID, CarrierName: m.CarrierName, Reason: m.Reason, \r\n                  ReasonCode: m.ReasonCode, ReasonCategory: m.ReasonCategory, Username: m.Username, ModifiedDate: m.ModifiedDate, LFVResolutionTime: m.LFVResolutionTime, TimeToBol: m.TimeToBol    }\r\n      })\r\n      else\r\n        exportData = [];\r\n      new AngularCsv(exportData, 'LFV_' + new Date(), this.csvOptions);\r\n      this.IsLoading = false;\r\n\r\n    })\r\n    }\r\n\r\n    _EditToggleOpened(shouldOpen: boolean) {\r\n        if (shouldOpen) {\r\n            this._EditOpened = true;\r\n        }\r\n        else {\r\n            this._EditOpened = !this._EditOpened;\r\n            this.LFVRecordEditForm.reset();\r\n        }\r\n    }\r\n\r\n    editLiftFileRecord(record: LFRecordsGridViewModel) {\r\n        if (record != null) {\r\n            this.IsLoading = true;\r\n            this._EditToggleOpened(true);\r\n            this.initRecordEditForm(record);\r\n            this.IsLoading = false;\r\n        }\r\n    }\r\n    buildLFVRecordEditForm(): FormGroup {\r\n        let formGroup = this.fb.group({\r\n            LIftFileRecordId: this.fb.control(''),\r\n            BolNumber: this.fb.control(''),\r\n            TerminalCode: this.fb.control(''),\r\n            TerminalItemCode: this.fb.control(''),\r\n            LoadDate: this.fb.control(''),\r\n            CorrectedQuantity: this.fb.control(''),\r\n            GrossQuantity: this.fb.control(''),\r\n            ProductType: this.fb.control(''),\r\n            RecordDate: this.fb.control(''),\r\n            CarrierId: this.fb.control(''),\r\n            CIN: this.fb.control(''),\r\n            CarrierName: this.fb.control('')\r\n        });       \r\n        return formGroup;\r\n    }\r\n    initRecordEditForm(record: LFRecordsGridViewModel) {\r\n        this.LFVRecordEditForm.reset();\r\n        if (record != null && record != undefined) {\r\n            this.LFVRecordEditForm.get('LIftFileRecordId').setValue(record.LiftFileRecordId);\r\n            this.LFVRecordEditForm.get('BolNumber').setValue(record.bol);\r\n            this.LFVRecordEditForm.get('TerminalCode').setValue(record.TerminalName);\r\n            this.LFVRecordEditForm.get('TerminalItemCode').setValue(record.TerminalItemCode);\r\n            this.LFVRecordEditForm.get('LoadDate').setValue(record.LoadDate);\r\n            this.LFVRecordEditForm.get('CorrectedQuantity').setValue(record.correctedQuantity);\r\n            this.LFVRecordEditForm.get('GrossQuantity').setValue(record.GrossQuantity);\r\n            this.LFVRecordEditForm.get('ProductType').setValue(record.ProductType);\r\n            this.LFVRecordEditForm.get('RecordDate').setValue(record.RecordDate);\r\n            this.LFVRecordEditForm.get('CarrierId').setValue(record.CarrierID);\r\n            this.LFVRecordEditForm.get('CIN').setValue(record.CIN);\r\n            this.LFVRecordEditForm.get('CarrierName').setValue(record.CarrierName);\r\n            if (this.LfvValidationParameters != null) {\r\n                if (this.LfvValidationParameters.IsBolReq) {\r\n                    this.LFVRecordEditForm.controls['BolNumber'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['BolNumber'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCorrectedQtyRes || this.LfvValidationParameters.IsGrossReq) {\r\n                    this.LfvValidationParameters.IsCorrectedQtyOrGrossReq = true;\r\n                    this.LFVRecordEditForm.controls['CorrectedQuantity'].setValidators([Validators.required, Validators.pattern(this.QuantityPattern)]);\r\n                    this.LFVRecordEditForm.controls['CorrectedQuantity'].updateValueAndValidity();\r\n                    this.LFVRecordEditForm.controls['GrossQuantity'].setValidators([Validators.required, Validators.pattern(this.QuantityPattern)]);\r\n                    this.LFVRecordEditForm.controls['GrossQuantity'].updateValueAndValidity();\r\n                }\r\n                //if (this.LfvValidationParameters.IsGrossReq) {\r\n                   \r\n                //}\r\n                if (this.LfvValidationParameters.IsLoadDateReq) {\r\n                    this.LFVRecordEditForm.controls['LoadDate'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['LoadDate'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsTerminalCodeReq) {\r\n                    this.LFVRecordEditForm.controls['TerminalCode'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['TerminalCode'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsTermItemCodeReq) {\r\n                    this.LFVRecordEditForm.controls['TerminalItemCode'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['TerminalItemCode'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCINReq) {\r\n                    this.LFVRecordEditForm.controls['CIN'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['CIN'].updateValueAndValidity();\r\n                }\r\n                if (this.LfvValidationParameters.IsCarrierNameReq) {\r\n                    this.LFVRecordEditForm.controls['CarrierName'].setValidators([Validators.required]);\r\n                    this.LFVRecordEditForm.controls['CarrierName'].updateValueAndValidity();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onRecordEditSubmit() {\r\n        this.LFVRecordEditForm.markAllAsTouched();\r\n        if(this.LFVRecordEditForm.valid) {\r\n            this.IsLoading = true;\r\n            let values = this.LFVRecordEditForm.value;          \r\n            if (values != null)\r\n            {\r\n                let data = new LFRecordGridModel();\r\n\r\n                data.Terminal = this.LFVRecordEditForm.get('TerminalCode').value;\r\n                data.bol = this.LFVRecordEditForm.get('BolNumber').value;\r\n                data.correctedQuantity = this.LFVRecordEditForm.get('CorrectedQuantity').value;\r\n                data.CarrierName = this.LFVRecordEditForm.get('CarrierName').value;\r\n                data.CIN = this.LFVRecordEditForm.get('CIN').value;\r\n                data.TerminalItemCode = this.LFVRecordEditForm.get('TerminalItemCode').value;\r\n                data.GrossQuantity = this.LFVRecordEditForm.get('GrossQuantity').value;\r\n                data.LoadDate = this.LFVRecordEditForm.get('LoadDate').value;\r\n                data.LiftFileRecordId = this.LFVRecordEditForm.get('LIftFileRecordId').value;\r\n\r\n                let requestModel = this.correctValues(data);\r\n                this._lfvService.updateLiftFileRecord(requestModel).subscribe((response: any) => {\r\n                    this.IsLoading = false;\r\n                    if (response.StatusCode == 0) {\r\n                        Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n\r\n                    } else if (response.StatusCode == 1) {\r\n                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                    }\r\n                    this._EditToggleOpened(false); \r\n                    this.getLfvFilterGrid(this.gridType);\r\n                });\r\n            }           \r\n        }\r\n    }\r\n\r\n    correctValues(data: LFRecordGridModel): LFRecordGridModel{\r\n        if (data.Terminal === '--') {\r\n            data.Terminal = null;\r\n        }\r\n        if (data.bol === '--') {\r\n            data.bol = null;\r\n        }\r\n        if (data.CarrierName === '--') {\r\n            data.CarrierName = null;\r\n        }\r\n        if (data.CIN === '--') {\r\n            data.CIN = null;\r\n        }\r\n        if (data.TerminalItemCode === '--') {\r\n            data.TerminalItemCode = null;\r\n        }\r\n        if (data.LoadDate === '--') {\r\n            data.LoadDate = null;\r\n        } else {\r\n            var loadDateWithOutSlash = data.LoadDate.replace(/\\//g, '')\r\n            data.LoadDate = loadDateWithOutSlash;\r\n        }\r\n        return data;\r\n       \r\n    }\r\n    \r\n}\r\n    ","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LFBolEditModel, LFRecordGridModel, LFRecordsGridViewModel } from '../LiftFileModels';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LiftfiledashboardserviceService extends HandleError {\r\n    //urls\r\n    public urlGetLFRecordsGrid: string = 'Supplier/LiftFile/GetLiftFileRecordsScratchReport';\r\n    public urlGetBolDetailsForResolve: string = 'Supplier/LiftFile/GetLFBolEditDetailsForSlider';\r\n    public urlSaveBolDetailsForResolve: string = 'Supplier/LiftFile/SaveLFBolEditDetails';\r\n    public urlAddRecordsForForceIgnoreProcessing: string = 'Supplier/LiftFile/AddRecordsAsIgnoreMatch';\r\n    public urlAddUnmatchedRecordForReProcessing: string = 'Supplier/Exception/AddUnmatchedRecordForReProcessing';\r\n    //SupplierBOLReport\r\n    public urlGetLiftFileRecordsWithMissingTFXDeliveryDetails: string = 'Supplier/LiftFile/GetLiftFileRecordsWithMissingTFXDeliveryDetails';\r\n    //carrier bol report\r\n    public urlGetTFXDeliveryDetailsWithMissingLiftFileRecords: string = 'Supplier/LiftFile/GetTFXDeliveryDetailsWithMissingLiftFileRecords';\r\n\r\n    private UrlGetLFValidation: string = '/Supplier/Exception/LFValidationGridWithFilter';\r\n    private UrlGetLFCarrier: string = '/Supplier/LiftFile/GetLFVCarrierDropDwn';\r\n    private UrlGetLFVRecordGrid: string = '/Supplier/Exception/LFRecordsGridForDashboard';\r\n    private urlGetLFSearchRecordsByBolFileName: string = 'Supplier/LiftFile/LFRecordsGridByBolFileName?bol=';\r\n    private UrlGetLFVAccrualReportGrid: string = 'Supplier/LiftFile/GetLFVAccrualReportGrid'\r\n\r\n    private UrlGetLFVValidationStatsAndProductTypesDDL: string = 'Supplier/LiftFile/GetLFVValidationStatsAndProductTypesDDL';\r\n    private UrlUpdateLiftFileRecord: string = 'Supplier/LiftFile/UpdateLiftFileRecord';\r\n    private urlGetReasonDescriptionList: string = 'Supplier/LiftFile/GetReasonDescriptionList';\r\n    private urlGetPreferencesSetting: string = 'Settings/Profile/GetPreferencesSettingAsync';\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n    getLFRecords(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLFRecordsGrid)\r\n            .pipe(catchError(this.handleError<any>('getLFRecords', null)));\r\n    }\r\n    getBolDetailsForResolve(record: LFRecordGridModel): Observable<any> {\r\n        return this.httpClient.post<LFRecordGridModel>(this.urlGetBolDetailsForResolve, record)\r\n            .pipe(catchError(this.handleError<LFRecordGridModel>('getBolDetailsForResolve', record)));\r\n    }\r\n    saveBolDetailsForResolve(record: LFBolEditModel): Observable<any> {\r\n        return this.httpClient.post<LFBolEditModel>(this.urlSaveBolDetailsForResolve, record)\r\n            .pipe(catchError(this.handleError<LFBolEditModel>('saveBolDetailsForResolve', record)));\r\n    }\r\n    addRecordsForForcedIgnoreMatchProcessing(LfRecordIds: any[], descriptionId: number = 0, descriptionText: string = ''): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlAddRecordsForForceIgnoreProcessing + '?DescriptionId=' + descriptionId + '&DescriptionText=' + descriptionText, LfRecordIds)\r\n            .pipe(catchError(this.handleError<any>('addRecordsForForcedIgnoreMatchProcessing', LfRecordIds)));\r\n    }\r\n    getLFValidationGrid(data): Observable<any> {\r\n        return this.httpClient.post(this.UrlGetLFValidation, { startDate: data.fromDate, endDate: data.toDate, isCarrierPerFormanceDashboard: data.isCarrierPerFormanceDashboard, carrierIds: data.carrierIds, isMatchingWindow: data.isMatchingWindow })\r\n            .pipe(catchError(this.handleError<any>('getLFValidationGrid', null)));\r\n    }\r\n    getLFCarrier(fromDate: any, toDate: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFCarrier, { fromDate: fromDate, toDate: toDate })\r\n            .pipe(catchError(this.handleError<any>('getLFCarrier', null)));\r\n    }\r\n    getSupplierBOLReport(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLiftFileRecordsWithMissingTFXDeliveryDetails)\r\n            .pipe(catchError(this.handleError<any>('getSupplierBOLReport', null)));\r\n    }\r\n    getCarrierBOLReport(fromDate: any, toDate: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTFXDeliveryDetailsWithMissingLiftFileRecords, { fromDate: fromDate, toDate: toDate })\r\n            .pipe(catchError(this.handleError<any>('getCarrierBOLReport', null)));\r\n    }\r\n    getLFVRecordGrid(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVRecordGrid, { recordStatus: data.recordStatus, startDate: data.fromDate, endDate: data.toDate, lfCallId: 0, isMatchingWindow: data.isMatchingWindow, carrierIds: data.carrierIds })\r\n            // return this.httpClient.post(this.UrlGetLFVRecordGrid, {recordStatus:data.recordStatus, startDate: data.fromDate, endDate: data.toDate})\r\n            .pipe(catchError(this.handleError<any>('getLFVRecordGrid', null)));\r\n    }\r\n\r\n    addUnmatchedRecordForReProcessing(LfRecordIds: any[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlAddUnmatchedRecordForReProcessing, LfRecordIds)\r\n            .pipe(catchError(this.handleError<any>('addRecordsForForcedIgnoreMatchProcessing', LfRecordIds)));\r\n    }\r\n    getLFSearchRecords(bol: string, fileName: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetLFSearchRecordsByBolFileName + bol + '&fileName=' + fileName)\r\n            .pipe(catchError(this.handleError<any>('getLFSearchRecords', null)));\r\n    }\r\n    getLFVAccrualReportGrid(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVAccrualReportGrid, data)\r\n            .pipe(catchError(this.handleError<any>('getLFVAccrualReportGrid', null)));\r\n    }\r\n    GetLFVValidationStatsAndProductTypesDDL(data): Observable<any> {\r\n        return this.httpClient.post<any>(this.UrlGetLFVValidationStatsAndProductTypesDDL, data)\r\n            .pipe(catchError(this.handleError<any>('GetLFVValidationStatsAndProductTypesDDL', null)));\r\n    }\r\n    updateLiftFileRecord(data: LFRecordGridModel): Observable<any>{\r\n        return this.httpClient.post<any>(this.UrlUpdateLiftFileRecord, data)\r\n            .pipe(catchError(this.handleError<any>('updateLiftFileRecord', null)));\r\n    }\r\n    GetReasonDescriptionList(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetReasonDescriptionList)\r\n            .pipe(catchError(this.handleError<any>('GetReasonDescriptionList', null)));\r\n    }\r\n    getPreferencesSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetPreferencesSetting)\r\n            .pipe(catchError(this.handleError<any>('getPreferencesSettingAsync', null)));\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupplierBOLReport } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-supplier-bol-report',\r\n  templateUrl: './supplier-bol-report.component.html',\r\n  styleUrls: ['./supplier-bol-report.component.css']\r\n})\r\nexport class SupplierBolReportComponent implements OnInit {\r\n    public ReportRecords: SupplierBOLReport[] = [];\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public ShowGridLoader: boolean = false;\r\n\r\n    constructor(private dashboardservice: LiftfiledashboardserviceService) { }\r\n\r\n    ngOnInit() {\r\n        this.intializeGrid();\r\n        \r\n  }\r\n    intializeGrid() {\r\n        this.ShowGridLoader = true;\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Lift File Records', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Lift File Records', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n        };\r\n        this.getSupplierBOLReport();\r\n    }\r\n    getSupplierBOLReport() {\r\n        this.ShowGridLoader = true;\r\n        this.dashboardservice.getSupplierBOLReport().subscribe((data: SupplierBOLReport[]) => {\r\n            this.ShowGridLoader = false;\r\n            this.ReportRecords = data;\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n    reloadGrid() {\r\n        $(\"#supplierbolreport-datatable\").DataTable().clear().destroy();\r\n        this.getSupplierBOLReport();\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div  class=\"table-responsive\">\r\n                        <table id=\"supplierbolreport-datatable\" data-gridname=\"16\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"CallId\">CallId</th>\r\n                                    <th data-key=\"Bol\">BOL</th>\r\n                                    <th data-key=\"TerminalCode\">Terminal Code</th>\r\n                                    <th data-key=\"Terminal\">Terminal</th>\r\n                                    <th data-key=\"CorrectedQuanity\">Corrected Quanity</th>\r\n                                    <th data-key=\"TerminalItemCode\">Terminal Item Code</th>\r\n                                    <th data-key=\"ProductType\">Product Type</th>\r\n                                    <th data-key=\"CarrierID\">CarrierID</th>\r\n                                    <th data-key=\"CarrierName\">Carrier Name</th>\r\n                                    <th data-key=\"FileName\">File Name</th>\r\n                                    <th data-key=\"RecordDate\">Record Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"ReportRecords?.length > 0\">\r\n                                <tr *ngFor=\"let record of ReportRecords; let i = index\">\r\n                                    <td>{{record.CallId}}</td>\r\n                                    <td>\r\n                                        {{record.BOL}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalCode}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.Terminal}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CorrectedQuanity}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.TerminalItemCode}}\r\n                                    </td>\r\n                                    <td> {{record.ProductType}}</td>\r\n                                    <td>\r\n                                        {{record.CarrierID}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.CarrierName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.FileName}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{record.RecordDate}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"loader\" *ngIf=\"ShowGridLoader\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { LFValidationGridViewModel } from '../LiftFileModels';\r\nimport { LiftfiledashboardserviceService } from '../service/liftfiledashboardservice.service';\r\ndeclare var ApexCharts;\r\n@Component({\r\n  selector: 'app-validation',\r\n  templateUrl: './validation.component.html',\r\n  styleUrls: ['./validation.component.css']\r\n})\r\nexport class ValidationComponent implements OnInit, OnChanges {\r\n  @Input() LFValidationList: LFValidationGridViewModel[];\r\n  chart: any;\r\n\r\n  constructor(private _lfvService: LiftfiledashboardserviceService) { }\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.LFValidationList.currentValue && !changes.LFValidationList.isFirstChange()) {\r\n      this.createChartData();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //public openLFVScratchReportGrid(): void {\r\n  //  window.open(\"Supplier/LiftFile/LFVScratchReport\", \"_blank\");\r\n  //}\r\n\r\n  async RendorChart(data) {\r\n    try {\r\n      if (this.chart)\r\n        this.chart.destroy();\r\n    } catch (e) {\r\n\r\n    }\r\n    var options = {\r\n        colors: [\"#00FF00\", \"#ff0000\", \"#FF69B4\", \"#FFFF00\", \"#000080\", \"#00A7C6\", \"#800080\", '#0077ff','#A9D794'],\r\n      series: [{\r\n        data: data\r\n      }],\r\n      chart: {\r\n        height: 350,\r\n        type: 'bar',\r\n        events: {\r\n          click: function (chart, w, e) {\r\n             console.log(chart, w, e)\r\n          }\r\n        }\r\n      },\r\n      // colors: colors,\r\n      plotOptions: {\r\n        bar: {\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n        }\r\n      },\r\n    \r\n      dataLabels: {\r\n        enabled: true\r\n      },\r\n      legend: {\r\n        show: true\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          'Match',\r\n          'No Match',\r\n          'Partial Match',\r\n          'Pending',\r\n          'Duplicate',\r\n         'Active Exception',\r\n          'Ignored',\r\n          'Forced Ignore',\r\n          'UnMatched'          \r\n        ],\r\n        labels: {\r\n          style: {\r\n            //colors: colors,\r\n            fontSize: '12px'\r\n          }\r\n        }\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n        //colors: [\"red\", \"#F27036\", \"#663F59\", \"#6A6E94\", \"#4E88B4\", \"#00A7C6\", \"#18D8D8\", '#A9D794']\r\n      }\r\n    };\r\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\r\n    try {\r\n      if (this.chart)\r\n        this.chart.render();\r\n    } catch (e) {\r\n      this.chart.destroy();\r\n      this.chart.render();\r\n    }\r\n  }\r\n\r\n    async createChartData() {\r\n    var lfv = new LFValidationGridViewModel();\r\n    lfv.ActiveExceptionRecordCount = 0;\r\n    lfv.DuplicateRecordCount = 0;\r\n    lfv.IgnoredMatchRecordCount = 0;\r\n    lfv.MatchedRecordCount = 0;\r\n    lfv.NoMatchRecordCount = 0;\r\n    lfv.PartialMatchRecordCount = 0;\r\n    lfv.PendingMatchCount = 0;\r\n    lfv.TotalRecordCount = 0;\r\n    lfv.UnmatchedRecordCount = 0;\r\n    lfv.ForcedIgnoredMatchRecordCount = 0;\r\n    await this.LFValidationList && this.LFValidationList.map(m => {\r\n      lfv.ActiveExceptionRecordCount += m.ActiveExceptionRecordCount;\r\n      lfv.DuplicateRecordCount += m.DuplicateRecordCount;\r\n      lfv.IgnoredMatchRecordCount += m.IgnoredMatchRecordCount;\r\n      lfv.MatchedRecordCount += m.MatchedRecordCount;\r\n      lfv.NoMatchRecordCount += m.NoMatchRecordCount;\r\n      lfv.PartialMatchRecordCount += m.PartialMatchRecordCount;\r\n      lfv.PendingMatchCount += m.PendingMatchCount;\r\n      lfv.TotalRecordCount += m.TotalRecordCount;\r\n      lfv.UnmatchedRecordCount += m.UnmatchedRecordCount;\r\n      lfv.ForcedIgnoredMatchRecordCount += m.ForcedIgnoredMatchRecordCount;\r\n    })\r\n  \r\n    let data = [lfv.MatchedRecordCount, lfv.NoMatchRecordCount, lfv.PartialMatchRecordCount\r\n        , lfv.PendingMatchCount, lfv.DuplicateRecordCount, lfv.ActiveExceptionRecordCount\r\n        , lfv.IgnoredMatchRecordCount,lfv.ForcedIgnoredMatchRecordCount, lfv.UnmatchedRecordCount]\r\n    this.RendorChart(data);\r\n\r\n  }\r\n\r\n  // async createChartData() {\r\n  //   debugger;\r\n  //   var list = Array<LFValidationGridViewModel>();\r\n  //   await this.LFValidationList && this.LFValidationList.map(m => {\r\n  //     if (!list[m.RecordDate]) {\r\n  //       list[m.RecordDate] = [];\r\n  //     }\r\n  //     list[m.RecordDate].push(m);\r\n  //   })\r\n  //   if (list && list.length > 0)\r\n  //     this.RendorChart();\r\n\r\n}\r\n\r\n","<div class=\"well bg-white shadow-b pr\">\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n\n            <div id=\"chart-timeline\" ></div>\n        </div>\n        <!--<div class=\"col-md-2\">\n            <a class=\"btn border border-secondary mt5 pull-right\" (click)=\"openLFVScratchReportGrid()\"\n                placement=\"bottom\" ngbTooltip=\"Scratch Report\"><i class=\"fas fa-file-alt fs16\"></i></a>\n\n        </div>-->\n    </div>\n</div>"]}