{"version":3,"sources":["webpack:///src/app/company-addresses/region/service/region.service.ts","webpack:///src/app/fuelsurcharge/Create/create-fuel-surcharge.component.html","webpack:///src/app/fuelsurcharge/Create/create-fuel-surcharge.component.ts","webpack:///src/app/fuelsurcharge/View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component.ts","webpack:///src/app/fuelsurcharge/View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component.html","webpack:///src/app/fuelsurcharge/View/view-fuel-surcharge.component.html","webpack:///src/app/fuelsurcharge/View/view-fuel-surcharge.component.ts","webpack:///src/app/fuelsurcharge/View/view-historical-price/view-historical-price.component.ts","webpack:///src/app/fuelsurcharge/View/view-historical-price/view-historical-price.component.html","webpack:///src/app/fuelsurcharge/fuelsurcharge.module.ts","webpack:///src/app/fuelsurcharge/master/master.component.ts","webpack:///src/app/fuelsurcharge/master/master.component.html","webpack:///src/app/fuelsurcharge/models/CreateFuelSurcharge.ts"],"names":["httpOptions","headers","RegionService","httpClient","createUrl","updateUrl","deleteUrl","getRegionsUrl","getSourceRegionsUrl","createSourceRegionUrl","updateSourceRegionUrl","deleteSourceRegionUrl","getJobsUrl","getDriversUrl","getDispatchersUrl","getTrailersUrl","stateUrl","shiftByDriverUrl","getRegionSchedulsbyRegionIdUrl","getRouteByReginId","getCompanyShiftsUrl","getRegionDriversUrl","addDriverScheduleUrl","addRegionScheduleUrl","updateDriverScheduleUrl","deleteDriverScheduleUrl","getCarriersUrl","getRegionShiftMapping","getCarrierRegionsUrl","getSelectedCarriersByRegionUrl","isSourceRegionAvailableUrl","getProductTypeUrl","getFuelProductUrl","isPublishedDRUrl","onLoadingChanged","get","pipe","handleError","regiondId","regionId","region","post","name","id","countryId","driverIds","scheduleType","routeId","model","data","date","postModel","SelectedDate","driverScheduleMappingViewModels","productIds","fuelTypeIds","providedIn","CreateFuelSurchargeComponent","fb","fuelsurchargeService","regionService","http","carrierService","cdr","DtTrigger","SingleSelectSettingsById","MultiSelectSettingsByGroup","IsLoading","SelectedCountryId","TerminalsAndBulkPlantList","IsEditLoaded","IsCustomerSelected","IsMasterSelected","IsCarrierSelected","IsSourceRegionSelected","IsMonthlyVisible","IsWeeklyVisible","IsAnnualyVisible","IsGeneratedSurchargeTable","ShowMessage","viewType","disableInputControls","MinStartDate","Date","MaxStartDate","MinToDate","MinFromDate","decimalSupportedRegx","SelectedTerminalsAndBulkPlants","CurrentCompanyId","Number","currentUserCompanyId","getDefaultServingCountry","singleSelection","closeDropDownOnSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","MultiSelectSettingsById","text","searchPlaceholderText","primaryKey","labelKey","enableSearchFilter","badgeShowLimit","groupBy","rcForm","createForm","getTableTypes","controls","patchValue","Id","Master","Name","getSourceRegions","toString","dt","toDate","setFullYear","getFullYear","IndexPriceDate","setValue","format","AddRemoveValidations","onSelectedFuelSurchargeId","subscribe","s","stringify","JSON","parse","fuelsurchargeId","FsurcharId","fuelsurchargeMode","Mode","localStorage","getItem","removeItem","WeekList","MonthList","sourceMonthList","AnnualyList","sourceAnnualyList","element","push","Code","slice","i","m","setMonth","getMonth","SourceMonthList","y","SourceAnnualyList","valueChanges","prev","next","setValidFromDate","getTerminalsBulkPlant","onCarriersChange","onCustomersChange","SourceRegionChange","changeViewType","undefined","getFuelSurchargeTable","DefaultCountryId","getFuelSurchargeProducts","getFuelSurchargePeriods","getFuelSurchargeArea","IsManualUpdate","selectedTableType","value","Fsmodel","TableTypeId","Customer","setValidators","required","pattern","updateValueAndValidity","statusId","TableName","Draft","clearAllValidations","Published","modeChangeApiORmanualValidators","FuelSurchargeTable","group","ProductId","PeriodId","AreaId","FuelSurchargeIndexId","Notes","TableTypes","Customers","Carriers","SourceRegions","WeekDay","Weeks","Months","SourceMonths","Annualy","SourceAnnualy","ApiEffectiveDate","TerminalsAndBulkPlants","FuelSurchargeProducts","FuelSurchargePeriods","FuelSurchargeAreas","APILatestIndexPrice","ApiAdjustIndexPriceDate","ManualLatestIndexPrice","ManualEffectiveDate","StatusId","StartDate","EndDate","PriceRangeStartValue","PriceRangeEndValue","PriceRangeInterval","FuelSurchargeStartPercentage","SurchargeInterval","GeneratedSurchargeTable","validator","RangeValidator","event","selectedPeriod","length","toLowerCase","item","weekday","startOf","getCarriers","getSupplierCustomers","requiredControls","notRequiredControls","forEach","ctrl","clearValidators","onCarriersOrCustomersChange","selectedArea","selectedProduct","selectedAreaCode","FuelSurchargeAreaList","filter","x","selectedPeriodCode","FuelSurchargePeriodList","getFuelIndexPrice","gst","fst","clear","modeChangePublishORdraftValidators","markFormGroupTouched","valid","getGenerateSurchargeTable","res","formGroup","Object","values","control","markAsTouched","clearAllControlValue","fuelSurchageStatus","Save","AllowTableName","changeToViewTab","TableTypeList","FuelSurchargeProductList","unsubscribe","carriers","CarrierList","CustomerList","tableType","customerIds","carrierIds","selectedCustomers","map","selectedCarriers","sourceRegionInput","TableType","CustomerId","CarrierId","SourceRegionList","sort","a","b","selectedSourceRegions","getTerminalsAndBulkPlants","join","ids","getFuelSurchargePeriod","periodId","productType","fetchDate","areaId","getEIAIndexPrice","getNRCIndexPrice","otherArray","current","other","fuelSurchargeTableId","sorceRegionIds","detectChanges","getFuelSurchargeTableUrl","fsIndex","fsModel","toUpperCase","customers","getSupplierCustomersUrl","sourceRegions","tableTypes","getTableTypesUrl","terminalAndBulkPlans","getTerminalsAndBulkPlantsUrl","result","Carrier","Edit","_fs","weeks","months","annualy","IdInComparer","onGenerateSurchargeTable","givenDate","dayIndex","today","getDay","setDate","getDate","selectedSourceMonth","selectedSourceAnnualy","effectiveDate","WEEKLY","selectedWeeks","Same_Week","Week_Later_1","Week_Later_2","Week_Later_3","nextDate","Sun","Mon","Tue","Wed","Thu","Fri","Sat","MONTHLY","selectedMonths","Month_Later_1","Month_Later_2","Month_Later_3","ANNUALY","selectedYear","Year_Later_1","Year_Later_2","Year_Later_3","find","c","sourceMonths","sourceAnnualy","createFuelSurcharge","response","ServiceResponse","StatusCode","message","msgsuccess","msgerror","StatusMessage","onSelectedTabChanged","onSubmit","onTableTypeSelect","onTableTypeDeSelect","setStartDate","setEndDate","onCancel","selector","templateUrl","styleUrls","fg","start","end","range","ViewFuelSurchargePricingdetailsComponent","FuelSurchargePricingList","fuelSurchargeIndexId","getSurchargeTableNew","ViewFuelSurchargeComponent","router","dtOptions","dtTrigger","SinlgeselectSettingsById","FuelSurchargeList","minDate","maxDate","popoverTitle","popoverMessage","cancelClicked","confirmClicked","CounrtyId","getData","MultiselectSettingsById","viewFuelSurchargeForm","initializeFuelSurchargeDatatableGrid","rerender_destroy","getFuelSurchargeGridDetails","fromDate","isArchived","fuelSurchageComponent","getFuelSurchargePricingDetails","historicalPriceComponent","getHistoricalPriceDetails","archiveFuelSurchargeTable","filterGrid","$","DataTable","destroy","clearForm","reset","input","selectedTableTypes","selectedTerminalAndBulkPlants","IsArchived","tableTypeIds","TableTypeIds","CustomerIds","CarrierIds","sourceRegionIds","SourceRegionIds","selectedTerminalIds","terminalIds","TerminalIds","selectedBulkPlants","bulkPlantIds","BulkPlantIds","datatableElement","dtInstance","then","$event","fsurcharId","mode","operation","exportColumns","columns","dom","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","lengthMenu","ViewHistoricalPriceComponent","PeriodList","SelectedPeriod","getPeriod","getHistoricalPrice","HistoricalPrice","HistoricalPriceDetailList","HistoricalPriceDetails","SelectedFuelSurchargeIndexId","route","path","component","FuelsurchargeModule","forChild","declarations","imports","MasterComponent","_viewType","setItem","FuelSurchargeTableModel","assign","FuelSurchargeIndexViewModel","FuelSurchargeInputModel","FuelSurchargeGridModel","FuelSurchargePricingModel","HistoricalPriceModel","HistoricalPriceDetailsModel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,QAAMA,WAAW,GAAG;AAChBC,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,wBAAgB;AAAlB,OAAhB;AADO,KAApB;;QAOaC,a;;;;;AAkCT,6BAAoBC,UAApB,EAA4C;AAAA;;AAAA;;AACxC;AADgB,cAAAA,UAAA,GAAAA,UAAA;AAhCZ,cAAAC,SAAA,GAAY,gBAAZ;AACA,cAAAC,SAAA,GAAY,gBAAZ;AACA,cAAAC,SAAA,GAAY,oBAAZ;AACA,cAAAC,aAAA,GAAgB,oBAAhB;AACA,cAAAC,mBAAA,GAAsB,0BAAtB;AACA,cAAAC,qBAAA,GAAwB,4BAAxB;AACA,cAAAC,qBAAA,GAAwB,4BAAxB;AACA,cAAAC,qBAAA,GAAwB,gCAAxB;AACA,cAAAC,UAAA,GAAa,iBAAb;AACA,cAAAC,aAAA,GAAgB,oBAAhB;AACA,cAAAC,iBAAA,GAAoB,wBAApB;AACA,cAAAC,cAAA,GAAiB,qBAAjB;AACA,cAAAC,QAAA,GAAW,0CAAX;AACA,cAAAC,gBAAA,GAAmB,wCAAnB;AACA,cAAAC,8BAAA,GAAiC,2CAAjC;AACA,cAAAC,iBAAA,GAAoB,gDAApB;AACA,cAAAC,mBAAA,GAAsB,0BAAtB;AACA,cAAAC,mBAAA,GAAsB,oCAAtB;AACA,cAAAC,oBAAA,GAAuB,2BAAvB;AACA,cAAAC,oBAAA,GAAuB,2BAAvB;AACA,cAAAC,uBAAA,GAA0B,8BAA1B;AACA,cAAAC,uBAAA,GAA0B,+BAA1B;AACD,cAAAC,cAAA,GAAiB,qBAAjB;AACC,cAAAC,qBAAA,GAAwB,kDAAxB;AACA,cAAAC,oBAAA,GAAuB,oCAAvB;AACA,cAAAC,8BAAA,GAAiC,gEAAjC;AACA,cAAAC,0BAAA,GAA6B,uCAA7B;AACA,cAAAC,iBAAA,GAAoB,qCAApB;AACA,cAAAC,iBAAA,GAAoB,4BAApB;AACA,cAAAC,gBAAA,GAAmB,mCAAnB;AAKJ,cAAKC,gBAAL,GAAwB,IAAI,oDAAJ,CAAoB,KAApB,CAAxB;AAFwC;AAG3C;;;;eAED,mBAAO;AACH,iBAAO,KAAK/B,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKvB,UAAzC,EACFwB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,SAAjC,EAA4C,EAA5C,CAAX,CADH,CAAP;AAEH;;;eAED,sBAAU;AACN,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKtB,aAAzC,EACFuB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,YAAjC,EAA+C,EAA/C,CAAX,CADH,CAAP;AAEH;;;eACD,0BAAiBC,SAAjB,EAA0B;AACtB,iBAAO,KAAKnC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKd,mBAAL,GAA2BiB,SAA/D,EACFF,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,YAAjC,EAA+C,EAA/C,CAAX,CADH,CAAP;AAEH;;;eACD,4BAAgB;AACZ,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKf,mBAAzC,EACFgB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,kBAAjC,EAAqD,EAArD,CAAX,CADH,CAAP;AAEH;;;eACD,2BAAkBE,QAAlB,EAAkC;AAC9B,iBAAO,KAAKpC,UAAL,CAAgBgC,GAAhB,CAA6C,KAAKhB,iBAAL,GAAyBoB,QAAtE,EACFH,IADE,CACG,kEAAW,KAAKC,WAAL,CAA0C,qBAA1C,EAAiE,EAAjE,CAAX,CADH,CAAP;AAEH;;;eAED,0BAAc;AACV,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKrB,iBAAzC,EACFsB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,gBAAjC,EAAmD,EAAnD,CAAX,CADH,CAAP;AAEH;;;eAED,uBAAW;AACP,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKpB,cAAzC,EACFqB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,aAAjC,EAAgD,EAAhD,CAAX,CADH,CAAP;AAEH;;;eAED,sBAAU;AACN,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAiC,KAAK5B,aAAtC,EACF6B,IADE,CACG,kEAAW,KAAKC,WAAL,CAA8B,YAA9B,EAA4C,IAA5C,CAAX,CADH,CAAP;AAEH;;;eAED,sBAAaG,MAAb,EAA2B;AACvB,iBAAO,KAAKrC,UAAL,CAAgBsC,IAAhB,CAA6B,KAAKrC,SAAlC,EAA6CoC,MAA7C,EAAqDxC,WAArD,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAyB,cAAzB,EAAyCG,MAAzC,CAAX,CADH,CAAP;AAEH;;;eAED,sBAAaA,MAAb,EAA2B;AACvB,iBAAO,KAAKrC,UAAL,CAAgBsC,IAAhB,CAA6B,KAAKpC,SAAlC,EAA6CmC,MAA7C,EAAqDxC,WAArD,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAyB,cAAzB,EAAyCG,MAAzC,CAAX,CADH,CAAP;AAEH;;;eAED,4BAAgB;AACZ,iBAAO,KAAKrC,UAAL,CAAgBgC,GAAhB,CAAuC,KAAK3B,mBAA5C,EACF4B,IADE,CACG,kEAAW,KAAKC,WAAL,CAAoC,kBAApC,EAAwD,IAAxD,CAAX,CADH,CAAP;AAEH;;;eAED,4BAAmBG,MAAnB,EAAuC;AACnC,iBAAO,KAAKrC,UAAL,CAAgBsC,IAAhB,CAAmC,KAAKhC,qBAAxC,EAA+D+B,MAA/D,EAAuExC,WAAvE,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAA+B,oBAA/B,EAAqDG,MAArD,CAAX,CADH,CAAP;AAEH;;;eAED,iCAAwBE,IAAxB,EAAsCC,EAAtC,EAAgD;AAC5C,iBAAO,KAAKxC,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKL,0BAAL,GAAkCY,IAAlC,GAAyC,MAAzC,GAAkDC,EAA3E,EACFP,IADE,CACG,kEAAW,KAAKC,WAAL,CAAoC,yBAApC,EAA+D,IAA/D,CAAX,CADH,CAAP;AAEH;;;eAED,4BAAmBG,MAAnB,EAAuC;AACnC,iBAAO,KAAKrC,UAAL,CAAgBsC,IAAhB,CAAmC,KAAK/B,qBAAxC,EAA+D8B,MAA/D,EAAuExC,WAAvE,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAA+B,oBAA/B,EAAqDG,MAArD,CAAX,CADH,CAAP;AAEH;;;eAED,sBAAaG,EAAb,EAAuB;AACnB,iBAAO,KAAKxC,UAAL,CAAgBsC,IAAhB,CAA0B,KAAKnC,SAAL,GAAiBqC,EAA3C,EAA+CA,EAA/C,EACFP,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,cAAtB,EAAsCM,EAAtC,CAAX,CADH,CAAP;AAEH;;;eAED,4BAAmBA,EAAnB,EAA6B;AACzB,iBAAO,KAAKxC,UAAL,CAAgBsC,IAAhB,CAA0B,KAAK9B,qBAAL,GAA6BgC,EAAvD,EAA2DA,EAA3D,EACFP,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,oBAAtB,EAA4CM,EAA5C,CAAX,CADH,CAAP;AAEH;;;eAED,mBAAUC,SAAV,EAA2B;AACvB,iBAAO,KAAKzC,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKnB,QAAL,GAAgB4B,SAApD,EACFR,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,WAAjC,EAA8C,EAA9C,CAAX,CADH,CAAP;AAEH,S,CAED;;;;eACA,2BAAkBQ,SAAlB,EAAkCC,YAAlC,EAAmD;AAC/C,iBAAO,KAAK3C,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKlB,gBAAL,GAAwB4B,SAAxB,GAAoC,gBAApC,GAAuDC,YAAhF,EACFV,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2C,EAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,8BAAqBE,QAArB,EAAoCO,YAApC,EAAqD;AACjD,iBAAO,KAAK3C,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKjB,8BAAL,GAAsCqB,QAAtC,GAAiD,gBAAjD,GAAoEO,YAA7F,EACFV,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,sBAAtB,EAA8C,EAA9C,CAAX,CADH,CAAP;AAEH;;;eAED,2BAAkBE,QAAlB,EAAoCQ,OAApC,EAAmD;AAC/C,iBAAO,KAAK5C,UAAL,CAAgBgC,GAAhB,CAA+C,KAAKR,qBAAL,GAA6BY,QAA7B,GAAwC,WAAxC,GAAsDQ,OAArG,EACFX,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2C,EAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,2BAAkBW,KAAlB,EAA4B;AACxB,iBAAO,KAAK7C,UAAL,CAAgBsC,IAAhB,CAA0B,KAAKnB,oBAA/B,EAAqD0B,KAArD,EAA4DhD,WAA5D,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2CW,KAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,2BAAkBA,KAAlB,EAA4B;AACxB,iBAAO,KAAK7C,UAAL,CAAgBsC,IAAhB,CAA0B,KAAKlB,oBAA/B,EAAqDyB,KAArD,EAA4DhD,WAA5D,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2CW,KAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,8BAAqBC,IAArB,EAAgCC,IAAhC,EAAyC;AACrC,cAAIC,SAAS,GAAG;AAAEH,iBAAK,EAAEC,IAAT;AAAeG,wBAAY,EAAEF;AAA7B,WAAhB;AACA,iBAAO,KAAK/C,UAAL,CAAgBsC,IAAhB,CAA0B,KAAKjB,uBAA/B,EAAwD2B,SAAxD,EAAmEnD,WAAnE,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2Cc,SAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,8BAAqBF,IAArB,EAAgCC,IAAhC,EAAyC;AACrC,cAAIC,SAAS,GAAG;AAAEE,2CAA+B,EAAEJ,IAAnC;AAAyCG,wBAAY,EAAEF;AAAvD,WAAhB;AACA,iBAAO,KAAK/C,UAAL,CAAgBsC,IAAhB,CAA0B,KAAKhB,uBAA/B,EAAwD0B,SAAxD,EAAmEnD,WAAnE,EACFoC,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,sBAAtB,EAA8Cc,SAA9C,CAAX,CADH,CAAP;AAEH;;;eAED,uBAAW;AACP,iBAAO,KAAKhD,UAAL,CAAgBgC,GAAhB,CAAoC,KAAKT,cAAzC,EACFU,IADE,CACG,kEAAW,KAAKC,WAAL,CAAiC,aAAjC,EAAgD,EAAhD,CAAX,CADH,CAAP;AAEH;;;eACD,6BAAiB;AACb,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKP,oBAA9B,EACFQ,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,mBAAtB,EAA2C,IAA3C,CAAX,CADH,CAAP;AAEH;;;eAED,qCAA4BE,QAA5B,EAA4C;AACxC,iBAAO,KAAKpC,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKN,8BAAL,GAAsCU,QAA/D,EACFH,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,6BAAtB,EAAqD,IAArD,CAAX,CADH,CAAP;AAEH;;;eAED,0BAAc;AACV,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKJ,iBAA9B,EACFK,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,gBAAtB,EAAwC,EAAxC,CAAX,CADH,CAAP;AAEH;;;eACD,2BAAe;AACX,iBAAO,KAAKlC,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKH,iBAA9B,EACFI,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,iBAAtB,EAAwC,EAAxC,CAAX,CADH,CAAP;AAEH;;;eAED,uBAAciB,UAAd,EAA+BC,WAA/B,EAAkD;AAC9C,iBAAO,KAAKpD,UAAL,CAAgBgC,GAAhB,CAAyB,KAAKF,gBAAL,GAAwBqB,UAAxB,GAAqC,eAArC,GAAuDC,WAAhF,EACFnB,IADE,CACG,kEAAW,KAAKC,WAAL,CAAsB,eAAtB,EAAuC,IAAvC,CAAX,CADH,CAAP;AAEH;;;;MAzL8B,sE;;;uBAAtBnC,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFV;;;;;sEAEHA,a,EAAa;cAHzB,wDAGyB;eAHd;AACRsD,oBAAU,EAAE;AADJ,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdlB;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAiC;;AAAU;;AAChH;;;;;;AAYoB;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAmBD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAkBD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAiBL;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAmBT;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AA2BL;;;;;;AAAyC,uFAAqB,OAArB,EAAqB,CAArB,EAAqB,SAArB,EAAqB,oBAArB;;;;;;;;AACzC;;AAAuB;AAAA;;AAAA;;AAAA,wCAAwB,CAAxB;AAAyB,SAAzB;;AAAyD;;AAAU;;;;;;AAclF;;AAAwD;;AAAC;;;;;;AAQrD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAST;;AAAwD;;AAAC;;;;;;AAUrD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAST;;AAAwD;;AAAC;;;;;;AAQrD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;;;AA8Bb;;AAEO;AAAA;;AAAA;;AAAA;AAAA;;AAFP;;;;;;AAC2C,yFAAuB,SAAvB,EAAuB,mBAAvB,EAAuB,SAAvB,EAAuB,oBAAvB,EAAuB,MAAvB,EAAuB,QAAvB,EAAuB,kBAAvB,EAAuB,KAAvB;;;;;;AAMvC;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAKT;;;;;;AAGyB,gGAA8B,UAA9B,EAA8B,gCAA9B,EAA8B,MAA9B,EAA8B,uBAA9B;;;;;;AAIrB;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAKT;;;;;;AAGyB,mGAAiC,UAAjC,EAAiC,gCAAjC,EAAiC,MAAjC,EAAiC,yBAAjC;;;;;;AAIrB;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAgDG;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAzCrB;;AAEI;;AAAuB;;AAAc;;AAErC;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACA;;AAAoD;;AAAG;;AAC3D;;AACA;;AACI;;AACI;;AAMA;;AAKJ;;AACJ;;AACJ;;;;;;AAVqC;;AAAA,+FAA6B,UAA7B,EAA6B,gCAA7B,EAA6B,MAA7B,EAA6B,gBAA7B;;AAGpB;;AAAA;;;;;;AAoBD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAZrB;;AAEI;;AAAuB;;AAAc;;AACrC;;AACI;;AACI;;AAMA;;AAMJ;;AACJ;;AACJ;;;;;;AAXqC;;AAAA,gGAA8B,UAA9B,EAA8B,gCAA9B,EAA8B,MAA9B,EAA8B,iBAA9B;;AAGpB;;AAAA;;;;;;AAsBD;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAZrB;;AAEI;;AAAuB;;AAAc;;AACrC;;AACI;;AACI;;AAMA;;AAMJ;;AACJ;;AACJ;;;;;;AAXqC;;AAAA,mGAAiC,UAAjC,EAAiC,gCAAjC,EAAiC,MAAjC,EAAiC,mBAAjC;;AAGpB;;AAAA;;;;;;;;AArMzB;;AACI;;AACI;;AACI;;AACI;;AAAmC;;AAAoD;;AACvF;;AACA;;AAMA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAkD;;AACzD;;AACA;;AAGyB;AAAA;;AAAA;;AAAA;AAAA;;AAGzB;;AAEA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAA8C;;AACrD;;AACA;;AAMA;;AAKJ;;AACJ;;AACJ;;AACA;;AAEI;;AACI;;AAAO;;AAAM;;AACb;;AACI;;AACI;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAgE;;AAAwB;;AAC/F;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAO;;AAAwB;;AAE/B;;AAMA;;AAMA;;AAMA;;AAMA;;AAMA;;AAOJ;;AACA;;AAgDA;;AAqBA;;AAqBJ;;AACJ;;;;;;AA5MmD;;AAAA;;AACR;;AAAA;;AAIF;;AAAA,sGAAoC,UAApC,EAAoC,+BAApC,EAAoC,MAApC,EAAoC,+BAApC;;AAGpB;;AAAA;;AASE;;AAAA;;AACoB;;AAAA;;AAKF;;AAAA,qGAAmC,UAAnC,EAAmC,+BAAnC,EAAmC,MAAnC,EAAmC,8BAAnC;;AAIpB;;AAAA;;AASE;;AAAA;;AACoB;;AAAA;;AAIF;;AAAA,+FAA6B,UAA7B,EAA6B,+BAA7B,EAA6B,MAA7B,EAA6B,4BAA7B;;AAGpB;;AAAA;;AAuBG;;AAAA;;AAQL;;AAAA;;AAMF;;AAAA;;AAMoB;;AAAA;;AAMpB;;AAAA;;AAMoB;;AAAA;;AAMpB;;AAAA;;AAQa;;AAAA;;AAgDA;;AAAA;;AAqBA;;AAAA;;;;;;AA+BN;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAwBT;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;;;AAnCzB;;AACI;;AACI;;AACI;;AAAO;;AAAM;;AACb;;AACI;;AACI;;AACA;;AAQJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAkC;;AACzC;;AAIO;AAAA;;AAAA;;AAAA;AAAA;;AAJP;;AAMA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAK;;AACZ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAzCyB;;AAAA;;AAaD;;AAAA;;AAWY;;AAAA,yFAAuB,SAAvB,EAAuB,mBAAvB,EAAuB,SAAvB,EAAuB,mBAAvB;;AAGf;;AAAA;;;;;;AA+BL;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AA4BL;;AACI;;AACJ;;;;;;AAEI;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAIJ;;;;;;AAPS;;AAAA;;AAGA;;AAAA;;;;;;AAkBT;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAIJ;;;;;;AAPS;;AAAA;;AAGA;;AAAA;;;;;;AAWT;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAsBD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAWL;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAarB;;AACI;;AACJ;;;;;;AAcQ;;AACI;;AACI;;AACI;;AAAiC;;AAA2D;;AAC5F;;AACI;;AACI;;AAA8B;;AAAoC;;AAClE;;AACI;;AAA+B;;AAAC;;AACpC;;AACJ;;AACJ;;AACR;;AAXA;;AAYJ;;;;;;AAV6C;;AAAA;;AAGK;;AAAA;;;;;;AAd1D;;AACI;;AACI;;AACI;;AACI;;AAA4C;;AAAa;;AACzD;;AAAgB;;AAAgB;;AACpC;;AACJ;;AACA;;AAcJ;;AACJ;;;;;;AAfsB;;AAAA;;;;;;AA0B1C;;AACI;;AACI;;AACA;;AAAuB;;AAAO;;AAClC;;AACJ;;;;;;;;;;;;;;;;QCriBSC,4B;AA0DT,4CAAoBC,EAApB,EAA6CC,oBAA7C,EACYC,aADZ,EACkDC,IADlD,EAC4EC,cAD5E,EACmHC,GADnH,EAC0I;AAAA;;AADtH,aAAAL,EAAA,GAAAA,EAAA;AAAyB,aAAAC,oBAAA,GAAAA,oBAAA;AACjC,aAAAC,aAAA,GAAAA,aAAA;AAAsC,aAAAC,IAAA,GAAAA,IAAA;AAA0B,aAAAC,cAAA,GAAAA,cAAA;AAAuC,aAAAC,GAAA,GAAAA,GAAA;AAxD5G,aAAAC,SAAA,GAA0B,IAAI,4CAAJ,EAA1B,CAwDmI,CAvD1I;;AAEO,aAAAC,wBAAA,GAA2B,EAA3B;AAEA,aAAAC,0BAAA,GAA6B,EAA7B;AAEA,aAAAC,SAAA,GAAqB,KAArB;AAGA,aAAAC,iBAAA,GAA4B,CAAC,CAA7B;AAMA,aAAAC,yBAAA,GAA+C,EAA/C;AAMA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,sBAAA,GAAiC,KAAjC;AAEA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,eAAA,GAAkB,KAAlB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AAEA,aAAAC,yBAAA,GAA4B,KAA5B;AACA,aAAAC,WAAA,GAAc,KAAd;AAGA,aAAAC,QAAA,GAAW,CAAX;AAIA,aAAAC,oBAAA,GAAgC,KAAhC,CAgBmI,CAd1I;;AACO,aAAAC,YAAA,GAAe,IAAIC,IAAJ,EAAf;AACA,aAAAC,YAAA,GAAe,IAAID,IAAJ,EAAf;AACA,aAAAE,SAAA,GAAY,IAAIF,IAAJ,EAAZ;AACA,aAAAG,WAAA,GAAc,IAAIH,IAAJ,EAAd;AACA,aAAAI,oBAAA,GAAuB,+CAAvB;AACA,aAAAC,8BAAA,GAAoD,EAApD;AASN;;;;eAED,oBAAW;AAAA;;AACP;AACA,eAAKC,gBAAL,GAAwBC,MAAM,CAACC,oBAAD,CAA9B;AACA,eAAKC,wBAAL;AAEA,eAAK3B,wBAAL,GAAgC;AAC5B4B,2BAAe,EAAE,IADW;AAE5BC,oCAAwB,EAAE,IAFE;AAG5BC,mBAAO,EAAE,IAHmB;AAI5BC,qBAAS,EAAE,MAJiB;AAK5BC,0BAAc,EAAE,KALY;AAM5BC,yBAAa,EAAE,YANa;AAO5BC,2BAAe,EAAE,cAPW;AAQ5BC,0BAAc,EAAE,CARY;AAS5BC,6BAAiB,EAAE;AATS,WAAhC;AAWA,eAAKC,uBAAL,GAA+B;AAC3BT,2BAAe,EAAE,KADU;AAE3BE,mBAAO,EAAE,IAFkB;AAG3BC,qBAAS,EAAE,MAHgB;AAI3BE,yBAAa,EAAE,YAJY;AAK3BC,2BAAe,EAAE,cALU;AAM3BC,0BAAc,EAAE,CANW;AAO3BC,6BAAiB,EAAE;AAPQ,WAA/B;AAUA,eAAKnC,0BAAL,GAAkC;AAC9B2B,2BAAe,EAAE,KADa;AAE9BC,oCAAwB,EAAE,IAFI;AAG9BS,gBAAI,EAAE,sCAHwB;AAI9BL,yBAAa,EAAE,YAJe;AAK9BC,2BAAe,EAAE,cALa;AAM9BK,iCAAqB,EAAE,QANO;AAO9BC,sBAAU,EAAE,IAPkB;AAQ9BC,oBAAQ,EAAE,MARoB;AAS9BC,8BAAkB,EAAE,IATU;AAU9BC,0BAAc,EAAE,CAVc;AAW9BC,mBAAO,EAAE;AAXqB,WAAlC;AAcA,eAAKC,MAAL,GAAc,KAAKC,UAAL,EAAd;AACA,eAAKC,aAAL;AACA,eAAKF,MAAL,CAAYG,QAAZ,CAAqB,YAArB,EAAmCC,UAAnC,CAA8C,CAAC;AAAEC,cAAE,EAAE,2DAAUC,MAAhB;AAAwBC,gBAAI,EAAE;AAA9B,WAAD,CAA9C,EA1CO,CA0CmF;;AAC1F,eAAK7C,gBAAL,GAAwB,IAAxB;AACA,eAAK8C,gBAAL,CAAsB,2DAAUF,MAAV,CAAiBG,QAAjB,EAAtB;AAEA,cAAIC,EAAE,GAAG,mCAAM,CAAC,IAAIrC,IAAJ,EAAD,CAAN,CAAmBsC,MAAnB,EAAT;AACA,eAAKrC,YAAL,CAAkBsC,WAAlB,CAA8B,KAAKtC,YAAL,CAAkBuC,WAAlB,KAAkC,EAAhE;AACA,eAAKrC,WAAL,CAAiBoC,WAAjB,CAA6B,KAAKpC,WAAL,CAAiBqC,WAAjB,KAAiC,EAA9D;AACA,eAAKb,MAAL,CAAYG,QAAZ,CAAqBW,cAArB,CAAoCC,QAApC,CAA6C,mCAAM,CAACL,EAAD,CAAN,CAAWM,MAAX,CAAkB,YAAlB,CAA7C,EAjDO,CAkDP;AACA;;AACA,eAAKC,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,uBAAhB,CAAD,EAA2C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,CAA3C,EAAoF,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,oBAAhB,CAApF,EAA2H,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,CAA3H,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,CAAD,EAA4C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,qBAAhB,CAA5C,CADJ;AAGA,eAAKwB,oBAAL,CAA0BqE,yBAA1B,CAAoDC,SAApD,CAA8D,UAAAC,CAAC,EAAI;AAC/D,gBAAIA,CAAJ,EAAO;AACH,kBAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAhB;AACA,oBAAI,CAACI,eAAL,GAAuBH,SAAS,CAACI,UAAjC;AACA,oBAAI,CAACC,iBAAL,GAAyBL,SAAS,CAACM,IAAnC;AACH;AACJ,WAND,EAvDO,CA+DP;;AACA,cAAI9F,EAAE,GAAG+F,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAT;;AACA,cAAIhG,EAAE,IAAI,CAACA,EAAD,GAAM,CAAhB,EAAmB;AACf,iBAAK2F,eAAL,GAAuB5C,MAAM,CAAC/C,EAAD,CAA7B;AACA,iBAAK6F,iBAAL,GAAyB,MAAzB;AACAE,wBAAY,CAACE,UAAb,CAAwB,oBAAxB;AACH;;AAGD,cAAIC,QAAQ,GAAsB,EAAlC;AACA,cAAIC,SAAS,GAAsB,EAAnC;AACA,cAAIC,eAAe,GAAsB,EAAzC;AACA,cAAIC,WAAW,GAAsB,EAArC;AACA,cAAIC,iBAAiB,GAAsB,EAA3C;;AAEA,eAAK,IAAIC,OAAT,IAAoB,yDAApB,EAA8B;AAC1BL,oBAAQ,CAACM,IAAT,CAAc;AAAEhC,gBAAE,EAAE+B,OAAN;AAAe7B,kBAAI,EAAE,0DAAS6B,OAAT,CAArB;AAAwCE,kBAAI,EAAE;AAA9C,aAAd;AACH;;AACD,eAAKP,QAAL,GAAgBA,QAAhB;AACA,eAAK/B,MAAL,CAAYG,QAAZ,CAAqB,OAArB,EAA8BY,QAA9B,CAAuC,KAAKgB,QAAL,CAAcQ,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAvC;;AAEA,eAAK,IAAIH,QAAT,IAAoB,0DAApB,EAA+B;AAE3BJ,qBAAS,CAACK,IAAV,CAAe;AAAEhC,gBAAE,EAAE+B,QAAN;AAAe7B,kBAAI,EAAE,2DAAU6B,QAAV,CAArB;AAAyCE,kBAAI,EAAE;AAA/C,aAAf;AACH;;AAED,eAAKN,SAAL,GAAiBA,SAAjB;AACA,eAAKhC,MAAL,CAAYG,QAAZ,CAAqB,QAArB,EAA+BY,QAA/B,CAAwC,KAAKiB,SAAL,CAAeO,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAxC;AACA,eAAKzE,eAAL,GAAuB,IAAvB;;AAEA,eAAK,IAAI0E,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAG,CAAC,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,gBAAIC,CAAC,GAAG,IAAIpE,IAAJ,GAAWqE,QAAX,CAAoB,IAAIrE,IAAJ,GAAWsE,QAAX,KAAwBH,CAA5C,EAA+C,CAA/C,CAAR;AACAP,2BAAe,CAACI,IAAhB,CAAqB;AAAEhC,gBAAE,EAAE,mCAAM,CAACoC,CAAD,CAAN,CAAUzB,MAAV,EAAN;AAA0BT,kBAAI,EAAE,mCAAM,CAACkC,CAAD,CAAN,CAAUzB,MAAV,CAAiB,WAAjB,CAAhC;AAA+DsB,kBAAI,EAAE;AAArE,aAArB;AACH;;AAED,eAAKM,eAAL,GAAuBX,eAAvB;AAEA,eAAKjC,MAAL,CAAYG,QAAZ,CAAqB,cAArB,EAAqCY,QAArC,CAA8C,KAAK6B,eAAL,CAAqBL,KAArB,CAA2B,CAA3B,EAA8B,CAA9B,CAA9C;;AAEA,eAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAG,CAAC,CAArB,EAAwBA,EAAC,EAAzB,EAA6B;AACzB,gBAAIK,CAAC,GAAG,IAAIxE,IAAJ,GAAWuC,WAAX,CAAuB,IAAIvC,IAAJ,GAAWwC,WAAX,KAA2B2B,EAAlD,EAAqD,CAArD,CAAR;AACAL,6BAAiB,CAACE,IAAlB,CAAuB;AAAEhC,gBAAE,EAAE,mCAAM,CAACwC,CAAD,CAAN,CAAU7B,MAAV,EAAN;AAA0BT,kBAAI,EAAE,mCAAM,CAACsC,CAAD,CAAN,CAAU7B,MAAV,CAAiB,MAAjB,CAAhC;AAA0DsB,kBAAI,EAAE;AAAhE,aAAvB;AACH;;AAED,eAAKQ,iBAAL,GAAyBX,iBAAzB;AACA,eAAKnC,MAAL,CAAYG,QAAZ,CAAqB,eAArB,EAAsCY,QAAtC,CAA+C,KAAK+B,iBAAL,CAAuBP,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAA/C;;AAEA,eAAK,IAAIH,SAAT,IAAoB,4DAApB,EAAiC;AAE7BF,uBAAW,CAACG,IAAZ,CAAiB;AAAEhC,gBAAE,EAAE+B,SAAN;AAAe7B,kBAAI,EAAE,6DAAY6B,SAAZ,CAArB;AAA2CE,kBAAI,EAAE;AAAjD,aAAjB;AACH;;AAED,eAAKJ,WAAL,GAAmBA,WAAnB;AACA,eAAKlC,MAAL,CAAYG,QAAZ,CAAqB,SAArB,EAAgCY,QAAhC,CAAyC,KAAKmB,WAAL,CAAiBK,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAzC;AAGA,eAAKvC,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC0H,YAAxC,CAAqDzH,IAArD,CAA0D,6EAA1D,EACK6F,SADL,CACe,gBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAIA,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,EAA2C0H,YAA3C,CAAwDzH,IAAxD,CAA6D,6EAA7D,EACK6F,SADL,CACe,iBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAIA,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,EAA2B0H,YAA3B,CAAwCzH,IAAxC,CAA6C,6EAA7C,EACK6F,SADL,CACe,iBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAII,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,OAAhB,EAAyB0H,YAAzB,CAAsCzH,IAAtC,CAA2C,6EAA3C,EACC6F,SADD,CACW,iBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHD;AAIJ,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,EAA2B0H,YAA3B,CAAwCzH,IAAxC,CAA6C,6EAA7C,EACK6F,SADL,CACe,iBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAIA,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC0H,YAAjC,CAA8CzH,IAA9C,CAAmD,6EAAnD,EACK6F,SADL,CACe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAIA,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,QAAhB,EAA0B0H,YAA1B,CAAuCzH,IAAvC,CAA4C,6EAA5C,EACK6F,SADL,CACe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHL;AAII,eAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,EAAgC0H,YAAhC,CAA6CzH,IAA7C,CAAkD,6EAAlD,EACC6F,SADD,CACW,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC0F,gBAAL;AAC1E,WAHD;AAKJ,6DACI,KAAKlD,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC0H,YADrC,EAGKzH,IAHL,CAGU,iEAAU,IAAV,CAHV,EAG2B,iEAH3B,EAIK6F,SAJL,CAIe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC2F,qBAAL;AAC1E,WANL;AAQA,6DACI,KAAKnD,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,EAA4B0H,YADhC,EAGKzH,IAHL,CAGU,iEAAU,IAAV,CAHV,EAG2B,iEAH3B,EAIK6F,SAJL,CAIe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC4F,gBAAL,CAAsBJ,IAAtB,EAA4BC,IAA5B;AAC1E,WANL;AAQA,6DACI,KAAKjD,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B0H,YADjC,EAGKzH,IAHL,CAGU,iEAAU,IAAV,CAHV,EAG2B,iEAH3B,EAIK6F,SAJL,CAIe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC6F,iBAAL,CAAuBL,IAAvB,EAA6BC,IAA7B;AAC1E,WANL;AAQA,6DACI,KAAKjD,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC0H,YADrC,EAGKzH,IAHL,CAGU,iEAAU,IAAV,CAHV,EAG2B,iEAH3B,EAIK6F,SAJL,CAIe,kBAA8B;AAAA;AAAA,gBAA5B6B,IAA4B;AAAA,gBAAtBC,IAAsB;;AACrC,gBAAI3B,IAAI,CAACD,SAAL,CAAe2B,IAAf,KAAwB1B,IAAI,CAACD,SAAL,CAAe4B,IAAf,CAAxB,IAAgD,MAAI,CAACzF,YAAzD,EAAuE,MAAI,CAAC8F,kBAAL,CAAwBN,IAAxB,EAA8BC,IAA9B;AAC1E,WANL;;AAQA,cAAI,KAAK3F,iBAAL,IAA0B,CAA9B,EAAiC;AAC7B,iBAAKiG,cAAL,CAAoB,KAAKjG,iBAAzB;AACH;AACJ;;;eAED,2BAAkB;AACd,cAAI,KAAKkE,eAAL,IAAwB,IAAxB,IAAgC,KAAKA,eAAL,IAAwBgC,SAA5D,EAAuE;AACnE;AACA,iBAAKhG,YAAL,GAAoB,KAApB;AACA,iBAAKiG,qBAAL,CAA2B,KAAKjC,eAAhC,EAHmE,CAGjB;AACrD;AACJ;;;eAED,oCAA2B;AAAA;;AACvB,eAAKxE,cAAL,CAAoB8B,wBAApB,CAA6C,KAAKH,gBAAlD,EAAoEwC,SAApE,CAA8E,UAAAhF,IAAI,EAAI;AAClF,kBAAI,CAACmB,iBAAL,GAAyBsB,MAAM,CAACzC,IAAI,CAACuH,gBAAN,CAA/B;;AACA,kBAAI,CAACC,wBAAL,CAA8B,MAAI,CAACrG,iBAAnC;;AACA,kBAAI,CAACsG,uBAAL,CAA6B,MAAI,CAACtG,iBAAlC;;AACA,kBAAI,CAACuG,oBAAL,CAA0B,MAAI,CAACvG,iBAA/B;AACH,WALD;AAMH;;;eAEO,yCAAgCwG,cAAhC,EAAyD;AAC7D,cAAI,CAACA,cAAL,EAAqB;AACjB,gBAAIC,iBAAiB,GAAG,KAAK/D,MAAL,CAAYG,QAAZ,CAAqB,YAArB,EAAmC6D,KAA3D;AACA,iBAAKC,OAAL,CAAaC,WAAb,GAA2BH,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAAhD;;AACA,gBAAI0D,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAArB,IAA2B,2DAAUC,MAAzC,EAAiD;AAC7C,mBAAKW,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAAD,CAA1B,EAA2D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,EAA+B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAA/B,CAA3D,EAD6C,CAC2E;AAC3H,aAFD,MAEO,IAAI0I,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAArB,IAA2B,2DAAU8D,QAAzC,EAAmD;AACtD,mBAAKlD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,CAA1B,EAA0D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAAD,CAA1D;AACH,aAFM,MAEA;AACH,mBAAK4F,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAAD,CAA1B,EAAyD,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,CAAzD;AACH;;AAED,iBAAK4F,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,CAAD,EAAmC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAAnC,EAAkE,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,uBAAhB,CAAlE,EAA4G,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,CAA5G,EAAqJ,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,oBAAhB,CAArJ,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,CAAD,EAA4C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,qBAAhB,CAA5C,CADJ;;AAGA,gBAAI,KAAKyC,eAAT,EAA0B;AACtB,mBAAKmD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,CAAD,CAA1B,EAAwE,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,CAAD,EAAmC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,CAAnC,CAAxE;AACH,aAFD,MAEO,IAAI,KAAKwC,gBAAT,EAA2B;AAC9B,mBAAKoD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,CAAD,CAA1B,EAA6D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,CAAD,EAA6C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,CAA7C,CAA7D;AACH,aAFM,MAEA,IAAI,KAAK0C,gBAAT,EAA2B;AAC9B,mBAAKkD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,CAAD,CAA1B,EAA8D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,CAAD,EAA6C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,CAA7C,CAA9D;AACH;AACJ;;AACD,cAAIyI,cAAJ,EAAoB;AAChB,iBAAK9D,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,EAA0C+I,aAA1C,CAAwD,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAxD;AACA,iBAAKuB,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,EAA0CkJ,sBAA1C;AACA,iBAAKtD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,qBAAhB,CAAD,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,uBAAhB,CAAD,EAA2C,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,CAA3C,EAAoF,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,oBAAhB,CAApF,EAA2H,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,yBAAhB,CAA3H,EAAuK,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,CAAvK,EAAwM,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,CAAxM,CADJ;AAEH;AACJ;;;eAEO,4CAAmCmJ,QAAnC,EAAqD;AACzD,eAAKvD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAYG,QAAZ,CAAqBsE,SAAtB,CAA1B,EAA4D,IAA5D,EADyD,CACU;;AAEnE,cAAID,QAAQ,IAAI,oEAAmBE,KAAnC,EAA0C;AACtC,iBAAKC,mBAAL,CAAyB,KAAK3E,MAA9B,EADsC,CACC;;AACvC,iBAAKiB,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAYG,QAAZ,CAAqBsE,SAAtB,CAA1B,EAA4D,IAA5D,EAFsC,CAE6B;AACtE,WAHD,MAIK,IAAID,QAAQ,IAAI,oEAAmBI,SAAnC,EAA8C;AAC/C,iBAAKC,+BAAL,CAAqC,KAAK7E,MAAL,CAAY3E,GAAZ,CAAgB,gBAAhB,EAAkC2I,KAAvE;AACA,iBAAKhE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD+I,aAAzD,CAAuE,CAAC,0DAAWC,QAAZ,CAAvE;AACA,iBAAKrE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyDkJ,sBAAzD;AACA,iBAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,sBAA5C,EAAoE+I,aAApE,CAAkF,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAlF;AACA,iBAAKuB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,sBAA5C,EAAoEkJ,sBAApE;AACA,iBAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE+I,aAAlE,CAAgF,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAhF;AACA,iBAAKuB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkEkJ,sBAAlE;AACA,iBAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE+I,aAAlE,CAAgF,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAhF;AACA,iBAAKuB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkEkJ,sBAAlE;AACA,iBAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,8BAA5C,EAA4E+I,aAA5E,CAA0F,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAA1F;AACA,iBAAKuB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,8BAA5C,EAA4EkJ,sBAA5E;AACA,iBAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,mBAA5C,EAAiE+I,aAAjE,CAA+E,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAA/E;AACA,iBAAKuB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,mBAA5C,EAAiEkJ,sBAAjE;AACH;AACJ;;;eAEM,wBAAeP,KAAf,EAAsB;AACzB,eAAK9F,QAAL,GAAgB8F,KAAhB;AACA,eAAKhE,MAAL,CAAY3E,GAAZ,CAAgB,gBAAhB,EAAkC0F,QAAlC,CAA2CiD,KAAK,IAAI,CAAT,GAAa,KAAb,GAAqB,IAAhE;AACA,eAAKa,+BAAL,CAAqCb,KAAK,IAAI,CAAT,GAAa,KAAb,GAAqB,IAA1D;AACH;;;eAEO,sBAAa;AACjB,cAAI,KAAKC,OAAL,IAAgBT,SAAhB,IAA6B,KAAKS,OAAL,IAAgB,IAAjD,EAAuD;AACnD,iBAAKA,OAAL,GAAe,IAAI,4GAAJ,EAAf;AACH;;AAED,iBAAO,KAAKrH,EAAL,CAAQmI,KAAR,CAAc;AACjBjB,0BAAc,EAAE,IAAI,0DAAJ,CAAgB,KAAKG,OAAL,CAAaH,cAA7B,CADC;AAEjBkB,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKf,OAAL,CAAae,SAA7B,CAFM;AAGjBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,KAAKhB,OAAL,CAAagB,QAA7B,CAHO;AAIjBf,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,KAAKD,OAAL,CAAaC,WAA7B,CAJI;AAKjBgB,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAKjB,OAAL,CAAaiB,MAA7B,CALS;AAMjBC,gCAAoB,EAAE,IAAI,0DAAJ,CAAgB,KAAKlB,OAAL,CAAakB,oBAA7B,CANL;AAOjBV,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKR,OAAL,CAAaQ,SAA7B,EAAwC,0DAAWJ,QAAnD,CAPM;AAQjBe,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,KAAKnB,OAAL,CAAamB,KAA7B,CARU;AASjBtE,0BAAc,EAAE,IAAI,0DAAJ,CAAgB,KAAKmD,OAAL,CAAanD,cAA7B,CATC;AAUjBuE,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,KAAKpB,OAAL,CAAaoB,UAA7B,EAAyC,CAAC,0DAAWhB,QAAZ,CAAzC,CAVK;AAWjBiB,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKrB,OAAL,CAAaqB,SAA7B,CAXM;AAYjBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,KAAKtB,OAAL,CAAasB,QAA7B,CAZO;AAajBC,yBAAa,EAAE,IAAI,0DAAJ,CAAgB,KAAKvB,OAAL,CAAauB,aAA7B,EAA4C,CAAC,0DAAWnB,QAAZ,CAA5C,CAbE;AAcjBoB,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKxB,OAAL,CAAawB,OAA7B,CAdQ;AAejBC,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,KAAKzB,OAAL,CAAayB,KAA7B,CAfU;AAgBjBC,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAK1B,OAAL,CAAa0B,MAA7B,CAhBS;AAiBjBC,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,KAAK3B,OAAL,CAAa2B,YAA7B,CAjBG;AAkBjBC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAK5B,OAAL,CAAa4B,OAA7B,CAlBQ;AAmBjBC,yBAAa,EAAE,IAAI,0DAAJ,CAAgB,KAAK7B,OAAL,CAAa6B,aAA7B,CAnBE;AAoBjBC,4BAAgB,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CApBD;AAqBjBC,kCAAsB,EAAE,IAAI,0DAAJ,CAAgB,KAAKtH,8BAArB,CArBP;AAsBjBuH,iCAAqB,EAAE,IAAI,0DAAJ,CAAgB,KAAKhC,OAAL,CAAagC,qBAA7B,CAtBN;AAuBjBC,gCAAoB,EAAE,IAAI,0DAAJ,CAAgB,KAAKjC,OAAL,CAAaiC,oBAA7B,CAvBL;AAwBjBC,8BAAkB,EAAE,IAAI,0DAAJ,CAAgB,KAAKlC,OAAL,CAAakC,kBAA7B,CAxBH;AAyBjBC,+BAAmB,EAAE,IAAI,0DAAJ,CAAgB,KAAKnC,OAAL,CAAamC,mBAA7B,CAzBJ;AA0BjBC,mCAAuB,EAAE,IAAI,0DAAJ,CAAgB,KAAKpC,OAAL,CAAaoC,uBAA7B,CA1BR;AA2BjBC,kCAAsB,EAAE,IAAI,0DAAJ,CAAgB,KAAKrC,OAAL,CAAaqC,sBAA7B,CA3BP;AA4BjBC,+BAAmB,EAAE,IAAI,0DAAJ,CAAgB,KAAKtC,OAAL,CAAasC,mBAA7B,CA5BJ;AA6BjBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,KAAKvC,OAAL,CAAauC,QAA7B,CA7BO;AA8BjB1B,8BAAkB,EAAE,IAAI,wDAAJ,CAAc;AAC9B2B,uBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKxC,OAAL,CAAaa,kBAAb,CAAgC2B,SAAhD,EAA2D,CAAC,0DAAWpC,QAAZ,CAA3D,CADmB;AAE9BqC,qBAAO,EAAE,IAAI,0DAAJ,CAAgB,KAAKzC,OAAL,CAAaa,kBAAb,CAAgC4B,OAAhD,CAFqB;AAG9BC,kCAAoB,EAAE,IAAI,0DAAJ,CAAgB,KAAK1C,OAAL,CAAaa,kBAAb,CAAgC6B,oBAAhD,EAAsE,CAAC,0DAAWtC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAtE,CAHQ;AAI9BmI,gCAAkB,EAAE,IAAI,0DAAJ,CAAgB,KAAK3C,OAAL,CAAaa,kBAAb,CAAgC8B,kBAAhD,EAAoE,CAAC,0DAAWvC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAApE,CAJU;AAK9BoI,gCAAkB,EAAE,IAAI,0DAAJ,CAAgB,KAAK5C,OAAL,CAAaa,kBAAb,CAAgC+B,kBAAhD,EAAoE,CAAC,0DAAWxC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAApE,CALU;AAM9BqI,0CAA4B,EAAE,IAAI,0DAAJ,CAAgB,KAAK7C,OAAL,CAAaa,kBAAb,CAAgCgC,4BAAhD,EAA8E,CAAC,0DAAWzC,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAA9E,CANA;AAO9BsI,+BAAiB,EAAE,IAAI,0DAAJ,CAAgB,KAAK9C,OAAL,CAAaa,kBAAb,CAAgCiC,iBAAhD,EAAmE,CAAC,0DAAW1C,QAAZ,EAAsB,0DAAWC,OAAX,CAAmB,KAAK7F,oBAAxB,CAAtB,CAAnE;AAPW,aAAd,CA9BH;AAuCjBuI,mCAAuB,EAAE,IAAI,wDAAJ,CAAc,CACnC,IAAI,0DAAJ,CAAgB,KAAK/C,OAAL,CAAa+C,uBAA7B,CADmC,CAAd;AAvCR,WAAd,EA0CJ;AAAEC,qBAAS,EAAEC;AAAb,WA1CI,CAAP;AA2CH,S,CAED;;;;eACO,oCAA2BC,KAA3B,EAAqC;AACxC,eAAKtJ,gBAAL,GAAwB,KAAxB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA,cAAIoJ,KAAK,IAAE,EAAX,EAAe,KAAKnH,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CtF,QAA7C,CAAsDoG,KAAtD;;AACf,cAAI,KAAKnH,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA7C,IAAsD,EAAtD,IAA4D,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA7C,IAAsD,IAAlH,IAA0H,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,IAAgD7C,SAA9K,EAAyL;AACrL,gBAAI4D,cAAc,GAAG,KAAKpH,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC2I,KAA7D;;AACA,gBAAIoD,cAAc,IAAI,IAAlB,IAA0BA,cAAc,IAAI5D,SAA5C,IAAyD4D,cAAc,CAACC,MAAf,GAAwB,CAArF,EAAwF;AACpF,kBAAID,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAyC,SAASA,WAAT,EAA7C,EAAqE;AACjE,qBAAKxJ,eAAL,GAAuB,IAAvB;AACH,eAFD,MAGK,IAAIsJ,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAwC,UAAUA,WAAV,EAA5C,EAAqE;AACtE,qBAAKzJ,gBAAL,GAAwB,IAAxB;AACH,eAFI,MAIA,IAAIuJ,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAwC,UAAUA,WAAV,EAA5C,EAAqE;AACtE,qBAAKvJ,gBAAL,GAAwB,IAAxB;AACH;;AACD,mBAAKmF,gBAAL;AACH;AACJ;AACJ;;;eAEM,sCAA6BqE,IAA7B,EAAsC;AACzC,eAAK1J,gBAAL,GAAwB,KAAxB;AACA,eAAKC,eAAL,GAAuB,KAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB,CAHyC,CAIzC;AACD;;AACK,cAAIqJ,cAAc,GAAG,KAAKpH,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC2I,KAA7D;;AACA,cAAIoD,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAwC,SAASA,WAAT,EAA5C,EAAoE;AAChE,iBAAKxJ,eAAL,GAAuB,IAAvB;AACA,iBAAKkC,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CtF,QAA7C,CAAsD,mCAAM,GAAGyG,OAAT,CAAiB,CAAjB,EAAoBxG,MAApB,CAA2B,YAA3B,CAAtD;AACH;;AACD,cAAIoG,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAwC,UAAUA,WAAV,EAA5C,EAAqE;AACjE,iBAAKzJ,gBAAL,GAAwB,IAAxB;AACA,iBAAKmC,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CtF,QAA7C,CAAsD,mCAAM,GAAG0G,OAAT,CAAiB,OAAjB,EAA0BzG,MAA1B,CAAiC,YAAjC,CAAtD;AACH;;AACD,cAAIoG,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB+G,WAAvB,MAAwC,UAAUA,WAAV,EAA5C,EAAqE;AACjE,iBAAKvJ,gBAAL,GAAwB,IAAxB;AACA,iBAAKiC,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CtF,QAA7C,CAAsD,mCAAM,GAAG0G,OAAT,CAAiB,MAAjB,EAAyBzG,MAAzB,CAAgC,YAAhC,CAAtD;AACH,WAlBoC,CAmBzC;;AACH;;;eAGM,gCAAuBmG,KAAvB,EAAiC;AACpC,cAAIA,KAAK,IAAI,EAAb,EAAiB;AACb,iBAAKnH,MAAL,CAAYG,QAAZ,CAAqBoG,mBAArB,CAAyCxF,QAAzC,CAAkDoG,KAAlD;AACA,iBAAKnH,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD0F,QAAzD,CAAkE,mCAAM,CAACoG,KAAD,CAAN,CAAcnG,MAAd,CAAqB,YAArB,CAAlE;AACH;AACJ;;;eAEM,sBAAamG,KAAb,EAAuB;AAC1B,eAAKnH,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD0F,QAAzD,CAAkEoG,KAAlE;AACA,cAAI,KAAKnH,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAAzD,IAAkE,IAAlE,IAA0E,KAAKhE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAAzD,IAAkER,SAA5I,IAAyJ,KAAKxD,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAAzD,IAAkE,EAA/N,EACI,KAAKzF,SAAL,GAAiB,KAAKyB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAA1E;AACP;;;eAEM,oBAAWmD,KAAX,EAAqB;AACxB,eAAKnH,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD0F,QAAvD,CAAgEoG,KAAhE;AACH,S,CACD;;;;eAEO,6BAAoBI,IAApB,EAA6B;AAChC,cAAIxD,iBAAiB,GAAG,KAAK/D,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,EAA8B2I,KAAtD;;AACA,cAAID,iBAAiB,CAACsD,MAAlB,IAA4B,CAAhC,EAAmC;AAC/B,iBAAK3J,gBAAL,GAAwB,IAAxB;AACA,iBAAKsC,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,EAA4B+E,UAA5B,CAAuC,EAAvC;AACA,iBAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B+E,UAA7B,CAAwC,EAAxC;AACA,iBAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,EAA0C+E,UAA1C,CAAqD,EAArD;AACA,iBAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC+E,UAAjC,CAA4C,EAA5C;AACA,iBAAKxC,sBAAL,GAA8B,KAA9B;AACA,iBAAKqD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAAD,CAA1B,EAA2D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,EACvD,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CADuD,CAA3D;AAEH;AACJ;;;eAEM,2BAAkBkM,IAAlB,EAA2B;AAC9B,eAAK7J,gBAAL,GAAwB,KAAxB;AACA,eAAKD,kBAAL,GAA0B,KAA1B;AACA,eAAKE,iBAAL,GAAyB,KAAzB;AACA,eAAKqC,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,EAA4B+E,UAA5B,CAAuC,EAAvC;AACA,eAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B+E,UAA7B,CAAwC,EAAxC;;AAEA,kBAAQmH,IAAI,CAAClH,EAAb;AACI,iBAAK,CAAL;AAAQ;AACJ,mBAAK3C,gBAAL,GAAwB,IAAxB;AACA,mBAAKuD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAAD,CAA1B,EAA2D,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,EAA+B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAA/B,CAA3D,EAFJ,CAE6H;;AACzH;;AACJ,iBAAK,CAAL;AAAQ;AACJ,mBAAKqM,WAAL;AACA,mBAAKC,oBAAL;AACA,mBAAKlK,kBAAL,GAA0B,IAA1B;AACA,mBAAKwD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,EAA+B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAA/B,CAA1B,EAAyF,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAAD,CAAzF;AAEA;;AACJ,iBAAK,CAAL;AAAQ;AACJ,mBAAKqM,WAAL;AACA,mBAAKC,oBAAL;AACA,mBAAKhK,iBAAL,GAAyB,IAAzB;AACA,mBAAKsD,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,CAAD,EAA8B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,CAA9B,CAA1B,EAAwF,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,CAAD,CAAxF;AACA;AAjBR;;AAmBA,eAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC+E,UAAjC,CAA4C,EAA5C;AACA,eAAKI,gBAAL,CAAsB+G,IAAI,CAAClH,EAA3B;AACH;;;eAEO,8BAAqBuH,gBAArB,EAA0DC,mBAA1D,EAAkG;AACtG,cAAID,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIpE,SAAhD,IAA6DoE,gBAAgB,CAACP,MAAjB,GAA0B,CAA3F,EAA8F;AAE1FO,4BAAgB,CAACE,OAAjB,CAAyB,UAAAC,IAAI,EAAI;AAC7BA,kBAAI,CAAC3D,aAAL,CAAmB,CAAC,0DAAWC,QAAZ,CAAnB;AACA0D,kBAAI,CAACxD,sBAAL;AACH,aAHD;AAIH;;AACD,cAAIsD,mBAAmB,IAAI,IAAvB,IAA+BA,mBAAmB,IAAIrE,SAAtD,IAAmEqE,mBAAmB,CAACR,MAApB,GAA6B,CAApG,EAAuG;AAEnGQ,+BAAmB,CAACC,OAApB,CAA4B,UAAAC,IAAI,EAAI;AAChCA,kBAAI,CAACC,eAAL;AACAD,kBAAI,CAACxD,sBAAL;AACH,aAHD;AAIH;AACJ;;;eAEM,0BAAiBvB,IAAjB,EAA4BC,IAA5B,EAAqC;AACxC,eAAKgF,2BAAL,CAAiCjF,IAAjC,EAAuCC,IAAvC;AACH;;;eAEM,2BAAkBD,IAAlB,EAA6BC,IAA7B,EAAsC;AACzC,eAAKgF,2BAAL,CAAiCjF,IAAjC,EAAuCC,IAAvC;AACH;;;eAEM,qCAA4BD,IAA5B,EAAuCC,IAAvC,EAAgD;AACnD,cAAI,KAAKvF,gBAAT,EAA2B;AAC3B,eAAKsC,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC+E,UAAjC,CAA4C,EAA5C;AACA,cAAI2D,iBAAiB,GAAG,KAAK/D,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,EAA8B2I,KAAtD;AACA,eAAKxD,gBAAL,CAAsBuD,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAArB,CAAwBI,QAAxB,EAAtB;AACH;;;eAEM,iCAAwB;AAC3B,cAAIyH,YAAY,GAAG,KAAKlI,MAAL,CAAY3E,GAAZ,CAAgB,oBAAhB,EAAsC2I,KAAzD;AACA,cAAImE,eAAe,GAAG,KAAKnI,MAAL,CAAY3E,GAAZ,CAAgB,uBAAhB,EAAyC2I,KAA/D;AACA,cAAIoD,cAAc,GAAG,KAAKpH,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC2I,KAA7D,CAH2B,CAI3B;AACA;;AACA,cAAIkE,YAAY,IAAI1E,SAAhB,IAA6B2E,eAAe,IAAI3E,SAAhD,IAA6D4D,cAAc,IAAI5D,SAA/E,IAA4F0E,YAAY,IAAI1E,SAA5G,IAAyH2E,eAAe,CAACd,MAAhB,IAA0B,CAAnJ,IAAwJD,cAAc,CAACC,MAAf,IAAyB,CAAjL,IAAsLa,YAAY,CAACb,MAAb,IAAuB,CAAjN,EAAoN;AAChN,gBAAIe,gBAAgB,GAAG,KAAKC,qBAAL,CAA2BC,MAA3B,CAAkC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAClI,EAAF,IAAQ6H,YAAY,CAAC,CAAD,CAAZ,CAAgB7H,EAA5B;AAAA,aAAnC,EAAmE,CAAnE,EAAsEiC,IAA7F;AACA,gBAAIkG,kBAAkB,GAAG,KAAKC,uBAAL,CAA6BH,MAA7B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAClI,EAAF,IAAQ+G,cAAc,CAAC,CAAD,CAAd,CAAkB/G,EAA9B;AAAA,aAArC,EAAuE,CAAvE,EAA0EiC,IAAnG;AACA,iBAAKoG,iBAAL,CAAuBF,kBAAvB,EAA2CL,eAAe,CAAC,CAAD,CAAf,CAAmB7F,IAA9D,EAAoE,mCAAM,GAAGtB,MAAT,CAAgB,YAAhB,CAApE,EAAmGoH,gBAAnG;AACH;AACJ;;;eAEM,oCAAwB;AAAA;;AAC3B,eAAKnK,WAAL,GAAmB,KAAnB;AACA,eAAKD,yBAAL,GAAiC,KAAjC;AACA,cAAI2K,GAAG,GAAG,KAAK3I,MAAL,CAAYG,QAAZ,CAAqB,yBAArB,CAAV;AACA,cAAIyI,GAAG,GAAG,KAAK5I,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,CAAV;AACAwI,aAAG,CAACE,KAAJ;AACA,eAAKC,kCAAL,CAAwC,oEAAmBlE,SAA3D;AACA,eAAKC,+BAAL,CAAqC,KAAK7E,MAAL,CAAY3E,GAAZ,CAAgB,gBAAhB,EAAkC2I,KAAvE;AACA,eAAK+E,oBAAL,CAA0B,KAAK/I,MAA/B;AAEA,cAAI,CAAC4I,GAAG,CAACI,KAAT,EAAgB;AAChB,eAAK3L,SAAL,GAAiB,IAAjB;AACA,eAAKR,oBAAL,CAA0BoM,yBAA1B,CAAoDL,GAAG,CAACvN,GAAJ,CAAQ,sBAAR,EAAgC2I,KAApF,EACI4E,GAAG,CAACvN,GAAJ,CAAQ,oBAAR,EAA8B2I,KADlC,EACyC4E,GAAG,CAACvN,GAAJ,CAAQ,oBAAR,EAA8B2I,KADvE,EAEI4E,GAAG,CAACvN,GAAJ,CAAQ,mBAAR,EAA6B2I,KAFjC,EAEwC4E,GAAG,CAACvN,GAAJ,CAAQ,8BAAR,EAAwC2I,KAFhF,EAEuF7C,SAFvF,CAEiG,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAChG,6BAAOA,IAAP;;AADgG;AACrGuE,wBADqG;AAEzGA,wBAAE,CAACoH,OAAH,CAAW,UAAAoB,GAAG,EAAI;AACdP,2BAAG,CAACtG,IAAJ,CAAS,IAAI,0DAAJ,CAAgB;AACrByE,sDAA4B,EAAEoC,GAAG,CAACpC,4BADb;AAErBH,8CAAoB,EAAEuC,GAAG,CAACvC,oBAFL;AAGrBC,4CAAkB,EAAEsC,GAAG,CAACtC;AAHH,yBAAhB,CAAT;AAKH,uBAND;AAQA,2BAAK1J,SAAL,CAAe+F,IAAf;AACA,2BAAK5F,SAAL,GAAiB,KAAjB;;AAXyG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAFjG;AAgBA,eAAKW,yBAAL,GAAiC,IAAjC,CA5B2B,CA6B3B;AACH;;;eAEO,8BAAqBmL,SAArB,EAA2C;AAAA;;AACzCC,gBAAO,CAACC,MAAR,CAAeF,SAAS,CAAChJ,QAAzB,EAAmC2H,OAAnC,CAA2C,UAAAwB,OAAO,EAAI;AAExDA,mBAAO,CAACC,aAAR;;AACA,gBAAID,OAAO,CAACnJ,QAAZ,EAAsB;AAClB,oBAAI,CAAC4I,oBAAL,CAA0BO,OAA1B;AACH;AACJ,WANK;AAOT;;;eAEO,8BAAqBH,SAArB,EAA2C;AAAA;;AACzCC,gBAAO,CAACC,MAAR,CAAeF,SAAS,CAAChJ,QAAzB,EAAmC2H,OAAnC,CAA2C,UAAAwB,OAAO,EAAI;AAExDA,mBAAO,CAAClJ,UAAR,CAAmB,EAAnB;AAAuB;;AACvB,gBAAIkJ,OAAO,CAACnJ,QAAZ,EAAsB;AAClB,oBAAI,CAACqJ,oBAAL,CAA0BF,OAA1B;AACH;AACJ,WANK;AAOT;;;eAEO,6BAAoBH,SAApB,EAA0C;AAAA;;AACxCC,gBAAO,CAACC,MAAR,CAAeF,SAAS,CAAChJ,QAAzB,EAAmC2H,OAAnC,CAA2C,UAAAwB,OAAO,EAAI;AACxDA,mBAAO,CAACtB,eAAR;AACAsB,mBAAO,CAAC/E,sBAAR;AACA+E,mBAAO,CAACC,aAAR;;AACA,gBAAID,OAAO,CAACnJ,QAAZ,EAAsB;AAClB,oBAAI,CAACwE,mBAAL,CAAyB2E,OAAzB;AACH;AACJ,WAPK;AAQT;;;eAEM,kBAASG,kBAAT,EAAmC;AACtC,eAAKxL,WAAL,GAAmB,KAAnB;AACA,eAAK+B,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,EAA4B0F,QAA5B,CAAqC0I,kBAArC;AACA,eAAK5E,+BAAL,CAAqC,KAAK7E,MAAL,CAAY3E,GAAZ,CAAgB,gBAAhB,EAAkC2I,KAAvE;AACA,eAAK8E,kCAAL,CAAwCW,kBAAxC;AACA,eAAKV,oBAAL,CAA0B,KAAK/I,MAA/B;;AACA,cAAI,CAAC,KAAKhC,yBAAN,IAAmCyL,kBAAkB,IAAI,CAA7D,EAAgE;AAC5D,iBAAKxL,WAAL,GAAmB,IAAnB;AACA;AACH;;AAED,cAAI,KAAK+B,MAAL,CAAYgJ,KAAhB,EAAuB;AACnB,iBAAKU,IAAL,CAAUD,kBAAV;AACH;AACJ;;;eACM,qBAAY;AAEf,eAAKzJ,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B+E,UAA7B,CAAwC,EAAxC;AACA,eAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC+E,UAAjC,CAA4C,EAA5C;AACA,eAAKJ,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,EAA0C+E,UAA1C,CAAqD,EAArD;AAEA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD+E,UAAvD,CAAkE,EAAlE;AACA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,sBAA5C,EAAoE+E,UAApE,CAA+E,EAA/E;AACA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE+E,UAAlE,CAA6E,EAA7E;AACA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE+E,UAAlE,CAA6E,EAA7E;AACA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,8BAA5C,EAA4E+E,UAA5E,CAAuF,EAAvF;AACA,eAAKJ,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,mBAA5C,EAAiE+E,UAAjE,CAA4E,EAA5E;AAEA,eAAKuJ,cAAL,GAAsB,IAAtB;AACA,eAAKxL,oBAAL,GAA4B,KAA5B;AACA,eAAKH,yBAAL,GAAiC,KAAjC;AAEA,eAAKgC,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B2M,eAA7B;AACA,eAAKhI,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6BkJ,sBAA7B;AACA,eAAKvE,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC2M,eAAjC;AACA,eAAKhI,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiCkJ,sBAAjC;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD2M,eAAvD;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuDkJ,sBAAvD;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,sBAA5C,EAAoE2M,eAApE;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,sBAA5C,EAAoEkJ,sBAApE;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE2M,eAAlE;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkEkJ,sBAAlE;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkE2M,eAAlE;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,oBAA5C,EAAkEkJ,sBAAlE;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,8BAA5C,EAA4E2M,eAA5E;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,8BAA5C,EAA4EkJ,sBAA5E;AACA,eAAKvE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,mBAA5C,EAAiE2M,eAAjE;AACA,eAAKhI,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,mBAA5C,EAAiEkJ,sBAAjE;AAEH;;;eAEM,oBAAW;AACd,cAAI,KAAK7C,iBAAL,IAAwB,IAA5B,EAAkC;AAC9B,iBAAKkI,eAAL;AACH,WAFD,MAGK;AACD,iBAAKJ,oBAAL,CAA0B,KAAKxJ,MAA/B;AACA,iBAAKA,MAAL,CAAYG,QAAZ,CAAqB,YAArB,EAAmCY,QAAnC,CAA4C,KAAK8I,aAAL,CAAmBvB,MAAnB,CAA0B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAClI,EAAF,IAAQ,2DAAUC,MAAtB;AAAA,aAA3B,CAA5C,EAFC,CAEqG;;AACtG,iBAAKN,MAAL,CAAYG,QAAZ,CAAqB,uBAArB,EAA8CY,QAA9C,CAAuD,KAAK+I,wBAAL,CAA8BvH,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAvD;AACA,iBAAKvC,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2CY,QAA3C,CAAoD,KAAKsH,qBAAL,CAA2B9F,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,CAApD;AAEA,iBAAKvE,yBAAL,GAAiC,KAAjC;AACA,iBAAKP,kBAAL,GAA0B,KAA1B;AACA,iBAAKC,gBAAL,GAAwB,IAAxB;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AACA,iBAAKC,sBAAL,GAA8B,KAA9B;AAEA,iBAAKG,gBAAL,GAAwB,KAAxB;AACA,iBAAKF,gBAAL,GAAwB,KAAxB;AACA,iBAAKmC,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,EAAgC0F,QAAhC,CAAyC,IAAzC;AACA,iBAAKf,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC0F,QAAjC,CAA0C,IAA1C;AAEA,iBAAKf,MAAL,CAAYG,QAAZ,CAAqB,SAArB,EAAgCY,QAAhC,CAAyC,KAAzC;AACA,iBAAKf,MAAL,CAAYG,QAAZ,CAAqB,OAArB,EAA8BY,QAA9B,CAAuC,KAAKgB,QAAL,CAAcQ,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAvC;AACA,iBAAKvC,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CtF,QAA7C,CAAsD,mCAAM,GAAGyG,OAAT,CAAiB,CAAjB,EAAoBxG,MAApB,CAA2B,YAA3B,CAAtD;AACA,iBAAKhB,MAAL,CAAYG,QAAZ,CAAqB,sBAArB,EAA6CY,QAA7C,CAAsD,KAAK0H,uBAAL,CAA6BlG,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC,CAAtD;AACA,iBAAKzE,eAAL,GAAuB,IAAvB;AACA,iBAAKkC,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,WAA/C,EAA4D0F,QAA5D,CAAqE,mCAAM,GAAGyG,OAAT,CAAiB,CAAjB,EAAoBxG,MAApB,CAA2B,YAA3B,CAArE;AAEA,iBAAKuC,cAAL,CAAoB,CAApB;AACA,iBAAKtF,WAAL,GAAmB,KAAnB;AACH;AACJ;;;eAEM,uBAAW;AACd,eAAKf,SAAL,CAAe6M,WAAf;AACH,S,CAED;;;;eACQ,uBAAW;AAAA;;AACf,eAAK1M,SAAL,GAAiB,IAAjB;AACA,eAAKP,aAAL,CAAmB4K,WAAnB,GACKvG,SADL,CACe,UAAO6I,QAAP;AAAA,mBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB,6BAAMA,QAAN;;AADwB;AAC3C,2BAAKC,WADsC;AAE3C,2BAAK/M,SAAL,CAAe+F,IAAf;AACA,2BAAK5F,SAAL,GAAiB,KAAjB;;AAH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApC;AAAA,WADf;AAMH;;;eAEO,yBAAa;AAAA;;AACjB,eAAKR,oBAAL,CAA0BqD,aAA1B,GAA0CiB,SAA1C,CAAoD,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C,6BAAOA,IAAP;;AAD2C;AAChE,2BAAK0N,aAD2D;AAEhE,2BAAK3M,SAAL,CAAe+F,IAAf;;AAFgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAApD;AAIH;;;eAEO,gCAAoB;AAAA;;AACxB,eAAK5F,SAAL,GAAiB,IAAjB;AACA,eAAKR,oBAAL,CAA0B8K,oBAA1B,GAAiDxG,SAAjD,CAA2D,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD,6BAAOA,IAAP;;AADmD;AACvE,2BAAK+N,YADkE;AAEvE,2BAAKhN,SAAL,CAAe+F,IAAf;AACA,2BAAK5F,SAAL,GAAiB,KAAjB;;AAHuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAA3D;AAKH,S,CAED;;;;eACQ,0BAAiB8M,SAAjB,EAAkC;AAAA;;AAEtC,cAAIC,WAAW,GAAa,EAA5B;AACA,cAAIC,UAAU,GAAa,EAA3B;AAEA,cAAIC,iBAAiB,GAAG,KAAKtK,MAAL,CAAY3E,GAAZ,CAAgB,WAAhB,EAA6B2I,KAArD;;AACA,cAAIsG,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,IAAI9G,SAAlD,IAA+D8G,iBAAiB,CAACjD,MAAlB,GAA2B,CAA9F,EAAiG;AAC7F+C,uBAAW,GAAGE,iBAAiB,CAACC,GAAlB,CAAsB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAvB,CAAd;AACH;;AAED,cAAImK,gBAAgB,GAAG,KAAKxK,MAAL,CAAY3E,GAAZ,CAAgB,UAAhB,EAA4B2I,KAAnD;;AACA,cAAIwG,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIhH,SAAhD,IAA6DgH,gBAAgB,CAACnD,MAAjB,GAA0B,CAA3F,EAA8F;AAC1FgD,sBAAU,GAAGG,gBAAgB,CAACD,GAAjB,CAAqB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAtB,CAAb;AACH;;AAED,cAAIoK,iBAAiB,GAAG,IAAI,uEAAJ,EAAxB;AACAA,2BAAiB,CAACC,SAAlB,GAA8BP,SAA9B;AACAM,2BAAiB,CAACE,UAAlB,GAA+BP,WAA/B;AACAK,2BAAiB,CAACG,SAAlB,GAA8BP,UAA9B;AACA,eAAKxN,oBAAL,CAA0B2D,gBAA1B,CAA2CiK,iBAA3C,EAA8DtJ,SAA9D,CAAwE,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5D,6BAAOA,IAAP;;AAD4D;AACpF,2BAAK0O,gBAD+E;AAEpF,2BAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,+BAAWD,CAAC,CAACxK,IAAF,GAASyK,CAAC,CAACzK,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAnC;AAAA,uBAA3B;AACA,2BAAKrD,SAAL,CAAe+F,IAAf;;AAHoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAAxE;AAKH;;;eAEO,iCAAqB;AAAA;;AACzB,eAAK5F,SAAL,GAAiB,IAAjB;AACA,cAAI4N,qBAAqB,GAAG,KAAKjL,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC2I,KAA7D;AACA,eAAKhE,MAAL,CAAY3E,GAAZ,CAAgB,wBAAhB,EAA0C+E,UAA1C,CAAqD,EAArD;AACA,eAAKxC,sBAAL,GAA8B,KAA9B;;AACA,cAAIqN,qBAAqB,IAAIzH,SAAzB,IAAsCyH,qBAAqB,IAAI,IAA/D,IAAuEA,qBAAqB,CAAC5D,MAAtB,GAA+B,CAA1G,EAA6G;AACzG,iBAAKzJ,sBAAL,GAA8B,IAA9B;AACA,iBAAKf,oBAAL,CAA0BqO,yBAA1B,CAAoDD,qBAAqB,CAACV,GAAtB,CAA0B,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAA3B,EAAqC8K,IAArC,CAA0C,GAA1C,CAApD,EAAoGhK,SAApG,CAA8G,UAAOhF,IAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzF,+BAAOA,IAAP;;AADyF;AAC1H,6BAAKoB,yBADqH;AAE1H,6BAAKL,SAAL,CAAe+F,IAAf;AACA,6BAAK5F,SAAL,GAAiB,KAAjB;;AAH0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAA9G;AAKH,WAPD,MAOO;AACH,iBAAKA,SAAL,GAAiB,KAAjB;AACH;AACJ;;;eAEM,4BAAmB2F,IAAnB,EAA8BC,IAA9B,EAAyC;AAAA;;AAC5C,cAAID,IAAI,IAAI,IAAR,IAAgBC,IAAI,CAACoE,MAAL,IAAe,CAAnC,EAAsC;AACtC,eAAKhK,SAAL,GAAiB,IAAjB;AACA,eAAK2C,MAAL,CAAYG,QAAZ,CAAqB6F,sBAArB,CAA4C5F,UAA5C,CAAuD,EAAvD;AACA,eAAKxC,sBAAL,GAA8B,KAA9B;AACA,cAAIwN,GAAG,GAAG,EAAV;AAEA,cAAIH,qBAAqB,GAAG,KAAKjL,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC2I,KAA7D;;AACA,cAAIiH,qBAAqB,CAAC5D,MAAtB,GAA+B,CAAnC,EAAsC;AAClC4D,iCAAqB,CAACnD,OAAtB,CAA8B,UAAA1G,CAAC;AAAA,qBAAIgK,GAAG,CAAC/I,IAAJ,CAASjB,CAAC,CAACf,EAAX,CAAJ;AAAA,aAA/B;AACA,iBAAKxD,oBAAL,CAA0BqO,yBAA1B,CAAoDE,GAAG,CAACD,IAAJ,CAAS,GAAT,CAApD,EAAmEhK,SAAnE,CAA6E,UAAOhF,IAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxD,+BAAOA,IAAP;;AADwD;AACzF,6BAAKoB,yBADoF;AAEzF,6BAAKyC,MAAL,CAAYG,QAAZ,CAAqB6F,sBAArB,CAA4CjF,QAA5C,CAAqD,KAAKxD,yBAA1D;AACA,6BAAKK,sBAAL,GAA8B,IAA9B;AACA,6BAAKV,SAAL,CAAe+F,IAAf;;AAJyF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAA7E;AAMH;;AACD,eAAK5F,SAAL,GAAiB,KAAjB;AACH;;;eAEO,kCAAyBvB,SAAzB,EAAuC;AAAA;;AAC3C,eAAKe,oBAAL,CAA0B8G,wBAA1B,CAAmD7H,SAAnD,EAA8DqF,SAA9D,CAAwE,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACpD,6BAAOA,IAAP;;AADoD;AACpF,2BAAK2N,wBAD+E;AAEpF,2BAAK9J,MAAL,CAAYG,QAAZ,CAAqB,uBAArB,EAA8CY,QAA9C,CAAuD,KAAK+I,wBAAL,CAA8BvH,KAA9B,CAAoC,CAApC,EAAuC,CAAvC,CAAvD;AACA,2BAAKrF,SAAL,CAAe+F,IAAf;;AAHoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAAxE;AAKH;;;eAEO,iCAAwBnH,SAAxB,EAAsC;AAAA;;AAC1C,eAAKe,oBAAL,CAA0BwO,sBAA1B,CAAiDvP,SAAjD,EAA4DqF,SAA5D,CAAsE,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD,6BAAOA,IAAP;;AADmD;AAClF,2BAAKsM,uBAD6E;AAElF,2BAAKzI,MAAL,CAAYG,QAAZ,CAAqB,sBAArB,EAA6CY,QAA7C,CAAsD,KAAK0H,uBAAL,CAA6BlG,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC,CAAtD,EAFkF,CAGlF;AACA;;AACA,2BAAKrF,SAAL,CAAe+F,IAAf;;AALkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAAtE;AAOH;;;eAEO,8BAAqBnH,SAArB,EAAmC;AAAA;;AAAS;AAChD,eAAKe,oBAAL,CAA0BgH,oBAA1B,CAA+C/H,SAA/C,EAA0DqF,SAA1D,CAAoE,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD,6BAAOA,IAAP;;AADmD;AAChF,2BAAKkM,qBAD2E;AAEhF,2BAAKrI,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2CY,QAA3C,CAAoD,KAAKsH,qBAAL,CAA2B9F,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,CAApD;AACA,2BAAKrF,SAAL,CAAe+F,IAAf;;AAHgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAApE;AAKH;;;eAEO,2BAAkBqI,QAAlB,EAAiCC,WAAjC,EAAmDC,SAAnD,EAAmEC,MAAnE,EAA8E;AAAA;;AAClF,eAAKpO,SAAL,GAAiB,IAAjB;;AACA,cAAI,KAAKC,iBAAL,IAA0B,CAA9B,EAAiC;AAC7B,iBAAKT,oBAAL,CAA0B6O,gBAA1B,CAA2CJ,QAA3C,EAAqDC,WAArD,EAAkEC,SAAlE,EAA6EC,MAA7E,EAAqFtK,SAArF,CAA+F,UAAOhF,IAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChF,+BAAOA,IAAP;;AADgF;AAC3G,6BAAKiK,mBADsG;AAE3G,6BAAKpG,MAAL,CAAYG,QAAZ,CAAqB,qBAArB,EAA4CC,UAA5C,CAAuD,KAAKgG,mBAA5D;AACA,6BAAKlJ,SAAL,CAAe+F,IAAf;AACA,6BAAK5F,SAAL,GAAiB,KAAjB;;AAJ2G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAA/F;AAMH,WAPD,MAQK;AACD,iBAAKR,oBAAL,CAA0B8O,gBAA1B,CAA2CL,QAA3C,EAAqDC,WAArD,EAAkEC,SAAlE,EAA6ErK,SAA7E,CAAuF,UAAOhF,IAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxE,+BAAOA,IAAP;;AADwE;AACnG,6BAAKiK,mBAD8F;AAEnG,6BAAKpG,MAAL,CAAYG,QAAZ,CAAqB,qBAArB,EAA4CC,UAA5C,CAAuD,KAAKgG,mBAA5D;AACA,6BAAKlJ,SAAL,CAAe+F,IAAf;AACA,6BAAK5F,SAAL,GAAiB,KAAjB;;AAJmG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAAvF;AAOH;AACJ;;;eAED,sBAAauO,UAAb,EAAyB;AACrB,iBAAO,UAAUC,OAAV,EAAmB;AACtB,mBAAOD,UAAU,CAACtD,MAAX,CAAkB,UAAUwD,KAAV,EAAiB;AACtC,qBAAOA,KAAK,CAACzL,EAAN,IAAYwL,OAAO,CAACxL,EAA3B;AACH,aAFM,EAEJgH,MAFI,IAEM,CAFb;AAGH,WAJD;AAKH,S,CAED;;;;eACQ,+BAAsB0E,oBAAtB,EAAkD;AAAA;;AACtD;AACA,cAAIC,cAAc,GAAW,EAA7B;AACA,eAAK3O,SAAL,GAAiB,IAAjB;AACA,eAAKJ,GAAL,CAASgP,aAAT;AACA,eAAKlP,IAAL,CAAU1B,GAAV,CAAc,KAAKwB,oBAAL,CAA0BqP,wBAA1B,GAAqDH,oBAAnE,EAAyFzQ,IAAzF,CACI,2DAAI,UAAA6Q,OAAO,EAAI;AACX,gBAAMC,OAAO,GAAGD,OAAhB;AACA,mBAAOC,OAAP;AACH,WAHD,CADJ,EAKI,gEAAS,UAAAA,OAAO,EAAI;AAChB;AACA,mBAAI,CAACnI,OAAL,GAAemI,OAAf,CAFgB,CAGhB;;AACA,gBAAI,OAAI,CAAC5K,eAAL,IAAwB,IAAxB,IAAgC,OAAI,CAACE,iBAAL,CAAuB2K,WAAvB,MAAwC,MAA5E,EAAoF;AAAE;AAClF,qBAAI,CAACpI,OAAL,CAAakB,oBAAb,GAAoC,IAApC;AACA,qBAAI,CAAClB,OAAL,CAAaQ,SAAb,GAAyB,EAAzB;AACH;;AACD,gBAAM6H,SAAS,GAAG,OAAI,CAACvP,IAAL,CAAU1B,GAAV,CAAc,OAAI,CAACwB,oBAAL,CAA0B0P,uBAAxC,CAAlB;;AACA,gBAAMvC,QAAQ,GAAG,OAAI,CAACjN,IAAL,CAAU1B,GAAV,CAAc,OAAI,CAACyB,aAAL,CAAmBlC,cAAjC,CAAjB;;AAEA,gBAAIwP,WAAW,GAAa,EAA5B;AACA,gBAAIC,UAAU,GAAa,EAA3B;;AACA,gBAAI,OAAI,CAACpG,OAAL,CAAaqB,SAAb,CAAuB+B,MAAvB,GAAgC,CAApC,EAAuC;AACnC+C,yBAAW,GAAG,OAAI,CAACnG,OAAL,CAAaqB,SAAb,CAAuBiF,GAAvB,CAA2B,UAAAnJ,CAAC;AAAA,uBAAIA,CAAC,CAACf,EAAN;AAAA,eAA5B,CAAd;AACH;;AACD,gBAAI,OAAI,CAAC4D,OAAL,CAAasB,QAAb,CAAsB8B,MAAtB,GAA+B,CAAnC,EAAsC;AAClCgD,wBAAU,GAAG,OAAI,CAACpG,OAAL,CAAasB,QAAb,CAAsBgF,GAAtB,CAA0B,UAAAnJ,CAAC;AAAA,uBAAIA,CAAC,CAACf,EAAN;AAAA,eAA3B,CAAb;AACH;;AAED,gBAAIoK,iBAAiB,GAAG,IAAI,uEAAJ,EAAxB;AACAA,6BAAiB,CAACC,SAAlB,GAA8B,OAAI,CAACzG,OAAL,CAAaC,WAAb,CAAyBzD,QAAzB,EAA9B;AACAgK,6BAAiB,CAACE,UAAlB,GAA+BP,WAA/B;AACAK,6BAAiB,CAACG,SAAlB,GAA8BP,UAA9B;;AACA,gBAAMmC,aAAa,GAAG,OAAI,CAACzP,IAAL,CAAUpB,IAAV,CAAe,OAAI,CAACkB,oBAAL,CAA0BnD,mBAAzC,EAA8D+Q,iBAA9D,CAAtB;;AACA,gBAAMgC,UAAU,GAAG,OAAI,CAAC1P,IAAL,CAAU1B,GAAV,CAAc,OAAI,CAACwB,oBAAL,CAA0B6P,gBAAxC,CAAnB;;AACA,gBAAI,OAAI,CAACzI,OAAL,CAAauB,aAAb,IAA8B,IAA9B,IAAsC,OAAI,CAACvB,OAAL,CAAauB,aAAb,IAA8BhC,SAApE,IAAiF,OAAI,CAACS,OAAL,CAAauB,aAAb,CAA2B6B,MAA3B,GAAoC,CAAzH,EAA4H;AACxH2E,4BAAc,GAAG,OAAI,CAAC/H,OAAL,CAAauB,aAAb,CAA2B+E,GAA3B,CAA+B,UAAAnJ,CAAC;AAAA,uBAAIA,CAAC,CAACf,EAAN;AAAA,eAAhC,EAA0C8K,IAA1C,CAA+C,GAA/C,CAAjB;AACA,qBAAI,CAACvN,sBAAL,GAA8B,IAA9B;AACH;;AACD,gBAAM+O,oBAAoB,GAAG,OAAI,CAAC5P,IAAL,CAAU1B,GAAV,CAAc,OAAI,CAACwB,oBAAL,CAA0B+P,4BAA1B,GAAyDZ,cAAvE,CAA7B;;AACA,mBAAO,sDAAS,CAACM,SAAD,EAAYtC,QAAZ,EAAsBwC,aAAtB,EAAqCG,oBAArC,EAA2DF,UAA3D,CAAT,CAAP;AACH,WAhCD,CALJ,EAqCQtL,SArCR,CAqCkB,UAAA0L,MAAM,EAAI;AACpB,mBAAI,CAACxP,SAAL,GAAiB,KAAjB,CADoB,CAEpB;;AACA,mBAAI,CAACK,gBAAL,GAAwB,KAAxB;AACA,mBAAI,CAACD,kBAAL,GAA0B,KAA1B;AACA,mBAAI,CAACE,iBAAL,GAAyB,KAAzB;;AAEA,gBAAI,OAAI,CAACsG,OAAL,CAAaC,WAAb,IAA4B,2DAAU5D,MAA1C,EAAkD;AAC9C,qBAAI,CAAC5C,gBAAL,GAAwB,IAAxB;AACH,aAFD,MAGK,IAAI,OAAI,CAACuG,OAAL,CAAaC,WAAb,IAA4B,2DAAUC,QAA1C,EAAoD;AACrD,qBAAI,CAAC1G,kBAAL,GAA0B,IAA1B;AACH,aAFI,MAGA,IAAI,OAAI,CAACwG,OAAL,CAAaC,WAAb,IAA4B,2DAAU4I,OAA1C,EAAmD;AACpD,qBAAI,CAACnP,iBAAL,GAAyB,IAAzB;AACH;;AAED,gBAAI,OAAI,CAACsG,OAAL,CAAaC,WAAb,IAA4B,2DAAU5D,MAA1C,EAAkD;AAC9C,qBAAI,CAAC4J,YAAL,GAAoB2C,MAAM,CAAC,CAAD,CAA1B;AACA,qBAAI,CAAC5C,WAAL,GAAmB4C,MAAM,CAAC,CAAD,CAAzB;AACH;;AAED,mBAAI,CAAChC,gBAAL,GAAwBgC,MAAM,CAAC,CAAD,CAA9B;;AACA,gBAAI,OAAI,CAAC5I,OAAL,CAAauB,aAAb,IAA8B,IAA9B,IAAsC,OAAI,CAACvB,OAAL,CAAauB,aAAb,IAA8BhC,SAApE,IAAiF,OAAI,CAACS,OAAL,CAAauB,aAAb,CAA2B6B,MAA3B,GAAoC,CAAzH,EAA4H;AACxH,qBAAI,CAAC9J,yBAAL,GAAiCsP,MAAM,CAAC,CAAD,CAAvC;AACH;;AACD,mBAAI,CAAChD,aAAL,GAAqBgD,MAAM,CAAC,CAAD,CAA3B,CA1BoB,CA2BpB;;AACA,mBAAI,CAACE,IAAL,CAAU,OAAI,CAAC9I,OAAf;AAEH,WAnEL;AAoEH,S,CAED;;;;eACQ,cAAK+I,GAAL,EAAuC;AAC3C,cAAI,KAAKhN,MAAT,EAAiB;AACb;AACA,iBAAK3C,SAAL,GAAiB,IAAjB;AACA,iBAAKS,eAAL,GAAuB,KAAvB;AACA,iBAAKC,gBAAL,GAAwB,KAAxB;AACA,iBAAKF,gBAAL,GAAwB,KAAxB;AACA,iBAAKmC,MAAL,CAAYG,QAAZ,CAAqB,WAArB,EAAkCY,QAAlC,CAA2CiM,GAAG,CAAChI,SAA/C;AACA,iBAAKhF,MAAL,CAAYG,QAAZ,CAAqB,UAArB,EAAiCY,QAAjC,CAA0CiM,GAAG,CAAC/H,QAA9C;AACA,iBAAKjF,MAAL,CAAYG,QAAZ,CAAqB,aAArB,EAAoCY,QAApC,CAA6CiM,GAAG,CAAC9I,WAAjD;AACA,iBAAKlE,MAAL,CAAYG,QAAZ,CAAqB,QAArB,EAA+BY,QAA/B,CAAwCiM,GAAG,CAAC9H,MAA5C;AACA,iBAAKlF,MAAL,CAAYG,QAAZ,CAAqB,sBAArB,EAA6CY,QAA7C,CAAsDiM,GAAG,CAAC7H,oBAA1D;AACA,iBAAKnF,MAAL,CAAYG,QAAZ,CAAqB,WAArB,EAAkCY,QAAlC,CAA2CiM,GAAG,CAACvI,SAA/C;AACA,iBAAKzE,MAAL,CAAYG,QAAZ,CAAqB,OAArB,EAA8BY,QAA9B,CAAuCiM,GAAG,CAAC5H,KAA3C;AACA,iBAAKpF,MAAL,CAAYG,QAAZ,CAAqB,gBAArB,EAAuCY,QAAvC,CAAgD,mCAAM,CAACiM,GAAG,CAAClM,cAAL,CAAN,CAA2BE,MAA3B,CAAkC,YAAlC,CAAhD;AACA,iBAAKhB,MAAL,CAAYG,QAAZ,CAAqB,YAArB,EAAmCY,QAAnC,CAA4C,KAAK8I,aAAL,CAAmBvB,MAAnB,CAA0B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAClI,EAAF,IAAQ2M,GAAG,CAAC9I,WAAhB;AAAA,aAA3B,CAA5C;AACA8I,eAAG,CAAClJ,cAAJ,GAAqB,KAAKP,cAAL,CAAoB,GAApB,CAArB,GAAgD,KAAKA,cAAL,CAAoB,GAApB,CAAhD;AACA,gBAAIlC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWyL,GAAG,CAACjH,gBAAf,CAAhB;;AACA,gBAAI,CAACiH,GAAG,CAAClJ,cAAL,IAAuBzC,SAAS,IAAI,IAApC,IAA4CA,SAAS,IAAImC,SAAzD,IAAsEnC,SAAS,IAAI,EAAvF,EAA2F;AACvF,mBAAKhE,SAAL,GAAiB,IAAjB;;AACA,kBAAIgE,SAAS,CAACoE,OAAV,IAAqB,IAArB,IAA6BpE,SAAS,CAACoE,OAAV,IAAqBjC,SAAlD,IAA+DnC,SAAS,CAACoE,OAAV,IAAqB,EAAxF,EAA4F;AACxF,qBAAKzF,MAAL,CAAYG,QAAZ,CAAqB,SAArB,EAAgCY,QAAhC,CAAyCM,SAAS,CAACoE,OAAnD;AACA,qBAAK3H,eAAL,GAAuB,IAAvB;AACH;;AACD,kBAAIuD,SAAS,CAACqE,KAAV,IAAmB,IAAnB,IAA2BrE,SAAS,CAACqE,KAAV,IAAmBlC,SAA9C,IAA2DnC,SAAS,CAACqE,KAAV,IAAmB,EAAlF,EAAsF;AAClF,oBAAIuH,KAAK,GAAuB,EAAhC;AACAA,qBAAK,CAAC5K,IAAN,CAAW;AAAEhC,oBAAE,EAAEiB,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACqE,KAArB,EAA4BrF,EAAlC;AAAsCE,sBAAI,EAAEe,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACqE,KAArB,EAA4BnF,IAAxE;AAA8E+B,sBAAI,EAAE;AAApF,iBAAX;AACA,qBAAKtC,MAAL,CAAYG,QAAZ,CAAqB,OAArB,EAA8BY,QAA9B,CAAuCkM,KAAvC;AACA,qBAAKnP,eAAL,GAAuB,IAAvB;AACH;;AACD,kBAAIuD,SAAS,CAACsE,MAAV,IAAoB,IAApB,IAA4BtE,SAAS,CAACsE,MAAV,IAAoBnC,SAAhD,IAA6DnC,SAAS,CAACsE,MAAV,IAAoB,EAArF,EAAyF;AACrF,oBAAIuH,MAAM,GAAmB,EAA7B;AACAA,sBAAM,CAAC7K,IAAP,CAAY;AAAEhC,oBAAE,EAAEiB,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACsE,MAArB,EAA6BtF,EAAnC;AAAuCE,sBAAI,EAAEe,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACsE,MAArB,EAA6BpF,IAA1E;AAAgF+B,sBAAI,EAAE;AAAtF,iBAAZ;AACA,qBAAKtC,MAAL,CAAYG,QAAZ,CAAqB,QAArB,EAA+BY,QAA/B,CAAwCmM,MAAxC;AACA,qBAAKrP,gBAAL,GAAwB,IAAxB;AACH;;AACD,kBAAIwD,SAAS,CAACwE,OAAV,IAAqB,IAArB,IAA6BxE,SAAS,CAACwE,OAAV,IAAqBrC,SAAlD,IAA+DnC,SAAS,CAACwE,OAAV,IAAqB,EAAxF,EAA4F;AACzF,oBAAIsH,OAAO,GAAmB,EAA9B;AACCA,uBAAO,CAAC9K,IAAR,CAAa;AAAEhC,oBAAE,EAAEiB,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACwE,OAArB,EAA8BxF,EAApC;AAAwCE,sBAAI,EAAEe,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACwE,OAArB,EAA8BtF,IAA5E;AAAkF+B,sBAAI,EAAE;AAAxF,iBAAb;AACA,qBAAKtC,MAAL,CAAYG,QAAZ,CAAqB,SAArB,EAAgCY,QAAhC,CAAyCoM,OAAzC;AACA,qBAAKpP,gBAAL,GAAwB,IAAxB;AACH;AACJ,aAzCY,CA0Cb;;;AACA,iBAAKV,SAAL,GAAiB,IAAjB;;AACA,gBAAI2P,GAAG,CAAC1H,SAAJ,IAAiB,IAAjB,IAAyB,KAAK4E,YAAL,IAAqB1G,SAA9C,IAA2D,KAAK0G,YAAL,IAAqB,IAApF,EAA2F;AACvF,kBAAI,KAAKA,YAAL,CAAkB7C,MAAlB,GAA2B,CAA3B,IAAgC2F,GAAG,CAAC1H,SAAJ,CAAc+B,MAAd,GAAuB,CAA3D,EAA8D,KAAKrH,MAAL,CAAYG,QAAZ,CAAqB,WAArB,EAAkCY,QAAlC,CAA2C,KAAKmJ,YAAL,CAAkB5B,MAAlB,CAAyB,KAAK8E,YAAL,CAAkBJ,GAAG,CAAC1H,SAAtB,CAAzB,CAA3C;AAEjE;;AACD,gBAAI0H,GAAG,CAACzH,QAAJ,IAAgB,IAAhB,IAAwB,KAAK0E,WAAL,IAAoBzG,SAA5C,IAAyD,KAAKyG,WAAL,IAAoB,IAAjF,EAAwF;AACpF,kBAAI,KAAKA,WAAL,CAAiB5C,MAAjB,GAA0B,CAA1B,IAA+B2F,GAAG,CAACzH,QAAJ,CAAa8B,MAAb,GAAsB,CAAzD,EAA4D,KAAKrH,MAAL,CAAYG,QAAZ,CAAqB,UAArB,EAAiCY,QAAjC,CAA0C,KAAKkJ,WAAL,CAAiB3B,MAAjB,CAAwB,KAAK8E,YAAL,CAAkBJ,GAAG,CAACzH,QAAtB,CAAxB,CAA1C;AAE/D;;AACD,gBAAI,KAAKsF,gBAAL,IAAyB,IAAzB,IAAiC,KAAKA,gBAAL,IAAyBrH,SAA1D,IAAuEwJ,GAAG,CAACxH,aAAJ,IAAqB,IAA5F,IAAoGwH,GAAG,CAACxH,aAAJ,IAAqBhC,SAAzH,IAAsIwJ,GAAG,CAACxH,aAAJ,CAAkB6B,MAAlB,GAA2B,CAArK,EAAwK;AACpK,kBAAI,KAAKwD,gBAAL,CAAsBxD,MAAtB,GAA+B,CAA/B,IAAoC2F,GAAG,CAACxH,aAAJ,CAAkB6B,MAAlB,GAA2B,CAAnE,EACI,KAAKrH,MAAL,CAAYG,QAAZ,CAAqB,eAArB,EAAsCY,QAAtC,CAA+C,KAAK8J,gBAAL,CAAsBvC,MAAtB,CAA6B,KAAK8E,YAAL,CAAkBJ,GAAG,CAACxH,aAAtB,CAA7B,CAA/C;AACP;;AACD,gBAAI,KAAKjI,yBAAL,IAAkC,IAAlC,IAA0C,KAAKA,yBAAL,IAAkCiG,SAA5E,IAAyFwJ,GAAG,CAAChH,sBAAJ,IAA8B,IAAvH,IAA+HgH,GAAG,CAAChH,sBAAJ,IAA8BxC,SAA7J,IAA0KwJ,GAAG,CAAChH,sBAAJ,CAA2BqB,MAA3B,GAAoC,CAAlN,EAAqN;AACjN,kBAAI,KAAK9J,yBAAL,CAA+B8J,MAA/B,GAAwC,CAAxC,IAA6C2F,GAAG,CAAChH,sBAAJ,CAA2BqB,MAA3B,GAAoC,CAArF,EAAwF;AACpF,qBAAKrH,MAAL,CAAYG,QAAZ,CAAqB6F,sBAArB,CAA4CjF,QAA5C,CAAqD,KAAKxD,yBAAL,CAA+B+K,MAA/B,CAAsC,KAAK8E,YAAL,CAAkBJ,GAAG,CAAChH,sBAAtB,CAAtC,CAArD;AACH;AACJ;;AACD,gBAAIgH,GAAG,CAAChI,SAAJ,IAAe,IAAf,IAAuB,KAAK8E,wBAAL,IAAiC,IAAxD,IAAgE,KAAKA,wBAAL,IAAiCtG,SAAjG,IAA8G,KAAKsG,wBAAL,CAA8BzC,MAA9B,GAAuC,CAAzJ,EAA4J;AACxJ,mBAAKrH,MAAL,CAAYG,QAAZ,CAAqB,uBAArB,EAA8CY,QAA9C,CAAuD,KAAK+I,wBAAL,CAA8BxB,MAA9B,CAAqC,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAAClI,EAAF,IAAQ2M,GAAG,CAAChI,SAAJ,CAAcvE,QAAd,EAAZ;AAAA,eAAtC,CAAvD;AACH;;AACD,gBAAIuM,GAAG,CAAC/H,QAAJ,IAAc,IAAd,IAAsB,KAAKwD,uBAAL,IAAgC,IAAtD,IAA8D,KAAKA,uBAAL,IAAgCjF,SAA9F,IAA2G,KAAKiF,uBAAL,CAA6BpB,MAA7B,GAAsC,CAArJ,EAAwJ;AACpJ,mBAAKrH,MAAL,CAAYG,QAAZ,CAAqB,sBAArB,EAA6CY,QAA7C,CAAsD,KAAK0H,uBAAL,CAA6BH,MAA7B,CAAoC,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAAClI,EAAF,IAAQ2M,GAAG,CAAC/H,QAAJ,CAAaxE,QAAb,EAAZ;AAAA,eAArC,CAAtD;AACH;;AACD,gBAAIuM,GAAG,CAAC9H,MAAJ,IAAY,IAAZ,IAAoB,KAAKmD,qBAAL,IAA8B,IAAlD,IAA0D,KAAKA,qBAAL,IAA8B7E,SAAxF,IAAqG,KAAK6E,qBAAL,CAA2BhB,MAA3B,GAAoC,CAA7I,EAAgJ;AAC5I,mBAAKrH,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2CY,QAA3C,CAAoD,KAAKsH,qBAAL,CAA2BC,MAA3B,CAAkC,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAAClI,EAAF,IAAQ2M,GAAG,CAAC9H,MAAJ,CAAWzE,QAAX,EAAZ;AAAA,eAAnC,CAApD;AACH;;AACD,iBAAKT,MAAL,CAAYG,QAAZ,CAAqB,qBAArB,EAA4CY,QAA5C,CAAqDiM,GAAG,CAAC5G,mBAAzD;;AACA,gBAAI4G,GAAG,CAAC3G,uBAAJ,IAA+B,IAA/B,IAAuC2G,GAAG,CAAC3G,uBAAJ,IAA+B7C,SAA1E,EAAqF;AACjF,kBAAI,KAAK1F,eAAT,EAA0B;AACtB,qBAAKkC,MAAL,CAAYG,QAAZ,CAAqB,yBAArB,EAAgDY,QAAhD,CAAyD,mCAAM,CAACiM,GAAG,CAAC3G,uBAAL,CAAN,CAAoCrF,MAApC,CAA2C,YAA3C,CAAzD;AACH,eAFD,MAEO,IAAI,KAAKnD,gBAAT,EAA2B;AAC9B,qBAAKmC,MAAL,CAAYG,QAAZ,CAAqB,cAArB,EAAqCY,QAArC,CAA8C,KAAK6B,eAAL,CAAqB0F,MAArB,CAA4B,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAChI,IAAF,IAAU,mCAAM,CAACyM,GAAG,CAAC3G,uBAAL,CAAN,CAAoCrF,MAApC,CAA2C,WAA3C,CAAd;AAAA,iBAA7B,CAA9C;AAEH,eAHM,MAGA,IAAI,KAAKjD,gBAAT,EAA2B;AAC9B,qBAAKiC,MAAL,CAAYG,QAAZ,CAAqB,eAArB,EAAsCY,QAAtC,CAA+C,KAAK+B,iBAAL,CAAuBwF,MAAvB,CAA8B,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAChI,IAAF,IAAU,mCAAM,CAACyM,GAAG,CAAC3G,uBAAL,CAAN,CAAoCrF,MAApC,CAA2C,MAA3C,CAAd;AAAA,iBAA/B,CAA/C;AACH;AACJ;;AAED,iBAAKhB,MAAL,CAAYG,QAAZ,CAAqB,wBAArB,EAA+CY,QAA/C,CAAwDiM,GAAG,CAAC1G,sBAA5D;;AACA,gBAAI0G,GAAG,CAACzG,mBAAJ,IAA2B,IAA3B,IAAmCyG,GAAG,CAACzG,mBAAJ,IAA2B/C,SAAlE,EAA6E;AACzE,mBAAKxD,MAAL,CAAYG,QAAZ,CAAqB,qBAArB,EAA4CY,QAA5C,CAAqD,mCAAM,CAACiM,GAAG,CAACzG,mBAAL,CAAN,CAAgCvF,MAAhC,CAAuC,YAAvC,CAArD;AACH,aAFD,MAEO;AACH,mBAAKhB,MAAL,CAAY3E,GAAZ,CAAgB,qBAAhB,EAAuC+E,UAAvC,CAAkD,EAAlD;AACH;;AACD,iBAAKJ,MAAL,CAAYG,QAAZ,CAAqB,UAArB,EAAiCY,QAAjC,CAA0CiM,GAAG,CAACxG,QAA9C;;AAEA,gBAAIwG,GAAG,CAAClI,kBAAJ,IAA0B,IAA1B,IAAkCkI,GAAG,CAAClI,kBAAJ,IAA0BtB,SAAhE,EAA2E;AACvE,kBAAIwJ,GAAG,CAAClI,kBAAJ,CAAuB2B,SAAvB,IAAoC,IAApC,IAA4CuG,GAAG,CAAClI,kBAAJ,CAAuB2B,SAAvB,IAAoCjD,SAApF,EAA+F;AAC3F,qBAAKxD,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,WAA/C,EAA4D0F,QAA5D,CAAqE,mCAAM,CAACiM,GAAG,CAAClI,kBAAJ,CAAuB2B,SAAxB,CAAN,CAAyCzF,MAAzC,CAAgD,YAAhD,CAArE;AACH,eAFD,MAEO;AACH,qBAAKhB,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,WAA/C,EAA4D+E,UAA5D,CAAuE,EAAvE;AACH;;AACD,kBAAI4M,GAAG,CAAClI,kBAAJ,CAAuB4B,OAAvB,IAAkC,IAAlC,IAA0CsG,GAAG,CAAClI,kBAAJ,CAAuB4B,OAAvB,IAAkClD,SAAhF,EAA2F;AACvF,qBAAKxD,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,SAA/C,EAA0D0F,QAA1D,CAAmE,mCAAM,CAACiM,GAAG,CAAClI,kBAAJ,CAAuB4B,OAAxB,CAAN,CAAuC1F,MAAvC,CAA8C,YAA9C,CAAnE;AACH,eAFD,MAEO;AACH,qBAAKhB,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,SAA/C,EAA0D+E,UAA1D,CAAqE,EAArE;AACH;;AACD,mBAAKJ,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,sBAA/C,EAAuE0F,QAAvE,CAAgFiM,GAAG,CAAClI,kBAAJ,CAAuB6B,oBAAvG;AACA,mBAAK3G,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,oBAA/C,EAAqE0F,QAArE,CAA8EiM,GAAG,CAAClI,kBAAJ,CAAuB8B,kBAArG;AACA,mBAAK5G,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,oBAA/C,EAAqE0F,QAArE,CAA8EiM,GAAG,CAAClI,kBAAJ,CAAuB+B,kBAArG;AACA,mBAAK7G,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,8BAA/C,EAA+E0F,QAA/E,CAAwFiM,GAAG,CAAClI,kBAAJ,CAAuBgC,4BAA/G;AACA,mBAAK9G,MAAL,CAAYG,QAAZ,CAAqB,oBAArB,EAA2C9E,GAA3C,CAA+C,mBAA/C,EAAoE0F,QAApE,CAA6EiM,GAAG,CAAClI,kBAAJ,CAAuBiC,iBAApG;AACH,aA1GY,CA2Gb;;;AACA,iBAAK1J,SAAL,GAAiB,IAAjB;AACA,gBAAIsL,GAAG,GAAG,KAAK3I,MAAL,CAAYG,QAAZ,CAAqB,yBAArB,CAAV;;AACA,gBAAI6M,GAAG,CAAChG,uBAAJ,IAA+B,IAA/B,IAAuCgG,GAAG,CAAChG,uBAAJ,CAA4BK,MAA5B,GAAqC,CAAhF,EAAmF;AAC/EsB,iBAAG,CAACE,KAAJ;;AACAmE,iBAAG,CAAChG,uBAAJ,CAA4Bc,OAA5B,CAAoC,UAAAoB,GAAG,EAAI;AACvCP,mBAAG,CAACtG,IAAJ,CAAS,IAAI,0DAAJ,CAAgB;AACrByE,8CAA4B,EAAEoC,GAAG,CAACpC,4BADb;AAErBH,sCAAoB,EAAEuC,GAAG,CAACvC,oBAFL;AAGrBC,oCAAkB,EAAEsC,GAAG,CAACtC;AAHH,iBAAhB,CAAT;AAKH,eAND;AAQH;;AACD,iBAAKyG,wBAAL;AACA,iBAAK7P,YAAL,GAAoB,IAApB,CA1Ha,CA2Hb;;AACA,iBAAKH,SAAL,GAAiB,KAAjB;AACH;;AACD,cAAI,KAAKqE,iBAAL,IAA0B,MAA9B,EAAsC;AAClC,iBAAKvD,oBAAL,GAA4B,IAA5B;AACH,WAFD,MAEO;AACH,iBAAKA,oBAAL,GAA4B,KAA5B;AACH;;AACD,eAAKwL,cAAL,GAAsB,KAAtB;AACH;;;eAEO,kBAAS2D,SAAT,EAAyBC,QAAzB,EAAwC;AAC5C,cAAIC,KAAK,GAAG,IAAInP,IAAJ,CAASiP,SAAT,CAAZ,CAD4C,CAE5C;AACA;AACA;AACA;AACA;AACA;;AACA,cAAIC,QAAQ,IAAIC,KAAK,CAACC,MAAN,EAAhB,EAAgCD,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,OAAN,KAAkB,CAACJ,QAAQ,GAAG,CAAX,GAAeC,KAAK,CAACC,MAAN,EAAf,GAAgC,CAAjC,IAAsC,CAAxD,GAA4D,CAA1E;AAChC,iBAAOD,KAAP;AACH;;;eAEO,4BAAmB;AACvB,eAAKnQ,SAAL,GAAiB,IAAjB;AAEA,cAAI+J,cAAc,GAAG,KAAKpH,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC2I,KAA7D;AACA,cAAI4J,mBAAmB,GAAG,KAAK5N,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,EAAgC2I,KAA1D;AACA,cAAI6J,qBAAqB,GAAG,KAAK7N,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC2I,KAA7D;AACA,cAAIqC,uBAAuB,GAAG,KAAKrG,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA3E,CANuB,CAOvB;AACD;;AACC,cAAIoD,cAAc,IAAI,IAAlB,IAA0BA,cAAc,IAAE5D,SAA1C,IAAuD4D,cAAc,CAACC,MAAf,GAAwB,CAAnF,EAAuF;AAEnF,gBAAIyG,aAAa,GAAE,IAAIzP,IAAJ,EAAnB;;AACA,gBAAIgI,uBAAuB,IAAI,IAA3B,IAAmCA,uBAAuB,IAAI7C,SAA9D,IAA2E4D,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB8L,WAAvB,MAAwC,4DAAW0B,MAAlI,EAA0I;AAEtI,mBAAK9M,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,OAAhB,CAAD,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,QAAhB,CAAD,EAA4B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,CAA5B,CADJ;AAGAyS,2BAAa,GAAE,KAAK9N,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA5D;AACA8J,2BAAa,GAAG,IAAIzP,IAAJ,CAASyP,aAAT,CAAhB;AACA,kBAAIrI,OAAO,GAAG,KAAK3H,eAAL,IAAwB,KAAKkC,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsC,IAA9D,IAAsE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsCR,SAA5G,IAAyH,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsC,EAA/J,GAAoK,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAAjM,GAAyM,EAAvN;AACA,kBAAI0B,KAAK,GAAG,KAAK5H,eAAL,IAAwB,KAAKkC,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoC,IAA5D,IAAoE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoCR,SAAxG,IAAqH,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoC,EAAzJ,GAA8J,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAAzL,GAAiM,EAA7M;AAEA,kBAAIgK,aAAa,GAAG,KAAKhO,MAAL,CAAY3E,GAAZ,CAAgB,OAAhB,EAAyB2I,KAA7C;;AACA,kBAAIgK,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAIxK,SAA1C,IAAuDwK,aAAa,CAAC3G,MAAd,GAAqB,CAAhF,EAAmF;AAC/E,oBAAI2G,aAAa,CAAC,CAAD,CAAb,CAAiBzN,IAAjB,IAAyB,0DAAS0N,SAAtC,EAAiD,CAC9C;AACF,iBAFD,MAEO,IAAID,aAAa,CAAC,CAAD,CAAb,CAAiBzN,IAAjB,IAAyB,0DAAS2N,YAAtC,EAAoD;AACvDJ,+BAAa,CAACJ,OAAd,CAAsBI,aAAa,CAACH,OAAd,KAA0B,CAAhD;AACH,iBAFM,MAEA,IAAIK,aAAa,CAAC,CAAD,CAAb,CAAiBzN,IAAjB,IAAyB,0DAAS4N,YAAtC,EAAoD;AACvDL,+BAAa,CAACJ,OAAd,CAAsBI,aAAa,CAACH,OAAd,KAA0B,EAAhD;AACH,iBAFM,MAEA,IAAIK,aAAa,CAAC,CAAD,CAAb,CAAiBzN,IAAjB,IAAyB,0DAAS6N,YAAtC,EAAoD;AACvDN,+BAAa,CAACJ,OAAd,CAAsBI,aAAa,CAACH,OAAd,KAA0B,EAAhD;AACH;;AACD,oBAAIlI,OAAO,IAAI,EAAX,IAAiBC,KAAK,IAAI,EAA9B,EAAkC;AAC9B,0BAAQD,OAAO,CAAC4G,WAAR,EAAR;AACI,yBAAK,KAAL;AAAY;AACRyB,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASQ,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRR,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASS,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRT,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASU,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRV,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASW,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRX,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASY,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRZ,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASa,GAAtC,CAAhB;AACA;AACH;;AACD,yBAAK,KAAL;AAAY;AACRb,qCAAa,GAAG,KAAKO,QAAL,CAAcP,aAAd,EAA6B,0DAASc,GAAtC,CAAhB;AACA;AACH;;AACD;AAAS;AACL;AACA;AACH;AAhCL;;AAkCA,uBAAK5O,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD0F,QAAzD,CAAkE,mCAAM,CAAC+M,aAAD,CAAN,CAAsB9M,MAAtB,CAA6B,YAA7B,CAAlE;AACA,uBAAKzC,SAAL,GAAiB,mCAAM,CAACuP,aAAD,CAAN,CAAsBnN,MAAtB,EAAjB;AACA,uBAAK7C,eAAL,GAAuB,IAAvB;AACH;AACJ;AACJ,aA7DD,MA8DK,IAAI8P,mBAAmB,IAAI,IAAvB,IAA+BA,mBAAmB,IAAEpK,SAApD,IAAiEoK,mBAAmB,CAACvG,MAApB,GAA6B,CAA9F,IAAmGD,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB8L,WAAvB,MAAwC,4DAAWwC,OAA1J,EAAmK;AACpK,kBAAIjB,mBAAmB,GAAG,KAAK5N,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,EAAgC2I,KAA1D;AACA,mBAAK/C,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,QAAhB,CAAD,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,OAAhB,CAAD,EAA2B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,CAA3B,CADJ;AAECyS,2BAAa,GAAG,IAAIzP,IAAJ,CAASuP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBvN,EAAhC,CAAhB;AAED,kBAAIyO,cAAc,GAAG,KAAK9O,MAAL,CAAY3E,GAAZ,CAAgB,QAAhB,EAA0B2I,KAA/C;;AACA,kBAAI8K,cAAc,IAAI,IAAlB,IAA0BA,cAAc,IAAItL,SAA5C,IAAyDsL,cAAc,CAACzH,MAAf,GAAwB,CAArF,EAAwF;AACpF,oBAAIyH,cAAc,CAAC,CAAD,CAAd,CAAkBvO,IAAlB,IAA0B,2DAAUwO,aAAxC,EAAuD;AACnDjB,+BAAa,CAACpL,QAAd,CAAuBoL,aAAa,CAACnL,QAAd,KAA2B,CAAlD,EAAqD,CAArD;AACH,iBAFD,MAEO,IAAImM,cAAc,CAAC,CAAD,CAAd,CAAkBvO,IAAlB,IAA0B,2DAAUyO,aAAxC,EAAuD;AAC1DlB,+BAAa,CAACpL,QAAd,CAAuBoL,aAAa,CAACnL,QAAd,KAA2B,CAAlD,EAAqD,CAArD;AACH,iBAFM,MAEA,IAAImM,cAAc,CAAC,CAAD,CAAd,CAAkBvO,IAAlB,IAA0B,2DAAU0O,aAAxC,EAAuD;AAC1DnB,+BAAa,CAACpL,QAAd,CAAuBoL,aAAa,CAACnL,QAAd,KAA2B,CAAlD,EAAqD,CAArD;AACH;;AACD,qBAAK3C,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD0F,QAAzD,CAAkE,mCAAM,CAAC+M,aAAD,CAAN,CAAsB9M,MAAtB,CAA6B,YAA7B,CAAlE;AACA,qBAAKzC,SAAL,GAAiB,mCAAM,CAACuP,aAAD,CAAN,CAAsBnN,MAAtB,EAAjB;AACA,qBAAK9C,gBAAL,GAAwB,IAAxB;AACH;AACJ,aAnBI,MAqBA,IAAIgQ,qBAAqB,IAAI,IAAzB,IAAiCA,qBAAqB,IAAIrK,SAA1D,IAAuEqK,qBAAqB,CAACxG,MAAtB,GAA6B,CAApG,IAAyGD,cAAc,CAAC,CAAD,CAAd,CAAkB7G,IAAlB,CAAuB8L,WAAvB,MAAwC,4DAAW6C,OAAhK,EAAyK;AAC1KpB,2BAAa,GAAG,IAAIzP,IAAJ,CAASwP,qBAAqB,CAAC,CAAD,CAArB,CAAyBxN,EAAlC,CAAhB;AACA,mBAAKY,oBAAL,CAA0B,CAAC,KAAKjB,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,CAAD,CAA1B,EACI,CAAC,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,OAAhB,CAAD,EAA2B,KAAK2E,MAAL,CAAY3E,GAAZ,CAAgB,QAAhB,CAA3B,CADJ;AAEA,kBAAI8T,YAAY,GAAG,KAAKnP,MAAL,CAAY3E,GAAZ,CAAgB,SAAhB,EAA2B2I,KAA9C;;AACA,kBAAImL,YAAY,IAAI,IAAhB,IAAwBA,YAAY,IAAI3L,SAAxC,IAAqD2L,YAAY,CAAC9H,MAAb,GAAsB,CAA/E,EAAkF;AAC9E,oBAAI8H,YAAY,CAAC,CAAD,CAAZ,CAAgB5O,IAAhB,IAAwB,6DAAY6O,YAAxC,EAAsD;AAClDtB,+BAAa,CAAClN,WAAd,CAA0BkN,aAAa,CAACjN,WAAd,KAA8B,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D;AACH,iBAFD,MAEO,IAAIsO,YAAY,CAAC,CAAD,CAAZ,CAAgB5O,IAAhB,IAAwB,6DAAY8O,YAAxC,EAAsD;AACzDvB,+BAAa,CAAClN,WAAd,CAA0BkN,aAAa,CAACjN,WAAd,KAA8B,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D;AACH,iBAFM,MAEA,IAAIsO,YAAY,CAAC,CAAD,CAAZ,CAAgB5O,IAAhB,IAAwB,6DAAY+O,YAAxC,EAAsD;AACzDxB,+BAAa,CAAClN,WAAd,CAA0BkN,aAAa,CAACjN,WAAd,KAA8B,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D;AACH;;AACD,qBAAKb,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD0F,QAAzD,CAAkE,mCAAM,CAAC+M,aAAD,CAAN,CAAsB9M,MAAtB,CAA6B,YAA7B,CAAlE;AACA,qBAAKzC,SAAL,GAAiB,mCAAM,CAACuP,aAAD,CAAN,CAAsBnN,MAAtB,EAAjB;AACA,qBAAK5C,gBAAL,GAAwB,IAAxB;AACH;AACJ;AACJ;;AACD,eAAKV,SAAL,GAAiB,KAAjB;AACH,S,CAED;;;;eACQ,cAAKoM,kBAAL,EAA2C;AAAA;;AAC/C,eAAKpM,SAAL,GAAiB,IAAjB;AACA,eAAK4G,OAAL,GAAe,KAAKjE,MAAL,CAAYgE,KAA3B;AACA,cAAI,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA7C,IAAsD,IAAtD,IAA8D,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA7C,IAAsDR,SAApH,IAAiI,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA7C,IAAsD,EAA3L,EACI,KAAKC,OAAL,CAAaoC,uBAAb,GAAuC,IAAIhI,IAAJ,CAAS,mCAAM,CAAC,KAAK2B,MAAL,CAAYG,QAAZ,CAAqBkG,uBAArB,CAA6CrC,KAA9C,CAAN,CAA2DhD,MAA3D,EAAT,CAAvC;AACJ,cAAI,KAAKhB,MAAL,CAAYG,QAAZ,CAAqBoG,mBAArB,CAAyCvC,KAAzC,IAAkD,IAAlD,IAA0D,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBoG,mBAArB,CAAyCvC,KAAzC,IAAkDR,SAAhH,EACI,KAAKS,OAAL,CAAasC,mBAAb,GAAmC,IAAIlI,IAAJ,CAAS,mCAAM,CAAC,KAAK2B,MAAL,CAAYG,QAAZ,CAAqBoG,mBAArB,CAAyCvC,KAA1C,CAAN,CAAuDhD,MAAvD,EAAT,CAAnC;AACJ,cAAI,KAAKhB,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAAzD,IAAkE,IAAlE,IAA0E,KAAKhE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAAzD,IAAkER,SAAhJ,EACI,KAAKS,OAAL,CAAaa,kBAAb,CAAgC2B,SAAhC,GAA4C,KAAKzG,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,WAA5C,EAAyD2I,KAArG;AACJ,cAAI,KAAKhE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD2I,KAAvD,IAAgE,IAAhE,IAAwE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD2I,KAAvD,IAAgER,SAA5I,EACI,KAAKS,OAAL,CAAaa,kBAAb,CAAgC4B,OAAhC,GAA0C,KAAK1G,MAAL,CAAYG,QAAZ,CAAqB2E,kBAArB,CAAwCzJ,GAAxC,CAA4C,SAA5C,EAAuD2I,KAAjG;AAEJ,cAAI,KAAKC,OAAL,CAAa+B,sBAAb,IAAuC,IAAvC,IAA+C,KAAK/B,OAAL,CAAa+B,sBAAb,IAAuCxC,SAA1F,EACI,KAAKS,OAAL,CAAa+B,sBAAb,CAAoC8B,OAApC,CAA4C,UAAAoB,GAAG,EAAI;AAC/CA,eAAG,CAAC5G,IAAJ,GAAW,OAAI,CAAC/E,yBAAL,CAA+BgS,IAA/B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACnP,EAAF,IAAQ6I,GAAG,CAAC7I,EAAZ,IAAkBmP,CAAC,CAACjP,IAAF,IAAU2I,GAAG,CAAC3I,IAApC;AAAA,aAArC,EAA+E+B,IAA1F;AACH,WAFD;;AAGJ,cAAI,KAAKzE,gBAAT,EAA2B;AACvB,gBAAI4R,YAAY,GAAG,KAAKzP,MAAL,CAAY3E,GAAZ,CAAgB,cAAhB,EAAgC2I,KAAnD;;AACA,gBAAIyL,YAAY,IAAI,IAAhB,IAAwBA,YAAY,CAACpI,MAAb,GAAsB,CAAlD,EAAqD;AACjD,mBAAKpD,OAAL,CAAaoC,uBAAb,GAAuC,IAAIhI,IAAJ,CAAS,mCAAM,CAACoR,YAAY,CAAC,CAAD,CAAZ,CAAgBpP,EAAjB,CAAN,CAA2BW,MAA3B,EAAT,CAAvC;AACH,aAFD,MAEO;AACH,mBAAKiD,OAAL,CAAaoC,uBAAb,GAAuC,IAAvC;AACH;AAEJ;;AACD,cAAI,KAAKtI,gBAAT,EAA2B;AACvB,gBAAI2R,aAAa,GAAG,KAAK1P,MAAL,CAAY3E,GAAZ,CAAgB,eAAhB,EAAiC2I,KAArD;;AACA,gBAAI0L,aAAa,IAAI,IAAjB,IAAyBA,aAAa,CAACrI,MAAd,GAAuB,CAApD,EAAuD;AACnD,mBAAKpD,OAAL,CAAaoC,uBAAb,GAAuC,IAAIhI,IAAJ,CAAS,mCAAM,CAACqR,aAAa,CAAC,CAAD,CAAb,CAAiBrP,EAAlB,CAAN,CAA4BW,MAA5B,EAAT,CAAvC;AACH,aAFD,MAEO;AACH,mBAAKiD,OAAL,CAAaoC,uBAAb,GAAuC,IAAvC;AACH;AACJ;;AAED,eAAKpC,OAAL,CAAanD,cAAb,GAA8B,KAAKd,MAAL,CAAY3E,GAAZ,CAAgB,gBAAhB,EAAkC2I,KAAhE;AACA,eAAKC,OAAL,CAAaH,cAAb,GAA8B,KAAK5F,QAAL,IAAiB,CAAjB,GAAqB,IAArB,GAA4B,KAA1D;AACA,eAAK+F,OAAL,CAAae,SAAb,GAAyB,IAAzB;AACA,eAAKf,OAAL,CAAagB,QAAb,GAAwB,IAAxB;AACA,eAAKhB,OAAL,CAAaC,WAAb,GAA2B,IAA3B;AACA,eAAKD,OAAL,CAAaiB,MAAb,GAAsB,IAAtB;AACA,eAAKjB,OAAL,CAAa8B,gBAAb,GAAgC,EAAhC;;AAEA,cAAI,CAAC,KAAK9B,OAAL,CAAaH,cAAlB,EAAkC;AAC9B,gBAAIqE,eAAe,GAAG,KAAKnI,MAAL,CAAY3E,GAAZ,CAAgB,uBAAhB,EAAyC2I,KAA/D;AACA,gBAAIoD,cAAc,GAAG,KAAKpH,MAAL,CAAY3E,GAAZ,CAAgB,sBAAhB,EAAwC2I,KAA7D;AACA,gBAAIkE,YAAY,GAAG,KAAKlI,MAAL,CAAY3E,GAAZ,CAAgB,oBAAhB,EAAsC2I,KAAzD;AACA,iBAAKC,OAAL,CAAae,SAAb,GAAyBmD,eAAe,IAAI,IAAnB,IAA2BA,eAAe,IAAI3E,SAA9C,GAA0D2E,eAAe,CAAC,CAAD,CAAf,CAAmB9H,EAA7E,GAAkF,IAA3G;AACA,iBAAK4D,OAAL,CAAagB,QAAb,GAAwBmC,cAAc,IAAI,IAAlB,IAA0BA,cAAc,IAAI5D,SAA5C,GAAwD,CAAC4D,cAAc,CAAC,CAAD,CAAd,CAAkB/G,EAA3E,GAAgF,IAAxG;AACA,iBAAK4D,OAAL,CAAaiB,MAAb,GAAsBgD,YAAY,IAAI,IAAhB,IAAwBA,YAAY,IAAI1E,SAAxC,GAAoD0E,YAAY,CAAC,CAAD,CAAZ,CAAgB7H,EAApE,GAAyE,IAA/F;AACA,gBAAI0F,gBAAgB,GAAG;AACnB,yBAAW,KAAKjI,eAAL,IAAwB,KAAKkC,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsC,IAA9D,IAAsE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsCR,SAA5G,IAAyH,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAA7B,IAAsC,EAA/J,GAAoK,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBsF,OAArB,CAA6BzB,KAAjM,GAAyM,EADjM;AAEnB,uBAAS,KAAKlG,eAAL,IAAwB,KAAKkC,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoC,IAA5D,IAAoE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoCR,SAAxG,IAAqH,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,IAAoC,EAAzJ,GAA8J1C,IAAI,CAACD,SAAL,CAAe,KAAKrB,MAAL,CAAYG,QAAZ,CAAqBuF,KAArB,CAA2B1B,KAA3B,CAAiC,CAAjC,CAAf,CAA9J,GAAoN,EAF1M;AAGnB,wBAAU,KAAKnG,gBAAL,IAAyB,KAAKmC,MAAL,CAAYG,QAAZ,CAAqBwF,MAArB,CAA4B3B,KAA5B,IAAqC,IAA9D,IAAsE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqBwF,MAArB,CAA4B3B,KAA5B,IAAqCR,SAA3G,IAAwH,KAAKxD,MAAL,CAAYG,QAAZ,CAAqBwF,MAArB,CAA4B3B,KAA5B,IAAqC,EAA7J,GAAkK1C,IAAI,CAACD,SAAL,CAAe,KAAKrB,MAAL,CAAYG,QAAZ,CAAqBwF,MAArB,CAA4B3B,KAA5B,CAAkC,CAAlC,CAAf,CAAlK,GAAyN,EAHhN;AAInB,yBAAW,KAAKjG,gBAAL,IAAyB,KAAKiC,MAAL,CAAYG,QAAZ,CAAqB0F,OAArB,CAA6B7B,KAA7B,IAAsC,IAA/D,IAAuE,KAAKhE,MAAL,CAAYG,QAAZ,CAAqB0F,OAArB,CAA6B7B,KAA7B,IAAsCR,SAA7G,IAA0H,KAAKxD,MAAL,CAAYG,QAAZ,CAAqB0F,OAArB,CAA6B7B,KAA7B,IAAsC,EAAhK,GAAqK1C,IAAI,CAACD,SAAL,CAAe,KAAKrB,MAAL,CAAYG,QAAZ,CAAqB0F,OAArB,CAA6B7B,KAA7B,CAAmC,CAAnC,CAAf,CAArK,GAA6N;AAJrN,aAAvB;AAMA,iBAAKC,OAAL,CAAa8B,gBAAb,GAAgCzE,IAAI,CAACD,SAAL,CAAe0E,gBAAf,CAAhC;AACH;;AACD,cAAIhC,iBAAiB,GAAG,KAAK/D,MAAL,CAAY3E,GAAZ,CAAgB,YAAhB,EAA8B2I,KAAtD;AACA,eAAKC,OAAL,CAAaC,WAAb,GAA2BH,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAAhD;AAEA,eAAK4D,OAAL,CAAauC,QAAb,GAAwBiD,kBAAxB;AAEA,cAAI,CAAC,KAAKzL,yBAAV,EAAqC,KAAKiG,OAAL,CAAa+C,uBAAb,GAAuC,IAAvC;AAErC,eAAKnK,oBAAL,CAA0B8S,mBAA1B,CAA8C,KAAK1L,OAAnD,EACK9C,SADL,CACe,UAACyO,QAAD,EAAmB;AAC1B,mBAAI,CAACC,eAAL,GAAuBD,QAAvB;;AACA,gBAAIA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACE,UAAT,IAAuB,CAA/C,EAAkD;AAC9C,kBAAIC,OAAO,GAAG,EAAd;;AACA,kBAAI,OAAI,CAAC9L,OAAL,CAAakB,oBAAb,IAAqC,IAAzC,EAA+C;AAC3C4K,uBAAO,GAAG,yCAAV;AACH,eAFD,MAGK,IAAI,OAAI,CAAC9L,OAAL,CAAauC,QAAb,IAAyB,oEAAmB5B,SAAhD,EAA2D;AAC5DmL,uBAAO,GAAG,4CAAV;AACH,eAFI,MAEE,IAAI,OAAI,CAAC9L,OAAL,CAAauC,QAAb,IAAyB,oEAAmB9B,KAAhD,EAAuD;AAC1DqL,uBAAO,GAAG,0CAAV;AACH;;AACD,uFAAaC,UAAb,CAAwBD,OAAxB,EAAiCvM,SAAjC,EAA4CA,SAA5C;AACA,qBAAI,CAACnG,SAAL,GAAiB,KAAjB;;AACA,qBAAI,CAACuM,eAAL;AACH,aAbD,MAcK;AACD,qBAAI,CAACvM,SAAL,GAAiB,KAAjB;AACA,uFAAa4S,QAAb,CAAsBL,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACM,aAAT,IAA0B,IAA9C,GAAqD,QAArD,GAAgEN,QAAQ,CAACM,aAA/F,EAA8G1M,SAA9G,EAAyHA,SAAzH;AACH;AACJ,WArBL;AAsBH;;;eAGM,2BAAkB;AACrB,eAAK3G,oBAAL,CAA0BsT,oBAA1B,CAA+ClN,IAA/C,CAAoD,CAApD;AACH;;;;;;;uBA/uCQtG,4B,EAA4B,2H,EAAA,0K,EAAA,uK,EAAA,iI,EAAA,iJ,EAAA,gI;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,gB;AAAA,c;AAAA,qjN;AAAA;AAAA;ADrBzC;;AAEI;;AAA2B;AAAA,mBAAY,IAAAyT,QAAA,CAAS,CAAT,CAAZ;AAAuB,WAAvB;;AACvB;;AAGA;;AACI;;AACI;;AAII;;AACI;;AAAO;;AAAU;;AACjB;;AAA2B;;AAAC;;AAC5B;;AACA;;AAKJ;;AACA;;AACI;;AACI;;AAAwB;;AAAU;;AAClC;;AAA2B;;AAAC;;AAC5B;;AAMyB;AAAA,mBAAY,IAAAC,iBAAA,QAAZ;AAAqC,WAArC,EAAsC,YAAtC,EAAsC;AAAA,mBACxB,IAAAC,mBAAA,QADwB;AACG,WADzC;;AAEzB;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AAAuB;;AAAW;;AAClC;;AAMA;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AAChC;;AAKA;;AAKJ;;AACJ;;AAEJ;;AACA;;AACI;;AAEI;;AAA2B;;AAAgB;;AAC3C;;AAA2B;;AAAC;;AAC5B;;AAKA;;AAKJ;;AAEJ;;AAEA;;AACI;;AAEI;;AACI;;AAAoC;;AAAwB;;AAC5D;;AAKJ;;AACJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AACI;;AACI;;AACA;;AACA;;AACA;;AAAuB;AAAA,mBAAS,IAAA/M,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAa;;AACpE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAiNA;;AAiDJ;;AACJ;;AACA;;AACA;;AAAI;;AAAoB;;AACxB;;AACI;;AACI;;AAAkC;;AAAK;;AACvC;;AACI;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AAEO;AAAA,mBAAgB,IAAAgN,YAAA,QAAhB;AAAoC,WAApC;;AAFP;;AAIA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAE;;AAET;;AAEO;AAAA,mBAAgB,IAAAC,UAAA,QAAhB;AAAkC,WAAlC;;AAFP;;AAGJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAkC;;AAAW;;AAC7C;;AACI;;AACI;;AACI;;AAAO;;AAAW;;AAClB;;AACI;;AACA;;AACI;;AAAoC;;AAAoC;;AAC5E;;AACA;;AAGA;;AASJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAS;;AAChB;;AACI;;AACA;;AACI;;AAAoC;;AAAoC;;AAC5E;;AACJ;;AACA;;AASJ;;AACJ;;AACA;;AACI;;AAAO;;AAAQ;;AACf;;AACA;;AAQJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAkC;;AAAS;;AAC3C;;AACI;;AACI;;AACI;;AAAO;;AAAO;;AACd;;AACI;;AACA;;AACI;;AAAoC;;AAAC;;AACzC;;AACJ;;AACA;;AAQJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAQ;;AACf;;AACA;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACO;AAAA,mBAAS,IAAAnD,wBAAA,EAAT;AAAmC,WAAnC;;AADP;;AAEA;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAwBJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAiE;AAAA,mBAAS,IAAAoD,QAAA,EAAT;AAAmB,WAAnB;;AAAjE;;AACA;;AAA6G;AAAA,mBAAS,IAAAL,QAAA,CAAS,CAAT,CAAT;AAAoB,WAApB;;AAAsB;;AAAU;;AAC7I;;AAAqG;;AAAM;;AAC/G;;AACJ;;AACA;;AAMJ;;;;AAzjBU;;AAAA;;AACG;;AAAA;;AAGK;;AAAA,gLAA+C,UAA/C,EAA+C,sCAA/C;;AASyB;;AAAA;;AACd;;AAAA;;AAawB;;AAAA,uGAAmC,UAAnC,EAAmC,4BAAnC,EAAmC,MAAnC,EAAmC,iBAAnC;;AAMpB;;AAAA;;AAUA;;AAAA;;AAIwB;;AAAA,yGAAqC,UAArC,EAAqC,2BAArC,EAAqC,MAArC,EAAqC,gBAArC;;AAIpB;;AAAA;;AAUJ;;AAAA;;AAIwB;;AAAA,wGAAoC,UAApC,EAAoC,2BAApC,EAAoC,MAApC,EAAoC,eAApC;;AAGpB;;AAAA;;AAgBgB;;AAAA,8GAA0C,UAA1C,EAA0C,2BAA1C,EAA0C,MAA1C,EAA0C,oBAA1C;;AAGpB;;AAAA;;AAYA;;AAAA;;AAGqB;;AAAA,0GAAkC,UAAlC,EAAkC,8BAAlC;;AAa6E;;AAAA;;AAChD;;AAAA;;AACV;;AAAA,yFAAqB,OAArB,EAAqB,CAArB,EAAqB,SAArB,EAAqB,iBAArB;;AAQ5C;;AAAA;;AAiNA;;AAAA;;AA6D8C;;AAAA,2FAAuB,SAAvB,EAAuB,gBAAvB,EAAuB,SAAvB,EAAuB,gBAAvB;;AAGlC;;AAAA;;AAYkC;;AAAA,2FAAuB,SAAvB,EAAuB,aAAvB,EAAuB,SAAvB,EAAuB,gBAAvB;;AAeK;;AAAA;;AAEnC;;AAAA;;AAGA;;AAAA;;AAkBmC;;AAAA;;AAGvC;;AAAA;;AAcJ;;AAAA;;AAyBI;;AAAA;;AAcA;;AAAA;;AAiBZ;;AAAA;;AAOa;;AAAA;;AACb;;AAAA;;AA8B8B;;AAAA;;AACR;;AAAA;;AAG3B;;AAAA;;;;;;;;;sEChiBXzT,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACP+T,kBAAQ,EAAE,2BADH;AAEPC,qBAAW,EAAE,wCAFN;AAGPC,mBAAS,EAAE,CAAC,uCAAD;AAHJ,S;AAK8B,Q;;;;;;;;;;;;;;;;;AAovCzC,QAAM1J,cAAc,GAAgB,SAA9BA,cAA8B,CAAC2J,EAAD,EAAmB;AACnD,UAAMjI,GAAG,GAAGiI,EAAE,CAACxV,GAAH,CAAO,oBAAP,EAA6B2I,KAAzC;AACA,UAAM8M,KAAK,GAAGlI,GAAG,CAACjC,oBAAlB;AACA,UAAMoK,GAAG,GAAGnI,GAAG,CAAChC,kBAAhB;AACA,UAAMpC,QAAQ,GAAGqM,EAAE,CAACxV,GAAH,CAAO,UAAP,EAAmB2I,KAApC;AACA,aAAOQ,QAAQ,IAAE,CAAV,IAAesM,KAAK,IAAI,IAAT,IAAiBC,GAAG,IAAI,IAAxB,IAAgC,CAACA,GAAD,GAAO,CAACD,KAAvD,GACD,IADC,GAED;AAAEE,aAAK,EAAE;AAAT,OAFN;AAGH,KARD;;;;;;;;;AC1wCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACagB;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAwC;;AACtE;;AACI;;AAA+B;;AAAC;;AACpC;;AACJ;;AACJ;;AACJ;;;;;;AAVQ;;AAAA;;AAIkC;;AAAA;;;;QDT7CC,wC;AAET,wDAAoBrU,EAApB,EAA6CC,oBAA7C,EAAyF;AAAA;;AAArE,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,oBAAA,GAAAA,oBAAA;AACtC,aAAAqU,wBAAA,GAAwD,EAAxD;AADqF;;;;eAG5F,oBAAW,CACV;;;eAED,wCAA+BC,oBAA/B,EAA6D;AAAA;;AACzD,eAAKtU,oBAAL,CAA0BuU,oBAA1B,CAA+CD,oBAA/C,EAAqEhQ,SAArE,CAA+E,UAAAhF,IAAI,EAAI;AACnF,mBAAI,CAAC+U,wBAAL,GAAgC/U,IAAhC;AACH,WAFD;AAGH;;;;;;;uBAZQ8U,wC,EAAwC,2H,EAAA,qJ;AAAA,K;;;YAAxCA,wC;AAAwC,6D;AAAA,e;AAAA,a;AAAA,mb;AAAA;AAAA;ACTrD;;AACI;;AACI;;AACI;;AACI;;AAAoC;;AAAa;;AACjD;;AAAoC;;AAAgB;;AACxD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAaJ;;AACJ;;AACJ;;AACJ;;;;AAhBoB;;AAAA;;;;;;;;;sEDHPA,wC,EAAwC;cALpD,uDAKoD;eAL1C;AACPP,kBAAQ,EAAE,wCADH;AAEPC,qBAAW,EAAE,qDAFN;AAGPC,mBAAS,EAAE,CAAC,oDAAD;AAHJ,S;AAK0C,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE2CL;;AAA0G;;;;AAAuC;;;;;;AAA7H;;AAAsF;;AAAA;;;;;;;;AAF9G;;AACI;;AAAkE;;AAAsB;;AACxF;;AACA;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAuD;;AAAc;;AAC5E;;;;;;AAHwB;;AAAA;;AAA8C;;AAAA;;AACC;;AAAA;;;;;;AAGvE;;AAA0C;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;;;AAYtC;;AAEG;AAAA;;AAAA;;AAAA,yCAA0B,IAA1B;AAA8B,SAA9B,EAA+B,SAA/B,EAA+B;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAA/B;;AAAoF;;AAAqF;;;;;;AADzK,sGAA6B,gBAA7B,EAA6B,qBAA7B;;;;;;;;AAGH;;AACG;AAAA;;AAAA;;AAAA;;AAAA,4DAAwC,MAAxC;AAA8C,SAA9C;;AAAuF;;AAA2B;;;;;;;;AAKrH;;AACG;AAAA;;AAAA;;AAAA;;AAAA,4DAAwC,MAAxC;AAA8C,SAA9C;;AAAuF;;AAA2B;;;;;;;;AA1C7H;;AACI;;AAAyB;;AAAgB;;AAEzC;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACJ;;AACJ;;AACA;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAqB;;AACzB;;AAAI;;AAA0B;;AAC9B;;AAKA;;AACA;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAuB;;AAC3B;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AACJ;;AACJ;;AACA;;AACI;;AAIA;;AAGA;;AACG;AAAA;;AAAA;;AAAA;;AAAA,4DAAwC,MAAxC;AAA8C,SAA9C;;AAAyF;;AAAkC;;AAE9H;;AAEJ;;AACJ;;;;;;AA3C6B;;AAAA;;AAIjB;;AAAA;;AAGJ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAOG;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;;;;;AAsC/C;;AACI;;AACI;;AACA;;AAAuB;;AAAU;;AACrC;;AACJ;;;;;;AAgB4B;;AACI;;AACJ;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;;;;;;;;;AAbzB;;AACI;;AACI;;AACI;;AACI;;AAAwB;;AAAU;;AAClC;;AAKyB;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAuB;;AAAW;;AAClC;;AAGyB;AAAA;;AAAA;;AAAA;AAAA,WAAsC,YAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,SAAtC,EAAsC,eAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,SAAtC;;AAIzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAsB;;AAAU;;AAChC;;AAGyB;AAAA;;AAAA;;AAAA;AAAA,WAAqC,YAArC,EAAqC;AAAA;;AAAA;;AAAA;AAAA,SAArC,EAAqC,eAArC,EAAqC;AAAA;;AAAA;;AAAA;AAAA,SAArC;;AAIzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA2B;;AAAgB;;AAC3C;;AAGyB;AAAA;;AAAA;;AAAA;AAAA,WAA0C,YAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,SAA1C,EAA0C,eAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,SAA1C;;AAIzB;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AAAoC;;AAAwB;;AAC5D;;AAKJ;;AACJ;;AAEA;;AACI;;AACI;;AAAO;;AAAI;;AACX;;AACO;AAAA;;AAAA;;AAAA;AAAA;;AADP;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAO;;AAAE;;AACT;;AAC2B;AAAA;;AAAA;;AAAA;AAAA;;AAD3B;;AAGJ;;AACJ;;AACJ;;AAEI;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAY;;AAClG;;AAAsJ;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iBAAsB,WAAtB;AAA+B,SAA/B;;AAAiC;;AAAK;;AAChM;;AACJ;;AAER;;;;;;AArGyC;;AAAA,0GAAwC,UAAxC,EAAwC,+BAAxC,EAAwC,MAAxC,EAAwC,oBAAxC;;AAKpB;;AAAA;;AASA;;AAAA;;AAIwB;;AAAA,oGAAkC,UAAlC,EAAkC,8BAAlC,EAAkC,MAAlC,EAAkC,mBAAlC;;AAWxB;;AAAA;;AAIwB;;AAAA,mGAAiC,UAAjC,EAAiC,8BAAjC,EAAiC,MAAjC,EAAiC,kBAAjC;;AAcJ;;AAAA,yGAAuC,UAAvC,EAAuC,8BAAvC,EAAuC,MAAvC,EAAuC,uBAAvC;;AAcH;;AAAA,2GAAkC,UAAlC,EAAkC,iCAAlC;;AAYf;;AAAA;;AAM+D;;AAAA,4FAAmB,SAAnB,EAAmB,cAAnB,EAAmB,QAAnB,EAAmB,YAAnB;;AAkByB;;AAAA;;;;QC/M9GS,0B;AA2BT,0CAAoBzU,EAApB,EAA6CE,aAA7C,EAAmFD,oBAAnF,EAAsIyU,MAAtI,EAA4JrU,GAA5J,EAAmL;AAAA;;AAA/J,aAAAL,EAAA,GAAAA,EAAA;AAAyB,aAAAE,aAAA,GAAAA,aAAA;AAAsC,aAAAD,oBAAA,GAAAA,oBAAA;AAAmD,aAAAyU,MAAA,GAAAA,MAAA;AAAsB,aAAArU,GAAA,GAAAA,GAAA;AAzBrJ,aAAAI,SAAA,GAAqB,KAArB;AAEP,aAAAkU,SAAA,GAAiB,EAAjB;AACA,aAAAC,SAAA,GAA0B,IAAI,4CAAJ,EAA1B;AACO,aAAAC,wBAAA,GAA2B,EAA3B;AAEA,aAAArU,0BAAA,GAA6B,EAA7B;AAOA,aAAAG,yBAAA,GAA+C,EAA/C;AACA,aAAAmB,8BAAA,GAAoD,EAApD;AAEA,aAAAjB,kBAAA,GAAqB,KAArB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACA,aAAAC,sBAAA,GAAyB,KAAzB;AAIA,aAAA8T,iBAAA,GAA8C,EAA9C;AAKP,aAAAC,OAAA,GAAU,IAAItT,IAAJ,EAAV;AACA,aAAAuT,OAAA,GAAU,IAAIvT,IAAJ,EAAV;AACO,aAAAwT,YAAA,GAAuB,sBAAvB;AACA,aAAAC,cAAA,GAAyB,yBAAzB;AACA,aAAAC,aAAA,GAAyB,KAAzB;AACA,aAAAC,cAAA,GAA0B,KAA1B;AANN;;;;eAWD,oBAAW;AACP,eAAKJ,OAAL,CAAahR,WAAb,CAAyB,KAAKgR,OAAL,CAAa/Q,WAAb,KAA6B,EAAtD;AACA,eAAK8Q,OAAL,CAAa/Q,WAAb,CAAyB,KAAK+Q,OAAL,CAAa9Q,WAAb,KAA6B,EAAtD;AACA,eAAKoR,SAAL,GAAiB,uEAAeC,OAAf,CAAuB,uBAAvB,CAAjB;AACA,eAAKT,wBAAL,GAAgC;AAC5B1S,2BAAe,EAAE,IADW;AAE5BC,oCAAwB,EAAE,IAFE;AAG5BC,mBAAO,EAAE,IAHmB;AAI5BC,qBAAS,EAAE,MAJiB;AAK5BC,0BAAc,EAAE,KALY;AAM5BC,yBAAa,EAAE,YANa;AAO5BC,2BAAe,EAAE,cAPW;AAQ5BC,0BAAc,EAAE,CARY;AAS5BC,6BAAiB,EAAE;AATS,WAAhC;AAWA,eAAK4S,uBAAL,GAA+B;AAC3BpT,2BAAe,EAAE,KADU;AAE3BE,mBAAO,EAAE,IAFkB;AAG3BC,qBAAS,EAAE,MAHgB;AAI3BE,yBAAa,EAAE,YAJY;AAK3BC,2BAAe,EAAE,cALU;AAM3BC,0BAAc,EAAE,CANW;AAO3BC,6BAAiB,EAAE;AAPQ,WAA/B;AAUA,eAAKnC,0BAAL,GAAkC;AAC9B2B,2BAAe,EAAE,KADa;AAE9BU,gBAAI,EAAE,QAFwB;AAG9BL,yBAAa,EAAE,YAHe;AAI9BC,2BAAe,EAAE,cAJa;AAK9BK,iCAAqB,EAAE,QALO;AAM9BC,sBAAU,EAAE,IANkB;AAO9BC,oBAAQ,EAAE,MAPoB;AAQ9BC,8BAAkB,EAAE,IARU;AAS9BC,0BAAc,EAAE,CATc;AAU9BC,mBAAO,EAAE;AAVqB,WAAlC;AAaA,eAAKG,aAAL;AACA,eAAKkS,qBAAL,GAA6B,KAAKnS,UAAL,EAA7B;AACA,eAAKoS,oCAAL;AACH;;;eACD,uBAAc;AACV,eAAKC,gBAAL;AACH;;;eACD,2BAAkB;AACd,eAAKC,2BAAL;AACH;;;eAEO,sBAAa;AACjB,cAAI,KAAKtO,OAAL,IAAgBT,SAAhB,IAA6B,KAAKS,OAAL,IAAgB,IAAjD,EAAuD;AACnD,iBAAKA,OAAL,GAAe,IAAI,uFAAJ,EAAf;AACH;;AAED,iBAAO,KAAKrH,EAAL,CAAQmI,KAAR,CAAc;AACjBM,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,KAAKpB,OAAL,CAAaoB,UAA7B,EAAyC,CAAC,0DAAWhB,QAAZ,CAAzC,CADK;AAEjBiB,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,KAAKrB,OAAL,CAAaqB,SAA7B,CAFM;AAGjBC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,KAAKtB,OAAL,CAAasB,QAA7B,CAHO;AAIjBC,yBAAa,EAAE,IAAI,0DAAJ,CAAgB,KAAKvB,OAAL,CAAauB,aAA7B,CAJE;AAKjBQ,kCAAsB,EAAE,IAAI,0DAAJ,CAAgB,KAAKtH,8BAArB,CALP;AAMjB8T,oBAAQ,EAAE,CAAC,EAAD,CANO;AAOjB7R,kBAAM,EAAE,CAAC,EAAD,CAPS;AAQjB8R,sBAAU,EAAE;AARK,WAAd,CAAP;AAUH;;;eAED,wCAA+BtB,oBAA/B,EAA6D;AACzD,eAAKuB,qBAAL,CAA2BC,8BAA3B,CAA0DxB,oBAA1D;AACH;;;eAED,mCAA0BA,oBAA1B,EAAwD;AACpD,eAAKyB,wBAAL,CAA8BC,yBAA9B,CAAwD1B,oBAAxD;AACH;;;eAED,mCAA0BA,oBAA1B,EAAwD;AAAA;;AACpD,eAAK9T,SAAL,GAAiB,IAAjB;AACA,eAAKR,oBAAL,CAA0BiW,yBAA1B,CAAoD3B,oBAApD,EACKhQ,SADL,CACe,UAACyO,QAAD,EAAmB;AAC1B,mBAAI,CAACvS,SAAL,GAAiB,KAAjB,CAD0B,CAE1B;;AACA,gBAAIuS,QAAQ,CAACE,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,uFAAaE,UAAb,CAAwB,qDAAxB,EAA+ExM,SAA/E,EAA0FA,SAA1F;;AACA,qBAAI,CAACuP,UAAL;AACH;AACJ,WARL;AASH;;;eAEM,2BAAkBxL,IAAlB,EAA2B;AAC9B,eAAK7J,gBAAL,GAAwB,KAAxB;AACA,eAAKD,kBAAL,GAA0B,KAA1B;AACA,eAAKE,iBAAL,GAAyB,KAAzB;AACA,eAAKyU,qBAAL,CAA2B/W,GAA3B,CAA+B,UAA/B,EAA2C+E,UAA3C,CAAsD,EAAtD;AACA,eAAKgS,qBAAL,CAA2B/W,GAA3B,CAA+B,WAA/B,EAA4C+E,UAA5C,CAAuD,EAAvD;;AACA,kBAAQmH,IAAI,CAAClH,EAAb;AACI,iBAAK,CAAL;AAAQ;AACJ,mBAAK3C,gBAAL,GAAwB,IAAxB;AACA;;AACJ,iBAAK,CAAL;AAAQ;AACJ,mBAAKD,kBAAL,GAA0B,IAA1B;AACA,mBAAKkK,oBAAL;AACA,mBAAKD,WAAL;AACA;;AACJ,iBAAK,CAAL;AAAQ;AACJ,mBAAK/J,iBAAL,GAAyB,IAAzB;AACA,mBAAK+J,WAAL;AACA,mBAAKC,oBAAL;AACA;AAbR;;AAeA,eAAKyK,qBAAL,CAA2B/W,GAA3B,CAA+B,eAA/B,EAAgD+E,UAAhD,CAA2D,EAA3D;AACA,eAAKI,gBAAL,CAAsB+G,IAAI,CAAClH,EAA3B;AACH;;;eAEM,0BAAiBkH,IAAjB,EAA0B;AAC7B,eAAKU,2BAAL;AACH;;;eAEM,4BAAmBV,IAAnB,EAA4B;AAC/B,eAAK6K,qBAAL,CAA2B/W,GAA3B,CAA+B,eAA/B,EAAgD+E,UAAhD,CAA2D,EAA3D;AACA,eAAK6H,2BAAL;AACH;;;eAEM,2BAAkBV,IAAlB,EAA2B;AAC9B,eAAKU,2BAAL;AACH;;;eAEM,6BAAoBV,IAApB,EAA6B;AAChC,eAAK6K,qBAAL,CAA2B/W,GAA3B,CAA+B,eAA/B,EAAgD+E,UAAhD,CAA2D,EAA3D;AACA,eAAK6H,2BAAL;AACH;;;eAEM,uCAA8B;AACjC,cAAIlE,iBAAiB,GAAG,KAAKqO,qBAAL,CAA2B/W,GAA3B,CAA+B,YAA/B,EAA6C2I,KAArE;AACA,eAAKxD,gBAAL,CAAsBuD,iBAAiB,CAAC,CAAD,CAAjB,CAAqB1D,EAArB,CAAwBI,QAAxB,EAAtB;AACH;;;eAEO,yBAAa;AAAA;;AACjB,eAAK5D,oBAAL,CAA0BqD,aAA1B,GAA0CiB,SAA1C,CAAoD,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C,6BAAMA,IAAN;;AAD2C;AAChE,2BAAK0N,aAD2D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAApD;AAGH;;;eAEO,uBAAW;AAAA;;AACf,eAAKxM,SAAL,GAAiB,IAAjB;AACA,eAAKP,aAAL,CAAmB4K,WAAnB,GAAiCvG,SAAjC,CAA2C,UAAO6I,QAAP;AAAA,mBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AACpD,6BAAMA,QAAN;;AADoD;AACvE,2BAAKC,WADkE;AAEvE,2BAAKY,gBAAL,GAAwB,IAAxB;AACA,2BAAKxN,SAAL,GAAiB,KAAjB;;AAHuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApC;AAAA,WAA3C;AAKH;;;eAEO,gCAAoB;AAAA;;AACxB,eAAKA,SAAL,GAAiB,IAAjB;AACA,eAAKR,oBAAL,CAA0B8K,oBAA1B,GAAiDxG,SAAjD,CAA2D,UAAOhF,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD,6BAAMA,IAAN;;AADmD;AACvE,2BAAK+N,YADkE;AAEvE,2BAAK7M,SAAL,GAAiB,KAAjB;;AAFuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAA3D;AAIH;;;eAEO,0BAAiB8M,SAAjB,EAAkC;AAAA;;AAAS;AAC/C,cAAIC,WAAW,GAAa,EAA5B;AACA,cAAIC,UAAU,GAAa,EAA3B;AAEA,cAAIC,iBAAiB,GAAG,KAAK8H,qBAAL,CAA2B/W,GAA3B,CAA+B,WAA/B,EAA4C2I,KAApE;;AACA,cAAIsG,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,IAAI9G,SAAlD,IAA+D8G,iBAAiB,CAACjD,MAAlB,GAA2B,CAA9F,EAAiG;AAC7F+C,uBAAW,GAAGE,iBAAiB,CAACC,GAAlB,CAAsB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAvB,CAAd;AACH;;AAED,cAAImK,gBAAgB,GAAG,KAAK4H,qBAAL,CAA2B/W,GAA3B,CAA+B,UAA/B,EAA2C2I,KAAlE;;AACA,cAAIwG,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIhH,SAAhD,IAA6DgH,gBAAgB,CAACnD,MAAjB,GAA0B,CAA3F,EAA8F;AAC1FgD,sBAAU,GAAGG,gBAAgB,CAACD,GAAjB,CAAqB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAtB,CAAb;AACH;;AAED,cAAIoK,iBAAiB,GAAG,IAAI,uEAAJ,EAAxB;AACAA,2BAAiB,CAACC,SAAlB,GAA8BP,SAA9B;AACAM,2BAAiB,CAACE,UAAlB,GAA+BP,WAA/B;AACAK,2BAAiB,CAACG,SAAlB,GAA8BP,UAA9B;AACA,eAAKhN,SAAL,GAAiB,IAAjB;AACA,eAAKR,oBAAL,CAA0B2D,gBAA1B,CAA2CiK,iBAA3C,EAA8DtJ,SAA9D,CAAwE,UAAAhF,IAAI,EAAI;AAC5E,mBAAI,CAAC0O,gBAAL,GAAwB1O,IAAxB;AACA,mBAAI,CAACkB,SAAL,GAAiB,KAAjB;AACH,WAHD;AAIH;;;eAEO,iCAAqB;AAAA;;AACzB,eAAKA,SAAL,GAAiB,IAAjB;AACA,cAAI4N,qBAAqB,GAAG,KAAKmH,qBAAL,CAA2B/W,GAA3B,CAA+B,eAA/B,EAAgD2I,KAA5E;;AACA,cAAIiH,qBAAqB,IAAIzH,SAAzB,IAAsCyH,qBAAqB,IAAI,IAAnE,EAAyE;AACrE,iBAAKpO,oBAAL,CAA0BqO,yBAA1B,CAAoDD,qBAAqB,CAACV,GAAtB,CAA0B,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAA3B,EAAqC8K,IAArC,CAA0C,GAA1C,CAApD,EAAoGhK,SAApG,CAA8G,UAAOhF,IAAP;AAAA,qBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACzF,+BAAOA,IAAP;;AADyF;AAC1H,6BAAKoB,yBADqH;AAE1H,6BAAKF,SAAL,GAAiB,KAAjB;;AAF0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhB;AAAA,aAA9G;AAIH;AACJ;;;eAEM,iCAAwBkK,IAAxB,EAAiC;AACpC,eAAK3J,sBAAL,GAA8B,KAAKqG,OAAL,CAAauB,aAAb,CAA2B6B,MAA3B,GAAoC,CAAlE;AACH;;;eAEM,oCAA2BE,IAA3B,EAAoC;AACvC,eAAK3J,sBAAL,GAA8B,KAA9B;AACH;;;eAEM,+BAAsB2J,IAAtB,EAA+B;AAClC,eAAKpE,qBAAL;AACA,eAAKvF,sBAAL,GAA8B,KAAKqG,OAAL,CAAauB,aAAb,CAA2B6B,MAA3B,GAAoC,CAAlE;AACH;;;eAED,sBAAa;AACT2L,WAAC,CAAC,gCAAD,CAAD,CAAoCC,SAApC,GAAgDpK,KAAhD,GAAwDqK,OAAxD;AACA,eAAKX,2BAAL;AACH;;;eAED,uBAAc;AACV,eAAKY,SAAL;AACA,eAAKZ,2BAAL;AACA,eAAKrI,YAAL,GAAoB,EAApB;AACA,eAAKD,WAAL,GAAmB,EAAnB;AACA,eAAKY,gBAAL,GAAwB,EAAxB;AACH;;;eAED,qBAAY;AACR,eAAKuH,qBAAL,CAA2BgB,KAA3B;AACAJ,WAAC,CAAC,gCAAD,CAAD,CAAoCC,SAApC,GAAgDpK,KAAhD,GAAwDqK,OAAxD;AACH;;;eAED,uCAA8B;AAAA;;AAAC;AAC3B,cAAIG,KAAK,GAAG,IAAI,mFAAJ,EAAZ;AAEA,cAAIC,kBAAkB,GAAG,KAAKlB,qBAAL,CAA2B/W,GAA3B,CAA+B,YAA/B,EAA6C2I,KAAtE;AACA,cAAIsG,iBAAiB,GAAG,KAAK8H,qBAAL,CAA2B/W,GAA3B,CAA+B,WAA/B,EAA4C2I,KAApE;AACA,cAAIwG,gBAAgB,GAAG,KAAK4H,qBAAL,CAA2B/W,GAA3B,CAA+B,UAA/B,EAA2C2I,KAAlE;AACA,cAAIiH,qBAAqB,GAAG,KAAKmH,qBAAL,CAA2B/W,GAA3B,CAA+B,eAA/B,EAAgD2I,KAA5E;AACA,cAAIuP,6BAA6B,GAAG,KAAKnB,qBAAL,CAA2B/W,GAA3B,CAA+B,wBAA/B,EAAyD2I,KAA7F;AAEAqP,eAAK,CAAC5M,SAAN,GAAkB,KAAK2L,qBAAL,CAA2BjS,QAA3B,CAAoCqS,QAApC,CAA6CxO,KAA/D;AACAqP,eAAK,CAAC3M,OAAN,GAAgB,KAAK0L,qBAAL,CAA2BjS,QAA3B,CAAoCQ,MAApC,CAA2CqD,KAA3D;AACAqP,eAAK,CAACG,UAAN,GAAmB,KAAKpB,qBAAL,CAA2BjS,QAA3B,CAAoCsS,UAApC,CAA+CzO,KAAlE;;AAEA,cAAIsP,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,IAAI9P,SAApD,IAAiE8P,kBAAkB,CAACjM,MAAnB,GAA4B,CAAjG,EAAoG;AAChG,gBAAIoM,YAAY,GAAGH,kBAAkB,CAAC/I,GAAnB,CAAuB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAxB,CAAnB;AACAgT,iBAAK,CAACK,YAAN,GAAqBD,YAAY,CAACtI,IAAb,CAAkB,GAAlB,CAArB;AACH;;AAED,cAAIb,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,IAAI9G,SAAlD,IAA+D8G,iBAAiB,CAACjD,MAAlB,GAA2B,CAA9F,EAAiG;AAC7F,gBAAI+C,WAAW,GAAGE,iBAAiB,CAACC,GAAlB,CAAsB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAvB,CAAlB;AACAgT,iBAAK,CAACM,WAAN,GAAoBvJ,WAAW,CAACe,IAAZ,CAAiB,GAAjB,CAApB;AACH;;AAED,cAAIX,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIhH,SAAhD,IAA6DgH,gBAAgB,CAACnD,MAAjB,GAA0B,CAA3F,EAA8F;AAC1F,gBAAIgD,UAAU,GAAGG,gBAAgB,CAACD,GAAjB,CAAqB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAtB,CAAjB;AACAgT,iBAAK,CAACO,UAAN,GAAmBvJ,UAAU,CAACc,IAAX,CAAgB,GAAhB,CAAnB;AACH;;AAED,cAAIF,qBAAqB,IAAI,IAAzB,IAAiCA,qBAAqB,IAAIzH,SAA1D,IAAuEyH,qBAAqB,CAAC5D,MAAtB,GAA+B,CAA1G,EAA6G;AACzG,gBAAIwM,eAAe,GAAG5I,qBAAqB,CAACV,GAAtB,CAA0B,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAA3B,CAAtB;AACAgT,iBAAK,CAACS,eAAN,GAAwBD,eAAe,CAAC1I,IAAhB,CAAqB,GAArB,CAAxB;AACH;;AAED,cAAIoI,6BAA6B,IAAI,IAAjC,IAAyCA,6BAA6B,IAAI/P,SAA1E,IAAuF+P,6BAA6B,CAAClM,MAA9B,GAAuC,CAAlI,EAAqI;AACjI,gBAAI0M,mBAAmB,GAAGR,6BAA6B,CAACjL,MAA9B,CAAqC,UAAAkH,CAAC;AAAA,qBAAIA,CAAC,CAAClN,IAAF,IAAU,WAAd;AAAA,aAAtC,CAA1B;AACA,gBAAI0R,WAAW,GAAGD,mBAAmB,CAACxJ,GAApB,CAAwB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAzB,CAAlB;AACAgT,iBAAK,CAACY,WAAN,GAAoBD,WAAW,CAAC7I,IAAZ,CAAiB,GAAjB,CAApB;AAEA,gBAAI+I,kBAAkB,GAAGX,6BAA6B,CAACjL,MAA9B,CAAqC,UAAAkH,CAAC;AAAA,qBAAIA,CAAC,CAAClN,IAAF,IAAU,YAAd;AAAA,aAAtC,CAAzB;AACA,gBAAI6R,YAAY,GAAGD,kBAAkB,CAAC3J,GAAnB,CAAuB,UAAAnJ,CAAC;AAAA,qBAAIA,CAAC,CAACf,EAAN;AAAA,aAAxB,CAAnB;AACAgT,iBAAK,CAACe,YAAN,GAAqBD,YAAY,CAAChJ,IAAb,CAAkB,GAAlB,CAArB;AACH;;AACD,eAAK9N,SAAL,GAAiB,IAAjB;AACA,eAAKJ,GAAL,CAASgP,aAAT;AACA,eAAKpP,oBAAL,CAA0B0V,2BAA1B,CAAsDc,KAAtD,EAA6DlS,SAA7D,CAAuE,UAAAhF,IAAI,EAAI;AAC3E,mBAAI,CAACkB,SAAL,GAAiB,KAAjB;;AACA,gBAAGlB,IAAI,IAAIA,IAAI,CAACkL,MAAL,GAAY,CAAvB,EAAyB;AACrB,qBAAI,CAACqK,iBAAL,GAAyBvV,IAAzB;AACH;;AACD,mBAAI,CAACqV,SAAL,CAAevO,IAAf;AAEH,WAPD;AAQH;;;eAED,4BAAgB;AACZ,cAAK,KAAKoR,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBC,UAApD,EAAiE;AAC7D,iBAAKD,gBAAL,CAAsBC,UAAtB,CAAiCC,IAAjC,CAAsC,UAACD,UAAD,EAAgC;AAClEA,wBAAU,CAACpB,OAAX;AACH,aAFD;AAGH;AACJ;;;eACD,4BAAgB;AAAA;;AACZ,cAAK,KAAKmB,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBC,UAApD,EAAiE;AAC7D,iBAAKD,gBAAL,CAAsBC,UAAtB,CAAiCC,IAAjC,CAAsC,UAACD,UAAD,EAAgC;AAClE,qBAAI,CAAC9C,SAAL,CAAevO,IAAf;AACH,aAFD;AAGH;AACJ;;;eAED,qBAAYuR,MAAZ,EAAoB;AAChB,eAAKpC,qBAAL,CAA2BjS,QAA3B,CAAoCqS,QAApC,CAA6CzR,QAA7C,CAAsDyT,MAAtD;AACH;;;eAED,mBAAUA,MAAV,EAAkB;AACd,eAAKpC,qBAAL,CAA2BjS,QAA3B,CAAoCQ,MAApC,CAA2CI,QAA3C,CAAoDyT,MAApD;AACH;;;eAGM,2BAAkBC,UAAlB,EAAsCC,IAAtC,EAAoD;AACvD,cAAIC,SAAS,GAAG;AAAElT,sBAAU,EAAEgT,UAAd;AAA0B9S,gBAAI,EAAE+S;AAAhC,WAAhB;AACA,eAAK7X,oBAAL,CAA0BqE,yBAA1B,CAAoD+B,IAApD,CAAyD3B,IAAI,CAACD,SAAL,CAAesT,SAAf,CAAzD;AACA,eAAK9X,oBAAL,CAA0BsT,oBAA1B,CAA+ClN,IAA/C,CAAoD,CAApD,EAHuD,CAIvD;AAEH;;;eAED,gDAAuC;AACnC,cAAI2R,aAAa,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAApB;AACA,eAAKtD,SAAL,GAAiB;AACbuD,eAAG,EAAE,0BADQ;AAEbC,mBAAO,EAAE,CACL;AAAEC,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkBC,2BAAa,EAAEL;AAAjC,aAFK,EAGL;AAAEI,oBAAM,EAAE,KAAV;AAAiBE,mBAAK,EAAE,gBAAxB;AAA0CD,2BAAa,EAAEL;AAAzD,aAHK,EAIL;AAAEI,oBAAM,EAAE,KAAV;AAAiBE,mBAAK,EAAE,gBAAxB;AAA0CC,yBAAW,EAAE,WAAvD;AAAoEF,2BAAa,EAAEL;AAAnF,aAJK,EAKL;AAAEI,oBAAM,EAAE,OAAV;AAAmBC,2BAAa,EAAEL;AAAlC,aALK,CAFI;AASbQ,sBAAU,EAAE,oBATC;AAUbC,sBAAU,EAAE,EAVC;AAWbC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB;AAXC,WAAjB;AAcH;;;;;;;uBA/WQjE,0B,EAA0B,2H,EAAA,uK,EAAA,sJ,EAAA,wH,EAAA,gI;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA;AAAA;oEAuBxB,sE,EAAkB,I;;oEAclB,yJ,EAAwC,I;;oEACxC,mH,EAA4B,I;;;;;;;;;;;;;;;;;;AD3D3C;;AACI;;AACI;;AACI;;AAA4J;AAAA;;AAAA;;AAAA,mBAAS,UAAT;AAAiB,WAAjB;;AAC5H;;AAAyC;;AAAO;;AACpF;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAuC;;AAAE;;AACzC;;AAAyB;;AAAU;;AACnC;;AAA4B;;AAAU;;AACtC;;AAAyB;;AAAU;;AACnC;;AAA0B;;AAAM;;AAChC;;AAAwB;;AAAW;;AACnC;;AAAuB;;AAAU;;AACjC;;AAA4B;;AAAgB;;AAC5C;;AAAwB;;AAAW;;AACnC;;AAAyB;;AAAa;;AACtC;;AAA4B;;AAAa;;AACzC;;AAAyB;;AAAU;;AACnC;;AAA2B;;AAAY;;AACvC;;AAA2B;;AAAY;;AACvC;;AAA+B;;AAAgB;;AAC/C;;AAAI;;AAAM;;AACd;;AACJ;;AACA;;AACI;;AA6CJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAyD;;AAAgC;;AACzF;;AAA6B;;AAAwB;;AACzD;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAyD;;AAAgC;;AACzF;;AAA6B;;AAAoB;;AACrD;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AAEA;;AAOI;;AAgHR;;;;;;AA3OM;;AAG0C;;AAAA,sFAAyB,WAAzB,EAAyB,SAAzB;;AAYuD;;AAAA,+FAAuB,WAAvB,EAAuB,aAAvB;;AAsB3D;;AAAA;;AA+EpB;;AAAA;;;;;;;;;;sEC/FXA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTX,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;gBAuBlC,uD;iBAAU,sE;;;gBAcV,uD;iBAAU,yJ;;;gBACV,uD;iBAAU,mH;;;;;;;;;;;;AC3Df;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGQ;;AACI;;AAAqB;;AAAsC;;AAC3D;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAGzB;;AACJ;;;;;;AALyB;;AAAA;;AACI;;AAAA,mGAA4B,UAA5B,EAA4B,+BAA5B,EAA4B,MAA5B,EAA4B,iBAA5B;;;;;;;;AAK7B;;AACI;;AAAiG;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAW;;AACjJ;;;;;;AACA;;AACI;;AACI;;AAAQ;;AAAsC;;AAAU;;AAC5D;;AACJ;;;;;;AAFgB;;AAAA;;AAAgD;;AAAA;;;;;;AAmCpD;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA+B;;AAAC;;AACpC;;AACA;;AAA8B;;AAAiB;;AACnD;;AACJ;;AACJ;;;;;;AAVQ;;AAAA;;AAOkC;;AAAA;;;;;;AAV9C;;AACI;;AAaJ;;;;;;AAbQ;;AAAA;;;;;;AA7BxB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAa;;AACjB;;AAAI;;AAAU;;AACd;;AAAI;;AAAY;;AACpB;;AACJ;;AACA;;AACI;;AACI;;AAAI;;AAAiC;;AACrC;;AAAI;;AAA8B;;AAClC;;AAAI;;AAAgC;;AACxC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAoC;;AAAc;;AAClD;;AAAoC;;AAAgB;;AACxD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAeJ;;AACJ;;AACJ;;AACJ;;;;;;AAnCoB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAeU;;AAAA;;;;QDvCjB2E,4B;AAET,4CAAoB3Y,EAApB,EAA6CC,oBAA7C,EAAyF;AAAA;;AAArE,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,oBAAA,GAAAA,oBAAA;AAEtC,aAAA4U,wBAAA,GAA2B,EAA3B;AACA,aAAA+D,UAAA,GAAoB,EAApB;AAEA,aAAAC,cAAA,GAAwB,EAAxB;AALqF;;;;eAS5F,oBAAW;AACP,eAAKhE,wBAAL,GAAgC;AAC5B1S,2BAAe,EAAE,IADW;AAE5BC,oCAAwB,EAAE,IAFE;AAG5BC,mBAAO,EAAE,IAHmB;AAI5BC,qBAAS,EAAE,MAJiB;AAK5BC,0BAAc,EAAE,KALY;AAM5BC,yBAAa,EAAE,YANa;AAO5BC,2BAAe,EAAE,cAPW;AAQ5BC,0BAAc,EAAE,CARY;AAS5BC,6BAAiB,EAAE;AATS,WAAhC;AAWA,eAAKmW,SAAL;AACH;;;eAEO,qBAAS;AACb,eAAK,IAAIlT,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,iBAAKgT,UAAL,CAAgBnT,IAAhB,CAAqB;AAAEhC,gBAAE,EAAEmC,CAAN;AAASjC,kBAAI,EAAEiC;AAAf,aAArB;AACH;AACJ;;;eAED,mCAA0B2O,oBAA1B,EAAwD;AAAA;;AAEpD,eAAKsE,cAAL,GAAsB,EAAtB;AACA,eAAKA,cAAL,CAAoBpT,IAApB,CAAyB;AAAEhC,cAAE,EAAE,CAAN;AAASE,gBAAI,EAAE;AAAf,WAAzB;AAGA,eAAK1D,oBAAL,CAA0B8Y,kBAA1B,CAA6CxE,oBAA7C,EAAmE,CAAnE,EAAsEhQ,SAAtE,CAAgF,UAAAhF,IAAI,EAAI;AACpF,mBAAI,CAACyZ,eAAL,GAAuBzZ,IAAvB;AACA,mBAAI,CAAC0Z,yBAAL,GAAiC,OAAI,CAACD,eAAL,CAAqBE,sBAAtD;AACA,mBAAI,CAACC,4BAAL,GAAoC5E,oBAApC;AACH,WAJD;AAOH;;;eAED,gCAAuB;AAAA;;AACnB,eAAKtU,oBAAL,CAA0B8Y,kBAA1B,CAA6C,KAAKI,4BAAlD,EAAgF,KAAKN,cAAL,CAAoB,CAApB,EAAuBpV,EAAvG,EAA2Gc,SAA3G,CAAqH,UAAAhF,IAAI,EAAI;AACzH,mBAAI,CAACyZ,eAAL,GAAuBzZ,IAAvB;AACA,mBAAI,CAAC0Z,yBAAL,GAAiC,OAAI,CAACD,eAAL,CAAqBE,sBAAtD;AACH,WAHD;AAIH;;;;;;;uBApDQP,4B,EAA4B,2H,EAAA,qJ;AAAA,K;;;YAA5BA,4B;AAA4B,gD;AAAA,c;AAAA,a;AAAA,88B;AAAA;AAAA;ACTzC;;AACI;;AACI;;AAOA;;AAGA;;AAKJ;;AACJ;;AAEA;;;;AAlB8B;;AAAA;;AAOK;;AAAA;;AAGO;;AAAA;;AAQnB;;AAAA;;;;;;;;;sEDXVA,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACP7E,kBAAQ,EAAE,2BADH;AAEPC,qBAAW,EAAE,wCAFN;AAGPC,mBAAS,EAAE,CAAC,uCAAD;AAHJ,S;AAK8B,Q;;;;;;;;;;;;;;;;AEVzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMoF,KAAK,GAAW,CAClB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADkB,EAElB;AAAED,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAFkB,EAGlB;AAAED,UAAI,EAAE,4BAAR;AAAsCC,eAAS,EAAE;AAAjD,KAHkB,CAAtB;;QAwBaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAVrB,CACL,4DADK,EAEL,mEAFK,EAGL,0DAHK,EAIL,mEAJK,EAKL,yEALK,EAML,6DAAaC,QAAb,CAAsBJ,KAAtB,CANK,EAOL,uFAPK,CAUqB;;;;0HAAnBG,mB,EAAmB;AAAA,uBAhB5B,wEAgB4B,EAf5B,oGAe4B,EAd5B,8FAc4B,EAb5B,+JAa4B,EAZ5B,yHAY4B;AAZA,kBAG1B,4DAH0B,EAI1B,mEAJ0B,EAK1B,0DAL0B,EAM1B,mEAN0B,EAO1B,yEAP0B,EAOT,4DAPS,EAS1B,uFAT0B;AAYA,O;AAHF,K;;;;;sEAGjBA,mB,EAAmB;cAlB/B,sDAkB+B;eAlBtB;AACRE,sBAAY,EAAE,CACZ,wEADY,EAEZ,oGAFY,EAGZ,8FAHY,EAIZ,+JAJY,EAKZ,yHALY,CADN;AAQRC,iBAAO,EAAE,CACL,4DADK,EAEL,mEAFK,EAGL,0DAHK,EAIL,mEAJK,EAKL,yEALK,EAML,6DAAaF,QAAb,CAAsBJ,KAAtB,CANK,EAOL,uFAPK;AARD,S;AAkBsB,Q;;;;;;;;;;ACvChC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBgB;;;;;;AAEA;;;;QDTHO,e;AAET,+BAAoBjF,MAApB,EAA4CzU,oBAA5C,EAAsF;AAAA;;AAAlE,aAAAyU,MAAA,GAAAA,MAAA;AAAwB,aAAAzU,oBAAA,GAAAA,oBAAA;AAD/C,aAAAqB,QAAA,GAAW,CAAX;AAC+F;;;;eAI5F,oBAAW;AAAA;;AAEP,cAAIsY,SAAS,GAAG5U,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAhB;;AACA,cAAI2U,SAAS,IAAI,CAACA,SAAD,GAAW,CAA5B,EAA+B;AAC3B,iBAAKtY,QAAL,GAAgB,CAACsY,SAAjB;AACH;;AAED,eAAK3Z,oBAAL,CAA0BsT,oBAA1B,CAA+ChP,SAA/C,CAAyD,UAAAC,CAAC,EAAI;AAC1D,gBAAIA,CAAC,IAAI,CAAT,EAAY;AACR,qBAAI,CAAClD,QAAL,GAAgB,CAAhB;AAEH,aAHD,MAIK;AACD,qBAAI,CAACA,QAAL,GAAgB,CAAhB;AACH;AACJ,WARD;AASA,eAAKA,QAAL,GAAgB,CAACsY,SAAjB;AAGH;;;eACD,2BAAkB;AAEd,eAAKjT,cAAL,CAAoB,KAAKrF,QAAzB;AACH;;;eAEM,wBAAe8F,KAAf,EAA8B;AAEjCpC,sBAAY,CAAC6U,OAAb,CAAqB,oBAArB,EAA2CzS,KAAK,CAACvD,QAAN,EAA3C;AAEA,eAAKvC,QAAL,GAAgB8F,KAAhB;AACA,eAAKnH,oBAAL,CAA0BqE,yBAA1B,CAAoD+B,IAApD,CAAyD,IAAzD;AACA,eAAKpG,oBAAL,CAA0BsT,oBAA1B,CAA+ClN,IAA/C,CAAoDe,KAApD,EANiC,CASjC;AACA;AACH;;;;;;;uBA1CQuS,e,EAAe,uH,EAAA,qJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,wU;AAAA;AAAA;ACT5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAA4B;AAAA,mBAAS,IAAAhT,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAqB;;AAC7E;;AACA;;AAAmB;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAmB;;AACtE;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAEA;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAhBiE;;AAAA,mFAAe,OAAf,EAAe,CAAf,EAAe,SAAf,EAAe,iBAAf;;AAEA;;AAAA,mFAAe,OAAf,EAAe,CAAf,EAAe,SAAf,EAAe,iBAAf;;AAQtB;;AAAA;;AAEF;;AAAA;;;;;;;;;sEDT5BgT,e,EAAe;cAL3B,uDAK2B;eALjB;AACT7F,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAa8F,uB,GAcT,mCAAiC;AAAA,UAArBrN,MAAqB,uEAAJ,EAAI;;AAAA;;AAC7BD,YAAM,CAACuN,MAAP,CAAc,IAAd,EAAoBtN,MAApB;AACH,K;;QAEQuN,2B,GAAb;AAAA;;AAEI,WAAAvR,UAAA,GAA6B,EAA7B;AACA,WAAAC,SAAA,GAA4B,EAA5B;AACA,WAAAC,QAAA,GAA2B,EAA3B;AACA,WAAAC,aAAA,GAAgC,EAAhC;AACA,WAAAQ,sBAAA,GAA4C,EAA5C;AACA,WAAAC,qBAAA,GAA2C,EAA3C;AACA,WAAAC,oBAAA,GAA0C,EAA1C;AACA,WAAAC,kBAAA,GAAwC,EAAxC;AAMA,WAAAV,OAAA,GAAgB,KAAhB;AACA,WAAAC,KAAA,GAA2B,EAA3B;AACA,WAAAC,MAAA,GAA4B,EAA5B;AACA,WAAAC,YAAA,GAAkC,EAAlC;AACA,WAAAC,OAAA,GAA6B,EAA7B;AACA,WAAAC,aAAA,GAAmC,EAAnC;AAOA,WAAAhC,cAAA,GAAwB,KAAxB;AACA,WAAAgB,kBAAA,GAA8C,IAAI4R,uBAAJ,EAA9C,CA5BJ,CA4BiF;;AAI7E,WAAAlQ,QAAA,GAAiB,CAAjB;AAEH,K;;QAEYqQ,uB;;;;QAYAC,sB;;;;QAoBAC,yB;;;;QAMAC,oB;;;;QAYAC,2B","file":"fuelsurcharge-fuelsurcharge-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","\r\n<div>\r\n\r\n    <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit(2)\">\r\n        <div *ngIf=\"fuelsurchargeMode=='VIEW' || fuelsurchargeMode=='COPY' || fuelsurchargeMode=='EDIT'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"well bg-white\">\r\n                <div class=\"row\">\r\n                    <!--<div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>-->\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Table Name</label>\r\n                        <span class=\"color-maroon\">*</span>\r\n                        <input type=\"text\" [readonly]=\"fuelsurchargeMode=='EDIT' && !AllowTableName ?true:null\" formControlName=\"TableName\" class=\"form-control\" />\r\n                        <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type</label>\r\n                            <span class=\"color-maroon\">*</span>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [placeholder]=\"'Select Table Type'\"\r\n                                                     [settings]=\"SingleSelectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\"\r\n                                                     (onDeSelect)=\"onTableTypeDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [placeholder]=\"'Select Customers(s)'\"\r\n                                                         [settings]=\"MultiSelectSettingsById\" [data]=\"CustomerList\">\r\n                                </ng-multiselect-dropdown>\r\n\r\n                                <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [placeholder]=\"'Select Carriers(s)'\"\r\n                                                         [settings]=\"MultiSelectSettingsById\" [data]=\"CarrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"SourceRegions\">Source Region(s)</label>\r\n                            <span class=\"color-maroon\">*</span>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [placeholder]=\"'Select Source Regions(s)'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\" [data]=\"SourceRegionList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                                <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                                <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                      [data]=\"TerminalsAndBulkPlantList\"\r\n                                                      formControlName=\"TerminalsAndBulkPlants\"\r\n                                                      [settings]=\"MultiSelectSettingsByGroup\">\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"my-3\" />\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                            <div class=\"btn-group btn-filter\">\r\n                                <input class=\"hide-element\" type=\"radio\" [name]=\"'eia-period'\" [value]=\"1\" [checked]=\"viewType==1\" *ngIf=\"SelectedCountryId!=2\">\r\n                                <label class=\"btn ml0\" (click)=\"changeViewType(1)\" *ngIf=\"SelectedCountryId!=2\">API Update</label>\r\n                                <input class=\"hide-element\" type=\"radio\" [name]=\"'eia-period'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                                <label class=\"btn ml0\" (click)=\"changeViewType(2)\">Manual Update</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"viewType==1 && SelectedCountryId!=2\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"FuelSurchargeProducts\">{{SelectedCountryId==1?\"EIA Product\":\"NRC Product\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargeProducts\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargeProducts\"\r\n                                                                 [placeholder]=\"'Select EIA Product'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargeProductList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargeProducts').invalid && rcForm.get('FuelSurchargeProducts').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargeProducts').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>{{SelectedCountryId==1?\"EIA Period\":\"NRC Period\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargePeriods\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargePeriods\"\r\n                                                                 (onSelect)=\"onFuelSurchargePeriodsSelect($event)\"\r\n                                                                 [placeholder]=\"'Select EIA Period'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargePeriodList\">\r\n                                        </ng-multiselect-dropdown>\r\n\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargePeriods').invalid && rcForm.get('FuelSurchargePeriods').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargePeriods').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>{{SelectedCountryId==1?\"EIA Area\":\"NRC Area\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargeAreas\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargeAreas\"\r\n                                                                 [placeholder]=\"'Select Area'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargeAreaList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargeAreas').invalid && rcForm.get('FuelSurchargeAreas').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargeAreas').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <!--weekly-->\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>&nbsp;</label>\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col-7\">\r\n                                            <a (click)=\"onFetchLastIndexPrice();\" class=\"btn btn-default ml-0\">Fetch Latest Index Price</a>\r\n                                        </div>\r\n                                        <div class=\"col\">\r\n                                            <input type=\"text\" class=\"form-control\" readonly=\"readonly\" formControlName=\"APILatestIndexPrice\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-black-50\">\r\n                                                {{SelectedCountryId==1?\"U.S. Dollars per Gallon\":\"Canada Cents per Litre \"}}   (Including Taxes) on  {{rcForm.get('IndexPriceDate').value}}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>Start of the Index Price</label>\r\n\r\n                                    <input *ngIf=\"IsWeeklyVisible\" type=\"text\" formControlName=\"ApiAdjustIndexPriceDate\" class=\"form-control datepicker\"\r\n                                           placeholder=\"Date\" CustomDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setApiAdjustIndexPriceDate($event);\" [minDate]=\"MinFromDate\"\r\n                                           [maxDate]=\"MaxStartDate\"\r\n                                           [mode]=\"'WEEKLY'\"\r\n                                           [daysOfWeekEnable]=\"'MON'\" />\r\n                                    <div *ngIf=\"IsWeeklyVisible && rcForm.get('ApiAdjustIndexPriceDate').invalid && rcForm.get('ApiAdjustIndexPriceDate').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('ApiAdjustIndexPriceDate').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ng-multiselect-dropdown *ngIf=\"IsMonthlyVisible\" formControlName=\"SourceMonths\"\r\n                                                             class=\"single-select\"\r\n                                                             id=\"SourceMonthList\"\r\n                                                             [placeholder]=\"'Select month'\"\r\n                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SourceMonthList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                    <div *ngIf=\"IsMonthlyVisible && rcForm.get('SourceMonths').invalid && rcForm.get('SourceMonths').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('SourceMonths').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ng-multiselect-dropdown *ngIf=\"IsAnnualyVisible\" formControlName=\"SourceAnnualy\"\r\n                                                             class=\"single-select\"\r\n                                                             id=\"idSourceAnnualy\"\r\n                                                             [placeholder]=\"'Select Annually'\"\r\n                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SourceAnnualyList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                    <div *ngIf=\"IsAnnualyVisible && rcForm.get('SourceAnnualy').invalid && rcForm.get('SourceAnnualy').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('SourceAnnualy').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsWeeklyVisible\">\r\n                                    <!--weekly-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-mon\" value=\"Mon\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-mon\">Mon</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-tue\" value=\"Tue\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-tue\">Tue</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-wed\" value=\"Wed\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-wed\">Wed</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-thu\" value=\"Thu\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-thu\">Thu</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-fri\" value=\"Fri\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-fri\">Fri</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-sat\" value=\"Sat\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-sat\">Sat</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-sun\" value=\"Sun\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-sun\">Sun</label>\r\n                                    </div>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Weeks\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idWeeks\"\r\n                                                                     [placeholder]=\"'Select week'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"WeekList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Weeks').invalid && rcForm.get('Weeks').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Weeks').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsMonthlyVisible\">\r\n                                    <!--// monthly-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Months\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idMonths\"\r\n                                                                     [placeholder]=\"'Select month'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"MonthList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Months').invalid && rcForm.get('Months').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Months').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsAnnualyVisible\">\r\n                                    <!--// Annualy-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Annualy\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idAnnualy\"\r\n                                                                     [placeholder]=\"'Select Annually'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"AnnualyList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Annualy').invalid && rcForm.get('Annualy').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Annualy').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"viewType==2 || SelectedCountryId==2\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>&nbsp;</label>\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col\">\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"ManualLatestIndexPrice\" />\r\n                                            <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').invalid && rcForm.get('ManualLatestIndexPrice').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                                <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').errors.pattern\">\r\n                                                    Invalid.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-black-50\">\r\n                                                {{SelectedCountryId==1?\"U.S. Dollars per Gallon\":\"Canada Cents per Litre \"}}  (Including Taxes) on   {{rcForm.get('IndexPriceDate').value}}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Effective date (from midnight UTC)</label>\r\n                                        <input type=\"text\" formControlName=\"ManualEffectiveDate\"\r\n                                               class=\"form-control datepicker\"\r\n                                               placeholder=\"Date\"\r\n                                               myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                               (onDateChange)=\"setManualEffectiveDate($event);\"\r\n                                               [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                                        <div *ngIf=\"rcForm.get('ManualEffectiveDate').invalid && rcForm.get('ManualEffectiveDate').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('ManualEffectiveDate').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Notes</label>\r\n                                        <textarea class=\"form-control\" formControlName=\"Notes\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"my-3\" />\r\n                <h3>Fuel Surcharge Table</h3>\r\n                <div class=\"row\" formGroupName=\"FuelSurchargeTable\">\r\n                    <div class=\"col-sm-4\">\r\n                        <h5 class=\"font-weight-bold fs14\">Valid</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>From</label>\r\n                                    <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\" readonly=\"readonly\"\r\n                                           placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setStartDate($event);\" [minDate]=\"MinStartDate\"\r\n                                           [maxDate]=\"MaxStartDate\" />\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('StartDate').invalid && rcForm.controls.FuelSurchargeTable.get('StartDate').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('StartDate').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>To</label>\r\n                                    <!--<input type=\"text\" class=\"form-control\" formControlName=\"EndDate\" />-->\r\n                                    <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                                           placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setEndDate($event);\" [minDate]=\"MinToDate\" [maxDate]=\"MaxStartDate\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <h5 class=\"font-weight-bold fs14\">Price Range</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Start Value</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeStartValue\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{SelectedCountryId==1?\"USD\":\"CAD\"}}</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"!rcForm.valid && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').value>rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').value && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').touched && rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').touched\" class=\"color-maroon\">\r\n                                            Invalid range.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                            <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').errors.pattern\">\r\n                                                Invalid.\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>End Value</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeEndValue\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{SelectedCountryId==1?\"USD\":\"CAD\"}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Interval</label>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeInterval\">\r\n                                <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').errors.pattern\">\r\n                                        Invalid.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" formGroupName=\"FuelSurchargeTable\">\r\n                    <div class=\"col-sm-4\">\r\n                        <h5 class=\"font-weight-bold fs14\">Surcharge</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Start %</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"FuelSurchargeStartPercentage\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').invalid && rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Interval</label>\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"SurchargeInterval\">\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').invalid && rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <input type=\"button\" class=\"btn btn-primary ml-0\"\r\n                               (click)=\"onGenerateSurchargeTable();\" value=\"Generate Surcharge Table\" />\r\n                        <div *ngIf=\"ShowMessage\" class=\"color-maroon\">\r\n                            Please click to generate surcharge table.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\" [formArrayName]=\"'GeneratedSurchargeTable'\">\r\n                        <div *ngIf=\"IsGeneratedSurchargeTable\">\r\n                            <table class=\"table table-bordered table-hover mt-3\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td class=\"text-center vmiddle\" width=\"50%\">Price Between</td>\r\n                                        <td width=\"50%\">Fuel Surcharge %</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <ng-container *ngFor=\"let fst of rcForm.controls['GeneratedSurchargeTable'].value; index as idx\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"text-center vmiddle\"> ${{fst.PriceRangeStartValue}} - ${{fst.PriceRangeEndValue}}</td>\r\n                                            <td>\r\n                                                <div class=\"input-group\">\r\n                                                    <span class=\"p-2 border px-4\">{{fst.FuelSurchargeStartPercentage}}</span>\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <span class=\"input-group-text\">%</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                    </tbody>\r\n                                </ng-container>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <div class=\"text-right\">\r\n            <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n            <button class=\"btn btn-lg btn-outline-primary\" [disabled]=\"disableInputControls ? true : null\" type=\"button\" (click)=\"onSubmit(1)\">Save Draft</button>\r\n            <button class=\"btn btn-lg btn-primary\" [disabled]=\"disableInputControls ? true : null\" type=\"submit\">Submit</button>\r\n        </div>\r\n    </form>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { FuelSurchargeIndexViewModel } from 'src/app/fuelsurcharge/models/CreateFuelSurcharge';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\r\nimport { Subject, forkJoin, merge, BehaviorSubject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { AnnualyEnum, FreightTableStatus, MonthEnum, PeriodEnum, SourceRegionInputModel, TableType, WeekDays, WeekEnum } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: any;\r\n\r\n@Component({\r\n    selector: 'app-create-fuel-surcharge',\r\n    templateUrl: './create-fuel-surcharge.component.html',\r\n    styleUrls: ['./create-fuel-surcharge.component.css']\r\n})\r\nexport class CreateFuelSurchargeComponent implements OnInit {\r\n\r\n    public rcForm: FormGroup;\r\n    public DtTrigger: Subject<any> = new Subject();\r\n    //public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public IsLoading: boolean = false;\r\n    public Fsmodel: FuelSurchargeIndexViewModel;\r\n    public CurrentCompanyId: number;\r\n    public SelectedCountryId: number = -1;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public FuelSurchargeProductList: DropdownItemExt[];\r\n    public FuelSurchargePeriodList: DropdownItemExt[];\r\n    public FuelSurchargeAreaList: DropdownItemExt[];\r\n    public APILatestIndexPrice: number;\r\n\r\n    public IsEditLoaded = true;\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected:boolean = false;\r\n\r\n    public IsMonthlyVisible = false;\r\n    public IsWeeklyVisible = false;\r\n    public IsAnnualyVisible = false;\r\n\r\n    public IsGeneratedSurchargeTable = false;\r\n    public ShowMessage = false;\r\n\r\n    public ServiceResponse: any;\r\n    public viewType = 1;\r\n\r\n    public fuelsurchargeId?: number;\r\n    public fuelsurchargeMode?: string;\r\n    public disableInputControls: boolean = false;\r\n    public AllowTableName: boolean;\r\n    //min max date\r\n    public MinStartDate = new Date();\r\n    public MaxStartDate = new Date();\r\n    public MinToDate = new Date();\r\n    public MinFromDate = new Date();\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public WeekList: DropdownItemExt[];\r\n    public MonthList: DropdownItemExt[];\r\n    public SourceMonthList: DropdownItemExt[];\r\n    public AnnualyList: DropdownItemExt[];\r\n    public SourceAnnualyList: DropdownItemExt[];\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService,\r\n        private regionService: RegionService, private http: HttpClient, private carrierService: CarrierService,private cdr:ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.isLoadingSubject = new BehaviorSubject(false);\r\n        this.CurrentCompanyId = Number(currentUserCompanyId);\r\n        this.getDefaultServingCountry();\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            closeDropDownOnSelection: true,\r\n            text: \"Select Terminal(s) and Bulk Plant(s)\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n        this.IsMasterSelected = true;\r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        var dt = moment(new Date()).toDate();\r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 20);\r\n        this.MinFromDate.setFullYear(this.MinFromDate.getFullYear() - 20);\r\n        this.rcForm.controls.IndexPriceDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n        //this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n        //default view type =1 so need to add required validations.\r\n        this.AddRemoveValidations([this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas'), this.rcForm.get('ApiAdjustIndexPriceDate')],\r\n            [this.rcForm.get('ManualLatestIndexPrice'), this.rcForm.get('ManualEffectiveDate')]);\r\n\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.fuelsurchargeId = stringify.FsurcharId;\r\n                this.fuelsurchargeMode = stringify.Mode;\r\n            }\r\n        });\r\n\r\n        // with order page integration\r\n        let id = localStorage.getItem(\"FuelSurchargeTabId\");\r\n        if (id && +id > 0) {\r\n            this.fuelsurchargeId = Number(id);\r\n            this.fuelsurchargeMode = \"VIEW\";\r\n            localStorage.removeItem(\"FuelSurchargeTabId\");\r\n        }\r\n\r\n\r\n        var WeekList: DropdownItemExt[] = [];\r\n        var MonthList: DropdownItemExt[] = [];\r\n        var sourceMonthList: DropdownItemExt[] = [];\r\n        var AnnualyList: DropdownItemExt[] = [];\r\n        var sourceAnnualyList: DropdownItemExt[] = [];\r\n\r\n        for (let element in WeekEnum) {\r\n            WeekList.push({ Id: element, Name: WeekEnum[element], Code: \"\" });\r\n        }\r\n        this.WeekList = WeekList;\r\n        this.rcForm.controls['Weeks'].setValue(this.WeekList.slice(0, 1));\r\n\r\n        for (let element in MonthEnum) {\r\n\r\n            MonthList.push({ Id: element, Name: MonthEnum[element], Code: \"\" });\r\n        }\r\n\r\n        this.MonthList = MonthList;\r\n        this.rcForm.controls['Months'].setValue(this.MonthList.slice(0, 1)); \r\n        this.IsWeeklyVisible = true;\r\n       \r\n        for (let i = 6; i >=-6; i--) {\r\n            let m = new Date().setMonth(new Date().getMonth() + i, 1);\r\n            sourceMonthList.push({ Id: moment(m).format(), Name: moment(m).format('MMMM YYYY'), Code: \"\"});\r\n        }\r\n\r\n        this.SourceMonthList = sourceMonthList;\r\n        \r\n        this.rcForm.controls['SourceMonths'].setValue(this.SourceMonthList.slice(5, 6));\r\n       \r\n        for (let i = 1; i >=-1; i--) {\r\n            let y = new Date().setFullYear(new Date().getFullYear() + i, 1);\r\n            sourceAnnualyList.push({ Id: moment(y).format(), Name: moment(y).format('YYYY'), Code: \"\" });\r\n        }\r\n\r\n        this.SourceAnnualyList = sourceAnnualyList;\r\n        this.rcForm.controls['SourceAnnualy'].setValue(this.SourceAnnualyList.slice(0, 1));\r\n       \r\n        for (let element in AnnualyEnum) {\r\n\r\n            AnnualyList.push({ Id: element, Name: AnnualyEnum[element], Code: \"\" });\r\n        }\r\n\r\n        this.AnnualyList = AnnualyList;\r\n        this.rcForm.controls['Annualy'].setValue(this.AnnualyList.slice(0, 1));\r\n\r\n           \r\n        this.rcForm.get('FuelSurchargePeriods').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('ApiAdjustIndexPriceDate').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('WeekDay').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n            this.rcForm.get('Weeks').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('Annualy').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('SourceAnnualy').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('Months').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n            this.rcForm.get('SourceMonths').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.getTerminalsBulkPlant();\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Carriers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.onCarriersChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Customers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.onCustomersChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.SourceRegionChange(prev, next);\r\n            });\r\n\r\n        if (this.SelectedCountryId == 2) {\r\n            this.changeViewType(this.SelectedCountryId);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.fuelsurchargeId != null && this.fuelsurchargeId != undefined) {\r\n            //this.isLoadingSubject = new BehaviorSubject(false);\r\n            this.IsEditLoaded = false;            \r\n            this.getFuelSurchargeTable(this.fuelsurchargeId); //existing fuel charge.\r\n        }\r\n    }\r\n\r\n    getDefaultServingCountry() {\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getFuelSurchargeProducts(this.SelectedCountryId);\r\n            this.getFuelSurchargePeriods(this.SelectedCountryId);\r\n            this.getFuelSurchargeArea(this.SelectedCountryId);\r\n        });\r\n    }\r\n\r\n    private modeChangeApiORmanualValidators(IsManualUpdate: boolean) {\r\n        if (!IsManualUpdate) {\r\n            var selectedTableType = this.rcForm.controls['TableTypes'].value as DropdownItem[];\r\n            this.Fsmodel.TableTypeId = selectedTableType[0].Id;\r\n            if (selectedTableType[0].Id == TableType.Master) {\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]) //, this.rcForm.get('Carriers')\r\n            } else if (selectedTableType[0].Id == TableType.Customer) {\r\n                this.AddRemoveValidations([this.rcForm.get('Customers')], [this.rcForm.get('Carriers')]);\r\n            } else {\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers')], [this.rcForm.get('Customers')]);\r\n            }\r\n            \r\n            this.AddRemoveValidations([this.rcForm.get('SourceRegions'), this.rcForm.get('TableTypes'), this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas')],\r\n                [this.rcForm.get('ManualLatestIndexPrice'), this.rcForm.get('ManualEffectiveDate')]);\r\n\r\n            if (this.IsWeeklyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('ApiAdjustIndexPriceDate')], [this.rcForm.get('SourceAnnualy'), this.rcForm.get('SourceMonths')]);\r\n            } else if (this.IsMonthlyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('SourceMonths')], [this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceAnnualy')]);\r\n            } else if (this.IsAnnualyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('SourceAnnualy')], [this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceMonths')]);\r\n            }\r\n        }\r\n        if (IsManualUpdate) {\r\n            this.rcForm.get('ManualLatestIndexPrice').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.get('ManualLatestIndexPrice').updateValueAndValidity();\r\n            this.AddRemoveValidations([this.rcForm.get('ManualEffectiveDate')],\r\n                [this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas'), this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceMonths'), this.rcForm.get('SourceAnnualy')]);\r\n        }\r\n    }\r\n\r\n    private modeChangePublishORdraftValidators(statusId: number) {\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (statusId == FreightTableStatus.Draft) {\r\n            this.clearAllValidations(this.rcForm); // clear all validation\r\n            this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for draft \r\n        }\r\n        else if (statusId == FreightTableStatus.Published) {\r\n            this.modeChangeApiORmanualValidators(this.rcForm.get('IsManualUpdate').value);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValidators([Validators.required]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n        this.rcForm.get('IsManualUpdate').setValue(value == 1 ? false : true);\r\n        this.modeChangeApiORmanualValidators(value == 1 ? false : true);\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FuelSurchargeIndexViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            IsManualUpdate: new FormControl(this.Fsmodel.IsManualUpdate),\r\n            ProductId: new FormControl(this.Fsmodel.ProductId),\r\n            PeriodId: new FormControl(this.Fsmodel.PeriodId),\r\n            TableTypeId: new FormControl(this.Fsmodel.TableTypeId),\r\n            AreaId: new FormControl(this.Fsmodel.AreaId),\r\n            FuelSurchargeIndexId: new FormControl(this.Fsmodel.FuelSurchargeIndexId),\r\n            TableName: new FormControl(this.Fsmodel.TableName, Validators.required),\r\n            Notes: new FormControl(this.Fsmodel.Notes),\r\n            IndexPriceDate: new FormControl(this.Fsmodel.IndexPriceDate),\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions, [Validators.required]),\r\n            WeekDay: new FormControl(this.Fsmodel.WeekDay),\r\n            Weeks: new FormControl(this.Fsmodel.Weeks),\r\n            Months: new FormControl(this.Fsmodel.Months),\r\n            SourceMonths: new FormControl(this.Fsmodel.SourceMonths),\r\n            Annualy: new FormControl(this.Fsmodel.Annualy),\r\n            SourceAnnualy: new FormControl(this.Fsmodel.SourceAnnualy),\r\n            ApiEffectiveDate: new FormControl(''),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            FuelSurchargeProducts: new FormControl(this.Fsmodel.FuelSurchargeProducts),\r\n            FuelSurchargePeriods: new FormControl(this.Fsmodel.FuelSurchargePeriods),\r\n            FuelSurchargeAreas: new FormControl(this.Fsmodel.FuelSurchargeAreas),\r\n            APILatestIndexPrice: new FormControl(this.Fsmodel.APILatestIndexPrice),\r\n            ApiAdjustIndexPriceDate: new FormControl(this.Fsmodel.ApiAdjustIndexPriceDate),\r\n            ManualLatestIndexPrice: new FormControl(this.Fsmodel.ManualLatestIndexPrice),\r\n            ManualEffectiveDate: new FormControl(this.Fsmodel.ManualEffectiveDate),\r\n            StatusId: new FormControl(this.Fsmodel.StatusId),\r\n            FuelSurchargeTable: new FormGroup({\r\n                StartDate: new FormControl(this.Fsmodel.FuelSurchargeTable.StartDate, [Validators.required]),\r\n                EndDate: new FormControl(this.Fsmodel.FuelSurchargeTable.EndDate),\r\n                PriceRangeStartValue: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeStartValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]), //, this.lowerThan('PriceRangeEndValue')\r\n                PriceRangeEndValue: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeEndValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                PriceRangeInterval: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeInterval, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                FuelSurchargeStartPercentage: new FormControl(this.Fsmodel.FuelSurchargeTable.FuelSurchargeStartPercentage, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                SurchargeInterval: new FormControl(this.Fsmodel.FuelSurchargeTable.SurchargeInterval, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }),\r\n            GeneratedSurchargeTable: new FormArray([\r\n                new FormControl(this.Fsmodel.GeneratedSurchargeTable)\r\n            ])\r\n        }, { validator: RangeValidator });\r\n    }\r\n\r\n    //#region start : calander related functionality \r\n    public setApiAdjustIndexPriceDate(event: any): void {\r\n        this.IsMonthlyVisible = false;\r\n        this.IsWeeklyVisible = false;\r\n        this.IsAnnualyVisible = false;\r\n        if (event!=\"\") this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(event);\r\n        if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != \"\" && this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate != undefined) {\r\n            let selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            if (selectedPeriod != null && selectedPeriod != undefined && selectedPeriod.length > 0) {\r\n                if (selectedPeriod[0].Name.toLowerCase() ==  \"Weekly\".toLowerCase()) {\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                else if (selectedPeriod[0].Name.toLowerCase() == \"Monthly\".toLowerCase()) {\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n\r\n                else if (selectedPeriod[0].Name.toLowerCase() == \"Annualy\".toLowerCase()) {\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n                this.setValidFromDate();\r\n            }\r\n        }\r\n    }\r\n\r\n    public onFuelSurchargePeriodsSelect(item: any): void {\r\n        this.IsMonthlyVisible = false;\r\n        this.IsWeeklyVisible = false;\r\n        this.IsAnnualyVisible = false;\r\n        //\r\n       // if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate != undefined) {\r\n            let selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Weekly\".toLowerCase()) {\r\n                this.IsWeeklyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            }\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Monthly\".toLowerCase()) {\r\n                this.IsMonthlyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().startOf('month').format('MM/DD/YYYY'));\r\n            }\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Annualy\".toLowerCase()) {\r\n                this.IsAnnualyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().startOf('year').format('MM/DD/YYYY'));\r\n            }\r\n        //}\r\n    }\r\n\r\n\r\n    public setManualEffectiveDate(event: any): void {\r\n        if (event != \"\") {\r\n            this.rcForm.controls.ManualEffectiveDate.setValue(event);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(event).format('MM/DD/YYYY'));\r\n        }\r\n    }\r\n\r\n    public setStartDate(event: any): void {\r\n        this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(event);\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != undefined && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != \"\")\r\n            this.MinToDate = this.rcForm.controls.FuelSurchargeTable.get('StartDate').value;\r\n    }\r\n\r\n    public setEndDate(event: any): void {\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').setValue(event);\r\n    }\r\n    // end : calander related functionality\r\n\r\n    public onTableTypeDeSelect(item: any): void {\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        if (selectedTableType.length == 0) {\r\n            this.IsMasterSelected = true;\r\n            this.rcForm.get('Carriers').patchValue([]);\r\n            this.rcForm.get('Customers').patchValue([]);\r\n            this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n            this.rcForm.get('SourceRegions').patchValue([]);\r\n            this.IsSourceRegionSelected = false;\r\n            this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'),\r\n                this.rcForm.get('Carriers')]);\r\n        }\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        \r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                break;\r\n            case 2: // customer\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Carriers')]);\r\n\r\n                break;\r\n            case 3: //carrier\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Customers')]);\r\n                break;\r\n        }\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n    }\r\n\r\n    public onCarriersChange(prev: any, next: any): void {\r\n        this.onCarriersOrCustomersChange(prev, next);\r\n    }\r\n\r\n    public onCustomersChange(prev: any, next: any): void {\r\n        this.onCarriersOrCustomersChange(prev, next);\r\n    }\r\n\r\n    public onCarriersOrCustomersChange(prev: any, next: any): void {\r\n        if (this.IsMasterSelected) return;\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());         \r\n    }\r\n   \r\n    public onFetchLastIndexPrice() {\r\n        var selectedArea = this.rcForm.get('FuelSurchargeAreas').value as DropdownItemExt[];\r\n        var selectedProduct = this.rcForm.get('FuelSurchargeProducts').value as DropdownItem[];\r\n        var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n        //if (selectedProduct != undefined && selectedPeriod != undefined && selectedProduct.length == 1 && selectedPeriod.length == 1)\r\n        //    this.getFuelIndexPrice(selectedPeriod[0].Code, selectedProduct[0].Code, moment().format(\"MM-DD-YYYY\"));\r\n        if (selectedArea != undefined && selectedProduct != undefined && selectedPeriod != undefined && selectedArea != undefined && selectedProduct.length == 1 && selectedPeriod.length == 1 && selectedArea.length == 1) {\r\n            var selectedAreaCode = this.FuelSurchargeAreaList.filter(x => x.Id == selectedArea[0].Id)[0].Code;\r\n            var selectedPeriodCode = this.FuelSurchargePeriodList.filter(x => x.Id == selectedPeriod[0].Id)[0].Code;\r\n            this.getFuelIndexPrice(selectedPeriodCode, selectedProduct[0].Code, moment().format(\"MM-DD-YYYY\"), selectedAreaCode);\r\n        }\r\n    }\r\n\r\n    public onGenerateSurchargeTable(): void {\r\n        this.ShowMessage = false;\r\n        this.IsGeneratedSurchargeTable = false;\r\n        var gst = this.rcForm.controls['GeneratedSurchargeTable'] as FormArray\r\n        var fst = this.rcForm.controls['FuelSurchargeTable'] as FormGroup\r\n        gst.clear();\r\n        this.modeChangePublishORdraftValidators(FreightTableStatus.Published);\r\n        this.modeChangeApiORmanualValidators(this.rcForm.get(\"IsManualUpdate\").value);\r\n        this.markFormGroupTouched(this.rcForm)\r\n\r\n        if (!fst.valid) return;\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getGenerateSurchargeTable(fst.get('PriceRangeStartValue').value,\r\n            fst.get('PriceRangeEndValue').value, fst.get('PriceRangeInterval').value,\r\n            fst.get('SurchargeInterval').value, fst.get('FuelSurchargeStartPercentage').value).subscribe(async (data) => {\r\n                var dt = await (data);\r\n                dt.forEach(res => {\r\n                    gst.push(new FormControl({\r\n                        FuelSurchargeStartPercentage: res.FuelSurchargeStartPercentage,\r\n                        PriceRangeStartValue: res.PriceRangeStartValue,\r\n                        PriceRangeEndValue: res.PriceRangeEndValue\r\n                    }))\r\n                });\r\n\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        this.IsGeneratedSurchargeTable = true;\r\n        //console.log(this.rcForm.controls['GeneratedSurchargeTable'].value)\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private clearAllControlValue(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.patchValue([]);;\r\n            if (control.controls) {\r\n                this.clearAllControlValue(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();\r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSubmit(fuelSurchageStatus: number): void {\r\n        this.ShowMessage = false;\r\n        this.rcForm.get('StatusId').setValue(fuelSurchageStatus);\r\n        this.modeChangeApiORmanualValidators(this.rcForm.get(\"IsManualUpdate\").value);\r\n        this.modeChangePublishORdraftValidators(fuelSurchageStatus);\r\n        this.markFormGroupTouched(this.rcForm)\r\n        if (!this.IsGeneratedSurchargeTable && fuelSurchageStatus == 2) {\r\n            this.ShowMessage = true;\r\n            return;\r\n        }\r\n\r\n        if (this.rcForm.valid) {\r\n            this.Save(fuelSurchageStatus);\r\n        }\r\n    }\r\n    public clearForm() {\r\n\r\n        this.rcForm.get('TableName').patchValue('');   \r\n        this.rcForm.get('SourceRegions').patchValue(''); \r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue('');  \r\n\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').patchValue('');\r\n\r\n        this.AllowTableName = true\r\n        this.disableInputControls = false;\r\n        this.IsGeneratedSurchargeTable = false;\r\n\r\n        this.rcForm.get('TableName').clearValidators();\r\n        this.rcForm.get('TableName').updateValueAndValidity();\r\n        this.rcForm.get('SourceRegions').clearValidators(); \r\n        this.rcForm.get('SourceRegions').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').updateValueAndValidity();\r\n        \r\n    }\r\n\r\n    public onCancel() {\r\n        if (this.fuelsurchargeMode!=null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this.clearAllControlValue(this.rcForm)\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == TableType.Master));// default will master\r\n            this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.slice(0, 1));\r\n            this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.slice(0, 1));\r\n\r\n            this.IsGeneratedSurchargeTable = false;\r\n            this.IsCustomerSelected = false;\r\n            this.IsMasterSelected = true;\r\n            this.IsCarrierSelected = false;\r\n            this.IsSourceRegionSelected = false;\r\n\r\n            this.IsAnnualyVisible = false;\r\n            this.IsMonthlyVisible = false;\r\n            this.rcForm.get('SourceMonths').setValue(null);\r\n            this.rcForm.get('SourceAnnualy').setValue(null);\r\n            \r\n            this.rcForm.controls['WeekDay'].setValue(\"Mon\");\r\n            this.rcForm.controls['Weeks'].setValue(this.WeekList.slice(0, 1));\r\n            this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.slice(0, 1));            \r\n            this.IsWeeklyVisible = true;\r\n            this.rcForm.controls['FuelSurchargeTable'].get('StartDate').setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            \r\n            this.changeViewType(1);\r\n            this.ShowMessage = false;\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n    //#region webserivce call\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await (data);\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n            this.DtTrigger.next();\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    //companyIds : Based on tableType we will be call API , if tableType master or customer or carrier, full source region,customers,carriers loads will populated.\r\n    private getSourceRegions(tableType: string): void {\r\n\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n            this.SourceRegionList.sort((a, b) => (a.Name > b.Name) ? 1 : -1)\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n        this.IsSourceRegionSelected = false;\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null && selectedSourceRegions.length > 0) {\r\n            this.IsSourceRegionSelected = true;\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n        } else {\r\n            this.IsLoading = false;\r\n        }\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.IsLoading = true;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n\r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n                this.DtTrigger.next();\r\n            });\r\n        }\r\n        this.IsLoading = false;\r\n    }\r\n\r\n    private getFuelSurchargeProducts(countryId: any): void {\r\n        this.fuelsurchargeService.getFuelSurchargeProducts(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargeProductList = await (data);\r\n            this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.slice(0, 1));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelSurchargePeriods(countryId: any): void {\r\n        this.fuelsurchargeService.getFuelSurchargePeriod(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargePeriodList = await (data);\r\n            this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.slice(0, 1));\r\n            //var dt = moment(new Date()).toDate();\r\n            //this.setApiAdjustIndexPriceDate(moment(dt).format('MM/DD/YYYY'));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelSurchargeArea(countryId: any): void {;\r\n        this.fuelsurchargeService.getFuelSurchargeArea(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargeAreaList = await (data);\r\n            this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.slice(0, 1));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelIndexPrice(periodId: any, productType: any, fetchDate: any, areaId: any): void {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId == 1) {\r\n            this.fuelsurchargeService.getEIAIndexPrice(periodId, productType, fetchDate, areaId).subscribe(async (data) => {\r\n                this.APILatestIndexPrice = await (data);\r\n                this.rcForm.controls['APILatestIndexPrice'].patchValue(this.APILatestIndexPrice);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n        else {\r\n            this.fuelsurchargeService.getNRCIndexPrice(periodId, productType, fetchDate).subscribe(async (data) => {\r\n                this.APILatestIndexPrice = await (data);\r\n                this.rcForm.controls['APILatestIndexPrice'].patchValue(this.APILatestIndexPrice);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n    //GET\r\n    private getFuelSurchargeTable(fuelSurchargeTableId: number): void {\r\n        //this.isLoadingSubject.next(true);;\r\n        let sorceRegionIds: string = \"\";\r\n        this.IsLoading = true\r\n        this.cdr.detectChanges()\r\n        this.http.get(this.fuelsurchargeService.getFuelSurchargeTableUrl + fuelSurchargeTableId).pipe(\r\n            map(fsIndex => {\r\n                const fsModel = fsIndex as FuelSurchargeIndexViewModel;\r\n                return fsModel;\r\n            }),\r\n            mergeMap(fsModel => {\r\n                //this.isLoadingSubject.next(true);\r\n                this.Fsmodel = fsModel;\r\n                //let companyIds: number[] = [];\r\n                if (this.fuelsurchargeId != null && this.fuelsurchargeMode.toUpperCase() == \"COPY\") { // on copy \r\n                    this.Fsmodel.FuelSurchargeIndexId = null;\r\n                    this.Fsmodel.TableName = \"\";\r\n                }\r\n                const customers = this.http.get(this.fuelsurchargeService.getSupplierCustomersUrl);\r\n                const carriers = this.http.get(this.regionService.getCarriersUrl);\r\n\r\n                let customerIds: number[] = [];\r\n                let carrierIds: number[] = [];\r\n                if (this.Fsmodel.Customers.length > 0) {\r\n                    customerIds = this.Fsmodel.Customers.map(s => s.Id);\r\n                }\r\n                if (this.Fsmodel.Carriers.length > 0) {\r\n                    carrierIds = this.Fsmodel.Carriers.map(s => s.Id);\r\n                }\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.Fsmodel.TableTypeId.toString();\r\n                sourceRegionInput.CustomerId = customerIds;\r\n                sourceRegionInput.CarrierId = carrierIds;\r\n                const sourceRegions = this.http.post(this.fuelsurchargeService.getSourceRegionsUrl, sourceRegionInput);\r\n                const tableTypes = this.http.get(this.fuelsurchargeService.getTableTypesUrl);\r\n                if (this.Fsmodel.SourceRegions != null && this.Fsmodel.SourceRegions != undefined && this.Fsmodel.SourceRegions.length > 0) {\r\n                    sorceRegionIds = this.Fsmodel.SourceRegions.map(s => s.Id).join(',');\r\n                    this.IsSourceRegionSelected = true;\r\n                }\r\n                const terminalAndBulkPlans = this.http.get(this.fuelsurchargeService.getTerminalsAndBulkPlantsUrl + sorceRegionIds)\r\n                return forkJoin([customers, carriers, sourceRegions, terminalAndBulkPlans, tableTypes]);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                //this.isLoadingSubject.next(true);\r\n                this.IsMasterSelected = false;\r\n                this.IsCustomerSelected = false;\r\n                this.IsCarrierSelected = false;\r\n\r\n                if (this.Fsmodel.TableTypeId == TableType.Master) {\r\n                    this.IsMasterSelected = true;\r\n                }\r\n                else if (this.Fsmodel.TableTypeId == TableType.Customer) {\r\n                    this.IsCustomerSelected = true;\r\n                }\r\n                else if (this.Fsmodel.TableTypeId == TableType.Carrier) {\r\n                    this.IsCarrierSelected = true;\r\n                }\r\n\r\n                if (this.Fsmodel.TableTypeId != TableType.Master) {\r\n                    this.CustomerList = result[0] as DropdownItem[];\r\n                    this.CarrierList = result[1] as DropdownItem[];\r\n                }\r\n\r\n                this.SourceRegionList = result[2] as DropdownItem[];\r\n                if (this.Fsmodel.SourceRegions != null && this.Fsmodel.SourceRegions != undefined && this.Fsmodel.SourceRegions.length > 0) {\r\n                    this.TerminalsAndBulkPlantList = result[3] as DropdownItemExt[];\r\n                }         \r\n                this.TableTypeList = result[4] as DropdownItem[];\r\n                //this.isLoadingSubject.next(true);\r\n                this.Edit(this.Fsmodel);\r\n               \r\n            });\r\n    }\r\n\r\n    //Edit\r\n    private Edit(_fs: FuelSurchargeIndexViewModel) {\r\n        if (this.rcForm) {\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            this.IsWeeklyVisible = false;\r\n            this.IsAnnualyVisible = false;\r\n            this.IsMonthlyVisible = false;\r\n            this.rcForm.controls['ProductId'].setValue(_fs.ProductId);\r\n            this.rcForm.controls['PeriodId'].setValue(_fs.PeriodId);\r\n            this.rcForm.controls['TableTypeId'].setValue(_fs.TableTypeId);\r\n            this.rcForm.controls['AreaId'].setValue(_fs.AreaId);\r\n            this.rcForm.controls['FuelSurchargeIndexId'].setValue(_fs.FuelSurchargeIndexId);\r\n            this.rcForm.controls['TableName'].setValue(_fs.TableName);\r\n            this.rcForm.controls['Notes'].setValue(_fs.Notes);\r\n            this.rcForm.controls['IndexPriceDate'].setValue(moment(_fs.IndexPriceDate).format('MM/DD/YYYY'));\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == _fs.TableTypeId));\r\n            _fs.IsManualUpdate ? this.changeViewType(\"2\") : this.changeViewType(\"1\");\r\n            let stringify = JSON.parse(_fs.ApiEffectiveDate);\r\n            if (!_fs.IsManualUpdate && stringify != null && stringify != undefined && stringify != \"\") {\r\n                this.IsLoading = true;\r\n                if (stringify.WeekDay != null && stringify.WeekDay != undefined && stringify.WeekDay != \"\") {\r\n                    this.rcForm.controls['WeekDay'].setValue(stringify.WeekDay);\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                if (stringify.Weeks != null && stringify.Weeks != undefined && stringify.Weeks != \"\") {\r\n                    let weeks : DropdownItemExt[] = [];\r\n                    weeks.push({ Id: JSON.parse(stringify.Weeks).Id, Name: JSON.parse(stringify.Weeks).Name, Code: \"\" });\r\n                    this.rcForm.controls['Weeks'].setValue(weeks);\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                if (stringify.Months != null && stringify.Months != undefined && stringify.Months != \"\") {\r\n                    let months:DropdownItemExt[]=[];\r\n                    months.push({ Id: JSON.parse(stringify.Months).Id, Name: JSON.parse(stringify.Months).Name, Code: \"\" });\r\n                    this.rcForm.controls['Months'].setValue(months);\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n                if (stringify.Annualy != null && stringify.Annualy != undefined && stringify.Annualy != \"\") {\r\n                   let annualy:DropdownItemExt[]=[];\r\n                    annualy.push({ Id: JSON.parse(stringify.Annualy).Id, Name: JSON.parse(stringify.Annualy).Name, Code: \"\" });\r\n                    this.rcForm.controls['Annualy'].setValue(annualy);\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n            }\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            if (_fs.Customers != null && this.CustomerList != undefined && this.CustomerList != null ) {\r\n                if (this.CustomerList.length > 0 && _fs.Customers.length > 0) this.rcForm.controls['Customers'].setValue(this.CustomerList.filter(this.IdInComparer(_fs.Customers)));\r\n                \r\n            }\r\n            if (_fs.Carriers != null && this.CarrierList != undefined && this.CarrierList != null ) {\r\n                if (this.CarrierList.length > 0 && _fs.Carriers.length > 0) this.rcForm.controls['Carriers'].setValue(this.CarrierList.filter(this.IdInComparer(_fs.Carriers)));\r\n                \r\n            }\r\n            if (this.SourceRegionList != null && this.SourceRegionList != undefined && _fs.SourceRegions != null && _fs.SourceRegions != undefined && _fs.SourceRegions.length > 0) {\r\n                if (this.SourceRegionList.length > 0 && _fs.SourceRegions.length > 0)\r\n                    this.rcForm.controls['SourceRegions'].setValue(this.SourceRegionList.filter(this.IdInComparer(_fs.SourceRegions)));\r\n            }\r\n            if (this.TerminalsAndBulkPlantList != null && this.TerminalsAndBulkPlantList != undefined && _fs.TerminalsAndBulkPlants != null && _fs.TerminalsAndBulkPlants != undefined && _fs.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.TerminalsAndBulkPlantList.length > 0 && _fs.TerminalsAndBulkPlants.length > 0) {\r\n                    this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList.filter(this.IdInComparer(_fs.TerminalsAndBulkPlants)));\r\n                }\r\n            }\r\n            if (_fs.ProductId!=null && this.FuelSurchargeProductList != null && this.FuelSurchargeProductList != undefined && this.FuelSurchargeProductList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.filter(x => x.Id == _fs.ProductId.toString()));\r\n            } \r\n            if (_fs.PeriodId!=null && this.FuelSurchargePeriodList != null && this.FuelSurchargePeriodList != undefined && this.FuelSurchargePeriodList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.filter(x => x.Id == _fs.PeriodId.toString()));\r\n            } \r\n            if (_fs.AreaId!=null && this.FuelSurchargeAreaList != null && this.FuelSurchargeAreaList != undefined && this.FuelSurchargeAreaList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.filter(x => x.Id == _fs.AreaId.toString()));\r\n            } \r\n            this.rcForm.controls['APILatestIndexPrice'].setValue(_fs.APILatestIndexPrice);\r\n            if (_fs.ApiAdjustIndexPriceDate != null && _fs.ApiAdjustIndexPriceDate != undefined) {\r\n                if (this.IsWeeklyVisible) {\r\n                    this.rcForm.controls['ApiAdjustIndexPriceDate'].setValue(moment(_fs.ApiAdjustIndexPriceDate).format('MM/DD/YYYY'));\r\n                } else if (this.IsMonthlyVisible) {\r\n                    this.rcForm.controls['SourceMonths'].setValue(this.SourceMonthList.filter(x => x.Name == moment(_fs.ApiAdjustIndexPriceDate).format('MMMM YYYY')));\r\n\r\n                } else if (this.IsAnnualyVisible) {\r\n                    this.rcForm.controls['SourceAnnualy'].setValue(this.SourceAnnualyList.filter(x => x.Name == moment(_fs.ApiAdjustIndexPriceDate).format('YYYY')));\r\n                }\r\n            }\r\n\r\n            this.rcForm.controls['ManualLatestIndexPrice'].setValue(_fs.ManualLatestIndexPrice);\r\n            if (_fs.ManualEffectiveDate != null && _fs.ManualEffectiveDate != undefined) {\r\n                this.rcForm.controls['ManualEffectiveDate'].setValue(moment(_fs.ManualEffectiveDate).format('MM/DD/YYYY'));\r\n            } else {\r\n                this.rcForm.get('ManualEffectiveDate').patchValue([]);\r\n            }\r\n            this.rcForm.controls['StatusId'].setValue(_fs.StatusId);\r\n\r\n            if (_fs.FuelSurchargeTable != null && _fs.FuelSurchargeTable != undefined) {\r\n                if (_fs.FuelSurchargeTable.StartDate != null && _fs.FuelSurchargeTable.StartDate != undefined) {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('StartDate').setValue(moment(_fs.FuelSurchargeTable.StartDate).format('MM/DD/YYYY'));\r\n                } else {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('StartDate').patchValue([]);\r\n                }\r\n                if (_fs.FuelSurchargeTable.EndDate != null && _fs.FuelSurchargeTable.EndDate != undefined) {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('EndDate').setValue(moment(_fs.FuelSurchargeTable.EndDate).format('MM/DD/YYYY'));\r\n                } else {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('EndDate').patchValue([]);\r\n                }\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeStartValue').setValue(_fs.FuelSurchargeTable.PriceRangeStartValue);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeEndValue').setValue(_fs.FuelSurchargeTable.PriceRangeEndValue);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeInterval').setValue(_fs.FuelSurchargeTable.PriceRangeInterval);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('FuelSurchargeStartPercentage').setValue(_fs.FuelSurchargeTable.FuelSurchargeStartPercentage);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('SurchargeInterval').setValue(_fs.FuelSurchargeTable.SurchargeInterval);\r\n            }\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            var gst = this.rcForm.controls['GeneratedSurchargeTable'] as FormArray\r\n            if (_fs.GeneratedSurchargeTable != null && _fs.GeneratedSurchargeTable.length > 0) {\r\n                gst.clear();\r\n                _fs.GeneratedSurchargeTable.forEach(res => {\r\n                    gst.push(new FormControl({\r\n                        FuelSurchargeStartPercentage: res.FuelSurchargeStartPercentage,\r\n                        PriceRangeStartValue: res.PriceRangeStartValue,\r\n                        PriceRangeEndValue: res.PriceRangeEndValue\r\n                    }))\r\n                });\r\n                \r\n            }     \r\n            this.onGenerateSurchargeTable();\r\n            this.IsEditLoaded = true;\r\n            //this.isLoadingSubject.next(false);\r\n            this.IsLoading = false;\r\n        }\r\n        if (this.fuelsurchargeMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n        } else {\r\n            this.disableInputControls = false;\r\n        }\r\n        this.AllowTableName = false;\r\n    }\r\n    \r\n    private nextDate(givenDate:Date, dayIndex:number): Date {\r\n        var today = new Date(givenDate);\r\n        //var a = today.getDate();\r\n        //var e = today.getDay();\r\n        //var b = (dayIndex - 1 - today.getDay() + 7);\r\n        //var c = b % 7;\r\n        //var d = today.getDate() + (dayIndex - 1 - today.getDay() + 7) % 7 + 1;\r\n        //don't find next date in case in edage case . like on same day and having fine arrangement not to crash when more than 1 week, and arrangment is to first add required days and than call current method.\r\n        if (dayIndex != today.getDay()) today.setDate(today.getDate() + (dayIndex - 1 - today.getDay() + 7) % 7 + 1);\r\n        return today;\r\n    }\r\n\r\n    private setValidFromDate() {\r\n        this.IsLoading = true;\r\n\r\n        var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n        var selectedSourceMonth = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n        var selectedSourceAnnualy = this.rcForm.get('SourceAnnualy').value as DropdownItemExt[];\r\n        var ApiAdjustIndexPriceDate = this.rcForm.controls.ApiAdjustIndexPriceDate.value;\r\n        //if (!this.IsWeeklyVisible) this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(null);\r\n       // this.AddRemoveValidations(null,[this.rcForm.get('Weeks'), this.rcForm.get('Months'), this.rcForm.get('Annualy')]);\r\n        if (selectedPeriod != null && selectedPeriod!=undefined && selectedPeriod.length > 0 ) {\r\n\r\n            let effectiveDate= new Date();\r\n            if (ApiAdjustIndexPriceDate != null && ApiAdjustIndexPriceDate != undefined && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.WEEKLY) {\r\n\r\n                this.AddRemoveValidations([this.rcForm.get('Weeks')],\r\n                    [this.rcForm.get('Months'), this.rcForm.get('Annualy')]);\r\n\r\n                effectiveDate= this.rcForm.controls.ApiAdjustIndexPriceDate.value;\r\n                effectiveDate = new Date(effectiveDate);\r\n                let WeekDay = this.IsWeeklyVisible && this.rcForm.controls.WeekDay.value != null && this.rcForm.controls.WeekDay.value != undefined && this.rcForm.controls.WeekDay.value != \"\" ? this.rcForm.controls.WeekDay.value : \"\";\r\n                let Weeks = this.IsWeeklyVisible && this.rcForm.controls.Weeks.value != null && this.rcForm.controls.Weeks.value != undefined && this.rcForm.controls.Weeks.value != \"\" ? this.rcForm.controls.Weeks.value : \"\";\r\n                \r\n                var selectedWeeks = this.rcForm.get('Weeks').value as DropdownItemExt[];\r\n                if (selectedWeeks != null && selectedWeeks != undefined && selectedWeeks.length>0) {\r\n                    if (selectedWeeks[0].Name == WeekEnum.Same_Week) {\r\n                       // default will handle\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_1) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 7);\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_2) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 14);\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_3) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 21);\r\n                    }\r\n                    if (WeekDay != \"\" && Weeks != \"\") {\r\n                        switch (WeekDay.toUpperCase()) {\r\n                            case \"SUN\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Sun)\r\n                                break;\r\n                            }\r\n                            case \"MON\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Mon)\r\n                                break;\r\n                            }\r\n                            case \"TUE\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Tue)\r\n                                break;\r\n                            }\r\n                            case \"WED\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Wed)\r\n                                break;\r\n                            }\r\n                            case \"THU\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Thu)\r\n                                break;\r\n                            }\r\n                            case \"FRI\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Fri)\r\n                                break;\r\n                            }\r\n                            case \"SAT\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Sat)\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                //statements; \r\n                                break;\r\n                            }\r\n                        }\r\n                        this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                        this.MinToDate = moment(effectiveDate).toDate();\r\n                        this.IsWeeklyVisible = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (selectedSourceMonth != null && selectedSourceMonth!=undefined && selectedSourceMonth.length > 0 && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.MONTHLY) {\r\n                var selectedSourceMonth = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n                this.AddRemoveValidations([this.rcForm.get('Months')],\r\n                    [this.rcForm.get('Weeks'), this.rcForm.get('Annualy')]);\r\n                 effectiveDate = new Date(selectedSourceMonth[0].Id);\r\n\r\n                var selectedMonths = this.rcForm.get('Months').value as DropdownItemExt[];\r\n                if (selectedMonths != null && selectedMonths != undefined && selectedMonths.length > 0) {\r\n                    if (selectedMonths[0].Name == MonthEnum.Month_Later_1) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 1, 1);\r\n                    } else if (selectedMonths[0].Name == MonthEnum.Month_Later_2) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 2, 1);\r\n                    } else if (selectedMonths[0].Name == MonthEnum.Month_Later_3) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 3, 1);\r\n                    }\r\n                    this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                    this.MinToDate = moment(effectiveDate).toDate();\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n            }\r\n\r\n            else if (selectedSourceAnnualy != null && selectedSourceAnnualy != undefined && selectedSourceAnnualy.length>0 && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.ANNUALY) {\r\n                effectiveDate = new Date(selectedSourceAnnualy[0].Id);\r\n                this.AddRemoveValidations([this.rcForm.get('Annualy')],\r\n                    [this.rcForm.get('Weeks'), this.rcForm.get('Months')]);\r\n                var selectedYear = this.rcForm.get('Annualy').value as DropdownItemExt[];\r\n                if (selectedYear != null && selectedYear != undefined && selectedYear.length > 0) {\r\n                    if (selectedYear[0].Name == AnnualyEnum.Year_Later_1) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 1, 0, 1);\r\n                    } else if (selectedYear[0].Name == AnnualyEnum.Year_Later_2) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 2, 0, 1);\r\n                    } else if (selectedYear[0].Name == AnnualyEnum.Year_Later_3) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 3, 0, 1);\r\n                    }\r\n                    this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                    this.MinToDate = moment(effectiveDate).toDate();\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n            }\r\n        }\r\n        this.IsLoading = false;\r\n    }\r\n\r\n    //Save\r\n    private Save(fuelSurchageStatus: FreightTableStatus): void {\r\n        this.IsLoading = true;\r\n        this.Fsmodel = this.rcForm.value;\r\n        if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate.value != undefined && this.rcForm.controls.ApiAdjustIndexPriceDate.value != \"\")\r\n            this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(this.rcForm.controls.ApiAdjustIndexPriceDate.value).format());\r\n        if (this.rcForm.controls.ManualEffectiveDate.value != null && this.rcForm.controls.ManualEffectiveDate.value != undefined)\r\n            this.Fsmodel.ManualEffectiveDate = new Date(moment(this.rcForm.controls.ManualEffectiveDate.value).format());\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != undefined)\r\n            this.Fsmodel.FuelSurchargeTable.StartDate = this.rcForm.controls.FuelSurchargeTable.get('StartDate').value;\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('EndDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('EndDate').value != undefined)\r\n            this.Fsmodel.FuelSurchargeTable.EndDate = this.rcForm.controls.FuelSurchargeTable.get('EndDate').value;\r\n\r\n        if (this.Fsmodel.TerminalsAndBulkPlants != null || this.Fsmodel.TerminalsAndBulkPlants != undefined)\r\n            this.Fsmodel.TerminalsAndBulkPlants.forEach(res => {\r\n                res.Code = this.TerminalsAndBulkPlantList.find(c => c.Id == res.Id && c.Name == res.Name).Code;\r\n            });\r\n        if (this.IsMonthlyVisible) {\r\n            var sourceMonths = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n            if (sourceMonths != null && sourceMonths.length > 0) {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(sourceMonths[0].Id).format());\r\n            } else {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = null;\r\n            }\r\n\r\n        }\r\n        if (this.IsAnnualyVisible) {\r\n            var sourceAnnualy = this.rcForm.get('SourceAnnualy').value as DropdownItemExt[];\r\n            if (sourceAnnualy != null && sourceAnnualy.length > 0) {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(sourceAnnualy[0].Id).format());\r\n            } else {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = null;\r\n            }\r\n        }\r\n\r\n        this.Fsmodel.IndexPriceDate = this.rcForm.get('IndexPriceDate').value;\r\n        this.Fsmodel.IsManualUpdate = this.viewType == 2 ? true : false;\r\n        this.Fsmodel.ProductId = null;\r\n        this.Fsmodel.PeriodId = null;\r\n        this.Fsmodel.TableTypeId = null;\r\n        this.Fsmodel.AreaId = null;\r\n        this.Fsmodel.ApiEffectiveDate = \"\";\r\n\r\n        if (!this.Fsmodel.IsManualUpdate) {\r\n            var selectedProduct = this.rcForm.get('FuelSurchargeProducts').value as DropdownItem[];\r\n            var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            var selectedArea = this.rcForm.get('FuelSurchargeAreas').value as DropdownItem[];\r\n            this.Fsmodel.ProductId = selectedProduct != null && selectedProduct != undefined ? selectedProduct[0].Id : null;\r\n            this.Fsmodel.PeriodId = selectedPeriod != null && selectedPeriod != undefined ? +selectedPeriod[0].Id : null;\r\n            this.Fsmodel.AreaId = selectedArea != null && selectedArea != undefined ? selectedArea[0].Id : null;\r\n            let ApiEffectiveDate = {\r\n                \"WeekDay\": this.IsWeeklyVisible && this.rcForm.controls.WeekDay.value != null && this.rcForm.controls.WeekDay.value != undefined && this.rcForm.controls.WeekDay.value != \"\" ? this.rcForm.controls.WeekDay.value : \"\",\r\n                \"Weeks\": this.IsWeeklyVisible && this.rcForm.controls.Weeks.value != null && this.rcForm.controls.Weeks.value != undefined && this.rcForm.controls.Weeks.value != \"\" ? JSON.stringify(this.rcForm.controls.Weeks.value[0]) : \"\",\r\n                \"Months\": this.IsMonthlyVisible && this.rcForm.controls.Months.value != null && this.rcForm.controls.Months.value != undefined && this.rcForm.controls.Months.value != \"\" ? JSON.stringify(this.rcForm.controls.Months.value[0]) : \"\",\r\n                \"Annualy\": this.IsAnnualyVisible && this.rcForm.controls.Annualy.value != null && this.rcForm.controls.Annualy.value != undefined && this.rcForm.controls.Annualy.value != \"\" ? JSON.stringify(this.rcForm.controls.Annualy.value[0]) : \"\"\r\n            };\r\n            this.Fsmodel.ApiEffectiveDate = JSON.stringify(ApiEffectiveDate);\r\n        }\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.Fsmodel.TableTypeId = selectedTableType[0].Id;\r\n\r\n        this.Fsmodel.StatusId = fuelSurchageStatus;\r\n\r\n        if (!this.IsGeneratedSurchargeTable) this.Fsmodel.GeneratedSurchargeTable = null;\r\n\r\n        this.fuelsurchargeService.createFuelSurcharge(this.Fsmodel)\r\n            .subscribe((response: any) => {\r\n                this.ServiceResponse = response;\r\n                if (response != null && response.StatusCode == 0) {\r\n                    let message = \"\";\r\n                    if (this.Fsmodel.FuelSurchargeIndexId != null) {\r\n                        message = \"Fuel Surcharge table edit successfully.\";\r\n                    }\r\n                    else if (this.Fsmodel.StatusId == FreightTableStatus.Published) {\r\n                        message = \"Fuel Surcharge table created successfully.\";\r\n                    } else if (this.Fsmodel.StatusId == FreightTableStatus.Draft) {\r\n                        message = \"Fuel Surcharge saved draft successfully.\";\r\n                    }\r\n                    Declarations.msgsuccess(message, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.changeToViewTab();\r\n                }\r\n                else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    public changeToViewTab() {\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(2);\r\n    }\r\n\r\n    //#endregion    \r\n}\r\n\r\nconst RangeValidator: ValidatorFn = (fg: FormGroup) => {\r\n    const fst = fg.get('FuelSurchargeTable').value;\r\n    const start = fst.PriceRangeStartValue;\r\n    const end = fst.PriceRangeEndValue;\r\n    const statusId = fg.get('StatusId').value;\r\n    return statusId==1 || start != null && end != null && +end > +start\r\n        ? null\r\n        : { range: true };\r\n};\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { FuelSurchargeService } from '../../services/fuelsurcharge.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { FuelSurchargePricingModel } from '../../models/CreateFuelSurcharge';\r\n\n@Component({\n    selector: 'app-view-fuel-surcharge-pricingdetails',\n    templateUrl: './view-fuel-surcharge-pricingdetails.component.html',\n    styleUrls: ['./view-fuel-surcharge-pricingdetails.component.css']\n})\nexport class ViewFuelSurchargePricingdetailsComponent implements OnInit {\n\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) { }\n    public FuelSurchargePricingList: FuelSurchargePricingModel[] = [];\n\n    ngOnInit() {\n    }\n\n    getFuelSurchargePricingDetails(fuelSurchargeIndexId: number) {\r\n        this.fuelsurchargeService.getSurchargeTableNew(fuelSurchargeIndexId).subscribe(data => {\r\n            this.FuelSurchargePricingList = data as FuelSurchargePricingModel[];\r\n        });\r\n    }\n}\n","<!--<p>view-fuel-surcharge-pricingdetails works!</p>-->\r\n<div class=\"col-sm-12\">\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-center\" width=\"47%\">Price Between</th>\r\n                <th class=\"text-center\" width=\"48%\">Fuel Surcharge %</th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n    <div style=\"max-height:70vh;overflow:auto\" id=\"surchargeTable\">\r\n        <table class=\"table table-bordered table-hover mb0\">\r\n            <tbody>\r\n                <tr *ngFor=\"let pricing of FuelSurchargePricingList\">\r\n                    <td class=\"text-center vmiddle\" width=\"50%\">\r\n                        ${{pricing.PriceRangeStartValue}} - ${{pricing.PriceRangeEndValue}}\r\n                    </td>\r\n                    <td width=\"50%\">\r\n                        <div class=\"input-group\">\r\n                            <span class=\"p-2 border px-4\">{{pricing.FuelSurchargeStartPercentage}}</span>\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\">%</span>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","<form [formGroup]=\"viewFuelSurchargeForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-fuel-surcharge-grid\" class=\"table-responsive\">\r\n                                <table id=\"fuel-surcharge-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th class=\"hide-element\" data-key=\"Id\">Id</th>\r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"TableTypeNew\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th data-key=\"IndexProduct\">Index Product</th>\r\n                                            <th data-key=\"IndexArea\">Index Area</th>\r\n                                            <th data-key=\"IndexPeriod\">Index Period</th>\r\n                                            <th data-key=\"IndexUpdate\">Index Update</th>\r\n                                            <th data-key=\"HistoricalPrice\">Historical Price</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let surcharge of FuelSurchargeList ,let i = index\">\r\n                                            <td class=\"hide-element\">{{surcharge.Id}}</td>\r\n\r\n                                            <td class=\"text-center\">\r\n                                                <a (click)=\"getFuelSurchargePricingDetails(surcharge.Id);\" class=\"btn btn-link\" onclick=\"slidePanel('#pricing-panel','30%')\">\r\n                                                    {{surcharge.DateRange}}\r\n                                                </a>\r\n                                            </td>\r\n                                            <td>{{surcharge.TableTypeNew}}</td>\r\n                                            <td>{{surcharge.TableName}}</td>\r\n                                            <td>{{surcharge.StatusName}}</td>\r\n                                            <td>{{surcharge.Customer}}</td>\r\n                                            <td>{{surcharge.Carrier}}</td>\r\n                                            <td>{{surcharge.SourceRegion}}</td>\r\n                                            <td *ngIf=\"surcharge.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': surcharge.IsShowMore}\">{{surcharge.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !surcharge.IsShowMore}\" *ngIf=\"(surcharge.Terminal.length>40)\">{{surcharge.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"surcharge.IsShowMore = !surcharge.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"surcharge.Terminal.length<=40\">{{surcharge.Terminal}}</td>\r\n                                            <td>{{surcharge.BulkPlant}}</td>\r\n                                            <td>{{surcharge.IndexProduct}}</td>\r\n                                            <td>{{surcharge.IndexArea}}</td>\r\n                                            <td>{{surcharge.IndexPeriod}}</td>\r\n                                            <td>{{surcharge.IndexType}}</td>\r\n                                            <td class=\"text-center\">\r\n                                                <a (click)=\"getHistoricalPriceDetails(surcharge.Id);\" class=\"btn btn-link fs16\" onclick=\"slidePanel('#historical-price-panel','30%')\" placement=\"bottom\" ngbTooltip=\"Historical Price\">\r\n                                                    <i class=\"fas fa-history\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                            <td class=\"text-center text-nowrap\">\r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFuelSurchargeTable(surcharge.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a  class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">  <i class=\"fas fa-street-view\"></i></a>\r\n                                           \r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <div id=\"historical-price-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Historical Price Details</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-historical-price></app-view-historical-price>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"pricing-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Fuel Surcharge Table</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-fuel-surcharge-pricingdetails></app-view-fuel-surcharge-pricingdetails>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n        <ng-template #popContent>\r\n            <div class=\"popover-details\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type</label>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [placeholder]=\"'Select Type (Required)'\"\r\n                                                     [settings]=\"SinlgeselectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"viewFuelSurchargeForm.get('TableTypes').invalid && viewFuelSurchargeForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"viewFuelSurchargeForm.get('TableTypes').errors.required\">\r\n                                    Table Type is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [placeholder]=\"'Select Customers'\"\r\n                                                         (onSelect)=\"onCustomersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                         [settings]=\"MultiselectSettingsById\" [data]=\"CustomerList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [placeholder]=\"'Select Carriers'\"\r\n                                                         (onSelect)=\"onCarriersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCarriersDeSelect($event)\"\r\n                                                         [settings]=\"MultiselectSettingsById\" [data]=\"CarrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"SourceRegions\">Source Region(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [placeholder]=\"'Select Source Regions'\"\r\n                                                     (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                     (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\"\r\n                                                     [settings]=\"MultiselectSettingsById\" [data]=\"SourceRegionList\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                            <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                  [data]=\"TerminalsAndBulkPlantList\"\r\n                                                  formControlName=\"TerminalsAndBulkPlants\"\r\n                                                  [settings]=\"MultiSelectSettingsByGroup\">\r\n                            </angular2-multiselect>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>From</label>\r\n                            <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                                   (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                                   [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>To</label>\r\n                            <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                                   [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                                   myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                                <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                                    Show Archived\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                            <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                            <button id=\"filter-fuel-surcharge-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n        </ng-template>\r\n</form>\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { FuelSurchargeService } from '../services/fuelsurcharge.service';\r\nimport { FuelSurchargeGridModel, FuelSurchargeInputModel, FuelSurchargeIndexViewModel } from '../models/CreateFuelSurcharge';\r\nimport { Subject } from 'rxjs';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { ViewFuelSurchargePricingdetailsComponent } from './view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ViewHistoricalPriceComponent } from './view-historical-price/view-historical-price.component';\r\nimport { Router } from '@angular/router';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-view-fuel-surcharge',\r\n  templateUrl: './view-fuel-surcharge.component.html',\r\n  styleUrls: ['./view-fuel-surcharge.component.css']\r\n})\r\nexport class ViewFuelSurchargeComponent implements OnInit {\r\n\r\n    public IsLoading: boolean = false;\r\n    public viewFuelSurchargeForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Fsmodel: FuelSurchargeIndexViewModel;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n\r\n    public FuelSurchargeList: FuelSurchargeGridModel[] = [];\r\n    public FuelSurchargeInput: FuelSurchargeInputModel;\r\n    constructor(private fb: FormBuilder, private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService,private router:Router,private cdr:ChangeDetectorRef) {\r\n        \r\n    }\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n\r\n    @ViewChild(ViewFuelSurchargePricingdetailsComponent) fuelSurchageComponent: ViewFuelSurchargePricingdetailsComponent;\r\n    @ViewChild(ViewHistoricalPriceComponent) historicalPriceComponent: ViewHistoricalPriceComponent;\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.viewFuelSurchargeForm = this.createForm();\r\n        this.initializeFuelSurchargeDatatableGrid();\r\n    }\r\n    ngOnDestroy() {\r\n        this.rerender_destroy();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getFuelSurchargeGridDetails();\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FuelSurchargeIndexViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    getFuelSurchargePricingDetails(fuelSurchargeIndexId: number) {\r\n        this.fuelSurchageComponent.getFuelSurchargePricingDetails(fuelSurchargeIndexId);\r\n    }\r\n\r\n    getHistoricalPriceDetails(fuelSurchargeIndexId: number) {\r\n        this.historicalPriceComponent.getHistoricalPriceDetails(fuelSurchargeIndexId);\r\n    }\r\n\r\n    archiveFuelSurchargeTable(fuelSurchargeIndexId: number) {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.archiveFuelSurchargeTable(fuelSurchargeIndexId)\r\n            .subscribe((response: any) => {\r\n                this.IsLoading = false;\r\n                //this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected fuel surcharge table archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                }\r\n            });\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewFuelSurchargeForm.get('Carriers').patchValue([]);\r\n        this.viewFuelSurchargeForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                break;\r\n        }\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewFuelSurchargeForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers().subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null; \r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {;\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewFuelSurchargeForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewFuelSurchargeForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.IsLoading = true\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewFuelSurchargeForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Fsmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Fsmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#fuel-surcharge-grid-datatable\").DataTable().clear().destroy();\r\n        this.getFuelSurchargeGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getFuelSurchargeGridDetails();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n\r\n    clearForm() {\r\n        this.viewFuelSurchargeForm.reset();\r\n        $(\"#fuel-surcharge-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    getFuelSurchargeGridDetails() {;\r\n        var input = new FuelSurchargeInputModel();\r\n\r\n        var selectedTableTypes = this.viewFuelSurchargeForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewFuelSurchargeForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewFuelSurchargeForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewFuelSurchargeForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewFuelSurchargeForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewFuelSurchargeForm.controls.fromDate.value;\r\n        input.EndDate = this.viewFuelSurchargeForm.controls.toDate.value;\r\n        input.IsArchived = this.viewFuelSurchargeForm.controls.isArchived.value;\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n        this.IsLoading = true\r\n        this.cdr.detectChanges()\r\n        this.fuelsurchargeService.getFuelSurchargeGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if(data && data.length>0){\r\n                this.FuelSurchargeList = data as FuelSurchargeGridModel[];\r\n            }\r\n            this.dtTrigger.next();\r\n           \r\n        });\r\n    }\r\n\r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n    rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    setfromDate($event) {\r\n        this.viewFuelSurchargeForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewFuelSurchargeForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n\r\n    public viewFuelSurcharge(fsurcharId: number, mode: string) {\r\n        let operation = { FsurcharId: fsurcharId, Mode: mode };\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.next(JSON.stringify(operation));\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(1);\r\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew/' + fsurcharId]);\r\n\r\n    }\r\n\r\n    initializeFuelSurchargeDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Fuel Surcharge', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Fuel Surcharge', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n        \r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { HistoricalPriceModel, HistoricalPriceDetailsModel } from '../../models/CreateFuelSurcharge';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { FuelSurchargeService } from '../../services/fuelsurcharge.service';\r\n\n@Component({\n    selector: 'app-view-historical-price',\n    templateUrl: './view-historical-price.component.html',\n    styleUrls: ['./view-historical-price.component.css']\n})\nexport class ViewHistoricalPriceComponent implements OnInit {\r\n\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) { }\n    public HistoricalPrice: HistoricalPriceModel;\n    public SinlgeselectSettingsById = {};\n    public PeriodList: any[] = [];\n    public HistoricalPriceDetailList: HistoricalPriceDetailsModel[];\n    public SelectedPeriod: any[] = [];\n    public SelectedFuelSurchargeIndexId: any;\n  \n\n    ngOnInit() {\n        this.SinlgeselectSettingsById = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.getPeriod();\n    }\n\n    private getPeriod(): void {\n        for (let i = 1; i <= 12; i++) {\r\n            this.PeriodList.push({ Id: i, Name: i });\r\n        }\r\n    }\n\n    getHistoricalPriceDetails(fuelSurchargeIndexId: number) {\r\n\r\n        this.SelectedPeriod = [];\r\n        this.SelectedPeriod.push({ Id: 6, Name: 6 });\r\n\r\n\r\n        this.fuelsurchargeService.getHistoricalPrice(fuelSurchargeIndexId, 6).subscribe(data => {\r\n            this.HistoricalPrice = data as HistoricalPriceModel;\r\n            this.HistoricalPriceDetailList = this.HistoricalPrice.HistoricalPriceDetails;\r\n            this.SelectedFuelSurchargeIndexId = fuelSurchargeIndexId;\r\n        });\r\n\r\n\r\n    }\n\n    fetchHistoricalPrice() {\r\n        this.fuelsurchargeService.getHistoricalPrice(this.SelectedFuelSurchargeIndexId, this.SelectedPeriod[0].Id).subscribe(data => {\r\n            this.HistoricalPrice = data as HistoricalPriceModel;\r\n            this.HistoricalPriceDetailList = this.HistoricalPrice.HistoricalPriceDetails;\r\n        });\r\n    }\n}\n","<!--<p>view-historical-price works!</p>-->\r\n<div class=\"mx-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n            <label for=\"Periods\">Select {{HistoricalPrice?.PeriodName}}</label>\r\n            <ng-multiselect-dropdown [(ngModel)]=\"SelectedPeriod\"\r\n                                     id=\"Periods\"\r\n                                     [settings]=\"SinlgeselectSettingsById\" [data]=\"PeriodList\"> \r\n            </ng-multiselect-dropdown>\r\n        </div>\r\n        <div class=\"col-sm-6 pt-1\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n            <button id=\"fetch-historical-price\" type=\"button\" class=\"btn btn-lg mt-4 btn-primary mb-2 valid\" (click)=\"fetchHistoricalPrice()\">Fetch Price</button>\r\n        </div>\r\n        <div class=\"col-sm-12 form-group\" *ngIf=\"HistoricalPrice?.IndexType==2\">\r\n            <div class=\"alert alert-info\">\r\n                <strong>${{HistoricalPrice?.ManualIndexPrice}}</strong> per Gallon (Including Taxes) on {{HistoricalPrice?.ManualIndexPriceDate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"col-sm-12\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n    <table class=\"table table-bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th>Index Product</th>\r\n                <th>Index Area</th>\r\n                <th>Index Period</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{{HistoricalPrice?.IndexProduct}}</td>\r\n                <td>{{HistoricalPrice?.IndexArea}}</td>\r\n                <td>{{HistoricalPrice?.IndexPeriod}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-center\" width=\"47%\">Published Date</th>\r\n                <th class=\"text-center\" width=\"48%\">Price per Gallon</th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n    <div style=\"max-height:300px;overflow:auto\" id=\"historyTable\">\r\n        <table class=\"table table-bordered table-hover mb0\">\r\n            <tbody>\r\n                <ng-container *ngIf=\"HistoricalPrice && HistoricalPrice.HistoricalPriceDetails && HistoricalPrice.HistoricalPriceDetails.length>0\">\r\n                    <tr *ngFor=\"let history of HistoricalPrice.HistoricalPriceDetails\">\r\n                        <td class=\"text-center vmiddle\" width=\"50%\">\r\n                            {{history.PublishDate}}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text\">$</span>\r\n                                </div>\r\n                                <span class=\"p-2 border px-4\">{{history.Price}}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MasterComponent } from './master/master.component';\nimport { CreateFuelSurchargeComponent } from './Create/create-fuel-surcharge.component';\nimport { ViewFuelSurchargeComponent } from './View/view-fuel-surcharge.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { ViewFuelSurchargePricingdetailsComponent } from './View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component';\nimport { ViewHistoricalPriceComponent } from './View/view-historical-price/view-historical-price.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nconst route: Routes = [\n    { path: '', component: MasterComponent },\n    { path: 'CreateNew', component: MasterComponent },\n    { path: 'CreateNew/:fuelsurchargeId', component: MasterComponent }\n]\n\n@NgModule({\n  declarations: [\n    MasterComponent, \n    CreateFuelSurchargeComponent, \n    ViewFuelSurchargeComponent, \n    ViewFuelSurchargePricingdetailsComponent, \n    ViewHistoricalPriceComponent,\n  ],\n  imports: [\n      CommonModule, \n      SharedModule, \n      FormsModule, \n      DataTablesModule, \n      DirectiveModule, \n      RouterModule.forChild(route),\n      AngularMultiSelectModule\n  ]\n})\nexport class FuelsurchargeModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FuelSurchargeService } from '../services/fuelsurcharge.service';\r\n\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n viewType = 0\r\n    constructor(private router: Router, private fuelsurchargeService: FuelSurchargeService ) { }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        let _viewType = localStorage.getItem(\"fuelSurchargeTabId\");\r\n        if (_viewType && +_viewType>0) {\r\n            this.viewType = +_viewType;\r\n        }\r\n\r\n        this.fuelsurchargeService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\r\n                this.viewType = 2;\r\n\r\n            }\r\n            else {\r\n                this.viewType = 1;\r\n            }\r\n        })\r\n        this.viewType = +_viewType;\r\n\r\n        \r\n    }\r\n    ngAfterViewInit() {\r\n     \r\n        this.changeViewType(this.viewType)\r\n    }\r\n\r\n    public changeViewType(value: number) {\r\n\r\n        localStorage.setItem(\"fuelSurchargeTabId\", value.toString());\r\n\r\n        this.viewType = value;\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.next(null);\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(value);\r\n            \r\n\r\n        //if(this.viewType==1)\r\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew']);\r\n    }\r\n\r\n   \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Fuel Surcharge</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Fuel Surcharge</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-fuel-surcharge *ngIf=\"viewType==1\"></app-create-fuel-surcharge>\r\n\r\n                <app-view-fuel-surcharge *ngIf=\"viewType==2\"></app-view-fuel-surcharge>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { DropdownItem, DropdownItemExt} from 'src/app/statelist.service';\r\n\r\nexport class FuelSurchargeTableModel {    \r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n\r\n    public PriceRangeStartValue: number;\r\n    public PriceRangeEndValue: number;\r\n    public PriceRangeInterval: number;\r\n\r\n    public FuelSurchargeStartPercentage: number;     \r\n    public SurchargeInterval: number;\r\n\r\n    public Id: string;\r\n    public SupplierId?: number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\nexport class FuelSurchargeIndexViewModel {    \r\n    FuelSurchargeIndexId?: number;\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];    \r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    FuelSurchargeProducts: DropdownItemExt[] = [];\r\n    FuelSurchargePeriods: DropdownItemExt[] = [];\r\n    FuelSurchargeAreas: DropdownItemExt[] = [];\r\n\r\n    ProductId?: number;\r\n    PeriodId?: number;\r\n    TableTypeId: number;\r\n    AreaId?: number;\r\n    WeekDay: string=\"Mon\";\r\n    Weeks: DropdownItemExt[] = [];\r\n    Months: DropdownItemExt[] = [];\r\n    SourceMonths: DropdownItemExt[] = [];\r\n    Annualy: DropdownItemExt[] = [];\r\n    SourceAnnualy: DropdownItemExt[] = [];\r\n    \r\n    APILatestIndexPrice: number;\r\n    ApiAdjustIndexPriceDate: Date;\r\n    ApiEffectiveDate: any;\r\n    ManualLatestIndexPrice: number;\r\n    ManualEffectiveDate: Date;\r\n    IsManualUpdate: boolean=false;\r\n    FuelSurchargeTable: FuelSurchargeTableModel = new FuelSurchargeTableModel(); //input model\r\n    TableName: string;\r\n    Notes: string;\r\n    IndexPriceDate: Date;\r\n    StatusId: number=2;\r\n    GeneratedSurchargeTable: FuelSurchargeTableModel[]; // FS table genearted\r\n}\r\n\r\nexport class FuelSurchargeInputModel {\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class FuelSurchargeGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public TableTypeNew: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public IndexProduct: number;\r\n    public IndexArea: string;\r\n    public IndexPeriod: string;\r\n    public IndexType: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n    // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n}\r\n\r\nexport class FuelSurchargePricingModel {\r\n    public PriceRangeStartValue: number;\r\n    public PriceRangeEndValue: number;\r\n    public FuelSurchargeStartPercentage: string;\r\n}\r\n\r\nexport class HistoricalPriceModel {\r\n    public IndexPeriod: string;\r\n    public IndexProduct: string;\r\n    public IndexArea: string;\r\n    public IndexTypeName: string;\r\n    public IndexType: number;\r\n    public ManualIndexPrice: string;\r\n    public ManualIndexPriceDate: string;\r\n    public PeriodName: string;\r\n    HistoricalPriceDetails: HistoricalPriceDetailsModel[]; \r\n}\r\n\r\nexport class HistoricalPriceDetailsModel {\r\n    public PublishDate: string;\r\n    public Price: string;\r\n}\r\n\r\n\r\n"]}