{"version":3,"sources":["./src/app/company-addresses/region/service/region.service.ts","./src/app/fuelsurcharge/Create/create-fuel-surcharge.component.ts","./src/app/fuelsurcharge/Create/create-fuel-surcharge.component.html","./src/app/fuelsurcharge/View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component.ts","./src/app/fuelsurcharge/View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component.html","./src/app/fuelsurcharge/View/view-fuel-surcharge.component.ts","./src/app/fuelsurcharge/View/view-fuel-surcharge.component.html","./src/app/fuelsurcharge/View/view-historical-price/view-historical-price.component.ts","./src/app/fuelsurcharge/View/view-historical-price/view-historical-price.component.html","./src/app/fuelsurcharge/fuelsurcharge.module.ts","./src/app/fuelsurcharge/master/master.component.ts","./src/app/fuelsurcharge/master/master.component.html","./src/app/fuelsurcharge/models/CreateFuelSurcharge.ts"],"names":[],"mappings":"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","file":"fuelsurcharge-fuelsurcharge-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { FuelSurchargeIndexViewModel } from 'src/app/fuelsurcharge/models/CreateFuelSurcharge';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\r\nimport { Subject, forkJoin, merge, BehaviorSubject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { AnnualyEnum, FreightTableStatus, MonthEnum, PeriodEnum, SourceRegionInputModel, TableType, WeekDays, WeekEnum } from 'src/app/app.enum';\r\ndeclare var currentUserCompanyId: any;\r\n\r\n@Component({\r\n    selector: 'app-create-fuel-surcharge',\r\n    templateUrl: './create-fuel-surcharge.component.html',\r\n    styleUrls: ['./create-fuel-surcharge.component.css']\r\n})\r\nexport class CreateFuelSurchargeComponent implements OnInit {\r\n\r\n    public rcForm: FormGroup;\r\n    public DtTrigger: Subject<any> = new Subject();\r\n    //public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public IsLoading: boolean = false;\r\n    public Fsmodel: FuelSurchargeIndexViewModel;\r\n    public CurrentCompanyId: number;\r\n    public SelectedCountryId: number = -1;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public FuelSurchargeProductList: DropdownItemExt[];\r\n    public FuelSurchargePeriodList: DropdownItemExt[];\r\n    public FuelSurchargeAreaList: DropdownItemExt[];\r\n    public APILatestIndexPrice: number;\r\n\r\n    public IsEditLoaded = true;\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected:boolean = false;\r\n\r\n    public IsMonthlyVisible = false;\r\n    public IsWeeklyVisible = false;\r\n    public IsAnnualyVisible = false;\r\n\r\n    public IsGeneratedSurchargeTable = false;\r\n    public ShowMessage = false;\r\n\r\n    public ServiceResponse: any;\r\n    public viewType = 1;\r\n\r\n    public fuelsurchargeId?: number;\r\n    public fuelsurchargeMode?: string;\r\n    public disableInputControls: boolean = false;\r\n    public AllowTableName: boolean;\r\n    //min max date\r\n    public MinStartDate = new Date();\r\n    public MaxStartDate = new Date();\r\n    public MinToDate = new Date();\r\n    public MinFromDate = new Date();\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    public WeekList: DropdownItemExt[];\r\n    public MonthList: DropdownItemExt[];\r\n    public SourceMonthList: DropdownItemExt[];\r\n    public AnnualyList: DropdownItemExt[];\r\n    public SourceAnnualyList: DropdownItemExt[];\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService,\r\n        private regionService: RegionService, private http: HttpClient, private carrierService: CarrierService,private cdr:ChangeDetectorRef) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.isLoadingSubject = new BehaviorSubject(false);\r\n        this.CurrentCompanyId = Number(currentUserCompanyId);\r\n        this.getDefaultServingCountry();\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            closeDropDownOnSelection: true,\r\n            text: \"Select Terminal(s) and Bulk Plant(s)\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n        this.IsMasterSelected = true;\r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        var dt = moment(new Date()).toDate();\r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 20);\r\n        this.MinFromDate.setFullYear(this.MinFromDate.getFullYear() - 20);\r\n        this.rcForm.controls.IndexPriceDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n        //this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment(dt).format('MM/DD/YYYY'));\r\n        //default view type =1 so need to add required validations.\r\n        this.AddRemoveValidations([this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas'), this.rcForm.get('ApiAdjustIndexPriceDate')],\r\n            [this.rcForm.get('ManualLatestIndexPrice'), this.rcForm.get('ManualEffectiveDate')]);\r\n\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.fuelsurchargeId = stringify.FsurcharId;\r\n                this.fuelsurchargeMode = stringify.Mode;\r\n            }\r\n        });\r\n\r\n        // with order page integration\r\n        let id = localStorage.getItem(\"FuelSurchargeTabId\");\r\n        if (id && +id > 0) {\r\n            this.fuelsurchargeId = Number(id);\r\n            this.fuelsurchargeMode = \"VIEW\";\r\n            localStorage.removeItem(\"FuelSurchargeTabId\");\r\n        }\r\n\r\n\r\n        var WeekList: DropdownItemExt[] = [];\r\n        var MonthList: DropdownItemExt[] = [];\r\n        var sourceMonthList: DropdownItemExt[] = [];\r\n        var AnnualyList: DropdownItemExt[] = [];\r\n        var sourceAnnualyList: DropdownItemExt[] = [];\r\n\r\n        for (let element in WeekEnum) {\r\n            WeekList.push({ Id: element, Name: WeekEnum[element], Code: \"\" });\r\n        }\r\n        this.WeekList = WeekList;\r\n        this.rcForm.controls['Weeks'].setValue(this.WeekList.slice(0, 1));\r\n\r\n        for (let element in MonthEnum) {\r\n\r\n            MonthList.push({ Id: element, Name: MonthEnum[element], Code: \"\" });\r\n        }\r\n\r\n        this.MonthList = MonthList;\r\n        this.rcForm.controls['Months'].setValue(this.MonthList.slice(0, 1)); \r\n        this.IsWeeklyVisible = true;\r\n       \r\n        for (let i = 6; i >=-6; i--) {\r\n            let m = new Date().setMonth(new Date().getMonth() + i, 1);\r\n            sourceMonthList.push({ Id: moment(m).format(), Name: moment(m).format('MMMM YYYY'), Code: \"\"});\r\n        }\r\n\r\n        this.SourceMonthList = sourceMonthList;\r\n        \r\n        this.rcForm.controls['SourceMonths'].setValue(this.SourceMonthList.slice(5, 6));\r\n       \r\n        for (let i = 1; i >=-1; i--) {\r\n            let y = new Date().setFullYear(new Date().getFullYear() + i, 1);\r\n            sourceAnnualyList.push({ Id: moment(y).format(), Name: moment(y).format('YYYY'), Code: \"\" });\r\n        }\r\n\r\n        this.SourceAnnualyList = sourceAnnualyList;\r\n        this.rcForm.controls['SourceAnnualy'].setValue(this.SourceAnnualyList.slice(0, 1));\r\n       \r\n        for (let element in AnnualyEnum) {\r\n\r\n            AnnualyList.push({ Id: element, Name: AnnualyEnum[element], Code: \"\" });\r\n        }\r\n\r\n        this.AnnualyList = AnnualyList;\r\n        this.rcForm.controls['Annualy'].setValue(this.AnnualyList.slice(0, 1));\r\n\r\n           \r\n        this.rcForm.get('FuelSurchargePeriods').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('ApiAdjustIndexPriceDate').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('WeekDay').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n            this.rcForm.get('Weeks').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('Annualy').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('SourceAnnualy').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n        this.rcForm.get('Months').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n            this.rcForm.get('SourceMonths').valueChanges.pipe(distinctUntilChanged())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.setValidFromDate();\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.getTerminalsBulkPlant();\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Carriers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.onCarriersChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Customers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.onCustomersChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (JSON.stringify(prev) != JSON.stringify(next) && this.IsEditLoaded) this.SourceRegionChange(prev, next);\r\n            });\r\n\r\n        if (this.SelectedCountryId == 2) {\r\n            this.changeViewType(this.SelectedCountryId);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.fuelsurchargeId != null && this.fuelsurchargeId != undefined) {\r\n            //this.isLoadingSubject = new BehaviorSubject(false);\r\n            this.IsEditLoaded = false;            \r\n            this.getFuelSurchargeTable(this.fuelsurchargeId); //existing fuel charge.\r\n        }\r\n    }\r\n\r\n    getDefaultServingCountry() {\r\n        this.carrierService.getDefaultServingCountry(this.CurrentCompanyId).subscribe(data => {\r\n            this.SelectedCountryId = Number(data.DefaultCountryId);\r\n            this.getFuelSurchargeProducts(this.SelectedCountryId);\r\n            this.getFuelSurchargePeriods(this.SelectedCountryId);\r\n            this.getFuelSurchargeArea(this.SelectedCountryId);\r\n        });\r\n    }\r\n\r\n    private modeChangeApiORmanualValidators(IsManualUpdate: boolean) {\r\n        if (!IsManualUpdate) {\r\n            var selectedTableType = this.rcForm.controls['TableTypes'].value as DropdownItem[];\r\n            this.Fsmodel.TableTypeId = selectedTableType[0].Id;\r\n            if (selectedTableType[0].Id == TableType.Master) {\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]) //, this.rcForm.get('Carriers')\r\n            } else if (selectedTableType[0].Id == TableType.Customer) {\r\n                this.AddRemoveValidations([this.rcForm.get('Customers')], [this.rcForm.get('Carriers')]);\r\n            } else {\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers')], [this.rcForm.get('Customers')]);\r\n            }\r\n            \r\n            this.AddRemoveValidations([this.rcForm.get('SourceRegions'), this.rcForm.get('TableTypes'), this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas')],\r\n                [this.rcForm.get('ManualLatestIndexPrice'), this.rcForm.get('ManualEffectiveDate')]);\r\n\r\n            if (this.IsWeeklyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('ApiAdjustIndexPriceDate')], [this.rcForm.get('SourceAnnualy'), this.rcForm.get('SourceMonths')]);\r\n            } else if (this.IsMonthlyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('SourceMonths')], [this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceAnnualy')]);\r\n            } else if (this.IsAnnualyVisible) {\r\n                this.AddRemoveValidations([this.rcForm.get('SourceAnnualy')], [this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceMonths')]);\r\n            }\r\n        }\r\n        if (IsManualUpdate) {\r\n            this.rcForm.get('ManualLatestIndexPrice').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.get('ManualLatestIndexPrice').updateValueAndValidity();\r\n            this.AddRemoveValidations([this.rcForm.get('ManualEffectiveDate')],\r\n                [this.rcForm.get('FuelSurchargeProducts'), this.rcForm.get('FuelSurchargePeriods'), this.rcForm.get('FuelSurchargeAreas'), this.rcForm.get('ApiAdjustIndexPriceDate'), this.rcForm.get('SourceMonths'), this.rcForm.get('SourceAnnualy')]);\r\n        }\r\n    }\r\n\r\n    private modeChangePublishORdraftValidators(statusId: number) {\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (statusId == FreightTableStatus.Draft) {\r\n            this.clearAllValidations(this.rcForm); // clear all validation\r\n            this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for draft \r\n        }\r\n        else if (statusId == FreightTableStatus.Published) {\r\n            this.modeChangeApiORmanualValidators(this.rcForm.get('IsManualUpdate').value);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValidators([Validators.required]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').updateValueAndValidity();\r\n            this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').setValidators([Validators.required, Validators.pattern(this.decimalSupportedRegx)]);\r\n            this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n        this.rcForm.get('IsManualUpdate').setValue(value == 1 ? false : true);\r\n        this.modeChangeApiORmanualValidators(value == 1 ? false : true);\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FuelSurchargeIndexViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            IsManualUpdate: new FormControl(this.Fsmodel.IsManualUpdate),\r\n            ProductId: new FormControl(this.Fsmodel.ProductId),\r\n            PeriodId: new FormControl(this.Fsmodel.PeriodId),\r\n            TableTypeId: new FormControl(this.Fsmodel.TableTypeId),\r\n            AreaId: new FormControl(this.Fsmodel.AreaId),\r\n            FuelSurchargeIndexId: new FormControl(this.Fsmodel.FuelSurchargeIndexId),\r\n            TableName: new FormControl(this.Fsmodel.TableName, Validators.required),\r\n            Notes: new FormControl(this.Fsmodel.Notes),\r\n            IndexPriceDate: new FormControl(this.Fsmodel.IndexPriceDate),\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions, [Validators.required]),\r\n            WeekDay: new FormControl(this.Fsmodel.WeekDay),\r\n            Weeks: new FormControl(this.Fsmodel.Weeks),\r\n            Months: new FormControl(this.Fsmodel.Months),\r\n            SourceMonths: new FormControl(this.Fsmodel.SourceMonths),\r\n            Annualy: new FormControl(this.Fsmodel.Annualy),\r\n            SourceAnnualy: new FormControl(this.Fsmodel.SourceAnnualy),\r\n            ApiEffectiveDate: new FormControl(''),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            FuelSurchargeProducts: new FormControl(this.Fsmodel.FuelSurchargeProducts),\r\n            FuelSurchargePeriods: new FormControl(this.Fsmodel.FuelSurchargePeriods),\r\n            FuelSurchargeAreas: new FormControl(this.Fsmodel.FuelSurchargeAreas),\r\n            APILatestIndexPrice: new FormControl(this.Fsmodel.APILatestIndexPrice),\r\n            ApiAdjustIndexPriceDate: new FormControl(this.Fsmodel.ApiAdjustIndexPriceDate),\r\n            ManualLatestIndexPrice: new FormControl(this.Fsmodel.ManualLatestIndexPrice),\r\n            ManualEffectiveDate: new FormControl(this.Fsmodel.ManualEffectiveDate),\r\n            StatusId: new FormControl(this.Fsmodel.StatusId),\r\n            FuelSurchargeTable: new FormGroup({\r\n                StartDate: new FormControl(this.Fsmodel.FuelSurchargeTable.StartDate, [Validators.required]),\r\n                EndDate: new FormControl(this.Fsmodel.FuelSurchargeTable.EndDate),\r\n                PriceRangeStartValue: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeStartValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]), //, this.lowerThan('PriceRangeEndValue')\r\n                PriceRangeEndValue: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeEndValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                PriceRangeInterval: new FormControl(this.Fsmodel.FuelSurchargeTable.PriceRangeInterval, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                FuelSurchargeStartPercentage: new FormControl(this.Fsmodel.FuelSurchargeTable.FuelSurchargeStartPercentage, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                SurchargeInterval: new FormControl(this.Fsmodel.FuelSurchargeTable.SurchargeInterval, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }),\r\n            GeneratedSurchargeTable: new FormArray([\r\n                new FormControl(this.Fsmodel.GeneratedSurchargeTable)\r\n            ])\r\n        }, { validator: RangeValidator });\r\n    }\r\n\r\n    //#region start : calander related functionality \r\n    public setApiAdjustIndexPriceDate(event: any): void {\r\n        this.IsMonthlyVisible = false;\r\n        this.IsWeeklyVisible = false;\r\n        this.IsAnnualyVisible = false;\r\n        if (event!=\"\") this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(event);\r\n        if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != \"\" && this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate != undefined) {\r\n            let selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            if (selectedPeriod != null && selectedPeriod != undefined && selectedPeriod.length > 0) {\r\n                if (selectedPeriod[0].Name.toLowerCase() ==  \"Weekly\".toLowerCase()) {\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                else if (selectedPeriod[0].Name.toLowerCase() == \"Monthly\".toLowerCase()) {\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n\r\n                else if (selectedPeriod[0].Name.toLowerCase() == \"Annualy\".toLowerCase()) {\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n                this.setValidFromDate();\r\n            }\r\n        }\r\n    }\r\n\r\n    public onFuelSurchargePeriodsSelect(item: any): void {\r\n        this.IsMonthlyVisible = false;\r\n        this.IsWeeklyVisible = false;\r\n        this.IsAnnualyVisible = false;\r\n        //\r\n       // if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate != undefined) {\r\n            let selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Weekly\".toLowerCase()) {\r\n                this.IsWeeklyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            }\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Monthly\".toLowerCase()) {\r\n                this.IsMonthlyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().startOf('month').format('MM/DD/YYYY'));\r\n            }\r\n            if (selectedPeriod[0].Name.toLowerCase() == \"Annualy\".toLowerCase()) {\r\n                this.IsAnnualyVisible = true;\r\n                this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().startOf('year').format('MM/DD/YYYY'));\r\n            }\r\n        //}\r\n    }\r\n\r\n\r\n    public setManualEffectiveDate(event: any): void {\r\n        if (event != \"\") {\r\n            this.rcForm.controls.ManualEffectiveDate.setValue(event);\r\n            this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(event).format('MM/DD/YYYY'));\r\n        }\r\n    }\r\n\r\n    public setStartDate(event: any): void {\r\n        this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(event);\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != undefined && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != \"\")\r\n            this.MinToDate = this.rcForm.controls.FuelSurchargeTable.get('StartDate').value;\r\n    }\r\n\r\n    public setEndDate(event: any): void {\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').setValue(event);\r\n    }\r\n    // end : calander related functionality\r\n\r\n    public onTableTypeDeSelect(item: any): void {\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        if (selectedTableType.length == 0) {\r\n            this.IsMasterSelected = true;\r\n            this.rcForm.get('Carriers').patchValue([]);\r\n            this.rcForm.get('Customers').patchValue([]);\r\n            this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n            this.rcForm.get('SourceRegions').patchValue([]);\r\n            this.IsSourceRegionSelected = false;\r\n            this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'),\r\n                this.rcForm.get('Carriers')]);\r\n        }\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        \r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                break;\r\n            case 2: // customer\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Carriers')]);\r\n\r\n                break;\r\n            case 3: //carrier\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Customers')]);\r\n                break;\r\n        }\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n    }\r\n\r\n    public onCarriersChange(prev: any, next: any): void {\r\n        this.onCarriersOrCustomersChange(prev, next);\r\n    }\r\n\r\n    public onCustomersChange(prev: any, next: any): void {\r\n        this.onCarriersOrCustomersChange(prev, next);\r\n    }\r\n\r\n    public onCarriersOrCustomersChange(prev: any, next: any): void {\r\n        if (this.IsMasterSelected) return;\r\n        this.rcForm.get('SourceRegions').patchValue([]);\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());         \r\n    }\r\n   \r\n    public onFetchLastIndexPrice() {\r\n        var selectedArea = this.rcForm.get('FuelSurchargeAreas').value as DropdownItemExt[];\r\n        var selectedProduct = this.rcForm.get('FuelSurchargeProducts').value as DropdownItem[];\r\n        var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n        //if (selectedProduct != undefined && selectedPeriod != undefined && selectedProduct.length == 1 && selectedPeriod.length == 1)\r\n        //    this.getFuelIndexPrice(selectedPeriod[0].Code, selectedProduct[0].Code, moment().format(\"MM-DD-YYYY\"));\r\n        if (selectedArea != undefined && selectedProduct != undefined && selectedPeriod != undefined && selectedArea != undefined && selectedProduct.length == 1 && selectedPeriod.length == 1 && selectedArea.length == 1) {\r\n            var selectedAreaCode = this.FuelSurchargeAreaList.filter(x => x.Id == selectedArea[0].Id)[0].Code;\r\n            var selectedPeriodCode = this.FuelSurchargePeriodList.filter(x => x.Id == selectedPeriod[0].Id)[0].Code;\r\n            this.getFuelIndexPrice(selectedPeriodCode, selectedProduct[0].Code, moment().format(\"MM-DD-YYYY\"), selectedAreaCode);\r\n        }\r\n    }\r\n\r\n    public onGenerateSurchargeTable(): void {\r\n        this.ShowMessage = false;\r\n        this.IsGeneratedSurchargeTable = false;\r\n        var gst = this.rcForm.controls['GeneratedSurchargeTable'] as FormArray\r\n        var fst = this.rcForm.controls['FuelSurchargeTable'] as FormGroup\r\n        gst.clear();\r\n        this.modeChangePublishORdraftValidators(FreightTableStatus.Published);\r\n        this.modeChangeApiORmanualValidators(this.rcForm.get(\"IsManualUpdate\").value);\r\n        this.markFormGroupTouched(this.rcForm)\r\n\r\n        if (!fst.valid) return;\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getGenerateSurchargeTable(fst.get('PriceRangeStartValue').value,\r\n            fst.get('PriceRangeEndValue').value, fst.get('PriceRangeInterval').value,\r\n            fst.get('SurchargeInterval').value, fst.get('FuelSurchargeStartPercentage').value).subscribe(async (data) => {\r\n                var dt = await (data);\r\n                dt.forEach(res => {\r\n                    gst.push(new FormControl({\r\n                        FuelSurchargeStartPercentage: res.FuelSurchargeStartPercentage,\r\n                        PriceRangeStartValue: res.PriceRangeStartValue,\r\n                        PriceRangeEndValue: res.PriceRangeEndValue\r\n                    }))\r\n                });\r\n\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        this.IsGeneratedSurchargeTable = true;\r\n        //console.log(this.rcForm.controls['GeneratedSurchargeTable'].value)\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private clearAllControlValue(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.patchValue([]);;\r\n            if (control.controls) {\r\n                this.clearAllControlValue(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();\r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSubmit(fuelSurchageStatus: number): void {\r\n        this.ShowMessage = false;\r\n        this.rcForm.get('StatusId').setValue(fuelSurchageStatus);\r\n        this.modeChangeApiORmanualValidators(this.rcForm.get(\"IsManualUpdate\").value);\r\n        this.modeChangePublishORdraftValidators(fuelSurchageStatus);\r\n        this.markFormGroupTouched(this.rcForm)\r\n        if (!this.IsGeneratedSurchargeTable && fuelSurchageStatus == 2) {\r\n            this.ShowMessage = true;\r\n            return;\r\n        }\r\n\r\n        if (this.rcForm.valid) {\r\n            this.Save(fuelSurchageStatus);\r\n        }\r\n    }\r\n    public clearForm() {\r\n\r\n        this.rcForm.get('TableName').patchValue('');   \r\n        this.rcForm.get('SourceRegions').patchValue(''); \r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue('');  \r\n\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').patchValue('');\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').patchValue('');\r\n\r\n        this.AllowTableName = true\r\n        this.disableInputControls = false;\r\n        this.IsGeneratedSurchargeTable = false;\r\n\r\n        this.rcForm.get('TableName').clearValidators();\r\n        this.rcForm.get('TableName').updateValueAndValidity();\r\n        this.rcForm.get('SourceRegions').clearValidators(); \r\n        this.rcForm.get('SourceRegions').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('EndDate').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').updateValueAndValidity();\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').clearValidators();\r\n        this.rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').updateValueAndValidity();\r\n        \r\n    }\r\n\r\n    public onCancel() {\r\n        if (this.fuelsurchargeMode!=null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this.clearAllControlValue(this.rcForm)\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == TableType.Master));// default will master\r\n            this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.slice(0, 1));\r\n            this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.slice(0, 1));\r\n\r\n            this.IsGeneratedSurchargeTable = false;\r\n            this.IsCustomerSelected = false;\r\n            this.IsMasterSelected = true;\r\n            this.IsCarrierSelected = false;\r\n            this.IsSourceRegionSelected = false;\r\n\r\n            this.IsAnnualyVisible = false;\r\n            this.IsMonthlyVisible = false;\r\n            this.rcForm.get('SourceMonths').setValue(null);\r\n            this.rcForm.get('SourceAnnualy').setValue(null);\r\n            \r\n            this.rcForm.controls['WeekDay'].setValue(\"Mon\");\r\n            this.rcForm.controls['Weeks'].setValue(this.WeekList.slice(0, 1));\r\n            this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.slice(0, 1));            \r\n            this.IsWeeklyVisible = true;\r\n            this.rcForm.controls['FuelSurchargeTable'].get('StartDate').setValue(moment().weekday(1).format('MM/DD/YYYY'));\r\n            \r\n            this.changeViewType(1);\r\n            this.ShowMessage = false;\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n    //#region webserivce call\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await (data);\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n            this.DtTrigger.next();\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    //companyIds : Based on tableType we will be call API , if tableType master or customer or carrier, full source region,customers,carriers loads will populated.\r\n    private getSourceRegions(tableType: string): void {\r\n\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n            this.SourceRegionList.sort((a, b) => (a.Name > b.Name) ? 1 : -1)\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        this.rcForm.get('TerminalsAndBulkPlants').patchValue([]);\r\n        this.IsSourceRegionSelected = false;\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null && selectedSourceRegions.length > 0) {\r\n            this.IsSourceRegionSelected = true;\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n        } else {\r\n            this.IsLoading = false;\r\n        }\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.IsLoading = true;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n\r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n                this.DtTrigger.next();\r\n            });\r\n        }\r\n        this.IsLoading = false;\r\n    }\r\n\r\n    private getFuelSurchargeProducts(countryId: any): void {\r\n        this.fuelsurchargeService.getFuelSurchargeProducts(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargeProductList = await (data);\r\n            this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.slice(0, 1));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelSurchargePeriods(countryId: any): void {\r\n        this.fuelsurchargeService.getFuelSurchargePeriod(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargePeriodList = await (data);\r\n            this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.slice(0, 1));\r\n            //var dt = moment(new Date()).toDate();\r\n            //this.setApiAdjustIndexPriceDate(moment(dt).format('MM/DD/YYYY'));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelSurchargeArea(countryId: any): void {;\r\n        this.fuelsurchargeService.getFuelSurchargeArea(countryId).subscribe(async (data) => {\r\n            this.FuelSurchargeAreaList = await (data);\r\n            this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.slice(0, 1));\r\n            this.DtTrigger.next();\r\n        });\r\n    }\r\n\r\n    private getFuelIndexPrice(periodId: any, productType: any, fetchDate: any, areaId: any): void {\r\n        this.IsLoading = true;\r\n        if (this.SelectedCountryId == 1) {\r\n            this.fuelsurchargeService.getEIAIndexPrice(periodId, productType, fetchDate, areaId).subscribe(async (data) => {\r\n                this.APILatestIndexPrice = await (data);\r\n                this.rcForm.controls['APILatestIndexPrice'].patchValue(this.APILatestIndexPrice);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n        else {\r\n            this.fuelsurchargeService.getNRCIndexPrice(periodId, productType, fetchDate).subscribe(async (data) => {\r\n                this.APILatestIndexPrice = await (data);\r\n                this.rcForm.controls['APILatestIndexPrice'].patchValue(this.APILatestIndexPrice);\r\n                this.DtTrigger.next();\r\n                this.IsLoading = false;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n    //GET\r\n    private getFuelSurchargeTable(fuelSurchargeTableId: number): void {\r\n        //this.isLoadingSubject.next(true);;\r\n        let sorceRegionIds: string = \"\";\r\n        this.IsLoading = true\r\n        this.cdr.detectChanges()\r\n        this.http.get(this.fuelsurchargeService.getFuelSurchargeTableUrl + fuelSurchargeTableId).pipe(\r\n            map(fsIndex => {\r\n                const fsModel = fsIndex as FuelSurchargeIndexViewModel;\r\n                return fsModel;\r\n            }),\r\n            mergeMap(fsModel => {\r\n                //this.isLoadingSubject.next(true);\r\n                this.Fsmodel = fsModel;\r\n                //let companyIds: number[] = [];\r\n                if (this.fuelsurchargeId != null && this.fuelsurchargeMode.toUpperCase() == \"COPY\") { // on copy \r\n                    this.Fsmodel.FuelSurchargeIndexId = null;\r\n                    this.Fsmodel.TableName = \"\";\r\n                }\r\n                const customers = this.http.get(this.fuelsurchargeService.getSupplierCustomersUrl);\r\n                const carriers = this.http.get(this.regionService.getCarriersUrl);\r\n\r\n                let customerIds: number[] = [];\r\n                let carrierIds: number[] = [];\r\n                if (this.Fsmodel.Customers.length > 0) {\r\n                    customerIds = this.Fsmodel.Customers.map(s => s.Id);\r\n                }\r\n                if (this.Fsmodel.Carriers.length > 0) {\r\n                    carrierIds = this.Fsmodel.Carriers.map(s => s.Id);\r\n                }\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.Fsmodel.TableTypeId.toString();\r\n                sourceRegionInput.CustomerId = customerIds;\r\n                sourceRegionInput.CarrierId = carrierIds;\r\n                const sourceRegions = this.http.post(this.fuelsurchargeService.getSourceRegionsUrl, sourceRegionInput);\r\n                const tableTypes = this.http.get(this.fuelsurchargeService.getTableTypesUrl);\r\n                if (this.Fsmodel.SourceRegions != null && this.Fsmodel.SourceRegions != undefined && this.Fsmodel.SourceRegions.length > 0) {\r\n                    sorceRegionIds = this.Fsmodel.SourceRegions.map(s => s.Id).join(',');\r\n                    this.IsSourceRegionSelected = true;\r\n                }\r\n                const terminalAndBulkPlans = this.http.get(this.fuelsurchargeService.getTerminalsAndBulkPlantsUrl + sorceRegionIds)\r\n                return forkJoin([customers, carriers, sourceRegions, terminalAndBulkPlans, tableTypes]);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                //this.isLoadingSubject.next(true);\r\n                this.IsMasterSelected = false;\r\n                this.IsCustomerSelected = false;\r\n                this.IsCarrierSelected = false;\r\n\r\n                if (this.Fsmodel.TableTypeId == TableType.Master) {\r\n                    this.IsMasterSelected = true;\r\n                }\r\n                else if (this.Fsmodel.TableTypeId == TableType.Customer) {\r\n                    this.IsCustomerSelected = true;\r\n                }\r\n                else if (this.Fsmodel.TableTypeId == TableType.Carrier) {\r\n                    this.IsCarrierSelected = true;\r\n                }\r\n\r\n                if (this.Fsmodel.TableTypeId != TableType.Master) {\r\n                    this.CustomerList = result[0] as DropdownItem[];\r\n                    this.CarrierList = result[1] as DropdownItem[];\r\n                }\r\n\r\n                this.SourceRegionList = result[2] as DropdownItem[];\r\n                if (this.Fsmodel.SourceRegions != null && this.Fsmodel.SourceRegions != undefined && this.Fsmodel.SourceRegions.length > 0) {\r\n                    this.TerminalsAndBulkPlantList = result[3] as DropdownItemExt[];\r\n                }         \r\n                this.TableTypeList = result[4] as DropdownItem[];\r\n                //this.isLoadingSubject.next(true);\r\n                this.Edit(this.Fsmodel);\r\n               \r\n            });\r\n    }\r\n\r\n    //Edit\r\n    private Edit(_fs: FuelSurchargeIndexViewModel) {\r\n        if (this.rcForm) {\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            this.IsWeeklyVisible = false;\r\n            this.IsAnnualyVisible = false;\r\n            this.IsMonthlyVisible = false;\r\n            this.rcForm.controls['ProductId'].setValue(_fs.ProductId);\r\n            this.rcForm.controls['PeriodId'].setValue(_fs.PeriodId);\r\n            this.rcForm.controls['TableTypeId'].setValue(_fs.TableTypeId);\r\n            this.rcForm.controls['AreaId'].setValue(_fs.AreaId);\r\n            this.rcForm.controls['FuelSurchargeIndexId'].setValue(_fs.FuelSurchargeIndexId);\r\n            this.rcForm.controls['TableName'].setValue(_fs.TableName);\r\n            this.rcForm.controls['Notes'].setValue(_fs.Notes);\r\n            this.rcForm.controls['IndexPriceDate'].setValue(moment(_fs.IndexPriceDate).format('MM/DD/YYYY'));\r\n            this.rcForm.controls['TableTypes'].setValue(this.TableTypeList.filter(x => x.Id == _fs.TableTypeId));\r\n            _fs.IsManualUpdate ? this.changeViewType(\"2\") : this.changeViewType(\"1\");\r\n            let stringify = JSON.parse(_fs.ApiEffectiveDate);\r\n            if (!_fs.IsManualUpdate && stringify != null && stringify != undefined && stringify != \"\") {\r\n                this.IsLoading = true;\r\n                if (stringify.WeekDay != null && stringify.WeekDay != undefined && stringify.WeekDay != \"\") {\r\n                    this.rcForm.controls['WeekDay'].setValue(stringify.WeekDay);\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                if (stringify.Weeks != null && stringify.Weeks != undefined && stringify.Weeks != \"\") {\r\n                    let weeks : DropdownItemExt[] = [];\r\n                    weeks.push({ Id: JSON.parse(stringify.Weeks).Id, Name: JSON.parse(stringify.Weeks).Name, Code: \"\" });\r\n                    this.rcForm.controls['Weeks'].setValue(weeks);\r\n                    this.IsWeeklyVisible = true;\r\n                }\r\n                if (stringify.Months != null && stringify.Months != undefined && stringify.Months != \"\") {\r\n                    let months:DropdownItemExt[]=[];\r\n                    months.push({ Id: JSON.parse(stringify.Months).Id, Name: JSON.parse(stringify.Months).Name, Code: \"\" });\r\n                    this.rcForm.controls['Months'].setValue(months);\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n                if (stringify.Annualy != null && stringify.Annualy != undefined && stringify.Annualy != \"\") {\r\n                   let annualy:DropdownItemExt[]=[];\r\n                    annualy.push({ Id: JSON.parse(stringify.Annualy).Id, Name: JSON.parse(stringify.Annualy).Name, Code: \"\" });\r\n                    this.rcForm.controls['Annualy'].setValue(annualy);\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n            }\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            if (_fs.Customers != null && this.CustomerList != undefined && this.CustomerList != null ) {\r\n                if (this.CustomerList.length > 0 && _fs.Customers.length > 0) this.rcForm.controls['Customers'].setValue(this.CustomerList.filter(this.IdInComparer(_fs.Customers)));\r\n                \r\n            }\r\n            if (_fs.Carriers != null && this.CarrierList != undefined && this.CarrierList != null ) {\r\n                if (this.CarrierList.length > 0 && _fs.Carriers.length > 0) this.rcForm.controls['Carriers'].setValue(this.CarrierList.filter(this.IdInComparer(_fs.Carriers)));\r\n                \r\n            }\r\n            if (this.SourceRegionList != null && this.SourceRegionList != undefined && _fs.SourceRegions != null && _fs.SourceRegions != undefined && _fs.SourceRegions.length > 0) {\r\n                if (this.SourceRegionList.length > 0 && _fs.SourceRegions.length > 0)\r\n                    this.rcForm.controls['SourceRegions'].setValue(this.SourceRegionList.filter(this.IdInComparer(_fs.SourceRegions)));\r\n            }\r\n            if (this.TerminalsAndBulkPlantList != null && this.TerminalsAndBulkPlantList != undefined && _fs.TerminalsAndBulkPlants != null && _fs.TerminalsAndBulkPlants != undefined && _fs.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.TerminalsAndBulkPlantList.length > 0 && _fs.TerminalsAndBulkPlants.length > 0) {\r\n                    this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList.filter(this.IdInComparer(_fs.TerminalsAndBulkPlants)));\r\n                }\r\n            }\r\n            if (_fs.ProductId!=null && this.FuelSurchargeProductList != null && this.FuelSurchargeProductList != undefined && this.FuelSurchargeProductList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargeProducts'].setValue(this.FuelSurchargeProductList.filter(x => x.Id == _fs.ProductId.toString()));\r\n            } \r\n            if (_fs.PeriodId!=null && this.FuelSurchargePeriodList != null && this.FuelSurchargePeriodList != undefined && this.FuelSurchargePeriodList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargePeriods'].setValue(this.FuelSurchargePeriodList.filter(x => x.Id == _fs.PeriodId.toString()));\r\n            } \r\n            if (_fs.AreaId!=null && this.FuelSurchargeAreaList != null && this.FuelSurchargeAreaList != undefined && this.FuelSurchargeAreaList.length > 0) {\r\n                this.rcForm.controls['FuelSurchargeAreas'].setValue(this.FuelSurchargeAreaList.filter(x => x.Id == _fs.AreaId.toString()));\r\n            } \r\n            this.rcForm.controls['APILatestIndexPrice'].setValue(_fs.APILatestIndexPrice);\r\n            if (_fs.ApiAdjustIndexPriceDate != null && _fs.ApiAdjustIndexPriceDate != undefined) {\r\n                if (this.IsWeeklyVisible) {\r\n                    this.rcForm.controls['ApiAdjustIndexPriceDate'].setValue(moment(_fs.ApiAdjustIndexPriceDate).format('MM/DD/YYYY'));\r\n                } else if (this.IsMonthlyVisible) {\r\n                    this.rcForm.controls['SourceMonths'].setValue(this.SourceMonthList.filter(x => x.Name == moment(_fs.ApiAdjustIndexPriceDate).format('MMMM YYYY')));\r\n\r\n                } else if (this.IsAnnualyVisible) {\r\n                    this.rcForm.controls['SourceAnnualy'].setValue(this.SourceAnnualyList.filter(x => x.Name == moment(_fs.ApiAdjustIndexPriceDate).format('YYYY')));\r\n                }\r\n            }\r\n\r\n            this.rcForm.controls['ManualLatestIndexPrice'].setValue(_fs.ManualLatestIndexPrice);\r\n            if (_fs.ManualEffectiveDate != null && _fs.ManualEffectiveDate != undefined) {\r\n                this.rcForm.controls['ManualEffectiveDate'].setValue(moment(_fs.ManualEffectiveDate).format('MM/DD/YYYY'));\r\n            } else {\r\n                this.rcForm.get('ManualEffectiveDate').patchValue([]);\r\n            }\r\n            this.rcForm.controls['StatusId'].setValue(_fs.StatusId);\r\n\r\n            if (_fs.FuelSurchargeTable != null && _fs.FuelSurchargeTable != undefined) {\r\n                if (_fs.FuelSurchargeTable.StartDate != null && _fs.FuelSurchargeTable.StartDate != undefined) {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('StartDate').setValue(moment(_fs.FuelSurchargeTable.StartDate).format('MM/DD/YYYY'));\r\n                } else {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('StartDate').patchValue([]);\r\n                }\r\n                if (_fs.FuelSurchargeTable.EndDate != null && _fs.FuelSurchargeTable.EndDate != undefined) {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('EndDate').setValue(moment(_fs.FuelSurchargeTable.EndDate).format('MM/DD/YYYY'));\r\n                } else {\r\n                    this.rcForm.controls['FuelSurchargeTable'].get('EndDate').patchValue([]);\r\n                }\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeStartValue').setValue(_fs.FuelSurchargeTable.PriceRangeStartValue);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeEndValue').setValue(_fs.FuelSurchargeTable.PriceRangeEndValue);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('PriceRangeInterval').setValue(_fs.FuelSurchargeTable.PriceRangeInterval);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('FuelSurchargeStartPercentage').setValue(_fs.FuelSurchargeTable.FuelSurchargeStartPercentage);\r\n                this.rcForm.controls['FuelSurchargeTable'].get('SurchargeInterval').setValue(_fs.FuelSurchargeTable.SurchargeInterval);\r\n            }\r\n            //this.isLoadingSubject.next(true);\r\n            this.IsLoading = true;\r\n            var gst = this.rcForm.controls['GeneratedSurchargeTable'] as FormArray\r\n            if (_fs.GeneratedSurchargeTable != null && _fs.GeneratedSurchargeTable.length > 0) {\r\n                gst.clear();\r\n                _fs.GeneratedSurchargeTable.forEach(res => {\r\n                    gst.push(new FormControl({\r\n                        FuelSurchargeStartPercentage: res.FuelSurchargeStartPercentage,\r\n                        PriceRangeStartValue: res.PriceRangeStartValue,\r\n                        PriceRangeEndValue: res.PriceRangeEndValue\r\n                    }))\r\n                });\r\n                \r\n            }     \r\n            this.onGenerateSurchargeTable();\r\n            this.IsEditLoaded = true;\r\n            //this.isLoadingSubject.next(false);\r\n            this.IsLoading = false;\r\n        }\r\n        if (this.fuelsurchargeMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n        } else {\r\n            this.disableInputControls = false;\r\n        }\r\n        this.AllowTableName = false;\r\n    }\r\n    \r\n    private nextDate(givenDate:Date, dayIndex:number): Date {\r\n        var today = new Date(givenDate);\r\n        //var a = today.getDate();\r\n        //var e = today.getDay();\r\n        //var b = (dayIndex - 1 - today.getDay() + 7);\r\n        //var c = b % 7;\r\n        //var d = today.getDate() + (dayIndex - 1 - today.getDay() + 7) % 7 + 1;\r\n        //don't find next date in case in edage case . like on same day and having fine arrangement not to crash when more than 1 week, and arrangment is to first add required days and than call current method.\r\n        if (dayIndex != today.getDay()) today.setDate(today.getDate() + (dayIndex - 1 - today.getDay() + 7) % 7 + 1);\r\n        return today;\r\n    }\r\n\r\n    private setValidFromDate() {\r\n        this.IsLoading = true;\r\n\r\n        var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n        var selectedSourceMonth = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n        var selectedSourceAnnualy = this.rcForm.get('SourceAnnualy').value as DropdownItemExt[];\r\n        var ApiAdjustIndexPriceDate = this.rcForm.controls.ApiAdjustIndexPriceDate.value;\r\n        //if (!this.IsWeeklyVisible) this.rcForm.controls.ApiAdjustIndexPriceDate.setValue(null);\r\n       // this.AddRemoveValidations(null,[this.rcForm.get('Weeks'), this.rcForm.get('Months'), this.rcForm.get('Annualy')]);\r\n        if (selectedPeriod != null && selectedPeriod!=undefined && selectedPeriod.length > 0 ) {\r\n\r\n            let effectiveDate= new Date();\r\n            if (ApiAdjustIndexPriceDate != null && ApiAdjustIndexPriceDate != undefined && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.WEEKLY) {\r\n\r\n                this.AddRemoveValidations([this.rcForm.get('Weeks')],\r\n                    [this.rcForm.get('Months'), this.rcForm.get('Annualy')]);\r\n\r\n                effectiveDate= this.rcForm.controls.ApiAdjustIndexPriceDate.value;\r\n                effectiveDate = new Date(effectiveDate);\r\n                let WeekDay = this.IsWeeklyVisible && this.rcForm.controls.WeekDay.value != null && this.rcForm.controls.WeekDay.value != undefined && this.rcForm.controls.WeekDay.value != \"\" ? this.rcForm.controls.WeekDay.value : \"\";\r\n                let Weeks = this.IsWeeklyVisible && this.rcForm.controls.Weeks.value != null && this.rcForm.controls.Weeks.value != undefined && this.rcForm.controls.Weeks.value != \"\" ? this.rcForm.controls.Weeks.value : \"\";\r\n                \r\n                var selectedWeeks = this.rcForm.get('Weeks').value as DropdownItemExt[];\r\n                if (selectedWeeks != null && selectedWeeks != undefined && selectedWeeks.length>0) {\r\n                    if (selectedWeeks[0].Name == WeekEnum.Same_Week) {\r\n                       // default will handle\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_1) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 7);\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_2) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 14);\r\n                    } else if (selectedWeeks[0].Name == WeekEnum.Week_Later_3) {\r\n                        effectiveDate.setDate(effectiveDate.getDate() + 21);\r\n                    }\r\n                    if (WeekDay != \"\" && Weeks != \"\") {\r\n                        switch (WeekDay.toUpperCase()) {\r\n                            case \"SUN\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Sun)\r\n                                break;\r\n                            }\r\n                            case \"MON\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Mon)\r\n                                break;\r\n                            }\r\n                            case \"TUE\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Tue)\r\n                                break;\r\n                            }\r\n                            case \"WED\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Wed)\r\n                                break;\r\n                            }\r\n                            case \"THU\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Thu)\r\n                                break;\r\n                            }\r\n                            case \"FRI\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Fri)\r\n                                break;\r\n                            }\r\n                            case \"SAT\": {\r\n                                effectiveDate = this.nextDate(effectiveDate, WeekDays.Sat)\r\n                                break;\r\n                            }\r\n                            default: {\r\n                                //statements; \r\n                                break;\r\n                            }\r\n                        }\r\n                        this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                        this.MinToDate = moment(effectiveDate).toDate();\r\n                        this.IsWeeklyVisible = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (selectedSourceMonth != null && selectedSourceMonth!=undefined && selectedSourceMonth.length > 0 && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.MONTHLY) {\r\n                var selectedSourceMonth = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n                this.AddRemoveValidations([this.rcForm.get('Months')],\r\n                    [this.rcForm.get('Weeks'), this.rcForm.get('Annualy')]);\r\n                 effectiveDate = new Date(selectedSourceMonth[0].Id);\r\n\r\n                var selectedMonths = this.rcForm.get('Months').value as DropdownItemExt[];\r\n                if (selectedMonths != null && selectedMonths != undefined && selectedMonths.length > 0) {\r\n                    if (selectedMonths[0].Name == MonthEnum.Month_Later_1) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 1, 1);\r\n                    } else if (selectedMonths[0].Name == MonthEnum.Month_Later_2) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 2, 1);\r\n                    } else if (selectedMonths[0].Name == MonthEnum.Month_Later_3) {\r\n                        effectiveDate.setMonth(effectiveDate.getMonth() + 3, 1);\r\n                    }\r\n                    this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                    this.MinToDate = moment(effectiveDate).toDate();\r\n                    this.IsMonthlyVisible = true;\r\n                }\r\n            }\r\n\r\n            else if (selectedSourceAnnualy != null && selectedSourceAnnualy != undefined && selectedSourceAnnualy.length>0 && selectedPeriod[0].Name.toUpperCase() == PeriodEnum.ANNUALY) {\r\n                effectiveDate = new Date(selectedSourceAnnualy[0].Id);\r\n                this.AddRemoveValidations([this.rcForm.get('Annualy')],\r\n                    [this.rcForm.get('Weeks'), this.rcForm.get('Months')]);\r\n                var selectedYear = this.rcForm.get('Annualy').value as DropdownItemExt[];\r\n                if (selectedYear != null && selectedYear != undefined && selectedYear.length > 0) {\r\n                    if (selectedYear[0].Name == AnnualyEnum.Year_Later_1) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 1, 0, 1);\r\n                    } else if (selectedYear[0].Name == AnnualyEnum.Year_Later_2) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 2, 0, 1);\r\n                    } else if (selectedYear[0].Name == AnnualyEnum.Year_Later_3) {\r\n                        effectiveDate.setFullYear(effectiveDate.getFullYear() + 3, 0, 1);\r\n                    }\r\n                    this.rcForm.controls.FuelSurchargeTable.get('StartDate').setValue(moment(effectiveDate).format('MM/DD/YYYY'));\r\n                    this.MinToDate = moment(effectiveDate).toDate();\r\n                    this.IsAnnualyVisible = true;\r\n                }\r\n            }\r\n        }\r\n        this.IsLoading = false;\r\n    }\r\n\r\n    //Save\r\n    private Save(fuelSurchageStatus: FreightTableStatus): void {\r\n        this.IsLoading = true;\r\n        this.Fsmodel = this.rcForm.value;\r\n        if (this.rcForm.controls.ApiAdjustIndexPriceDate.value != null && this.rcForm.controls.ApiAdjustIndexPriceDate.value != undefined && this.rcForm.controls.ApiAdjustIndexPriceDate.value != \"\")\r\n            this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(this.rcForm.controls.ApiAdjustIndexPriceDate.value).format());\r\n        if (this.rcForm.controls.ManualEffectiveDate.value != null && this.rcForm.controls.ManualEffectiveDate.value != undefined)\r\n            this.Fsmodel.ManualEffectiveDate = new Date(moment(this.rcForm.controls.ManualEffectiveDate.value).format());\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('StartDate').value != undefined)\r\n            this.Fsmodel.FuelSurchargeTable.StartDate = this.rcForm.controls.FuelSurchargeTable.get('StartDate').value;\r\n        if (this.rcForm.controls.FuelSurchargeTable.get('EndDate').value != null && this.rcForm.controls.FuelSurchargeTable.get('EndDate').value != undefined)\r\n            this.Fsmodel.FuelSurchargeTable.EndDate = this.rcForm.controls.FuelSurchargeTable.get('EndDate').value;\r\n\r\n        if (this.Fsmodel.TerminalsAndBulkPlants != null || this.Fsmodel.TerminalsAndBulkPlants != undefined)\r\n            this.Fsmodel.TerminalsAndBulkPlants.forEach(res => {\r\n                res.Code = this.TerminalsAndBulkPlantList.find(c => c.Id == res.Id && c.Name == res.Name).Code;\r\n            });\r\n        if (this.IsMonthlyVisible) {\r\n            var sourceMonths = this.rcForm.get('SourceMonths').value as DropdownItemExt[];\r\n            if (sourceMonths != null && sourceMonths.length > 0) {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(sourceMonths[0].Id).format());\r\n            } else {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = null;\r\n            }\r\n\r\n        }\r\n        if (this.IsAnnualyVisible) {\r\n            var sourceAnnualy = this.rcForm.get('SourceAnnualy').value as DropdownItemExt[];\r\n            if (sourceAnnualy != null && sourceAnnualy.length > 0) {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = new Date(moment(sourceAnnualy[0].Id).format());\r\n            } else {\r\n                this.Fsmodel.ApiAdjustIndexPriceDate = null;\r\n            }\r\n        }\r\n\r\n        this.Fsmodel.IndexPriceDate = this.rcForm.get('IndexPriceDate').value;\r\n        this.Fsmodel.IsManualUpdate = this.viewType == 2 ? true : false;\r\n        this.Fsmodel.ProductId = null;\r\n        this.Fsmodel.PeriodId = null;\r\n        this.Fsmodel.TableTypeId = null;\r\n        this.Fsmodel.AreaId = null;\r\n        this.Fsmodel.ApiEffectiveDate = \"\";\r\n\r\n        if (!this.Fsmodel.IsManualUpdate) {\r\n            var selectedProduct = this.rcForm.get('FuelSurchargeProducts').value as DropdownItem[];\r\n            var selectedPeriod = this.rcForm.get('FuelSurchargePeriods').value as DropdownItemExt[];\r\n            var selectedArea = this.rcForm.get('FuelSurchargeAreas').value as DropdownItem[];\r\n            this.Fsmodel.ProductId = selectedProduct != null && selectedProduct != undefined ? selectedProduct[0].Id : null;\r\n            this.Fsmodel.PeriodId = selectedPeriod != null && selectedPeriod != undefined ? +selectedPeriod[0].Id : null;\r\n            this.Fsmodel.AreaId = selectedArea != null && selectedArea != undefined ? selectedArea[0].Id : null;\r\n            let ApiEffectiveDate = {\r\n                \"WeekDay\": this.IsWeeklyVisible && this.rcForm.controls.WeekDay.value != null && this.rcForm.controls.WeekDay.value != undefined && this.rcForm.controls.WeekDay.value != \"\" ? this.rcForm.controls.WeekDay.value : \"\",\r\n                \"Weeks\": this.IsWeeklyVisible && this.rcForm.controls.Weeks.value != null && this.rcForm.controls.Weeks.value != undefined && this.rcForm.controls.Weeks.value != \"\" ? JSON.stringify(this.rcForm.controls.Weeks.value[0]) : \"\",\r\n                \"Months\": this.IsMonthlyVisible && this.rcForm.controls.Months.value != null && this.rcForm.controls.Months.value != undefined && this.rcForm.controls.Months.value != \"\" ? JSON.stringify(this.rcForm.controls.Months.value[0]) : \"\",\r\n                \"Annualy\": this.IsAnnualyVisible && this.rcForm.controls.Annualy.value != null && this.rcForm.controls.Annualy.value != undefined && this.rcForm.controls.Annualy.value != \"\" ? JSON.stringify(this.rcForm.controls.Annualy.value[0]) : \"\"\r\n            };\r\n            this.Fsmodel.ApiEffectiveDate = JSON.stringify(ApiEffectiveDate);\r\n        }\r\n        var selectedTableType = this.rcForm.get('TableTypes').value as DropdownItem[];\r\n        this.Fsmodel.TableTypeId = selectedTableType[0].Id;\r\n\r\n        this.Fsmodel.StatusId = fuelSurchageStatus;\r\n\r\n        if (!this.IsGeneratedSurchargeTable) this.Fsmodel.GeneratedSurchargeTable = null;\r\n\r\n        this.fuelsurchargeService.createFuelSurcharge(this.Fsmodel)\r\n            .subscribe((response: any) => {\r\n                this.ServiceResponse = response;\r\n                if (response != null && response.StatusCode == 0) {\r\n                    let message = \"\";\r\n                    if (this.Fsmodel.FuelSurchargeIndexId != null) {\r\n                        message = \"Fuel Surcharge table edit successfully.\";\r\n                    }\r\n                    else if (this.Fsmodel.StatusId == FreightTableStatus.Published) {\r\n                        message = \"Fuel Surcharge table created successfully.\";\r\n                    } else if (this.Fsmodel.StatusId == FreightTableStatus.Draft) {\r\n                        message = \"Fuel Surcharge saved draft successfully.\";\r\n                    }\r\n                    Declarations.msgsuccess(message, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.changeToViewTab();\r\n                }\r\n                else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    public changeToViewTab() {\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(2);\r\n    }\r\n\r\n    //#endregion    \r\n}\r\n\r\nconst RangeValidator: ValidatorFn = (fg: FormGroup) => {\r\n    const fst = fg.get('FuelSurchargeTable').value;\r\n    const start = fst.PriceRangeStartValue;\r\n    const end = fst.PriceRangeEndValue;\r\n    const statusId = fg.get('StatusId').value;\r\n    return statusId==1 || start != null && end != null && +end > +start\r\n        ? null\r\n        : { range: true };\r\n};\r\n\r\n\r\n\r\n\r\n","\r\n<div>\r\n\r\n    <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit(2)\">\r\n        <div *ngIf=\"fuelsurchargeMode=='VIEW' || fuelsurchargeMode=='COPY' || fuelsurchargeMode=='EDIT'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"well bg-white\">\r\n                <div class=\"row\">\r\n                    <!--<div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>-->\r\n                    <div class=\"col-sm-3 form-group\">\r\n                        <label>Table Name</label>\r\n                        <span class=\"color-maroon\">*</span>\r\n                        <input type=\"text\" [readonly]=\"fuelsurchargeMode=='EDIT' && !AllowTableName ?true:null\" formControlName=\"TableName\" class=\"form-control\" />\r\n                        <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type</label>\r\n                            <span class=\"color-maroon\">*</span>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [placeholder]=\"'Select Table Type'\"\r\n                                                     [settings]=\"SingleSelectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\"\r\n                                                     (onDeSelect)=\"onTableTypeDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [placeholder]=\"'Select Customers(s)'\"\r\n                                                         [settings]=\"MultiSelectSettingsById\" [data]=\"CustomerList\">\r\n                                </ng-multiselect-dropdown>\r\n\r\n                                <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [placeholder]=\"'Select Carriers(s)'\"\r\n                                                         [settings]=\"MultiSelectSettingsById\" [data]=\"CarrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                                <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"SourceRegions\">Source Region(s)</label>\r\n                            <span class=\"color-maroon\">*</span>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [placeholder]=\"'Select Source Regions(s)'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\" [data]=\"SourceRegionList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                                <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                                <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                      [data]=\"TerminalsAndBulkPlantList\"\r\n                                                      formControlName=\"TerminalsAndBulkPlants\"\r\n                                                      [settings]=\"MultiSelectSettingsByGroup\">\r\n                                </angular2-multiselect>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"my-3\" />\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                            <div class=\"btn-group btn-filter\">\r\n                                <input class=\"hide-element\" type=\"radio\" [name]=\"'eia-period'\" [value]=\"1\" [checked]=\"viewType==1\" *ngIf=\"SelectedCountryId!=2\">\r\n                                <label class=\"btn ml0\" (click)=\"changeViewType(1)\" *ngIf=\"SelectedCountryId!=2\">API Update</label>\r\n                                <input class=\"hide-element\" type=\"radio\" [name]=\"'eia-period'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                                <label class=\"btn ml0\" (click)=\"changeViewType(2)\">Manual Update</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"viewType==1 && SelectedCountryId!=2\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"FuelSurchargeProducts\">{{SelectedCountryId==1?\"EIA Product\":\"NRC Product\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargeProducts\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargeProducts\"\r\n                                                                 [placeholder]=\"'Select EIA Product'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargeProductList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargeProducts').invalid && rcForm.get('FuelSurchargeProducts').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargeProducts').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>{{SelectedCountryId==1?\"EIA Period\":\"NRC Period\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargePeriods\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargePeriods\"\r\n                                                                 (onSelect)=\"onFuelSurchargePeriodsSelect($event)\"\r\n                                                                 [placeholder]=\"'Select EIA Period'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargePeriodList\">\r\n                                        </ng-multiselect-dropdown>\r\n\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargePeriods').invalid && rcForm.get('FuelSurchargePeriods').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargePeriods').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>{{SelectedCountryId==1?\"EIA Area\":\"NRC Area\"}}</label>\r\n                                        <span class=\"color-maroon\" *ngIf=\"SelectedCountryId==1\">*</span>\r\n                                        <ng-multiselect-dropdown formControlName=\"FuelSurchargeAreas\"\r\n                                                                 class=\"single-select\"\r\n                                                                 id=\"FuelSurchargeAreas\"\r\n                                                                 [placeholder]=\"'Select Area'\"\r\n                                                                 [settings]=\"SingleSelectSettingsById\" [data]=\"FuelSurchargeAreaList\">\r\n                                        </ng-multiselect-dropdown>\r\n                                        <div *ngIf=\"rcForm.get('FuelSurchargeAreas').invalid && rcForm.get('FuelSurchargeAreas').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('FuelSurchargeAreas').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <!--weekly-->\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>&nbsp;</label>\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col-7\">\r\n                                            <a (click)=\"onFetchLastIndexPrice();\" class=\"btn btn-default ml-0\">Fetch Latest Index Price</a>\r\n                                        </div>\r\n                                        <div class=\"col\">\r\n                                            <input type=\"text\" class=\"form-control\" readonly=\"readonly\" formControlName=\"APILatestIndexPrice\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-black-50\">\r\n                                                {{SelectedCountryId==1?\"U.S. Dollars per Gallon\":\"Canada Cents per Litre \"}}   (Including Taxes) on  {{rcForm.get('IndexPriceDate').value}}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>Start of the Index Price</label>\r\n\r\n                                    <input *ngIf=\"IsWeeklyVisible\" type=\"text\" formControlName=\"ApiAdjustIndexPriceDate\" class=\"form-control datepicker\"\r\n                                           placeholder=\"Date\" CustomDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setApiAdjustIndexPriceDate($event);\" [minDate]=\"MinFromDate\"\r\n                                           [maxDate]=\"MaxStartDate\"\r\n                                           [mode]=\"'WEEKLY'\"\r\n                                           [daysOfWeekEnable]=\"'MON'\" />\r\n                                    <div *ngIf=\"IsWeeklyVisible && rcForm.get('ApiAdjustIndexPriceDate').invalid && rcForm.get('ApiAdjustIndexPriceDate').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('ApiAdjustIndexPriceDate').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ng-multiselect-dropdown *ngIf=\"IsMonthlyVisible\" formControlName=\"SourceMonths\"\r\n                                                             class=\"single-select\"\r\n                                                             id=\"SourceMonthList\"\r\n                                                             [placeholder]=\"'Select month'\"\r\n                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SourceMonthList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                    <div *ngIf=\"IsMonthlyVisible && rcForm.get('SourceMonths').invalid && rcForm.get('SourceMonths').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('SourceMonths').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <ng-multiselect-dropdown *ngIf=\"IsAnnualyVisible\" formControlName=\"SourceAnnualy\"\r\n                                                             class=\"single-select\"\r\n                                                             id=\"idSourceAnnualy\"\r\n                                                             [placeholder]=\"'Select Annually'\"\r\n                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SourceAnnualyList\">\r\n                                    </ng-multiselect-dropdown>\r\n                                    <div *ngIf=\"IsAnnualyVisible && rcForm.get('SourceAnnualy').invalid && rcForm.get('SourceAnnualy').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('SourceAnnualy').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsWeeklyVisible\">\r\n                                    <!--weekly-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-mon\" value=\"Mon\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-mon\">Mon</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-tue\" value=\"Tue\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-tue\">Tue</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-wed\" value=\"Wed\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-wed\">Wed</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-thu\" value=\"Thu\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-thu\">Thu</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-fri\" value=\"Fri\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-fri\">Fri</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-sat\" value=\"Sat\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-sat\">Sat</label>\r\n                                    </div>\r\n                                    <div class=\"form-check form-check-inline\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"WeekDay\" id=\"occurance-sun\" value=\"Sun\">\r\n                                        <label class=\"form-check-label\" for=\"occurance-sun\">Sun</label>\r\n                                    </div>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Weeks\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idWeeks\"\r\n                                                                     [placeholder]=\"'Select week'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"WeekList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Weeks').invalid && rcForm.get('Weeks').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Weeks').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsMonthlyVisible\">\r\n                                    <!--// monthly-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Months\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idMonths\"\r\n                                                                     [placeholder]=\"'Select month'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"MonthList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Months').invalid && rcForm.get('Months').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Months').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\" *ngIf=\"IsAnnualyVisible\">\r\n                                    <!--// Annualy-->\r\n                                    <label class=\"d-block\">Effective From</label>\r\n                                    <div class=\"row mt-2\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <ng-multiselect-dropdown formControlName=\"Annualy\"\r\n                                                                     class=\"single-select\"\r\n                                                                     id=\"idAnnualy\"\r\n                                                                     [placeholder]=\"'Select Annually'\"\r\n                                                                     [settings]=\"SingleSelectSettingsById\" [data]=\"AnnualyList\">\r\n                                            </ng-multiselect-dropdown>\r\n                                            <div *ngIf=\"rcForm.get('Annualy').invalid && rcForm.get('Annualy').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('Annualy').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"viewType==2 || SelectedCountryId==2\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-3\">\r\n                                    <label>&nbsp;</label>\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col\">\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"ManualLatestIndexPrice\" />\r\n                                            <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').invalid && rcForm.get('ManualLatestIndexPrice').touched\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').errors.required\">\r\n                                                    Required.\r\n                                                </div>\r\n                                                <div *ngIf=\"rcForm.get('ManualLatestIndexPrice').errors.pattern\">\r\n                                                    Invalid.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col\">\r\n                                            <p class=\"text-black-50\">\r\n                                                {{SelectedCountryId==1?\"U.S. Dollars per Gallon\":\"Canada Cents per Litre \"}}  (Including Taxes) on   {{rcForm.get('IndexPriceDate').value}}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Effective date (from midnight UTC)</label>\r\n                                        <input type=\"text\" formControlName=\"ManualEffectiveDate\"\r\n                                               class=\"form-control datepicker\"\r\n                                               placeholder=\"Date\"\r\n                                               myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                               (onDateChange)=\"setManualEffectiveDate($event);\"\r\n                                               [minDate]=\"MinStartDate\" [maxDate]=\"MaxStartDate\" />\r\n                                        <div *ngIf=\"rcForm.get('ManualEffectiveDate').invalid && rcForm.get('ManualEffectiveDate').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.get('ManualEffectiveDate').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Notes</label>\r\n                                        <textarea class=\"form-control\" formControlName=\"Notes\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr class=\"my-3\" />\r\n                <h3>Fuel Surcharge Table</h3>\r\n                <div class=\"row\" formGroupName=\"FuelSurchargeTable\">\r\n                    <div class=\"col-sm-4\">\r\n                        <h5 class=\"font-weight-bold fs14\">Valid</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>From</label>\r\n                                    <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\" readonly=\"readonly\"\r\n                                           placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setStartDate($event);\" [minDate]=\"MinStartDate\"\r\n                                           [maxDate]=\"MaxStartDate\" />\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('StartDate').invalid && rcForm.controls.FuelSurchargeTable.get('StartDate').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('StartDate').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>To</label>\r\n                                    <!--<input type=\"text\" class=\"form-control\" formControlName=\"EndDate\" />-->\r\n                                    <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                                           placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                           (onDateChange)=\"setEndDate($event);\" [minDate]=\"MinToDate\" [maxDate]=\"MaxStartDate\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <h5 class=\"font-weight-bold fs14\">Price Range</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Start Value</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeStartValue\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{SelectedCountryId==1?\"USD\":\"CAD\"}}</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"!rcForm.valid && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').value>rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').value && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').touched && rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').touched\" class=\"color-maroon\">\r\n                                            Invalid range.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').touched\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').errors.required\">\r\n                                                Required.\r\n                                            </div>\r\n                                            <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeStartValue').errors.pattern\">\r\n                                                Invalid.\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>End Value</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeEndValue\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">{{SelectedCountryId==1?\"USD\":\"CAD\"}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeEndValue').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Interval</label>\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"PriceRangeInterval\">\r\n                                <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').invalid && rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('PriceRangeInterval').errors.pattern\">\r\n                                        Invalid.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" formGroupName=\"FuelSurchargeTable\">\r\n                    <div class=\"col-sm-4\">\r\n                        <h5 class=\"font-weight-bold fs14\">Surcharge</h5>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Start %</label>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"FuelSurchargeStartPercentage\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text fs11\">%</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').invalid && rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('FuelSurchargeStartPercentage').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <div class=\"form-group\">\r\n                                    <label>Interval</label>\r\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"SurchargeInterval\">\r\n                                    <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').invalid && rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.controls.FuelSurchargeTable.get('SurchargeInterval').errors.pattern\">\r\n                                            Invalid.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <input type=\"button\" class=\"btn btn-primary ml-0\"\r\n                               (click)=\"onGenerateSurchargeTable();\" value=\"Generate Surcharge Table\" />\r\n                        <div *ngIf=\"ShowMessage\" class=\"color-maroon\">\r\n                            Please click to generate surcharge table.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\" [formArrayName]=\"'GeneratedSurchargeTable'\">\r\n                        <div *ngIf=\"IsGeneratedSurchargeTable\">\r\n                            <table class=\"table table-bordered table-hover mt-3\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td class=\"text-center vmiddle\" width=\"50%\">Price Between</td>\r\n                                        <td width=\"50%\">Fuel Surcharge %</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <ng-container *ngFor=\"let fst of rcForm.controls['GeneratedSurchargeTable'].value; index as idx\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"text-center vmiddle\"> ${{fst.PriceRangeStartValue}} - ${{fst.PriceRangeEndValue}}</td>\r\n                                            <td>\r\n                                                <div class=\"input-group\">\r\n                                                    <span class=\"p-2 border px-4\">{{fst.FuelSurchargeStartPercentage}}</span>\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <span class=\"input-group-text\">%</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                    </tbody>\r\n                                </ng-container>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n        <div class=\"text-right\">\r\n            <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n            <button class=\"btn btn-lg btn-outline-primary\" [disabled]=\"disableInputControls ? true : null\" type=\"button\" (click)=\"onSubmit(1)\">Save Draft</button>\r\n            <button class=\"btn btn-lg btn-primary\" [disabled]=\"disableInputControls ? true : null\" type=\"submit\">Submit</button>\r\n        </div>\r\n    </form>\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { FuelSurchargeService } from '../../services/fuelsurcharge.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { FuelSurchargePricingModel } from '../../models/CreateFuelSurcharge';\r\n\n@Component({\n    selector: 'app-view-fuel-surcharge-pricingdetails',\n    templateUrl: './view-fuel-surcharge-pricingdetails.component.html',\n    styleUrls: ['./view-fuel-surcharge-pricingdetails.component.css']\n})\nexport class ViewFuelSurchargePricingdetailsComponent implements OnInit {\n\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) { }\n    public FuelSurchargePricingList: FuelSurchargePricingModel[] = [];\n\n    ngOnInit() {\n    }\n\n    getFuelSurchargePricingDetails(fuelSurchargeIndexId: number) {\r\n        this.fuelsurchargeService.getSurchargeTableNew(fuelSurchargeIndexId).subscribe(data => {\r\n            this.FuelSurchargePricingList = data as FuelSurchargePricingModel[];\r\n        });\r\n    }\n}\n","<!--<p>view-fuel-surcharge-pricingdetails works!</p>-->\r\n<div class=\"col-sm-12\">\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-center\" width=\"47%\">Price Between</th>\r\n                <th class=\"text-center\" width=\"48%\">Fuel Surcharge %</th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n    <div style=\"max-height:70vh;overflow:auto\" id=\"surchargeTable\">\r\n        <table class=\"table table-bordered table-hover mb0\">\r\n            <tbody>\r\n                <tr *ngFor=\"let pricing of FuelSurchargePricingList\">\r\n                    <td class=\"text-center vmiddle\" width=\"50%\">\r\n                        ${{pricing.PriceRangeStartValue}} - ${{pricing.PriceRangeEndValue}}\r\n                    </td>\r\n                    <td width=\"50%\">\r\n                        <div class=\"input-group\">\r\n                            <span class=\"p-2 border px-4\">{{pricing.FuelSurchargeStartPercentage}}</span>\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text\">%</span>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { FuelSurchargeService } from '../services/fuelsurcharge.service';\r\nimport { FuelSurchargeGridModel, FuelSurchargeInputModel, FuelSurchargeIndexViewModel } from '../models/CreateFuelSurcharge';\r\nimport { Subject } from 'rxjs';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { ViewFuelSurchargePricingdetailsComponent } from './view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ViewHistoricalPriceComponent } from './view-historical-price/view-historical-price.component';\r\nimport { Router } from '@angular/router';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n  selector: 'app-view-fuel-surcharge',\r\n  templateUrl: './view-fuel-surcharge.component.html',\r\n  styleUrls: ['./view-fuel-surcharge.component.css']\r\n})\r\nexport class ViewFuelSurchargeComponent implements OnInit {\r\n\r\n    public IsLoading: boolean = false;\r\n    public viewFuelSurchargeForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Fsmodel: FuelSurchargeIndexViewModel;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n\r\n    public FuelSurchargeList: FuelSurchargeGridModel[] = [];\r\n    public FuelSurchargeInput: FuelSurchargeInputModel;\r\n    constructor(private fb: FormBuilder, private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService,private router:Router,private cdr:ChangeDetectorRef) {\r\n        \r\n    }\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n\r\n    @ViewChild(ViewFuelSurchargePricingdetailsComponent) fuelSurchageComponent: ViewFuelSurchargePricingdetailsComponent;\r\n    @ViewChild(ViewHistoricalPriceComponent) historicalPriceComponent: ViewHistoricalPriceComponent;\r\n\r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.viewFuelSurchargeForm = this.createForm();\r\n        this.initializeFuelSurchargeDatatableGrid();\r\n    }\r\n    ngOnDestroy() {\r\n        this.rerender_destroy();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getFuelSurchargeGridDetails();\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FuelSurchargeIndexViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    getFuelSurchargePricingDetails(fuelSurchargeIndexId: number) {\r\n        this.fuelSurchageComponent.getFuelSurchargePricingDetails(fuelSurchargeIndexId);\r\n    }\r\n\r\n    getHistoricalPriceDetails(fuelSurchargeIndexId: number) {\r\n        this.historicalPriceComponent.getHistoricalPriceDetails(fuelSurchargeIndexId);\r\n    }\r\n\r\n    archiveFuelSurchargeTable(fuelSurchargeIndexId: number) {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.archiveFuelSurchargeTable(fuelSurchargeIndexId)\r\n            .subscribe((response: any) => {\r\n                this.IsLoading = false;\r\n                //this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected fuel surcharge table archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                }\r\n            });\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewFuelSurchargeForm.get('Carriers').patchValue([]);\r\n        this.viewFuelSurchargeForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                break;\r\n        }\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewFuelSurchargeForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewFuelSurchargeForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers().subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null; \r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {;\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewFuelSurchargeForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewFuelSurchargeForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.IsLoading = true\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewFuelSurchargeForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Fsmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Fsmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#fuel-surcharge-grid-datatable\").DataTable().clear().destroy();\r\n        this.getFuelSurchargeGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getFuelSurchargeGridDetails();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n\r\n    clearForm() {\r\n        this.viewFuelSurchargeForm.reset();\r\n        $(\"#fuel-surcharge-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    getFuelSurchargeGridDetails() {;\r\n        var input = new FuelSurchargeInputModel();\r\n\r\n        var selectedTableTypes = this.viewFuelSurchargeForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewFuelSurchargeForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewFuelSurchargeForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewFuelSurchargeForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewFuelSurchargeForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewFuelSurchargeForm.controls.fromDate.value;\r\n        input.EndDate = this.viewFuelSurchargeForm.controls.toDate.value;\r\n        input.IsArchived = this.viewFuelSurchargeForm.controls.isArchived.value;\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n        this.IsLoading = true\r\n        this.cdr.detectChanges()\r\n        this.fuelsurchargeService.getFuelSurchargeGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false;\r\n            if(data && data.length>0){\r\n                this.FuelSurchargeList = data as FuelSurchargeGridModel[];\r\n            }\r\n            this.dtTrigger.next();\r\n           \r\n        });\r\n    }\r\n\r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n    rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                this.dtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    setfromDate($event) {\r\n        this.viewFuelSurchargeForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewFuelSurchargeForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n\r\n    public viewFuelSurcharge(fsurcharId: number, mode: string) {\r\n        let operation = { FsurcharId: fsurcharId, Mode: mode };\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.next(JSON.stringify(operation));\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(1);\r\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew/' + fsurcharId]);\r\n\r\n    }\r\n\r\n    initializeFuelSurchargeDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Fuel Surcharge', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Fuel Surcharge', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n        \r\n    }\r\n}\r\n","<form [formGroup]=\"viewFuelSurchargeForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-fuel-surcharge-grid\" class=\"table-responsive\">\r\n                                <table id=\"fuel-surcharge-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th class=\"hide-element\" data-key=\"Id\">Id</th>\r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"TableTypeNew\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th data-key=\"IndexProduct\">Index Product</th>\r\n                                            <th data-key=\"IndexArea\">Index Area</th>\r\n                                            <th data-key=\"IndexPeriod\">Index Period</th>\r\n                                            <th data-key=\"IndexUpdate\">Index Update</th>\r\n                                            <th data-key=\"HistoricalPrice\">Historical Price</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let surcharge of FuelSurchargeList ,let i = index\">\r\n                                            <td class=\"hide-element\">{{surcharge.Id}}</td>\r\n\r\n                                            <td class=\"text-center\">\r\n                                                <a (click)=\"getFuelSurchargePricingDetails(surcharge.Id);\" class=\"btn btn-link\" onclick=\"slidePanel('#pricing-panel','30%')\">\r\n                                                    {{surcharge.DateRange}}\r\n                                                </a>\r\n                                            </td>\r\n                                            <td>{{surcharge.TableTypeNew}}</td>\r\n                                            <td>{{surcharge.TableName}}</td>\r\n                                            <td>{{surcharge.StatusName}}</td>\r\n                                            <td>{{surcharge.Customer}}</td>\r\n                                            <td>{{surcharge.Carrier}}</td>\r\n                                            <td>{{surcharge.SourceRegion}}</td>\r\n                                            <td *ngIf=\"surcharge.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': surcharge.IsShowMore}\">{{surcharge.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !surcharge.IsShowMore}\" *ngIf=\"(surcharge.Terminal.length>40)\">{{surcharge.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"surcharge.IsShowMore = !surcharge.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"surcharge.Terminal.length<=40\">{{surcharge.Terminal}}</td>\r\n                                            <td>{{surcharge.BulkPlant}}</td>\r\n                                            <td>{{surcharge.IndexProduct}}</td>\r\n                                            <td>{{surcharge.IndexArea}}</td>\r\n                                            <td>{{surcharge.IndexPeriod}}</td>\r\n                                            <td>{{surcharge.IndexType}}</td>\r\n                                            <td class=\"text-center\">\r\n                                                <a (click)=\"getHistoricalPriceDetails(surcharge.Id);\" class=\"btn btn-link fs16\" onclick=\"slidePanel('#historical-price-panel','30%')\" placement=\"bottom\" ngbTooltip=\"Historical Price\">\r\n                                                    <i class=\"fas fa-history\"></i>\r\n                                                </a>\r\n                                            </td>\r\n                                            <td class=\"text-center text-nowrap\">\r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFuelSurchargeTable(surcharge.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a  class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">  <i class=\"fas fa-street-view\"></i></a>\r\n                                           \r\n                                                <a *ngIf=\"!surcharge.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFuelSurcharge(surcharge.Id,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n    <div id=\"historical-price-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Historical Price Details</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-historical-price></app-view-historical-price>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"pricing-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Fuel Surcharge Table</h3>\r\n            </div>\r\n            <div>\r\n                <app-view-fuel-surcharge-pricingdetails></app-view-fuel-surcharge-pricingdetails>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n        <ng-template #popContent>\r\n            <div class=\"popover-details\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TableTypes\">Table Type</label>\r\n                            <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                     id=\"TableTypes\"\r\n                                                     [placeholder]=\"'Select Type (Required)'\"\r\n                                                     [settings]=\"SinlgeselectSettingsById\"\r\n                                                     [data]=\"TableTypeList\"\r\n                                                     (onSelect)=\"onTableTypeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"viewFuelSurchargeForm.get('TableTypes').invalid && viewFuelSurchargeForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"viewFuelSurchargeForm.get('TableTypes').errors.required\">\r\n                                    Table Type is required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Customers\">Customer(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                         id=\"Customers\"\r\n                                                         [placeholder]=\"'Select Customers'\"\r\n                                                         (onSelect)=\"onCustomersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                         [settings]=\"MultiselectSettingsById\" [data]=\"CustomerList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                                <label for=\"Carriers\">Carrier(s)</label>\r\n                                <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                         id=\"Carriers\"\r\n                                                         [placeholder]=\"'Select Carriers'\"\r\n                                                         (onSelect)=\"onCarriersSelect($event)\"\r\n                                                         (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                         (onDeSelectAll)=\"onCarriersDeSelect($event)\"\r\n                                                         [settings]=\"MultiselectSettingsById\" [data]=\"CarrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"SourceRegions\">Source Region(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                     id=\"SourceRegions\"\r\n                                                     [placeholder]=\"'Select Source Regions'\"\r\n                                                     (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                     (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\"\r\n                                                     [settings]=\"MultiselectSettingsById\" [data]=\"SourceRegionList\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                            <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                  [data]=\"TerminalsAndBulkPlantList\"\r\n                                                  formControlName=\"TerminalsAndBulkPlants\"\r\n                                                  [settings]=\"MultiSelectSettingsByGroup\">\r\n                            </angular2-multiselect>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>From</label>\r\n                            <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                                   (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                                   [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label>To</label>\r\n                            <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                                   [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                                   myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 form-group\">\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                                <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                                    Show Archived\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                            <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                            <button id=\"filter-fuel-surcharge-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n        </ng-template>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HistoricalPriceModel, HistoricalPriceDetailsModel } from '../../models/CreateFuelSurcharge';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { FuelSurchargeService } from '../../services/fuelsurcharge.service';\r\n\n@Component({\n    selector: 'app-view-historical-price',\n    templateUrl: './view-historical-price.component.html',\n    styleUrls: ['./view-historical-price.component.css']\n})\nexport class ViewHistoricalPriceComponent implements OnInit {\r\n\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService) { }\n    public HistoricalPrice: HistoricalPriceModel;\n    public SinlgeselectSettingsById = {};\n    public PeriodList: any[] = [];\n    public HistoricalPriceDetailList: HistoricalPriceDetailsModel[];\n    public SelectedPeriod: any[] = [];\n    public SelectedFuelSurchargeIndexId: any;\n  \n\n    ngOnInit() {\n        this.SinlgeselectSettingsById = {\n            singleSelection: true,\n            closeDropDownOnSelection: true,\n            idField: 'Id',\n            textField: 'Name',\n            enableCheckAll: false,\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true\n        };\n        this.getPeriod();\n    }\n\n    private getPeriod(): void {\n        for (let i = 1; i <= 12; i++) {\r\n            this.PeriodList.push({ Id: i, Name: i });\r\n        }\r\n    }\n\n    getHistoricalPriceDetails(fuelSurchargeIndexId: number) {\r\n\r\n        this.SelectedPeriod = [];\r\n        this.SelectedPeriod.push({ Id: 6, Name: 6 });\r\n\r\n\r\n        this.fuelsurchargeService.getHistoricalPrice(fuelSurchargeIndexId, 6).subscribe(data => {\r\n            this.HistoricalPrice = data as HistoricalPriceModel;\r\n            this.HistoricalPriceDetailList = this.HistoricalPrice.HistoricalPriceDetails;\r\n            this.SelectedFuelSurchargeIndexId = fuelSurchargeIndexId;\r\n        });\r\n\r\n\r\n    }\n\n    fetchHistoricalPrice() {\r\n        this.fuelsurchargeService.getHistoricalPrice(this.SelectedFuelSurchargeIndexId, this.SelectedPeriod[0].Id).subscribe(data => {\r\n            this.HistoricalPrice = data as HistoricalPriceModel;\r\n            this.HistoricalPriceDetailList = this.HistoricalPrice.HistoricalPriceDetails;\r\n        });\r\n    }\n}\n","<!--<p>view-historical-price works!</p>-->\r\n<div class=\"mx-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n            <label for=\"Periods\">Select {{HistoricalPrice?.PeriodName}}</label>\r\n            <ng-multiselect-dropdown [(ngModel)]=\"SelectedPeriod\"\r\n                                     id=\"Periods\"\r\n                                     [settings]=\"SinlgeselectSettingsById\" [data]=\"PeriodList\"> \r\n            </ng-multiselect-dropdown>\r\n        </div>\r\n        <div class=\"col-sm-6 pt-1\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n            <button id=\"fetch-historical-price\" type=\"button\" class=\"btn btn-lg mt-4 btn-primary mb-2 valid\" (click)=\"fetchHistoricalPrice()\">Fetch Price</button>\r\n        </div>\r\n        <div class=\"col-sm-12 form-group\" *ngIf=\"HistoricalPrice?.IndexType==2\">\r\n            <div class=\"alert alert-info\">\r\n                <strong>${{HistoricalPrice?.ManualIndexPrice}}</strong> per Gallon (Including Taxes) on {{HistoricalPrice?.ManualIndexPriceDate}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"col-sm-12\" *ngIf=\"HistoricalPrice?.IndexType==1\">\r\n    <table class=\"table table-bordered\">\r\n        <thead>\r\n            <tr>\r\n                <th>Index Product</th>\r\n                <th>Index Area</th>\r\n                <th>Index Period</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td>{{HistoricalPrice?.IndexProduct}}</td>\r\n                <td>{{HistoricalPrice?.IndexArea}}</td>\r\n                <td>{{HistoricalPrice?.IndexPeriod}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"text-center\" width=\"47%\">Published Date</th>\r\n                <th class=\"text-center\" width=\"48%\">Price per Gallon</th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n    <div style=\"max-height:300px;overflow:auto\" id=\"historyTable\">\r\n        <table class=\"table table-bordered table-hover mb0\">\r\n            <tbody>\r\n                <ng-container *ngIf=\"HistoricalPrice && HistoricalPrice.HistoricalPriceDetails && HistoricalPrice.HistoricalPriceDetails.length>0\">\r\n                    <tr *ngFor=\"let history of HistoricalPrice.HistoricalPriceDetails\">\r\n                        <td class=\"text-center vmiddle\" width=\"50%\">\r\n                            {{history.PublishDate}}\r\n                        </td>\r\n                        <td width=\"50%\">\r\n                            <div class=\"input-group\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text\">$</span>\r\n                                </div>\r\n                                <span class=\"p-2 border px-4\">{{history.Price}}</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MasterComponent } from './master/master.component';\nimport { CreateFuelSurchargeComponent } from './Create/create-fuel-surcharge.component';\nimport { ViewFuelSurchargeComponent } from './View/view-fuel-surcharge.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { ViewFuelSurchargePricingdetailsComponent } from './View/view-fuel-surcharge-pricingdetails/view-fuel-surcharge-pricingdetails.component';\nimport { ViewHistoricalPriceComponent } from './View/view-historical-price/view-historical-price.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nconst route: Routes = [\n    { path: '', component: MasterComponent },\n    { path: 'CreateNew', component: MasterComponent },\n    { path: 'CreateNew/:fuelsurchargeId', component: MasterComponent }\n]\n\n@NgModule({\n  declarations: [\n    MasterComponent, \n    CreateFuelSurchargeComponent, \n    ViewFuelSurchargeComponent, \n    ViewFuelSurchargePricingdetailsComponent, \n    ViewHistoricalPriceComponent,\n  ],\n  imports: [\n      CommonModule, \n      SharedModule, \n      FormsModule, \n      DataTablesModule, \n      DirectiveModule, \n      RouterModule.forChild(route),\n      AngularMultiSelectModule\n  ]\n})\nexport class FuelsurchargeModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FuelSurchargeService } from '../services/fuelsurcharge.service';\r\n\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit, AfterViewInit {\r\n viewType = 0\r\n    constructor(private router: Router, private fuelsurchargeService: FuelSurchargeService ) { }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        let _viewType = localStorage.getItem(\"fuelSurchargeTabId\");\r\n        if (_viewType && +_viewType>0) {\r\n            this.viewType = +_viewType;\r\n        }\r\n\r\n        this.fuelsurchargeService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\r\n                this.viewType = 2;\r\n\r\n            }\r\n            else {\r\n                this.viewType = 1;\r\n            }\r\n        })\r\n        this.viewType = +_viewType;\r\n\r\n        \r\n    }\r\n    ngAfterViewInit() {\r\n     \r\n        this.changeViewType(this.viewType)\r\n    }\r\n\r\n    public changeViewType(value: number) {\r\n\r\n        localStorage.setItem(\"fuelSurchargeTabId\", value.toString());\r\n\r\n        this.viewType = value;\r\n        this.fuelsurchargeService.onSelectedFuelSurchargeId.next(null);\r\n        this.fuelsurchargeService.onSelectedTabChanged.next(value);\r\n            \r\n\r\n        //if(this.viewType==1)\r\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew']);\r\n    }\r\n\r\n   \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Fuel Surcharge</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Fuel Surcharge</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-fuel-surcharge *ngIf=\"viewType==1\"></app-create-fuel-surcharge>\r\n\r\n                <app-view-fuel-surcharge *ngIf=\"viewType==2\"></app-view-fuel-surcharge>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { DropdownItem, DropdownItemExt} from 'src/app/statelist.service';\r\n\r\nexport class FuelSurchargeTableModel {    \r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n\r\n    public PriceRangeStartValue: number;\r\n    public PriceRangeEndValue: number;\r\n    public PriceRangeInterval: number;\r\n\r\n    public FuelSurchargeStartPercentage: number;     \r\n    public SurchargeInterval: number;\r\n\r\n    public Id: string;\r\n    public SupplierId?: number;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\nexport class FuelSurchargeIndexViewModel {    \r\n    FuelSurchargeIndexId?: number;\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];    \r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    FuelSurchargeProducts: DropdownItemExt[] = [];\r\n    FuelSurchargePeriods: DropdownItemExt[] = [];\r\n    FuelSurchargeAreas: DropdownItemExt[] = [];\r\n\r\n    ProductId?: number;\r\n    PeriodId?: number;\r\n    TableTypeId: number;\r\n    AreaId?: number;\r\n    WeekDay: string=\"Mon\";\r\n    Weeks: DropdownItemExt[] = [];\r\n    Months: DropdownItemExt[] = [];\r\n    SourceMonths: DropdownItemExt[] = [];\r\n    Annualy: DropdownItemExt[] = [];\r\n    SourceAnnualy: DropdownItemExt[] = [];\r\n    \r\n    APILatestIndexPrice: number;\r\n    ApiAdjustIndexPriceDate: Date;\r\n    ApiEffectiveDate: any;\r\n    ManualLatestIndexPrice: number;\r\n    ManualEffectiveDate: Date;\r\n    IsManualUpdate: boolean=false;\r\n    FuelSurchargeTable: FuelSurchargeTableModel = new FuelSurchargeTableModel(); //input model\r\n    TableName: string;\r\n    Notes: string;\r\n    IndexPriceDate: Date;\r\n    StatusId: number=2;\r\n    GeneratedSurchargeTable: FuelSurchargeTableModel[]; // FS table genearted\r\n}\r\n\r\nexport class FuelSurchargeInputModel {\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class FuelSurchargeGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public TableTypeNew: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public IndexProduct: number;\r\n    public IndexArea: string;\r\n    public IndexPeriod: string;\r\n    public IndexType: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n    // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n}\r\n\r\nexport class FuelSurchargePricingModel {\r\n    public PriceRangeStartValue: number;\r\n    public PriceRangeEndValue: number;\r\n    public FuelSurchargeStartPercentage: string;\r\n}\r\n\r\nexport class HistoricalPriceModel {\r\n    public IndexPeriod: string;\r\n    public IndexProduct: string;\r\n    public IndexArea: string;\r\n    public IndexTypeName: string;\r\n    public IndexType: number;\r\n    public ManualIndexPrice: string;\r\n    public ManualIndexPriceDate: string;\r\n    public PeriodName: string;\r\n    HistoricalPriceDetails: HistoricalPriceDetailsModel[]; \r\n}\r\n\r\nexport class HistoricalPriceDetailsModel {\r\n    public PublishDate: string;\r\n    public Price: string;\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}