{"version":3,"sources":["webpack:///src/app/delivery-request-display/delivery-request-display.component.ts","webpack:///src/app/delivery-request-display/delivery-request-display.component.html","webpack:///src/app/delivery-request-display/delivery-request-display.module.ts"],"names":["DeliveryRequestDisplayComponent","carrierService","sbService","deliveryRequestService","fb","route","deliveryRequests","selectedJobRequests","mustGoRequests","tempmustGoRequests","localStorageMustGoRequests","missedRequests","tempMissedRequests","localStorageMissedRequests","shouldGoRequests","tempshouldGoRequests","localStorageShouldGoRequests","couldGoRequests","tempcouldGoRequests","localStorageCouldGoRequests","requestToUpdate","Regions","assignedByOtherRegionRequests","assignedByOtherOperatorRequests","assignedToOtherRegionRequests","assignedToOtherOperatorRequests","changeDeteaction","IsThisFromDrDisplay","_loadingDrRequests","localStorage","setItem","JSON","stringify","regionId","snapshot","queryParamMap","get","selectedDate","indexOf","getDeliveryRequests","SbForm","initForm","valueChanges","pipe","subscribe","searchText","filterRecords","checkRegionChange","checkRecordUpdateORDelete","_form","group","searchField","control","intervalTime","setInterval","IsUserActive","getItem","parse","resetLocalStorage","setTimeout","window","top","close","updateintervalTime","updateRequest","location","reload","term","trim","toLowerCase","filterMustGoRequest","filterShouldGoRequest","filterCouldGoRequest","filterMissedRequest","_localmustGoRequests","forEach","job","DeliveryRequests","dr","push","_mustGorecords","filter","element","CustomerCompany","startsWith","JobName","JobAddress","RouteInfo","Name","ProductType","RequiredQuantity","toString","groupedDrs","groupDrsByJob","getMustGoRequests","slice","_localshouldGoRequests","_shouldGorecords","getShouldGoRequests","_localcouldGoRequests","_couldGorecords","getCouldGoRequests","_localMissedRequests","_missedrecords","Missed","undefined","t","IsCalendarView","filterDrByScheduleBuilder","priorityRequests","ParentId","AssignedToCompanyId","currentUserCompanyId","SupplierCompanyId","SchedulePreviousStatus","getLocalStorageItems","drs","_scheduleRequests","ScheduleBuilder","Shifts","s","Schedules","sc","Trips","d","Id","x","find","y","drData","index","findIndex","Priority","splice","jobId","isMissed","isTBD","response","JobId","TBDGroupId","mustGoDeliveryRequests","shouldGodeliveryRequests","couldGodeliveryRequests","missedDeliveryRequests","i","request","getSelectedLocationPriority","IsTBD","ShouldGo","CouldGo","MustGo","elementId","isTbd","WindowMode","QueueMode","$","DeliveryRequestType","addClass","unshift","removeItem","removeClass","locationId","locationPriority","length","$event","stopPropagation","drType","drPriority","getPriority","GetDrsForMultiWindow","selector","templateUrl","styleUrls","encapsulation","None","routesDrDisplay","path","component","DeliveryRequestDisplayModule","forRoot","forChild","declarations","imports"],"mappings":"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","file":"delivery-request-display-delivery-request-display-module-es5.js","sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ScheduleBuilderModel, DeliveryRequestViewModel, DelRequestsByJobModel } from '../carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from '../carrier/service/carrier.service';\r\nimport { ScheduleBuilderService } from '../carrier/service/schedule-builder.service';\r\nimport { DeliveryrequestService } from '../carrier/service/deliveryrequest.service';\r\nimport { sortBy } from '../my.functions';\r\nimport { DeliveryReqPriority, DeliveryRequestTypes } from 'src/app/app.enum';\r\ndeclare var regionId: string;\r\ndeclare var currentUserCompanyId: number;\r\ndeclare function IsUserActive(): boolean;\r\n\r\n@Component({\r\n    selector: 'app-delivery-request-display',\r\n    templateUrl: './delivery-request-display.component.html',\r\n    styleUrls: ['./delivery-request-display.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class DeliveryRequestDisplayComponent implements OnInit {\r\n    public ScheduleBuilder: ScheduleBuilderModel;\r\n    public deliveryRequests: DeliveryRequestViewModel[] = [];\r\n    public selectedJobRequests: DeliveryRequestViewModel[] = [];\r\n    public mustGoRequests: DelRequestsByJobModel[] = [];\r\n    public tempmustGoRequests: DelRequestsByJobModel[] = [];\r\n    public localStorageMustGoRequests: DelRequestsByJobModel[] = [];\r\n    public missedRequests: DelRequestsByJobModel[] = [];\r\n    public tempMissedRequests: DelRequestsByJobModel[] = [];\r\n    public localStorageMissedRequests: DelRequestsByJobModel[] = [];\r\n    public shouldGoRequests: DelRequestsByJobModel[] = [];\r\n    public tempshouldGoRequests: DelRequestsByJobModel[] = [];\r\n    public localStorageShouldGoRequests: DelRequestsByJobModel[] = [];\r\n    public couldGoRequests: DelRequestsByJobModel[] = [];\r\n    public tempcouldGoRequests: DelRequestsByJobModel[] = [];\r\n    public localStorageCouldGoRequests: DelRequestsByJobModel[] = [];\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public Regions: DropdownItemExt[] = [];\r\n    public assignedByOtherRegionRequests: DeliveryRequestViewModel[] = [];\r\n    public assignedByOtherOperatorRequests: DeliveryRequestViewModel[] = [];\r\n    public assignedToOtherRegionRequests: DeliveryRequestViewModel[] = [];\r\n    public assignedToOtherOperatorRequests: DeliveryRequestViewModel[] = [];\r\n    public SbForm: FormGroup;\r\n    public intervalTime: any;\r\n    public updateintervalTime: any;\r\n    public changeDeteaction: boolean = false;\r\n    public IsThisFromDrDisplay: boolean = false;\r\n    public regionId: string;\r\n    public selectedDate: string;\r\n    public _loadingDrRequests = false;\r\n    constructor(private carrierService: CarrierService,\r\n        private sbService: ScheduleBuilderService,\r\n        private deliveryRequestService: DeliveryrequestService,\r\n        private fb: FormBuilder,\r\n        private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        localStorage.setItem(\"deliveryRequests\", JSON.stringify([]));\r\n        this.regionId = this.route.snapshot.queryParamMap.get('regionId');\r\n        this.selectedDate = this.route.snapshot.queryParamMap.get('selectedDate');\r\n\r\n        if (!this.selectedDate || this.selectedDate.indexOf('null') !== -1 || this.selectedDate.indexOf('undefined') !== -1)\r\n            this.selectedDate = ''\r\n\r\n        this.getDeliveryRequests(regionId);\r\n        this.SbForm = this.initForm();\r\n        localStorage.setItem(\"regionId\", JSON.stringify(regionId));\r\n        this.changeDeteaction = false;\r\n        this.IsThisFromDrDisplay = true;\r\n        this.SbForm.get('searchField').valueChanges\r\n            .pipe(\r\n                debounceTime(500),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(searchText => {\r\n\r\n                this.filterRecords(searchText);\r\n            });\r\n        this.checkRegionChange();\r\n        this.checkRecordUpdateORDelete();\r\n    }\r\n    initForm(): FormGroup {\r\n        var _form = this.fb.group({\r\n            searchField: this.fb.control('')\r\n        });\r\n        return _form;\r\n    }\r\n    checkRegionChange() {\r\n        this.intervalTime = setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (localStorage.getItem(\"refreshRegion\") != null) {\r\n                    var changeDeteaction = JSON.parse(localStorage.getItem(\"refreshRegion\")) as boolean;\r\n                    if (changeDeteaction) {\r\n                        this.changeDeteaction = changeDeteaction;\r\n                        this.resetLocalStorage();\r\n                        setTimeout(function () {\r\n                            window.top.close(); // close current tab after 10 seconds\r\n                        }, 10000);\r\n                    }\r\n                }\r\n            }\r\n        }, 3000);\r\n\r\n    }\r\n    checkRecordUpdateORDelete() {\r\n        this.updateintervalTime = setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (localStorage.getItem(\"updateRequest\") != null) {\r\n                    var updateRequest = JSON.parse(localStorage.getItem(\"updateRequest\")) as boolean;\r\n                    if (updateRequest) {\r\n                        localStorage.setItem(\"updateRequest\", JSON.stringify(false));\r\n                        window.location.reload();//refresh the current window\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }, 5000);\r\n    }\r\n\r\n    filterRecords(term: string) {\r\n        if (term) {\r\n            term = term.trim().toLowerCase();\r\n            this.filterMustGoRequest(term);\r\n            this.filterShouldGoRequest(term);\r\n            this.filterCouldGoRequest(term);\r\n            this.filterMissedRequest(term);\r\n        }\r\n        else {\r\n            this.mustGoRequests = this.tempmustGoRequests;\r\n            this.shouldGoRequests = this.tempshouldGoRequests;\r\n            this.couldGoRequests = this.tempcouldGoRequests;\r\n            this.missedRequests = this.tempMissedRequests;\r\n        }\r\n    }\r\n    filterMustGoRequest(term: string) {\r\n\r\n        let _localmustGoRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        this.tempmustGoRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _localmustGoRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        let _mustGorecords = _localmustGoRequests.filter((element: DeliveryRequestViewModel) =>\r\n            ((element.CustomerCompany && element.CustomerCompany.toLowerCase().startsWith(term))\r\n                || (element.JobName && element.JobName.toLowerCase().startsWith(term))\r\n                || (element.JobAddress && element.JobAddress.toLowerCase().startsWith(term))\r\n                || (element.RouteInfo && element.RouteInfo.Name && element.RouteInfo.Name.toLowerCase().startsWith(term))\r\n                || (element.ProductType && element.ProductType.toLowerCase().startsWith(term))\r\n                || element.RequiredQuantity.toString().startsWith(term)))\r\n\r\n        let groupedDrs = this.deliveryRequestService.groupDrsByJob(_mustGorecords);\r\n        this.mustGoRequests = this.deliveryRequestService.getMustGoRequests(groupedDrs);\r\n        this.mustGoRequests.slice();\r\n    }\r\n    filterShouldGoRequest(term: string) {\r\n\r\n        let _localshouldGoRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        this.tempshouldGoRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _localshouldGoRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        let _shouldGorecords = _localshouldGoRequests.filter((element: DeliveryRequestViewModel) =>\r\n            ((element.CustomerCompany && element.CustomerCompany.toLowerCase().startsWith(term))\r\n                || (element.JobName && element.JobName.toLowerCase().startsWith(term))\r\n                || (element.JobAddress && element.JobAddress.toLowerCase().startsWith(term))\r\n                || (element.RouteInfo && element.RouteInfo.Name && element.RouteInfo.Name.toLowerCase().startsWith(term))\r\n                || (element.ProductType && element.ProductType.toLowerCase().startsWith(term))\r\n                || element.RequiredQuantity.toString().startsWith(term)))\r\n\r\n        let groupedDrs = this.deliveryRequestService.groupDrsByJob(_shouldGorecords);\r\n        this.shouldGoRequests = this.deliveryRequestService.getShouldGoRequests(groupedDrs);\r\n        this.shouldGoRequests.slice();\r\n    }\r\n    filterCouldGoRequest(term: string) {\r\n\r\n        let _localcouldGoRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        this.tempcouldGoRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _localcouldGoRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        let _couldGorecords = _localcouldGoRequests.filter((element: DeliveryRequestViewModel) =>\r\n            ((element.CustomerCompany && element.CustomerCompany.toLowerCase().startsWith(term))\r\n                || (element.JobName && element.JobName.toLowerCase().startsWith(term))\r\n                || (element.JobAddress && element.JobAddress.toLowerCase().startsWith(term))\r\n                || (element.RouteInfo && element.RouteInfo.Name && element.RouteInfo.Name.toLowerCase().startsWith(term))\r\n                || (element.ProductType && element.ProductType.toLowerCase().startsWith(term))\r\n                || element.RequiredQuantity.toString().startsWith(term)))\r\n\r\n        let groupedDrs = this.deliveryRequestService.groupDrsByJob(_couldGorecords);\r\n        this.couldGoRequests = this.deliveryRequestService.getCouldGoRequests(groupedDrs);\r\n        this.couldGoRequests.slice();\r\n    }\r\n    filterMissedRequest(term: string) {\r\n\r\n        let _localMissedRequests: DeliveryRequestViewModel[] = [];\r\n\r\n        this.tempMissedRequests.forEach(job => {\r\n            if (job && job.DeliveryRequests) {\r\n                job.DeliveryRequests.forEach(dr => { dr && _localMissedRequests.push(dr); });\r\n            }\r\n        });\r\n\r\n        let _missedrecords = _localMissedRequests.filter((element: DeliveryRequestViewModel) =>\r\n            ((element.CustomerCompany && element.CustomerCompany.toLowerCase().startsWith(term))\r\n                || (element.JobName && element.JobName.toLowerCase().startsWith(term))\r\n                || (element.JobAddress && element.JobAddress.toLowerCase().startsWith(term))\r\n                || (element.RouteInfo && element.RouteInfo.Name && element.RouteInfo.Name.toLowerCase().startsWith(term))\r\n                || (element.ProductType && element.ProductType.toLowerCase().startsWith(term))\r\n                || element.RequiredQuantity.toString().startsWith(term)));\r\n\r\n        this.missedRequests = this.deliveryRequestService.groupDrsByJob(_missedrecords, DeliveryRequestTypes.Missed);\r\n        this.missedRequests.slice();\r\n    }\r\n    ngOnDestroy(): void {\r\n        localStorage.setItem(\"deliveryRequests\", JSON.stringify([]));\r\n    }\r\n    getDeliveryRequests(regionId: string): void {\r\n        this._loadingDrRequests = true;\r\n        this.carrierService.getDeliveryRequests(regionId, this.selectedDate).subscribe(dr => {\r\n            if (dr != null && dr != undefined) \r\n            {\r\n                dr = dr.filter(t => !t.IsCalendarView); // hide calender Dr\r\n                dr = this.filterDrByScheduleBuilder(dr);\r\n                this.deliveryRequests = dr;\r\n                var priorityRequests = this.deliveryRequests.filter(t => t.ParentId == null && t.AssignedToCompanyId == currentUserCompanyId);\r\n                var missedRequests = this.deliveryRequests.filter(t => t.ParentId != null && t.AssignedToCompanyId == currentUserCompanyId);\r\n                var groupedDrs = this.deliveryRequestService.groupDrsByJob(priorityRequests);\r\n                //\r\n                this.mustGoRequests = this.deliveryRequestService.getMustGoRequests(groupedDrs);\r\n                this.mustGoRequests.slice();\r\n                this.tempmustGoRequests = this.mustGoRequests;\r\n                this.tempmustGoRequests.slice();\r\n                //\r\n                this.shouldGoRequests = this.deliveryRequestService.getShouldGoRequests(groupedDrs);\r\n                this.shouldGoRequests.slice();\r\n                this.tempshouldGoRequests = this.shouldGoRequests;\r\n                this.tempshouldGoRequests.slice();\r\n                //\r\n                this.couldGoRequests = this.deliveryRequestService.getCouldGoRequests(groupedDrs);\r\n                this.couldGoRequests.slice();\r\n                this.tempcouldGoRequests = this.couldGoRequests;\r\n                this.tempcouldGoRequests.slice();\r\n                //\r\n                this.missedRequests = this.deliveryRequestService.groupDrsByJob(missedRequests, DeliveryRequestTypes.Missed);\r\n                this.missedRequests.slice();\r\n                this.tempMissedRequests = this.missedRequests;\r\n                this.missedRequests.slice();\r\n\r\n                this.assignedByOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\r\n                this.assignedByOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SupplierCompanyId != currentUserCompanyId && t.SchedulePreviousStatus == 2);\r\n                this.assignedToOtherRegionRequests = dr.filter(t => t.AssignedToCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\r\n                this.assignedToOtherOperatorRequests = dr.filter(t => t.AssignedToCompanyId != currentUserCompanyId && t.SupplierCompanyId == currentUserCompanyId && t.SchedulePreviousStatus == 2);\r\n                this.getLocalStorageItems();\r\n            }\r\n            this._loadingDrRequests = false;\r\n        });\r\n    }\r\n    filterDrByScheduleBuilder(drs: DeliveryRequestViewModel[]): DeliveryRequestViewModel[] {\r\n        var _scheduleRequests = [];\r\n        if (this.ScheduleBuilder != undefined && this.ScheduleBuilder != null) {\r\n            this.ScheduleBuilder.Shifts.forEach(s => {\r\n                s.Schedules.forEach(sc => {\r\n                    sc.Trips.forEach(t => {\r\n                        t.DeliveryRequests.forEach(d => {\r\n                            _scheduleRequests.push(d.Id);\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n            drs = drs.filter(x => {\r\n                return _scheduleRequests.find(y => y == x.Id) == undefined;\r\n            });\r\n        }\r\n        return drs;\r\n    }\r\n    removeDraggedRequest(drData: any, deliveryRequests: DeliveryRequestViewModel[]): void {\r\n        var index = deliveryRequests.findIndex(x => x.Priority == drData.Priority && x.Id == drData.Id);\r\n        if (index >= 0) {\r\n            deliveryRequests = deliveryRequests.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getSelectedLocationPriority(jobId: any, isMissed: boolean, isTBD : boolean) {\r\n        var response = null as DelRequestsByJobModel;\r\n        if (isMissed) {\r\n            response = this.missedRequests.find(t => ((!isTBD && t.JobId == jobId) || (isTBD && t.TBDGroupId == jobId)));\r\n            return response;\r\n        }\r\n        response = this.mustGoRequests.find(t => ((!isTBD && t.JobId == jobId) || (isTBD && t.TBDGroupId == jobId)));\r\n        if (!response) {\r\n            response = this.shouldGoRequests.find(t => ((!isTBD && t.JobId == jobId) || (isTBD && t.TBDGroupId == jobId)));\r\n            if (!response)\r\n                response = this.couldGoRequests.find(t => ((!isTBD && t.JobId == jobId) || (isTBD && t.TBDGroupId == jobId)));\r\n        }\r\n        return response;\r\n    }\r\n\r\n    getLocalStorageItems() {\r\n        var mustGoDeliveryRequests = JSON.parse(localStorage.getItem(\"mustGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\r\n        var shouldGodeliveryRequests = JSON.parse(localStorage.getItem(\"shouldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\r\n        var couldGodeliveryRequests = JSON.parse(localStorage.getItem(\"couldGoDeliveryRequest\")) as DelRequestsByJobModel[] || [];\r\n        var missedDeliveryRequests = JSON.parse(localStorage.getItem(\"missedDeliveryRequest\")) as DelRequestsByJobModel[] || [];\r\n\r\n        if (mustGoDeliveryRequests != null) {\r\n            mustGoDeliveryRequests.forEach((t, i) => {\r\n                var request = this.getSelectedLocationPriority(t.IsTBD ? t.TBDGroupId : t.JobId, false, t.IsTBD);\r\n                if (request) {\r\n                    mustGoDeliveryRequests[i] = request;\r\n                    if (request.Priority == DeliveryReqPriority.ShouldGo) {\r\n                        shouldGodeliveryRequests.push(request);\r\n                        mustGoDeliveryRequests.splice(i, 1);\r\n                    }\r\n                    else if (request.Priority == DeliveryReqPriority.CouldGo) {\r\n                        couldGodeliveryRequests.push(request);\r\n                        mustGoDeliveryRequests.splice(i, 1);\r\n                    }\r\n                }\r\n                else {\r\n                    mustGoDeliveryRequests.splice(i, 1);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (shouldGodeliveryRequests != null) {\r\n            shouldGodeliveryRequests.forEach((t, i) => {\r\n                var request = this.getSelectedLocationPriority(t.IsTBD ? t.TBDGroupId : t.JobId, false, t.IsTBD);\r\n                if (request) {\r\n                    shouldGodeliveryRequests[i] = request;\r\n                    if (request.Priority == DeliveryReqPriority.MustGo) {\r\n                        mustGoDeliveryRequests.push(request);\r\n                        shouldGodeliveryRequests.splice(i, 1);\r\n                    }\r\n                    else if (request.Priority == DeliveryReqPriority.CouldGo) {\r\n                        couldGodeliveryRequests.push(request);\r\n                        shouldGodeliveryRequests.splice(i, 1);\r\n                    }\r\n                }\r\n                else {\r\n                    shouldGodeliveryRequests.splice(i, 1);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (couldGodeliveryRequests != null) {\r\n            couldGodeliveryRequests.forEach((t, i) => {\r\n                var request = this.getSelectedLocationPriority(t.IsTBD ? t.TBDGroupId : t.JobId, false, t.IsTBD);\r\n                if (request) {\r\n                    couldGodeliveryRequests[i] = request;\r\n                    if (request.Priority == DeliveryReqPriority.MustGo) {\r\n                        mustGoDeliveryRequests.push(request);\r\n                        couldGodeliveryRequests.splice(i, 1);\r\n                    }\r\n                    else if (request.Priority == DeliveryReqPriority.ShouldGo) {\r\n                        shouldGodeliveryRequests.push(request);\r\n                        couldGodeliveryRequests.splice(i, 1);\r\n                    }\r\n                }\r\n                else {\r\n                    couldGodeliveryRequests.splice(i, 1);\r\n                }\r\n            });\r\n        }\r\n        if (missedDeliveryRequests != null) {\r\n            missedDeliveryRequests.forEach((t, i) => {\r\n                var request = this.getSelectedLocationPriority(t.IsTBD ? t.TBDGroupId : t.JobId, true, t.IsTBD);\r\n                if (request) {\r\n                    missedDeliveryRequests[i] = request;\r\n                }\r\n                else {\r\n                    missedDeliveryRequests.splice(i, 1);\r\n                }\r\n            });\r\n        }\r\n        this.localStorageMustGoRequests = mustGoDeliveryRequests;\r\n        this.localStorageMustGoRequests.slice();\r\n        localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(mustGoDeliveryRequests));\r\n        this.localStorageShouldGoRequests = shouldGodeliveryRequests;\r\n        this.localStorageShouldGoRequests.slice();\r\n        localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(shouldGodeliveryRequests));\r\n        this.localStorageCouldGoRequests = couldGodeliveryRequests;\r\n        this.localStorageCouldGoRequests.slice();\r\n        localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(couldGodeliveryRequests));\r\n        this.localStorageMissedRequests = missedDeliveryRequests;\r\n        this.localStorageMissedRequests.slice();\r\n        localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(missedDeliveryRequests));\r\n        localStorage.setItem(\"refreshLocalStorage\", \"true\");\r\n    }\r\n\r\n    pushItem(location: DelRequestsByJobModel, elementId: number) {\r\n        let isTbd = location.IsTBD;\r\n        localStorage.setItem(\"refreshLocalStorage\", 'true');\r\n\r\n        location.DeliveryRequests.forEach(t => { t.WindowMode = 2; t.QueueMode = 2; });\r\n        var element = $(\"#\" + elementId);\r\n        if (location.DeliveryRequestType == DeliveryRequestTypes.Missed) {\r\n            var index = -1;\r\n            if (isTbd == false)\r\n                index = this.localStorageMissedRequests.findIndex(x => x.JobId == location.JobId);\r\n            else\r\n                index = this.localStorageMissedRequests.findIndex(x => x.TBDGroupId == location.TBDGroupId);\r\n            if (index == -1) {\r\n                $(element).addClass('selected');\r\n                this.localStorageMissedRequests.unshift(location);\r\n                var deliveryRequests = localStorage.getItem(\"missedDeliveryRequest\");\r\n                if (deliveryRequests != null) {\r\n                    localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(this.localStorageMissedRequests));\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(this.localStorageMissedRequests));\r\n                }\r\n            }\r\n            else {\r\n                this.removeItem(isTbd ? location.TBDGroupId : location.JobId, location.DeliveryRequestType, isTbd);\r\n                $(element).removeClass('selected');\r\n            }\r\n        }\r\n        else if (location.DeliveryRequestType == DeliveryRequestTypes.MustGo) {\r\n            var index = -1;\r\n            if (isTbd == false)\r\n                index = this.localStorageMustGoRequests.findIndex(x => x.JobId == location.JobId);\r\n            else\r\n                index = this.localStorageMustGoRequests.findIndex(x => x.TBDGroupId == location.TBDGroupId);\r\n            if (index == -1) {\r\n                $(element).addClass('selected');\r\n                this.localStorageMustGoRequests.unshift(location);\r\n                var deliveryRequests = localStorage.getItem(\"mustGoDeliveryRequest\");\r\n                if (deliveryRequests != null) {\r\n                    localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(this.localStorageMustGoRequests));\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(this.localStorageMustGoRequests));\r\n                }\r\n            }\r\n            else {\r\n                this.removeItem(isTbd ? location.TBDGroupId : location.JobId, location.DeliveryRequestType, isTbd);\r\n                $(element).removeClass('selected');\r\n            }\r\n        }\r\n        else if (location.DeliveryRequestType == DeliveryRequestTypes.ShouldGo) {\r\n            var index = -1;\r\n            if (isTbd == false)\r\n                index = this.localStorageShouldGoRequests.findIndex(x => x.JobId == location.JobId);\r\n            else\r\n                index = this.localStorageShouldGoRequests.findIndex(x => x.TBDGroupId == location.TBDGroupId);\r\n            if (index == -1) {\r\n                $(element).addClass('selected');\r\n                this.localStorageShouldGoRequests.unshift(location);\r\n                var deliveryRequests = localStorage.getItem(\"shouldGoDeliveryRequest\");\r\n                if (deliveryRequests != null) {\r\n                    localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(this.localStorageShouldGoRequests));\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(this.localStorageShouldGoRequests));\r\n                }\r\n            }\r\n            else {\r\n                this.removeItem(isTbd ? location.TBDGroupId : location.JobId, location.DeliveryRequestType, isTbd);\r\n                $(element).removeClass('selected');\r\n            }\r\n        }\r\n        else {\r\n            var index = -1;\r\n            if (isTbd == false)\r\n                index = this.localStorageCouldGoRequests.findIndex(x => x.JobId == location.JobId);\r\n            else\r\n                index = this.localStorageCouldGoRequests.findIndex(x => x.TBDGroupId == location.TBDGroupId);\r\n            if (index == -1) {\r\n                $(element).addClass('selected');\r\n                this.localStorageCouldGoRequests.unshift(location);\r\n                var deliveryRequests = localStorage.getItem(\"couldGoDeliveryRequest\");\r\n                if (deliveryRequests != null) {\r\n                    localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(this.localStorageCouldGoRequests));\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(this.localStorageCouldGoRequests));\r\n                }\r\n            }\r\n            else {\r\n                this.removeItem(isTbd ? location.TBDGroupId : location.JobId, location.DeliveryRequestType, isTbd);\r\n                $(element).removeClass('selected');\r\n            }\r\n        }\r\n\r\n    }\r\n    removeItem(locationId, locationPriority, isTBD) {\r\n\r\n        localStorage.setItem(\"refreshLocalStorage\", 'true');\r\n\r\n        if (locationPriority == DeliveryRequestTypes.Missed) {\r\n            if (this.localStorageMissedRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTBD == false)\r\n                    index = this.localStorageMissedRequests.findIndex(x => x.JobId == locationId);\r\n                else\r\n                    index = this.localStorageMissedRequests.findIndex(x => x.TBDGroupId == locationId);\r\n                if (index >= 0) {\r\n                    this.localStorageMissedRequests.splice(index, 1);\r\n                    this.localStorageMissedRequests.slice();\r\n                    localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify(this.localStorageMissedRequests));\r\n                }\r\n            }\r\n        }\r\n        else if (locationPriority == DeliveryRequestTypes.MustGo) {\r\n            if (this.localStorageMustGoRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTBD == false)\r\n                    index = this.localStorageMustGoRequests.findIndex(x => x.JobId == locationId);\r\n                else\r\n                    index = this.localStorageMustGoRequests.findIndex(x => x.TBDGroupId == locationId);\r\n                if (index >= 0) {\r\n                    this.localStorageMustGoRequests.splice(index, 1);\r\n                    this.localStorageMustGoRequests.slice();\r\n                    localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify(this.localStorageMustGoRequests));\r\n                }\r\n            }\r\n        }\r\n        else if (locationPriority == DeliveryRequestTypes.ShouldGo) {\r\n            if (this.localStorageShouldGoRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTBD == false)\r\n                    index = this.localStorageShouldGoRequests.findIndex(x => x.JobId == locationId);\r\n                else\r\n                    index = this.localStorageShouldGoRequests.findIndex(x => x.TBDGroupId == locationId);\r\n                if (index >= 0) {\r\n                    this.localStorageShouldGoRequests.splice(index, 1);\r\n                    this.localStorageShouldGoRequests.slice();\r\n                    localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify(this.localStorageShouldGoRequests));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.localStorageCouldGoRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTBD == false)\r\n                    index = this.localStorageCouldGoRequests.findIndex(x => x.JobId == locationId);\r\n                else\r\n                    index = this.localStorageCouldGoRequests.findIndex(x => x.TBDGroupId == locationId);\r\n                if (index >= 0) {\r\n                    this.localStorageCouldGoRequests.splice(index, 1);\r\n                    this.localStorageCouldGoRequests.slice();\r\n                    localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify(this.localStorageCouldGoRequests));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    resetLocalStorage() {\r\n\r\n        localStorage.setItem(\"refreshLocalStorage\", 'true');\r\n\r\n        localStorage.setItem(\"mustGoDeliveryRequest\", JSON.stringify([]));\r\n        localStorage.setItem(\"shouldGoDeliveryRequest\", JSON.stringify([]));\r\n        localStorage.setItem(\"couldGoDeliveryRequest\", JSON.stringify([]));\r\n        localStorage.setItem(\"missedDeliveryRequest\", JSON.stringify([]));\r\n        localStorage.setItem(\"refreshRegion\", JSON.stringify(false));\r\n        localStorage.setItem(\"regionId\", JSON.stringify(''));\r\n        localStorage.setItem(\"updateRequest\", JSON.stringify(false));\r\n    }\r\n\r\n    bindDeliveryRequests(location: DelRequestsByJobModel, $event) {\r\n        $event.stopPropagation();\r\n        this.selectedJobRequests = sortBy(location.DeliveryRequests, 'ProductType');\r\n    }\r\n\r\n    checkItemsExists(jobId: any, drType: DeliveryRequestTypes, isTbd: boolean) {\r\n        var updateRequest = null;\r\n        if (localStorage.getItem(\"recordPriorityChange\") != null) {\r\n            updateRequest = JSON.parse(localStorage.getItem(\"recordPriorityChange\")) as DeliveryRequestViewModel;\r\n        }\r\n        if (drType == DeliveryRequestTypes.Missed) {\r\n            if (this.localStorageMissedRequests.length > 0) {\r\n                let index = -1;\r\n                if (isTbd == false)\r\n                    index = this.localStorageMissedRequests.findIndex(x => x.JobId == jobId);\r\n                else\r\n                    index = this.localStorageMissedRequests.findIndex(x => x.TBDGroupId == jobId);\r\n                if (index >= 0) {\r\n                    var drPriority = this.deliveryRequestService.getPriority(this.localStorageMissedRequests[index].DeliveryRequests);\r\n                    if (drPriority == DeliveryReqPriority.MustGo) {\r\n                        return \"radius-5 pa10 bg-lightgrey mustgo selected\";\r\n                    }\r\n                    if (drPriority == DeliveryReqPriority.ShouldGo) {\r\n                        return \"radius-5 pa10 bg-lightgrey shouldgo selected\";\r\n                    }\r\n                    if (drPriority == DeliveryReqPriority.CouldGo) {\r\n                        return \"radius-5 pa10 bg-lightgrey couldgo selected\";\r\n                    }\r\n                }\r\n                else if (updateRequest && ((updateRequest.IsTBD == false && updateRequest.JobId && updateRequest.JobId == jobId) || (updateRequest.IsTBD == true && updateRequest.TBDGroupId && updateRequest.TBDGroupId == jobId))) {\r\n                    if (drPriority == 1) {\r\n                        return \"radius-5 pa10 bg-lightgrey mustgo selected\";\r\n                    }\r\n                    if (drPriority == 2) {\r\n                        return \"radius-5 pa10 bg-lightgrey shouldgo selected\";\r\n                    }\r\n                    if (drPriority == 3) {\r\n                        return \"radius-5 pa10 bg-lightgrey couldgo selected\";\r\n                    }\r\n                }\r\n                else {\r\n                    return \"radius-5 pa10 bg-lightgrey\";\r\n                }\r\n            }\r\n            else {\r\n                return \"radius-5 pa10 bg-lightgrey\";\r\n            }\r\n        }\r\n        else if (drType == DeliveryRequestTypes.MustGo) {\r\n            if (this.localStorageMustGoRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTbd == false)\r\n                    index = this.localStorageMustGoRequests.findIndex(x => x && x.JobId && x.JobId == jobId);\r\n                else\r\n                    index = this.localStorageMustGoRequests.findIndex(x => x && x.TBDGroupId && x.TBDGroupId == jobId);\r\n                if (index >= 0) {\r\n                    return \"radius-5 pa10 bg-lightgrey  selected\";\r\n                }\r\n                else if (updateRequest && ((updateRequest.IsTBD == false && updateRequest.JobId && updateRequest.JobId == jobId) || (updateRequest.IsTBD == true && updateRequest.TBDGroupId && updateRequest.TBDGroupId == jobId))) {\r\n                    return \"radius-5 pa10 bg-lightgrey  selected\";\r\n                }\r\n                else {\r\n                    return \"radius-5 pa10 bg-lightgrey\";\r\n                }\r\n            }\r\n            else {\r\n                return \"radius-5 pa10 bg-lightgrey\";\r\n            }\r\n        }\r\n        else if (drType == DeliveryRequestTypes.ShouldGo) {\r\n            if (this.localStorageShouldGoRequests.length > 0) {\r\n                var index = -1;\r\n                if (isTbd == false)\r\n                    index = this.localStorageShouldGoRequests.findIndex(x => x.JobId == jobId);\r\n                else\r\n                    index = this.localStorageShouldGoRequests.findIndex(x => x.TBDGroupId == jobId);\r\n                if (index >= 0) {\r\n                    return \"radius-5 pa10 bg-lightgrey selected\";\r\n                }\r\n                else if (updateRequest && ((updateRequest.IsTBD == false && updateRequest.JobId && updateRequest.JobId == jobId) || (updateRequest.IsTBD == true && updateRequest.TBDGroupId && updateRequest.TBDGroupId == jobId))) {\r\n                    return \"radius-5 pa10 bg-lightgrey selected\";\r\n                }\r\n                else {\r\n                    return \"radius-5 pa10 bg-lightgrey\";\r\n                }\r\n            }\r\n            else {\r\n                return \"radius-5 pa10 bg-lightgrey\";\r\n            }\r\n        }\r\n        else if (drType == DeliveryRequestTypes.CouldGo) {\r\n            if (this.localStorageCouldGoRequests.length > 0) {\r\n                let index = -1;\r\n                if (isTbd == false)\r\n                    index = this.localStorageCouldGoRequests.findIndex(x => x.JobId == jobId);\r\n                else\r\n                    index = this.localStorageCouldGoRequests.findIndex(x => x.TBDGroupId == jobId);\r\n                if (index >= 0) {\r\n                    return \"radius-5 pa10 bg-lightgrey  selected\";\r\n                }\r\n                else if (updateRequest && ((updateRequest.IsTBD == false && updateRequest.JobId && updateRequest.JobId == jobId) || (updateRequest.IsTBD == true && updateRequest.TBDGroupId && updateRequest.TBDGroupId == jobId))) {\r\n                    return \"radius-5 pa10 bg-lightgrey selected\";\r\n                }\r\n                else {\r\n                    return \"radius-5 pa10 bg-lightgrey\";\r\n                }\r\n            }\r\n            else {\r\n                return \"radius-5 pa10 bg-lightgrey\";\r\n            }\r\n        }\r\n    }\r\n    GetDrsForMultiWindow() {\r\n        this.getDeliveryRequests(regionId);\r\n    }\r\n}\r\n\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12 text-right\"></div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"container-fluid\" [formGroup]=\"SbForm\">\r\n            <div class=\"row\" *ngIf=\"this.changeDeteaction\">\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"alert alert-warning fs12 radius-10\">\r\n                        <p>Due to region/window mode change session data removed.Close the current window and reopen it again from schedule builder.</p>\r\n                        <p>Otherwise, window closed after 10 seconds.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mb10\">\r\n                <div class=\"col-sm-6\">\r\n                    <h1 class=\"dib fs16 mr10 mt0\">Delivery Request</h1>\r\n                    <div class=\"dib\"><input type=\"text\" placeholder=\"Search\" class=\"form-control radius-10\" formControlName=\"searchField\"></div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <app-dip-test (OnRaiseDRFromMultiWindow)=\"GetDrsForMultiWindow()\" [IsThisFromDrDisplay]=\"true\" [SelectedRegionId]=\"regionId\"></app-dip-test>\r\n                </div>\r\n            </div>\r\n            <div class=\"pr\">\r\n                <div *ngIf=\"_loadingDrRequests\" class=\"pa bg-white z-index5 loading-wrapper\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"radius-5 border shadowb shadow-b\" *ngIf=\"missedRequests.length > 0\">\r\n                    <h2 class=\"fs11 mt5 mb5 ml10 dib missed-status pt5 pb5 pl10 pr10 radius-10\">Missed</h2>\r\n                    <div class=\"missed-wrapper\">\r\n                        <div class=\"row\" *ngIf=\"missedRequests.length>0\">\r\n                            <div class=\"col-sm-3 mb10\" *ngFor=\"let drMissed of missedRequests\">\r\n                                <div *ngIf=\"!drMissed.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drMissed.JobId,drMissed.DeliveryRequestType, drMissed.IsTBD)\" (click)=\"pushItem(drMissed,drMissed.JobId)\" style=\"cursor:pointer;\" id=\"missed-{{drMissed.JobId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\">\r\n                                            <div class=\"custom_setting\" *ngIf=\"drMissed.DRQueueAttributes.CustomerName==true\">\r\n                                                <div class=\"brand-name\">\r\n                                                    <div *ngIf=\"drMissed.CustomerBrandId;else customerCompany\">\r\n                                                        {{drMissed.CustomerBrandId}}\r\n                                                    </div>\r\n                                                    <ng-template #customerCompany>\r\n                                                        <div class=\"brand-name\">\r\n                                                            {{ (drMissed.CustomerCompany.length>6)? (drMissed.CustomerCompany | slice:0:6)+'..':(drMissed.CustomerCompany) }} -&nbsp;\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"job-location\">\r\n                                                {{drMissed.JobName}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"job-city\">\r\n                                                {{drMissed.JobCity}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"compability-type\" *ngIf=\"drMissed.DRQueueAttributes.TrailerCompatibility == true\">\r\n                                                    {{drMissed.TrailerCompatibility}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!--<span class=\"duration\" *ngIf=\"drMissed.DeliveryWindow && drMissed.DeliveryWindow != ''\">\r\n                                            {{drMissed.DeliveryWindow}} hrs\r\n                                        </span>-->\r\n                                        <div class=\"custom_settings\" *ngIf=\"drMissed.DRQueueAttributes && drMissed.DRQueueAttributes.HoursToCoverDistance == true\">\r\n                                            <span class=\"duration\" *ngIf=\"drMissed.HoursToCoverDistance\">\r\n                                                {{drMissed.HoursToCoverDistance}} hrs\r\n                                            </span>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <span class=\"mr5\">\r\n                                                <span *ngIf=\"drMissed.DRQueueAttributes.DeliveryShift == true\">\r\n                                                    <i class=\"fas fa-moon fs12\" *ngIf=\"drMissed.IsOnlyNightDelivery == true\"></i>\r\n                                                </span>\r\n                                            </span>\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drMissed,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"drMissed.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drMissed.TBDGroupId,drMissed.DeliveryRequestType, drMissed.IsTBD)\" (click)=\"pushItem(drMissed,drMissed.TBDGroupId)\" style=\"cursor:pointer;\" id=\"missed-{{drMissed.TBDGroupId}}\">\r\n                                    <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\" TBD- {{drMissed.ProductType +' -'}} {{ drMissed.RequiredQuantity==0?drMissed.ScheduleQuantityTypeText:drMissed.RequiredQuantity + (( drMissed.UoM == 1 ? ' G' : ' L'))}}\">\r\n                                        <div class=\"brand-name\" *ngIf=\"drMissed.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                            TBD - {{ (drMissed.ProductType.length>10)? (drMissed.ProductType | slice:0:10)+'..':(drMissed.ProductType)}} {{'(' +drMissed.RequiredQuantity + ( drMissed.UoM == 1 ? ' G' : ' L' ) +')'  }} {{ (drMissed.DeliveryRequests.length >1)?': (+'+ (drMissed.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                        </div>\r\n                                        <ng-template #ScheduleQuantityTypeText>\r\n                                            <div class=\"brand-name\">\r\n                                                TBD - {{ (drMissed.ProductType.length>10)? (drMissed.ProductType | slice:0:10)+'..':(drMissed.ProductType)}} {{'(' +drMissed.ScheduleQuantityTypeText+')' }} {{ (drMissed.DeliveryRequests.length >1)?': (+'+ (drMissed.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                    <span class=\"click-icon\">\r\n                                        <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drMissed,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                            <i class=\"fas fa-arrow-right\"></i>\r\n                                        </a>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb10\" *ngIf=\"missedRequests.length==0\">\r\n                            <div class=\"col-sm-2 mb10\">\r\n                                No request available\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"radius-5 border shadowb shadow-b mb20\">\r\n                    <h2 class=\"fs11 mt5 mb5 ml10 dib mustgo-status pt5 pb5 pl10 pr10 radius-10\">Must Go</h2>\r\n                    <div class=\"mustgo-wrapper\">\r\n                        <div class=\"row\" *ngIf=\"mustGoRequests.length>0\">\r\n                            <div class=\"col-sm-3 mb10\" *ngFor=\"let drmustGo of mustGoRequests\">\r\n                                <div *ngIf=\"!drmustGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drmustGo.JobId,drmustGo.DeliveryRequestType,drmustGo.IsTBD)\" (click)=\"pushItem(drmustGo,drmustGo.JobId)\" style=\"cursor:pointer;\" id=\"mustgo-{{drmustGo.JobId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\">\r\n                                            <div class=\"custom_setting\" *ngIf=\"drmustGo.DRQueueAttributes.CustomerName==true\">\r\n                                                <div class=\"brand-name\">\r\n                                                    <div *ngIf=\"drmustGo.CustomerBrandId;else customerCompany\">\r\n                                                        {{drmustGo.CustomerBrandId}}\r\n                                                    </div>\r\n                                                    <ng-template #customerCompany>\r\n                                                        <div class=\"brand-name\">\r\n                                                            {{ (drmustGo.CustomerCompany.length>6)? (drmustGo.CustomerCompany | slice:0:6)+'..':(drmustGo.CustomerCompany) }} -&nbsp;\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"job-location\">\r\n                                                {{drmustGo.JobName}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"job-city\">\r\n                                                {{drmustGo.JobCity}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"custom_setting\">\r\n                                                <div *ngIf=\"drmustGo.DRQueueAttributes.TrailerCompatibility == true\">\r\n                                                    <div class=\"compability-type\">\r\n                                                        {{drmustGo.TrailerCompatibility}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"duration\" *ngIf=\"drmustGo.DRQueueAttributes.HoursToCoverDistance == true && drmustGo.HoursToCoverDistance\">\r\n                                            {{drmustGo.HoursToCoverDistance}} hrs\r\n                                        </span>\r\n                                        <span class=\"click-icon\">\r\n                                            <span class=\"mr5\">\r\n                                                <span *ngIf=\"drmustGo.DRQueueAttributes.DeliveryShift == true\">\r\n                                                    <i class=\"fas fa-moon fs12\" *ngIf=\"drmustGo.IsOnlyNightDelivery == true\"></i>\r\n                                                </span>\r\n                                            </span>\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drmustGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"drmustGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drmustGo.TBDGroupId,drmustGo.DeliveryRequestType,drmustGo.IsTBD)\" (click)=\"pushItem(drmustGo,drmustGo.TBDGroupId)\" style=\"cursor:pointer;\" id=\"mustgo-{{drmustGo.TBDGroupId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\"TBD- {{drmustGo.ProductType +' -'}} {{ drmustGo.RequiredQuantity==0?drmustGo.ScheduleQuantityTypeText:drmustGo.RequiredQuantity + (( drmustGo.UoM == 1 ? ' G' : ' L'))}}\">\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"brand-name\" *ngIf=\"drmustGo.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                                    TBD - {{ (drmustGo.ProductType.length>10)? (drmustGo.ProductType | slice:0:10)+'..':(drmustGo.ProductType)}} {{'(' +drmustGo.RequiredQuantity + ( drmustGo.UoM == 1 ? ' G' : ' L' ) +')'  }} {{ (drmustGo.DeliveryRequests.length >1)?': (+'+ (drmustGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                </div>\r\n                                                <ng-template #ScheduleQuantityTypeText>\r\n                                                    <div class=\"brand-name\">\r\n                                                        TBD - {{ (drmustGo.ProductType.length>10)? (drmustGo.ProductType | slice:0:10)+'..':(drmustGo.ProductType)}} {{'(' +drmustGo.ScheduleQuantityTypeText+')' }} {{ (drmustGo.DeliveryRequests.length >1)?': (+'+ (drmustGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drmustGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"mustGoRequests.length==0\">\r\n                            <div class=\"col-sm-2 mb10\">\r\n                                No request available\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"radius-5 border shadowb shadow-b mb20\">\r\n                    <h2 class=\"fs11 mt5 mb5 ml10 dib shouldgo-status pt5 pb5 pl10 pr10 radius-10\">Should Go</h2>\r\n                    <div class=\"shouldgo-wrapper\">\r\n                        <div class=\"row\" *ngIf=\"shouldGoRequests.length>0\">\r\n                            <div class=\"col-sm-3 mb10\" *ngFor=\"let drshouldGo of shouldGoRequests\">\r\n                                <div *ngIf=\"!drshouldGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drshouldGo.JobId,drshouldGo.DeliveryRequestType,drshouldGo.IsTBD)\" (click)=\"pushItem(drshouldGo,drshouldGo.JobId)\" style=\"cursor:pointer;\" id=\"shouldgo-{{drshouldGo.JobId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\">\r\n                                            <div class=\"custom_setting\" *ngIf=\"drshouldGo.DRQueueAttributes.CustomerName==true\">\r\n                                                <div class=\"brand-name\">\r\n                                                    <div *ngIf=\"drshouldGo.CustomerBrandId;else customerCompany\">\r\n                                                        {{drshouldGo.CustomerBrandId}}\r\n                                                    </div>\r\n                                                    <ng-template #customerCompany>\r\n                                                        <div class=\"brand-name\">\r\n                                                            {{ (drshouldGo.CustomerCompany.length>6)? (drshouldGo.CustomerCompany | slice:0:6)+'..':(drshouldGo.CustomerCompany) }} -&nbsp;\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"job-location\">\r\n                                                {{drshouldGo.JobName}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"job-city\">\r\n                                                {{drshouldGo.JobCity}} &nbsp;\r\n                                            </div>\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"compability-type\" *ngIf=\"drshouldGo.DRQueueAttributes.TrailerCompatibility == true\">\r\n                                                    {{drshouldGo.TrailerCompatibility}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"custom_setting\" *ngIf=\"drshouldGo.DRQueueAttributes.HoursToCoverDistance == true\">\r\n                                            <span class=\"duration\" *ngIf=\"drshouldGo.HoursToCoverDistance && drshouldGo.HoursToCoverDistance != ''\">\r\n                                                {{drshouldGo.HoursToCoverDistance}} hrs\r\n                                            </span>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <span class=\"mr5\">\r\n                                                <span *ngIf=\"drshouldGo.DRQueueAttributes.DeliveryShift == true\">\r\n                                                    <i class=\"fas fa-moon fs12\" *ngIf=\"drshouldGo.IsOnlyNightDelivery == true\"></i>\r\n                                                </span>\r\n                                            </span>\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drshouldGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"drshouldGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drshouldGo.TBDGroupId,drshouldGo.DeliveryRequestType,drshouldGo.IsTBD)\" (click)=\"pushItem(drshouldGo,drshouldGo.TBDGroupId)\" style=\"cursor:pointer;\" id=\"shouldgo-{{drshouldGo.TBDGroupId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\" TBD- {{drshouldGo.ProductType +' -'}} {{ drshouldGo.RequiredQuantity==0?drshouldGo.ScheduleQuantityTypeText:drshouldGo.RequiredQuantity + (( drshouldGo.UoM == 1 ? ' G' : ' L'))}}\">\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"brand-name\" *ngIf=\"drshouldGo.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                                    TBD - {{ (drshouldGo.ProductType.length>10)? (drshouldGo.ProductType | slice:0:10)+'..':(drshouldGo.ProductType)}} {{'(' +drshouldGo.RequiredQuantity + ( drshouldGo.UoM == 1 ? ' G' : ' L' ) +')'  }} {{ (drshouldGo.DeliveryRequests.length >1)?': (+'+ (drshouldGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                </div>\r\n                                                <ng-template #ScheduleQuantityTypeText>\r\n                                                    <div class=\"brand-name\">\r\n                                                        TBD - {{ (drshouldGo.ProductType.length>10)? (drshouldGo.ProductType | slice:0:10)+'..':(drshouldGo.ProductType)}} {{'(' +drshouldGo.ScheduleQuantityTypeText+')' }} {{ (drshouldGo.DeliveryRequests.length >1)?': (+'+ (drshouldGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drshouldGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\" *ngIf=\"shouldGoRequests.length==0\">\r\n                            <div class=\"col-sm-2 mb10\">\r\n                                No request available\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"radius-5 border shadowb shadow-b\">\r\n                    <h2 class=\"fs11 mt5 mb5 ml10 dib couldgo-status pt5 pb5 pl10 pr10 radius-10\">Could Go</h2>\r\n                    <div class=\"couldgo-wrapper\">\r\n                        <div class=\"row\" *ngIf=\"couldGoRequests.length>0\">\r\n                            <div class=\"col-sm-3 mb10\" *ngFor=\"let drcouldGo of couldGoRequests\">\r\n                                <div *ngIf=\"!drcouldGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drcouldGo.JobId,drcouldGo.DeliveryRequestType,drcouldGo.IsTBD)\" (click)=\"pushItem(drcouldGo,drcouldGo.JobId)\" style=\"cursor:pointer;\" id=\"couldgo-{{drcouldGo.JobId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\">\r\n                                            <div class=\"custom_setting\" *ngIf=\"drcouldGo.DRQueueAttributes.CustomerName==true\">\r\n                                                <div class=\"brand-name\">\r\n                                                    <div *ngIf=\"drcouldGo.CustomerBrandId;else customerCompany\">\r\n                                                        {{drcouldGo.CustomerBrandId}}\r\n                                                    </div>\r\n                                                    <ng-template #customerCompany>\r\n                                                        <div class=\"brand-name\">\r\n                                                            {{ (drcouldGo.CustomerCompany.length>6)? (drcouldGo.CustomerCompany | slice:0:6)+'..':(drcouldGo.CustomerCompany) }} -&nbsp;\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"job-location\">\r\n                                                {{drcouldGo.JobName}}&nbsp;\r\n                                            </div>\r\n                                            <div class=\"job-city\">\r\n                                                {{drcouldGo.JobCity}} &nbsp;\r\n                                            </div>\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"compability-type\" *ngIf=\"drcouldGo.DRQueueAttributes.TrailerCompatibility == true\">\r\n                                                    {{drcouldGo.TrailerCompatibility}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"custom_setting\" *ngIf=\"drcouldGo.DRQueueAttributes.HoursToCoverDistance == true\">\r\n                                            <span class=\"duration\" *ngIf=\"drcouldGo.HoursToCoverDistance && drcouldGo.HoursToCoverDistance != ''\">\r\n                                                {{drcouldGo.HoursToCoverDistance}} hrs\r\n                                            </span>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <span class=\"mr5\">\r\n                                                <span *ngIf=\"drcouldGo.DRQueueAttributes.DeliveryShift == true\">\r\n                                                    <i class=\"fas fa-moon fs12\" *ngIf=\"drcouldGo.IsOnlyNightDelivery == true\"></i>\r\n                                                </span>\r\n                                            </span>\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drcouldGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"drcouldGo.IsTBD\" class=\"dr-queue\" [ngClass]=\"checkItemsExists(drcouldGo.TBDGroupId,drcouldGo.DeliveryRequestType,drcouldGo.IsTBD)\" (click)=\"pushItem(drcouldGo,drcouldGo.TBDGroupId)\" style=\"cursor:pointer;\" id=\"couldgo-{{drcouldGo.TBDGroupId}}\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 dr-info\" placement=\"bottom-left\" container=\"body\" ngbTooltip=\" TBD- {{drcouldGo.ProductType +' -'}} {{ drcouldGo.RequiredQuantity==0?drcouldGo.ScheduleQuantityTypeText:drcouldGo.RequiredQuantity + (( drcouldGo.UoM == 1 ? ' G' : ' L'))}}\">\r\n                                            <div class=\"custom_setting\">\r\n                                                <div class=\"brand-name\" *ngIf=\"drcouldGo.RequiredQuantity > 0;else ScheduleQuantityTypeText\">\r\n                                                    TBD - {{ (drcouldGo.ProductType.length>10)? (drcouldGo.ProductType | slice:0:10)+'..':(drcouldGo.ProductType)}} {{'(' +drcouldGo.RequiredQuantity + ( drcouldGo.UoM == 1 ? ' G' : ' L' ) +')'  }} {{ (drcouldGo.DeliveryRequests.length >1)?': (+'+ (drcouldGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                </div>\r\n                                                <ng-template #ScheduleQuantityTypeText>\r\n                                                    <div class=\"brand-name\">\r\n                                                        TBD - {{ (drcouldGo.ProductType.length>10)? (drcouldGo.ProductType | slice:0:10)+'..':(drcouldGo.ProductType)}} {{'(' +drcouldGo.ScheduleQuantityTypeText+')' }} {{ (drcouldGo.DeliveryRequests.length >1)?': (+'+ (drcouldGo.DeliveryRequests.length -1) +')' : '' }} &nbsp;&nbsp;\r\n                                                    </div>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"click-icon\">\r\n                                            <a type=\"button\" placement=\"right\" (click)=\"bindDeliveryRequests(drcouldGo,$event)\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                                <i class=\"fas fa-arrow-right\"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"row mb10\" *ngIf=\"couldGoRequests.length==0\">\r\n                            <div class=\"col-sm-2 mb10\">\r\n                                No request available\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row\">\r\n            <ng-container *ngFor=\"let dr of selectedJobRequests; let i = index;\">\r\n                <div id=\"dr_{{i+1}}\" *ngIf=\"!dr.IsBlendedRequest || dr.IsBlendedDrParent\" class=\"col-12 product-details\" [ngClass]=\"{'must-go': (dr.Priority==1) , 'should-go': (dr.Priority==2) ,'could-go': (dr.Priority==3) }\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <div class=\"product-name\">\r\n                                <span *ngIf=\"dr.IsBlendedRequest === true\"><span class=\"text-muted\">{{dr.AdditiveProductName}}</span>, {{dr.BlendedProductName}}</span>\r\n                                <span *ngIf=\"dr.IsBlendedRequest != true\">{{dr.ProductType}}</span>\r\n                                <span *ngIf=\"dr.IsAutoCreatedDR\">\r\n                                    <i class=\"fas fa-magic ml10\" title=\"Auto-Generated\"></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <span class=\"product-qty\" *ngIf=\"dr.RequiredQuantity > 0 && !dr.IsBlendedRequest\">{{dr.RequiredQuantity | number:'1.0-2'}}{{dr.UoM == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.RequiredQuantity > 0 && dr.IsBlendedRequest\">{{dr.TotalBlendedQuantity | number:'1.0-2'}}{{dr.UoM == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.RequiredQuantity == 0\">{{dr.ScheduleQuantityTypeText}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\nimport { DeliveryRequestDisplayComponent } from './delivery-request-display.component';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routesDrDisplay: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: DeliveryRequestDisplayComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DeliveryRequestDisplayComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        NgDragDropModule.forRoot(),\r\n        RouterModule.forChild(routesDrDisplay)\r\n    ]\r\n})\r\n\r\nexport class DeliveryRequestDisplayModule { }\r\n"]}