{"version":3,"sources":["webpack:///src/app/third-party-network/dashboard/dashboard.component.ts","webpack:///src/app/third-party-network/dashboard/dashboard.component.html","webpack:///src/app/third-party-network/third-party-network.module.ts","webpack:///src/app/third-party-network/third-party-network.service.ts"],"names":["DashboardComponent","thirdPartyNetworkService","fb","stateListService","invitationService","dtTrigger1","dtTrigger2","dtOptions","PageLoader","InvitationToken","RegisteredCompanies","NonRegisteredCompanies","IsRegisteredCompany","IsThirdPartyEnabled","_opened","_initiated","FuelTrailerAssetType","DefTrailerAssetType","ServiceOfferingTypes","ServiceOfferingTypesDisplay","CountryList","StateList","Citylist","ServiceList","CitiesWithZip","ddlSetting","idField","textField","itemsShowLimit","allowSearchFilter","ZipDdlSettings","singleSelection","selectAllText","unSelectAllText","enableCheckAll","ddlCitySettings","countryId","filter","x","CountryId","initializeCarrierCustomers","GetInvitationTokenByCompany","GetRegisteredInvitedCompanies","GetNonRegisteredInvitedCompanies","getCountryList","getStatesOfAllCountries","initilizeFilterForm","InitializeServiceDropdown","bindServiceOfferingType","dtElements","forEach","dtElement","dtInstance","then","destroy","next","exportInvitedColumns","columns","dom","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","fixedHeader","lengthMenu","stateId","find","s","Id","Name","FilterForm","group","control","required","States","Cities","ZipCodes","ServicesOffered","IsPump","IsMetered","IsPackagedGoods","FTL","LTL","DEF","LTLWetHosing","DEFWetHosing","index","isNaN","Number","push","Code","subscribe","response","Status","Result","Message","GenerateInvitationToken","StatusCode","EntityNumber","input","length","refreshDatatable","getCountries","data","getStates","navigator","clipboard","writeText","window","location","origin","msgsuccess","undefined","selectedCompany","isRegisteredCompany","SelectedCompany","entityId","GetNonRegisteredInvitedCompany","companyId","GetRegisteredInvitedCompany","get","setValue","newStateAdded","_selectedStates","value","stateslist","map","t","join","GetCitiesFromStates","pipe","removeSelectedCitiesOfRemovedState","selectedZips","finalCities","selectedCity","c","CityId","patchValue","ZipCode","reset","selector","templateUrl","styleUrls","encapsulation","None","routeTPN","path","component","ThirdPartyNetworkModule","forChild","declarations","imports","ThirdPartyNetworkService","httpClient","urlGetInvitationTokenByCompany","urlGenerateInvitationToken","urlGetNonRegisteredInvitedCompanies","urlGetRegisteredInvitedCompanies","urlGetNonRegisteredInvitedCompany","urlGetRegisteredInvitedCompany","handleError","post","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIgB;;AACI;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AACA;;AACJ;;AACJ;;;;;;;;AACA;;AACI;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AACA;;AACJ;;AACJ;;;;;;AAZJ;;AACI;;AAMA;;AAMJ;;;;;;AAZS;;AAAA;;AAMA;;AAAA;;;;;;;;AAoCmB;;AACI;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiD;;AAAsB;;AAAI;;AAClF;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC9B;;;;;;AAT4D;;AAAA;;AACpD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAmCJ;;AACI;;AAAI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAoD;;AAAsB;;AAAI;;AACrF;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsB;;AAC9B;;;;;;AAT+D;;AAAA;;AACvD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAoEZ;;AACI;;AAAI;;AAA8D;;AAClE;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAwC;;AAC5C;;AAAI;;AAA0C;;AAC9C;;AAAI;;AAAoB;;AAC5B;;;;;;;;AALQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAuBR;;AACI;;AAAI;;AAAyD;;AAC7D;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAsC;;AAC1C;;AAAI;;AAAuC;;AAC3C;;AAAI;;AAAyC;;AAC7C;;AAAI;;AAAmB;;AAC3B;;;;;;;;AANQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AA4EhB;;AAAsD;;AAAM;;;;;;AAI5D;;AAAsD;;AAAM;;;;;;AAI5D;;AACI;;AACJ;;;;;;AAbZ;;AACI;;AACI;;AACI;;AACA;;AAA+C;;AAAiD;;AACpG;;AACA;;AACI;;AACA;;AAA+C;;AAAiB;;AACpE;;AACA;;AACI;;AAGA;;AAA+C;;AAAgB;;AACnE;;AACJ;;AACJ;;;;;;;;;AAdmB;;AAAA;;AACwC;;AAAA;;AAGxC;;AAAA;;AACwC;;AAAA;;AAGxC;;AAAA;;AAGwC;;AAAA;;;;;;AAf/D;;AACI;;AAkBJ;;;;;;;;AAlBkB;;AAAA;;;;;;AADlB;;;;;;;;AAAc;;;;;;AAkCN;;AACI;;AACJ;;;;;;AAF4C;;AACxC;;AAAA;;;;;;AAGR;;AACI;;AAA0B;;AAAQ;;AACtC;;;;;;AAWA;;AACI;;AAA0B;;AAAQ;;AACtC;;;;;;;;AA5BhB;;AACI;;AACI;;AACI;;AACI;;AAAwD;;AAAO;;AAC/D;;AAAyD;AAAA;;AAAA;;AAAA;AAAA;;AACrD;;AACI;;AACJ;;AACA;;AAGJ;;AACA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAK;;AAC7D;;AAEyB;AAAA;;AAAA;;AAAA,sCAAyB,IAAzB;AAA6B,SAA7B,EAA+B,aAA/B,EAA+B;AAAA;;AAAA;;AAAA,sCAA6B,IAA7B;AAAiC,SAAhE,EAA+B,YAA/B,EAA+B;AAAA;;AAAA;;AAAA,sCAA+D,KAA/D;AAAoE,SAAnG,EAA+B,eAA/B,EAA+B;AAAA;;AAAA;;AAAA,sCACD,KADC;AACI,SADnC;;AAEzB;;AACA;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAO;;AAC/D;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACA;;AAA6C;;AAAI;;AACrD;;AACA;;AACI;;AACA;;AAAgD;;AAAO;;AAC3D;;AACA;;AACI;;AAEA;;AAAsD;;AAAc;;AACxE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iBAAwB,WAAxB;AAAiC,SAAjC;;AAClB;;AACJ;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iBAAwB,WAAxB;AAAiC,SAAjC;;AAClB;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;;AA7E6B;;AASD;;AAAA;;AAIP;;AAAA;;AAQoB;;AAAA,iGAAuB,MAAvB,EAAuB,SAAvB;;AAKpB;;AAAA;;AAUoB;;AAAA,qGAA2B,MAA3B,EAA2B,qBAA3B;;AAQA;;AAAA,iGAAuB,MAAvB,EAAuB,mBAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QDjUhCA,kB;AAyDX,kCACUC,wBADV,EAEUC,EAFV,EAGUC,gBAHV,EAIUC,iBAJV,EAI8C;AAAA;;AAHpC,aAAAH,wBAAA,GAAAA,wBAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AA5DV,aAAAC,UAAA,GAA2B,IAAI,4CAAJ,EAA3B;AACA,aAAAC,UAAA,GAA2B,IAAI,4CAAJ,EAA3B;AACA,aAAAC,SAAA,GAAiB,EAAjB;AAIA,aAAAC,UAAA,GAAsB,KAAtB;AACA,aAAAC,eAAA,GAA0B,IAA1B;AACA,aAAAC,mBAAA,GAA6C,EAA7C;AACA,aAAAC,sBAAA,GAAgD,EAAhD,CAmD8C,CAlD9C;;AACO,aAAAC,mBAAA,GAA+B,IAA/B;AACA,aAAAC,mBAAA,GAA+B,IAA/B;AACA,aAAAC,OAAA,GAAmB,KAAnB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AAEA,aAAAC,oBAAA,GAAoD,qEAApD;AACA,aAAAC,mBAAA,GAAkD,oEAAlD;AACA,aAAAC,oBAAA,GAAmD,oEAAnD;AACA,aAAAC,2BAAA,GAA2D,EAA3D;AAIP,aAAAC,WAAA,GAA8B,EAA9B;AACA,aAAAC,SAAA,GAAyC,EAAzC;AACA,aAAAC,QAAA,GAA2B,EAA3B;AACA,aAAAC,WAAA,GAA8B,EAA9B;AACA,aAAAC,aAAA,GAA+B,EAA/B;AAEA,aAAAC,UAAA,GAAgC;AAC9BC,iBAAO,EAAE,IADqB;AAE9BC,mBAAS,EAAE,MAFmB;AAG9BC,wBAAc,EAAE,CAHc;AAI9BC,2BAAiB,EAAE;AAJW,SAAhC;AAMA,aAAAC,cAAA,GAAoC;AAClCC,yBAAe,EAAE,KADiB;AAElCL,iBAAO,EAAE,SAFyB;AAGlCC,mBAAS,EAAE,SAHuB;AAIlCK,uBAAa,EAAE,YAJmB;AAKlCC,yBAAe,EAAE,cALiB;AAMlCL,wBAAc,EAAE,CANkB;AAOlCC,2BAAiB,EAAE,IAPe;AAQlCK,wBAAc,EAAE;AARkB,SAApC;AAUA,aAAAC,eAAA,GAAqC;AACnCJ,yBAAe,EAAE,KADkB;AAEnCL,iBAAO,EAAE,QAF0B;AAGnCC,mBAAS,EAAE,UAHwB;AAInCK,uBAAa,EAAE,YAJoB;AAKnCC,yBAAe,EAAE,cALkB;AAMnCL,wBAAc,EAAE,CANmB;AAOnCC,2BAAiB,EAAE,IAPgB;AAQnCK,wBAAc,EAAE;AARmB,SAArC;AAgBK,O,CA1DL;;;;;aACA,eAAuB;AAAA;;AAAU,iBAAO,UAACE,SAAD;AAAA,mBAAuB,KAAI,CAACf,SAAL,CAAegB,MAAf,CAAsB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,SAAF,IAAeH,SAAnB;AAAA,aAAvB,CAAvB;AAAA,WAAP;AAAqF;;;eA2DtH,oBAAW;AACT,eAAKI,0BAAL;AACA,eAAKC,2BAAL;AACA,eAAKC,6BAAL;AACA,eAAKC,gCAAL;AACA,eAAKC,cAAL;AACA,eAAKC,uBAAL;AACA,eAAKC,mBAAL;AACA,eAAKC,yBAAL;AACA,eAAKC,uBAAL;AACD;;;eAGD,4BAAgB;AACd,eAAKC,UAAL,CAAgBC,OAAhB,CAAwB,UAACC,SAAD,EAAmC;AACzD,gBAAIA,SAAS,CAACC,UAAd,EAA0B;AACxBD,uBAAS,CAACC,UAAV,CAAqBC,IAArB,CAA0B,UAACD,UAAD,EAAgC;AAAEA,0BAAU,CAACE,OAAX;AAAuB,eAAnF;AACD;AACF,WAJD;AAKA,eAAKjD,UAAL,CAAgBkD,IAAhB;AACA,eAAKjD,UAAL,CAAgBiD,IAAhB;AACD;;;eACD,sCAA6B;AAC3B,cAAIC,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKlD,SAAL,GAAiB;AACbmD,eAAG,EAAE,0BADQ;AAEbC,mBAAO,EAAE,CACL;AAAEC,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkBC,2BAAa,EAAEL;AAAjC,aAFK,EAGL;AAAEI,oBAAM,EAAE,KAAV;AAAiBE,mBAAK,EAAE,kBAAxB;AAA4CD,2BAAa,EAAEL;AAA3D,aAHK,EAIL;AAAEI,oBAAM,EAAE,KAAV;AAAiBE,mBAAK,EAAE,kBAAxB;AAA4CC,yBAAW,EAAE,WAAzD;AAAsEF,2BAAa,EAAEL;AAArF,aAJK,EAKL;AAAEI,oBAAM,EAAE,OAAV;AAAmBC,2BAAa,EAAEL;AAAlC,aALK,CAFI;AASbQ,sBAAU,EAAE,oBATC;AAUbC,sBAAU,EAAE,EAVC;AAWbC,uBAAW,EAAE,KAXA;AAYbC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB;AAZC,WAAjB;AAcH;;;eAEQ,0BAAiB/B,SAAjB,EAAoCgC,OAApC,EAAqD;;;AAC1D,iBAAO,CAAP,KAAO,KAAK/C,SAAL,CAAegD,IAAf,CAAoB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC/B,SAAF,IAAeH,SAAf,IAA4B,QAAKkC,CAAC,CAACC,EAAF,IAAQH,OAA7C;AAAA,WAArB,OAA0E,IAA1E,IAA0E,aAA1E,GAA0E,MAA1E,GAA0E,GAAEI,IAAnF;AACD;;;eAEM,+BAAsB;AAC3B,eAAKC,UAAL,GAAkB,KAAKvE,EAAL,CAAQwE,KAAR,CAAc;AAC9BnC,qBAAS,EAAE,KAAKrC,EAAL,CAAQyE,OAAR,CAAgB,IAAhB,EAAsB,CAAC,0DAAWC,QAAZ,CAAtB,CADmB;AAE9BC,kBAAM,EAAE,KAAK3E,EAAL,CAAQyE,OAAR,CAAgB,EAAhB,CAFsB;AAG9BG,kBAAM,EAAE,KAAK5E,EAAL,CAAQyE,OAAR,CAAgB,EAAhB,CAHsB;AAI9BI,oBAAQ,EAAE,KAAK7E,EAAL,CAAQyE,OAAR,CAAgB,EAAhB,CAJoB;AAK9BK,2BAAe,EAAE,KAAK9E,EAAL,CAAQyE,OAAR,CAAgB,EAAhB,CALa;AAM9BM,kBAAM,EAAE,KAAK/E,EAAL,CAAQyE,OAAR,CAAgB,KAAhB,CANsB;AAO9BO,qBAAS,EAAE,KAAKhF,EAAL,CAAQyE,OAAR,CAAgB,KAAhB,CAPmB;AAQ9BQ,2BAAe,EAAE,KAAKjF,EAAL,CAAQyE,OAAR,CAAgB,KAAhB;AARa,WAAd,CAAlB;AAUD;;;eACD,qCAA4B;AAC1B,eAAKxD,2BAAL,CAAiC,KAAKD,oBAAL,CAA0B,qEAAoBkE,GAA9C,CAAjC,IAAuF,KAAvF;AACA,eAAKjE,2BAAL,CAAiC,KAAKD,oBAAL,CAA0B,qEAAoBmE,GAA9C,CAAjC,IAAuF,KAAvF;AACA,eAAKlE,2BAAL,CAAiC,KAAKD,oBAAL,CAA0B,qEAAoBoE,GAA9C,CAAjC,IAAuF,KAAvF;AACA,eAAKnE,2BAAL,CAAiC,KAAKD,oBAAL,CAA0B,qEAAoBqE,YAA9C,CAAjC,IAAgG,gBAAhG;AACA,eAAKpE,2BAAL,CAAiC,KAAKD,oBAAL,CAA0B,qEAAoBsE,YAA9C,CAAjC,IAAgG,gBAAhG;AACH;;;eACC,mCAA0B;AACxB,eAAK,IAAIC,KAAT,IAAkB,oEAAlB,EAAuC;AACrC,gBAAI,CAACC,KAAK,CAACC,MAAM,CAACF,KAAD,CAAP,CAAV,EAA2B;AACzB,mBAAKlE,WAAL,CAAiBqE,IAAjB,CAAsB;AACpBrB,kBAAE,EAAE,CAACkB,KADe;AAEpBjB,oBAAI,EAAE,KAAKrD,2BAAL,CAAiC,qEAAoB,CAACsE,KAArB,CAAjC,CAFc;AAGpBI,oBAAI,EAAE;AAHc,eAAtB;AAKD;AACF;AACF;;;eAEM,uCAA8B;AAAA;;AACnC,eAAK5F,wBAAL,CAA8BwC,2BAA9B,GAA4DqD,SAA5D,CAAsE,UAAAC,QAAQ,EAAI;AAChF,gBAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,IAAmB,CAAnC,EAAsC;AACpC,oBAAI,CAACnF,mBAAL,GAA2BkF,QAAQ,CAACE,MAApC;AACA,oBAAI,CAACxF,eAAL,GAAuBsF,QAAQ,CAACG,OAAhC;AACD;AACF,WALD;AAMD;;;eAEM,mCAA0B;AAAA;;AAC/B,eAAK1F,UAAL,GAAkB,IAAlB;AACA,eAAKP,wBAAL,CAA8BkG,uBAA9B,GAAwDL,SAAxD,CAAkE,UAAAC,QAAQ,EAAI;AAC5E,kBAAI,CAACvF,UAAL,GAAkB,KAAlB;;AACA,gBAAIuF,QAAQ,IAAIA,QAAQ,CAACK,UAAT,IAAuB,CAAnC,IAAwCL,QAAQ,CAACM,YAArD,EAAmE;AACjE,oBAAI,CAAC5F,eAAL,GAAuBsF,QAAQ,CAACM,YAAhC;AACD;AACF,WALD;AAMD;;;eAEM,uCAA8BC,KAA9B,EAA+D;AAAA;;AACpE,eAAK5F,mBAAL,GAA2B,EAA3B;AACA,eAAKT,wBAAL,CAA8ByC,6BAA9B,CAA4D4D,KAA5D,EAAmER,SAAnE,CAA6E,UAAAC,QAAQ,EAAI;AACvF,gBAAIA,QAAQ,IAAIA,QAAQ,CAACQ,MAAT,GAAkB,CAAlC,EAAqC;AACnC,oBAAI,CAAC7F,mBAAL,GAA2BqF,QAA3B;AACD;;AACD,kBAAI,CAACS,gBAAL;AACD,WALD;AAMD;;;eAEM,0CAAiCF,KAAjC,EAAkE;AAAA;;AACvE,eAAK3F,sBAAL,GAA8B,EAA9B;AACA,eAAKV,wBAAL,CAA8B0C,gCAA9B,CAA+D2D,KAA/D,EAAsER,SAAtE,CAAgF,UAAAC,QAAQ,EAAI;AAC1F,gBAAIA,QAAQ,IAAIA,QAAQ,CAACQ,MAAT,GAAkB,CAAlC,EAAqC;AACnC,oBAAI,CAAC5F,sBAAL,GAA8BoF,QAA9B;AACD;;AACD,kBAAI,CAACS,gBAAL;AACD,WALD;AAMD;;;eAEM,0BAAiB;AAAA;;AACtB,eAAKrG,gBAAL,CAAsBsG,YAAtB,GAAqCX,SAArC,CAA+C,UAAAY,IAAI,EAAI;AACrD,gBAAIA,IAAI,IAAIA,IAAI,CAACH,MAAL,GAAc,CAA1B,EAA6B;AAC3B,oBAAI,CAACnF,WAAL,GAAmBsF,IAAnB;AACD;AACF,WAJD;AAKD;;;eAEM,mCAA0B;AAAA;;AAC/B,eAAKvG,gBAAL,CAAsBwG,SAAtB,GAAkCb,SAAlC,CAA4C,UAAAY,IAAI,EAAI;AAClD,gBAAIA,IAAI,IAAIA,IAAI,CAACH,MAAL,GAAc,CAA1B,EAA6B;AAC3B,oBAAI,CAAClF,SAAL,GAAiBqF,IAAjB;AACD;AACF,WAJD;AAKD;;;eAED,oBAAW;AACTE,mBAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,oBAAzB,GAAgD,KAAKxG,eAAnF;AACA,mFAAayG,UAAb,CAAwB,cAAxB,EAAwCC,SAAxC,EAAmDA,SAAnD;AACD;;;eAED,mBAAUC,eAAV,EAAgCC,mBAAhC,EAA8D;AAC5D,eAAKvG,OAAL,GAAe,IAAf;AACA,eAAKF,mBAAL,GAA2ByG,mBAA3B;AACA,eAAKC,eAAL,GAAuBF,eAAvB;AACD;;;eAED,wCAA+BG,QAA/B,EAAiD;AAAA;;AAC/C,eAAKD,eAAL,GAAuB,IAAvB;AACA,eAAKrH,wBAAL,CAA8BuH,8BAA9B,CAA6DD,QAA7D,EAAuEzB,SAAvE,CAAiF,UAAAY,IAAI,EAAI;AACvF,gBAAIA,IAAI,IAAIA,IAAI,CAACN,UAAL,IAAmB,CAA/B,EAAkC;AAC9B,oBAAI,CAACkB,eAAL,GAAuBZ,IAAvB;AACA,oBAAI,CAAC5F,OAAL,GAAe,IAAf;AACH;AACF,WALD;AAMD;;;eAED,qCAA4B2G,SAA5B,EAA+C;AAAA;;AAC7C,eAAKH,eAAL,GAAuB,IAAvB;AACA,eAAKrH,wBAAL,CAA8ByH,2BAA9B,CAA0DD,SAA1D,EAAqE3B,SAArE,CAA+E,UAAAY,IAAI,EAAI;AACrF,gBAAIA,IAAI,IAAIA,IAAI,CAACN,UAAL,IAAmB,CAA/B,EAAkC;AAChC,oBAAI,CAACkB,eAAL,GAAuBZ,IAAvB;AACA,oBAAI,CAAC5F,OAAL,GAAe,IAAf;AACD;AACF,WALD;AAMD;;;eAED,0BAAiB;AACf,eAAK2D,UAAL,CAAgBkD,GAAhB,CAAoB,QAApB,EAA8BC,QAA9B,CAAuC,EAAvC;AACA,eAAKnD,UAAL,CAAgBkD,GAAhB,CAAoB,UAApB,EAAgCC,QAAhC,CAAyC,EAAzC;AACD;;;eAED,sBAAaC,aAAb,EAAqC;AAAA;;AAEnC,cAAIC,eAAe,GAAG,KAAKrD,UAAL,CAAgBkD,GAAhB,CAAoB,QAApB,EAA8BI,KAApD;;AACA,cAAIC,UAAU,GAAGF,eAAe,CAACG,GAAhB,CAAoB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC3D,EAAN;AAAA,WAArB,EAA+B4D,IAA/B,CAAoC,GAApC,CAAjB;;AAEA,eAAK3G,aAAL,GAAqB,EAArB;AACA,eAAKpB,iBAAL,CAAuBgI,mBAAvB,CAA2CJ,UAA3C,EAAuDK,IAAvD,CAA4D,oEAAa,IAAb,CAA5D,EAAgF,6EAAhF,EAAwGvC,SAAxG,CAAkH,UAAAC,QAAQ,EAAI;AAC5H,gBAAIA,QAAQ,IAAIA,QAAQ,CAACQ,MAAT,GAAkB,CAAlC,EAAqC;AACnC,qBAAI,CAAC/E,aAAL,GAAqBuE,QAArB;AACD;;AACD,gBAAI,CAAC8B,aAAL,EAAoB;AAClB,qBAAI,CAACS,kCAAL;AACD;AACF,WAPD;AAQD;;;eAED,8CAAqC;AAAA;;AACnC,cAAIC,YAAY,GAAG,KAAK9D,UAAL,CAAgBkD,GAAhB,CAAoB,UAApB,EAAgCI,KAAnD;;AACA,cAAIQ,YAAY,CAAChC,MAAb,GAAsB,CAA1B,EAA6B;AAE3B,gBAAIiC,WAAW,GAAG,EAAlB;AACAD,wBAAY,CAACrF,OAAb,CAAqB,UAAAuF,YAAY,EAAI;AACnC,kBAAI,OAAI,CAACjH,aAAL,CAAmB6C,IAAnB,CAAwB,UAAAqE,CAAC;AAAA,uBAAIA,CAAC,CAACC,MAAF,IAAYF,YAAY,CAACE,MAA7B;AAAA,eAAzB,CAAJ,EAAmE;AACjEH,2BAAW,CAAC5C,IAAZ,CAAiB6C,YAAjB;AACD;AACF,aAJD;AAKA,iBAAKhE,UAAL,CAAgBkD,GAAhB,CAAoB,UAApB,EAAgCiB,UAAhC,CAA2CJ,WAA3C;AACD;AACF;;;eACD,uBAAc;AACZ;AACA;AACE,cAAInG,MAAM,GAAG,KAAKoC,UAAL,CAAgBsD,KAA7B;AAEA,cAAIzB,KAAK,GAA4B;AACnC/D,qBAAS,EAAEF,MAAM,CAACE,SADiB;AAEnCsC,kBAAM,EAAExC,MAAM,CAACwC,MAAP,GAAgBxC,MAAM,CAACwC,MAAP,CAAcoD,GAAd,CAAkB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3D,EAAN;AAAA,aAAnB,EAA6B4D,IAA7B,CAAkC,GAAlC,CAAhB,GAAyD,EAF9B;AAGnCpD,oBAAQ,EAAE1C,MAAM,CAAC0C,QAAP,GAAkB1C,MAAM,CAAC0C,QAAP,CAAgBkD,GAAhB,CAAoB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACW,OAAN;AAAA,aAArB,EAAoCV,IAApC,CAAyC,GAAzC,CAAlB,GAAkE,EAHzC;AAInCnD,2BAAe,EAAE3C,MAAM,CAAC2C,eAAP,GAAyB3C,MAAM,CAAC2C,eAAP,CAAuBiD,GAAvB,CAA2B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3D,EAAN;AAAA,aAA5B,EAAsC4D,IAAtC,CAA2C,GAA3C,CAAzB,GAA2E,EAJzD;AAKnClD,kBAAM,EAAE5C,MAAM,CAAC4C,MALoB;AAMnCC,qBAAS,EAAE7C,MAAM,CAAC6C,SANiB;AAOnCC,2BAAe,EAAE9C,MAAM,CAAC8C;AAPW,WAArC;AASA,eAAKzC,6BAAL,CAAmC4D,KAAnC;AACA,eAAK3D,gCAAL,CAAsC2D,KAAtC,EAfU,CAgBZ;AAED;;;eAED,uBAAc;AACZ,eAAK7B,UAAL,CAAgBqE,KAAhB;AACA,eAAKpG,6BAAL;AACA,eAAKC,gCAAL;AACD;;;;;;;uBA3RU3C,kB,EAAkB,sJ,EAAA,2H,EAAA,2I,EAAA,wJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA;AAAA;oEA4Ef,qE,EAAkB,I;;;;;;;;;;;;;;;;ACjGlC;;AACI;;AACI;;AACI;;AAcA;;AACI;;AAA2I;AAAA;;AAAA;;AAAA,mBAAS,UAAT;AAAiB,WAAjB;;AAC3G;;AAAyC;;AAAO;;AACpF;;AACJ;;AACJ;;AAEI;;AACI;;AACI;;AAAsB;;AAAoB;;AAC1C;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAK;;AACT;;AAAI;;AAAc;;AAClB;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAe;;AACnB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AACpB;;AACJ;;AACA;;AACI;;AAWJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AAAI;;AAAwB;;AAC5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAK;;AACT;;AAAI;;AAAc;;AAClB;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAe;;AACnB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AACpB;;AACJ;;AACA;;AACI;;AAWJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACI;;AAAY;AAAA;AAAA;;AAER;;AACI;;AACI;;AAAG;AAAA,iCAAiB,KAAjB;AAAsB,WAAtB;;AAAwB;;AAAoD;;AAC/E;;AAAsB;;AAAmB;;AAC7C;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAiB;;AAAe;;AACpC;;AACA;;AACI;;AAAyC;;AAAY;;AACrD;;AAAsB;;AAA6C;;AACvE;;AACA;;AACI;;AAAyC;;AAAY;;AACrD;;AAAsB;;AAAoF;;AAC9G;;AACA;;AACI;;AAAyC;;AAAK;;AAC9C;;AAAsB;;AAAoC;;AAC9D;;AACA;;AACI;;AAAyC;;AAAc;;AACvD;;AAAsB;;AAA6C;;AACvE;;AACA;;AACI;;AAAyC;;AAAe;;AACxD;;AACI;;AAIJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAiB;;AAAW;;AAC5B;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAK;;AACb;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAiB;;AAAU;;AAC3B;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAK;;AACb;;AACJ;;AACA;;AACI;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAiB;;AAAiB;;AAClC;;AACI;;AACI;;AACwB;;AAAG;;AAC/B;;AACA;;AACI;;AACyB;;AAAG;;AAChC;;AACA;;AACI;;AAEI;;AAEJ;;AACJ;;AACA;;AACI;;AACyB;;AAAG;;AAChC;;AACA;;AACI;;AAEI;;AAEJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACA;;AACI;;AAGJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAsBJ;;AACJ;;AACJ;;AACA;;;;;;;;AAtSqC;;AAAA;;AAeA;;AAAA,sFAAyB,WAAzB,EAAyB,SAAzB;;AAaY;;AAAA,+FAAuB,WAAvB,EAAuB,cAAvB;;AAeL;;AAAA;;AA6BS;;AAAA,+FAAuB,WAAvB,EAAuB,cAAvB;;AAeL;;AAAA;;AAsB5B;;AAAA,0FAAoB,SAApB,EAAoB,IAApB,EAAoB,UAApB,EAAoB,OAApB,EAAoB,cAApB,EAAoB,IAApB;;AAekC;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAKlB;;AAAA;;AAuBQ;;AAAA;;AA4BA;;AAAA;;AA+CU;;AAAA,4FAAoC,yBAApC,EAAoC,sEAApC;;AAKA;;AAAA,4FAAoC,yBAApC,EAAoC,sEAApC;;AAKA;;AAAA,4FAAoC,yBAApC,EAAoC,sEAApC;;AAKA;;AAAA,4FAAoC,yBAApC,EAAoC,sEAApC;;AAKA;;AAAA,4FAAoC,yBAApC,EAAoC,sEAApC;;;;;;;;;;sEDjPzCA,kB,EAAkB;cAP9B,uDAO8B;eAPpB;AACT+I,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD,CAHF;AAITC,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAOoB,Q;;;;;;;;;;;;gBA4E5B,0D;iBAAa,qE;;;;;;;;;;;;AEjGhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,QAAQ,GAAW,CACvB;AACEC,UAAI,EAAE,WADR;AAEEC,eAAS,EAAE;AAFb,KADuB,CAAzB;;QAsBaC,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBAVzB,CACP,4DADO,EAEP,yEAFO,EAGP,mEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,mEANO,EAOP,6DAAaC,QAAb,CAAsBJ,QAAtB,CAPO,CAUyB;;;;0HAAvBG,uB,EAAuB;AAAA,uBAbhC,iFAagC;AAbd,kBAIlB,4DAJkB,EAKlB,yEALkB,EAMlB,mEANkB,EAOlB,0DAPkB,EAQlB,kEARkB,EASlB,mEATkB,EASF,4DATE;AAac,O;AAJhB,K;;;;;sEAIPA,uB,EAAuB;cAfnC,sDAemC;eAf1B;AACRE,sBAAY,EAAE,CACZ,iFADY,CADN;AAKRC,iBAAO,EAAE,CACP,4DADO,EAEP,yEAFO,EAGP,mEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,mEANO,EAOP,6DAAaF,QAAb,CAAsBJ,QAAtB,CAPO;AALD,S;AAe0B,Q;;;;;;;;;;AC9BpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaO,wB;;;;;AASX,wCAAoBC,UAApB,EAA4C;AAAA;;AAAA;;AAAE;AAA1B,gBAAAA,UAAA,GAAAA,UAAA;AAPZ,gBAAAC,8BAAA,GAAiC,wDAAjC;AACA,gBAAAC,0BAAA,GAA6B,oDAA7B;AACA,gBAAAC,mCAAA,GAAsC,6DAAtC;AACA,gBAAAC,gCAAA,GAAmC,0DAAnC;AACA,gBAAAC,iCAAA,GAAoC,2DAApC;AACA,gBAAAC,8BAAA,GAAiC,wDAAjC;AAEoC;AAAY;;;;eAEjD,uCAA2B;AAChC,iBAAO,KAAKN,UAAL,CAAgBjC,GAAhB,CAAyB,KAAKkC,8BAA9B,EAA8DxB,IAA9D,CAAmE,kEAAW,KAAK8B,WAAL,CAAsB,6BAAtB,EAAqD,IAArD,CAAX,CAAnE,CAAP;AACD;;;eAEM,mCAAuB;AAC5B,iBAAO,KAAKP,UAAL,CAAgBjC,GAAhB,CAAyB,KAAKmC,0BAA9B,EAA0DzB,IAA1D,CAA+D,kEAAW,KAAK8B,WAAL,CAAsB,yBAAtB,EAAiD,IAAjD,CAAX,CAA/D,CAAP;AACD;;;eAEM,0CAAiC7D,KAAjC,EAAgE;AACrE,iBAAO,KAAKsD,UAAL,CAAgBQ,IAAhB,CAA0B,KAAKL,mCAA/B,EAAqEzD,KAAK,GAAGA,KAAH,GAAW,IAArF,EAA4F+B,IAA5F,CAAiG,kEAAW,KAAK8B,WAAL,CAAsB,kCAAtB,EAA0D,IAA1D,CAAX,CAAjG,CAAP;AACD;;;eAEQ,uCAA8B7D,KAA9B,EAA6D;AAChE,iBAAO,KAAKsD,UAAL,CAAgBQ,IAAhB,CAA0B,KAAKJ,gCAA/B,EAAkE1D,KAAK,GAAGA,KAAH,GAAW,IAAlF,EAAyF+B,IAAzF,CAA8F,kEAAW,KAAK8B,WAAL,CAAsB,+BAAtB,EAAuD,IAAvD,CAAX,CAA9F,CAAP;AACL;;;eAEM,wCAA+B5C,QAA/B,EAA+C;AACpD,iBAAO,KAAKqC,UAAL,CAAgBjC,GAAhB,CAAyB,KAAKsC,iCAAL,GAAyC,YAAzC,GAAwD1C,QAAjF,EAA2Fc,IAA3F,CAAgG,kEAAW,KAAK8B,WAAL,CAAsB,kCAAtB,EAA0D,IAA1D,CAAX,CAAhG,CAAP;AACD;;;eAEM,qCAA4B1C,SAA5B,EAA6C;AAClD,iBAAO,KAAKmC,UAAL,CAAgBjC,GAAhB,CAAyB,KAAKuC,8BAAL,GAAsC,aAAtC,GAAsDzC,SAA/E,EAA0FY,IAA1F,CAA+F,kEAAW,KAAK8B,WAAL,CAAsB,+BAAtB,EAAuD,IAAvD,CAAX,CAA/F,CAAP;AACD;;;;MAjC2C,mE;;;uBAAjCR,wB,EAAwB,uH;AAAA,K;;;aAAxBA,wB;AAAwB,eAAxBA,wBAAwB,K;AAAA,kBAFvB;;;;;sEAEDA,wB,EAAwB;cAHpC,wDAGoC;eAHzB;AACVU,oBAAU,EAAE;AADF,S;AAGyB,Q","file":"third-party-network-third-party-network-module-es5.js","sourcesContent":["import { Component, OnInit, QueryList, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataTableDirective } from 'angular-datatables';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { DefTrailerAssetType, FuelTrailerAssetType, ServiceOfferingType } from 'src/app/app.enum';\nimport { Declarations } from 'src/app/declarations.module';\nimport { InvitationService } from 'src/app/invitation/invitation.service';\nimport { ServiceArea } from 'src/app/invitation/third-party-invitation.model';\nimport { DropdownItem, StateDropdownExtendedItem, StatelistService } from 'src/app/statelist.service';\nimport { CarrierDetailsModel, ThirdPartyCompanyFilter } from '../third-party-network.model';\nimport { ThirdPartyNetworkService } from '../third-party-network.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class DashboardComponent implements OnInit {\n  dtTrigger1: Subject<any> = new Subject();\n  dtTrigger2: Subject<any> = new Subject();\n  dtOptions: any = {};\n  //get accessors\n  get StatesListByCountry(): any { return (countryId: number) => this.StateList.filter(x => x.CountryId == countryId); }\n\n  PageLoader: boolean = false;\n  InvitationToken: string = null;\n  RegisteredCompanies: CarrierDetailsModel[] = [];\n  NonRegisteredCompanies: CarrierDetailsModel[] = [];\n  //PANEL\n  public IsRegisteredCompany: boolean = null;\n  public IsThirdPartyEnabled: boolean = null;\n  public _opened: boolean = false;\n  public _initiated: boolean = false;\n  public SelectedCompany: any;\n  public FuelTrailerAssetType: typeof FuelTrailerAssetType = FuelTrailerAssetType;\n  public DefTrailerAssetType: typeof DefTrailerAssetType = DefTrailerAssetType;\n  public ServiceOfferingTypes: typeof ServiceOfferingType = ServiceOfferingType;\n  public ServiceOfferingTypesDisplay: { [index: number]: string } = {};\n\n  //filter\n  FilterForm: FormGroup;\n  CountryList: DropdownItem[] = [];\n  StateList: StateDropdownExtendedItem[] = [];\n  Citylist: DropdownItem[] = [];\n  ServiceList: DropdownItem[] = [];\n  CitiesWithZip: ServiceArea[] = [];\n\n  ddlSetting: IDropdownSettings = {\n    idField: 'Id',\n    textField: 'Name',\n    itemsShowLimit: 1,\n    allowSearchFilter: true,\n  };\n  ZipDdlSettings: IDropdownSettings = {\n    singleSelection: false,\n    idField: 'ZipCode',\n    textField: 'ZipCode',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 4,\n    allowSearchFilter: true,\n    enableCheckAll: true\n  }\n  ddlCitySettings: IDropdownSettings = {\n    singleSelection: false,\n    idField: 'CityId',\n    textField: 'CityName',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 4,\n    allowSearchFilter: true,\n    enableCheckAll: true\n  }\n\n  constructor(\n    private thirdPartyNetworkService: ThirdPartyNetworkService,\n    private fb: FormBuilder,\n    private stateListService: StatelistService,\n    private invitationService: InvitationService\n  ) { }\n\n  ngOnInit() {\n    this.initializeCarrierCustomers();\n    this.GetInvitationTokenByCompany();\n    this.GetRegisteredInvitedCompanies();\n    this.GetNonRegisteredInvitedCompanies();\n    this.getCountryList();\n    this.getStatesOfAllCountries();\n    this.initilizeFilterForm();\n    this.InitializeServiceDropdown();\n    this.bindServiceOfferingType();\n  }\n\n  @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n  refreshDatatable(): void {\n    this.dtElements.forEach((dtElement: DataTableDirective) => {\n      if (dtElement.dtInstance) {\n        dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n      }\n    });\n    this.dtTrigger1.next();\n    this.dtTrigger2.next();\n  }\n  initializeCarrierCustomers() {\n    let exportInvitedColumns = { columns: ':visible' };\n    this.dtOptions = {\n        dom: '<\"html5buttons\"B>lTfgitp',\n        buttons: [\n            { extend: 'colvis' },\n            { extend: 'copy', exportOptions: exportInvitedColumns },\n            { extend: 'csv', title: 'Customer Details', exportOptions: exportInvitedColumns },\n            { extend: 'pdf', title: 'Customer Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n            { extend: 'print', exportOptions: exportInvitedColumns }\n        ],\n        pagingType: 'first_last_numbers',\n        pageLength: 10,\n        fixedHeader: false,\n        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n}\n\n  public getStateNameById(countryId: number, stateId: number) {\n    return this.StateList.find(s => s.CountryId == countryId || 1 && s.Id == stateId)?.Name\n  }\n\n  public initilizeFilterForm() {\n    this.FilterForm = this.fb.group({\n      CountryId: this.fb.control(null, [Validators.required]),\n      States: this.fb.control([]),\n      Cities: this.fb.control([]),\n      ZipCodes: this.fb.control([]),\n      ServicesOffered: this.fb.control([]),\n      IsPump: this.fb.control(false),\n      IsMetered: this.fb.control(false),\n      IsPackagedGoods: this.fb.control(false)\n    })\n  }\n  InitializeServiceDropdown() {\n    this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.FTL]] = \"FTL\";\n    this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTL]] = \"LTL\";\n    this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEF]] = \"DEF\";\n    this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTLWetHosing]] = \"LTL Wet Hosing\";\n    this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEFWetHosing]] = \"DEF Wet Hosing\";\n}\n  bindServiceOfferingType() {\n    for (let index in ServiceOfferingType) {\n      if (!isNaN(Number(index))) {\n        this.ServiceList.push({\n          Id: +index,\n          Name: this.ServiceOfferingTypesDisplay[ServiceOfferingType[+index]],\n          Code: \"\"\n        });\n      }\n    }\n  }\n\n  public GetInvitationTokenByCompany() {\n    this.thirdPartyNetworkService.GetInvitationTokenByCompany().subscribe(response => {\n      if (response && response.Status == 0) {\n        this.IsThirdPartyEnabled = response.Result;\n        this.InvitationToken = response.Message;\n      }\n    });\n  }\n\n  public GenerateInvitationToken() {\n    this.PageLoader = true;\n    this.thirdPartyNetworkService.GenerateInvitationToken().subscribe(response => {\n      this.PageLoader = false;\n      if (response && response.StatusCode == 0 && response.EntityNumber) {\n        this.InvitationToken = response.EntityNumber;\n      }\n    });\n  }\n\n  public GetRegisteredInvitedCompanies(input?: ThirdPartyCompanyFilter) {\n    this.RegisteredCompanies = [];\n    this.thirdPartyNetworkService.GetRegisteredInvitedCompanies(input).subscribe(response => {\n      if (response && response.length > 0) {\n        this.RegisteredCompanies = response;\n      }\n      this.refreshDatatable();\n    });\n  }\n\n  public GetNonRegisteredInvitedCompanies(input?: ThirdPartyCompanyFilter) {\n    this.NonRegisteredCompanies = [];\n    this.thirdPartyNetworkService.GetNonRegisteredInvitedCompanies(input).subscribe(response => {\n      if (response && response.length > 0) {\n        this.NonRegisteredCompanies = response;\n      }\n      this.refreshDatatable();\n    });\n  }\n\n  public getCountryList() {\n    this.stateListService.getCountries().subscribe(data => {\n      if (data && data.length > 0) {\n        this.CountryList = data;\n      }\n    });\n  }\n\n  public getStatesOfAllCountries() {\n    this.stateListService.getStates().subscribe(data => {\n      if (data && data.length > 0) {\n        this.StateList = data;\n      }\n    });\n  }\n\n  copyText() {\n    navigator.clipboard.writeText(window.location.origin + '/Invitation?token=' + this.InvitationToken);\n    Declarations.msgsuccess(\"Text Copied.\", undefined, undefined);\n  }\n\n  openPanel(selectedCompany: any, isRegisteredCompany: boolean) {\n    this._opened = true;\n    this.IsRegisteredCompany = isRegisteredCompany;\n    this.SelectedCompany = selectedCompany;\n  }\n\n  getNonRegisteredInvitedCompany(entityId: number) {\n    this.SelectedCompany = null;\n    this.thirdPartyNetworkService.GetNonRegisteredInvitedCompany(entityId).subscribe(data => {\n      if (data && data.StatusCode == 0) {\n          this.SelectedCompany = data;\n          this._opened = true;\n      }\n    });\n  }\n\n  getRegisteredInvitedCompany(companyId: number) {\n    this.SelectedCompany = null;\n    this.thirdPartyNetworkService.GetRegisteredInvitedCompany(companyId).subscribe(data => {\n      if (data && data.StatusCode == 0) {\n        this.SelectedCompany = data;\n        this._opened = true;\n      }\n    });\n  }\n\n  countryChanged() {\n    this.FilterForm.get('States').setValue([]);\n    this.FilterForm.get('ZipCodes').setValue([]);\n  }\n\n  stateChanged(newStateAdded: boolean) {\n\n    let _selectedStates = this.FilterForm.get('States').value as any[];\n    var stateslist = _selectedStates.map(t => t.Id).join(\",\");\n\n    this.CitiesWithZip = [];\n    this.invitationService.GetCitiesFromStates(stateslist).pipe(debounceTime(1000), distinctUntilChanged()).subscribe(response => {\n      if (response && response.length > 0) {\n        this.CitiesWithZip = response;\n      }\n      if (!newStateAdded) {\n        this.removeSelectedCitiesOfRemovedState();\n      }\n    });\n  }\n\n  removeSelectedCitiesOfRemovedState() {\n    let selectedZips = this.FilterForm.get('ZipCodes').value as ServiceArea[];\n    if (selectedZips.length > 0) {\n\n      let finalCities = [];\n      selectedZips.forEach(selectedCity => {\n        if (this.CitiesWithZip.find(c => c.CityId == selectedCity.CityId)) {\n          finalCities.push(selectedCity)\n        }\n      });\n      this.FilterForm.get('ZipCodes').patchValue(finalCities);\n    }\n  }\n  applyFilter() {\n    //this.FilterForm.markAsTouched()\n    //if (this.FilterForm.valid) {\n      let filter = this.FilterForm.value;\n\n      let input: ThirdPartyCompanyFilter = {\n        CountryId: filter.CountryId,\n        States: filter.States ? filter.States.map(t => t.Id).join(\",\") : '',\n        ZipCodes: filter.ZipCodes ? filter.ZipCodes.map(t => t.ZipCode).join(\",\") : '',\n        ServicesOffered: filter.ServicesOffered ? filter.ServicesOffered.map(t => t.Id).join(\",\") : '',\n        IsPump: filter.IsPump,\n        IsMetered: filter.IsMetered,\n        IsPackagedGoods: filter.IsPackagedGoods\n      }\n      this.GetRegisteredInvitedCompanies(input);\n      this.GetNonRegisteredInvitedCompanies(input);\n    //}\n\n  }\n\n  resetFilter() {\n    this.FilterForm.reset();\n    this.GetRegisteredInvitedCompanies();\n    this.GetNonRegisteredInvitedCompanies();\n  }\n}\n","<div class=\"dashboard-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right\">\r\n            <div class=\"float-right\" *ngIf=\"IsThirdPartyEnabled\">\r\n                <div *ngIf=\"this.InvitationToken\">\r\n                    <a class=\"btn btn-default btn-sm\" (click)=\"copyText()\">\r\n                        <i class=\"fa fa-copy\" aria-hidden=\"true\"></i>\r\n                        Copy Invitation Link\r\n                    </a>\r\n                </div>\r\n                <div *ngIf=\"!this.InvitationToken\">\r\n                    <a class=\"btn btn-default btn-sm\" (click)=\"GenerateInvitationToken()\">\r\n                        <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                        Generate Invitation Link\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"float-right mt-1 mr-2\">\r\n                <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n                   popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- REGISTERED COMPANIES -->\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <h4 class=\"mt-0 pt-2\">Registered Companies</h4>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"well shadow-b\">\r\n                            <div class=\"table-responsive\">\r\n                                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger1\" id=\"registered-table\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Company Name</th>\r\n                                            <th>Contact Name</th>\r\n                                            <th>Email</th>\r\n                                            <th>Contact Number</th>\r\n                                            <th>Location</th>\r\n                                            <th>Service Offered</th>\r\n                                            <th>FTL Trailers</th>\r\n                                            <th>LTL Trailers</th>\r\n                                            <th>DEF Trailers</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let member of RegisteredCompanies\">\r\n                                            <td><a (click)=\"getRegisteredInvitedCompany(member.Id)\">{{member.CompanyName}}</a></td>\r\n                                            <td>{{member.ContactInformation}}</td>\r\n                                            <td>{{member.Email}}</td>\r\n                                            <td>{{member.PhoneNumber}}</td>\r\n                                            <td>{{member.CompanyAddress}}</td>\r\n                                            <td>{{member.ServiceOffered}}</td>\r\n                                            <td>{{member.FtlTrailers}}</td>\r\n                                            <td>{{member.LtlTrailers}}</td>\r\n                                            <td>{{member.DefTrailers}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    <!-- NON REGISTERED COMPANIES -->\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div #filter>\r\n                    <h4>Non Registered Companies</h4>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"well shadow-b\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger2\" id=\"non-registered-table\" class=\"table table-striped table-bordered table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Company Name</th>\r\n                                                <th>Contact Name</th>\r\n                                                <th>Email</th>\r\n                                                <th>Contact Number</th>\r\n                                                <th>Location</th>\r\n                                                <th>Service Offered</th>\r\n                                                <th>FTL Trailers</th>\r\n                                                <th>LTL Trailers</th>\r\n                                                <th>DEF Trailers</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let member of NonRegisteredCompanies\">\r\n                                                <td><a (click)=\"getNonRegisteredInvitedCompany(member.Id)\">{{member.CompanyName}}</a></td>\r\n                                                <td>{{member.ContactInformation}}</td>\r\n                                                <td>{{member.Email}}</td>\r\n                                                <td>{{member.PhoneNumber}}</td>\r\n                                                <td>{{member.CompanyAddress}}</td>\r\n                                                <td>{{member.ServiceOffered}}</td>\r\n                                                <td>{{member.FtlTrailers}}</td>\r\n                                                <td>{{member.LtlTrailers}}</td>\r\n                                                <td>{{member.DefTrailers}}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    <ng-sidebar-container style=\"z-index: 99;\">\r\n        <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'right'\" [showBackdrop]=\"true\"\r\n                    style=\"height: 100vh\">\r\n            <div class=\"header-panel\">\r\n                <div class=\"heading\">\r\n                    <a (click)=\"_opened=false\"><i class=\"fa fa-close fs18 float-left mr10 mt3\"></i></a>\r\n                    <h3 class=\"dib title\">Third Party Details</h3>\r\n                </div>\r\n                <div>\r\n                    <div class=\"border rounded-lg p-3 mb-3 shadow-sm mt-2\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <h4 class=\"pt-0\">Company Details</h4>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"col-form-label text-muted\">Company Name</label>\r\n                                <span class=\"d-block\">{{SelectedCompany?.CompanyInfo?.CompanyName}}</span>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"col-form-label text-muted\">Contact Name</label>\r\n                                <span class=\"d-block\">{{SelectedCompany?.UserInfo?.FirstName + ' ' + SelectedCompany?.UserInfo?.LastName}}</span>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"col-form-label text-muted\">Email</label>\r\n                                <span class=\"d-block\">{{SelectedCompany?.UserInfo?.Email}}</span>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"col-form-label text-muted\">Contact Number</label>\r\n                                <span class=\"d-block\">{{SelectedCompany?.CompanyInfo?.PhoneNumber}}</span>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label class=\"col-form-label text-muted\">Company Address</label>\r\n                                <span class=\"d-block\">\r\n                                    {{\r\nSelectedCompany?.CompanyInfo?.CompanyAddress +',' + SelectedCompany?.CompanyInfo?.City + ',' + getStateNameById(SelectedCompany?.CompanyInfo?.CountryId,\r\n                                    SelectedCompany?.CompanyInfo?.StateId) + ',' + SelectedCompany?.CompanyInfo?.Zip\r\n                                    }}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border rounded-lg p-3 mb-3 shadow-sm mt-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <h4 class=\"pt-0\">Fuel Assets</h4>\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Trailer Type</th>\r\n                                            <th>Capacity per asset(G)</th>\r\n                                            <th>Does Trailer have Pump?</th>\r\n                                            <th>Is Trailer Metered?</th>\r\n                                            <th>Count</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let fuelAssets of SelectedCompany?.FleetInfo?.FuelAssets\">\r\n                                            <td>{{FuelTrailerAssetType[fuelAssets.FuelTrailerServiceTypeFTL]}}</td>\r\n                                            <td>{{fuelAssets.Capacity}}</td>\r\n                                            <td>{{fuelAssets.TrailerHasPump?\"Yes\":\"No\"}}</td>\r\n                                            <td>{{fuelAssets.IsTrailerMetered?\"Yes\":\"No\"}}</td>\r\n                                            <td>{{fuelAssets.Count}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border rounded-lg p-3 mb-3 shadow-sm mt-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <h4 class=\"pt-0\">DEF Assets</h4>\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Trailer Type</th>\r\n                                            <th>Capacity per asset(G)</th>\r\n                                            <th>Packaged Goods?</th>\r\n                                            <th>Does Trailer have Pump?</th>\r\n                                            <th>Is Trailer Metered?</th>\r\n                                            <th>Count</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let defAssets of SelectedCompany?.FleetInfo?.DefAssets\">\r\n                                            <td>{{DefTrailerAssetType[+defAssets.DEFTrailerServiceType]}}</td>\r\n                                            <td>{{defAssets.Capacity}}</td>\r\n                                            <td>{{defAssets.PackagedGoods?\"Yes\":\"No\"}}</td>\r\n                                            <td>{{defAssets.TrailerHasPump?\"Yes\":\"No\"}}</td>\r\n                                            <td>{{defAssets.IsTrailerMetered?\"Yes\":\"No\"}}</td>\r\n                                            <td>{{defAssets.Count}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"border rounded-lg p-3 mb-3 shadow-sm mt-4\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <h4 class=\"pt-0\">Service Offerings</h4>\r\n                                <ul class=\"nav nav-pills tabs-service my-2\" role=\"tablist\">\r\n                                    <li class=\"nav-item\" role=\"presentation\">\r\n                                        <a class=\"nav-link active mr-2\" data-toggle=\"pill\" href=\"#services-ftl\"\r\n                                           aria-selected=\"true\">FTL</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\" role=\"presentation\">\r\n                                        <a class=\"nav-link mr-2\" data-toggle=\"pill\" href=\"#services-ltl\"\r\n                                           aria-selected=\"false\">LTL</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\" role=\"presentation\">\r\n                                        <a class=\"nav-link mr-2\" data-toggle=\"pill\" href=\"#services-ltl-wethosing\"\r\n                                           aria-selected=\"false\">\r\n                                            LTL\r\n                                            Wet Hosing\r\n                                        </a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\" role=\"presentation\">\r\n                                        <a class=\"nav-link mr-2\" data-toggle=\"pill\" href=\"#services-def\"\r\n                                           aria-selected=\"false\">DEF</a>\r\n                                    </li>\r\n                                    <li class=\"nav-item\" role=\"presentation\">\r\n                                        <a class=\"nav-link mr-2\" data-toggle=\"pill\" href=\"#services-def-wethosing\"\r\n                                           aria-selected=\"false\">\r\n                                            DEF\r\n                                            Wet Hosing\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                                <div class=\"tab-content\" id=\"pills-tabContent\">\r\n                                    <div class=\"tab-pane fade show active\" id=\"services-ftl\">\r\n                                        <ng-container [ngTemplateOutlet]=\"serviceTemplate\"\r\n                                                      [ngTemplateOutletContext]=\"{length: 0}\">\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"tab-pane fade\" id=\"services-ltl\" role=\"tabpanel\">\r\n                                        <ng-container [ngTemplateOutlet]=\"serviceTemplate\"\r\n                                                      [ngTemplateOutletContext]=\"{length: 1}\">\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"tab-pane fade\" id=\"services-ltl-wethosing\">\r\n                                        <ng-container [ngTemplateOutlet]=\"serviceTemplate\"\r\n                                                      [ngTemplateOutletContext]=\"{length: 2}\">\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"tab-pane fade\" id=\"services-def\">\r\n                                        <ng-container [ngTemplateOutlet]=\"serviceTemplate\"\r\n                                                      [ngTemplateOutletContext]=\"{length: 3}\">\r\n                                        </ng-container>\r\n                                    </div>\r\n                                    <div class=\"tab-pane fade\" id=\"services-def-wethosing\">\r\n                                        <ng-container [ngTemplateOutlet]=\"serviceTemplate\"\r\n                                                      [ngTemplateOutletContext]=\"{length: 4}\">\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-template #serviceTemplate let-length='length'>\r\n                <ng-container *ngIf=\"SelectedCompany?.ServiceOffering[length]?.IsEnable\">\r\n                    <ng-container *ngFor=\"let area of SelectedCompany?.ServiceOffering[length]?.ServiceAreas;let first = first;\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <label *ngIf=\"first\" class=\"d-block font-weight-bold\">States</label>\r\n                                <span class=\"badge badge-pill badge-secondary\">{{getStateNameById(area?.StateId,area?.StateId)}}</span>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <label *ngIf=\"first\" class=\"d-block font-weight-bold\">Cities</label>\r\n                                <span class=\"badge badge-pill badge-secondary\">{{area.CityName}}</span>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <label *ngIf=\"first\" class=\"d-block font-weight-bold\">\r\n                                    Zip code\r\n                                </label>\r\n                                <span class=\"badge badge-pill badge-secondary\">{{area.ZipCode}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-template>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n</div>\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" [formGroup]=\"FilterForm\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Country</label>\r\n                    <select formControlName=\"CountryId\" class=\"form-control\" (change)=\"countryChanged()\">\r\n                        <option value=\"null\" disabled>\r\n                            Select\r\n                        </option>\r\n                        <option *ngFor=\"let country of CountryList\" value=\"{{country.Id}}\">\r\n                            {{country.Code}}\r\n                        </option>\r\n                    </select>\r\n                    <div *ngIf=\"FilterForm.get('CountryId').touched && FilterForm.get('CountryId')?.errors?.required\">\r\n                        <span class=\"text-danger\">Required</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">State</label>\r\n                    <ng-multiselect-dropdown [settings]=\"ddlSetting\"\r\n                                             [data]=\"StatesListByCountry(FilterForm.get('CountryId')?.value)\" formControlName=\"States\"\r\n                                             (onSelect)=\"stateChanged(true)\" (onSelectAll)=\"stateChanged(true)\" (onDeSelect)=\"stateChanged(false)\"\r\n                                             (onDeSelectAll)=\"stateChanged(false)\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"FilterForm.get('States').touched && FilterForm.get('States')?.errors?.required\">\r\n                        <span class=\"text-danger\">Required</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Zip Code</label>\r\n                    <ng-multiselect-dropdown [settings]=\"ZipDdlSettings\"\r\n                                             [data]=\"CitiesWithZip\" formControlName=\"ZipCodes\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Prority</label>\r\n                    <ng-multiselect-dropdown [settings]=\"ddlSetting\" [data]=\"ServiceList\"\r\n                                             formControlName=\"ServicesOffered\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 py-2\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input type=\"checkbox\" formControlName=\"IsPump\" id=\"IsPump\" class=\"form-check-input\" />\r\n                    <label for=\"IsPump\" class=\"form-check-label\">Pump</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input type=\"checkbox\" formControlName=\"IsMetered\" id=\"IsMetered\" class=\"form-check-input\" />\r\n                    <label for=\"IsMetered\" class=\"form-check-label\">Metered</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input type=\"checkbox\" formControlName=\"IsPackagedGoods\" id=\"IsPackagedGoods\"\r\n                           class=\"form-check-input\" />\r\n                    <label for=\"IsPackagedGoods\" class=\"form-check-label\">Packaged Goods</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"resetFilter(); p.close();\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"applyFilter(); p.close();\" class=\"btn btn-primary\">\r\n                    Apply\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routeTPN: Routes = [\r\n  {\r\n    path: \"Dashboard\",\r\n    component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n  ],\r\n\r\n  imports: [\r\n    CommonModule,\r\n    DirectiveModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    RouterModule.forChild(routeTPN)\r\n  ]\r\n})\r\nexport class ThirdPartyNetworkModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HandleError } from '../../app/errors/HandleError';\r\nimport { CarrierDetailsModel, ThirdPartyCompanyFilter } from './third-party-network.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThirdPartyNetworkService extends HandleError {\r\n\r\n  private urlGetInvitationTokenByCompany = \"Supplier/ThirdPartyNetwork/GetInvitationTokenByCompany\";\r\n  private urlGenerateInvitationToken = \"Supplier/ThirdPartyNetwork/GenerateInvitationToken\";\r\n  private urlGetNonRegisteredInvitedCompanies = \"Supplier/ThirdPartyNetwork/GetNonRegisteredInvitedCompanies\";\r\n  private urlGetRegisteredInvitedCompanies = \"Supplier/ThirdPartyNetwork/GetRegisteredInvitedCompanies\";\r\n  private urlGetNonRegisteredInvitedCompany = \"Supplier/ThirdPartyNetwork/GetNonRegisteredInvitedCompany\";\r\n  private urlGetRegisteredInvitedCompany = \"Supplier/ThirdPartyNetwork/GetRegisteredInvitedCompany\";\r\n\r\n  constructor(private httpClient: HttpClient) { super(); }\r\n\r\n  public GetInvitationTokenByCompany(): Observable<any> {\r\n    return this.httpClient.get<any>(this.urlGetInvitationTokenByCompany).pipe(catchError(this.handleError<any>('GetInvitationTokenByCompany', null)));\r\n  }\r\n\r\n  public GenerateInvitationToken(): Observable<any> {\r\n    return this.httpClient.get<any>(this.urlGenerateInvitationToken).pipe(catchError(this.handleError<any>('GenerateInvitationToken', null)));\r\n  }\r\n\r\n  public GetNonRegisteredInvitedCompanies(input?: ThirdPartyCompanyFilter): Observable<CarrierDetailsModel[]> {\r\n    return this.httpClient.post<any>(this.urlGetNonRegisteredInvitedCompanies, (input ? input : null)).pipe(catchError(this.handleError<any>('GetNonRegisteredInvitedCompanies', null)));\r\n  }\r\n\r\n    public GetRegisteredInvitedCompanies(input?: ThirdPartyCompanyFilter): Observable<CarrierDetailsModel[]> {\r\n        return this.httpClient.post<any>(this.urlGetRegisteredInvitedCompanies, (input ? input : null)).pipe(catchError(this.handleError<any>('GetRegisteredInvitedCompanies', null)));\r\n  }\r\n\r\n  public GetNonRegisteredInvitedCompany(entityId: number): Observable<any> {\r\n    return this.httpClient.get<any>(this.urlGetNonRegisteredInvitedCompany + \"?entityId=\" + entityId).pipe(catchError(this.handleError<any>('GetNonRegisteredInvitedCompanies', null)));\r\n  }\r\n\r\n  public GetRegisteredInvitedCompany(companyId: number): Observable<any> {\r\n    return this.httpClient.get<any>(this.urlGetRegisteredInvitedCompany + \"?companyId=\" + companyId).pipe(catchError(this.handleError<any>('GetRegisteredInvitedCompanies', null)));\r\n  }\r\n}\r\n"]}