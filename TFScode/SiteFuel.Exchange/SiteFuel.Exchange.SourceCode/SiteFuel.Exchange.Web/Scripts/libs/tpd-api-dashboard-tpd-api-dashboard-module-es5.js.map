{"version":3,"sources":["webpack:///node_modules/ngx-json-viewer/__ivy_ngcc__/ngx-json-viewer.js","webpack:///src/app/tpd-api-dashboard/dashboard/dashboard.component.ts","webpack:///src/app/tpd-api-dashboard/dashboard/dashboard.component.html","webpack:///src/app/tpd-api-dashboard/service/api-dashboard.service.ts","webpack:///src/app/tpd-api-dashboard/tpd-api-dashboard.module.ts"],"names":["NgxJsonViewerComponent_section_1_div_2_Template","rf","ctx","NgxJsonViewerComponent_section_1_span_7_Template","segment_r1","$implicit","description","NgxJsonViewerComponent_section_1_section_8_Template","ctx_r4","value","expanded","_c0","a1","_c1","a2","NgxJsonViewerComponent_section_1_Template","_r8","NgxJsonViewerComponent_section_1_Template_section_click_1_listener","ctx_r7","toggle","ctx_r0","type","isExpandable","key","NgxJsonViewerComponent","cleanOnChange","segments","json","Object","keys","forEach","push","parseKeyValue","segment","undefined","Array","isArray","length","JSON","stringify","Date","ɵfac","NgxJsonViewerComponent_Factory","t","ɵcmp","selectors","inputs","features","decls","vars","consts","template","NgxJsonViewerComponent_Template","directives","styles","ctorParameters","propDecorators","args","selector","NgxJsonViewerModule","ɵmod","ɵinj","factory","NgxJsonViewerModule_Factory","imports","ngJitMode","declarations","exports","DashboardComponent","dashbpardSer","ApiResultType","ReqResType","dtOptions","Log","dtTrigger","IsLoading","selectedApi","ApiList","viewType","Total","MinStartDate","setMonth","getMonth","MaxStartDate","toDate","format","fromDate","currentCompanyId","initializeGrid","getAPILogs","exportInvitedColumns","columns","dom","buttons","pagingType","pageLength","lengthMenu","datatableElement","dtInstance","then","destroy","getApiLogs","subscribe","data","ApiLogList","map","m","CreatedDate","next","log","reqResType","selectedReqRes","getApiReqRes","Id","Request","parse","Response","modelHeader","Url","event","d","_fromDate","_toDate","$event","target","apiChanged","setFromDate","setToDate","ReloadDataTable","getView","templateUrl","styleUrls","ApiDashBoardModel","ApiDetailModel","ApiDashboardService","httpClient","getAllLogUrl","getReqResUrl","get","pipe","handleError","id","providedIn","routeTpd","path","component","TpdApiDashboardModule","forChild"],"mappings":"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","file":"tpd-api-dashboard-tpd-api-dashboard-module-es5.js","sourcesContent":["import { Component, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction NgxJsonViewerComponent_section_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n} }\nfunction NgxJsonViewerComponent_section_1_span_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.description);\n} }\nfunction NgxJsonViewerComponent_section_1_section_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"section\", 11);\n    ɵngcc0.ɵɵelement(1, \"ngx-json-viewer\", 12);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"json\", segment_r1.value)(\"expanded\", ctx_r4.expanded);\n} }\nconst _c0 = function (a1) { return [\"segment\", a1]; };\nconst _c1 = function (a1, a2) { return { \"segment-main\": true, \"expandable\": a1, \"expanded\": a2 }; };\nfunction NgxJsonViewerComponent_section_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"section\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"section\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NgxJsonViewerComponent_section_1_Template_section_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const segment_r1 = ctx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.toggle(segment_r1); });\n    ɵngcc0.ɵɵtemplate(2, NgxJsonViewerComponent_section_1_div_2_Template, 1, 0, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"span\", 5);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"span\", 6);\n    ɵngcc0.ɵɵtext(6, \": \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, NgxJsonViewerComponent_section_1_span_7_Template, 2, 1, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, NgxJsonViewerComponent_section_1_section_8_Template, 2, 2, \"section\", 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const segment_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c0, \"segment-type-\" + segment_r1.type));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c1, ctx_r0.isExpandable(segment_r1), segment_r1.expanded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(segment_r1.key);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !segment_r1.expanded || !ctx_r0.isExpandable(segment_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", segment_r1.expanded && ctx_r0.isExpandable(segment_r1));\n} }\nclass NgxJsonViewerComponent {\n    constructor() {\n        this.expanded = true;\n        /**\n         * @deprecated It will be always true and deleted in version 3.0.0\n         */\n        this.cleanOnChange = true;\n        this.segments = [];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.cleanOnChange) {\n            this.segments = [];\n        }\n        if (typeof this.json === 'object') {\n            Object.keys(this.json).forEach(key => {\n                this.segments.push(this.parseKeyValue(key, this.json[key]));\n            });\n        }\n        else {\n            this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\n        }\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    isExpandable(segment) {\n        return segment.type === 'object' || segment.type === 'array';\n    }\n    /**\n     * @param {?} segment\n     * @return {?}\n     */\n    toggle(segment) {\n        if (this.isExpandable(segment)) {\n            segment.expanded = !segment.expanded;\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    parseKeyValue(key, value) {\n        const /** @type {?} */ segment = {\n            key: key,\n            value: value,\n            type: undefined,\n            description: '' + value,\n            expanded: this.expanded\n        };\n        switch (typeof segment.value) {\n            case 'number': {\n                segment.type = 'number';\n                break;\n            }\n            case 'boolean': {\n                segment.type = 'boolean';\n                break;\n            }\n            case 'function': {\n                segment.type = 'function';\n                break;\n            }\n            case 'string': {\n                segment.type = 'string';\n                segment.description = '\"' + segment.value + '\"';\n                break;\n            }\n            case 'undefined': {\n                segment.type = 'undefined';\n                segment.description = 'undefined';\n                break;\n            }\n            case 'object': {\n                // yea, null is object\n                if (segment.value === null) {\n                    segment.type = 'null';\n                    segment.description = 'null';\n                }\n                else if (Array.isArray(segment.value)) {\n                    segment.type = 'array';\n                    segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\n                }\n                else if (segment.value instanceof Date) {\n                    segment.type = 'date';\n                }\n                else {\n                    segment.type = 'object';\n                    segment.description = 'Object ' + JSON.stringify(segment.value);\n                }\n                break;\n            }\n        }\n        return segment;\n    }\n}\nNgxJsonViewerComponent.ɵfac = function NgxJsonViewerComponent_Factory(t) { return new (t || NgxJsonViewerComponent)(); };\nNgxJsonViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxJsonViewerComponent, selectors: [[\"ngx-json-viewer\"]], inputs: { expanded: \"expanded\", cleanOnChange: \"cleanOnChange\", json: \"json\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[1, \"ngx-json-viewer\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"ngClass\", \"click\"], [\"class\", \"toggler\", 4, \"ngIf\"], [1, \"segment-key\"], [1, \"segment-separator\"], [\"class\", \"segment-value\", 4, \"ngIf\"], [\"class\", \"children\", 4, \"ngIf\"], [1, \"toggler\"], [1, \"segment-value\"], [1, \"children\"], [3, \"json\", \"expanded\"]], template: function NgxJsonViewerComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"section\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgxJsonViewerComponent_section_1_Template, 9, 11, \"section\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.segments);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf, NgxJsonViewerComponent], styles: [\"@charset \\\"UTF-8\\\";\\n    .ngx-json-viewer[_ngcontent-%COMP%] {\\n      font-family: monospace;\\n      font-size: 1em;\\n      width: 100%;\\n      height: 100%;\\n      overflow: hidden;\\n      position: relative; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%] {\\n        padding: 2px;\\n        margin: 1px 1px 1px 12px; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%] {\\n          word-wrap: break-word; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%] {\\n            position: absolute;\\n            margin-left: -14px;\\n            margin-top: 3px;\\n            font-size: .8em;\\n            line-height: 1.2em;\\n            vertical-align: middle;\\n            color: #787878; }\\n            .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .toggler[_ngcontent-%COMP%]::after {\\n              display: inline-block;\\n              content: \\\"\\u25BA\\\";\\n              -webkit-transition: -webkit-transform 0.1s ease-in;\\n              transition: -webkit-transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in;\\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-key[_ngcontent-%COMP%] {\\n            color: #4E187C; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-separator[_ngcontent-%COMP%] {\\n            color: #999; }\\n          .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .segment-main[_ngcontent-%COMP%]   .segment-value[_ngcontent-%COMP%] {\\n            color: #000; }\\n        .ngx-json-viewer[_ngcontent-%COMP%]   .segment[_ngcontent-%COMP%]   .children[_ngcontent-%COMP%] {\\n          margin-left: 12px; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-string[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #FF6B6B; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-number[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #009688; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-boolean[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #b938a4; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-date[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #05668D; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-function[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        color: #fff; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-null[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: red; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-key[_ngcontent-%COMP%] {\\n        color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-undefined[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%]    > .segment-value[_ngcontent-%COMP%] {\\n        background-color: #999; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-object[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .segment-type-array[_ngcontent-%COMP%]    > .segment-main[_ngcontent-%COMP%] {\\n        white-space: nowrap; }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expanded[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%]::after {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg); }\\n      .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%], .ngx-json-viewer[_ngcontent-%COMP%]   .expandable[_ngcontent-%COMP%]    > .toggler[_ngcontent-%COMP%] {\\n        cursor: pointer; }\"] });\n/**\n * @nocollapse\n */\nNgxJsonViewerComponent.ctorParameters = () => [];\nNgxJsonViewerComponent.propDecorators = {\n    'json': [{ type: Input },],\n    'expanded': [{ type: Input },],\n    'cleanOnChange': [{ type: Input },],\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxJsonViewerComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-json-viewer',\n                template: `\n    <section class=\"ngx-json-viewer\">\n      <section\n        *ngFor=\"let segment of segments\"\n        [ngClass]=\"['segment', 'segment-type-' + segment.type]\">\n        <section\n          (click)=\"toggle(segment)\"\n          [ngClass]=\"{\n            'segment-main': true,\n            'expandable': isExpandable(segment),\n            'expanded': segment.expanded\n          }\">\n          <div *ngIf=\"isExpandable(segment)\" class=\"toggler\"></div>\n          <span class=\"segment-key\">{{ segment.key }}</span>\n          <span class=\"segment-separator\">: </span>\n          <span *ngIf=\"!segment.expanded || !isExpandable(segment)\" class=\"segment-value\">{{ segment.description }}</span>\n        </section>\n        <section *ngIf=\"segment.expanded && isExpandable(segment)\" class=\"children\">\n          <ngx-json-viewer [json]=\"segment.value\" [expanded]=\"expanded\"></ngx-json-viewer>\n        </section>\n      </section>\n    </section>\n  `,\n                styles: [`\n    @charset \"UTF-8\";\n    .ngx-json-viewer {\n      font-family: monospace;\n      font-size: 1em;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      position: relative; }\n      .ngx-json-viewer .segment {\n        padding: 2px;\n        margin: 1px 1px 1px 12px; }\n        .ngx-json-viewer .segment .segment-main {\n          word-wrap: break-word; }\n          .ngx-json-viewer .segment .segment-main .toggler {\n            position: absolute;\n            margin-left: -14px;\n            margin-top: 3px;\n            font-size: .8em;\n            line-height: 1.2em;\n            vertical-align: middle;\n            color: #787878; }\n            .ngx-json-viewer .segment .segment-main .toggler::after {\n              display: inline-block;\n              content: \"►\";\n              -webkit-transition: -webkit-transform 0.1s ease-in;\n              transition: -webkit-transform 0.1s ease-in;\n              transition: transform 0.1s ease-in;\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\n          .ngx-json-viewer .segment .segment-main .segment-key {\n            color: #4E187C; }\n          .ngx-json-viewer .segment .segment-main .segment-separator {\n            color: #999; }\n          .ngx-json-viewer .segment .segment-main .segment-value {\n            color: #000; }\n        .ngx-json-viewer .segment .children {\n          margin-left: 12px; }\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\n        color: #FF6B6B; }\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\n        color: #009688; }\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\n        color: #b938a4; }\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\n        color: #05668D; }\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        color: #fff; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        background-color: red; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\n        color: #999; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        background-color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main,\n      .ngx-json-viewer .segment-type-array > .segment-main {\n        white-space: nowrap; }\n      .ngx-json-viewer .expanded > .toggler::after {\n        -webkit-transform: rotate(90deg);\n                transform: rotate(90deg); }\n      .ngx-json-viewer .expandable,\n      .ngx-json-viewer .expandable > .toggler {\n        cursor: pointer; }\n  `]\n            }]\n    }], function () { return []; }, { expanded: [{\n            type: Input\n        }], cleanOnChange: [{\n            type: Input\n        }], json: [{\n            type: Input\n        }] }); })();\n\nclass NgxJsonViewerModule {\n}\nNgxJsonViewerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxJsonViewerModule });\nNgxJsonViewerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxJsonViewerModule_Factory(t) { return new (t || NgxJsonViewerModule)(); }, imports: [[\n            CommonModule\n        ]] });\n/**\n * @nocollapse\n */\nNgxJsonViewerModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxJsonViewerModule, { declarations: function () { return [NgxJsonViewerComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxJsonViewerComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxJsonViewerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    NgxJsonViewerComponent\n                ],\n                exports: [\n                    NgxJsonViewerComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxJsonViewerModule, NgxJsonViewerComponent };\n\n//# sourceMappingURL=ngx-json-viewer.js.map","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiDashboardService } from '../service/api-dashboard.service';\nimport { Subject } from 'rxjs';\nimport * as moment from 'moment';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ApiResultType, ReqResType } from 'src/app/app.enum';\ndeclare var currentCompanyId;\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    public ApiResultType = ApiResultType;\n    public ReqResType = ReqResType;\n    dtOptions: any = {};\n  \n    public Log: ApiDetailModel = {};\n    dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    currentCompanyId: any;\n    selectedReqRes: any;\n    modelHeader: any;\n    fromDate: string;3\n    toDate: string;\n    selectedApi: any = '';\n    ApiList = ['Select API','Invoice-Create', 'Invoice-UpdateImages', 'Schedule-Create', 'Customer-Create','Location-Create'];\n    viewType: any = ApiResultType.Total;\n    //min max date\n    MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n    MaxStartDate = new Date();\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n    constructor(private dashbpardSer: ApiDashboardService) {\n        this.toDate = moment().format('MM/DD/YYYY');\n        this.fromDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1))).format('MM/DD/YYYY'); \n    }\n\n    ngOnInit() {\n        this.currentCompanyId = currentCompanyId;\n        this.initializeGrid();\n        this.getAPILogs();\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n              /*  { extend: 'colvis' }*/\n                //{ extend: 'copy', exportOptions: exportInvitedColumns },\n                //{ extend: 'csv', title: 'API Details', exportOptions: exportInvitedColumns },\n                //{ extend: 'pdf', title: 'API Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                //{ extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n\n    ReloadDataTable() {\n        this.getAPILogs();\n    }\n   public getAPILogs() {\n       this.IsLoading = true;\n       if ((this.datatableElement && this.datatableElement.dtInstance)) {\n        this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n      }\n       this.Log = {};\n       if(this.fromDate == undefined) this.fromDate = '' ;\n       if (this.toDate == undefined) this.toDate = '';\n       if (this.selectedApi == undefined || this.selectedApi == 'Select API')\n       {\n           this.selectedApi = '';\n       }\n       this.dashbpardSer.getApiLogs(this.currentCompanyId, this.fromDate, this.toDate, this.selectedApi, this.viewType).subscribe(data => {\n           this.IsLoading = false;\n           this.Log = data as ApiDetailModel;\n           this.Log && this.Log.ApiLogList.map(m => {\n               m.CreatedDate=  moment(m.CreatedDate).format('MM/DD/YYYY hh:mm a');\n           });\n           this.dtTrigger.next();\n        });\n   }\n\n    public showReqRes(log: ApiDashBoardModel, reqResType) {\n        this.IsLoading = true;\n        this.selectedReqRes = null;\n        this.dashbpardSer.getApiReqRes(log.Id, reqResType).subscribe(data => {\n            this.IsLoading = false;\n            reqResType == ReqResType.Request ? this.selectedReqRes = JSON.parse(data.Request) : this.selectedReqRes = JSON.parse(data.Response);\n            reqResType == ReqResType.Request ? this.modelHeader = 'Request (' + log.Url + \" )\" : this.modelHeader = 'Response (' + log.Url + \" )\";\n            });\n       // reqResType == 2 ? this.selectedReqRes = JSON.parse(log.Request) : this.selectedReqRes = JSON.parse(log.Response);\n    }\n\n    setFromDate(event: any): void {\n        this.fromDate=(event);\n        let d = moment(new Date(new Date().setMonth(new Date().getMonth() + 1))).toDate();\n        !this.toDate ? this.toDate =(moment(d).format('MM/DD/YYYY')) : '';\n        if (this.fromDate != '' && this.toDate!= '') {\n            let _fromDate = moment(this.fromDate).toDate();\n            let _toDate = moment(this.toDate).toDate();\n            if (_toDate < _fromDate) {\n                this.toDate=(event);\n            }\n        }\n    }\n\n    setToDate(event: any) {\n        this.toDate = (event);\n        if (this.fromDate != '' && this.toDate != '') {\n            let _fromDate = moment(this.fromDate).toDate();\n            let _toDate = moment(this.toDate).toDate();\n            if (_fromDate > _toDate) {\n                this.fromDate = (event);\n            }\n        }\n    }\n    apiChanged($event) {\n        this.selectedApi = $event.target.value;\n    }\n\n    getView(type) {\n        this.viewType = type;\n        this.getAPILogs();\n    }\n}\n\n\nexport class ApiDashBoardModel {\n    Id?: number;\n    Request?: string;\n    Response?: string;\n    Url?: string;\n    ExternalRefID?: string;\n    Message?: string;\n    CreatedDate?: string;\n    CreatedBy?: number;\n    CompanyId?: number;\n}\n\nexport class ApiDetailModel {\n    TotalCall?: number;\n    SuccessCall?: number;\n    FailedCall?: number;\n    ApiLogList?: ApiDashBoardModel[] = [];\n}\n\n\n","<div class=\"api-dashboard-container \">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"well pb10 pt15 mb10 no-shadow\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12 col-sm-2 col-md-1 pt5 pr0\"><i class=\"fa fa-filter mr5 fs16\"></i><label class=\"f-normal fs16\">Filter</label></div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <select class=\"form-control\" (change)=\"apiChanged($event)\" >\r\n                            <!--<option [value]='' disabled>Select API</option>-->\r\n                            <option *ngFor=\"let api of ApiList\" [value]=\"api\" [selected]=\"api==selectedApi\">\r\n                                {{api}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <input type=\"text\" [(ngModel)]=\"fromDate\" #fromDate1 class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setFromDate($event);\"  />\r\n                    </div>\r\n                    <div class=\"col-xs-6 col-sm-3 col-md-2 mb5\">\r\n                        <input type=\"text\" [(ngModel)]=\"toDate\" #EndDate1 class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\" (onDateChange)=\"setToDate($event);\" />\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-4 col-md-3\">\r\n                        <input type=\"button\" class=\"btn btn-primary\" id=\"btnApplyFilter\" value=\"Apply\" (click)=\"ReloadDataTable();\" />\r\n                        <!--<input type=\"button\" class=\"btn ml5\" id=\"btnClearFilter\" value=\"Clear Filter\" (click)=\"ClearFilter();\" />-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt10\">\r\n        <div class=\"col-sm-2 col-xs-12 mb10-xs\">\r\n            <div class=\"col-xs-12 api-cards-container\">\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Total}\" (click)=\"getView(ApiResultType.Total);\">\r\n                    <h1 class=\"digit color-default\">{{Log.TotalCall}}</h1>\r\n                    <span class=\"text color-default\">Total Calls</span>\r\n                </a>\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Success}\" (click)=\"getView(ApiResultType.Success);\">\r\n                    <h1 class=\"digit color-lightgreen\">{{Log.SuccessCall}}</h1>\r\n                    <span class=\"text color-lightgreen\">Success</span>\r\n                </a>\r\n                <!--<a class=\"col-sm-12 col-xs-3 card active\">\r\n                    <h1 class=\"digit color-failed\">24</h1>\r\n                    <span class=\"text color-failed\">Failed</span>\r\n                </a>-->\r\n                <a class=\"col-sm-12 col-xs-3 card\" [ngClass]=\"{'active':viewType==ApiResultType.Exception}\" (click)=\"getView(ApiResultType.Exception);\">\r\n                    <h1 class=\"digit color-failed\">{{Log.FailedCall}}</h1>\r\n                    <span class=\"text color-failed\">Failed</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-10 col-xs-12\">\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span class='spinner-dashboard pa'></span></div>\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                        <div class=\"table-responsive\">\r\n                            <table id=\"iapi-dashboard-datatable\" data-gridname=\"26\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                <!--<table id=\"api-dashboard-datatable\" data-gridname=\"18\" class=\"table table-bordered\" datatable>-->\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Api_Name\">API Name</th>\r\n                                        <th data-key=\"External_Ref_ID\">External Ref ID</th>\r\n                                        <th data-key=\"DateTime\">DateTime</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"Request\">Request</th>\r\n                                        <th data-key=\"Response\">Response</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <ng-container>\r\n                                        <tr *ngFor=\"let log of Log?.ApiLogList\">\r\n                                            <td>{{log.Url}}</td>\r\n                                            <td>{{log.ExternalRefID ?log.ExternalRefID : '--'}}</td>\r\n                                            <td>{{log.CreatedDate}}</td>\r\n                                            <td>{{log.Message ==1 ? 'Failed':'Success'}}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" class=\"btn btn-link\" (click)=\"showReqRes(log,ReqResType.Request)\" data-toggle=\"modal\" data-target=\"#idReqResModel\">\r\n                                                    <i class=\"fa fa-arrow-up\" alt=\"Request\" title=\"Request\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button type=\"button\" class=\"btn btn-link\" (click)=\"showReqRes(log,ReqResType.Response)\" data-toggle=\"modal\" data-target=\"#idReqResModel\">\r\n                                                    <i class=\"fa fa-arrow-down\" alt=\"Response\" title=\"Response\"></i>\r\n                                                </button>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--req json-->\r\n<div id=\"idReqResModel\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n                <h4 class=\"modal-title\"> {{modelHeader}}  <span class=\"pull-right\"></span></h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <ngx-json-viewer *ngIf=\"selectedReqRes\" [json]=\"selectedReqRes\"></ngx-json-viewer>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" id=\"idCloseModel\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!--end view Shift-->\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiDashboardService extends HandleError {\n    private getAllLogUrl: string = '/Home/GetApiLogs?companyId=';\n    private getReqResUrl: string = '/Home/GetApiLogRequestResponse?id=';\n    constructor(private httpClient: HttpClient) {\n        super();\n    }\n\n    getApiLogs(currentCompanyId:number,fromDate,toDate,selectedApi,viewType): Observable<any> {\n        return this.httpClient.get(this.getAllLogUrl + currentCompanyId + \"&fromdate=\" + fromDate + \"&toDate=\" + toDate + \"&viewType=\" + viewType+\"&apiName=\" + selectedApi)\n            .pipe(catchError(this.handleError<any>('getApiLogs', null)));\n    }\n    getApiReqRes(id, reqResType): Observable<any> {\n        return this.httpClient.get(this.getReqResUrl + id + \"&ReqResType=\" + reqResType)\n            .pipe(catchError(this.handleError<any>('GetApiLogRequestResponse', null)));\n    }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\n\nconst routeTpd: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  },\n];\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    SharedModule,\n    DirectiveModule,\n    NgxJsonViewerModule,\n    DataTablesModule,\n    RouterModule.forChild(routeTpd)\n  ]\n})\nexport class TpdApiDashboardModule { }\n"]}