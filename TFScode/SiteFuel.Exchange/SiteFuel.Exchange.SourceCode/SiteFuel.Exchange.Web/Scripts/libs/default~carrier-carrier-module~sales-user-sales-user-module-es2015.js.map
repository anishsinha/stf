{"version":3,"sources":["./src/app/carrier/schedule-builder/add-location/add-location.model.ts","./src/app/carrier/schedule-builder/add-location/add-location.service.ts","./src/app/shared-components/pricing-section/pricing-section.component.ts","./src/app/shared-components/pricing-section/pricing-section.component.html","./src/app/shared-components/pricing-section/pricing-section.module.ts"],"names":[],"mappings":"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","file":"default~carrier-carrier-module~sales-user-sales-user-module-es2015.js","sourcesContent":["import { DropdownItem } from \"src/app/statelist.service\";\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\n\r\nexport class StateModel {\r\n    CountryCode: string;\r\n    CountryId: number;\r\n    CountryGroupId?: number;\r\n    QuantityIndicatorId: number;\r\n    StateCode: string;\r\n    StateId: number;\r\n    StateName: string;\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor(countryId?: number) {\r\n        \r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n\r\n        if (countryId == 2) {\r\n            this.CenterLat = 56.14;\r\n            this.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 3) {\r\n            this.CenterLat = 28.61;\r\n            this.CenterLon = 77.23;\r\n        }\r\n        else {\r\n            this.CenterLat = 38;\r\n            this.CenterLon = -98.35;\r\n        }\r\n    }\r\n}\r\nexport const RackAvgTypes: DropdownItem[] = [\r\n    { Id: 1, Name: '+$', Code: '' },\r\n    { Id: 2, Name: '-$', Code: '' },\r\n    { Id: 3, Name: '+%', Code: '' },\r\n    { Id: 4, Name: '-%', Code: '' }\r\n]","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { Geocode } from './add-location.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddLocationService extends HandleError {\r\n\r\n    private getaddressByZipUrl = \"Validation/GetAddressByZip\";\r\n    private getOpisTerminalsUrl = \"Supplier/Order/GetOpisTerminals\";\r\n    private getAllTPOCompaniesUrl = \"/Carrier/Order/GetAllTPOCompanies\";\r\n    //private getAllBuyerCompaniesUrl = \"/Carrier/Order/GetAllBuyerCompanies\";\r\n    private getStatesOfAllCountrieslistUrl = \"/Supplier/Order/GetStatesOfAllCountries\";\r\n    private getTPOContactPersonDetailsUrl = \"/Supplier/Order/GetTPOContactPersonDetails\";\r\n    private getFuelProductslistUrl = \"/Supplier/Order/GetFuelProducts\";\r\n    private getMarineProductListUrl = \"/Supplier/FuelRequest/GetProductList\";\r\n    private getFuelProductsByZiplistUrl = \"/Supplier/Order/GetProductListByZip\";\r\n    private postCreateOrderUrl = \"/Carrier/ScheduleBuilder/Create\";\r\n    private isTpoCompanyExistUrl = \"/Validation/IsCompanyNameExist\";\r\n    private isJobNameExistUrl = \"/Supplier/Order/ValidateJobNameByCompanyId\";\r\n    private isIsPhoneNumberValidUrl = \"/Validation/IsPhoneNumberValid\";\r\n    private GetPricingCodesUrl = \"/Supplier/Order/GetPricingCodes\";\r\n    private getClosedTerminalUrl = \"Supplier/Order/GetClosedTerminal\";\r\n    private getCurrancylistUrl = \"/Supplier/Order/GetCurrenyList\";\r\n    private getTPOCompanyContactPersonsUrl = \"/Supplier/Order/GetTPOCompanyContactPersons\";\r\n    private GetaddressbyLatLongUrl = \"/Supplier/Order/GetAddressByLongLat\";\r\n    private GetCityGroupTerminalsUrl = \"/Supplier/Order/GetCityGroupTerminals\";\r\n    private GetTerminalsUrl = \"/Carrier/ScheduleBuilder/GetTerminalsForMultipleProducts\";\r\n    private isCityGroupTerminalPriceAvailableUrl = \"/Supplier/FuelRequest/IsCityGroupTerminalPriceAvailable\";\r\n    private getPreferencesSettingsUrl = \"/Carrier/ScheduleBuilder/GetPreferenceSettingForOnTheFlyLocation\";\r\n    private getTimeZoneNameUrl = \"https://maps.googleapis.com/maps/api/timezone/json\";\r\n    private GetAddressUrl = \"/Validation/GetAddress?address=\";\r\n    private getTfxProductUrl = \"Supplier/Order/GetTfxProduct\";\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getAllTPOCompanies(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAllTPOCompaniesUrl)\r\n            .pipe(catchError(this.handleError<any>('GetAllTPOCompanies', null)));\r\n    }\r\n    getTPOCompanyContactPersons(companyId: string): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getTPOCompanyContactPersonsUrl}?companyId=${companyId}`)\r\n            .pipe(catchError(this.handleError<any>('getTPOCompanyContactPersons', null)));\r\n    }\r\n    getTPOContactPersonDetails(userId: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getTPOContactPersonDetailsUrl}?userId=${userId}`)\r\n            .pipe(catchError(this.handleError<any>('getTPOContactPersonDetails', null)));\r\n    }\r\n    getCurrenyList(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getCurrancylistUrl)\r\n            .pipe(catchError(this.handleError<any>('getCurrenyList', null)));\r\n    }\r\n    getStatesOfAllCountries(countryId?: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getStatesOfAllCountrieslistUrl}?countryId=${countryId}`)\r\n            .pipe(catchError(this.handleError<any>('getStatesOfAllCountries', null)));\r\n    }\r\n    getFuelProducts(productDisplayGroupId: any, companyId: any, jobId: any): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getFuelProductslistUrl}?productDisplayGroupId=${productDisplayGroupId}&companyId=${companyId}&jobId=${jobId}`)\r\n            .pipe(catchError(this.handleError<any>('GetFuelProducts', null)));\r\n    }\r\n    getMarineProductList(displayGroupId: number, jobId: any, zipCode: string, source: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getMarineProductListUrl}?displayGroupId=${displayGroupId}&jobId=${jobId}&zipCode=${zipCode}&source=${source}`)\r\n            .pipe(catchError(this.handleError<any>('getMarineProductList', null)));\r\n    }\r\n    getProductListByZip(zipCode: any, radius: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getFuelProductsByZiplistUrl}?zipCode=${zipCode}&radius=${radius}`)\r\n            .pipe(catchError(this.handleError<any>('getProductListByZip', null)));\r\n    }\r\n    getFuelTerminals(jobCountryId: number, pricingCodeId: number, fuelType: number, companyCountryId: number, isSupressOrderPricing: boolean, jobLatitude: number, jobLongitude: number, searchStringTeminal: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.GetTerminalsUrl + '?jobCountryId=' + jobCountryId + '&pricingCodeId=' + pricingCodeId + '&fuelType=' + fuelType + '&companyCountryId=' + companyCountryId + '&isSupressOrderPricing=' + isSupressOrderPricing + '&jobLatitude=' + jobLatitude + '&jobLongitude=' + jobLongitude + '&searchStringTeminal=' + searchStringTeminal)\r\n            .pipe(catchError(this.handleError<any>('getFuelTerminals', null)));\r\n    }\r\n    getOpisTerminals(cityRackId: number, latitude: number, longitude: number, countryId: number, terminal: string, source: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOpisTerminalsUrl + '?cityRackId=' + cityRackId + '&countryId=' + countryId + '&latitude=' + latitude + '&longitude=' + longitude + '&terminal=' + terminal + '&source=' + source)\r\n            .pipe(catchError(this.handleError<any>('getOpisTerminals', null)));\r\n    }\r\n    getTfxProduct(tfxProductId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getTfxProductUrl + '?tfxProductId=' + tfxProductId)\r\n            .pipe(catchError(this.handleError<any>('getProductIdForTfxProduct', null)));\r\n    }\r\n    createOrder(modal: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCreateOrderUrl, modal)\r\n            .pipe(catchError(this.handleError<any>('createOrder', null)));\r\n    }\r\n\r\n    getTimeZoneName(latitude: any, longitude: any, timestamp: any, apiKey: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getTimeZoneNameUrl + \"?location=\" + latitude + \",\" + longitude + \"&timestamp=\" + timestamp + \"&key=\" + apiKey)\r\n            .pipe(catchError(this.handleError<any>('createOrder', null)));\r\n    }\r\n\r\n    isTpoCompanyExist(IsNewCompany: any, CompanyName: any): Observable<boolean> {\r\n        return this.httpClient.get<any>(`${this.isTpoCompanyExistUrl}?IsNewCompany=${IsNewCompany}&CompanyName=${CompanyName}`)\r\n            .pipe(catchError(this.handleError<any>('isTpoCompanyExist', null)));\r\n    }\r\n\r\n    isJobNameExist(jobName: string, companyId: number): Observable<boolean> {\r\n        return this.httpClient.get<any>(`${this.isJobNameExistUrl}?jobName=${jobName}&companyId=${companyId}`)\r\n            .pipe(catchError(this.handleError<any>('isJobNameExist', null)));\r\n    }\r\n\r\n    IsPhoneNumberValid(phoneNumber: string): Observable<boolean> {\r\n\r\n        return this.httpClient.get<any>(`${this.isIsPhoneNumberValidUrl}?phoneNumber=${phoneNumber}`)\r\n            .pipe(catchError(this.handleError<any>('IsPhoneNumberValid', null)));\r\n    }\r\n\r\n    getClosedTerminal(fuelTypeId,\r\n        latitude,\r\n        longitude,\r\n        countryId,\r\n        pricingCodeId,\r\n        terminal,\r\n        pricingSourceId,\r\n        cityRackId): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getClosedTerminalUrl}?fuelTypeId=${fuelTypeId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&pricingCodeId=${pricingCodeId}&terminal=${terminal}&pricingSourceId=${pricingSourceId}&cityRackId=${cityRackId}`)\r\n            .pipe(catchError(this.handleError<any>('getClosedTerminal', null)));\r\n    }\r\n    getPricingCodes(filterModel: any) {\r\n        return this.httpClient.get<any>(`${this.GetPricingCodesUrl}?PricingTypeId=${filterModel.PricingTypeId}&PricingSourceId=${filterModel.PricingSourceId}&feedTypeId=${filterModel.feedTypeId}&fuelClassTypeId=${filterModel.fuelClassTypeId}&tfxProdId=${filterModel.tfxProdId}&Prefix=${filterModel.Prefix}`)\r\n            .pipe(catchError(this.handleError<any>('getPricingCodes', null)));\r\n    }\r\n\r\n    getAddressByZip(zipCode: string, address: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(`${this.getaddressByZipUrl}?zipCode=${zipCode}&address=${address}`)\r\n            .pipe(catchError(this.handleError<any>('getAddressByZip', null)));\r\n    }\r\n\r\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(`${this.GetaddressbyLatLongUrl}?latitude=${latitude}&longitude=${longitude}`)\r\n            .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\r\n    }\r\n\r\n    GetCityGroupTerminals(stateId: string, allStates: boolean, sourceId: number): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.GetCityGroupTerminalsUrl}?stateId=${stateId}&allStates=${allStates}&sourceId=${sourceId}`)\r\n            .pipe(catchError(this.handleError<any>('GetCityGroupTerminals', null)));\r\n    }\r\n    IsCityGroupTerminalPriceAvailable(jobid, fueltypeId, selectedCityRackId, lattitude, longitude, countryCode, sourceId): Observable<boolean> {\r\n        return this.httpClient.get<any>(this.isCityGroupTerminalPriceAvailableUrl + '?jobid=' + jobid + '&fueltypeId=' + fueltypeId + '&selectedCityRackId=' + selectedCityRackId + '&lattitude=' + lattitude + '&longitude=' + longitude + '&countryCode=' + countryCode + '&sourceId=' + sourceId).pipe(catchError(this.handleError<any>('IsCityGroupTerminalPriceAvailable', null)));\r\n    }\r\n\r\n    GetPreferencesSettings(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getPreferencesSettingsUrl)\r\n            .pipe(catchError(this.handleError<any>('GetPreferencesSettings', null)));\r\n    }\r\n\r\n    GetAddress(address: string): Observable<Geocode> {\r\n        return this.httpClient.get<any>(this.GetAddressUrl + address)\r\n            .pipe(catchError(this.handleError<any>('GetaddressbyAddress', null)));\r\n    }\r\n}\r\n","import { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AddLocationService } from '../../carrier/schedule-builder/add-location/add-location.service';\r\nimport { RackAvgTypes } from '../../carrier/schedule-builder/add-location/add-location.model';\r\nimport * as moment from 'moment';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { PricingType } from 'src/app/app.enum';\r\n\r\n@Component({\r\n    selector: 'app-pricing-section',\r\n    templateUrl: './pricing-section.component.html',\r\n    styleUrls: ['./pricing-section.component.css']\r\n})\r\nexport class PricingSectionComponent implements OnInit {\r\n\r\n    @Input() public locationForm: FormGroup;\r\n    @Input() public formSubmited: boolean = false;\r\n    @Input() public UoM: number = 0;\r\n    @Input() public IsTBD: boolean = false;\r\n    @Input() public tbdDrProductTypeId?: number;\r\n    @Input() public tbdDrProductId?: number;\r\n    @Input() public productDetails?: any;\r\n    @Output() DetectFormChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() UpdateSuppressPricingChange = new EventEmitter<boolean>();\r\n\r\n\r\n    public TierPricingTypeForm: FormGroup;\r\n\r\n    _loadingPricingCodes: boolean = false;\r\n    CityGroupTerminalsList: any[] = [];\r\n    approvedTerminalList: any[] = [];\r\n    _minimumConst = 0.00001;\r\n    _zeroConst = 0;\r\n    CountryBasedZipcodeLabel: string = \"Zip\";\r\n    _loadingAddress: boolean = false;\r\n    MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    //pricing\r\n    pricingCodes = [];\r\n    pricingfeedTypeId = 0;\r\n    pricingfuelClassTypeId = 0;\r\n    pricingCodesArr = [{\r\n        \"PricingTypes\": {\r\n            \"Fixed\": {\r\n                \"Id\": 1,\r\n                \"Code\": \"A-120000\"\r\n            },\r\n            \"FuelCost\": {\r\n                \"Id\": 4,\r\n                \"Code\": \"A-140000\"\r\n            }\r\n        }\r\n    }];\r\n    RackAvgTypes: DropdownItem[] = RackAvgTypes;\r\n    //TIER PRICING TYPE\r\n    tierApprovedTerminalList: any[] = [];\r\n    tierCityGroupTerminalsList: any[] = [];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private addLocationService: AddLocationService,\r\n        private modalService: NgbModal,\r\n        private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n    get f() { return this.locationForm['controls']; }\r\n    get fuelPricingForm() { return this.f.FuelPricingDetails['controls']; }\r\n    get tierPricingForm() { return this.fuelPricingForm.TierPricing['controls']; }\r\n\r\n    ngOnInit() {\r\n        this.TierPricingTypeForm = this.initailizeTierPricingTypeForm();\r\n    }\r\n    pricingTypeChanged(type: number) {\r\n\r\n        this.setPricingValidation(type);\r\n        this.initilizeMarketBasedPrice();\r\n\r\n        if (type == 1) {\r\n            this.getPricingCodes();\r\n        }\r\n        else {\r\n            this.setPricingCode();\r\n        }\r\n    }\r\n    updateFormControlValidators(control: any, validators: any[]) {\r\n        control.setValidators(validators);\r\n        control.updateValueAndValidity();\r\n    }\r\n    openPriceCodeModal(pricingcodeModal) {\r\n        this.getPricingCodes();\r\n        this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true, backdrop: 'static', keyboard: false });\r\n    }\r\n\r\n    updateFuelType(pricingSourceId: number) {\r\n        let fuelTypeId = this.tbdDrProductId;\r\n        let fuelDetails = this.productDetails.find(t => t.PricingSourceId == pricingSourceId && t.TfxProductId == fuelTypeId);\r\n        this.f.FuelDetails.get('FuelTypeId').setValue(fuelDetails.Id);\r\n        this.f.FuelDetails.get('FuelDisplayGroupId').setValue(fuelDetails.DisplayGroupId);\r\n    }\r\n\r\n    getSelectedPricingCode(item: any) {\r\n        document.getElementById('pricingcodeModal').click()\r\n        if (!this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\r\n            //this.modalService.dismissAll();\r\n            let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n            if (item) {\r\n                this.f.FuelPricingDetails.get('TempPricingCodeDetails').patchValue(item);\r\n                this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\r\n                this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\r\n                //this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n                this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n                let existingPricingSource = this.f.FuelPricingDetails.get('FuelPricingDetails.PricingSourceId').value;\r\n                this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n                if (this.IsTBD && this.tbdDrProductTypeId != 10) {\r\n                    this.updateFuelType(item.PricingSourceId);\r\n                }\r\n                if (existingPricingSource != item.PricingSourceId) {\r\n                    this.getCityGroupTerminals();\r\n                }\r\n                this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n            }\r\n            if (item.PricingSourceId == 1) {\r\n                this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n            }\r\n            else {\r\n                this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\r\n            }\r\n            this.setRackTerminalValidation();\r\n        }\r\n        else {\r\n            let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n            if (item) {\r\n                this.TierPricingTypeForm.get('TempPricingCodeDetails').patchValue(item);\r\n                this.TierPricingTypeForm.get('Code').patchValue(item.Code);\r\n                this.TierPricingTypeForm.get('CodeId').patchValue(item.Id);\r\n                //this.TierPricingTypeForm.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n                this.TierPricingTypeForm.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n                this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n\r\n                this.getCityGroupTerminals_tpt();\r\n                this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n            }\r\n            if (item.PricingSourceId == 1) {\r\n                this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n            }\r\n            else {\r\n                this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n            }\r\n            this.setRackTerminalValidation_tpt();\r\n        }\r\n    }\r\n    onPricingCodeSelected(item: any) {\r\n\r\n        let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n        this.f.FuelPricingDetails.get('Code').patchValue(item.Code);\r\n        this.f.FuelPricingDetails.get('CodeId').patchValue(item.Id);\r\n        this.f.FuelPricingDetails.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n        this.f.FuelPricingDetails.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n        this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n\r\n        if (item.PricingSourceId == 1) {\r\n            this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n        }\r\n        else {\r\n            this.f.FuelPricingDetails.get('EnableCityRack').setValue(true);\r\n        }\r\n        this.setRackTerminalValidation();\r\n        this.getCityGroupTerminals();\r\n    }\r\n    onApprovedTerminalSelected(event: any): void {\r\n        this.f.FuelPricingDetails.get('TerminalName').patchValue(event.Name);\r\n        this.f.FuelPricingDetails.get('TerminalId').patchValue(event.Id);\r\n    }\r\n    getCityGroupTerminals() {\r\n        this.CityGroupTerminalsList = [];\r\n        let selectedState = this.f.AddressDetails.get('StateId').value;\r\n        if (selectedState > 0) {\r\n            this.addLocationService.GetCityGroupTerminals(selectedState, false, this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.CityGroupTerminalsList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    setPricingCode() {\r\n        if (this.locationForm.get('FuelPricingDetails.PricingTypeId').value != 1) {\r\n            let pricingCode = this.getPricingCode(this.locationForm.get('FuelPricingDetails.PricingTypeId').value, this.locationForm.get('FuelPricingDetails.FuelPricingDetails.PricingSourceId').value);\r\n            if (pricingCode != null) {\r\n                this.locationForm.get('FuelPricingDetails.FuelPricingDetails.PricingCode').patchValue(pricingCode);\r\n            }\r\n        }\r\n    }\r\n    getPricingCode(pricingTypeId, pricingSourceId) {\r\n        var pricingType = pricingTypeId == 2 ? 'Fixed' : pricingTypeId == 4 ? 'FuelCost' : '';\r\n\r\n        if (pricingType == '')\r\n            return null;\r\n\r\n        var pricing = this.pricingCodesArr.map(function (prc) {\r\n            return prc.PricingTypes[pricingType];\r\n        });\r\n\r\n        if (pricing.length > 0)\r\n            pricing = pricing[0];\r\n        else\r\n            pricing = null;\r\n\r\n        return pricing;\r\n    }\r\n    getPricingDisplayData(item) {\r\n        var displayData = '';\r\n        if (item != undefined || item != null) {\r\n            if (item.PricingTypeId == 2) {\r\n                displayData += item.PricingSource + ', ' + \"Fixed\";\r\n            }\r\n            else if (item.PricingTypeId == 4) {\r\n                displayData += item.PricingSource + ', ' + \"Fuel Cost\";\r\n            }\r\n            else if (item.PricingTypeId == 1) {\r\n                displayData += item.PricingSource + ', ' + item.RackAvgPricingType;\r\n                if (item.PricingSourceId == 2 || item.PricingSourceId == 3) {\r\n                    displayData += ', ' + item.FeedType + ', ' + item.WeekendPricingDay;\r\n                }\r\n                if (item.PricingSourceId == 2) {\r\n                    displayData += ', ' + item.FuelClassType + ', ' + item.QuantityIndicator;\r\n                }\r\n            }\r\n        }\r\n        return displayData;\r\n    }\r\n    removePricingValidation() {\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('PricePerGallon'), []);\r\n        //this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupValue'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('RackPrice'), []);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('Code'), []);\r\n    }\r\n    setPricingValidation(type: number) {\r\n        this.removePricingValidation();\r\n        if (!this.f.IsSupressOrderPricing.value) {\r\n            //Market Based\r\n            if (type == 1) {\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('RackPrice'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('Code'), [Validators.required]);\r\n                this.f.FuelPricingDetails.get('RackAvgTypeId').setValue(1);\r\n            }\r\n            //Fuel cost\r\n            else if (type == 4) {\r\n                //this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId'), [Validators.required]);\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('SupplierCostMarkupValue'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.f.FuelPricingDetails.get('SupplierCostMarkupTypeId').setValue(1);\r\n            }\r\n            //Fixed\r\n            else if (type == 2) {\r\n                this.updateFormControlValidators(this.f.FuelPricingDetails.get('PricePerGallon'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            }\r\n        }\r\n    }\r\n    initilizeMarketBasedPrice() {\r\n        this.f.FuelPricingDetails.get('EnableCityRack').setValue(false);\r\n        this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), []);\r\n        this.f.FuelPricingDetails.get('Code').patchValue(null);\r\n        this.f.FuelPricingDetails.get('CodeId').patchValue(null);\r\n        this.f.FuelPricingDetails.get('CodeDescription').patchValue(null);\r\n        this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: null, Code: null, Description: null });\r\n        this.f.FuelPricingDetails.get('TempPricingCodeDetails').patchValue(null);\r\n    }\r\n    setRackTerminalValidation() {\r\n        let isChecked = this.f.FuelPricingDetails.get('EnableCityRack').value;\r\n        if (isChecked) {\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), [Validators.required]);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), []);\r\n        }\r\n    }\r\n    cityRackTerminalChanged() {\r\n        let jobid = this.f.AddressDetails.get('JobId').value,\r\n            fueltypeId = this.f.FuelDetails.get('FuelTypeId').value,\r\n            selectedCityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value,\r\n            lattitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryCode = this.f.AddressDetails.get('CountryCode').value,\r\n            _countryCode = countryCode == \"1\" ? \"USA\" : \"CAN\",\r\n            sourceId = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value\r\n\r\n        this.addLocationService.IsCityGroupTerminalPriceAvailable(jobid ? jobid : 0, fueltypeId, selectedCityRackId, lattitude, longitude, _countryCode, sourceId).subscribe(response => {\r\n            if (response == false) {\r\n                this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n                Declarations.msgwarning(\"Pricing not available for this City Rack/Terminal. Try to assign another City Rack/Terminal.\", null, null)\r\n            }\r\n        });\r\n        if (sourceId != 1) {\r\n            this.getOpisTerminals();\r\n        }\r\n    }\r\n    getOpisTerminals() {\r\n        let cityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value || 0,\r\n            latitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryId = this.f.AddressDetails.get('CountryId').value,\r\n            source = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value\r\n        this.addLocationService.getOpisTerminals(cityRackId, latitude, longitude, countryId, '', source).subscribe(response => {\r\n            if (response) {\r\n                this.approvedTerminalList = response;\r\n            }\r\n        });\r\n    }\r\n    getApprovedTerminal() {\r\n        let pricingSourceId = this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value || 0;\r\n        if (pricingSourceId == 1) {\r\n            let pricingCodeId = this.f.FuelPricingDetails.get('CodeId').value || 0;\r\n            let fuelTypeId = this.f.FuelDetails.get('FuelTypeId').value || 0;\r\n            let latitude = this.f.AddressDetails['controls']['Latitude'].value || 0;\r\n            let longitude = this.f.AddressDetails['controls']['Longitude'].value || 0;\r\n            let countryId = this.f.AddressDetails.get('CountryId').value || 0;\r\n            let terminal = this.f.FuelPricingDetails.get('TerminalId').value || '';\r\n            let cityRackId = this.f.FuelPricingDetails.get('CityGroupTerminalId').value || '';\r\n\r\n            this.addLocationService.getClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId, cityRackId).subscribe(data => {\r\n                if (data) {\r\n                    this.approvedTerminalList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    addRemoveTierFee(isAdd: boolean) {\r\n        let tierPricingArray = this.tierPricingForm.Pricings as FormArray;\r\n        let arrayLength = tierPricingArray.controls.length;\r\n        let lastIndex = arrayLength - 1;\r\n        let lastRow = tierPricingArray.controls[lastIndex] as FormGroup;\r\n        let secondLastRow = tierPricingArray.controls[lastIndex - 1] as FormGroup;\r\n        let thirdLastRow = tierPricingArray.controls[lastIndex - 2] as FormGroup;\r\n\r\n        if (isAdd) {\r\n            let tierPricingArray = this.tierPricingForm.Pricings as FormArray;\r\n            let newRow = this.getTierPricingForm(false);\r\n\r\n            newRow.get('FromQuantity').setValue(secondLastRow.get('ToQuantity').value);\r\n            lastRow.get('FromQuantity').setValue(0);\r\n            lastRow.get('Quantity').setValue(0);\r\n            tierPricingArray.insert((lastIndex), newRow);\r\n        }\r\n        else if (arrayLength > 2) {\r\n            lastRow.get('FromQuantity').setValue(thirdLastRow.get('ToQuantity').value);\r\n            lastRow.get('Quantity').setValue(thirdLastRow.get('ToQuantity').value);\r\n            tierPricingArray.removeAt(lastIndex - 1);\r\n        }\r\n    }\r\n    toQuantityChanged(value: number, index: number) {\r\n        let nextPricingRow = this.tierPricingForm.Pricings.controls[index + 1] as FormGroup;\r\n        if (nextPricingRow) {\r\n            nextPricingRow.get('FromQuantity').setValue(value);\r\n            nextPricingRow.get('Quantity').setValue(value);\r\n        }\r\n    }\r\n    getTierPricingForm(isAboveQuantityRow: boolean): FormGroup {\r\n\r\n        let validators: ValidatorFn[] = [];\r\n        isAboveQuantityRow ? null : validators.push(Validators.required);\r\n\r\n        return this.fb.group(\r\n            {\r\n                RequestPriceDetailId: this.fb.control(null),\r\n                FromQuantity: this.fb.control(0, validators),\r\n                ToQuantity: this.fb.control(0, validators),\r\n                Quantity: this.fb.control(null),\r\n                TerminalId: this.fb.control(null),\r\n                TerminalName: this.fb.control(null),\r\n                TempTerminalName: this.fb.control(null),\r\n                CityGroupTerminalId: this.fb.control(null),\r\n                CityGroupTerminalStateId: this.fb.control(null),\r\n                DisplayPrice: this.fb.control(null, [Validators.required]),\r\n                RackAvgTypeId: this.fb.control(null),\r\n                PricePerGallon: this.fb.control(0),\r\n                SupplierCostMarkupTypeId: this.fb.control(null),\r\n                SupplierCostMarkupValue: this.fb.control(0),\r\n                MarginTypeId: this.fb.control(null),\r\n                Margin: this.fb.control(null),\r\n                BasePrice: this.fb.control(null),\r\n                RackPrice: this.fb.control(0),\r\n                BaseSupplierCost: this.fb.control(null),\r\n                Currency: this.fb.control(0),\r\n                ExchangeRate: this.fb.control(null),\r\n                UoM: this.fb.control(0),\r\n                FuelTypeId: this.fb.control(null),\r\n                JobId: this.fb.control(0),\r\n                PricingSourceId: this.fb.control(1),\r\n                PricingTypeId: this.fb.control(PricingType.PricePerGallon),\r\n                //RackTypeId : this.fb.control(null),\r\n                IncludeTaxes: this.fb.control(false),\r\n                IsActive: this.fb.control(false),\r\n                IsAboveQuantity: this.fb.control(isAboveQuantityRow),\r\n                RowIndex: this.fb.control(1),\r\n                TotalRows: this.fb.control(null),\r\n                EstimatedPPG: this.fb.control(null),\r\n                //PricingCode: this.fb.control({ Id: null, Code: null, Description: null }),\r\n                PricingCode: this.fb.control({ Id: this.pricingCodesArr[0].PricingTypes.Fixed.Id, Code: this.pricingCodesArr[0].PricingTypes.Fixed.Code, Description: null }),\r\n                TempPricingCodeDetails: this.fb.control(null),\r\n                SupplierCost: this.fb.control(null),\r\n                SupplierCostTypeId: this.fb.control(null),\r\n                CreationTimeRackPPG: this.fb.control(null),\r\n                MarkertBasedPricingTypeId: this.fb.control(null),\r\n                IsEdit: this.fb.control(false),\r\n                CityGroupTerminalName: this.fb.control(null),\r\n                FuelDisplayGroupId: this.fb.control(0),\r\n                IsTerminalPrice: this.fb.control(null),\r\n                IsSupplierCostPrice: this.fb.control(null),\r\n                IsFixedPrice: this.fb.control(null),\r\n            }\r\n        );\r\n    }\r\n    //TIER PRICING TYPE \r\n    initailizeTierPricingTypeForm(selectedRow?: any) {\r\n        let _form = this.fb.group({\r\n            Id: this.fb.control(null),\r\n            PricingTypeId: this.fb.control(2, [Validators.required]),\r\n            PricePerGallon: this.fb.control(null, [Validators.required, Validators.min(this._minimumConst)]),\r\n            Code: this.fb.control(null),\r\n            CodeId: this.fb.control(null),\r\n            CodeDescription: this.fb.control(null),\r\n            TempPricingCodeDetails: this.fb.control(null),\r\n            RackAvgTypeId: this.fb.control(1),\r\n            RackPrice: this.fb.control(0),\r\n            EnableCityRack: this.fb.control(null),\r\n            TerminalName: this.fb.control(null),\r\n            TerminalId: this.fb.control(null),\r\n            TempTerminalName: this.fb.control(null),\r\n            SupplierCostMarkupTypeId: this.fb.control(1),\r\n            SupplierCostMarkupValue: this.fb.control(0),\r\n            SupplierCost: this.fb.control(null),\r\n            CityGroupTerminalId: this.fb.control(null),\r\n            FuelPricingDetails: this.fb.group({\r\n                PricingSourceId: this.fb.control(1),\r\n                PricingCode: this.fb.control({ Id: null, Code: null, Description: null })\r\n            })\r\n        });\r\n        if (selectedRow) {\r\n            _form.get('TerminalName').setValue(selectedRow.TerminalName);\r\n            _form.get('TerminalId').setValue(selectedRow.TerminalId);\r\n            _form.get('CityGroupTerminalId').setValue(selectedRow.CityGroupTerminalId);\r\n            _form.get('RackAvgTypeId').setValue(selectedRow.RackAvgTypeId);\r\n            _form.get('PricePerGallon').setValue(selectedRow.PricePerGallon);\r\n            _form.get('SupplierCostMarkupTypeId').setValue(selectedRow.SupplierCostMarkupTypeId);\r\n            _form.get('SupplierCostMarkupValue').setValue(selectedRow.SupplierCostMarkupValue);\r\n            _form.get('SupplierCost').setValue(selectedRow.SupplierCost);\r\n            _form.get('RackPrice').setValue(selectedRow.RackPrice);\r\n            _form.get('PricingTypeId').setValue(selectedRow.PricingTypeId);\r\n            _form.get('TempPricingCodeDetails').setValue(selectedRow.TempPricingCodeDetails);\r\n            //_form.get('PricingSourceId').setValue(data.FuelPricingDetails.PricingSourceId);\r\n            _form.get('FuelPricingDetails').get('PricingSourceId').setValue(selectedRow.PricingSourceId);\r\n            //_form.get('PricingCode').setValue(data.FuelPricingDetails.PricingCode);\r\n            _form.get('FuelPricingDetails').get('PricingCode').setValue(selectedRow.PricingCode);\r\n        }\r\n        return _form;\r\n    }\r\n    selectedPricingIndex: number = null;\r\n    setPricingSourceClicked_tpt(index: number, SetTierPriceType: any) {\r\n        this.selectedPricingIndex = index;\r\n        //set form\r\n        let selectedRow = this.tierPricingForm.Pricings.controls[this.selectedPricingIndex].getRawValue();\r\n        //selectedRow.PricingSourceId = 1;\r\n        this.TierPricingTypeForm = this.initailizeTierPricingTypeForm(selectedRow);\r\n\r\n        let control = this.TierPricingTypeForm.get('PricingTypeId') as FormControl;\r\n        this.setPricingValidation_tpt(this.TierPricingTypeForm.get('PricingTypeId').value);\r\n        //CITY RACK FOR SOURCING REQ\r\n        if (selectedRow.PricingCode && selectedRow.PricingCode.Code && selectedRow.PricingCode.Code.startsWith(\"O\")) {\r\n            this.getCityGroupTerminals_tpt();\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), [Validators.required]);\r\n            this.TierPricingTypeForm.get('CityGroupTerminalId').setValue(null)\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n            this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').setValue(2);\r\n        }\r\n        //this.TierPricingTypeForm.get('TempTerminalName').setValue(selectedRow.TempTerminalName || selectedRow.TempTerminalName)\r\n        //open modal\r\n        this.modalService.open(SetTierPriceType, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true });\r\n        this.getPricingCodes();\r\n    }\r\n    pricingTypeChanged_tpt(type: number) {\r\n\r\n        this.setPricingValidation_tpt(type);\r\n        this.initilizeMarketBasedPrice_tpt();\r\n\r\n        if (type == 1) {\r\n            this.getPricingCodes();\r\n        }\r\n        else {\r\n            this.setPricingCode_tpt();\r\n        }\r\n    }\r\n    onPricingCodeSelected_tpt(item: any) {\r\n\r\n        let pricingCodeDisplayData = this.getPricingDisplayData(item);\r\n\r\n        this.TierPricingTypeForm.get('Code').patchValue(item.Code);\r\n        this.TierPricingTypeForm.get('CodeId').patchValue(item.Id);\r\n        this.TierPricingTypeForm.get('PricingTypeId').patchValue(item.PricingTypeId);\r\n        this.TierPricingTypeForm.get('CodeDescription').patchValue(pricingCodeDisplayData);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').patchValue(item.PricingSourceId);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: item.Id, Code: item.Code, Description: pricingCodeDisplayData });\r\n        this.f.FuelPricingDetails.get('CityGroupTerminalId').setValue(null);\r\n        \r\n        if (item.PricingSourceId == 1) {\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n        }\r\n        else {\r\n            this.TierPricingTypeForm.get('EnableCityRack').setValue(true);\r\n        }\r\n        this.setRackTerminalValidation_tpt();\r\n        this.getCityGroupTerminals_tpt();\r\n    }\r\n\r\n    openPriceCodeModal_tpt(pricingcodeModal) {\r\n        this.getPricingCodes();\r\n        this.modalService.open(pricingcodeModal, { windowClass: 'pricingcode-modal', size: 'lg', scrollable: true, backdrop: 'static', keyboard: false });\r\n    }\r\n    setRackTerminalValidation_tpt() {\r\n        let isChecked = this.TierPricingTypeForm.get('EnableCityRack').value;\r\n        if (isChecked) {\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), [Validators.required]);\r\n        }\r\n        else {\r\n            this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), []);\r\n        }\r\n    }\r\n    _loaderTierPricingType: boolean = false;\r\n    cityRackTerminalChanged_tpt() {\r\n        let jobid = this.f.AddressDetails.get('JobId').value,\r\n            fueltypeId = this.f.FuelDetails.get('FuelTypeId').value,\r\n            selectedCityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value,\r\n            lattitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryCode = this.f.AddressDetails.get('CountryCode').value,\r\n            _countryCode = countryCode == \"1\"? \"USA\" : \"CAN\",\r\n            sourceId = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value\r\n\r\n        this._loaderTierPricingType = true;\r\n        this.addLocationService.IsCityGroupTerminalPriceAvailable(jobid ? jobid : 0, fueltypeId, selectedCityRackId, lattitude, longitude, _countryCode, sourceId).subscribe(response => {\r\n            this._loaderTierPricingType = false;\r\n            if (response == false) {\r\n                this.TierPricingTypeForm.get('CityGroupTerminalId').setValue(null);\r\n                Declarations.msgwarning(\"Pricing not available for this City Rack/Terminal. Try to assign another City Rack/Terminal.\", null, null)\r\n            }\r\n        });\r\n        if (sourceId != 1) {\r\n            this.getOpisTerminals_tpt();\r\n        }\r\n    }\r\n    getApprovedTerminal_tpt() {\r\n        let pricingSourceId = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value || 0;\r\n        if (pricingSourceId == 1) {\r\n            let pricingCodeId = this.TierPricingTypeForm.get('CodeId').value || 0;\r\n            let fuelTypeId = this.f.FuelDetails.get('FuelTypeId').value || 0;\r\n            let latitude = this.f.AddressDetails['controls']['Latitude'].value || 0;\r\n            let longitude = this.f.AddressDetails['controls']['Longitude'].value || 0;\r\n            let countryId = this.f.AddressDetails.get('CountryId').value || 0;\r\n            let terminal = this.TierPricingTypeForm.get('TerminalId').value || '';\r\n            let cityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value || '';\r\n\r\n            this.addLocationService.getClosedTerminal(fuelTypeId, latitude, longitude, countryId, pricingCodeId, terminal, pricingSourceId, cityRackId).subscribe(data => {\r\n                if (data) {\r\n                    this.tierApprovedTerminalList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onApprovedTerminalSelected_tpt(event: any): void {\r\n        this.TierPricingTypeForm.get('TerminalName').patchValue(event.Name);\r\n        this.TierPricingTypeForm.get('TerminalId').patchValue(event.Id);\r\n    }\r\n    removePricingValidation_tpt() {\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('PricePerGallon'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('SupplierCostMarkupValue'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('RackPrice'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('Code'), []);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('TempPricingCodeDetails'), []);\r\n    }\r\n    setPricingValidation_tpt(type: number) {\r\n        this.removePricingValidation_tpt();\r\n        if (!this.f.IsSupressOrderPricing.value) {\r\n            //Market Based\r\n            if (type == 1) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('RackPrice'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                //REMOVED FOR SOURCING\r\n                //this.updateFormControlValidators(this.TierPricingTypeForm.get('Code'), [Validators.required]);\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('TempPricingCodeDetails'), [Validators.required]);\r\n\r\n                this.TierPricingTypeForm.get('RackAvgTypeId').setValue(1);\r\n            }\r\n            //Fuel cost\r\n            else if (type == 4) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('SupplierCostMarkupValue'), [Validators.required, Validators.min(this._zeroConst)]);\r\n                this.TierPricingTypeForm.get('SupplierCostMarkupTypeId').setValue(1);\r\n            }\r\n            //Fixed\r\n            else if (type == 2) {\r\n                this.updateFormControlValidators(this.TierPricingTypeForm.get('PricePerGallon'), [Validators.required, Validators.min(this._minimumConst)]);\r\n            }\r\n        }\r\n    }\r\n    getOpisTerminals_tpt() {\r\n        let cityRackId = this.TierPricingTypeForm.get('CityGroupTerminalId').value || 0,\r\n            latitude = this.f.AddressDetails.get('Latitude').value,\r\n            longitude = this.f.AddressDetails.get('Longitude').value,\r\n            countryId = this.f.AddressDetails.get('CountryId').value,\r\n            source = this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value\r\n        this.addLocationService.getOpisTerminals(cityRackId, latitude, longitude, countryId, '', source).subscribe(response => {\r\n            if (response) {\r\n                this.tierApprovedTerminalList = response;\r\n            }\r\n        });\r\n    }\r\n    getCityGroupTerminals_tpt() {\r\n        this.tierCityGroupTerminalsList = [];\r\n        let selectedState = this.f.AddressDetails.get('StateId').value;\r\n        if (selectedState > 0) {\r\n            this.addLocationService.GetCityGroupTerminals(selectedState, false, this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value).subscribe(data => {\r\n                if (data && data.length > 0) {\r\n                    this.tierCityGroupTerminalsList = data;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    initilizeMarketBasedPrice_tpt() {\r\n        this.TierPricingTypeForm.get('EnableCityRack').setValue(false);\r\n        this.updateFormControlValidators(this.TierPricingTypeForm.get('CityGroupTerminalId'), []);\r\n        this.TierPricingTypeForm.get('Code').patchValue(null);\r\n        this.TierPricingTypeForm.get('CodeId').patchValue(null);\r\n        this.TierPricingTypeForm.get('CodeDescription').patchValue(null);\r\n        this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingCode').patchValue({ Id: null, Code: null, Description: null });\r\n        this.TierPricingTypeForm.get('TempPricingCodeDetails').patchValue(null);\r\n    }\r\n    setPricingCode_tpt() {\r\n        if (this.TierPricingTypeForm.get('PricingTypeId').value != 1) {\r\n            let pricingCode = this.getPricingCode(this.TierPricingTypeForm.get('PricingTypeId').value, this.TierPricingTypeForm.get('FuelPricingDetails.PricingSourceId').value);\r\n            if (pricingCode != null) {\r\n                this.TierPricingTypeForm.get('FuelPricingDetails.PricingCode').patchValue(pricingCode);\r\n            }\r\n        }\r\n    }\r\n    getRackAvgTypeNameById(id: number, price: string): string {\r\n        let response = '';\r\n        let rack = this.RackAvgTypes.find(r => r.Id == id)\r\n\r\n        if (rack) {\r\n            //let name = rack.Name;\r\n            if (id == 1) {\r\n                response = '+ $' + price;\r\n            }\r\n            else if (id == 2) {\r\n                response = '- $' + price;\r\n            }\r\n            else if (id == 3) {\r\n                response = '+ ' + price + '%';\r\n            }\r\n            else if (id == 4) {\r\n                response = '- ' + price + '%';\r\n            }\r\n        }\r\n        return response;\r\n    }\r\n    cumulationTypeChanged(checked: boolean, cumulationType: number) {\r\n\r\n        this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Day'), []);\r\n        this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Date'), []);\r\n\r\n        if (checked) {\r\n            //let cumulationType = this.tierPricingForm.ResetCumulationSetting.get('CumulationType').value\r\n            if (cumulationType == 1 || cumulationType == 2) {\r\n                this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Day'), [Validators.required]);\r\n            }\r\n            else if (cumulationType == 3 || cumulationType == 4) {\r\n                this.updateFormControlValidators(this.tierPricingForm.ResetCumulationSetting.get('Date'), [Validators.required]);\r\n            }\r\n        }\r\n    }\r\n    setPricing() {\r\n        if (this.TierPricingTypeForm.invalid) {\r\n            return;\r\n        }\r\n        this.modalService.dismissAll();\r\n        let control: AbstractControl = this.tierPricingForm.Pricings.controls[this.selectedPricingIndex];\r\n        let sourceObj = this.TierPricingTypeForm.getRawValue();\r\n\r\n        control.get('TerminalName').setValue(sourceObj.TerminalName);\r\n        control.get('TerminalId').setValue(sourceObj.TerminalId);\r\n        control.get('CityGroupTerminalId').setValue(sourceObj.CityGroupTerminalId);\r\n        control.get('RackAvgTypeId').setValue(sourceObj.RackAvgTypeId);\r\n        control.get('PricePerGallon').setValue(sourceObj.PricePerGallon);\r\n        control.get('SupplierCostMarkupTypeId').setValue(sourceObj.SupplierCostMarkupTypeId);\r\n        control.get('SupplierCostMarkupValue').setValue(sourceObj.SupplierCostMarkupValue);\r\n        control.get('SupplierCost').setValue(sourceObj.SupplierCost);\r\n        control.get('RackPrice').setValue(sourceObj.RackPrice);\r\n        control.get('PricingSourceId').setValue(sourceObj.FuelPricingDetails.PricingSourceId);\r\n        control.get('PricingCode').setValue(sourceObj.FuelPricingDetails.PricingCode);\r\n        control.get('PricingTypeId').setValue(sourceObj.PricingTypeId);\r\n        control.get('TempPricingCodeDetails').setValue(sourceObj.TempPricingCodeDetails);\r\n        // control.patchValue(this.TierPricingTypeForm.value);\r\n        // control.get('TempPricingCodeDetails').setValue(sourceObj.TempPricingCodeDetails);\r\n        // control.get('Code').setValue(sourceObj.Code);\r\n        // control.get('CodeId').setValue(sourceObj.CodeId);\r\n        // control.get('CodeDescription').setValue(sourceObj.CodeDescription);\r\n        // control.get('EnableCityRack').setValue(sourceObj.EnableCityRack);\r\n        // control.get('FuelPricingDetails').patchValue(sourceObj.FuelPricingDetails);\r\n\r\n        if (sourceObj.PricingTypeId == 1) {\r\n            control.get('DisplayPrice').setValue('Rack Avg ' + this.getRackAvgTypeNameById(sourceObj.RackAvgTypeId, sourceObj.RackPrice));\r\n        }\r\n        else if (sourceObj.PricingTypeId == 4) {\r\n            control.get('DisplayPrice').setValue('Fuel Cost ' + this.getRackAvgTypeNameById(sourceObj.SupplierCostMarkupTypeId, sourceObj.SupplierCostMarkupValue));\r\n        }\r\n        else {\r\n            control.get('DisplayPrice').setValue('$' + sourceObj.PricePerGallon);\r\n        }\r\n    }\r\n    getPricingCodes() {\r\n        let filterData = {}\r\n        if (this.f.FuelPricingDetails.get('IsTierPricingRequired').value) {\r\n            filterData = {\r\n                \"PricingSourceId\": this.TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value,//this.tierPricingForm.Pricings.controls[this.selectedPricingIndex].get('PricingSourceId').value,\r\n                \"PricingTypeId\": this.TierPricingTypeForm.get('PricingTypeId').value,\r\n                \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\r\n                \"feedTypeId\": this.pricingfeedTypeId,\r\n                \"fuelClassTypeId\": this.pricingfuelClassTypeId,\r\n                \"Prefix\": \"\"\r\n            };\r\n        }\r\n        else {\r\n            filterData = {\r\n                \"PricingSourceId\": this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value,\r\n                \"PricingTypeId\": this.f.FuelPricingDetails.get('PricingTypeId').value,\r\n                \"tfxProdId\": this.f.FuelDetails.get(\"FuelTypeId\").value,\r\n                \"feedTypeId\": this.pricingfeedTypeId,\r\n                \"fuelClassTypeId\": this.pricingfuelClassTypeId,\r\n                \"Prefix\": \"\"\r\n            }\r\n        }\r\n\r\n        this._loadingPricingCodes = true;\r\n        this.addLocationService.getPricingCodes(filterData).subscribe(data => {\r\n            this._loadingPricingCodes = false;\r\n            if (data) {\r\n                this.pricingCodes = data.PricingCodes;\r\n            }\r\n        });\r\n    }\r\n    toggleSuppressPricing(isChecked: boolean) {\r\n        let isTierPriced = this.fuelPricingForm.IsTierPricingRequired.value;\r\n        if (isChecked) {\r\n            if (isTierPriced) {\r\n                let pricing = this.tierPricingForm.Pricings as FormArray;\r\n                pricing.clear();\r\n                this.removePricingValidation_tpt();\r\n            } else { \r\n                this.removePricingValidation();\r\n            }\r\n        } else {\r\n            if (isTierPriced) {\r\n                this.tierPricingEnabled(isTierPriced);\r\n            } else {\r\n                this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n            }\r\n        }\r\n        this.UpdateSuppressPricingChange.emit(isChecked);\r\n    }\r\n    tierPricingEnabled(isChecked: boolean) {\r\n\r\n        let pricing = this.tierPricingForm.Pricings as FormArray;\r\n        pricing.clear()\r\n        if (isChecked) {\r\n            pricing.push(this.getTierPricingForm(false));\r\n            pricing.push(this.getTierPricingForm(true));\r\n            this.removePricingValidation();\r\n        } else {\r\n            this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    patchExistingPricingDetails(fuelPricingDetails: any){\r\n\r\n        fuelPricingDetails['TempPricingCodeDetails'] = fuelPricingDetails.Code;\r\n        fuelPricingDetails['TempTerminalName'] = fuelPricingDetails.TerminalName;\r\n\r\n        let code = { Code: fuelPricingDetails.Code, CodeDescription: fuelPricingDetails.CodeDescription, CodeId: fuelPricingDetails.CodeId };\r\n        this.locationForm.get('FuelPricingDetails').patchValue(fuelPricingDetails);\r\n        this.locationForm.get('FuelPricingDetails').get('FuelPricingDetails').get('PricingCode').patchValue(code);\r\n\r\n        //CITY RACK\r\n        if(fuelPricingDetails.EnableCityRack){\r\n            this.updateFormControlValidators(this.f.FuelPricingDetails.get('CityGroupTerminalId'), [Validators.required]);\r\n            this.getCityGroupTerminals();\r\n        }\r\n        if (fuelPricingDetails.Code && fuelPricingDetails.Code.startsWith(\"O\")) {\r\n            this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').setValue(2)\r\n        } else{\r\n            this.f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').setValue(1)\r\n        }\r\n\r\n        //TERMINAL DETAILS\r\n        if(fuelPricingDetails.IsTierPricingRequired){\r\n\r\n            let pricing = this.tierPricingForm.Pricings as FormArray;\r\n\r\n            fuelPricingDetails.TierPricing?.Pricings && fuelPricingDetails.TierPricing.Pricings.forEach(row => {\r\n\r\n                //SET QUANTITY\r\n                if (row.IsAboveQuantity) {\r\n                    row['Quantity'] = row['FromQuantity'];\r\n                }\r\n                //SET TEMP\r\n                row['TempPricingCodeDetails'] = row['PricingCode'];\r\n                row['TempTerminalName'] = row.TerminalName;\r\n\r\n                let form = this.getTierPricingForm(row.IsAboveQuantity);\r\n                form.patchValue(row);\r\n\r\n                // //CITY RACK\r\n                // if(row.EnableCityRack){\r\n                //     this.updateFormControlValidators(form.get('CityGroupTerminalId'), [Validators.required]);\r\n                //     form.get('CityGroupTerminalId').setValue(2)\r\n                // }\r\n\r\n                pricing.push(form);\r\n            });\r\n            \r\n            this.removePricingValidation();\r\n            this.changeDetectorRef.detectChanges();\r\n        } else {\r\n            this.setPricingValidation(this.f.FuelPricingDetails.get('PricingTypeId').value);\r\n        }\r\n    }\r\n}\r\n","<div class=\"row\" [formGroup]=\"locationForm\">\r\n    <div class=\"col-12\">\r\n        <div class=\"well\">\r\n            <ng-container>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <h4>Pricing</h4>\r\n                        <!-- tier -->\r\n                        <div class=\"col-sm-12 form-check form-check-inline checkbox\" >\r\n                            <input class=\"form-check-input\" id=\"IsSupressOrderPricing\"\r\n                                   formControlName=\"IsSupressOrderPricing\" [disableControl]=\"f.IsRegularBuyer.value\" (click)=\"toggleSuppressPricing($event.target.checked)\" type=\"checkbox\">\r\n                            <label class=\"form-check-label\" for=\"IsSupressOrderPricing\"> Suppress Pricing</label>\r\n                        </div>\r\n                        <div formGroupName=\"FuelPricingDetails\" *ngIf=\"!f.IsSupressOrderPricing.value\">\r\n                            <div class=\"col-sm-12 form-check form-check-inline checkbox\">\r\n                                <input [disableControl]=\"f.AddressDetails.get('IsMarineLocation').value\" class=\"form-check-input\" id=\"IsTierPricingRequired\"\r\n                                       formControlName=\"IsTierPricingRequired\"\r\n                                       (click)=\"tierPricingEnabled($event.target.checked);\" type=\"checkbox\">\r\n                                <label class=\"form-check-label\" for=\"IsTierPricingRequired\"> Create Tier Pricing</label>\r\n                            </div>\r\n                            <div id=\"tier-pricing-qty-section\" *ngIf=\"fuelPricingForm.IsTierPricingRequired.value\"\r\n                                 formGroupName=\"TierPricing\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-12\" [class]=\"f.FuelDeliveryDetails.get('DeliveryTypeId').value==1? 'pntr-none subSectionOpacity' : ''\">\r\n                                        <div class=\"form-check form-check-inline radio volume-based-tier\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_TierPricingType\"\r\n                                                   [disableControl]=\"f.FuelDeliveryDetails.get('DeliveryTypeId').value==1\"\r\n                                                   formControlName=\"TierPricingType\" name=\"TierPricingType\" type=\"radio\"\r\n                                                   [value]=\"1\">\r\n                                            <label class=\"form-check-label\" for=\"radio-volumeBased\">Volume Based</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline radio delivery-quantity-based-tier\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_TierPricingType\"\r\n                                                   formControlName=\"TierPricingType\" name=\"TierPricingType\" type=\"radio\"\r\n                                                   [value]=\"2\">\r\n                                            <label class=\"form-check-label\" for=\"radio-deliveredquantityrange\">\r\n                                                Delivery\r\n                                                Quantity Based\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"tier-pricing-fuel-quantity\">\r\n                                    <div class=\"row mt5\">\r\n                                        <div class=\"col-sm-3\">\r\n                                            <div *ngIf=\"tierPricingForm.TierPricingType.value==1\"\r\n                                                 class=\"cumulative-delivered-quantity\">\r\n                                                For Cumulative Delivered\r\n                                                Quantity\r\n                                            </div>\r\n                                            <div *ngIf=\"tierPricingForm.TierPricingType.value==2\"\r\n                                                 class=\"delivery-quantity-ranging\">\r\n                                                Delivery Quantity\r\n                                                Ranging\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div id=\"tier-fuel-qty-section\" class=\"partial-section quantity-range\">\r\n                                                <div class=\"partial-block-collection-section mt5\" formArrayName=\"Pricings\">\r\n                                                    <ng-container *ngFor=\"let priceControl of tierPricingForm.Pricings['controls']; let i = index; let isLast = last;\">\r\n                                                        <div [formGroupName]=\"i\">\r\n                                                            <!-- ALL EXCEPT LAST -->\r\n                                                            <div class=\"partial-block\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-12\">\r\n                                                                        <div class=\"pricing-row row\">\r\n                                                                            <div class=\"tier-fuel-quantity-row col-sm-12 idx-1\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-sm-2 subSectionOpacity pntr-none\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <input *ngIf=\"!isLast\"\r\n                                                                                                   class=\"form-control\"\r\n                                                                                                   formControlName=\"FromQuantity\"\r\n                                                                                                   placeholder=\"From\"\r\n                                                                                                   [disableControl]=\"true\"\r\n                                                                                                   type=\"text\">\r\n                                                                                            <input *ngIf=\"isLast\"\r\n                                                                                                   class=\"form-control\"\r\n                                                                                                   formControlName=\"Quantity\"\r\n                                                                                                   placeholder=\"Above\"\r\n                                                                                                   [disableControl]=\"true\"\r\n                                                                                                   type=\"text\">\r\n                                                                                            <span class=\"text-danger\"></span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-1\">\r\n                                                                                        <label *ngIf=\"!isLast\"\r\n                                                                                               class=\"mt7\">To</label>\r\n                                                                                        <label *ngIf=\"isLast\"\r\n                                                                                               class=\"mt7\">Above</label>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <input *ngIf=\"!isLast\"\r\n                                                                                                   class=\"form-control to-quantity valid\"\r\n                                                                                                   formControlName=\"ToQuantity\"\r\n                                                                                                   placeholder=\"Up to\"\r\n                                                                                                   type=\"number\"\r\n                                                                                                   (change)=\"toQuantityChanged($event.target.value, i)\">\r\n                                                                                            <span *ngIf=\"formSubmited && priceControl.get('ToQuantity').errors\"\r\n                                                                                                  class=\"text-danger\">\r\n                                                                                                To Quantity is required.\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group mt7\">\r\n                                                                                            <label *ngIf=\"priceControl.get('DisplayPrice').value==null;\"\r\n                                                                                                   class=\"lblDisplayPrice\">--</label>\r\n                                                                                            <label *ngIf=\"priceControl.get('DisplayPrice').value!=null;\"\r\n                                                                                                   class=\"lblDisplayPrice\">{{priceControl.get('DisplayPrice').value}}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-2\">\r\n                                                                                        <div class=\"form-group\">\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"btn btn-primary btn-sm\"\r\n                                                                                               data-target=\"#set-tier-price\"\r\n                                                                                               data-backdrop=\"static\"\r\n                                                                                               data-keyboard=\"false\"\r\n                                                                                               (click)=\"setPricingSourceClicked_tpt(i, SetTierPriceType);\">\r\n                                                                                                Set\r\n                                                                                                Pricing\r\n                                                                                            </a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"qty-add-btns fs18 pl0 col-sm-1\">\r\n                                                                                        <ng-container *ngIf=\"i==(tierPricingForm.Pricings.controls.length-2)\">\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                                                               title=\"Add\"\r\n                                                                                               (click)=\"addRemoveTierFee(true)\">\r\n                                                                                            </a>\r\n                                                                                            <a type=\"button\"\r\n                                                                                               class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                                                               title=\"Remove\"\r\n                                                                                               (click)=\"addRemoveTierFee(false)\">\r\n                                                                                            </a>\r\n                                                                                        </ng-container>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"ml10 pricing-error-section col\">\r\n                                                                                        <label *ngIf=\"formSubmited && priceControl.get('DisplayPrice').errors\"\r\n                                                                                               class=\"text-danger\">\r\n                                                                                            Pricing is required.\r\n                                                                                        </label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!-- LAST -->\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div *ngIf=\"tierPricingForm.TierPricingType.value==1\" class=\"row reset-cumulation\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"form-check form-check-inline checkbox\">\r\n                                            <input class=\"form-check-input\" id=\"FuelDetails_TierPricing_IsResetCumulation\"\r\n                                                   formControlName=\"IsResetCumulation\" type=\"checkbox\" value=\"true\" (change)=\"cumulationTypeChanged($event.target.checked, tierPricingForm.ResetCumulationSetting.get('CumulationType').value)\">\r\n                                            <label class=\"form-check-label\" for=\"IsResetCumulation\"> Reset Frequency</label>\r\n                                        </div>\r\n                                        <div id=\"reset-cumulation-section\" *ngIf=\"tierPricingForm.IsResetCumulation.value\"\r\n                                             formGroupName=\"ResetCumulationSetting\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-3\">\r\n                                                    <select class=\"form-control\"\r\n                                                            id=\"FuelDetails_TierPricing_ResetCumulationSetting_CumulationType\"\r\n                                                            formControlName=\"CumulationType\"\r\n                                                            (change)=\"cumulationTypeChanged(true, $event.target.value)\">\r\n                                                        <option value=\"null\" disabled>Select</option>\r\n                                                        <option value=\"1\">Weekly</option>\r\n                                                        <option value=\"2\">BiWeekly</option>\r\n                                                        <option value=\"3\">Monthly</option>\r\n                                                        <option value=\"4\">Specific Dates</option>\r\n                                                    </select>\r\n                                                    <span class=\"text-danger\"\r\n                                                          data-valmsg-for=\"FuelDetails.TierPricing.ResetCumulationSetting.CumulationType\"></span>\r\n                                                </div>\r\n                                                <div *ngIf=\"tierPricingForm.ResetCumulationSetting.get('CumulationType').value==3 || tierPricingForm.ResetCumulationSetting.get('CumulationType').value==4\"\r\n                                                     class=\"col-sm-3 reset-cumulation-date\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"text\" class=\"form-control datepicker\"\r\n                                                               [maxDate]=\"MaxInputDate\" [format]=\"'MM/DD/YYYY'\"\r\n                                                               formControlName=\"Date\" myDatePicker\r\n                                                               (onDateChange)=\"tierPricingForm.ResetCumulationSetting.get('Date').setValue($event);\" />\r\n                                                        <span *ngIf=\"formSubmited && tierPricingForm.ResetCumulationSetting.get('Date').errors\"\r\n                                                              class=\"text-danger\">\r\n                                                            Date is required field.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div *ngIf=\"tierPricingForm.ResetCumulationSetting.get('CumulationType').value==1 || tierPricingForm.ResetCumulationSetting.get('CumulationType').value==2\"\r\n                                                     class=\"col-sm-3 reset-cumulation-day\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <select class=\"form-control reset-cumulation-day\"\r\n                                                                formControlName=\"Day\">\r\n                                                            <option value=\"null\" disabled>Select Day</option>\r\n                                                            <option value=\"1\">Mon</option>\r\n                                                            <option value=\"2\">Tue</option>\r\n                                                            <option value=\"3\">Wed</option>\r\n                                                            <option value=\"4\">Thu</option>\r\n                                                            <option value=\"5\">Fri</option>\r\n                                                            <option value=\"6\">Sat</option>\r\n                                                            <option value=\"7\">Sun</option>\r\n                                                        </select>\r\n                                                        <span *ngIf=\"formSubmited && tierPricingForm.ResetCumulationSetting.get('Day').errors\"\r\n                                                              class=\"text-danger\">\r\n                                                            Day is required field.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"!fuelPricingForm.IsTierPricingRequired.value\" class=\"section-pricing\">\r\n                                <div class=\"row mt10\">\r\n                                    <div id=\"divPricingSection\" class=\"col-sm-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-3\">\r\n                                                        <div class=\"single-delivery-sub-types\">\r\n                                                            <label>Type</label>\r\n                                                            <select class=\"form-control\" formControlName=\"PricingTypeId\"\r\n                                                                    (change)=\"pricingTypeChanged($event.target.value)\"\r\n                                                                    [disableControl]=\"f.FuelDetails['controls']['FuelDisplayGroupId'].value==3\">\r\n                                                                <option [value]=\"1\">Market Based</option>\r\n                                                                <option [value]=\"4\">Fuel Cost</option>\r\n                                                                <option [value]=\"2\">Fixed</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6\"\r\n                                                         *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12 pricing-codes\">\r\n                                                                <label for=\"FuelPricingDetails_FuelPricingDetails_PricingCode_Pricing_Code\">\r\n                                                                    Pricing\r\n                                                                    Code\r\n                                                                </label><span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <div *ngIf=\"_loadingPricingCodes\"\r\n                                                                         class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                                    </div>\r\n                                                                    <div class=\"ng-autocomplete\">\r\n                                                                        <ng-autocomplete [data]=\"pricingCodes\"\r\n                                                                                         formControlName=\"TempPricingCodeDetails\"\r\n                                                                                         [searchKeyword]=\"'Code'\"\r\n                                                                                         placeholder=\"Pricing code\"\r\n                                                                                         [itemTemplate]=\"itemTemplate\"\r\n                                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                                         (selected)='onPricingCodeSelected($event)'\r\n                                                                                         (click)=\"getPricingCodes()\">\r\n                                                                        </ng-autocomplete>\r\n                                                                        <ng-template #itemTemplate let-item>\r\n                                                                            <a [innerHTML]=\"item.Code\"></a>\r\n                                                                        </ng-template>\r\n                                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                                            <div [innerHTML]=\"notFound\">\r\n                                                                            </div>\r\n                                                                        </ng-template>\r\n                                                                    </div>\r\n                                                                    <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('Code').errors\">\r\n                                                                        <span class=\"text-danger\"\r\n                                                                              *ngIf=\"f.FuelPricingDetails.get('Code').errors.required\">\r\n                                                                            Select\r\n                                                                            Pricing\r\n                                                                            Code.\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6 div-selectpricingcode\">\r\n                                                                <button [disabled]=\"_loadingPricingCodes\" type=\"button\"\r\n                                                                        class=\"btn btn-primary btn-sm\"\r\n                                                                        (click)=\"openPriceCodeModal(pricingcodeModal)\">\r\n                                                                    Select\r\n                                                                    Pricing\r\n                                                                    Code\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12\"\r\n                                                                 *ngIf=\"f.FuelPricingDetails.get('TempPricingCodeDetails').value\">\r\n                                                            {{f.FuelPricingDetails.get('CodeDescription').value}}\r\n                                                            <!-- {{f.FuelPricingDetails.get('TempPricingCodeDetails').value?.Code}} -->\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-3\"\r\n                                                         *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <label>Price</label>\r\n                                                            <div class=\"input-group mtm1\">\r\n                                                                <span class=\"input-group-addon currency-symbol\">\r\n                                                                    {{\r\n f.AddressDetails.get('CountryId').value == 1 ?\r\n                                                                'USD' : 'CAD'\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <input class=\"form-control datatype-decimal always\"\r\n                                                                       id=\"FuelPricingDetails_PricePerGallon\"\r\n                                                                       formControlName=\"PricePerGallon\" type=\"number\">\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('PricePerGallon').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelPricingDetails.get('PricePerGallon').errors.required\">\r\n                                                                    Price\r\n                                                                    is required.\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.FuelPricingDetails.get('PricePerGallon').errors.pattern || f.FuelPricingDetails.get('PricePerGallon').errors?.min\">\r\n                                                                    Invalid\r\n                                                                    Pricing.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"pa bg-white subSectionOpacity mt10 top0 left0 z-index5 loading-wrapper calculate-wrapper hide-element\">\r\n                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                </div>\r\n                                                <div class=\"market-control\"\r\n                                                     *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <select class=\"form-control\"\r\n                                                                        id=\"FuelPricingDetails_RackAvgTypeId\"\r\n                                                                        formControlName=\"RackAvgTypeId\">\r\n                                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                                            [value]=\"rackAvgType.Id\">\r\n                                                                        {{rackAvgType.Name}}\r\n                                                                    </option>\r\n                                                                    <!-- <option value=\"1\">+$</option>\r\n                                            <option value=\"2\">-$</option>\r\n                                            <option value=\"3\">+%</option>\r\n                                            <option value=\"4\">-%</option> -->\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <div class=\"mtm1\">\r\n                                                                    <input class=\"form-control datatype-decimal always\"\r\n                                                                           id=\"FuelPricingDetails_RackPrice\"\r\n                                                                           formControlName=\"RackPrice\" placeholder=\"Rack Price\"\r\n                                                                           type=\"number\">\r\n                                                                </div>\r\n                                                                <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('RackPrice').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('RackPrice').errors.required\">\r\n                                                                        Rack Price field\r\n                                                                        is required.\r\n                                                                    </span>\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('RackPrice').errors.pattern || f.FuelPricingDetails.get('RackPrice').errors.min\">\r\n                                                                        Invalid Rack\r\n                                                                        Price.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row mt-2\" *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 4\">\r\n                                            <div class=\"col-sm-3 supplier-cost cost-control\">\r\n                                                <select class=\"form-control valid\"\r\n                                                        id=\"FuelPricingDetails_SupplierCostMarkupTypeId\"\r\n                                                        formControlName=\"SupplierCostMarkupTypeId\">\r\n                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                            [value]=\"rackAvgType.Id\">\r\n                                                        {{rackAvgType.Name}}\r\n                                                    </option>\r\n                                                    <!-- <option value=\"1\">+$</option>\r\n                            <option value=\"2\">-$</option>\r\n                            <option value=\"3\">+%</option>\r\n                            <option value=\"4\">-%</option> -->\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class=\"col-sm-3 supplier-cost defaultDisabled cost-control\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"mtm1 defaultDisabled\">\r\n                                                        <input class=\"form-control datatype-decimal always\"\r\n                                                               id=\"FuelPricingDetails_SupplierCostMarkupValue\"\r\n                                                               formControlName=\"SupplierCostMarkupValue\" type=\"number\"\r\n                                                               autocomplete=\"off\">\r\n                                                        <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('SupplierCostMarkupValue').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.required\">\r\n                                                                The Fuel Cost field is\r\n                                                                required.\r\n                                                            </span>\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.pattern || f.FuelPricingDetails.get('SupplierCostMarkupValue').errors.min\">\r\n                                                                Invalid\r\n                                                                mark up value.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row cityrack-wrapper\"\r\n                                     *ngIf=\"f.FuelPricingDetails.get('PricingTypeId').value == 1\">\r\n                                    <div class=\"col-sm-12\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-3 terminal-price-check\">\r\n                                                <div class=\"form-group mb5\">\r\n                                                    <div class=\"\">\r\n                                                        <div class=\"\">\r\n                                                            <div class=\"form-check form-check-inline mb10\" [class]=\"(f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2)? 'pntr-none subSectionOpacity' : ''\">\r\n                                                                <input type=\"checkbox\"\r\n                                                                       [disableControl]=\"f.FuelPricingDetails.get('FuelPricingDetails').get('PricingSourceId').value==2\"\r\n                                                                       formControlName=\"EnableCityRack\"\r\n                                                                       class=\"enablecityrack form-check-input\"\r\n                                                                       id=\"chk-enable-cityrack\"\r\n                                                                       (change)=\"setRackTerminalValidation();this.getCityGroupTerminals()\">\r\n                                                                <label class=\"form-check-label\" for=\"chk-enable-cityrack\">\r\n                                                                    City\r\n                                                                    Rack/Terminal\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class=\"pr\" id=\"cityrack-div\"\r\n                                                                 *ngIf=\"f.FuelPricingDetails.get('EnableCityRack').value == true\">\r\n                                                                <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader hide-element\">\r\n                                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                                </div>\r\n                                                                <select id=\"FuelPricingDetails_CityGroupTerminalId\"\r\n                                                                        formControlName=\"CityGroupTerminalId\"\r\n                                                                        class=\"form-control enum-ddl qty-ind\"\r\n                                                                        (change)=\"cityRackTerminalChanged()\">\r\n                                                                    <option disabled value=\"null\">\r\n                                                                        Select\r\n                                                                    </option>\r\n                                                                    <option selected=\"\" disabled=\"\" class=\"hidden\"\r\n                                                                            value=\"noneselected\">\r\n                                                                        City\r\n                                                                        Rack/Terminal\r\n                                                                    </option>\r\n                                                                    <optgroup label=\"Within State\">\r\n                                                                        <ng-container *ngFor=\"let item of CityGroupTerminalsList\">\r\n                                                                            <option *ngIf=\"item.IsWithinState\"\r\n                                                                                    [value]=\"item.Id\">\r\n                                                                                {{item.Name}}\r\n                                                                            </option>\r\n                                                                        </ng-container>\r\n                                                                    </optgroup>\r\n                                                                    <optgroup label=\"Other States\">\r\n                                                                        <ng-container *ngFor=\"let item of CityGroupTerminalsList\">\r\n                                                                            <option *ngIf=\"!item.IsWithinState\"\r\n                                                                                    [value]=\"item.Id\">\r\n                                                                                {{item.Name}}\r\n                                                                            </option>\r\n                                                                        </ng-container>\r\n                                                                    </optgroup>\r\n                                                                </select>\r\n                                                                <div *ngIf=\"formSubmited && f.FuelPricingDetails.get('CityGroupTerminalId').errors\">\r\n                                                                    <span class=\"text-danger\"\r\n                                                                          *ngIf=\"f.FuelPricingDetails.get('CityGroupTerminalId').errors.required\">\r\n                                                                        Terminal is\r\n                                                                        required.\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-4 mb25\" id=\"terminalContainer1\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div class=\"ng-autocomplete\">\r\n                                                        <ng-autocomplete [data]=\"approvedTerminalList\"\r\n                                                                         [searchKeyword]=\"'Name'\" (click)=\"getApprovedTerminal()\"\r\n                                                                         placeholder=\"Approved Terminals\"\r\n                                                                         [itemTemplate]=\"TerminalItemTemplate\"\r\n                                                                         [notFoundTemplate]=\"TerminalnotFoundTemplate\"\r\n                                                                         (selected)='onApprovedTerminalSelected($event)'>\r\n                                                        </ng-autocomplete>\r\n                                                        <!-- formControlName=\"TerminalName\" -->\r\n                                                        <ng-template #TerminalItemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #TerminalnotFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\">\r\n                                                            </div>\r\n                                                        </ng-template>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #pricingcodeModal let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Pricing Code</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"\r\n                id=\"pricingcodeModal\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"0\" name=\"pricing-feedfilter\" id=\"filter_all\"\r\n                               [checked]=\"1\">\r\n                        <label class=\"btn ml0\" for=\"filter_all\">All</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"1\" name=\"pricing-feedfilter\" id=\"filter_10am\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_10am\">Contract (10AM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"3\" name=\"pricing-feedfilter\" id=\"filter_5pm\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_5pm\">End of Day (5PM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"5\" name=\"pricing-feedfilter\" id=\"filter_10am_pre\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_10am_pre\">Previous Day (10AM EST)</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfeedTypeId\" [value]=\"4\" name=\"pricing-feedfilter\" id=\"filter_5pm_pre\"\r\n                               [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_5pm_pre\">Previous Day (5PM EST)</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"0\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_brand_all\" [checked]=\"1\">\r\n                        <label class=\"btn ml0\" for=\"filter_brand_all\">All</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"1\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_branded\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_branded\">Branded</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"2\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_unbranded\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_unbranded\">Unbranded</label>\r\n                        <input class=\"hide-element\" type=\"radio\" (change)=\"getPricingCodes()\"\r\n                               [(ngModel)]=\"pricingfuelClassTypeId\" [value]=\"3\" name=\"pricing-fuelClassfilter\"\r\n                               id=\"filter_both\" [checked]=\"false\">\r\n                        <label class=\"btn\" for=\"filter_both\">Both</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let item of pricingCodes\" class=\"col-sm-4\">\r\n                <div class=\"well click-card\" (click)=\"getSelectedPricingCode(item);\">\r\n                    <label class=\"text-center\" id=\"{{item.Id}}\"> {{item.Code}}</label>\r\n                    <div *ngIf=\"item.PricingTypeId == 1\">\r\n                        <div> {{item.PricingSource}}</div>\r\n                        <div>{{item.RackAvgPricingType}}</div>\r\n                        <ng-container *ngIf=\"item.PricingSourceId == 2 || item.PricingSourceId == 3\">\r\n                            <div>{{item.FeedType}}</div>\r\n                            <div>{{item.WeekendPricingDay}}</div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"item.PricingSourceId == 2\">\r\n                            <div>{{item.FuelClassType}}</div>\r\n                            <div>{{item.QuantityIndicator}}</div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #SetTierPriceType let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Set Tier Price</h4>\r\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form [formGroup]=\"TierPricingTypeForm\">\r\n                <div *ngIf=\"_loaderTierPricingType\"\r\n                     class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                    <span class=\"spinner-dashboard pa\"></span>\r\n                </div>\r\n                <div class=\"row mt10\">\r\n                    <div id=\"divPricingSection\" class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"single-delivery-sub-types\">\r\n                                            <label>Type</label>\r\n                                            <select class=\"form-control\" formControlName=\"PricingTypeId\"\r\n                                                    (change)=\"pricingTypeChanged_tpt($event.target.value)\">\r\n                                                <option [value]=\"1\">Market Based</option>\r\n                                                <option [value]=\"4\">Fuel Cost</option>\r\n                                                <option [value]=\"2\">Fixed</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12 pricing-codes\">\r\n                                                <label for=\"FuelPricingDetails_FuelPricingDetails_PricingCode_Pricing_Code\">\r\n                                                    Pricing\r\n                                                    Code\r\n                                                </label><span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6\">\r\n                                                <div class=\"form-group\">\r\n                                                    <div *ngIf=\"_loadingPricingCodes\"\r\n                                                         class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader\">\r\n                                                        <span class=\"spinner-dashboard pa\"></span>\r\n                                                    </div>\r\n                                                    <div class=\"ng-autocomplete\">\r\n                                                        <ng-autocomplete [data]=\"pricingCodes\"\r\n                                                                         formControlName=\"TempPricingCodeDetails\"\r\n                                                                         [searchKeyword]=\"'Code'\" placeholder=\"Pricing code\"\r\n                                                                         [itemTemplate]=\"itemTemplate\"\r\n                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                         (selected)='onPricingCodeSelected_tpt($event)'\r\n                                                                         (click)=\"getPricingCodes()\">\r\n                                                        </ng-autocomplete>\r\n                                                        <ng-template #itemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Code\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\">\r\n                                                            </div>\r\n                                                        </ng-template>\r\n                                                    </div>\r\n                                                    <div *ngIf=\"TierPricingTypeForm.get('TempPricingCodeDetails').touched && TierPricingTypeForm.get('Code').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"TierPricingTypeForm.get('Code').errors.required\">\r\n                                                            Select\r\n                                                            Pricing\r\n                                                            Code.\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 div-selectpricingcode\">\r\n                                                <button [disabled]=\"_loadingPricingCodes\" type=\"button\"\r\n                                                        class=\"btn btn-primary btn-sm mt-2\"\r\n                                                        (click)=\"openPriceCodeModal_tpt(pricingcodeModal)\">\r\n                                                    Select\r\n                                                    Pricing\r\n                                                    Code\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12\"\r\n                                                 *ngIf=\"TierPricingTypeForm.get('TempPricingCodeDetails').value\">\r\n                                                {{TierPricingTypeForm.get('CodeDescription').value}}\r\n                                                <!-- {{TierPricingTypeForm.get('TempPricingCodeDetails').value?.Code}} -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 2\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Price</label>\r\n                                            <div class=\"input-group mtm1\">\r\n                                                <span class=\"input-group-addon currency-symbol\">\r\n                                                    {{ f.AddressDetails.get('CountryId').value == 1 ? 'USD' : 'CAD'}}\r\n                                                </span>\r\n                                                <input class=\"form-control datatype-decimal always\"\r\n                                                       id=\"FuelPricingDetails_PricePerGallon\"\r\n                                                       formControlName=\"PricePerGallon\" type=\"number\">\r\n                                            </div>\r\n                                            <div *ngIf=\"TierPricingTypeForm.get('PricePerGallon').touched && TierPricingTypeForm.get('PricePerGallon').errors\">\r\n                                                <span class=\"text-danger\"\r\n                                                      *ngIf=\"TierPricingTypeForm.get('PricePerGallon').errors.required\">\r\n                                                    Price\r\n                                                    is required.\r\n                                                </span>\r\n                                                <span class=\"text-danger\"\r\n                                                      *ngIf=\"TierPricingTypeForm.get('PricePerGallon').errors.pattern || TierPricingTypeForm.get('PricePerGallon').errors?.min\">\r\n                                                    Invalid\r\n                                                    Pricing.\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"pa bg-white subSectionOpacity mt10 top0 left0 z-index5 loading-wrapper calculate-wrapper hide-element\">\r\n                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                </div>\r\n                                <div class=\"market-control\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                            <div class=\"form-group\">\r\n                                                <select class=\"form-control\" id=\"FuelPricingDetails_RackAvgTypeId\"\r\n                                                        formControlName=\"RackAvgTypeId\">\r\n                                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\"\r\n                                                            [value]=\"rackAvgType.Id\">\r\n                                                        {{rackAvgType.Name}}\r\n                                                    </option>\r\n                                                    <!-- <option value=\"1\">+$</option>\r\n                                                    <option value=\"2\">-$</option>\r\n                                                    <option value=\"3\">+%</option>\r\n                                                    <option value=\"4\">-%</option> -->\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-3 terminal-price market-control\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"mtm1\">\r\n                                                    <input class=\"form-control datatype-decimal always\"\r\n                                                           id=\"FuelPricingDetails_RackPrice\" formControlName=\"RackPrice\"\r\n                                                           placeholder=\"Rack Price\" type=\"number\">\r\n                                                </div>\r\n                                                <div *ngIf=\"TierPricingTypeForm.get('RackPrice').touched && TierPricingTypeForm.get('RackPrice').errors\">\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('RackPrice').errors.required\">\r\n                                                        Rack Price field\r\n                                                        is required.\r\n                                                    </span>\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('RackPrice').errors.pattern || TierPricingTypeForm.get('RackPrice').errors.min\">\r\n                                                        Invalid Rack\r\n                                                        Price.\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-2\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 4\">\r\n                            <div class=\"col-sm-3 supplier-cost cost-control\">\r\n                                <select class=\"form-control valid\" id=\"FuelPricingDetails_SupplierCostMarkupTypeId\"\r\n                                        formControlName=\"SupplierCostMarkupTypeId\">\r\n                                    <option *ngFor=\"let rackAvgType of RackAvgTypes\" [value]=\"rackAvgType.Id\">\r\n                                        {{rackAvgType.Name}}\r\n                                    </option>\r\n                                    <!-- <option value=\"1\">+$</option>\r\n                                    <option value=\"2\">-$</option>\r\n                                    <option value=\"3\">+%</option>\r\n                                    <option value=\"4\">-%</option> -->\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-sm-3 supplier-cost defaultDisabled cost-control\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"mtm1 defaultDisabled\">\r\n                                        <input class=\"form-control datatype-decimal always\"\r\n                                               id=\"FuelPricingDetails_SupplierCostMarkupValue\"\r\n                                               formControlName=\"SupplierCostMarkupValue\" type=\"number\" autocomplete=\"off\">\r\n                                        <div *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').touched && TierPricingTypeForm.get('SupplierCostMarkupValue').errors\">\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').errors.required\">\r\n                                                The Fuel Cost field is\r\n                                                required.\r\n                                            </span>\r\n                                            <span class=\"text-danger\"\r\n                                                  *ngIf=\"TierPricingTypeForm.get('SupplierCostMarkupValue').errors.pattern || TierPricingTypeForm.get('SupplierCostMarkupValue').errors.min\">\r\n                                                Invalid\r\n                                                mark up value.\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row cityrack-wrapper\" *ngIf=\"TierPricingTypeForm.get('PricingTypeId').value == 1\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3 terminal-price-check\">\r\n                                <div class=\"form-group mb5\">\r\n                                    <div class=\"\">\r\n                                        <div class=\"\">\r\n                                            <div class=\"form-check form-check-inline mb10\" [class]=\"(TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value==2)? 'pntr-none subSectionOpacity' : ''\">\r\n                                                <input type=\"checkbox\"\r\n                                                       [disableControl]=\"TierPricingTypeForm.get('FuelPricingDetails').get('PricingSourceId').value==2\"\r\n                                                       formControlName=\"EnableCityRack\"\r\n                                                       class=\"enablecityrack form-check-input\" id=\"chk-enable-cityrack\"\r\n                                                       (change)=\"setRackTerminalValidation_tpt();this.getCityGroupTerminals_tpt()\">\r\n                                                <label class=\"form-check-label\" for=\"chk-enable-cityrack\">\r\n                                                    City\r\n                                                    Rack/Terminal\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"pr\" id=\"cityrack-div\"\r\n                                                 *ngIf=\"TierPricingTypeForm.get('EnableCityRack').value == true\">\r\n                                                <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper cityrack-loader hide-element\">\r\n                                                    <span class=\"spinner-dashboard pa\"></span>\r\n                                                </div>\r\n                                                <select id=\"FuelPricingDetails_CityGroupTerminalId\"\r\n                                                        formControlName=\"CityGroupTerminalId\"\r\n                                                        class=\"form-control enum-ddl qty-ind\"\r\n                                                        (change)=\"cityRackTerminalChanged_tpt()\">\r\n                                                    <option disabled value=\"null\">\r\n                                                        Select\r\n                                                    </option>\r\n                                                    <option selected=\"\" disabled=\"\" class=\"hidden\" value=\"noneselected\">\r\n                                                        City\r\n                                                        Rack/Terminal\r\n                                                    </option>\r\n                                                    <optgroup label=\"Within State\">\r\n                                                        <ng-container *ngFor=\"let item of tierCityGroupTerminalsList\">\r\n                                                            <option *ngIf=\"item.IsWithinState\" [value]=\"item.Id\">\r\n                                                                {{item.Name}}\r\n                                                            </option>\r\n                                                        </ng-container>\r\n                                                    </optgroup>\r\n                                                    <optgroup label=\"Other States\">\r\n                                                        <ng-container *ngFor=\"let item of tierCityGroupTerminalsList\">\r\n                                                            <option *ngIf=\"!item.IsWithinState\" [value]=\"item.Id\">\r\n                                                                {{item.Name}}\r\n                                                            </option>\r\n                                                        </ng-container>\r\n                                                    </optgroup>\r\n                                                </select>\r\n                                                <div *ngIf=\"TierPricingTypeForm.get('CityGroupTerminalId').touched && TierPricingTypeForm.get('CityGroupTerminalId').errors\">\r\n                                                    <span class=\"text-danger\"\r\n                                                          *ngIf=\"TierPricingTypeForm.get('CityGroupTerminalId').errors.required\">\r\n                                                        Terminal is\r\n                                                        required.\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-4 mb25\" id=\"terminalContainer2\">\r\n                            \r\n\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"ng-autocomplete\">\r\n                                        <ng-autocomplete [data]=\"tierApprovedTerminalList\" [searchKeyword]=\"'Name'\"\r\n                                                         (click)=\"getApprovedTerminal_tpt()\" placeholder=\"Approved Terminals\"\r\n                                                         [itemTemplate]=\"TerminalItemTemplate\"\r\n                                                         [notFoundTemplate]=\"TerminalnotFoundTemplate\"\r\n                                                         formControlName=\"TempTerminalName\"\r\n                                                         (selected)='onApprovedTerminalSelected_tpt($event)'>\r\n                                        </ng-autocomplete>\r\n                                        <!-- formControlName=\"TerminalName\" -->\r\n                                        <ng-template #TerminalItemTemplate let-item>\r\n                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                        </ng-template>\r\n                                        <ng-template #TerminalnotFoundTemplate let-notFound>\r\n                                            <div [innerHTML]=\"notFound\">\r\n                                            </div>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <!-- <div class=\"row tier-terminal-price defaultDisabled\">\r\n                            <div class=\"show-in-fr\">\r\n                                <div class=\"col-sm-2 pr0\">\r\n                                    <input type=\"button\" class=\"btn btn-info btn-sm\" id=\"btnCalculateTierPPG\"\r\n                                        value=\"Calculate PPG\" data-url=\"/Supplier/FuelRequest/CalculateTerminalPrice\">\r\n                                </div>\r\n                                <div class=\"col-sm-8\">\r\n                                    <label id=\"EstimatedTierPPG\" class=\"mt5 ml10\"></label>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"modal.dismiss('Cross click')\">\r\n                                <input type=\"button\" id=\"SelectPricing\" value=\"Select\" class=\"btn btn-lg btn-primary\"\r\n                                       [disabled]=\"TierPricingTypeForm.invalid\" (click)=\"setPricing();\">\r\n                                <!-- [disabled]=\"TierPricingTypeForm.invalid\"  -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { AgmDirectionModule } from 'agm-direction';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PricingSectionComponent } from './pricing-section.component';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { GlobalModule } from 'src/app/modules/global.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PricingSectionComponent\r\n    ],\r\n    imports: [\r\n        GlobalModule,\r\n        AutocompleteLibModule,\r\n        DirectiveModule,\r\n        AgmDirectionModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        PricingSectionComponent\r\n    ]\r\n})\r\nexport class PricingSectionModule { }\r\n"],"sourceRoot":"webpack:///"}