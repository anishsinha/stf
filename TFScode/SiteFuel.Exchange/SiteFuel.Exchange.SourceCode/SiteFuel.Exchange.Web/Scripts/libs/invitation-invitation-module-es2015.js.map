{"version":3,"sources":["./src/app/directives/visibility-change.module.ts","./src/app/invitation/invitation-submit/invitation-submit.component.ts","./src/app/invitation/invitation-submit/invitation-submit.component.html","./src/app/invitation/invitation.component.ts","./src/app/invitation/invitation.component.html","./src/app/invitation/invitation.module.ts","./src/app/invitation/left-menu/left-menu.component.ts"],"names":[],"mappings":"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","file":"invitation-invitation-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ElementRef, EventEmitter, Output, Directive, AfterViewInit, Input, NgModule } from '@angular/core';\n\n@Directive({\n    selector: '[visibilityChange]'\n})\nexport class VisibilityChangeDirective implements AfterViewInit {\n\n    @Output() public visibilityChange: EventEmitter<any> = new EventEmitter();\n    \n    @Input() public threshold: number;\n\n    private _intersectionObserver?: IntersectionObserver;\n\n    constructor(private _element: ElementRef) { }\n\n    private checkForIntersection = (entries: Array<IntersectionObserverEntry>) => {\n        entries.forEach((entry: IntersectionObserverEntry) => {\n            if (this.checkIfIntersecting(entry)) {\n                this.visibilityChange.emit();\n            }\n        });\n    }\n\n    private registerIntersectionObserver(): void {\n        if (!!this._intersectionObserver) {\n            return;\n        }\n        this._intersectionObserver = new IntersectionObserver(entries => {\n            this.checkForIntersection(entries);\n        }, {\n            threshold: this.threshold ? this.threshold : 0.0\n        });\n    }\n\n    private checkIfIntersecting(entry: IntersectionObserverEntry) {\n        return (<any>entry).isIntersecting && entry.target === this._element.nativeElement;\n    }\n\n    ngAfterViewInit(): void {\n        this.registerIntersectionObserver();\n        if (this._intersectionObserver && this._element.nativeElement) {\n            this._intersectionObserver.observe(<Element>(this._element.nativeElement));\n        }\n    }\n}\n\n@NgModule({\n    declarations: [VisibilityChangeDirective],\n    imports: [CommonModule],\n    exports: [VisibilityChangeDirective]\n})\nexport class VisibilityChangeModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation-submit',\n  templateUrl: './invitation-submit.component.html',\n  styleUrls: ['./invitation-submit.component.css']\n})\nexport class InvitationSubmitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"submit-section\">\r\n    <div class=\"d-flex align-items-center justify-content-center h-100\">\r\n        <div class=\"d-flex flex-column text-center\">\r\n            <i class=\"far fa-check-circle fa-7x text-success\"></i>\r\n            <h2 class=\"mt-2 f-bold\">Thank you for your information</h2>\r\n                <p>\r\n                    You will be sent an email prompting you to register your account.<br>\r\n                    This will allow you to log into your account.\r\n                </p>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { InvitationService } from './invitation.service';\nimport { CarrierOnboardingBrandingModel, ServiceArea, StateListViewModel } from './third-party-invitation.model';\nimport { Declarations } from '../declarations.module';\nimport { RegExConstants } from '../app.constants';\nimport { Geocode } from '../carrier/schedule-builder/add-location/add-location.model';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DropdownItem, StatelistService } from '../statelist.service';\nimport { ServiceOfferingType, WizardTabEnum } from 'src/app/app.enum';\n\n@Component({\n    selector: 'app-invitation',\n    templateUrl: './invitation.component.html',\n    styleUrls: ['./invitation.component.css']\n})\nexport class InvitationComponent implements OnInit {\n\n    public pageloader = false;\n    public offeringloader = false;\n    public _loadingAddress = false;\n    public wizardForm: FormGroup;\n    public emailExists = false;\n    public isPhoneNumberValid = null;\n    //public isSubmitted: boolean = false;\n\n    public CountryList: DropdownItem[] = [];\n    public statesList: StateListViewModel[] = [];\n    public carrierOnboarding : CarrierOnboardingBrandingModel;\n    public dataForEachServiceType: object = {};\n\n    public filteredcityList = [];\n    public invitedCompanyTypes = [];\n    public AllTrailerAssetTypes: any = null;\n    public PhoneTypes = [];\n    public DdlSettings: any = {};\n    public ZipDdlSettings: any = {};\n    public ddlCitySettings: any = {};\n    public formSubmited = false;\n    public ServiceOfferingTypes: typeof ServiceOfferingType = ServiceOfferingType;\n    public ServiceOfferingTypesDisplay: { [index: number]: string } = {};\n    //fuel assets\n    public fuelAssetForm: FormGroup;\n    public _opened: boolean = false;\n    public _initiated: boolean = false;\n    //active wizard\n    WizardTabEnum = WizardTabEnum;\n    activeWizard = WizardTabEnum.ContactInfo;\n    threshold: number = 1.0;\n    @ViewChild('ContactInformation') ContactInformation: ElementRef;\n    @ViewChild('CompanyInformation') CompanyInformation: ElementRef;\n    @ViewChild('FleetInformation') FleetInformation: ElementRef;\n    @ViewChild('ServiceOffering') ServiceOffering: ElementRef;\n    //service offerings\n    activeServiceOffering = ServiceOfferingType.FTL;\n\n    //Branding\n    logoImage = \"../../../Content/images/truefill-logo.png\";\n    backgroundImage = \"\";\n\n    //get accessors\n    get f() { return this.wizardForm.controls; }\n    get getFuelTrailerAssetTypeName(): any { return (parameter: number) => this.AllTrailerAssetTypes?.FuelTrailerAssetType.find((x: { Id: number; }) => x.Id == parameter).Name; }\n    get getDefTrailerAssetTypeName(): any { return (parameter: number) => this.AllTrailerAssetTypes?.DefTrailerAssetType.find((x: { Id: number; }) => x.Id == parameter).Name; }\n    get StatesListByCountry(): any[] { return this.statesList.filter(t => t.CountryId == this.f.CompanyInfo.get('CountryId').value) }\n    get StatesListByCountryForService(): any { return (countryId: number) => this.statesList.filter(x => x.CountryId == countryId); }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder,\n        private invitationService: InvitationService,\n        private cdr: ChangeDetectorRef) {\n        this.initailizeThirdPartyInviteForm();\n        this.fuelAssetForm = this.getFuelAssetsFormGroup(true);\n    }\n\n    ngOnInit() {\n        this.GetCarrierOnboardingForBranding();\n        this.getCountryList();\n        this.getStatesOfAllCountries();\n        this.getThirdPartyCompanyTypes();\n        this.getPhoneTypes();\n        this.GetAllTrailerAssetTypes();\n        this.GetCompanies();\n        this.InitializeServiceDropdown();\n\n        this.DdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.ZipDdlSettings = {\n            singleSelection: false,\n            idField: 'ZipCode',\n            textField: 'ZipCode',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n        this.ddlCitySettings = {\n            singleSelection: false,\n            idField: 'CityId',\n            textField: 'CityName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 2,\n            allowSearchFilter: true,\n            enableCheckAll: true\n        }\n    }\n\n    GetCarrierOnboardingForBranding() {\n        let token = this.route.snapshot.queryParams.token;\n        this.invitationService.GetCarrierOnboardingForBranding(token).subscribe(response => {\n            if (response && response.IsBrandMyWebsite) {\n                this.carrierOnboarding = response;\n                this.logoImage = this.carrierOnboarding.ImageFilePath;\n                this.backgroundImage = this.carrierOnboarding.CarrierOnboardingImageFilePath;\n            }\n        });\n    }\n\n    removeBtnPrimaryClass(template: any) {\n        template.classList.remove('btn-primary');\n    }\n    getHeaderColor(): object {\n        if (this.carrierOnboarding && this.carrierOnboarding.IsBrandMyWebsite && this.carrierOnboarding.HeaderColor)\n            return { \"background-color\": this.carrierOnboarding.HeaderColor };\n        else\n            return {};\n    }\n\n    getButtonColor(): object {\n        if (this.carrierOnboarding && this.carrierOnboarding.IsBrandMyWebsite && this.carrierOnboarding.ButtonColor)\n            return { \"background-color\": this.carrierOnboarding.ButtonColor,\"color\":\"white\" ,\"border\":\"none\"};\n        else\n            return {};\n    }\n\n  \n\n    InitializeServiceDropdown() {\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.FTL]] = \"FTL\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTL]] = \"LTL\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEF]] = \"DEF\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.LTLWetHosing]] = \"LTL Wet Hosing\";\n        this.ServiceOfferingTypesDisplay[this.ServiceOfferingTypes[ServiceOfferingType.DEFWetHosing]] = \"DEF Wet Hosing\";\n    }\n\n    initailizeThirdPartyInviteForm() {\n        this.wizardForm = this.fb.group({\n            UserInfo: this.fb.group({\n                Id: this.fb.control(null),\n                Title: this.fb.control(null, [Validators.required]),\n                FirstName: this.fb.control(null, [Validators.required]),\n                LastName: this.fb.control(null, [Validators.required]),\n                Email: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Email)]),\n            }),\n            CompanyInfo: this.fb.group({\n                IsNewCompany: this.fb.control(true),\n                CompanyName: this.fb.control(null, [Validators.required]),\n                CompanyTypeId: this.fb.control(null, [Validators.required]),\n                CompanyAddress: this.fb.control(null, [Validators.required]),\n                CountryId: this.fb.control(1, [Validators.required]),\n                StateId: this.fb.control(null, [Validators.required]),\n                CountryName: this.fb.control(null),\n                StateName: this.fb.control(null),\n                City: this.fb.control(null, [Validators.required]),\n                County: this.fb.control(null, [Validators.required]),\n                Zip: this.fb.control(null, [Validators.required]),\n                PhoneType: this.fb.control(null, [Validators.required]),\n                PhoneNumber: this.fb.control(null, [Validators.required, Validators.pattern(RegExConstants.Phone)]),\n            }),\n            FleetInfo: this.fb.group({\n                FuelAssets: this.fb.array([]),\n                DefAssets: this.fb.array([])\n            }),\n            ServiceOffering: this.fb.array([]),\n            Token: this.fb.control(this.route.snapshot.queryParams.token)\n        });\n        this.buildServiceOffering();\n        this.bindLocalStorageData();\n    }\n\n    buildServiceOffering() {\n        let serviceOffers = this.wizardForm.get('ServiceOffering') as FormArray;\n        let serviceOfferings = Object.keys(ServiceOfferingType).filter(f => !isNaN(Number(f)));\n\n        for (let index in serviceOfferings) {\n            serviceOffers.push(this.fb.group({\n                IsEnable: this.fb.control(null),\n                AreaWide: this.fb.control(1),\n                ServiceDeliveryType: [this.ServiceOfferingTypes[+index + 1]],\n                ServiceAreas: this.fb.control(null),\n                SelectedCountry: this.fb.control(null),\n                SelectedStates: this.fb.control([]),\n                SelectedCities: this.fb.control([]),\n                SelectedZipCodes: this.fb.control([]),\n            }));\n\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = [] as ServiceArea[];\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [] as ServiceArea[];\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = [] as ServiceArea[];\n        }\n    }\n\n    getFuelAssetsFormGroup(isFuelAssets: boolean) {\n        return this.fb.group({\n            FuelTrailerServiceTypeFTL: this.fb.control(null, isFuelAssets ? [Validators.required] : []),\n            DEFTrailerServiceType: this.fb.control(null, !isFuelAssets ? [Validators.required] : []),\n            Capacity: this.fb.control(null, [Validators.required, Validators.min(0.0001)]),\n            TrailerHasPump: this.fb.control(false),\n            IsTrailerMetered: this.fb.control(false),\n            Count: this.fb.control(null, [Validators.required, Validators.min(1)]),\n            PackagedGoods: this.fb.control(false),\n            IsFuelAssets: this.fb.control(isFuelAssets),\n        })\n    }\n\n    openFuelAssetForm(isFuelAssets: boolean) {\n        this._opened = true;\n        this.fuelAssetForm = this.getFuelAssetsFormGroup(isFuelAssets);\n    }\n\n    removeAsset(index: number, isFuelAssets: boolean) {\n        let tempArray: FormArray;\n        if (isFuelAssets) {\n            tempArray = this.f.FleetInfo.get('FuelAssets') as FormArray;\n        }\n        else {\n            tempArray = this.f.FleetInfo.get('DefAssets') as FormArray;\n        }\n        tempArray.removeAt(index);\n    }\n\n    getAddressByZip(zipCode: string) {\n        if (zipCode) {\n            this.invitationService.GetAddressByZip(zipCode).subscribe((response) => {\n                if (response) {\n                    this.updateAddress(response)\n                }\n            });\n        }\n    }\n\n    updateAddress(address: Geocode) {\n        if (address.CountryCode && address.StateName) {\n\n            let countryId = (address.CountryCode == 'US') ? 1 : (address.CountryCode == 'CA' ? 2 : this.f.CompanyInfo.get('CountryId').value);\n            let state = this.statesList.find(st => st.Name.toLowerCase() == address.StateName.toLowerCase());\n            let stateId = (state && state.Id) ? state.Id : this.f.CompanyInfo.get('StateId').value;\n            if (address.Address && address.Address != '' && this.f.CompanyInfo.get('CompanyAddress').value != '') {\n                this.f.CompanyInfo.get('CompanyAddress').patchValue(address.Address);\n            }\n            this.f.CompanyInfo.get('City').patchValue(address.City);\n            this.f.CompanyInfo.get('County').patchValue(address.CountyName);\n            this.f.CompanyInfo.get('StateId').patchValue(stateId);\n            this.f.CompanyInfo.get('CountryId').patchValue(countryId);\n        }\n    }\n\n    onSubmitFleetInfo() {\n        this._opened = false;\n        let _fmArray: FormArray;\n        if (this.fuelAssetForm.get('IsFuelAssets').value) {\n            _fmArray = this.wizardForm.get('FleetInfo').get('FuelAssets') as FormArray;\n        }\n        else {\n            _fmArray = this.wizardForm.get('FleetInfo').get('DefAssets') as FormArray;\n        }\n        _fmArray.push(this.fuelAssetForm)\n    }\n\n    public serviceCountryChanged(serviceOffering: FormGroup) {\n        serviceOffering.get('SelectedStates').setValue([]);\n        serviceOffering.get('SelectedCities').setValue([]);\n        serviceOffering.get('SelectedZipCodes').setValue([]);\n    }\n\n    public GetCompanies() {\n        this.pageloader = true;\n        this.invitationService.GetCompanies().subscribe((data => {\n            this.pageloader = false;\n            if (data) {\n                this.Companies = data;\n            }\n        }));\n    }\n\n    public companySeleted(data: any) {\n        this.f.CompanyInfo.get('IsNewCompany').patchValue(false);\n        this.disableCompanyControls(true);\n        this.cdr.detectChanges();\n    }\n\n    Companies: any[] = [];\n    companyLoader = false;\n    public isCompanyNameExist(cName: string) {\n        if (cName) {\n            let _this = this;\n            this.companyLoader = true;\n            this.invitationService.IsCompanyNameExist(this.f.CompanyInfo.get('IsNewCompany').value, this.f.CompanyInfo.get('CompanyName').value).subscribe(data => {\n                if(typeof _this.f.CompanyInfo.get('CompanyName').value !== 'object'){\n                    _this.f.CompanyInfo.get('IsNewCompany').patchValue(!data);\n                    //_this.cdr.detectChanges();\n                }\n                _this.disableCompanyControls(!_this.f.CompanyInfo.get('IsNewCompany').value);\n                this.companyLoader = false;\n            });\n        }\n    }\n\n    disableCompanyControls(data: boolean){\n        if (data) {\n            this.f.CompanyInfo.get('CompanyTypeId').disable();\n            this.f.CompanyInfo.get('CompanyAddress').disable();\n            this.f.CompanyInfo.get('CountryId').disable();\n            this.f.CompanyInfo.get('StateId').disable();\n            this.f.CompanyInfo.get('CountryName').disable();\n            this.f.CompanyInfo.get('StateName').disable();\n            this.f.CompanyInfo.get('City').disable();\n            this.f.CompanyInfo.get('County').disable();\n            this.f.CompanyInfo.get('Zip').disable();\n            this.f.CompanyInfo.get('PhoneType').disable();\n            this.f.CompanyInfo.get('PhoneNumber').disable();\n        }\n        else {\n            this.f.CompanyInfo.get('CompanyTypeId').enable();\n            this.f.CompanyInfo.get('CompanyAddress').enable();\n            this.f.CompanyInfo.get('CountryId').enable();\n            this.f.CompanyInfo.get('StateId').enable();\n            this.f.CompanyInfo.get('CountryName').enable();\n            this.f.CompanyInfo.get('StateName').enable();\n            this.f.CompanyInfo.get('City').enable();\n            this.f.CompanyInfo.get('Zip').enable();\n            this.f.CompanyInfo.get('PhoneType').enable();\n            this.f.CompanyInfo.get('PhoneNumber').enable();\n        }\n    }\n    public getCountryList() {\n        this.invitationService.GetCountryList().subscribe(data => {\n            if (data && data.length > 0) {\n                this.CountryList = data;\n            }\n        });\n    }\n\n    public getStatesOfAllCountries() {\n        this.invitationService.GetStatesOfAllCountries().subscribe(data => {\n            if (data && data.length > 0) {\n                this.statesList = data;\n            }\n        });\n    }\n\n    public getThirdPartyCompanyTypes() {\n        this.invitationService.GetThirdPartyCompanyTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.invitedCompanyTypes = data;\n            }\n        });\n    }\n\n    public GetAllTrailerAssetTypes() {\n        this.invitationService.GetAllTrailerAssetTypes().subscribe(data => {\n            if (data) {\n                this.AllTrailerAssetTypes = data;\n            }\n        });\n    }\n\n\n    stateChanged(serviceOffering: FormGroup, index: number, newStateAdded: boolean, _selectedStates: any[]) {\n\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = [] as ServiceArea[];\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = [] as ServiceArea[];\n\n        if (_selectedStates.length == 0) {\n            serviceOffering.get('SelectedCities').patchValue([]);\n            serviceOffering.get('SelectedZipCodes').patchValue([]);\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [];\n            return;\n        }\n\n        var stateslist = _selectedStates.map(t => t.Id).join(\",\");\n        this.offeringloader = true;\n\n        this.invitationService.GetCitiesFromStates(stateslist).pipe(debounceTime(1000)).subscribe(response => {\n\n            if (response && response.length > 0) {\n                this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] = response;\n                this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] = response.filter((thing, i, arr) => {\n                    return arr.indexOf(arr.find(t => t.CityId === thing.CityId)) === i;\n                }) as ServiceArea[];\n            }\n            else if (!response) {\n                Declarations.msgerror(\"Failed to load Cities.\", \"Failed\", null)\n            }\n            if (!newStateAdded) {\n                this.removeSelectedCitiesOfRemovedState(serviceOffering.get('SelectedCities') as FormControl, index);\n            }\n\n            this.offeringloader = false;;\n        });\n    }\n\n    public stateChangedSingle(serviceOffering: FormGroup, index: number, newStateAdded: boolean) {\n        let _areawide = serviceOffering.get('AreaWide').value as number;\n        if (_areawide == 2) {\n            let _selectedStates = serviceOffering.get('SelectedStates').value as any[];\n            this.stateChanged(serviceOffering, index, newStateAdded, _selectedStates);\n        }\n    }\n\n    public stateChangedAll(serviceOffering: FormGroup, index: number, newStateAdded: boolean, _selectedStates: any[]) {\n        let _areawide = serviceOffering.get('AreaWide').value as number;\n        if (_areawide == 2) {\n            document.getElementById(\"stateDiv\").click();\n            this.stateChanged(serviceOffering, index, newStateAdded, _selectedStates);\n        }\n    }\n\n    public removeSelectedCitiesOfRemovedState(selectedCitiesForm: FormControl, index: number) {\n        let selectedCities = selectedCitiesForm.value as ServiceArea[];\n        if (selectedCities.length > 0) {\n\n            let availableCities = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_CitiesByState'] as ServiceArea[];\n            let finalCities = [];\n            selectedCities.forEach(selectedCity => {\n                if (availableCities.find(c => c.CityId == selectedCity.CityId)) {\n                    finalCities.push(selectedCity)\n                }\n            });\n            selectedCitiesForm.patchValue(finalCities);\n        }\n    }\n\n    public cityChangedSingle(serviceOffering: FormGroup, index: number, newCityAdded: boolean) {\n        let _selectedCities = serviceOffering.get('SelectedCities').value as any[];\n        this.cityChanged(serviceOffering, index, newCityAdded, _selectedCities);\n    }\n\n    public cityChangedAll(serviceOffering: FormGroup, index: number, newCityAdded: boolean, _selectedCities: any[]) {\n        this.cityChanged(serviceOffering, index, newCityAdded, _selectedCities);\n    }\n\n    public cityChanged(serviceOffering: FormGroup, index: number, newCityAdded: boolean, _selectedCities: any[]) {\n\n        if (_selectedCities.length == 0) {\n            this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = [] as ServiceArea[];\n            serviceOffering.get('SelectedZipCodes').patchValue([]);\n            return;\n        }\n\n        let _selectedCityIds: number[] = _selectedCities.map(c => { return c.CityId; })\n\n        let allZipcodes = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ApiData'] as ServiceArea[];\n        this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] = allZipcodes.filter(c => _selectedCityIds.includes(c.CityId)) as ServiceArea[];\n\n        if (!newCityAdded) {\n            this.removeSelectedZipsOfRemovedCities(serviceOffering.get('SelectedZipCodes') as FormControl, index);\n        }\n    }\n\n    public removeSelectedZipsOfRemovedCities(selectedZipsForm: FormControl, index: number) {\n        let selectedZips = selectedZipsForm.value as ServiceArea[];\n        if (selectedZips.length > 0) {\n\n            let availableZips = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] as ServiceArea[];\n            let finalZips = []\n            selectedZips.forEach(zip => {\n                if (availableZips.find(c => c.ZipCode == zip.ZipCode)) {\n                    finalZips.push(zip)\n                }\n            });\n            selectedZipsForm.patchValue(finalZips);\n        }\n    }\n\n    public countryChanged() {\n        this.f.CompanyInfo.get('CompanyAddress').setValue(null);\n        this.f.CompanyInfo.get('Zip').setValue(null);\n        this.f.CompanyInfo.get('City').setValue(null);\n        this.f.CompanyInfo.get('County').setValue(null);\n        this.f.CompanyInfo.get('StateId').setValue(null);\n    }\n\n    public isEmailExist() {\n        this.emailExists = false;\n        if (this.f.UserDetails.get('Email').value) {\n            this.invitationService.IsEmailExist(this.f.UserInfo.get('Email').value).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.emailExists = data;\n                }\n            });\n        }\n    }\n\n    public getPhoneTypes() {\n        this.invitationService.GetPhoneTypes().subscribe(data => {\n            if (data && data.length > 0) {\n                this.PhoneTypes = data;\n            }\n        });\n    }\n\n    public IsPhoneNumberValid(phoneNumber: string) {\n        this.isPhoneNumberValid = null;\n        if (phoneNumber) {\n            this.invitationService.IsPhoneNumberValid(phoneNumber).subscribe(data => {\n                if (data != null || data != undefined) {\n                    this.isPhoneNumberValid = data;\n                }\n            });\n        }\n    }\n\n    public scrollToElemen(id: WizardTabEnum): void {\n        this.activeWizard = id;\n    }\n\n    public setServiceQuestion(id: ServiceOfferingType) {\n        this.activeServiceOffering = id;\n    }\n\n    public setLocalStorageData(): void {\n        localStorage.setItem('wizardData', JSON.stringify(this.wizardForm.value));\n    }\n\n    public goToNextQuestion(){\n\n        if(this.activeServiceOffering != this.ServiceOfferingTypes.DEFWetHosing){\n            this.activeServiceOffering = +this.activeServiceOffering+1;\n        }\n    }\n\n    public scrollToElement(id: WizardTabEnum) {\n        this.activeWizard = id;\n        if (id == WizardTabEnum.CompanyInfo) {\n            this.CompanyInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else if (id == WizardTabEnum.FleetInfo) {\n            this.FleetInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else if (id == WizardTabEnum.ServiceOfferings) {\n            this.ServiceOffering.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        } else {\n            this.activeWizard = WizardTabEnum.ContactInfo;\n            this.ContactInformation.nativeElement.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\n        }\n    }\n\n    public onFinishAndSave() {\n        this.setLocalStorageData();\n    }\n\n    updateServiceValidation(serviceOffering: FormGroup, serviceEnabled: boolean, areaWide: number){\n\n        this.updateFormControlValidators(serviceOffering.get('SelectedCountry'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedStates'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedCities'), [])\n        this.updateFormControlValidators(serviceOffering.get('SelectedZipCodes'), [])\n\n        if (serviceEnabled) {\n\n            this.updateFormControlValidators(serviceOffering.get('SelectedCountry'), [Validators.required])\n            this.updateFormControlValidators(serviceOffering.get('SelectedStates'), [Validators.required])\n\n            if (areaWide==2) {\n                this.updateFormControlValidators(serviceOffering.get('SelectedCities'), [Validators.required])\n                this.updateFormControlValidators(serviceOffering.get('SelectedZipCodes'), [Validators.required])\n            }\n        }\n    }\n\n    updateFormControlValidators(control: any, validators: any[]) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n     }\n\n    public bindLocalStorageData(): void {\n        let wizardFormData = localStorage.getItem('wizardData')\n        if (wizardFormData) {\n            let wizardFormDataJSON = JSON.parse(wizardFormData);\n            this.f.UserInfo.patchValue(wizardFormDataJSON.UserInfo);\n            this.f.CompanyInfo.patchValue(wizardFormDataJSON.CompanyInfo);\n            this.f.ServiceOffering.patchValue(wizardFormDataJSON.ServiceOffering);\n\n            // this.f.CompanyInfo.get('IsNewCompany').patchValue(!data);\n\n            let FuelAssets = this.f.FleetInfo.get('FuelAssets') as FormArray;\n            wizardFormDataJSON.FleetInfo.FuelAssets.forEach((fuelAsset: any) => {\n                FuelAssets.push(this.fb.group({\n                    FuelTrailerServiceTypeFTL: this.fb.control(fuelAsset.FuelTrailerServiceTypeFTL, [Validators.required]),\n                    DEFTrailerServiceType: this.fb.control(fuelAsset.DEFTrailerServiceType, []),\n                    Capacity: this.fb.control(fuelAsset.Capacity, [Validators.required, Validators.min(0.0001)]),\n                    TrailerHasPump: this.fb.control(fuelAsset.TrailerHasPump),\n                    IsTrailerMetered: this.fb.control(fuelAsset.IsTrailerMetered),\n                    Count: this.fb.control(fuelAsset.Count, [Validators.required, Validators.min(1)]),\n                    PackagedGoods: this.fb.control(fuelAsset.PackagedGoods),\n                    IsFuelAssets: this.fb.control(true),\n                }))\n            });\n\n            let DefAssets = this.f.FleetInfo.get('DefAssets') as FormArray;\n            wizardFormDataJSON.FleetInfo.DefAssets.forEach((defAssets: any) => {\n                DefAssets.push(this.fb.group({\n                    FuelTrailerServiceTypeFTL: this.fb.control(defAssets.FuelTrailerServiceTypeFTL, []),\n                    DEFTrailerServiceType: this.fb.control(defAssets.DEFTrailerServiceType, [Validators.required]),\n                    Capacity: this.fb.control(defAssets.Capacity, [Validators.required, Validators.min(0.0001)]),\n                    TrailerHasPump: this.fb.control(defAssets.TrailerHasPump),\n                    IsTrailerMetered: this.fb.control(defAssets.IsTrailerMetered),\n                    Count: this.fb.control(defAssets.Count, [Validators.required, Validators.min(1)]),\n                    PackagedGoods: this.fb.control(defAssets.PackagedGoods),\n                    IsFuelAssets: this.fb.control(false),\n                }))\n            });\n\n            if(!this.f.CompanyInfo.get('IsNewCompany').value){\n                this.f.CompanyInfo.get('IsNewCompany').markAllAsTouched();\n                //this.isCompanyNameExist(this.f.CompanyInfo.get('CompanyName').value?.Name);\n                this.disableCompanyControls(!this.f.CompanyInfo.get('IsNewCompany').value);\n            }\n        }\n    }\n    isSubmitted = false;\n    public onSubmit() {\n        \n        this.formSubmited = true;\n\n        if (!this.f.Token.value) {\n            Declarations.msgwarning(\"Invalid invitation link.\", undefined, undefined);\n            return;\n        }\n\n        if (this.wizardForm.valid) {\n            if (!this.f.CompanyInfo.get('IsNewCompany').value) {\n                let input = this.wizardForm.value;\n                input.CompanyInfo.IsNewCompany = false;\n\n                this.pageloader = true;\n                this.invitationService.SaveInvitedRequest(input).subscribe(response => {\n                    this.pageloader = false;\n                    localStorage.setItem('wizardData', '');\n                    if (response && response.StatusCode == 0 && response.EntityId) {\n                        this.isSubmitted = true;\n                        //this.router.navigate(['/Invitation/Submit']); \n                        //this.router.navigateByUrl('/Submit');  // open welcome component\n                        //Declarations.msgsuccess(\"Thank You for your information. email will be send to Company Admin to confirm account\", undefined, undefined);\n                        //Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                        //this.router.navigate([window.location.href = \"/Account/Register?supplierURL=&invitationId=\" + response.EntityId]);\n                    }\n                    else {\n                        Declarations.msgerror(\"Failed\", undefined, undefined);\n                    }\n                });\n                return;\n            }\n            else {\n                //SET SERVICE OFFERINGS\n                let serviceOffers = this.wizardForm.get('ServiceOffering') as FormArray;\n                serviceOffers.controls.forEach((serviceOffer: FormControl, index: number) => {\n                    let _serviceOffer = serviceOffer.value;\n                    if (_serviceOffer.IsEnable && _serviceOffer.SelectedStates.length > 0) {\n                        if (_serviceOffer.AreaWide == 2 && _serviceOffer.SelectedZipCodes.length > 0) {\n                            let allZipCodes = this.dataForEachServiceType[this.ServiceOfferingTypes[+index + 1] + '_ZipCodesByCities'] as ServiceArea[];\n                            let selectedZips = _serviceOffer.SelectedZipCodes.map((a: { ZipCode: string; }) => a.ZipCode) as string[];\n                            serviceOffer.get('ServiceAreas').setValue(allZipCodes.filter(a => selectedZips.includes(a.ZipCode)));\n                        }\n                        else {\n                            let allStates: ServiceArea[] = [];\n                            _serviceOffer.SelectedStates.forEach((t) => { allStates.push({ StateId: t.Id } as ServiceArea); });\n                            serviceOffer.get('ServiceAreas').setValue(allStates);\n                        }\n                    }\n                });\n\n                this.pageloader = true;\n                this.invitationService.SaveInvitedRequest(this.wizardForm.value).subscribe(response => {\n                    this.pageloader = false;\n                    localStorage.setItem('wizardData', '');\n                    if (response && response.StatusCode == 0 && response.EntityId) {\n                        Declarations.msgsuccess(\"Request created successfully.\", undefined, undefined);\n                        if (response.EntityNumber == null || response.EntityNumber == \"\" || response.EntityNumber == undefined)\n                            this.router.navigate([window.location.href = \"/Account/Register?supplierURL=&invitationId=\" + response.EntityId]);\n                        else\n                            this.router.navigate([window.location.href = \"/Account/Register?supplierURL=\" + response.EntityNumber +\"&invitationId=\" + response.EntityId]);\n                    }\n                    else {\n                        Declarations.msgerror(\"Failed\", undefined, undefined);\n                    }\n                });\n            }\n\n\n        }\n    }\n}","<div *ngIf=\"!isSubmitted\">\r\n    <div class=\"row custom-bg\" [style.background-image]=\"'url(' + backgroundImage + ')'\">\r\n            <div class=\"loader\" *ngIf=\"pageloader\">\r\n                <div class=\"loading-content text-center\">\r\n                    <div class=\"spinner\"></div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\" *ngIf=\"pageloader\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div> -->\r\n            <div class=\"col-sm-12 p-0\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 bg-white fixed\" style=\"z-index: 2;\" [ngStyle]=\"getHeaderColor()\">\r\n                            <img [src]=\"logoImage\" alt=\"\" style=\"position: sticky;height: 50px;top: 0;\" class=\"py-2\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row wizard\">\r\n                        <div class=\"col-sm-3\">\r\n                            <div class=\"\" style=\"position: sticky; top: 4rem;\">\r\n\r\n                                <!--<app-left-menu class=\"fixed-areaa\"></app-left-menu>-->\r\n                                <div class=\"list-group bg-white shadow\">\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.ContactInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.ContactInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.ContactInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-user\"></i></span>Contact\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.CompanyInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.CompanyInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.CompanyInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"far fa-building\"></i></span>Company\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.FleetInfo)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.FleetInfo\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.FleetInfo ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-truck-moving\"></i></span>Fleet\r\n                                        Information\r\n                                    </button>\r\n                                    <button (click)=\"scrollToElement(WizardTabEnum.ServiceOfferings)\" type=\"button\"\r\n                                            class=\"list-group-item list-group-item-action\"\r\n                                            [class.active-widget]=\"activeWizard === WizardTabEnum.ServiceOfferings\"\r\n                                            [ngStyle]=\"activeWizard===WizardTabEnum.ServiceOfferings ? getButtonColor(): {}\">\r\n                                        <span class=\"mr-2 number d-inline-block f-bold text-center\"><i class=\"fas fa-cogs\"></i></span>Service\r\n                                        Offerings\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-9 rightmenu pb-5\">\r\n                            <!-- Contact Info -->\r\n                            <div>\r\n                                <form [formGroup]=\"wizardForm\">\r\n\r\n                                    <div #ContactInformation class=\"section pt-130\">\r\n                                        <div formGroupName=\"UserInfo\"\r\n                                             (visibilityChange)=\"scrollToElemen(WizardTabEnum.ContactInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"contact-information\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <h1 class=\"mb-1\">Contact Information</h1>\r\n                                                    <h4>Please enter your details to build your account </h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"usertitle\">\r\n                                                        <label for=\"UserInfo_Title\">\r\n                                                            Title<span class=\"text-danger\" aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <input class=\"form-control form-control-lg\" id=\"UserInfo_Title\"\r\n                                                               formControlName=\"Title\" type=\"text\">\r\n                                                        <div *ngIf=\"formSubmited && f.UserInfo.get('Title').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.UserInfo.get('Title').errors?.required\">\r\n                                                                Title is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_FirstName\">\r\n                                                        First Name<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_FirstName\" formControlName=\"FirstName\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('FirstName').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('FirstName').errors?.required\">\r\n                                                            First Name is required\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_LastName\">\r\n                                                        Last Name<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_LastName\" formControlName=\"LastName\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('LastName').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('LastName').errors?.required\">\r\n                                                            Last Name is required\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <label for=\"UserInfo_Email\">\r\n                                                        Email<span class=\"text-danger\">*</span>\r\n                                                    </label>\r\n                                                    <input name=\"UserInfo_Email\" formControlName=\"Email\"\r\n                                                           class=\"form-control form-control-lg\" />\r\n                                                    <div *ngIf=\"formSubmited && f.UserInfo.get('Email').errors\">\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('Email').errors?.required\">\r\n                                                            Email is required\r\n                                                        </span>\r\n                                                        <span class=\"text-danger\"\r\n                                                              *ngIf=\"f.UserInfo.get('Email').errors?.pattern\">\r\n                                                            Invalid email\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #CompanyInformation class=\"section pt-130\">\r\n                                        <div formGroupName=\"CompanyInfo\"\r\n                                             (visibilityChange)=\"scrollToElemen(WizardTabEnum.CompanyInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"company-information\">\r\n                                            <div class=\"row mb-3\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <h1 class=\"mb-1\">Company Information</h1>\r\n                                                    <h4>Tell us more about your company</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"CompanyName\">\r\n                                                        <label for=\"CompanyInfo_CompanyName\">\r\n                                                            Company Name<span class=\"required pl4\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <!-- <input class=\"form-control\" id=\"CompanyInfo_CompanyName\"\r\n                                                    formControlName=\"CompanyName\" placeholder=\"Company Name\"\r\n                                                    (change)=\"isCompanyNameExist($event.target.value)\"> -->\r\n\r\n                                                        <ng-autocomplete [data]=\"Companies\" [searchKeyword]=\"'Name'\"\r\n                                                                         formControlName=\"CompanyName\" [itemTemplate]=\"itemTemplate\"\r\n                                                                         [notFoundTemplate]=\"notFoundTemplate\"\r\n                                                                         (change)=\"isCompanyNameExist($event.target.value)\"\r\n                                                                         (selected)=\"companySeleted($event)\">\r\n                                                        </ng-autocomplete>\r\n                                                        <ng-template #itemTemplate let-item>\r\n                                                            <a [innerHTML]=\"item.Name\"></a>\r\n                                                        </ng-template>\r\n                                                        <ng-template #notFoundTemplate let-notFound>\r\n                                                            <div [innerHTML]=\"notFound\"></div>\r\n                                                        </ng-template>\r\n\r\n                                                        <div *ngIf=\"!companyLoader && formSubmited && f.CompanyInfo.get('CompanyName').errors;\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.CompanyInfo.get('CompanyName').errors?.required\">\r\n                                                                Company Name is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"!companyLoader && !f.CompanyInfo.get('CompanyName').errors && !f.CompanyInfo.get('IsNewCompany').value && f.CompanyInfo.get('CompanyName').touched\">\r\n                                                            <span class=\"text-danger\">\r\n                                                                This company already exists. Please click the Finish & save button to request an account.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"companyLoader\">\r\n                                                            <span class=\"text-danger\">\r\n                                                                Validating company..\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 form-group\">\r\n                                                    <div id=\"CompanyTypeId\">\r\n                                                        <label for=\"CompanyInfo_CompanyTypeId\">\r\n                                                            Company Type<span class=\"text-danger\"\r\n                                                                              aria-required=\"true\">*</span>\r\n                                                        </label>\r\n                                                        <select formControlName=\"CompanyTypeId\"\r\n                                                                class=\"form-control form-control-lg\" placeholder=\"Select Type\"\r\n                                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                            <!-- (change)=\"setStateName(product, $event)\" -->\r\n                                                            <option [value]=\"null\" disabled>Select Type</option>\r\n                                                            <option *ngFor=\"let ct of invitedCompanyTypes\" [value]=\"ct.Id\">\r\n                                                                {{ct.Name}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                        <div *ngIf=\"formSubmited && f.CompanyInfo.get('CompanyTypeId').errors\">\r\n                                                            <span class=\"text-danger\"\r\n                                                                  *ngIf=\"f.CompanyInfo.get('CompanyTypeId').errors?.required\">\r\n                                                                Company Type is required\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-12\">\r\n                                                    <div class=\"pa bg-white z-index5 loading-wrapper\"\r\n                                                         *ngIf=\"_loadingAddress\">\r\n                                                        <span class='spinner-dashboard pa'></span>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"UserDetails_CompanyTypeId\">\r\n                                                                Company Address\r\n                                                                <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"CompanyAddress\"\r\n                                                                       formControlName=\"CompanyAddress\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('CompanyAddress').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('CompanyAddress').errors?.required\">\r\n                                                                    Address is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"UserInfo_FirstName\">\r\n                                                                Zip Code<span class=\"color-maroon\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"Zip\" formControlName=\"Zip\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       (change)=\"getAddressByZip($event.target.value)\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('Zip').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('Zip').errors?.required\">\r\n                                                                    Zip is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                City<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"City\" formControlName=\"City\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('City').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('City').errors?.required\">\r\n                                                                    City is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                County<span class=\"text-danger\"\r\n                                                                            aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"County\" formControlName=\"County\"\r\n                                                                       class=\"form-control form-control-lg\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                State<span class=\"required pl4\"\r\n                                                                           aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"StateId\"\r\n                                                                        class=\"form-control form-control-lg\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select State</option>\r\n                                                                    <option *ngFor=\"let st of StatesListByCountry\"\r\n                                                                            [value]=\"st.Id\">\r\n                                                                        {{st.Name}}&nbsp;({{st.Code}})\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('StateId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('StateId').errors?.required\">\r\n                                                                    State is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_CompanyName\">\r\n                                                                Country<span class=\"text-danger\"\r\n                                                                             aria-required=\"true\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"CountryId\" class=\"form-control\"\r\n                                                                        (change)=\"countryChanged()\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select Country</option>\r\n                                                                    <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Id\">\r\n                                                                        {{ct.Code}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('CountryId').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('CountryId').errors?.required\">\r\n                                                                    Country is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_PhoneType\">\r\n                                                                Phone Type<span class=\"text-danger\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <select formControlName=\"PhoneType\"\r\n                                                                        class=\"form-control form-control-lg\"\r\n                                                                        placeholder=\"Select Type\"\r\n                                                                        [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                    <option [value]=\"null\" disabled>Select Type</option>\r\n                                                                    <option *ngFor=\"let pt of PhoneTypes\" [value]=\"pt.Id\">\r\n                                                                        {{pt.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('PhoneType').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneType').errors?.required\">\r\n                                                                    Phone Type is required\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4 form-group\">\r\n                                                            <label for=\"CompanyInfo_PhoneNumber\">\r\n                                                                Phone Number<span class=\"text-danger\">*</span>\r\n                                                            </label>\r\n                                                            <div>\r\n                                                                <input name=\"PhoneNumber\" formControlName=\"PhoneNumber\"\r\n                                                                       class=\"form-control input-phoneformat phoneNumber form-control-lg\"\r\n                                                                       (change)=\"IsPhoneNumberValid($event.target.value)\"\r\n                                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                                            </div>\r\n                                                            <div *ngIf=\"formSubmited && f.CompanyInfo.get('PhoneNumber').errors\">\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneNumber').errors?.required\">\r\n                                                                    Phone Number is required\r\n                                                                </span>\r\n                                                                <span class=\"text-danger\"\r\n                                                                      *ngIf=\"f.CompanyInfo.get('PhoneNumber').errors?.pattern\">\r\n                                                                    Invalid Phone Number\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <div *ngIf=\"!f.CompanyInfo.get('PhoneNumber').errors && f.CompanyInfo.get('PhoneNumber').value && isPhoneNumberValid==false\">\r\n                                                                <span class=\"color-orange fs12\">\r\n                                                                    Unable to verify number! You will miss Text\r\n                                                                    Alerts.\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #FleetInformation class=\"section pt-130\">\r\n                                        <div (visibilityChange)=\"scrollToElemen(WizardTabEnum.FleetInfo)\"\r\n                                             [threshold]=\"threshold\" class=\"shadow border bg-white p-3 rounded-lg\"\r\n                                             id=\"fleet-information\">\r\n                                            <div formGroupName=\"FleetInfo\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <h1 class=\"mb-1\">Fleet Information</h1>\r\n                                                        <h4>Tell us more about your trailers</h4>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label class=\"h5\">Fuel Assets</label>\r\n                                                        <button type=\"button\" class=\"btn btn-link fs14 ml-3 mb-2\"\r\n                                                                id=\"fuel_asset\" value=\"+ Add New\"\r\n                                                                (click)=\"openFuelAssetForm(true)\">\r\n                                                            <!-- (click)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, null);bolDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\" -->\r\n                                                            <i class=\"fa fa-plus-circle\"></i> Add New\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"ibox mb0\">\r\n                                                            <div class=\"ibox-content no-border px-0\">\r\n                                                                <div id=\"div-fuel-assets-grid\" class=\"table-responsive\">\r\n                                                                    <table id=\"fuel-assets-grid-datatable\"\r\n                                                                           class=\"table table-hover\">\r\n                                                                        <thead>\r\n                                                                            <tr>\r\n                                                                                <th>Trailer Type</th>\r\n                                                                                <th>Capacity per asset(G)</th>\r\n                                                                                <th>Does Trailer have Pump?</th>\r\n                                                                                <th>Is Trailer Metered?</th>\r\n                                                                                <th>Count</th>\r\n                                                                                <th></th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody>\r\n                                                                            <tr *ngFor=\"let trail of f.FleetInfo.get('FuelAssets')['value'];let i=index\">\r\n                                                                                <td>\r\n                                                                                    {{getFuelTrailerAssetTypeName(trail.FuelTrailerServiceTypeFTL)}}\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Capacity}}</td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.TrailerHasPump\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.TrailerHasPump\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.IsTrailerMetered\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.IsTrailerMetered\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Count}}</td>\r\n                                                                                <td>\r\n                                                                                    <a (click)=\"removeAsset(i, true)\">\r\n                                                                                        <i class=\"fa fa-trash text-danger fs16\"\r\n                                                                                           data-placement=\"top\"\r\n                                                                                           data-toggle=\"tooltip\"\r\n                                                                                           title=\"Remove\">\r\n                                                                                        </i>\r\n                                                                                    </a>\r\n                                                                                </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label class=\"h5\">DEF Assets</label>\r\n                                                        <button type=\"button\" class=\"btn btn-link fs14 ml-3 mb-2\"\r\n                                                                id=\"def_asset\" value=\"+ Add New\"\r\n                                                                (click)=\"openFuelAssetForm(false)\">\r\n                                                            <!-- (click)=\"bolDetail.initDrops(invoiceForm.get('Drops').value,InvoiceModel?.Drops);bolDetail.toggleOpen(true, null);bolDetail.getAddedProductDetails(invoiceForm.get('Drops').value)\" -->\r\n                                                            <i class=\"fa fa-plus-circle\"></i> Add New\r\n                                                        </button>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div class=\"ibox mb0\">\r\n                                                            <div class=\"ibox-content no-border px-0\">\r\n                                                                <div id=\"div-def-assets-grid\" class=\"table-responsive\">\r\n                                                                    <table id=\"def-assets-grid-datatable\"\r\n                                                                           class=\"table table-hover\">\r\n                                                                        <thead>\r\n                                                                            <tr>\r\n                                                                                <th>Trailer Type</th>\r\n                                                                                <th>Capacity per asset(G)</th>\r\n                                                                                <th>Packaged Goods</th>\r\n                                                                                <th>Does Trailer have Pump?</th>\r\n                                                                                <th>Is Trailer Metered?</th>\r\n                                                                                <th>Count</th>\r\n                                                                                <th></th>\r\n                                                                            </tr>\r\n                                                                        </thead>\r\n                                                                        <tbody>\r\n                                                                            <tr *ngFor=\"let trail of f.FleetInfo.get('DefAssets')['value']; let i=index\">\r\n                                                                                <td>\r\n                                                                                    {{getDefTrailerAssetTypeName(trail.DEFTrailerServiceType)}}\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Capacity}}</td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.PackagedGoods\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.PackagedGoods\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.TrailerHasPump\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.TrailerHasPump\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>\r\n                                                                                    <span *ngIf=\"trail.IsTrailerMetered\">Yes</span>\r\n                                                                                    <span *ngIf=\"!trail.IsTrailerMetered\">No</span>\r\n                                                                                </td>\r\n                                                                                <td>{{trail.Count}}</td>\r\n                                                                                <td>\r\n                                                                                    <a (click)=\"removeAsset(i, false)\">\r\n                                                                                        <i class=\"fa fa-trash text-danger fs16\"\r\n                                                                                           data-placement=\"top\"\r\n                                                                                           data-toggle=\"tooltip\"\r\n                                                                                           title=\"Remove\">\r\n                                                                                        </i>\r\n                                                                                    </a>\r\n                                                                                </td>\r\n                                                                            </tr>\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div #ServiceOffering class=\"section pt-130 pr\">\r\n\r\n                                        <div (visibilityChange)=\"scrollToElemen(WizardTabEnum.ServiceOfferings)\"\r\n                                             [threshold]=\"threshold\">\r\n                                            <div class=\"pa bg-white top0 left0 z-index5 loading-wrapper mtm10 loader-fueltype\"\r\n                                                 *ngIf=\"offeringloader\">\r\n                                                <span class=\"spinner-dashboard pa\"></span>\r\n                                            </div>\r\n\r\n                                            <div class=\"shadow border bg-white p-3 rounded-lg\" id=\"service-information\">\r\n                                                <div class=\"row mb-3\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <h1 class=\"mb-1\">Service Offerings</h1>\r\n                                                        <h4>Please list market footprint per service offering</h4>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-sm-12\">\r\n                                                        <div [formArrayName]=\"'ServiceOffering'\">\r\n                                                            <ng-container *ngFor=\"let service of wizardForm.get('ServiceOffering')['controls']; let i = index;\">\r\n                                                                <div [formGroupName]=\"i\">\r\n\r\n                                                                    <div class=\"border rounded p-4\"\r\n                                                                         *ngIf=\"activeServiceOffering==(+i+1)\">\r\n\r\n                                                                        <div class=row>\r\n                                                                            <div class=\"col-12 font-bold\">\r\n                                                                                Do you Offer\r\n                                                                                {{ServiceOfferingTypesDisplay[service.get('ServiceDeliveryType').value]}}\r\n                                                                                Deliveries ?\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"row mt-2\">\r\n                                                                            <div class=\"col-12\">\r\n                                                                                <div [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'pntr-none subSectionOpacity' : ''\">\r\n                                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                                        <input class=\"form-check-input\"\r\n                                                                                               formControlName=\"IsEnable\"\r\n                                                                                               id=\"radio-enable-yes-{{i}}\"\r\n                                                                                               type=\"radio\" [value]=\"true\"\r\n                                                                                               (change)=\"updateServiceValidation(service, true, service.get('AreaWide').value)\"\r\n                                                                                               [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                        <label class=\"form-check-label\"\r\n                                                                                               for=\"radio-enable-yes-{{i}}\">Yes</label>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                                        <input class=\"form-check-input\"\r\n                                                                                               formControlName=\"IsEnable\"\r\n                                                                                               id=\"radio-enable-false-{{i}}\"\r\n                                                                                               type=\"radio\" [value]=\"false\"\r\n                                                                                               (change)=\"goToNextQuestion();updateServiceValidation(service, false, service.get('AreaWide').value)\"\r\n                                                                                               [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                        <label class=\"form-check-label\"\r\n                                                                                               for=\"radio-enable-false-{{i}}\">No</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        <div class=\"row mt-3\"\r\n                                                                             [class]=\"service.get('IsEnable').value ? 'mb-3' : 'mb-3 pntr-none subSectionOpacity'\">\r\n                                                                            <div class=\"col-sm-3 mb-2\">\r\n                                                                                <select formControlName=\"AreaWide\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        (change)=\"stateChangedSingle(service, i, true);updateServiceValidation(service, true, $event.target.value)\"\r\n                                                                                        [disableControl]=\"!service.get('IsEnable').value || !f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                    <option value=\"1\">State wide</option>\r\n                                                                                    <option value=\"2\">Zip wide</option>\r\n                                                                                </select>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-sm-3\">\r\n                                                                                <select formControlName=\"SelectedCountry\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        (change)=\"serviceCountryChanged(service)\"\r\n                                                                                        [disableControl]=\"!service.get('IsEnable').value || !f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                                                    <option value=\"null\" disabled>\r\n                                                                                        Select Country\r\n                                                                                    </option>\r\n                                                                                    <option *ngFor=\"let country of CountryList\"\r\n                                                                                            value=\"{{country.Id}}\">\r\n                                                                                        {{country.Code}}\r\n                                                                                    </option>\r\n                                                                                </select>\r\n                                                                                <div *ngIf=\"formSubmited && service.get('SelectedCountry').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedCountry').errors?.required\">\r\n                                                                                        Country is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\"\r\n                                                                                 id=\"stateDiv\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect1\r\n                                                                                                         [placeholder]=\"'Select States'\"\r\n                                                                                                         [settings]=\"DdlSettings\"\r\n                                                                                                         [data]=\"StatesListByCountryForService(service.get('SelectedCountry').value)\"\r\n                                                                                                         formControlName=\"SelectedStates\"\r\n                                                                                                         (onSelect)=\"stateChangedSingle(service, i, true)\"\r\n                                                                                                         (onSelectAll)=\"stateChangedAll(service, i, true, $event)\"\r\n                                                                                                         (onDeSelect)=\"stateChangedSingle(service, i, false)\"\r\n                                                                                                         (onDeSelectAll)=\"stateChangedAll(service, i, false, $event)\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div *ngIf=\"formSubmited && service.get('SelectedStates').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedStates').errors?.required\">\r\n                                                                                        State is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"(service.get('AreaWide').value == 2)\"\r\n                                                                                 [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect2\r\n                                                                                                         [placeholder]=\"'Select City'\"\r\n                                                                                                         [settings]=\"ddlCitySettings\"\r\n                                                                                                         [data]=\"dataForEachServiceType[ServiceOfferingTypes[+i + 1] + '_CitiesByState']\"\r\n                                                                                                         formControlName=\"SelectedCities\"\r\n                                                                                                         (onSelect)=\"cityChangedSingle(service, i, true)\"\r\n                                                                                                         (onSelectAll)=\"cityChangedAll(service, i, true, $event)\"\r\n                                                                                                         (onDeSelect)=\"cityChangedSingle(service, i, false)\"\r\n                                                                                                         (onDeSelectAll)=\"cityChangedAll(service, i, false, $event)\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div \r\n                                                                                     *ngIf=\"formSubmited && service.get('SelectedCities').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedCities').errors?.required\">\r\n                                                                                        City is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"(service.get('AreaWide').value == 2)\"\r\n                                                                                 [class]=\"!f.CompanyInfo.get('IsNewCompany').value? 'col-sm-3 pntr-none subSectionOpacity' : 'col-sm-3'\">\r\n                                                                                <ng-multiselect-dropdown #multiSelect3\r\n                                                                                                         [placeholder]=\"'Select Zip Codes'\"\r\n                                                                                                         [settings]=\"ZipDdlSettings\"\r\n                                                                                                         [data]=\"dataForEachServiceType[ServiceOfferingTypes[+i + 1] + '_ZipCodesByCities']\"\r\n                                                                                                         formControlName=\"SelectedZipCodes\">\r\n                                                                                </ng-multiselect-dropdown>\r\n                                                                                <div \r\n                                                                                     *ngIf=\"formSubmited && service.get('SelectedZipCodes').errors\">\r\n                                                                                    <span class=\"text-danger\"\r\n                                                                                          *ngIf=\"service.get('SelectedZipCodes').errors?.required\">\r\n                                                                                        Zip Code is required\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        <div class=\"row mt-3\">\r\n                                                                            <div class=\"col-sm-6 text-left\">\r\n                                                                                <nav aria-label=\"...\">\r\n                                                                                    <ul \r\n                                                                                        class=\"pagination pagination-sm mb-0\">\r\n\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.FTL\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.FTL ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.FTL)\">1</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.LTL\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.LTL ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.LTL)\">2</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.LTLWetHosing\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.LTLWetHosing ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.LTLWetHosing)\">3</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.DEF\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                                [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.DEF ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.DEF)\">4</a>\r\n                                                                                        </li>\r\n                                                                                        <li class=\"page-item\"\r\n                                                                                            [class.active]=\"activeServiceOffering === ServiceOfferingTypes.DEFWetHosing\">\r\n                                                                                            <a class=\"page-link\"\r\n                                                                                            [ngStyle]=\"activeServiceOffering === ServiceOfferingTypes.DEFWetHosing ? getButtonColor(): {}\"\r\n                                                                                               (click)=\"setServiceQuestion(ServiceOfferingTypes.DEFWetHosing)\">5</a>\r\n                                                                                        </li>\r\n                                                                                    </ul>\r\n                                                                                </nav>\r\n                                                                            </div>\r\n\r\n                                                                            <div class=\"col-sm-6 text-right\">\r\n                                                                                <input type=\"button\"\r\n                                                                                       class=\"btn btn-primary btn-sm\"\r\n                                                                                       value=\"Prev\" [ngStyle]=\"getButtonColor()\"\r\n                                                                                       (click)=\"setServiceQuestion(+activeServiceOffering-1)\"\r\n                                                                                       [disabled]=\"activeServiceOffering==1\" \r\n                                                                                       [ngStyle]=\"activeServiceOffering!=1 ? getButtonColor(): {}\"\r\n                                                                                       #prev (mouseenter)=\"removeBtnPrimaryClass(prev)\"/>\r\n                                                                                <input type=\"button\"\r\n                                                                                       class=\"btn btn-primary btn-sm\"\r\n                                                                                       value=\"Next\" [ngStyle]=\"getButtonColor()\"\r\n                                                                                       (click)=\"setServiceQuestion(+activeServiceOffering+1)\"\r\n                                                                                       [disabled]=\"activeServiceOffering==5\" \r\n                                                                                       [ngStyle]=\"activeServiceOffering!=5 ? getButtonColor(): {}\"\r\n                                                                                       #next (mouseenter)=\"removeBtnPrimaryClass(next)\"/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </ng-container>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"floating-buttons white-bg pt10\" [ngStyle]=\"getHeaderColor()\">\r\n                                        <div class=\"row mr20\">\r\n                                            <div class=\"col-sm-12 text-right\">\r\n\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-lg\" [ngStyle]=\"activeWizard!=4? getButtonColor(): {}\" \r\n                                                        [disabled]=\"activeWizard==4\"\r\n                                                        (click)=\"scrollToElement(+activeWizard+1)\"\r\n                                                        #next1 (mouseenter)=\"removeBtnPrimaryClass(next1)\">Next</button>\r\n\r\n                                                <button type=\"button\" class=\"btn btn-primary btn-lg mr-3\" [ngStyle]=\"!f.UserInfo.invalid && !f.CompanyInfo.invalid? getButtonColor(): {}\"\r\n                                                        [disabled]=\"f.UserInfo.invalid || f.CompanyInfo.invalid\"\r\n                                                        data-toggle=\"modal\" data-target=\"#confirmationModal\" (click)=\"onFinishAndSave()\"\r\n                                                        #finishAndSave (mouseenter)=\"removeBtnPrimaryClass(finishAndSave)\">Finish &\r\n                                                    save</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-sidebar-container>\r\n            <ng-sidebar [(opened)]=\"_opened\" [animate]=\"true\" [position]=\"'right'\" [showBackdrop]=\"true\"\r\n                        style=\"height: 100vh\">\r\n                <div class=\"header-panel\">\r\n                    <div class=\"heading\">\r\n                        <a (click)=\"_opened=false\"><i class=\"fa fa-close fs21 mr-3 float-left\"></i></a>\r\n                        <h3 class=\"d-inline-block\">Create Trailer</h3>\r\n                    </div>\r\n                    <form [formGroup]=\"fuelAssetForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Trailer Type</label>\r\n                                    <ng-container *ngIf=\"fuelAssetForm.get('IsFuelAssets').value && AllTrailerAssetTypes\">\r\n                                        <select class=\"form-control\" formControlName=\"FuelTrailerServiceTypeFTL\"\r\n                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                            <option [value]=\"null\" disabled>Select</option>\r\n                                            <option *ngFor=\"let asset of AllTrailerAssetTypes?.FuelTrailerAssetType\"\r\n                                                    [value]=\"asset.Id\">\r\n                                                {{asset.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div \r\n                                             *ngIf=\"fuelAssetForm.get('FuelTrailerServiceTypeFTL').dirty || fuelAssetForm.get('FuelTrailerServiceTypeFTL').touched && fuelAssetForm.get('FuelTrailerServiceTypeFTL').errors\">\r\n                                            <label style=\"color:red\"\r\n                                                   *ngIf=\"fuelAssetForm.get('FuelTrailerServiceTypeFTL').errors?.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                    <ng-container *ngIf=\"!fuelAssetForm.get('IsFuelAssets').value && AllTrailerAssetTypes\">\r\n                                        <select class=\"form-control\" formControlName=\"DEFTrailerServiceType\"\r\n                                                [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                            <option [value]=\"null\" disabled>Select</option>\r\n                                            <option *ngFor=\"let asset of AllTrailerAssetTypes?.DefTrailerAssetType\"\r\n                                                    [value]=\"asset.Id\">\r\n                                                {{asset.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <div \r\n                                             *ngIf=\"(fuelAssetForm.get('DEFTrailerServiceType').dirty || fuelAssetForm.get('DEFTrailerServiceType').touched) && fuelAssetForm.get('DEFTrailerServiceType').errors\">\r\n                                            <label style=\"color:red\"\r\n                                                   *ngIf=\"fuelAssetForm.get('DEFTrailerServiceType').errors?.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Capacity per asset(G)</label>\r\n                                    <input type=\"number\" formControlName=\"Capacity\" class=\"form-control\"\r\n                                           placeholder=\"Capacity\"\r\n                                           [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                    <div \r\n                                         *ngIf=\"(fuelAssetForm.get('Capacity').dirty || fuelAssetForm.get('Capacity').touched) && fuelAssetForm.get('Capacity').errors\">\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Capacity').errors?.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Capacity').errors.min\">\r\n                                            Invalid capacity\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ts_type\">Count</label>\r\n                                    <input type=\"number\" formControlName=\"Count\" class=\"form-control\" placeholder=\"Count\"\r\n                                           [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\" />\r\n                                    <div\r\n                                         *ngIf=\"(fuelAssetForm.get('Count').dirty || fuelAssetForm.get('Count').touched) && fuelAssetForm.get('Count').errors\">\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Count').errors?.required\">\r\n                                            Required\r\n                                        </label>\r\n                                        <label style=\"color:red\" *ngIf=\"fuelAssetForm.get('Count').errors.min\">\r\n                                            Invalid Count\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Is your trailer metered?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered\"\r\n                                                       formControlName=\"TrailerHasPump\" [name]=\"'TrailerHasPump'\"\r\n                                                       [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered\"\r\n                                                       formControlName=\"TrailerHasPump\" [name]=\"'TrailerHasPump'\"\r\n                                                       [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Does your trailer have pump?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered1\"\r\n                                                       formControlName=\"IsTrailerMetered\" [name]=\"'IsTrailerMetered'\"\r\n                                                       [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered1\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered1\"\r\n                                                       formControlName=\"IsTrailerMetered\" [name]=\"'IsTrailerMetered'\"\r\n                                                       [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered1\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-6\" *ngIf=\"!fuelAssetForm.get('IsFuelAssets').value\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"ts_type\" class=\"d-block\">Is packaged goods?</label>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"metered2\"\r\n                                                       formControlName=\"PackagedGoods\" [name]=\"'PackagedGoods'\" [value]=\"true\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"metered2\">Yes</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" id=\"non_metered2\"\r\n                                                       formControlName=\"PackagedGoods\" [name]=\"'PackagedGoods'\" [value]=\"false\"\r\n                                                       [disableControl]=\"!f.CompanyInfo.get('IsNewCompany').value\">\r\n                                                <label class=\"form-check-label\" for=\"non_metered2\">No</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-right\">\r\n                                <input type=\"button\" value=\"Cancel\" class=\"btn\" (click)=\"_opened=false\">\r\n                                <input id=\"Submit\" type=\"button\" value=\"Submit\" [disabled]=\"fuelAssetForm.invalid\"\r\n                                       (click)=\"onSubmitFleetInfo()\" class=\"btn btn-primary btnSubmit\"\r\n                                       #submit1 (mouseenter)=\"removeBtnPrimaryClass(submit1)\"\r\n                                       [ngStyle]=\"!fuelAssetForm.invalid? getButtonColor(): {}\">\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </ng-sidebar>\r\n        </ng-sidebar-container>\r\n    </div>\r\n<app-invitation-submit *ngIf=\"isSubmitted\"></app-invitation-submit>\r\n\r\n<div class=\"modal fade\" id=\"confirmationModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmationModal\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"mt-2 f-bold\">Thank you for your information</h2>\r\n                <p>\r\n                    You will be sent an email prompting you to register your account.<br>\r\n                    This will allow you to log into your account.\r\n                </p>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"\r\n                #close (mouseenter)=\"removeBtnPrimaryClass(close)\"\r\n                [ngStyle]=\"getButtonColor()\">Close</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"onSubmit()\"\r\n                #submit (mouseenter)=\"removeBtnPrimaryClass(submit)\"\r\n                [ngStyle]=\"getButtonColor()\">Submit</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InvitationComponent } from './invitation.component';\nimport { LeftMenuComponent } from './left-menu/left-menu.component'\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InvitationSubmitComponent } from './invitation-submit/invitation-submit.component';\nimport { VisibilityChangeModule } from 'src/app/directives/visibility-change.module';\n\nconst routeInv: Routes = [\n  {\n    path: \"\",\n    component: InvitationComponent\n  },\n  {\n    path: \"/Index\",\n    component: InvitationComponent\n  },\n  {\n    path: \"/Submit\",\n    component: InvitationSubmitComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    InvitationComponent,\n    LeftMenuComponent,\n    InvitationSubmitComponent\n  ],\n\n  imports: [\n    CommonModule,\n    DirectiveModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    VisibilityChangeModule,\n    RouterModule.forChild(routeInv)\n  ]\n})\nexport class InvitationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-menu',\n  templateUrl: './left-menu.component.html',\n  styleUrls: ['./left-menu.component.css']\n})\nexport class LeftMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}