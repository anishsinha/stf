function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["invoice-lazy-loading-invoice-module"], {
  /***/
  "./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js": function node_modulesAzureAbortControllerDistEsmSrcAbortControllerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AbortError", function () {
      return AbortError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AbortController", function () {
      return AbortController;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/abort-controller/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _AbortSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./AbortSignal */
    "./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * This error is thrown when an asynchronous operation has been aborted.
     * Check for this error by testing the `name` that the name property of the
     * error matches `"AbortError"`.
     *
     * @example
     * ```ts
     * const controller = new AbortController();
     * controller.abort();
     * try {
     *   doAsyncWork(controller.signal)
     * } catch (e) {
     *   if (e.name === 'AbortError') {
     *     // handle abort error here.
     *   }
     * }
     * ```
     */


    var AbortError = function (_super) {
      Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AbortError, _super);

      function AbortError(message) {
        var _this = _super.call(this, message) || this;

        _this.name = "AbortError";
        return _this;
      }

      return AbortError;
    }(Error);
    /**
     * An AbortController provides an AbortSignal and the associated controls to signal
     * that an asynchronous operation should be aborted.
     *
     * @example
     * Abort an operation when another event fires
     * ```ts
     * const controller = new AbortController();
     * const signal = controller.signal;
     * doAsyncWork(signal);
     * button.addEventListener('click', () => controller.abort());
     * ```
     *
     * @example
     * Share aborter cross multiple operations in 30s
     * ```ts
     * // Upload the same data to 2 different data centers at the same time,
     * // abort another when any of them is finished
     * const controller = AbortController.withTimeout(30 * 1000);
     * doAsyncWork(controller.signal).then(controller.abort);
     * doAsyncWork(controller.signal).then(controller.abort);
     *```
     *
     * @example
     * Cascaded aborting
     * ```ts
     * // All operations can't take more than 30 seconds
     * const aborter = Aborter.timeout(30 * 1000);
     *
     * // Following 2 operations can't take more than 25 seconds
     * await doAsyncWork(aborter.withTimeout(25 * 1000));
     * await doAsyncWork(aborter.withTimeout(25 * 1000));
     * ```
     */


    var AbortController = function () {
      // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
      function AbortController(parentSignals) {
        var _this = this;

        this._signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_1__["AbortSignal"]();

        if (!parentSignals) {
          return;
        } // coerce parentSignals into an array


        if (!Array.isArray(parentSignals)) {
          // eslint-disable-next-line prefer-rest-params
          parentSignals = arguments;
        }

        for (var _i = 0, parentSignals_1 = parentSignals; _i < parentSignals_1.length; _i++) {
          var parentSignal = parentSignals_1[_i]; // if the parent signal has already had abort() called,
          // then call abort on this signal as well.

          if (parentSignal.aborted) {
            this.abort();
          } else {
            // when the parent signal aborts, this signal should as well.
            parentSignal.addEventListener("abort", function () {
              _this.abort();
            });
          }
        }
      }

      Object.defineProperty(AbortController.prototype, "signal", {
        /**
         * The AbortSignal associated with this controller that will signal aborted
         * when the abort method is called on this controller.
         *
         * @readonly
         */
        get: function get() {
          return this._signal;
        },
        enumerable: false,
        configurable: true
      });
      /**
       * Signal that any operations passed this controller's associated abort signal
       * to cancel any remaining work and throw an `AbortError`.
       */

      AbortController.prototype.abort = function () {
        Object(_AbortSignal__WEBPACK_IMPORTED_MODULE_1__["abortSignal"])(this._signal);
      };
      /**
       * Creates a new AbortSignal instance that will abort after the provided ms.
       * @param ms - Elapsed time in milliseconds to trigger an abort.
       */


      AbortController.timeout = function (ms) {
        var signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_1__["AbortSignal"]();
        var timer = setTimeout(_AbortSignal__WEBPACK_IMPORTED_MODULE_1__["abortSignal"], ms, signal); // Prevent the active Timer from keeping the Node.js event loop active.

        if (typeof timer.unref === "function") {
          timer.unref();
        }

        return signal;
      };

      return AbortController;
    }(); //# sourceMappingURL=AbortController.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js": function node_modulesAzureAbortControllerDistEsmSrcAbortSignalJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AbortSignal", function () {
      return AbortSignal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "abortSignal", function () {
      return abortSignal;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var listenersMap = new WeakMap();
    var abortedMap = new WeakMap();
    /**
     * An aborter instance implements AbortSignal interface, can abort HTTP requests.
     *
     * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.
     * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation
     * cannot or will not ever be cancelled.
     *
     * @example
     * Abort without timeout
     * ```ts
     * await doAsyncWork(AbortSignal.none);
     * ```
     */

    var AbortSignal = function () {
      function AbortSignal() {
        /**
         * onabort event listener.
         */
        this.onabort = null;
        listenersMap.set(this, []);
        abortedMap.set(this, false);
      }

      Object.defineProperty(AbortSignal.prototype, "aborted", {
        /**
         * Status of whether aborted or not.
         *
         * @readonly
         */
        get: function get() {
          if (!abortedMap.has(this)) {
            throw new TypeError("Expected `this` to be an instance of AbortSignal.");
          }

          return abortedMap.get(this);
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(AbortSignal, "none", {
        /**
         * Creates a new AbortSignal instance that will never be aborted.
         *
         * @readonly
         */
        get: function get() {
          return new AbortSignal();
        },
        enumerable: false,
        configurable: true
      });
      /**
       * Added new "abort" event listener, only support "abort" event.
       *
       * @param _type - Only support "abort" event
       * @param listener - The listener to be added
       */

      AbortSignal.prototype.addEventListener = function ( // tslint:disable-next-line:variable-name
      _type, listener) {
        if (!listenersMap.has(this)) {
          throw new TypeError("Expected `this` to be an instance of AbortSignal.");
        }

        var listeners = listenersMap.get(this);
        listeners.push(listener);
      };
      /**
       * Remove "abort" event listener, only support "abort" event.
       *
       * @param _type - Only support "abort" event
       * @param listener - The listener to be removed
       */


      AbortSignal.prototype.removeEventListener = function ( // tslint:disable-next-line:variable-name
      _type, listener) {
        if (!listenersMap.has(this)) {
          throw new TypeError("Expected `this` to be an instance of AbortSignal.");
        }

        var listeners = listenersMap.get(this);
        var index = listeners.indexOf(listener);

        if (index > -1) {
          listeners.splice(index, 1);
        }
      };
      /**
       * Dispatches a synthetic event to the AbortSignal.
       */


      AbortSignal.prototype.dispatchEvent = function (_event) {
        throw new Error("This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.");
      };

      return AbortSignal;
    }();
    /**
     * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.
     * Will try to trigger abort event for all linked AbortSignal nodes.
     *
     * - If there is a timeout, the timer will be cancelled.
     * - If aborted is true, nothing will happen.
     *
     * @internal
     */
    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters


    function abortSignal(signal) {
      if (signal.aborted) {
        return;
      }

      if (signal.onabort) {
        signal.onabort.call(signal);
      }

      var listeners = listenersMap.get(signal);

      if (listeners) {
        // Create a copy of listeners so mutations to the array
        // (e.g. via removeListener calls) don't affect the listeners
        // we invoke.
        listeners.slice().forEach(function (listener) {
          listener.call(signal, {
            type: "abort"
          });
        });
      }

      abortedMap.set(signal, true);
    } //# sourceMappingURL=AbortSignal.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/abort-controller/dist-esm/src/index.js": function node_modulesAzureAbortControllerDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _AbortController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./AbortController */
    "./node_modules/@azure/abort-controller/dist-esm/src/AbortController.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AbortController", function () {
      return _AbortController__WEBPACK_IMPORTED_MODULE_0__["AbortController"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AbortError", function () {
      return _AbortController__WEBPACK_IMPORTED_MODULE_0__["AbortError"];
    });
    /* harmony import */


    var _AbortSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./AbortSignal */
    "./node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AbortSignal", function () {
      return _AbortSignal__WEBPACK_IMPORTED_MODULE_1__["AbortSignal"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // Changes to Aborter
    // * Rename Aborter to AbortSignal
    // * Remove withValue and getValue - async context should be solved differently/wholistically, not tied to cancellation
    // * Remove withTimeout, it's moved to the controller
    // * AbortSignal constructor no longer takes a parent. Cancellation graphs are created from the controller.
    // Potential changes to align with DOM Spec
    // * dispatchEvent on Signal
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/abort-controller/node_modules/tslib/tslib.es6.js": function node_modulesAzureAbortControllerNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArray", function () {
      return __spreadArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    function __extends(d, b) {
      if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign = function __assign() {
      _assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    var __createBinding = Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    };

    function __exportStar(m, o) {
      for (var p in m) {
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }
    /** @deprecated */


    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }
    /** @deprecated */


    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    var __setModuleDefault = Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    };

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }

      __setModuleDefault(result, mod);

      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m") throw new TypeError("Private method is not writable");
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    }
    /***/

  },

  /***/
  "./node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js": function node_modulesAzureCoreAsynciteratorPolyfillDistEsmIndexJs(module, exports, __webpack_require__) {
    "use strict";

    if (typeof Symbol === undefined || !Symbol.asyncIterator) {
      Symbol.asyncIterator = Symbol["for"]("Symbol.asyncIterator");
    } //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js": function node_modulesAzureCoreAuthDistEsmSrcAzureKeyCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AzureKeyCredential", function () {
      return AzureKeyCredential;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A static-key-based credential that supports updating
     * the underlying key value.
     */


    var AzureKeyCredential = /*#__PURE__*/function () {
      /**
       * Create an instance of an AzureKeyCredential for use
       * with a service client.
       *
       * @param key - The initial value of the key to use in authentication
       */
      function AzureKeyCredential(key) {
        _classCallCheck(this, AzureKeyCredential);

        if (!key) {
          throw new Error("key must be a non-empty string");
        }

        this._key = key;
      }
      /**
       * The value of the key to be used in authentication
       */


      _createClass(AzureKeyCredential, [{
        key: "key",
        get: function get() {
          return this._key;
        }
        /**
         * Change the value of the key.
         *
         * Updates will take effect upon the next request after
         * updating the key value.
         *
         * @param newKey - The new key value to be used
         */

      }, {
        key: "update",
        value: function update(newKey) {
          this._key = newKey;
        }
      }]);

      return AzureKeyCredential;
    }(); //# sourceMappingURL=azureKeyCredential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js": function node_modulesAzureCoreAuthDistEsmSrcAzureNamedKeyCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AzureNamedKeyCredential", function () {
      return AzureNamedKeyCredential;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNamedKeyCredential", function () {
      return isNamedKeyCredential;
    });
    /* harmony import */


    var _typeguards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./typeguards */
    "./node_modules/@azure/core-auth/dist-esm/src/typeguards.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A static name/key-based credential that supports updating
     * the underlying name and key values.
     */


    var AzureNamedKeyCredential = /*#__PURE__*/function () {
      /**
       * Create an instance of an AzureNamedKeyCredential for use
       * with a service client.
       *
       * @param name - The initial value of the name to use in authentication.
       * @param key - The initial value of the key to use in authentication.
       */
      function AzureNamedKeyCredential(name, key) {
        _classCallCheck(this, AzureNamedKeyCredential);

        if (!name || !key) {
          throw new TypeError("name and key must be non-empty strings");
        }

        this._name = name;
        this._key = key;
      }
      /**
       * The value of the key to be used in authentication.
       */


      _createClass(AzureNamedKeyCredential, [{
        key: "key",
        get: function get() {
          return this._key;
        }
        /**
         * The value of the name to be used in authentication.
         */

      }, {
        key: "name",
        get: function get() {
          return this._name;
        }
        /**
         * Change the value of the key.
         *
         * Updates will take effect upon the next request after
         * updating the key value.
         *
         * @param newName - The new name value to be used.
         * @param newKey - The new key value to be used.
         */

      }, {
        key: "update",
        value: function update(newName, newKey) {
          if (!newName || !newKey) {
            throw new TypeError("newName and newKey must be non-empty strings");
          }

          this._name = newName;
          this._key = newKey;
        }
      }]);

      return AzureNamedKeyCredential;
    }();
    /**
     * Tests an object to determine whether it implements NamedKeyCredential.
     *
     * @param credential - The assumed NamedKeyCredential to be tested.
     */


    function isNamedKeyCredential(credential) {
      return Object(_typeguards__WEBPACK_IMPORTED_MODULE_0__["isObjectWithProperties"])(credential, ["name", "key"]) && typeof credential.key === "string" && typeof credential.name === "string";
    } //# sourceMappingURL=azureNamedKeyCredential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js": function node_modulesAzureCoreAuthDistEsmSrcAzureSASCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AzureSASCredential", function () {
      return AzureSASCredential;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isSASCredential", function () {
      return isSASCredential;
    });
    /* harmony import */


    var _typeguards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./typeguards */
    "./node_modules/@azure/core-auth/dist-esm/src/typeguards.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A static-signature-based credential that supports updating
     * the underlying signature value.
     */


    var AzureSASCredential = /*#__PURE__*/function () {
      /**
       * Create an instance of an AzureSASCredential for use
       * with a service client.
       *
       * @param signature - The initial value of the shared access signature to use in authentication
       */
      function AzureSASCredential(signature) {
        _classCallCheck(this, AzureSASCredential);

        if (!signature) {
          throw new Error("shared access signature must be a non-empty string");
        }

        this._signature = signature;
      }
      /**
       * The value of the shared access signature to be used in authentication
       */


      _createClass(AzureSASCredential, [{
        key: "signature",
        get: function get() {
          return this._signature;
        }
        /**
         * Change the value of the signature.
         *
         * Updates will take effect upon the next request after
         * updating the signature value.
         *
         * @param newSignature - The new shared access signature value to be used
         */

      }, {
        key: "update",
        value: function update(newSignature) {
          if (!newSignature) {
            throw new Error("shared access signature must be a non-empty string");
          }

          this._signature = newSignature;
        }
      }]);

      return AzureSASCredential;
    }();
    /**
     * Tests an object to determine whether it implements SASCredential.
     *
     * @param credential - The assumed SASCredential to be tested.
     */


    function isSASCredential(credential) {
      return Object(_typeguards__WEBPACK_IMPORTED_MODULE_0__["isObjectWithProperties"])(credential, ["signature"]) && typeof credential.signature === "string";
    } //# sourceMappingURL=azureSASCredential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/index.js": function node_modulesAzureCoreAuthDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _azureKeyCredential__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./azureKeyCredential */
    "./node_modules/@azure/core-auth/dist-esm/src/azureKeyCredential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AzureKeyCredential", function () {
      return _azureKeyCredential__WEBPACK_IMPORTED_MODULE_0__["AzureKeyCredential"];
    });
    /* harmony import */


    var _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./azureNamedKeyCredential */
    "./node_modules/@azure/core-auth/dist-esm/src/azureNamedKeyCredential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AzureNamedKeyCredential", function () {
      return _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__["AzureNamedKeyCredential"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNamedKeyCredential", function () {
      return _azureNamedKeyCredential__WEBPACK_IMPORTED_MODULE_1__["isNamedKeyCredential"];
    });
    /* harmony import */


    var _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./azureSASCredential */
    "./node_modules/@azure/core-auth/dist-esm/src/azureSASCredential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AzureSASCredential", function () {
      return _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__["AzureSASCredential"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSASCredential", function () {
      return _azureSASCredential__WEBPACK_IMPORTED_MODULE_2__["isSASCredential"];
    });
    /* harmony import */


    var _tokenCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./tokenCredential */
    "./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isTokenCredential", function () {
      return _tokenCredential__WEBPACK_IMPORTED_MODULE_3__["isTokenCredential"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js": function node_modulesAzureCoreAuthDistEsmSrcTokenCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isTokenCredential", function () {
      return isTokenCredential;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Tests an object to determine whether it implements TokenCredential.
     *
     * @param credential - The assumed TokenCredential to be tested.
     */


    function isTokenCredential(credential) {
      // Check for an object with a 'getToken' function and possibly with
      // a 'signRequest' function.  We do this check to make sure that
      // a ServiceClientCredentials implementor (like TokenClientCredentials
      // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if
      // it doesn't actually implement TokenCredential also.
      var castCredential = credential;
      return castCredential && typeof castCredential.getToken === "function" && (castCredential.signRequest === undefined || castCredential.getToken.length > 0);
    } //# sourceMappingURL=tokenCredential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-auth/dist-esm/src/typeguards.js": function node_modulesAzureCoreAuthDistEsmSrcTypeguardsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isObjectWithProperties", function () {
      return isObjectWithProperties;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Helper TypeGuard that checks if something is defined or not.
     * @param thing - Anything
     * @internal
     */


    function isDefined(thing) {
      return typeof thing !== "undefined" && thing !== null;
    }
    /**
     * Helper TypeGuard that checks if the input is an object with the specified properties.
     * Note: The properties may be inherited.
     * @param thing - Anything.
     * @param properties - The name of the properties that should appear in the object.
     * @internal
     */


    function isObjectWithProperties(thing, properties) {
      if (!isDefined(thing) || typeof thing !== "object") {
        return false;
      }

      var _iterator = _createForOfIteratorHelper(properties),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;

          if (!objectHasProperty(thing, property)) {
            return false;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return true;
    }
    /**
     * Helper TypeGuard that checks if the input is an object with the specified property.
     * Note: The property may be inherited.
     * @param thing - Any object.
     * @param property - The name of the property that should appear in the object.
     * @internal
     */


    function objectHasProperty(thing, property) {
      return typeof thing === "object" && property in thing;
    } //# sourceMappingURL=typeguards.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js": function node_modulesAzureCoreHttpDistEsmSrcCoreHttpJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _webResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./webResource */
    "./node_modules/@azure/core-http/dist-esm/src/webResource.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WebResource", function () {
      return _webResource__WEBPACK_IMPORTED_MODULE_0__["WebResource"];
    });
    /* harmony import */


    var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./defaultHttpClient */
    "./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DefaultHttpClient", function () {
      return _defaultHttpClient__WEBPACK_IMPORTED_MODULE_1__["DefaultHttpClient"];
    });
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "HttpHeaders", function () {
      return _httpHeaders__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"];
    });
    /* harmony import */


    var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./httpPipelineLogLevel */
    "./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "HttpPipelineLogLevel", function () {
      return _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_3__["HttpPipelineLogLevel"];
    });
    /* harmony import */


    var _restError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./restError */
    "./node_modules/@azure/core-http/dist-esm/src/restError.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RestError", function () {
      return _restError__WEBPACK_IMPORTED_MODULE_4__["RestError"];
    });
    /* harmony import */


    var _operationOptions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./operationOptions */
    "./node_modules/@azure/core-http/dist-esm/src/operationOptions.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "operationOptionsToRequestOptionsBase", function () {
      return _operationOptions__WEBPACK_IMPORTED_MODULE_5__["operationOptionsToRequestOptionsBase"];
    });
    /* harmony import */


    var _serviceClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./serviceClient */
    "./node_modules/@azure/core-http/dist-esm/src/serviceClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ServiceClient", function () {
      return _serviceClient__WEBPACK_IMPORTED_MODULE_6__["ServiceClient"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "flattenResponse", function () {
      return _serviceClient__WEBPACK_IMPORTED_MODULE_6__["flattenResponse"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "createPipelineFromOptions", function () {
      return _serviceClient__WEBPACK_IMPORTED_MODULE_6__["createPipelineFromOptions"];
    });
    /* harmony import */


    var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./queryCollectionFormat */
    "./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "QueryCollectionFormat", function () {
      return _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_7__["QueryCollectionFormat"];
    });
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Constants", function () {
      return _util_constants__WEBPACK_IMPORTED_MODULE_8__["Constants"];
    });
    /* harmony import */


    var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./policies/bearerTokenAuthenticationPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "bearerTokenAuthenticationPolicy", function () {
      return _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_9__["bearerTokenAuthenticationPolicy"];
    });
    /* harmony import */


    var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./policies/logPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "logPolicy", function () {
      return _policies_logPolicy__WEBPACK_IMPORTED_MODULE_10__["logPolicy"];
    });
    /* harmony import */


    var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./policies/requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseRequestPolicy", function () {
      return _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__["BaseRequestPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RequestPolicyOptions", function () {
      return _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_11__["RequestPolicyOptions"];
    });
    /* harmony import */


    var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./policies/generateClientRequestIdPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "generateClientRequestIdPolicy", function () {
      return _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_12__["generateClientRequestIdPolicy"];
    });
    /* harmony import */


    var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./policies/exponentialRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "exponentialRetryPolicy", function () {
      return _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__["exponentialRetryPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RetryMode", function () {
      return _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_13__["RetryMode"];
    });
    /* harmony import */


    var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./policies/systemErrorRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "systemErrorRetryPolicy", function () {
      return _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_14__["systemErrorRetryPolicy"];
    });
    /* harmony import */


    var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./policies/throttlingRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "throttlingRetryPolicy", function () {
      return _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_15__["throttlingRetryPolicy"];
    });
    /* harmony import */


    var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./policies/proxyPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDefaultProxySettings", function () {
      return _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__["getDefaultProxySettings"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "proxyPolicy", function () {
      return _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_16__["proxyPolicy"];
    });
    /* harmony import */


    var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./policies/redirectPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "redirectPolicy", function () {
      return _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_17__["redirectPolicy"];
    });
    /* harmony import */


    var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./policies/keepAlivePolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "keepAlivePolicy", function () {
      return _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_18__["keepAlivePolicy"];
    });
    /* harmony import */


    var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./policies/disableResponseDecompressionPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "disableResponseDecompressionPolicy", function () {
      return _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_19__["disableResponseDecompressionPolicy"];
    });
    /* harmony import */


    var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./policies/signingPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "signingPolicy", function () {
      return _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_20__["signingPolicy"];
    });
    /* harmony import */


    var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./policies/userAgentPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "userAgentPolicy", function () {
      return _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__["userAgentPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDefaultUserAgentValue", function () {
      return _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_21__["getDefaultUserAgentValue"];
    });
    /* harmony import */


    var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./policies/deserializationPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "deserializationPolicy", function () {
      return _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__["deserializationPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "deserializeResponseBody", function () {
      return _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_22__["deserializeResponseBody"];
    });
    /* harmony import */


    var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./policies/tracingPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "tracingPolicy", function () {
      return _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_23__["tracingPolicy"];
    });
    /* harmony import */


    var _serializer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./serializer */
    "./node_modules/@azure/core-http/dist-esm/src/serializer.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MapperType", function () {
      return _serializer__WEBPACK_IMPORTED_MODULE_24__["MapperType"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Serializer", function () {
      return _serializer__WEBPACK_IMPORTED_MODULE_24__["Serializer"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "serializeObject", function () {
      return _serializer__WEBPACK_IMPORTED_MODULE_24__["serializeObject"];
    });
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "stripRequest", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["stripRequest"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "stripResponse", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["stripResponse"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "executePromisesSequentially", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["executePromisesSequentially"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "generateUuid", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["generateUuid"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "encodeUri", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["encodeUri"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "promiseToCallback", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["promiseToCallback"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "promiseToServiceCallback", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["promiseToServiceCallback"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isValidUuid", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["isValidUuid"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "applyMixins", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["applyMixins"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNode", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["isNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isDuration", function () {
      return _util_utils__WEBPACK_IMPORTED_MODULE_25__["isDuration"];
    });
    /* harmony import */


    var _url__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./url */
    "./node_modules/@azure/core-http/dist-esm/src/url.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "URLBuilder", function () {
      return _url__WEBPACK_IMPORTED_MODULE_26__["URLBuilder"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "URLQuery", function () {
      return _url__WEBPACK_IMPORTED_MODULE_26__["URLQuery"];
    });
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "delay", function () {
      return _util_delay__WEBPACK_IMPORTED_MODULE_27__["delay"];
    });
    /* harmony import */


    var _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./createSpanLegacy */
    "./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "createSpanFunction", function () {
      return _createSpanLegacy__WEBPACK_IMPORTED_MODULE_28__["createSpanFunction"];
    });
    /* harmony import */


    var _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! @azure/core-auth */
    "./node_modules/@azure/core-auth/dist-esm/src/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isTokenCredential", function () {
      return _azure_core_auth__WEBPACK_IMPORTED_MODULE_29__["isTokenCredential"];
    });
    /* harmony import */


    var _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./credentials/accessTokenCache */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ExpiringAccessTokenCache", function () {
      return _credentials_accessTokenCache__WEBPACK_IMPORTED_MODULE_30__["ExpiringAccessTokenCache"];
    });
    /* harmony import */


    var _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./credentials/accessTokenRefresher */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AccessTokenRefresher", function () {
      return _credentials_accessTokenRefresher__WEBPACK_IMPORTED_MODULE_31__["AccessTokenRefresher"];
    });
    /* harmony import */


    var _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./credentials/basicAuthenticationCredentials */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BasicAuthenticationCredentials", function () {
      return _credentials_basicAuthenticationCredentials__WEBPACK_IMPORTED_MODULE_32__["BasicAuthenticationCredentials"];
    });
    /* harmony import */


    var _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./credentials/apiKeyCredentials */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ApiKeyCredentials", function () {
      return _credentials_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_33__["ApiKeyCredentials"];
    });
    /* harmony import */


    var _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./credentials/topicCredentials */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TopicCredentials", function () {
      return _credentials_topicCredentials__WEBPACK_IMPORTED_MODULE_34__["TopicCredentials"];
    });
    /* harmony import */


    var _util_xml__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./util/xml */
    "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "parseXML", function () {
      return _util_xml__WEBPACK_IMPORTED_MODULE_35__["parseXML"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "stringifyXML", function () {
      return _util_xml__WEBPACK_IMPORTED_MODULE_35__["stringifyXML"];
    });
    /* harmony import */


    var _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./util/serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "XML_ATTRKEY", function () {
      return _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__["XML_ATTRKEY"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "XML_CHARKEY", function () {
      return _util_serializer_common__WEBPACK_IMPORTED_MODULE_36__["XML_CHARKEY"];
    });
    /* harmony import */


    var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! @azure/core-asynciterator-polyfill */
    "./node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js");
    /* harmony import */


    var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_37__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /* eslint-disable-next-line @typescript-eslint/triple-slash-reference */
    /// <reference path="../dom-shim.d.ts" />
    // legacy exports. Use core-tracing instead (and remove on next major version update of core-http).
    // Credentials
    //# sourceMappingURL=coreHttp.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/createSpanLegacy.js": function node_modulesAzureCoreHttpDistEsmSrcCreateSpanLegacyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createSpanFunction", function () {
      return createSpanFunction;
    });
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // NOTE: we've moved this code into core-tracing but these functions
    // were a part of the GA'd library and can't be removed until the next major
    // release. They currently get called always, even if tracing is not enabled.

    /**
     * This function is only here for compatibility. Use createSpanFunction in core-tracing.
     *
     * @deprecated This function is only here for compatibility. Use createSpanFunction in core-tracing.
     * @hidden
    
     * @param spanConfig - The name of the operation being performed.
     * @param tracingOptions - The options for the underlying http request.
     */


    function createSpanFunction(args) {
      return Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["createSpanFunction"])(args);
    } //# sourceMappingURL=createSpanLegacy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenCache.js": function node_modulesAzureCoreHttpDistEsmSrcCredentialsAccessTokenCacheJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TokenRefreshBufferMs", function () {
      return TokenRefreshBufferMs;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ExpiringAccessTokenCache", function () {
      return ExpiringAccessTokenCache;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Defines the default token refresh buffer duration.
     */


    var TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes

    /**
     * Provides an {@link AccessTokenCache} implementation which clears
     * the cached {@link AccessToken}'s after the expiresOnTimestamp has
     * passed.
     *
     * @deprecated No longer used in the bearer authorization policy.
     */

    var ExpiringAccessTokenCache = /*#__PURE__*/function () {
      /**
       * Constructs an instance of {@link ExpiringAccessTokenCache} with
       * an optional expiration buffer time.
       */
      function ExpiringAccessTokenCache() {
        var tokenRefreshBufferMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TokenRefreshBufferMs;

        _classCallCheck(this, ExpiringAccessTokenCache);

        this.cachedToken = undefined;
        this.tokenRefreshBufferMs = tokenRefreshBufferMs;
      }

      _createClass(ExpiringAccessTokenCache, [{
        key: "setCachedToken",
        value: function setCachedToken(accessToken) {
          this.cachedToken = accessToken;
        }
      }, {
        key: "getCachedToken",
        value: function getCachedToken() {
          if (this.cachedToken && Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp) {
            this.cachedToken = undefined;
          }

          return this.cachedToken;
        }
      }]);

      return ExpiringAccessTokenCache;
    }(); //# sourceMappingURL=accessTokenCache.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/credentials/accessTokenRefresher.js": function node_modulesAzureCoreHttpDistEsmSrcCredentialsAccessTokenRefresherJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccessTokenRefresher", function () {
      return AccessTokenRefresher;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.
     *
     * @deprecated No longer used in the bearer authorization policy.
     */


    var AccessTokenRefresher = /*#__PURE__*/function () {
      function AccessTokenRefresher(credential, scopes) {
        var requiredMillisecondsBeforeNewRefresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30000;

        _classCallCheck(this, AccessTokenRefresher);

        this.credential = credential;
        this.scopes = scopes;
        this.requiredMillisecondsBeforeNewRefresh = requiredMillisecondsBeforeNewRefresh;
        this.lastCalled = 0;
      }
      /**
       * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying
       * that we are ready for a new refresh.
       */


      _createClass(AccessTokenRefresher, [{
        key: "isReady",
        value: function isReady() {
          // We're only ready for a new refresh if the required milliseconds have passed.
          return !this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh;
        }
        /**
         * Stores the time in which it is called,
         * then requests a new token,
         * then sets this.promise to undefined,
         * then returns the token.
         */

      }, {
        key: "getToken",
        value: function () {
          var _getToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(options) {
            var token;
            return regeneratorRuntime.wrap(function _callee$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    this.lastCalled = Date.now();
                    _context2.next = 3;
                    return this.credential.getToken(this.scopes, options);

                  case 3:
                    token = _context2.sent;
                    this.promise = undefined;
                    return _context2.abrupt("return", token || undefined);

                  case 6:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee, this);
          }));

          function getToken(_x) {
            return _getToken.apply(this, arguments);
          }

          return getToken;
        }()
        /**
         * Requests a new token if we're not currently waiting for a new token.
         * Returns null if the required time between each call hasn't been reached.
         */

      }, {
        key: "refresh",
        value: function refresh(options) {
          if (!this.promise) {
            this.promise = this.getToken(options);
          }

          return this.promise;
        }
      }]);

      return AccessTokenRefresher;
    }(); //# sourceMappingURL=accessTokenRefresher.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js": function node_modulesAzureCoreHttpDistEsmSrcCredentialsApiKeyCredentialsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ApiKeyCredentials", function () {
      return ApiKeyCredentials;
    });
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Authenticates to a service using an API key.
     */


    var ApiKeyCredentials = /*#__PURE__*/function () {
      /**
       * @param options - Specifies the options to be provided for auth. Either header or query needs to be provided.
       */
      function ApiKeyCredentials(options) {
        _classCallCheck(this, ApiKeyCredentials);

        if (!options || options && !options.inHeader && !options.inQuery) {
          throw new Error("options cannot be null or undefined. Either \"inHeader\" or \"inQuery\" property of the options object needs to be provided.");
        }

        this.inHeader = options.inHeader;
        this.inQuery = options.inQuery;
      }
      /**
       * Signs a request with the values provided in the inHeader and inQuery parameter.
       *
       * @param webResource - The WebResourceLike to be signed.
       * @returns The signed request object.
       */


      _createClass(ApiKeyCredentials, [{
        key: "signRequest",
        value: function signRequest(webResource) {
          if (!webResource) {
            return Promise.reject(new Error("webResource cannot be null or undefined and must be of type \"object\"."));
          }

          if (this.inHeader) {
            if (!webResource.headers) {
              webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
            }

            for (var headerName in this.inHeader) {
              webResource.headers.set(headerName, this.inHeader[headerName]);
            }
          }

          if (this.inQuery) {
            if (!webResource.url) {
              return Promise.reject(new Error("url cannot be null in the request object."));
            }

            if (webResource.url.indexOf("?") < 0) {
              webResource.url += "?";
            }

            for (var key in this.inQuery) {
              if (!webResource.url.endsWith("?")) {
                webResource.url += "&";
              }

              webResource.url += "".concat(key, "=").concat(this.inQuery[key]);
            }
          }

          return Promise.resolve(webResource);
        }
      }]);

      return ApiKeyCredentials;
    }(); //# sourceMappingURL=apiKeyCredentials.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/credentials/basicAuthenticationCredentials.js": function node_modulesAzureCoreHttpDistEsmSrcCredentialsBasicAuthenticationCredentialsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BasicAuthenticationCredentials", function () {
      return BasicAuthenticationCredentials;
    });
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js");
    /* harmony import */


    var _util_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/base64 */
    "./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js");
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var HeaderConstants = _util_constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].HeaderConstants;
    var DEFAULT_AUTHORIZATION_SCHEME = "Basic";

    var BasicAuthenticationCredentials = /*#__PURE__*/function () {
      /**
       * Creates a new BasicAuthenticationCredentials object.
       *
       * @param userName - User name.
       * @param password - Password.
       * @param authorizationScheme - The authorization scheme.
       */
      function BasicAuthenticationCredentials(userName, password) {
        var authorizationScheme = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_AUTHORIZATION_SCHEME;

        _classCallCheck(this, BasicAuthenticationCredentials);

        this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;

        if (userName === null || userName === undefined || typeof userName.valueOf() !== "string") {
          throw new Error("userName cannot be null or undefined and must be of type string.");
        }

        if (password === null || password === undefined || typeof password.valueOf() !== "string") {
          throw new Error("password cannot be null or undefined and must be of type string.");
        }

        this.userName = userName;
        this.password = password;
        this.authorizationScheme = authorizationScheme;
      }
      /**
       * Signs a request with the Authentication header.
       *
       * @param webResource - The WebResourceLike to be signed.
       * @returns The signed request object.
       */


      _createClass(BasicAuthenticationCredentials, [{
        key: "signRequest",
        value: function signRequest(webResource) {
          var credentials = "".concat(this.userName, ":").concat(this.password);
          var encodedCredentials = "".concat(this.authorizationScheme, " ").concat(_util_base64__WEBPACK_IMPORTED_MODULE_1__["encodeString"](credentials));
          if (!webResource.headers) webResource.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
          webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);
          return Promise.resolve(webResource);
        }
      }]);

      return BasicAuthenticationCredentials;
    }(); //# sourceMappingURL=basicAuthenticationCredentials.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/credentials/topicCredentials.js": function node_modulesAzureCoreHttpDistEsmSrcCredentialsTopicCredentialsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TopicCredentials", function () {
      return TopicCredentials;
    });
    /* harmony import */


    var _apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./apiKeyCredentials */
    "./node_modules/@azure/core-http/dist-esm/src/credentials/apiKeyCredentials.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var TopicCredentials = /*#__PURE__*/function (_apiKeyCredentials__W) {
      _inherits(TopicCredentials, _apiKeyCredentials__W);

      var _super2 = _createSuper(TopicCredentials);

      /**
       * Creates a new EventGrid TopicCredentials object.
       *
       * @param topicKey - The EventGrid topic key
       */
      function TopicCredentials(topicKey) {
        _classCallCheck(this, TopicCredentials);

        if (!topicKey || topicKey && typeof topicKey !== "string") {
          throw new Error("topicKey cannot be null or undefined and must be of type string.");
        }

        var options = {
          inHeader: {
            "aeg-sas-key": topicKey
          }
        };
        return _super2.call(this, options);
      }

      return TopicCredentials;
    }(_apiKeyCredentials__WEBPACK_IMPORTED_MODULE_0__["ApiKeyCredentials"]); //# sourceMappingURL=topicCredentials.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js": function node_modulesAzureCoreHttpDistEsmSrcDefaultHttpClientBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./xhrHttpClient */
    "./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DefaultHttpClient", function () {
      return _xhrHttpClient__WEBPACK_IMPORTED_MODULE_0__["XhrHttpClient"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=defaultHttpClient.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js": function node_modulesAzureCoreHttpDistEsmSrcHttpClientCacheJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getCachedDefaultHttpClient", function () {
      return getCachedDefaultHttpClient;
    });
    /* harmony import */


    var _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./defaultHttpClient */
    "./node_modules/@azure/core-http/dist-esm/src/defaultHttpClient.browser.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var cachedHttpClient;

    function getCachedDefaultHttpClient() {
      if (!cachedHttpClient) {
        cachedHttpClient = new _defaultHttpClient__WEBPACK_IMPORTED_MODULE_0__["DefaultHttpClient"]();
      }

      return cachedHttpClient;
    } //# sourceMappingURL=httpClientCache.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js": function node_modulesAzureCoreHttpDistEsmSrcHttpHeadersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isHttpHeadersLike", function () {
      return isHttpHeadersLike;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HttpHeaders", function () {
      return HttpHeaders;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A collection of HttpHeaders that can be sent with a HTTP request.
     */


    function getHeaderKey(headerName) {
      return headerName.toLowerCase();
    }

    function isHttpHeadersLike(object) {
      if (object && typeof object === "object") {
        var castObject = object;

        if (typeof castObject.rawHeaders === "function" && typeof castObject.clone === "function" && typeof castObject.get === "function" && typeof castObject.set === "function" && typeof castObject.contains === "function" && typeof castObject.remove === "function" && typeof castObject.headersArray === "function" && typeof castObject.headerValues === "function" && typeof castObject.headerNames === "function" && typeof castObject.toJson === "function") {
          return true;
        }
      }

      return false;
    }
    /**
     * A collection of HTTP header key/value pairs.
     */


    var HttpHeaders = /*#__PURE__*/function () {
      function HttpHeaders(rawHeaders) {
        _classCallCheck(this, HttpHeaders);

        this._headersMap = {};

        if (rawHeaders) {
          for (var headerName in rawHeaders) {
            this.set(headerName, rawHeaders[headerName]);
          }
        }
      }
      /**
       * Set a header in this collection with the provided name and value. The name is
       * case-insensitive.
       * @param headerName - The name of the header to set. This value is case-insensitive.
       * @param headerValue - The value of the header to set.
       */


      _createClass(HttpHeaders, [{
        key: "set",
        value: function set(headerName, headerValue) {
          this._headersMap[getHeaderKey(headerName)] = {
            name: headerName,
            value: headerValue.toString()
          };
        }
        /**
         * Get the header value for the provided header name, or undefined if no header exists in this
         * collection with the provided name.
         * @param headerName - The name of the header.
         */

      }, {
        key: "get",
        value: function get(headerName) {
          var header = this._headersMap[getHeaderKey(headerName)];

          return !header ? undefined : header.value;
        }
        /**
         * Get whether or not this header collection contains a header entry for the provided header name.
         */

      }, {
        key: "contains",
        value: function contains(headerName) {
          return !!this._headersMap[getHeaderKey(headerName)];
        }
        /**
         * Remove the header with the provided headerName. Return whether or not the header existed and
         * was removed.
         * @param headerName - The name of the header to remove.
         */

      }, {
        key: "remove",
        value: function remove(headerName) {
          var result = this.contains(headerName);
          delete this._headersMap[getHeaderKey(headerName)];
          return result;
        }
        /**
         * Get the headers that are contained this collection as an object.
         */

      }, {
        key: "rawHeaders",
        value: function rawHeaders() {
          var result = {};

          for (var headerKey in this._headersMap) {
            var header = this._headersMap[headerKey];
            result[header.name.toLowerCase()] = header.value;
          }

          return result;
        }
        /**
         * Get the headers that are contained in this collection as an array.
         */

      }, {
        key: "headersArray",
        value: function headersArray() {
          var headers = [];

          for (var headerKey in this._headersMap) {
            headers.push(this._headersMap[headerKey]);
          }

          return headers;
        }
        /**
         * Get the header names that are contained in this collection.
         */

      }, {
        key: "headerNames",
        value: function headerNames() {
          var headerNames = [];
          var headers = this.headersArray();

          for (var i = 0; i < headers.length; ++i) {
            headerNames.push(headers[i].name);
          }

          return headerNames;
        }
        /**
         * Get the header values that are contained in this collection.
         */

      }, {
        key: "headerValues",
        value: function headerValues() {
          var headerValues = [];
          var headers = this.headersArray();

          for (var i = 0; i < headers.length; ++i) {
            headerValues.push(headers[i].value);
          }

          return headerValues;
        }
        /**
         * Get the JSON object representation of this HTTP header collection.
         */

      }, {
        key: "toJson",
        value: function toJson() {
          return this.rawHeaders();
        }
        /**
         * Get the string representation of this HTTP header collection.
         */

      }, {
        key: "toString",
        value: function toString() {
          return JSON.stringify(this.toJson());
        }
        /**
         * Create a deep clone/copy of this HttpHeaders collection.
         */

      }, {
        key: "clone",
        value: function clone() {
          return new HttpHeaders(this.rawHeaders());
        }
      }]);

      return HttpHeaders;
    }(); //# sourceMappingURL=httpHeaders.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js": function node_modulesAzureCoreHttpDistEsmSrcHttpPipelineLogLevelJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HttpPipelineLogLevel", function () {
      return HttpPipelineLogLevel;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * The different levels of logs that can be used with the HttpPipelineLogger.
     */


    var HttpPipelineLogLevel;

    (function (HttpPipelineLogLevel) {
      /**
       * A log level that indicates that no logs will be logged.
       */
      HttpPipelineLogLevel[HttpPipelineLogLevel["OFF"] = 0] = "OFF";
      /**
       * An error log.
       */

      HttpPipelineLogLevel[HttpPipelineLogLevel["ERROR"] = 1] = "ERROR";
      /**
       * A warning log.
       */

      HttpPipelineLogLevel[HttpPipelineLogLevel["WARNING"] = 2] = "WARNING";
      /**
       * An information log.
       */

      HttpPipelineLogLevel[HttpPipelineLogLevel["INFO"] = 3] = "INFO";
    })(HttpPipelineLogLevel || (HttpPipelineLogLevel = {})); //# sourceMappingURL=httpPipelineLogLevel.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/log.js": function node_modulesAzureCoreHttpDistEsmSrcLogJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "logger", function () {
      return logger;
    });
    /* harmony import */


    var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/logger */
    "./node_modules/@azure/logger/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var logger = Object(_azure_logger__WEBPACK_IMPORTED_MODULE_0__["createClientLogger"])("core-http"); //# sourceMappingURL=log.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/operationOptions.js": function node_modulesAzureCoreHttpDistEsmSrcOperationOptionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "operationOptionsToRequestOptionsBase", function () {
      return operationOptionsToRequestOptionsBase;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/core-http/node_modules/tslib/tslib.es6.js");
    /**
     * Converts an OperationOptions to a RequestOptionsBase
     *
     * @param opts - OperationOptions object to convert to RequestOptionsBase
     */


    function operationOptionsToRequestOptionsBase(opts) {
      var _a;

      var requestOptions = opts.requestOptions,
          tracingOptions = opts.tracingOptions,
          additionalOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(opts, ["requestOptions", "tracingOptions"]);
      var result = additionalOptions;

      if (requestOptions) {
        result = Object.assign(Object.assign({}, result), requestOptions);
      }

      if (tracingOptions) {
        result.tracingContext = tracingOptions.tracingContext; // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.

        result.spanOptions = (_a = tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions;
      }

      return result;
    } //# sourceMappingURL=operationOptions.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/operationParameter.js": function node_modulesAzureCoreHttpDistEsmSrcOperationParameterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPathStringFromParameter", function () {
      return getPathStringFromParameter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPathStringFromParameterPath", function () {
      return getPathStringFromParameterPath;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Get the path to this parameter's value as a dotted string (a.b.c).
     * @param parameter - The parameter to get the path string for.
     * @returns The path to this parameter's value as a dotted string.
     */


    function getPathStringFromParameter(parameter) {
      return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);
    }

    function getPathStringFromParameterPath(parameterPath, mapper) {
      var result;

      if (typeof parameterPath === "string") {
        result = parameterPath;
      } else if (Array.isArray(parameterPath)) {
        result = parameterPath.join(".");
      } else {
        result = mapper.serializedName;
      }

      return result;
    } //# sourceMappingURL=operationParameter.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/operationSpec.js": function node_modulesAzureCoreHttpDistEsmSrcOperationSpecJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getStreamResponseStatusCodes", function () {
      return getStreamResponseStatusCodes;
    });
    /* harmony import */


    var _serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./serializer */
    "./node_modules/@azure/core-http/dist-esm/src/serializer.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Gets the list of status codes for streaming responses.
     * @internal
     */


    function getStreamResponseStatusCodes(operationSpec) {
      var result = new Set();

      for (var statusCode in operationSpec.responses) {
        var operationResponse = operationSpec.responses[statusCode];

        if (operationResponse.bodyMapper && operationResponse.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_0__["MapperType"].Stream) {
          result.add(Number(statusCode));
        }
      }

      return result;
    } //# sourceMappingURL=operationSpec.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesBearerTokenAuthenticationPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CYCLER_OPTIONS", function () {
      return DEFAULT_CYCLER_OPTIONS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "bearerTokenAuthenticationPolicy", function () {
      return bearerTokenAuthenticationPolicy;
    });
    /* harmony import */


    var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../policies/requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // Default options for the cycler if none are provided


    var DEFAULT_CYCLER_OPTIONS = {
      forcedRefreshWindowInMs: 1000,
      retryIntervalInMs: 3000,
      refreshWindowInMs: 1000 * 60 * 2 // Start refreshing 2m before expiry

    };
    /**
     * Converts an an unreliable access token getter (which may resolve with null)
     * into an AccessTokenGetter by retrying the unreliable getter in a regular
     * interval.
     *
     * @param getAccessToken - a function that produces a promise of an access
     * token that may fail by returning null
     * @param retryIntervalInMs - the time (in milliseconds) to wait between retry
     * attempts
     * @param timeoutInMs - the timestamp after which the refresh attempt will fail,
     * throwing an exception
     * @returns - a promise that, if it resolves, will resolve with an access token
     */

    function beginRefresh(_x2, _x3, _x4) {
      return _beginRefresh.apply(this, arguments);
    }
    /**
     * Creates a token cycler from a credential, scopes, and optional settings.
     *
     * A token cycler represents a way to reliably retrieve a valid access token
     * from a TokenCredential. It will handle initializing the token, refreshing it
     * when it nears expiration, and synchronizes refresh attempts to avoid
     * concurrency hazards.
     *
     * @param credential - the underlying TokenCredential that provides the access
     * token
     * @param scopes - the scopes to request authorization for
     * @param tokenCyclerOptions - optionally override default settings for the cycler
     *
     * @returns - a function that reliably produces a valid access token
     */


    function _beginRefresh() {
      _beginRefresh = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(getAccessToken, retryIntervalInMs, timeoutInMs) {
        var tryGetAccessToken, _tryGetAccessToken, token;

        return regeneratorRuntime.wrap(function _callee5$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _tryGetAccessToken = function _tryGetAccessToken3() {
                  _tryGetAccessToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
                    var finalToken;
                    return regeneratorRuntime.wrap(function _callee4$(_context5) {
                      while (1) {
                        switch (_context5.prev = _context5.next) {
                          case 0:
                            if (!(Date.now() < timeoutInMs)) {
                              _context5.next = 12;
                              break;
                            }

                            _context5.prev = 1;
                            _context5.next = 4;
                            return getAccessToken();

                          case 4:
                            return _context5.abrupt("return", _context5.sent);

                          case 7:
                            _context5.prev = 7;
                            _context5.t0 = _context5["catch"](1);
                            return _context5.abrupt("return", null);

                          case 10:
                            _context5.next = 18;
                            break;

                          case 12:
                            _context5.next = 14;
                            return getAccessToken();

                          case 14:
                            finalToken = _context5.sent;

                            if (!(finalToken === null)) {
                              _context5.next = 17;
                              break;
                            }

                            throw new Error("Failed to refresh access token.");

                          case 17:
                            return _context5.abrupt("return", finalToken);

                          case 18:
                          case "end":
                            return _context5.stop();
                        }
                      }
                    }, _callee4, null, [[1, 7]]);
                  }));
                  return _tryGetAccessToken.apply(this, arguments);
                };

                tryGetAccessToken = function _tryGetAccessToken2() {
                  return _tryGetAccessToken.apply(this, arguments);
                };

                _context6.next = 4;
                return tryGetAccessToken();

              case 4:
                token = _context6.sent;

              case 5:
                if (!(token === null)) {
                  _context6.next = 13;
                  break;
                }

                _context6.next = 8;
                return Object(_util_delay__WEBPACK_IMPORTED_MODULE_2__["delay"])(retryIntervalInMs);

              case 8:
                _context6.next = 10;
                return tryGetAccessToken();

              case 10:
                token = _context6.sent;
                _context6.next = 5;
                break;

              case 13:
                return _context6.abrupt("return", token);

              case 14:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee5);
      }));
      return _beginRefresh.apply(this, arguments);
    }

    function createTokenCycler(credential, scopes, tokenCyclerOptions) {
      var refreshWorker = null;
      var token = null;
      var options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);
      /**
       * This little holder defines several predicates that we use to construct
       * the rules of refreshing the token.
       */

      var cycler = {
        /**
         * Produces true if a refresh job is currently in progress.
         */
        get isRefreshing() {
          return refreshWorker !== null;
        },

        /**
         * Produces true if the cycler SHOULD refresh (we are within the refresh
         * window and not already refreshing)
         */
        get shouldRefresh() {
          var _a;

          return !cycler.isRefreshing && ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();
        },

        /**
         * Produces true if the cycler MUST refresh (null or nearly-expired
         * token).
         */
        get mustRefresh() {
          return token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now();
        }

      };
      /**
       * Starts a refresh job or returns the existing job if one is already
       * running.
       */

      function refresh(getTokenOptions) {
        var _a;

        if (!cycler.isRefreshing) {
          // We bind `scopes` here to avoid passing it around a lot
          var tryGetAccessToken = function tryGetAccessToken() {
            return credential.getToken(scopes, getTokenOptions);
          }; // Take advantage of promise chaining to insert an assignment to `token`
          // before the refresh can be considered done.


          refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, // If we don't have a token, then we should timeout immediately
          (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now()).then(function (_token) {
            refreshWorker = null;
            token = _token;
            return token;
          })["catch"](function (reason) {
            // We also should reset the refresher if we enter a failed state.  All
            // existing awaiters will throw, but subsequent requests will start a
            // new retry chain.
            refreshWorker = null;
            token = null;
            throw reason;
          });
        }

        return refreshWorker;
      }

      return /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(tokenOptions) {
          return regeneratorRuntime.wrap(function _callee2$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  if (!cycler.mustRefresh) {
                    _context3.next = 2;
                    break;
                  }

                  return _context3.abrupt("return", refresh(tokenOptions));

                case 2:
                  if (cycler.shouldRefresh) {
                    refresh(tokenOptions);
                  }

                  return _context3.abrupt("return", token);

                case 4:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee2);
        }));

        return function (_x5) {
          return _ref.apply(this, arguments);
        };
      }();
    } // #endregion

    /**
     * Creates a new factory for a RequestPolicy that applies a bearer token to
     * the requests' `Authorization` headers.
     *
     * @param credential - The TokenCredential implementation that can supply the bearer token.
     * @param scopes - The scopes for which the bearer token applies.
     */


    function bearerTokenAuthenticationPolicy(credential, scopes) {
      // This simple function encapsulates the entire process of reliably retrieving the token
      var getToken = createTokenCycler(credential, scopes
      /* , options */
      );

      var BearerTokenAuthenticationPolicy = /*#__PURE__*/function (_policies_requestPoli) {
        _inherits(BearerTokenAuthenticationPolicy, _policies_requestPoli);

        var _super3 = _createSuper(BearerTokenAuthenticationPolicy);

        function BearerTokenAuthenticationPolicy(nextPolicy, options) {
          _classCallCheck(this, BearerTokenAuthenticationPolicy);

          return _super3.call(this, nextPolicy, options);
        }

        _createClass(BearerTokenAuthenticationPolicy, [{
          key: "sendRequest",
          value: function () {
            var _sendRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(webResource) {
              var _yield$getToken, token;

              return regeneratorRuntime.wrap(function _callee3$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      if (webResource.url.toLowerCase().startsWith("https://")) {
                        _context4.next = 2;
                        break;
                      }

                      throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");

                    case 2:
                      _context4.next = 4;
                      return getToken({
                        abortSignal: webResource.abortSignal,
                        tracingOptions: {
                          tracingContext: webResource.tracingContext
                        }
                      });

                    case 4:
                      _yield$getToken = _context4.sent;
                      token = _yield$getToken.token;
                      webResource.headers.set(_util_constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].HeaderConstants.AUTHORIZATION, "Bearer ".concat(token));
                      return _context4.abrupt("return", this._nextPolicy.sendRequest(webResource));

                    case 8:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee3, this);
            }));

            function sendRequest(_x6) {
              return _sendRequest.apply(this, arguments);
            }

            return sendRequest;
          }()
        }]);

        return BearerTokenAuthenticationPolicy;
      }(_policies_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]);

      return {
        create: function create(nextPolicy, options) {
          return new BearerTokenAuthenticationPolicy(nextPolicy, options);
        }
      };
    } //# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesDeserializationPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deserializationPolicy", function () {
      return deserializationPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultJsonContentTypes", function () {
      return defaultJsonContentTypes;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultXmlContentTypes", function () {
      return defaultXmlContentTypes;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DefaultDeserializationOptions", function () {
      return DefaultDeserializationOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DeserializationPolicy", function () {
      return DeserializationPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deserializeResponseBody", function () {
      return deserializeResponseBody;
    });
    /* harmony import */


    var _restError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../restError */
    "./node_modules/@azure/core-http/dist-esm/src/restError.js");
    /* harmony import */


    var _serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../serializer */
    "./node_modules/@azure/core-http/dist-esm/src/serializer.js");
    /* harmony import */


    var _util_xml__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/xml */
    "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _util_serializer_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they
     * pass through the HTTP pipeline.
     */


    function deserializationPolicy(deserializationContentTypes, parsingOptions) {
      return {
        create: function create(nextPolicy, options) {
          return new DeserializationPolicy(nextPolicy, options, deserializationContentTypes, parsingOptions);
        }
      };
    }

    var defaultJsonContentTypes = ["application/json", "text/json"];
    var defaultXmlContentTypes = ["application/xml", "application/atom+xml"];
    var DefaultDeserializationOptions = {
      expectedContentTypes: {
        json: defaultJsonContentTypes,
        xml: defaultXmlContentTypes
      }
    };
    /**
     * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the
     * HTTP pipeline.
     */

    var DeserializationPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA) {
      _inherits(DeserializationPolicy, _requestPolicy__WEBPA);

      var _super4 = _createSuper(DeserializationPolicy);

      function DeserializationPolicy(nextPolicy, requestPolicyOptions, deserializationContentTypes) {
        var _this2;

        var parsingOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

        _classCallCheck(this, DeserializationPolicy);

        var _a;

        _this2 = _super4.call(this, nextPolicy, requestPolicyOptions);
        _this2.jsonContentTypes = deserializationContentTypes && deserializationContentTypes.json || defaultJsonContentTypes;
        _this2.xmlContentTypes = deserializationContentTypes && deserializationContentTypes.xml || defaultXmlContentTypes;
        _this2.xmlCharKey = (_a = parsingOptions.xmlCharKey) !== null && _a !== void 0 ? _a : _util_serializer_common__WEBPACK_IMPORTED_MODULE_4__["XML_CHARKEY"];
        return _this2;
      }

      _createClass(DeserializationPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(request) {
            var _this3 = this;

            return regeneratorRuntime.wrap(function _callee6$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    return _context7.abrupt("return", this._nextPolicy.sendRequest(request).then(function (response) {
                      return deserializeResponseBody(_this3.jsonContentTypes, _this3.xmlContentTypes, response, {
                        xmlCharKey: _this3.xmlCharKey
                      });
                    }));

                  case 1:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee6, this);
          }));

          function sendRequest(_x7) {
            return _sendRequest2.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return DeserializationPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_3__["BaseRequestPolicy"]);

    function getOperationResponse(parsedResponse) {
      var result;
      var request = parsedResponse.request;
      var operationSpec = request.operationSpec;

      if (operationSpec) {
        var operationResponseGetter = request.operationResponseGetter;

        if (!operationResponseGetter) {
          result = operationSpec.responses[parsedResponse.status];
        } else {
          result = operationResponseGetter(operationSpec, parsedResponse);
        }
      }

      return result;
    }

    function shouldDeserializeResponse(parsedResponse) {
      var shouldDeserialize = parsedResponse.request.shouldDeserialize;
      var result;

      if (shouldDeserialize === undefined) {
        result = true;
      } else if (typeof shouldDeserialize === "boolean") {
        result = shouldDeserialize;
      } else {
        result = shouldDeserialize(parsedResponse);
      }

      return result;
    }

    function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      var _a, _b, _c;

      var updatedOptions = {
        rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : "",
        includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,
        xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_4__["XML_CHARKEY"]
      };
      return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then(function (parsedResponse) {
        if (!shouldDeserializeResponse(parsedResponse)) {
          return parsedResponse;
        }

        var operationSpec = parsedResponse.request.operationSpec;

        if (!operationSpec || !operationSpec.responses) {
          return parsedResponse;
        }

        var responseSpec = getOperationResponse(parsedResponse);

        var _handleErrorResponse = handleErrorResponse(parsedResponse, operationSpec, responseSpec),
            error = _handleErrorResponse.error,
            shouldReturnResponse = _handleErrorResponse.shouldReturnResponse;

        if (error) {
          throw error;
        } else if (shouldReturnResponse) {
          return parsedResponse;
        } // An operation response spec does exist for current status code, so
        // use it to deserialize the response.


        if (responseSpec) {
          if (responseSpec.bodyMapper) {
            var valueToDeserialize = parsedResponse.parsedBody;

            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_1__["MapperType"].Sequence) {
              valueToDeserialize = typeof valueToDeserialize === "object" ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName] : [];
            }

            try {
              parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, "operationRes.parsedBody", options);
            } catch (innerError) {
              var restError = new _restError__WEBPACK_IMPORTED_MODULE_0__["RestError"]("Error ".concat(innerError, " occurred in deserializing the responseBody - ").concat(parsedResponse.bodyAsText), undefined, parsedResponse.status, parsedResponse.request, parsedResponse);
              throw restError;
            }
          } else if (operationSpec.httpMethod === "HEAD") {
            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource
            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;
          }

          if (responseSpec.headersMapper) {
            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), "operationRes.parsedHeaders", options);
          }
        }

        return parsedResponse;
      });
    }

    function isOperationSpecEmpty(operationSpec) {
      var expectedStatusCodes = Object.keys(operationSpec.responses);
      return expectedStatusCodes.length === 0 || expectedStatusCodes.length === 1 && expectedStatusCodes[0] === "default";
    }

    function handleErrorResponse(parsedResponse, operationSpec, responseSpec) {
      var _a;

      var isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;
      var isExpectedStatusCode = isOperationSpecEmpty(operationSpec) ? isSuccessByStatus : !!responseSpec;

      if (isExpectedStatusCode) {
        if (responseSpec) {
          if (!responseSpec.isError) {
            return {
              error: null,
              shouldReturnResponse: false
            };
          }
        } else {
          return {
            error: null,
            shouldReturnResponse: false
          };
        }
      }

      var errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses["default"];
      var streaming = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status)) || parsedResponse.request.streamResponseBody;
      var initialErrorMessage = streaming ? "Unexpected status code: ".concat(parsedResponse.status) : parsedResponse.bodyAsText;
      var error = new _restError__WEBPACK_IMPORTED_MODULE_0__["RestError"](initialErrorMessage, undefined, parsedResponse.status, parsedResponse.request, parsedResponse); // If the item failed but there's no error spec or default spec to deserialize the error,
      // we should fail so we just throw the parsed response

      if (!errorResponseSpec) {
        throw error;
      }

      var defaultBodyMapper = errorResponseSpec.bodyMapper;
      var defaultHeadersMapper = errorResponseSpec.headersMapper;

      try {
        // If error response has a body, try to deserialize it using default body mapper.
        // Then try to extract error code & message from it
        if (parsedResponse.parsedBody) {
          var parsedBody = parsedResponse.parsedBody;
          var parsedError;

          if (defaultBodyMapper) {
            var valueToDeserialize = parsedBody;

            if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer__WEBPACK_IMPORTED_MODULE_1__["MapperType"].Sequence) {
              valueToDeserialize = typeof parsedBody === "object" ? parsedBody[defaultBodyMapper.xmlElementName] : [];
            }

            parsedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, "error.response.parsedBody");
          }

          var internalError = parsedBody.error || parsedError || parsedBody;
          error.code = internalError.code;

          if (internalError.message) {
            error.message = internalError.message;
          }

          if (defaultBodyMapper) {
            error.response.parsedBody = parsedError;
          }
        } // If error response has headers, try to deserialize it using default header mapper


        if (parsedResponse.headers && defaultHeadersMapper) {
          error.response.parsedHeaders = operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.rawHeaders(), "operationRes.parsedHeaders");
        }
      } catch (defaultError) {
        error.message = "Error \"".concat(defaultError.message, "\" occurred in deserializing the responseBody - \"").concat(parsedResponse.bodyAsText, "\" for the default response.");
      }

      return {
        error: error,
        shouldReturnResponse: false
      };
    }

    function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts) {
      var _a;

      var errorHandler = function errorHandler(err) {
        var msg = "Error \"".concat(err, "\" occurred while parsing the response body - ").concat(operationResponse.bodyAsText, ".");
        var errCode = err.code || _restError__WEBPACK_IMPORTED_MODULE_0__["RestError"].PARSE_ERROR;
        var e = new _restError__WEBPACK_IMPORTED_MODULE_0__["RestError"](msg, errCode, operationResponse.status, operationResponse.request, operationResponse);
        return Promise.reject(e);
      };

      var streaming = ((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) || operationResponse.request.streamResponseBody;

      if (!streaming && operationResponse.bodyAsText) {
        var text = operationResponse.bodyAsText;
        var contentType = operationResponse.headers.get("Content-Type") || "";
        var contentComponents = !contentType ? [] : contentType.split(";").map(function (component) {
          return component.toLowerCase();
        });

        if (contentComponents.length === 0 || contentComponents.some(function (component) {
          return jsonContentTypes.indexOf(component) !== -1;
        })) {
          return new Promise(function (resolve) {
            operationResponse.parsedBody = JSON.parse(text);
            resolve(operationResponse);
          })["catch"](errorHandler);
        } else if (contentComponents.some(function (component) {
          return xmlContentTypes.indexOf(component) !== -1;
        })) {
          return Object(_util_xml__WEBPACK_IMPORTED_MODULE_2__["parseXML"])(text, opts).then(function (body) {
            operationResponse.parsedBody = body;
            return operationResponse;
          })["catch"](errorHandler);
        }
      }

      return Promise.resolve(operationResponse);
    } //# sourceMappingURL=deserializationPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesDisableResponseDecompressionPolicyBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "disableResponseDecompressionPolicy", function () {
      return disableResponseDecompressionPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DisableResponseDecompressionPolicy", function () {
      return DisableResponseDecompressionPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /*
     * NOTE: When moving this file, please update "browser" section in package.json
     */


    var DisbleResponseDecompressionNotSupportedInBrowser = new Error("DisableResponseDecompressionPolicy is not supported in browser environment");
    /**
     * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting
     * to use it will results in error being thrown.
     */

    function disableResponseDecompressionPolicy() {
      return {
        create: function create(_nextPolicy, _options) {
          throw DisbleResponseDecompressionNotSupportedInBrowser;
        }
      };
    }

    var DisableResponseDecompressionPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA2) {
      _inherits(DisableResponseDecompressionPolicy, _requestPolicy__WEBPA2);

      var _super5 = _createSuper(DisableResponseDecompressionPolicy);

      function DisableResponseDecompressionPolicy(nextPolicy, options) {
        var _this4;

        _classCallCheck(this, DisableResponseDecompressionPolicy);

        _this4 = _super5.call(this, nextPolicy, options);
        throw DisbleResponseDecompressionNotSupportedInBrowser;
        return _this4;
      }

      _createClass(DisableResponseDecompressionPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_request) {
            return regeneratorRuntime.wrap(function _callee7$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    throw DisbleResponseDecompressionNotSupportedInBrowser;

                  case 1:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee7);
          }));

          function sendRequest(_x8) {
            return _sendRequest3.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return DisableResponseDecompressionPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=disableResponseDecompressionPolicy.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesExponentialRetryPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "exponentialRetryPolicy", function () {
      return exponentialRetryPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RetryMode", function () {
      return RetryMode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DefaultRetryOptions", function () {
      return DefaultRetryOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ExponentialRetryPolicy", function () {
      return ExponentialRetryPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/exponentialBackoffStrategy */
    "./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js");
    /* harmony import */


    var _restError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../restError */
    "./node_modules/@azure/core-http/dist-esm/src/restError.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../log */
    "./node_modules/@azure/core-http/dist-esm/src/log.js");
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function exponentialRetryPolicy(retryCount, retryInterval, maxRetryInterval) {
      return {
        create: function create(nextPolicy, options) {
          return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval);
        }
      };
    }
    /**
     * Describes the Retry Mode type. Currently supporting only Exponential.
     */


    var RetryMode;

    (function (RetryMode) {
      RetryMode[RetryMode["Exponential"] = 0] = "Exponential";
    })(RetryMode || (RetryMode = {}));

    var DefaultRetryOptions = {
      maxRetries: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_COUNT"],
      retryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_INTERVAL"],
      maxRetryDelayInMs: _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_MAX_RETRY_INTERVAL"]
    };
    /**
     * Instantiates a new "ExponentialRetryPolicyFilter" instance.
     */

    var ExponentialRetryPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA3) {
      _inherits(ExponentialRetryPolicy, _requestPolicy__WEBPA3);

      var _super6 = _createSuper(ExponentialRetryPolicy);

      /**
       * @param nextPolicy - The next RequestPolicy in the pipeline chain.
       * @param options - The options for this RequestPolicy.
       * @param retryCount - The client retry count.
       * @param retryInterval - The client retry interval, in milliseconds.
       * @param minRetryInterval - The minimum retry interval, in milliseconds.
       * @param maxRetryInterval - The maximum retry interval, in milliseconds.
       */
      function ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval) {
        var _this5;

        _classCallCheck(this, ExponentialRetryPolicy);

        _this5 = _super6.call(this, nextPolicy, options);
        _this5.retryCount = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_COUNT"];
        _this5.retryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_INTERVAL"];
        _this5.maxRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(maxRetryInterval) ? maxRetryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_MAX_RETRY_INTERVAL"];
        return _this5;
      }

      _createClass(ExponentialRetryPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this6 = this;

          return this._nextPolicy.sendRequest(request.clone()).then(function (response) {
            return retry(_this6, request, response);
          })["catch"](function (error) {
            return retry(_this6, request, error.response, undefined, error);
          });
        }
      }]);

      return ExponentialRetryPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]);

    function retry(_x9, _x10, _x11, _x12, _x13) {
      return _retry.apply(this, arguments);
    } //# sourceMappingURL=exponentialRetryPolicy.js.map

    /***/


    function _retry() {
      _retry = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(policy, request, response, retryData, requestError) {
        var shouldPolicyRetry, isAborted, res, err;
        return regeneratorRuntime.wrap(function _callee8$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                shouldPolicyRetry = function _shouldPolicyRetry(responseParam) {
                  var statusCode = responseParam === null || responseParam === void 0 ? void 0 : responseParam.status;

                  if (statusCode === 503 && (response === null || response === void 0 ? void 0 : response.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_4__["Constants"].HeaderConstants.RETRY_AFTER))) {
                    return false;
                  }

                  if (statusCode === undefined || statusCode < 500 && statusCode !== 408 || statusCode === 501 || statusCode === 505) {
                    return false;
                  }

                  return true;
                };

                retryData = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["updateRetryData"])({
                  retryInterval: policy.retryInterval,
                  minRetryInterval: 0,
                  maxRetryInterval: policy.maxRetryInterval
                }, retryData, requestError);
                isAborted = request.abortSignal && request.abortSignal.aborted;

                if (!(!isAborted && Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["shouldRetry"])(policy.retryCount, shouldPolicyRetry, retryData, response))) {
                  _context9.next = 19;
                  break;
                }

                _log__WEBPACK_IMPORTED_MODULE_3__["logger"].info("Retrying request in ".concat(retryData.retryInterval));

                _context9.prev = 5;
                _context9.next = 8;
                return Object(_util_delay__WEBPACK_IMPORTED_MODULE_5__["delay"])(retryData.retryInterval);

              case 8:
                _context9.next = 10;
                return policy._nextPolicy.sendRequest(request.clone());

              case 10:
                res = _context9.sent;
                return _context9.abrupt("return", retry(policy, request, res, retryData));

              case 14:
                _context9.prev = 14;
                _context9.t0 = _context9["catch"](5);
                return _context9.abrupt("return", retry(policy, request, response, retryData, _context9.t0));

              case 17:
                _context9.next = 25;
                break;

              case 19:
                if (!(isAborted || requestError || !response)) {
                  _context9.next = 24;
                  break;
                }

                // If the operation failed in the end, return all errors instead of just the last one
                err = retryData.error || new _restError__WEBPACK_IMPORTED_MODULE_2__["RestError"]("Failed to send the request.", _restError__WEBPACK_IMPORTED_MODULE_2__["RestError"].REQUEST_SEND_ERROR, response && response.status, response && response.request, response);
                throw err;

              case 24:
                return _context9.abrupt("return", response);

              case 25:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee8, null, [[5, 14]]);
      }));
      return _retry.apply(this, arguments);
    }
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesGenerateClientRequestIdPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateClientRequestIdPolicy", function () {
      return generateClientRequestIdPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GenerateClientRequestIdPolicy", function () {
      return GenerateClientRequestIdPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function generateClientRequestIdPolicy() {
      var requestIdHeaderName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "x-ms-client-request-id";
      return {
        create: function create(nextPolicy, options) {
          return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);
        }
      };
    }

    var GenerateClientRequestIdPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA4) {
      _inherits(GenerateClientRequestIdPolicy, _requestPolicy__WEBPA4);

      var _super7 = _createSuper(GenerateClientRequestIdPolicy);

      function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {
        var _this7;

        _classCallCheck(this, GenerateClientRequestIdPolicy);

        _this7 = _super7.call(this, nextPolicy, options);
        _this7._requestIdHeaderName = _requestIdHeaderName;
        return _this7;
      }

      _createClass(GenerateClientRequestIdPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          if (!request.headers.contains(this._requestIdHeaderName)) {
            request.headers.set(this._requestIdHeaderName, request.requestId);
          }

          return this._nextPolicy.sendRequest(request);
        }
      }]);

      return GenerateClientRequestIdPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=generateClientRequestIdPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesKeepAlivePolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DefaultKeepAliveOptions", function () {
      return DefaultKeepAliveOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "keepAlivePolicy", function () {
      return keepAlivePolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "KeepAlivePolicy", function () {
      return KeepAlivePolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var DefaultKeepAliveOptions = {
      enable: true
    };

    function keepAlivePolicy(keepAliveOptions) {
      return {
        create: function create(nextPolicy, options) {
          return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);
        }
      };
    }
    /**
     * KeepAlivePolicy is a policy used to control keep alive settings for every request.
     */


    var KeepAlivePolicy = /*#__PURE__*/function (_requestPolicy__WEBPA5) {
      _inherits(KeepAlivePolicy, _requestPolicy__WEBPA5);

      var _super8 = _createSuper(KeepAlivePolicy);

      /**
       * Creates an instance of KeepAlivePolicy.
       *
       * @param nextPolicy -
       * @param options -
       * @param keepAliveOptions -
       */
      function KeepAlivePolicy(nextPolicy, options, keepAliveOptions) {
        var _this8;

        _classCallCheck(this, KeepAlivePolicy);

        _this8 = _super8.call(this, nextPolicy, options);
        _this8.keepAliveOptions = keepAliveOptions;
        return _this8;
      }
      /**
       * Sends out request.
       *
       * @param request -
       * @returns
       */


      _createClass(KeepAlivePolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(request) {
            return regeneratorRuntime.wrap(function _callee9$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    request.keepAlive = this.keepAliveOptions.enable;
                    return _context10.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 2:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee9, this);
          }));

          function sendRequest(_x14) {
            return _sendRequest4.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return KeepAlivePolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=keepAlivePolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesLogPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "logPolicy", function () {
      return logPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LogPolicy", function () {
      return LogPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../log */
    "./node_modules/@azure/core-http/dist-esm/src/log.js");
    /* harmony import */


    var _util_sanitizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/sanitizer */
    "./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function logPolicy() {
      var loggingOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return {
        create: function create(nextPolicy, options) {
          return new LogPolicy(nextPolicy, options, loggingOptions);
        }
      };
    }

    var LogPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA6) {
      _inherits(LogPolicy, _requestPolicy__WEBPA6);

      var _super9 = _createSuper(LogPolicy);

      function LogPolicy(nextPolicy, options) {
        var _this9;

        var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
            _ref2$logger = _ref2.logger,
            logger = _ref2$logger === void 0 ? _log__WEBPACK_IMPORTED_MODULE_1__["logger"].info : _ref2$logger,
            _ref2$allowedHeaderNa = _ref2.allowedHeaderNames,
            allowedHeaderNames = _ref2$allowedHeaderNa === void 0 ? [] : _ref2$allowedHeaderNa,
            _ref2$allowedQueryPar = _ref2.allowedQueryParameters,
            allowedQueryParameters = _ref2$allowedQueryPar === void 0 ? [] : _ref2$allowedQueryPar;

        _classCallCheck(this, LogPolicy);

        _this9 = _super9.call(this, nextPolicy, options);
        _this9.logger = logger;
        _this9.sanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_2__["Sanitizer"]({
          allowedHeaderNames: allowedHeaderNames,
          allowedQueryParameters: allowedQueryParameters
        });
        return _this9;
      }
      /**
       * Header names whose values will be logged when logging is enabled. Defaults to
       * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers
       * specified in this field will be added to that list.  Any other values will
       * be written to logs as "REDACTED".
       * @deprecated Pass these into the constructor instead.
       */


      _createClass(LogPolicy, [{
        key: "allowedHeaderNames",
        get: function get() {
          return this.sanitizer.allowedHeaderNames;
        }
        /**
         * Header names whose values will be logged when logging is enabled. Defaults to
         * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers
         * specified in this field will be added to that list.  Any other values will
         * be written to logs as "REDACTED".
         * @deprecated Pass these into the constructor instead.
         */
        ,
        set: function set(allowedHeaderNames) {
          this.sanitizer.allowedHeaderNames = allowedHeaderNames;
        }
        /**
         * Query string names whose values will be logged when logging is enabled. By default no
         * query string values are logged.
         * @deprecated Pass these into the constructor instead.
         */

      }, {
        key: "allowedQueryParameters",
        get: function get() {
          return this.sanitizer.allowedQueryParameters;
        }
        /**
         * Query string names whose values will be logged when logging is enabled. By default no
         * query string values are logged.
         * @deprecated Pass these into the constructor instead.
         */
        ,
        set: function set(allowedQueryParameters) {
          this.sanitizer.allowedQueryParameters = allowedQueryParameters;
        }
      }, {
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this10 = this;

          if (!this.logger.enabled) return this._nextPolicy.sendRequest(request);
          this.logRequest(request);
          return this._nextPolicy.sendRequest(request).then(function (response) {
            return _this10.logResponse(response);
          });
        }
      }, {
        key: "logRequest",
        value: function logRequest(request) {
          this.logger("Request: ".concat(this.sanitizer.sanitize(request)));
        }
      }, {
        key: "logResponse",
        value: function logResponse(response) {
          this.logger("Response status code: ".concat(response.status));
          this.logger("Headers: ".concat(this.sanitizer.sanitize(response.headers)));
          return response;
        }
      }]);

      return LogPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=logPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesMsRestUserAgentPolicyBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDefaultUserAgentKey", function () {
      return getDefaultUserAgentKey;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPlatformSpecificData", function () {
      return getPlatformSpecificData;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function getDefaultUserAgentKey() {
      return "x-ms-useragent";
    }

    function getPlatformSpecificData() {
      var navigator = self.navigator;
      var osInfo = {
        key: "OS",
        value: (navigator.oscpu || navigator.platform).replace(" ", "")
      };
      return [osInfo];
    } //# sourceMappingURL=msRestUserAgentPolicy.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesNdJsonPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ndJsonPolicy", function () {
      return ndJsonPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // BaseRequestPolicy has a protected constructor.

    /* eslint-disable @typescript-eslint/no-useless-constructor */


    function ndJsonPolicy() {
      return {
        create: function create(nextPolicy, options) {
          return new NdJsonPolicy(nextPolicy, options);
        }
      };
    }
    /**
     * NdJsonPolicy that formats a JSON array as newline-delimited JSON
     */


    var NdJsonPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA7) {
      _inherits(NdJsonPolicy, _requestPolicy__WEBPA7);

      var _super10 = _createSuper(NdJsonPolicy);

      /**
       * Creates an instance of KeepAlivePolicy.
       */
      function NdJsonPolicy(nextPolicy, options) {
        _classCallCheck(this, NdJsonPolicy);

        return _super10.call(this, nextPolicy, options);
      }
      /**
       * Sends a request.
       */


      _createClass(NdJsonPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(request) {
            var body;
            return regeneratorRuntime.wrap(function _callee10$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    // There currently isn't a good way to bypass the serializer
                    if (typeof request.body === "string" && request.body.startsWith("[")) {
                      body = JSON.parse(request.body);

                      if (Array.isArray(body)) {
                        request.body = body.map(function (item) {
                          return JSON.stringify(item) + "\n";
                        }).join("");
                      }
                    }

                    return _context11.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 2:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee10, this);
          }));

          function sendRequest(_x15) {
            return _sendRequest5.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return NdJsonPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=ndJsonPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesProxyPolicyBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDefaultProxySettings", function () {
      return getDefaultProxySettings;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "proxyPolicy", function () {
      return proxyPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProxyPolicy", function () {
      return ProxyPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var proxyNotSupportedInBrowser = new Error("ProxyPolicy is not supported in browser environment");

    function getDefaultProxySettings(_proxyUrl) {
      return undefined;
    }

    function proxyPolicy(_proxySettings) {
      return {
        create: function create(_nextPolicy, _options) {
          throw proxyNotSupportedInBrowser;
        }
      };
    }

    var ProxyPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA8) {
      _inherits(ProxyPolicy, _requestPolicy__WEBPA8);

      var _super11 = _createSuper(ProxyPolicy);

      function ProxyPolicy(nextPolicy, options) {
        var _this11;

        _classCallCheck(this, ProxyPolicy);

        _this11 = _super11.call(this, nextPolicy, options);
        throw proxyNotSupportedInBrowser;
        return _this11;
      }

      _createClass(ProxyPolicy, [{
        key: "sendRequest",
        value: function sendRequest(_request) {
          throw proxyNotSupportedInBrowser;
        }
      }]);

      return ProxyPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=proxyPolicy.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesRedirectPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DefaultRedirectOptions", function () {
      return DefaultRedirectOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "redirectPolicy", function () {
      return redirectPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RedirectPolicy", function () {
      return RedirectPolicy;
    });
    /* harmony import */


    var _url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../url */
    "./node_modules/@azure/core-http/dist-esm/src/url.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Methods that are allowed to follow redirects 301 and 302
     */


    var allowedRedirect = ["GET", "HEAD"];
    var DefaultRedirectOptions = {
      handleRedirects: true,
      maxRetries: 20
    };

    function redirectPolicy() {
      var maximumRetries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;
      return {
        create: function create(nextPolicy, options) {
          return new RedirectPolicy(nextPolicy, options, maximumRetries);
        }
      };
    }

    var RedirectPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA9) {
      _inherits(RedirectPolicy, _requestPolicy__WEBPA9);

      var _super12 = _createSuper(RedirectPolicy);

      function RedirectPolicy(nextPolicy, options) {
        var _this12;

        var maxRetries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;

        _classCallCheck(this, RedirectPolicy);

        _this12 = _super12.call(this, nextPolicy, options);
        _this12.maxRetries = maxRetries;
        return _this12;
      }

      _createClass(RedirectPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this13 = this;

          return this._nextPolicy.sendRequest(request).then(function (response) {
            return handleRedirect(_this13, response, 0);
          });
        }
      }]);

      return RedirectPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_1__["BaseRequestPolicy"]);

    function handleRedirect(policy, response, currentRetries) {
      var request = response.request,
          status = response.status;
      var locationHeader = response.headers.get("location");

      if (locationHeader && (status === 300 || status === 301 && allowedRedirect.includes(request.method) || status === 302 && allowedRedirect.includes(request.method) || status === 303 && request.method === "POST" || status === 307) && (!policy.maxRetries || currentRetries < policy.maxRetries)) {
        var builder = _url__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(request.url);

        builder.setPath(locationHeader);
        request.url = builder.toString(); // POST request with Status code 303 should be converted into a
        // redirected GET request if the redirect url is present in the location header

        if (status === 303) {
          request.method = "GET";
          delete request.body;
        }

        return policy._nextPolicy.sendRequest(request).then(function (res) {
          return handleRedirect(policy, res, currentRetries + 1);
        });
      }

      return Promise.resolve(response);
    } //# sourceMappingURL=redirectPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesRequestPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BaseRequestPolicy", function () {
      return BaseRequestPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RequestPolicyOptions", function () {
      return RequestPolicyOptions;
    });
    /* harmony import */


    var _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../httpPipelineLogLevel */
    "./node_modules/@azure/core-http/dist-esm/src/httpPipelineLogLevel.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var BaseRequestPolicy = /*#__PURE__*/function () {
      function BaseRequestPolicy(_nextPolicy, _options) {
        _classCallCheck(this, BaseRequestPolicy);

        this._nextPolicy = _nextPolicy;
        this._options = _options;
      }
      /**
       * Get whether or not a log with the provided log level should be logged.
       * @param logLevel - The log level of the log that will be logged.
       * @returns Whether or not a log with the provided log level should be logged.
       */


      _createClass(BaseRequestPolicy, [{
        key: "shouldLog",
        value: function shouldLog(logLevel) {
          return this._options.shouldLog(logLevel);
        }
        /**
         * Attempt to log the provided message to the provided logger. If no logger was provided or if
         * the log level does not meat the logger's threshold, then nothing will be logged.
         * @param logLevel - The log level of this log.
         * @param message - The message of this log.
         */

      }, {
        key: "log",
        value: function log(logLevel, message) {
          this._options.log(logLevel, message);
        }
      }]);

      return BaseRequestPolicy;
    }();
    /**
     * Optional properties that can be used when creating a RequestPolicy.
     */


    var RequestPolicyOptions = /*#__PURE__*/function () {
      function RequestPolicyOptions(_logger) {
        _classCallCheck(this, RequestPolicyOptions);

        this._logger = _logger;
      }
      /**
       * Get whether or not a log with the provided log level should be logged.
       * @param logLevel - The log level of the log that will be logged.
       * @returns Whether or not a log with the provided log level should be logged.
       */


      _createClass(RequestPolicyOptions, [{
        key: "shouldLog",
        value: function shouldLog(logLevel) {
          return !!this._logger && logLevel !== _httpPipelineLogLevel__WEBPACK_IMPORTED_MODULE_0__["HttpPipelineLogLevel"].OFF && logLevel <= this._logger.minimumLogLevel;
        }
        /**
         * Attempt to log the provided message to the provided logger. If no logger was provided or if
         * the log level does not meet the logger's threshold, then nothing will be logged.
         * @param logLevel - The log level of this log.
         * @param message - The message of this log.
         */

      }, {
        key: "log",
        value: function log(logLevel, message) {
          if (this._logger && this.shouldLog(logLevel)) {
            this._logger.log(logLevel, message);
          }
        }
      }]);

      return RequestPolicyOptions;
    }(); //# sourceMappingURL=requestPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesRpRegistrationPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rpRegistrationPolicy", function () {
      return rpRegistrationPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RPRegistrationPolicy", function () {
      return RPRegistrationPolicy;
    });
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js");
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function rpRegistrationPolicy() {
      var retryTimeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;
      return {
        create: function create(nextPolicy, options) {
          return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);
        }
      };
    }

    var RPRegistrationPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA10) {
      _inherits(RPRegistrationPolicy, _requestPolicy__WEBPA10);

      var _super13 = _createSuper(RPRegistrationPolicy);

      function RPRegistrationPolicy(nextPolicy, options) {
        var _this14;

        var _retryTimeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;

        _classCallCheck(this, RPRegistrationPolicy);

        _this14 = _super13.call(this, nextPolicy, options);
        _this14._retryTimeout = _retryTimeout;
        return _this14;
      }

      _createClass(RPRegistrationPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this15 = this;

          return this._nextPolicy.sendRequest(request.clone()).then(function (response) {
            return registerIfNeeded(_this15, request, response);
          });
        }
      }]);

      return RPRegistrationPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_2__["BaseRequestPolicy"]);

    function registerIfNeeded(policy, request, response) {
      if (response.status === 409) {
        var rpName = checkRPNotRegisteredError(response.bodyAsText);

        if (rpName) {
          var urlPrefix = extractSubscriptionUrl(request.url);
          return registerRP(policy, urlPrefix, rpName, request) // Autoregistration of ${provider} failed for some reason. We will not return this error
          // instead will return the initial response with 409 status code back to the user.
          // do nothing here as we are returning the original response at the end of this method.
          ["catch"](function () {
            return false;
          }).then(function (registrationStatus) {
            if (registrationStatus) {
              // Retry the original request. We have to change the x-ms-client-request-id
              // otherwise Azure endpoint will return the initial 409 (cached) response.
              request.headers.set("x-ms-client-request-id", _util_utils__WEBPACK_IMPORTED_MODULE_1__["generateUuid"]());
              return policy._nextPolicy.sendRequest(request.clone());
            }

            return response;
          });
        }
      }

      return Promise.resolve(response);
    }
    /**
     * Reuses the headers of the original request and url (if specified).
     * @param originalRequest - The original request
     * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.
     * @returns A new request object with desired headers.
     */


    function getRequestEssentials(originalRequest) {
      var reuseUrlToo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var reqOptions = originalRequest.clone();

      if (reuseUrlToo) {
        reqOptions.url = originalRequest.url;
      } // We have to change the x-ms-client-request-id otherwise Azure endpoint
      // will return the initial 409 (cached) response.


      reqOptions.headers.set("x-ms-client-request-id", _util_utils__WEBPACK_IMPORTED_MODULE_1__["generateUuid"]()); // Set content-type to application/json

      reqOptions.headers.set("Content-Type", "application/json; charset=utf-8");
      return reqOptions;
    }
    /**
     * Validates the error code and message associated with 409 response status code. If it matches to that of
     * RP not registered then it returns the name of the RP else returns undefined.
     * @param body - The response body received after making the original request.
     * @returns The name of the RP if condition is satisfied else undefined.
     */


    function checkRPNotRegisteredError(body) {
      var result, responseBody;

      if (body) {
        try {
          responseBody = JSON.parse(body);
        } catch (err) {// do nothing;
        }

        if (responseBody && responseBody.error && responseBody.error.message && responseBody.error.code && responseBody.error.code === "MissingSubscriptionRegistration") {
          var matchRes = responseBody.error.message.match(/.*'(.*)'/i);

          if (matchRes) {
            result = matchRes.pop();
          }
        }
      }

      return result;
    }
    /**
     * Extracts the first part of the URL, just after subscription:
     * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/
     * @param url - The original request url
     * @returns The url prefix as explained above.
     */


    function extractSubscriptionUrl(url) {
      var result;
      var matchRes = url.match(/.*\/subscriptions\/[a-f0-9-]+\//gi);

      if (matchRes && matchRes[0]) {
        result = matchRes[0];
      } else {
        throw new Error("Unable to extract subscriptionId from the given url - ".concat(url, "."));
      }

      return result;
    }
    /**
     * Registers the given provider.
     * @param policy - The RPRegistrationPolicy this function is being called against.
     * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/
     * @param provider - The provider name to be registered.
     * @param originalRequest - The original request sent by the user that returned a 409 response
     * with a message that the provider is not registered.
     */


    function registerRP(_x16, _x17, _x18, _x19) {
      return _registerRP.apply(this, arguments);
    }
    /**
     * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.
     * Polling will happen till the registrationState property of the response body is "Registered".
     * @param policy - The RPRegistrationPolicy this function is being called against.
     * @param url - The request url for polling
     * @param originalRequest - The original request sent by the user that returned a 409 response
     * with a message that the provider is not registered.
     * @returns True if RP Registration is successful.
     */


    function _registerRP() {
      _registerRP = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(policy, urlPrefix, provider, originalRequest) {
        var postUrl, getUrl, reqOptions, response;
        return regeneratorRuntime.wrap(function _callee11$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                postUrl = "".concat(urlPrefix, "providers/").concat(provider, "/register?api-version=2016-02-01");
                getUrl = "".concat(urlPrefix, "providers/").concat(provider, "?api-version=2016-02-01");
                reqOptions = getRequestEssentials(originalRequest);
                reqOptions.method = "POST";
                reqOptions.url = postUrl;
                _context12.next = 7;
                return policy._nextPolicy.sendRequest(reqOptions);

              case 7:
                response = _context12.sent;

                if (!(response.status !== 200)) {
                  _context12.next = 10;
                  break;
                }

                throw new Error("Autoregistration of ".concat(provider, " failed. Please try registering manually."));

              case 10:
                return _context12.abrupt("return", getRegistrationStatus(policy, getUrl, originalRequest));

              case 11:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee11);
      }));
      return _registerRP.apply(this, arguments);
    }

    function getRegistrationStatus(_x20, _x21, _x22) {
      return _getRegistrationStatus.apply(this, arguments);
    } //# sourceMappingURL=rpRegistrationPolicy.js.map

    /***/


    function _getRegistrationStatus() {
      _getRegistrationStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(policy, url, originalRequest) {
        var reqOptions, res, obj;
        return regeneratorRuntime.wrap(function _callee12$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                reqOptions = getRequestEssentials(originalRequest);
                reqOptions.url = url;
                reqOptions.method = "GET";
                _context13.next = 5;
                return policy._nextPolicy.sendRequest(reqOptions);

              case 5:
                res = _context13.sent;
                obj = res.parsedBody;

                if (!(res.parsedBody && obj.registrationState && obj.registrationState === "Registered")) {
                  _context13.next = 11;
                  break;
                }

                return _context13.abrupt("return", true);

              case 11:
                _context13.next = 13;
                return Object(_util_delay__WEBPACK_IMPORTED_MODULE_0__["delay"])(policy._retryTimeout * 1000);

              case 13:
                return _context13.abrupt("return", getRegistrationStatus(policy, url, originalRequest));

              case 14:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee12);
      }));
      return _getRegistrationStatus.apply(this, arguments);
    }
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesSigningPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "signingPolicy", function () {
      return signingPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SigningPolicy", function () {
      return SigningPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function signingPolicy(authenticationProvider) {
      return {
        create: function create(nextPolicy, options) {
          return new SigningPolicy(nextPolicy, options, authenticationProvider);
        }
      };
    }

    var SigningPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA11) {
      _inherits(SigningPolicy, _requestPolicy__WEBPA11);

      var _super14 = _createSuper(SigningPolicy);

      function SigningPolicy(nextPolicy, options, authenticationProvider) {
        var _this16;

        _classCallCheck(this, SigningPolicy);

        _this16 = _super14.call(this, nextPolicy, options);
        _this16.authenticationProvider = authenticationProvider;
        return _this16;
      }

      _createClass(SigningPolicy, [{
        key: "signRequest",
        value: function signRequest(request) {
          return this.authenticationProvider.signRequest(request);
        }
      }, {
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this17 = this;

          return this.signRequest(request).then(function (nextRequest) {
            return _this17._nextPolicy.sendRequest(nextRequest);
          });
        }
      }]);

      return SigningPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=signingPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesSystemErrorRetryPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "systemErrorRetryPolicy", function () {
      return systemErrorRetryPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SystemErrorRetryPolicy", function () {
      return SystemErrorRetryPolicy;
    });
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/exponentialBackoffStrategy */
    "./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js");
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {
      return {
        create: function create(nextPolicy, options) {
          return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);
        }
      };
    }
    /**
     * @param retryCount - The client retry count.
     * @param retryInterval - The client retry interval, in milliseconds.
     * @param minRetryInterval - The minimum retry interval, in milliseconds.
     * @param maxRetryInterval - The maximum retry interval, in milliseconds.
     */


    var SystemErrorRetryPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA12) {
      _inherits(SystemErrorRetryPolicy, _requestPolicy__WEBPA12);

      var _super15 = _createSuper(SystemErrorRetryPolicy);

      function SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {
        var _this18;

        _classCallCheck(this, SystemErrorRetryPolicy);

        _this18 = _super15.call(this, nextPolicy, options);
        _this18.retryCount = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(retryCount) ? retryCount : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_COUNT"];
        _this18.retryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(retryInterval) ? retryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_RETRY_INTERVAL"];
        _this18.minRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(minRetryInterval) ? minRetryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_MIN_RETRY_INTERVAL"];
        _this18.maxRetryInterval = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["isNumber"])(maxRetryInterval) ? maxRetryInterval : _util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_CLIENT_MAX_RETRY_INTERVAL"];
        return _this18;
      }

      _createClass(SystemErrorRetryPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          var _this19 = this;

          return this._nextPolicy.sendRequest(request.clone())["catch"](function (error) {
            return retry(_this19, request, error.response, error);
          });
        }
      }]);

      return SystemErrorRetryPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]);

    function retry(_x23, _x24, _x25, _x26, _x27) {
      return _retry2.apply(this, arguments);
    } //# sourceMappingURL=systemErrorRetryPolicy.js.map

    /***/


    function _retry2() {
      _retry2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(policy, request, operationResponse, err, retryData) {
        var shouldPolicyRetry;
        return regeneratorRuntime.wrap(function _callee13$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                shouldPolicyRetry = function _shouldPolicyRetry2(_response, error) {
                  if (error && error.code && (error.code === "ETIMEDOUT" || error.code === "ESOCKETTIMEDOUT" || error.code === "ECONNREFUSED" || error.code === "ECONNRESET" || error.code === "ENOENT")) {
                    return true;
                  }

                  return false;
                };

                retryData = Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["updateRetryData"])(policy, retryData, err);

                if (!Object(_util_exponentialBackoffStrategy__WEBPACK_IMPORTED_MODULE_1__["shouldRetry"])(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {
                  _context14.next = 14;
                  break;
                }

                _context14.prev = 3;
                _context14.next = 6;
                return Object(_util_delay__WEBPACK_IMPORTED_MODULE_2__["delay"])(retryData.retryInterval);

              case 6:
                return _context14.abrupt("return", policy._nextPolicy.sendRequest(request.clone()));

              case 9:
                _context14.prev = 9;
                _context14.t0 = _context14["catch"](3);
                return _context14.abrupt("return", retry(policy, request, operationResponse, _context14.t0, retryData));

              case 12:
                _context14.next = 17;
                break;

              case 14:
                if (!err) {
                  _context14.next = 16;
                  break;
                }

                return _context14.abrupt("return", Promise.reject(retryData.error));

              case 16:
                return _context14.abrupt("return", operationResponse);

              case 17:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee13, null, [[3, 9]]);
      }));
      return _retry2.apply(this, arguments);
    }
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesThrottlingRetryPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "throttlingRetryPolicy", function () {
      return throttlingRetryPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ThrottlingRetryPolicy", function () {
      return ThrottlingRetryPolicy;
    });
    /* harmony import */


    var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/abort-controller */
    "./node_modules/@azure/abort-controller/dist-esm/src/index.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony import */


    var _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/throttlingRetryStrategy */
    "./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js");
    /* harmony import */


    var _util_delay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/delay */
    "./node_modules/@azure/core-http/dist-esm/src/util/delay.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var StatusCodes = _util_constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].HttpConstants.StatusCodes;

    function throttlingRetryPolicy() {
      return {
        create: function create(nextPolicy, options) {
          return new ThrottlingRetryPolicy(nextPolicy, options);
        }
      };
    }

    var StandardAbortMessage = "The operation was aborted.";
    /**
     * To learn more, please refer to
     * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,
     * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and
     * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors
     */

    var ThrottlingRetryPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA13) {
      _inherits(ThrottlingRetryPolicy, _requestPolicy__WEBPA13);

      var _super16 = _createSuper(ThrottlingRetryPolicy);

      function ThrottlingRetryPolicy(nextPolicy, options, _handleResponse) {
        var _this20;

        _classCallCheck(this, ThrottlingRetryPolicy);

        _this20 = _super16.call(this, nextPolicy, options);
        _this20.numberOfRetries = 0;
        _this20._handleResponse = _handleResponse || _this20._defaultResponseHandler;
        return _this20;
      }

      _createClass(ThrottlingRetryPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(httpRequest) {
            var response;
            return regeneratorRuntime.wrap(function _callee14$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    _context15.next = 2;
                    return this._nextPolicy.sendRequest(httpRequest.clone());

                  case 2:
                    response = _context15.sent;

                    if (!(response.status !== StatusCodes.TooManyRequests && response.status !== StatusCodes.ServiceUnavailable)) {
                      _context15.next = 7;
                      break;
                    }

                    return _context15.abrupt("return", response);

                  case 7:
                    return _context15.abrupt("return", this._handleResponse(httpRequest, response));

                  case 8:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee14, this);
          }));

          function sendRequest(_x28) {
            return _sendRequest6.apply(this, arguments);
          }

          return sendRequest;
        }()
      }, {
        key: "_defaultResponseHandler",
        value: function () {
          var _defaultResponseHandler2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(httpRequest, httpResponse) {
            var _a, retryAfterHeader, delayInMs;

            return regeneratorRuntime.wrap(function _callee15$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    retryAfterHeader = httpResponse.headers.get(_util_constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].HeaderConstants.RETRY_AFTER);

                    if (!retryAfterHeader) {
                      _context16.next = 14;
                      break;
                    }

                    delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);

                    if (!delayInMs) {
                      _context16.next = 14;
                      break;
                    }

                    this.numberOfRetries += 1;
                    _context16.next = 7;
                    return Object(_util_delay__WEBPACK_IMPORTED_MODULE_4__["delay"])(delayInMs, undefined, {
                      abortSignal: httpRequest.abortSignal,
                      abortErrorMsg: StandardAbortMessage
                    });

                  case 7:
                    if (!((_a = httpRequest.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted)) {
                      _context16.next = 9;
                      break;
                    }

                    throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__["AbortError"](StandardAbortMessage);

                  case 9:
                    if (!(this.numberOfRetries < _util_throttlingRetryStrategy__WEBPACK_IMPORTED_MODULE_3__["DEFAULT_CLIENT_MAX_RETRY_COUNT"])) {
                      _context16.next = 13;
                      break;
                    }

                    return _context16.abrupt("return", this.sendRequest(httpRequest));

                  case 13:
                    return _context16.abrupt("return", this._nextPolicy.sendRequest(httpRequest));

                  case 14:
                    return _context16.abrupt("return", httpResponse);

                  case 15:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee15, this);
          }));

          function _defaultResponseHandler(_x29, _x30) {
            return _defaultResponseHandler2.apply(this, arguments);
          }

          return _defaultResponseHandler;
        }()
      }], [{
        key: "parseRetryAfterHeader",
        value: function parseRetryAfterHeader(headerValue) {
          var retryAfterInSeconds = Number(headerValue);

          if (Number.isNaN(retryAfterInSeconds)) {
            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);
          } else {
            return retryAfterInSeconds * 1000;
          }
        }
      }, {
        key: "parseDateRetryAfterHeader",
        value: function parseDateRetryAfterHeader(headerValue) {
          try {
            var now = Date.now();
            var date = Date.parse(headerValue);
            var diff = date - now;
            return Number.isNaN(diff) ? undefined : diff;
          } catch (error) {
            return undefined;
          }
        }
      }]);

      return ThrottlingRetryPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_1__["BaseRequestPolicy"]); //# sourceMappingURL=throttlingRetryPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesTracingPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "tracingPolicy", function () {
      return tracingPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TracingPolicy", function () {
      return TracingPolicy;
    });
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../url */
    "./node_modules/@azure/core-http/dist-esm/src/url.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../log */
    "./node_modules/@azure/core-http/dist-esm/src/log.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var createSpan = Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["createSpanFunction"])({
      packagePrefix: "",
      namespace: ""
    });

    function tracingPolicy() {
      var tracingOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return {
        create: function create(nextPolicy, options) {
          return new TracingPolicy(nextPolicy, options, tracingOptions);
        }
      };
    }

    var TracingPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA14) {
      _inherits(TracingPolicy, _requestPolicy__WEBPA14);

      var _super17 = _createSuper(TracingPolicy);

      function TracingPolicy(nextPolicy, options, tracingOptions) {
        var _this21;

        _classCallCheck(this, TracingPolicy);

        _this21 = _super17.call(this, nextPolicy, options);
        _this21.userAgent = tracingOptions.userAgent;
        return _this21;
      }

      _createClass(TracingPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(request) {
            var span, response;
            return regeneratorRuntime.wrap(function _callee16$(_context17) {
              while (1) {
                switch (_context17.prev = _context17.next) {
                  case 0:
                    if (request.tracingContext) {
                      _context17.next = 2;
                      break;
                    }

                    return _context17.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 2:
                    span = this.tryCreateSpan(request);

                    if (span) {
                      _context17.next = 5;
                      break;
                    }

                    return _context17.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 5:
                    _context17.prev = 5;
                    _context17.next = 8;
                    return this._nextPolicy.sendRequest(request);

                  case 8:
                    response = _context17.sent;
                    this.tryProcessResponse(span, response);
                    return _context17.abrupt("return", response);

                  case 13:
                    _context17.prev = 13;
                    _context17.t0 = _context17["catch"](5);
                    this.tryProcessError(span, _context17.t0);
                    throw _context17.t0;

                  case 17:
                  case "end":
                    return _context17.stop();
                }
              }
            }, _callee16, this, [[5, 13]]);
          }));

          function sendRequest(_x31) {
            return _sendRequest7.apply(this, arguments);
          }

          return sendRequest;
        }()
      }, {
        key: "tryCreateSpan",
        value: function tryCreateSpan(request) {
          var _a;

          try {
            var path = _url__WEBPACK_IMPORTED_MODULE_2__["URLBuilder"].parse(request.url).getPath() || "/"; // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.
            // We can pass this as a separate parameter once we upgrade to the latest core-tracing.

            var _createSpan = createSpan(path, {
              tracingOptions: {
                spanOptions: Object.assign(Object.assign({}, request.spanOptions), {
                  kind: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["SpanKind"].CLIENT
                }),
                tracingContext: request.tracingContext
              }
            }),
                span = _createSpan.span; // If the span is not recording, don't do any more work.


            if (!span.isRecording()) {
              span.end();
              return undefined;
            }

            var namespaceFromContext = (_a = request.tracingContext) === null || _a === void 0 ? void 0 : _a.getValue(Symbol["for"]("az.namespace"));

            if (typeof namespaceFromContext === "string") {
              span.setAttribute("az.namespace", namespaceFromContext);
            }

            span.setAttributes({
              "http.method": request.method,
              "http.url": request.url,
              requestId: request.requestId
            });

            if (this.userAgent) {
              span.setAttribute("http.user_agent", this.userAgent);
            } // set headers


            var spanContext = span.spanContext();
            var traceParentHeader = Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["getTraceParentHeader"])(spanContext);

            if (traceParentHeader && Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["isSpanContextValid"])(spanContext)) {
              request.headers.set("traceparent", traceParentHeader);
              var traceState = spanContext.traceState && spanContext.traceState.serialize(); // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent

              if (traceState) {
                request.headers.set("tracestate", traceState);
              }
            }

            return span;
          } catch (error) {
            _log__WEBPACK_IMPORTED_MODULE_3__["logger"].warning("Skipping creating a tracing span due to an error: ".concat(error.message));

            return undefined;
          }
        }
      }, {
        key: "tryProcessError",
        value: function tryProcessError(span, err) {
          try {
            span.setStatus({
              code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["SpanStatusCode"].ERROR,
              message: err.message
            });

            if (err.statusCode) {
              span.setAttribute("http.status_code", err.statusCode);
            }

            span.end();
          } catch (error) {
            _log__WEBPACK_IMPORTED_MODULE_3__["logger"].warning("Skipping tracing span processing due to an error: ".concat(error.message));
          }
        }
      }, {
        key: "tryProcessResponse",
        value: function tryProcessResponse(span, response) {
          try {
            span.setAttribute("http.status_code", response.status);
            var serviceRequestId = response.headers.get("x-ms-request-id");

            if (serviceRequestId) {
              span.setAttribute("serviceRequestId", serviceRequestId);
            }

            span.setStatus({
              code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["SpanStatusCode"].OK
            });
            span.end();
          } catch (error) {
            _log__WEBPACK_IMPORTED_MODULE_3__["logger"].warning("Skipping tracing span processing due to an error: ".concat(error.message));
          }
        }
      }]);

      return TracingPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_1__["BaseRequestPolicy"]); //# sourceMappingURL=tracingPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js": function node_modulesAzureCoreHttpDistEsmSrcPoliciesUserAgentPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDefaultUserAgentHeaderName", function () {
      return getDefaultUserAgentHeaderName;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDefaultUserAgentValue", function () {
      return getDefaultUserAgentValue;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "userAgentPolicy", function () {
      return userAgentPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UserAgentPolicy", function () {
      return UserAgentPolicy;
    });
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js");
    /* harmony import */


    var _util_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony import */


    var _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./msRestUserAgentPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/msRestUserAgentPolicy.browser.js");
    /* harmony import */


    var _requestPolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function getRuntimeInfo() {
      var msRestRuntime = {
        key: "core-http",
        value: _util_constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].coreHttpVersion
      };
      return [msRestRuntime];
    }

    function getUserAgentString(telemetryInfo) {
      var keySeparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : " ";
      var valueSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "/";
      return telemetryInfo.map(function (info) {
        var value = info.value ? "".concat(valueSeparator).concat(info.value) : "";
        return "".concat(info.key).concat(value);
      }).join(keySeparator);
    }

    var getDefaultUserAgentHeaderName = _msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_2__["getDefaultUserAgentKey"];

    function getDefaultUserAgentValue() {
      var runtimeInfo = getRuntimeInfo();
      var platformSpecificData = Object(_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_2__["getPlatformSpecificData"])();
      var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));
      return userAgent;
    }

    function userAgentPolicy(userAgentData) {
      var key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null ? Object(_msRestUserAgentPolicy__WEBPACK_IMPORTED_MODULE_2__["getDefaultUserAgentKey"])() : userAgentData.key;
      var value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null ? getDefaultUserAgentValue() : userAgentData.value;
      return {
        create: function create(nextPolicy, options) {
          return new UserAgentPolicy(nextPolicy, options, key, value);
        }
      };
    }

    var UserAgentPolicy = /*#__PURE__*/function (_requestPolicy__WEBPA15) {
      _inherits(UserAgentPolicy, _requestPolicy__WEBPA15);

      var _super18 = _createSuper(UserAgentPolicy);

      function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {
        var _this22;

        _classCallCheck(this, UserAgentPolicy);

        _this22 = _super18.call(this, _nextPolicy, _options);
        _this22._nextPolicy = _nextPolicy;
        _this22._options = _options;
        _this22.headerKey = headerKey;
        _this22.headerValue = headerValue;
        return _this22;
      }

      _createClass(UserAgentPolicy, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          this.addUserAgentHeader(request);
          return this._nextPolicy.sendRequest(request);
        }
      }, {
        key: "addUserAgentHeader",
        value: function addUserAgentHeader(request) {
          if (!request.headers) {
            request.headers = new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
          }

          if (!request.headers.get(this.headerKey) && this.headerValue) {
            request.headers.set(this.headerKey, this.headerValue);
          }
        }
      }]);

      return UserAgentPolicy;
    }(_requestPolicy__WEBPACK_IMPORTED_MODULE_3__["BaseRequestPolicy"]); //# sourceMappingURL=userAgentPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js": function node_modulesAzureCoreHttpDistEsmSrcQueryCollectionFormatJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "QueryCollectionFormat", function () {
      return QueryCollectionFormat;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * The format that will be used to join an array of values together for a query parameter value.
     */


    var QueryCollectionFormat;

    (function (QueryCollectionFormat) {
      QueryCollectionFormat["Csv"] = ",";
      QueryCollectionFormat["Ssv"] = " ";
      QueryCollectionFormat["Tsv"] = "\t";
      QueryCollectionFormat["Pipes"] = "|";
      QueryCollectionFormat["Multi"] = "Multi";
    })(QueryCollectionFormat || (QueryCollectionFormat = {})); //# sourceMappingURL=queryCollectionFormat.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/restError.js": function node_modulesAzureCoreHttpDistEsmSrcRestErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RestError", function () {
      return RestError;
    });
    /* harmony import */


    var _util_inspect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./util/inspect */
    "./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js");
    /* harmony import */


    var _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./util/sanitizer */
    "./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var errorSanitizer = new _util_sanitizer__WEBPACK_IMPORTED_MODULE_1__["Sanitizer"]();

    var RestError = /*#__PURE__*/function (_Error, _util_inspect__WEBPAC) {
      _inherits(RestError, _Error);

      var _super19 = _createSuper(RestError);

      function RestError(message, code, statusCode, request, response) {
        var _this23;

        _classCallCheck(this, RestError);

        _this23 = _super19.call(this, message);
        _this23.name = "RestError";
        _this23.code = code;
        _this23.statusCode = statusCode;
        _this23.request = request;
        _this23.response = response;
        Object.setPrototypeOf(_assertThisInitialized(_this23), RestError.prototype);
        return _this23;
      }
      /**
       * Logging method for util.inspect in Node
       */


      _createClass(RestError, [{
        key: _util_inspect__WEBPAC,
        value: function value() {
          return "RestError: ".concat(this.message, " \n ").concat(errorSanitizer.sanitize(this));
        }
      }]);

      return RestError;
    }( /*#__PURE__*/_wrapNativeSuper(Error), _util_inspect__WEBPACK_IMPORTED_MODULE_0__["custom"]);

    RestError.REQUEST_SEND_ERROR = "REQUEST_SEND_ERROR";
    RestError.PARSE_ERROR = "PARSE_ERROR"; //# sourceMappingURL=restError.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/serializer.js": function node_modulesAzureCoreHttpDistEsmSrcSerializerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Serializer", function () {
      return Serializer;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "serializeObject", function () {
      return serializeObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MapperType", function () {
      return MapperType;
    });
    /* harmony import */


    var _util_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./util/base64 */
    "./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js");
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js");
    /* harmony import */


    var _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./util/serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /* eslint-disable eqeqeq */


    var Serializer = /*#__PURE__*/function () {
      function Serializer() {
        var modelMappers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var isXML = arguments.length > 1 ? arguments[1] : undefined;

        _classCallCheck(this, Serializer);

        this.modelMappers = modelMappers;
        this.isXML = isXML;
      }

      _createClass(Serializer, [{
        key: "validateConstraints",
        value: function validateConstraints(mapper, value, objectName) {
          var failValidation = function failValidation(constraintName, constraintValue) {
            throw new Error("\"".concat(objectName, "\" with value \"").concat(value, "\" should satisfy the constraint \"").concat(constraintName, "\": ").concat(constraintValue, "."));
          };

          if (mapper.constraints && value != undefined) {
            var valueAsNumber = value;
            var _mapper$constraints = mapper.constraints,
                ExclusiveMaximum = _mapper$constraints.ExclusiveMaximum,
                ExclusiveMinimum = _mapper$constraints.ExclusiveMinimum,
                InclusiveMaximum = _mapper$constraints.InclusiveMaximum,
                InclusiveMinimum = _mapper$constraints.InclusiveMinimum,
                MaxItems = _mapper$constraints.MaxItems,
                MaxLength = _mapper$constraints.MaxLength,
                MinItems = _mapper$constraints.MinItems,
                MinLength = _mapper$constraints.MinLength,
                MultipleOf = _mapper$constraints.MultipleOf,
                Pattern = _mapper$constraints.Pattern,
                UniqueItems = _mapper$constraints.UniqueItems;

            if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {
              failValidation("ExclusiveMaximum", ExclusiveMaximum);
            }

            if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {
              failValidation("ExclusiveMinimum", ExclusiveMinimum);
            }

            if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {
              failValidation("InclusiveMaximum", InclusiveMaximum);
            }

            if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {
              failValidation("InclusiveMinimum", InclusiveMinimum);
            }

            var valueAsArray = value;

            if (MaxItems != undefined && valueAsArray.length > MaxItems) {
              failValidation("MaxItems", MaxItems);
            }

            if (MaxLength != undefined && valueAsArray.length > MaxLength) {
              failValidation("MaxLength", MaxLength);
            }

            if (MinItems != undefined && valueAsArray.length < MinItems) {
              failValidation("MinItems", MinItems);
            }

            if (MinLength != undefined && valueAsArray.length < MinLength) {
              failValidation("MinLength", MinLength);
            }

            if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {
              failValidation("MultipleOf", MultipleOf);
            }

            if (Pattern) {
              var pattern = typeof Pattern === "string" ? new RegExp(Pattern) : Pattern;

              if (typeof value !== "string" || value.match(pattern) === null) {
                failValidation("Pattern", Pattern);
              }
            }

            if (UniqueItems && valueAsArray.some(function (item, i, ar) {
              return ar.indexOf(item) !== i;
            })) {
              failValidation("UniqueItems", UniqueItems);
            }
          }
        }
        /**
         * Serialize the given object based on its metadata defined in the mapper
         *
         * @param mapper - The mapper which defines the metadata of the serializable object
         * @param object - A valid Javascript object to be serialized
         * @param objectName - Name of the serialized object
         * @param options - additional options to deserialization
         * @returns A valid serialized Javascript object
         */

      }, {
        key: "serialize",
        value: function serialize(mapper, object, objectName) {
          var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

          var _a, _b, _c;

          var updatedOptions = {
            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : "",
            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,
            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_CHARKEY"]
          };
          var payload = {};
          var mapperType = mapper.type.name;

          if (!objectName) {
            objectName = mapper.serializedName;
          }

          if (mapperType.match(/^Sequence$/i) !== null) {
            payload = [];
          }

          if (mapper.isConstant) {
            object = mapper.defaultValue;
          } // This table of allowed values should help explain
          // the mapper.required and mapper.nullable properties.
          // X means "neither undefined or null are allowed".
          //           || required
          //           || true      | false
          //  nullable || ==========================
          //      true || null      | undefined/null
          //     false || X         | undefined
          // undefined || X         | undefined/null


          var required = mapper.required,
              nullable = mapper.nullable;

          if (required && nullable && object === undefined) {
            throw new Error("".concat(objectName, " cannot be undefined."));
          }

          if (required && !nullable && object == undefined) {
            throw new Error("".concat(objectName, " cannot be null or undefined."));
          }

          if (!required && nullable === false && object === null) {
            throw new Error("".concat(objectName, " cannot be null."));
          }

          if (object == undefined) {
            payload = object;
          } else {
            // Validate Constraints if any
            this.validateConstraints(mapper, object, objectName);

            if (mapperType.match(/^any$/i) !== null) {
              payload = object;
            } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {
              payload = serializeBasicTypes(mapperType, objectName, object);
            } else if (mapperType.match(/^Enum$/i) !== null) {
              var enumMapper = mapper;
              payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);
            } else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {
              payload = serializeDateTypes(mapperType, object, objectName);
            } else if (mapperType.match(/^ByteArray$/i) !== null) {
              payload = serializeByteArrayType(objectName, object);
            } else if (mapperType.match(/^Base64Url$/i) !== null) {
              payload = serializeBase64UrlType(objectName, object);
            } else if (mapperType.match(/^Sequence$/i) !== null) {
              payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);
            } else if (mapperType.match(/^Dictionary$/i) !== null) {
              payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);
            } else if (mapperType.match(/^Composite$/i) !== null) {
              payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);
            }
          }

          return payload;
        }
        /**
         * Deserialize the given object based on its metadata defined in the mapper
         *
         * @param mapper - The mapper which defines the metadata of the serializable object
         * @param responseBody - A valid Javascript entity to be deserialized
         * @param objectName - Name of the deserialized object
         * @param options - Controls behavior of XML parser and builder.
         * @returns A valid deserialized Javascript object
         */

      }, {
        key: "deserialize",
        value: function deserialize(mapper, responseBody, objectName) {
          var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

          var _a, _b, _c;

          var updatedOptions = {
            rootName: (_a = options.rootName) !== null && _a !== void 0 ? _a : "",
            includeRoot: (_b = options.includeRoot) !== null && _b !== void 0 ? _b : false,
            xmlCharKey: (_c = options.xmlCharKey) !== null && _c !== void 0 ? _c : _util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_CHARKEY"]
          };

          if (responseBody == undefined) {
            if (this.isXML && mapper.type.name === "Sequence" && !mapper.xmlIsWrapped) {
              // Edge case for empty XML non-wrapped lists. xml2js can't distinguish
              // between the list being empty versus being missing,
              // so let's do the more user-friendly thing and return an empty list.
              responseBody = [];
            } // specifically check for undefined as default value can be a falsey value `0, "", false, null`


            if (mapper.defaultValue !== undefined) {
              responseBody = mapper.defaultValue;
            }

            return responseBody;
          }

          var payload;
          var mapperType = mapper.type.name;

          if (!objectName) {
            objectName = mapper.serializedName;
          }

          if (mapperType.match(/^Composite$/i) !== null) {
            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);
          } else {
            if (this.isXML) {
              var xmlCharKey = updatedOptions.xmlCharKey;
              var castResponseBody = responseBody;
              /**
               * If the mapper specifies this as a non-composite type value but the responseBody contains
               * both header ("$" i.e., XML_ATTRKEY) and body ("#" i.e., XML_CHARKEY) properties,
               * then just reduce the responseBody value to the body ("#" i.e., XML_CHARKEY) property.
               */

              if (castResponseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] != undefined && castResponseBody[xmlCharKey] != undefined) {
                responseBody = castResponseBody[xmlCharKey];
              }
            }

            if (mapperType.match(/^Number$/i) !== null) {
              payload = parseFloat(responseBody);

              if (isNaN(payload)) {
                payload = responseBody;
              }
            } else if (mapperType.match(/^Boolean$/i) !== null) {
              if (responseBody === "true") {
                payload = true;
              } else if (responseBody === "false") {
                payload = false;
              } else {
                payload = responseBody;
              }
            } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {
              payload = responseBody;
            } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {
              payload = new Date(responseBody);
            } else if (mapperType.match(/^UnixTime$/i) !== null) {
              payload = unixTimeToDate(responseBody);
            } else if (mapperType.match(/^ByteArray$/i) !== null) {
              payload = _util_base64__WEBPACK_IMPORTED_MODULE_0__["decodeString"](responseBody);
            } else if (mapperType.match(/^Base64Url$/i) !== null) {
              payload = base64UrlToByteArray(responseBody);
            } else if (mapperType.match(/^Sequence$/i) !== null) {
              payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);
            } else if (mapperType.match(/^Dictionary$/i) !== null) {
              payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);
            }
          }

          if (mapper.isConstant) {
            payload = mapper.defaultValue;
          }

          return payload;
        }
      }]);

      return Serializer;
    }();

    function trimEnd(str, ch) {
      var len = str.length;

      while (len - 1 >= 0 && str[len - 1] === ch) {
        --len;
      }

      return str.substr(0, len);
    }

    function bufferToBase64Url(buffer) {
      if (!buffer) {
        return undefined;
      }

      if (!(buffer instanceof Uint8Array)) {
        throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");
      } // Uint8Array to Base64.


      var str = _util_base64__WEBPACK_IMPORTED_MODULE_0__["encodeByteArray"](buffer); // Base64 to Base64Url.


      return trimEnd(str, "=").replace(/\+/g, "-").replace(/\//g, "_");
    }

    function base64UrlToByteArray(str) {
      if (!str) {
        return undefined;
      }

      if (str && typeof str.valueOf() !== "string") {
        throw new Error("Please provide an input of type string for converting to Uint8Array");
      } // Base64Url to Base64.


      str = str.replace(/-/g, "+").replace(/_/g, "/"); // Base64 to Uint8Array.

      return _util_base64__WEBPACK_IMPORTED_MODULE_0__["decodeString"](str);
    }

    function splitSerializeName(prop) {
      var classes = [];
      var partialclass = "";

      if (prop) {
        var subwords = prop.split(".");

        var _iterator2 = _createForOfIteratorHelper(subwords),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var item = _step2.value;

            if (item.charAt(item.length - 1) === "\\") {
              partialclass += item.substr(0, item.length - 1) + ".";
            } else {
              partialclass += item;
              classes.push(partialclass);
              partialclass = "";
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }

      return classes;
    }

    function dateToUnixTime(d) {
      if (!d) {
        return undefined;
      }

      if (typeof d.valueOf() === "string") {
        d = new Date(d);
      }

      return Math.floor(d.getTime() / 1000);
    }

    function unixTimeToDate(n) {
      if (!n) {
        return undefined;
      }

      return new Date(n * 1000);
    }

    function serializeBasicTypes(typeName, objectName, value) {
      if (value !== null && value !== undefined) {
        if (typeName.match(/^Number$/i) !== null) {
          if (typeof value !== "number") {
            throw new Error("".concat(objectName, " with value ").concat(value, " must be of type number."));
          }
        } else if (typeName.match(/^String$/i) !== null) {
          if (typeof value.valueOf() !== "string") {
            throw new Error("".concat(objectName, " with value \"").concat(value, "\" must be of type string."));
          }
        } else if (typeName.match(/^Uuid$/i) !== null) {
          if (!(typeof value.valueOf() === "string" && _util_utils__WEBPACK_IMPORTED_MODULE_1__["isValidUuid"](value))) {
            throw new Error("".concat(objectName, " with value \"").concat(value, "\" must be of type string and a valid uuid."));
          }
        } else if (typeName.match(/^Boolean$/i) !== null) {
          if (typeof value !== "boolean") {
            throw new Error("".concat(objectName, " with value ").concat(value, " must be of type boolean."));
          }
        } else if (typeName.match(/^Stream$/i) !== null) {
          var objectType = typeof value;

          if (objectType !== "string" && objectType !== "function" && !(value instanceof ArrayBuffer) && !ArrayBuffer.isView(value) && !((typeof Blob === "function" || typeof Blob === "object") && value instanceof Blob)) {
            throw new Error("".concat(objectName, " must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream."));
          }
        }
      }

      return value;
    }

    function serializeEnumType(objectName, allowedValues, value) {
      if (!allowedValues) {
        throw new Error("Please provide a set of allowedValues to validate ".concat(objectName, " as an Enum Type."));
      }

      var isPresent = allowedValues.some(function (item) {
        if (typeof item.valueOf() === "string") {
          return item.toLowerCase() === value.toLowerCase();
        }

        return item === value;
      });

      if (!isPresent) {
        throw new Error("".concat(value, " is not a valid value for ").concat(objectName, ". The valid values are: ").concat(JSON.stringify(allowedValues), "."));
      }

      return value;
    }

    function serializeByteArrayType(objectName, value) {
      var returnValue = "";

      if (value != undefined) {
        if (!(value instanceof Uint8Array)) {
          throw new Error("".concat(objectName, " must be of type Uint8Array."));
        }

        returnValue = _util_base64__WEBPACK_IMPORTED_MODULE_0__["encodeByteArray"](value);
      }

      return returnValue;
    }

    function serializeBase64UrlType(objectName, value) {
      var returnValue = "";

      if (value != undefined) {
        if (!(value instanceof Uint8Array)) {
          throw new Error("".concat(objectName, " must be of type Uint8Array."));
        }

        returnValue = bufferToBase64Url(value) || "";
      }

      return returnValue;
    }

    function serializeDateTypes(typeName, value, objectName) {
      if (value != undefined) {
        if (typeName.match(/^Date$/i) !== null) {
          if (!(value instanceof Date || typeof value.valueOf() === "string" && !isNaN(Date.parse(value)))) {
            throw new Error("".concat(objectName, " must be an instanceof Date or a string in ISO8601 format."));
          }

          value = value instanceof Date ? value.toISOString().substring(0, 10) : new Date(value).toISOString().substring(0, 10);
        } else if (typeName.match(/^DateTime$/i) !== null) {
          if (!(value instanceof Date || typeof value.valueOf() === "string" && !isNaN(Date.parse(value)))) {
            throw new Error("".concat(objectName, " must be an instanceof Date or a string in ISO8601 format."));
          }

          value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();
        } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {
          if (!(value instanceof Date || typeof value.valueOf() === "string" && !isNaN(Date.parse(value)))) {
            throw new Error("".concat(objectName, " must be an instanceof Date or a string in RFC-1123 format."));
          }

          value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();
        } else if (typeName.match(/^UnixTime$/i) !== null) {
          if (!(value instanceof Date || typeof value.valueOf() === "string" && !isNaN(Date.parse(value)))) {
            throw new Error("".concat(objectName, " must be an instanceof Date or a string in RFC-1123/ISO8601 format ") + "for it to be serialized in UnixTime/Epoch format.");
          }

          value = dateToUnixTime(value);
        } else if (typeName.match(/^TimeSpan$/i) !== null) {
          if (!_util_utils__WEBPACK_IMPORTED_MODULE_1__["isDuration"](value)) {
            throw new Error("".concat(objectName, " must be a string in ISO 8601 format. Instead was \"").concat(value, "\"."));
          }
        }
      }

      return value;
    }

    function serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {
      if (!Array.isArray(object)) {
        throw new Error("".concat(objectName, " must be of type Array."));
      }

      var elementType = mapper.type.element;

      if (!elementType || typeof elementType !== "object") {
        throw new Error("element\" metadata for an Array must be defined in the " + "mapper and it must of type \"object\" in ".concat(objectName, "."));
      }

      var tempArray = [];

      for (var i = 0; i < object.length; i++) {
        var serializedValue = serializer.serialize(elementType, object[i], objectName, options);

        if (isXml && elementType.xmlNamespace) {
          var xmlnsKey = elementType.xmlNamespacePrefix ? "xmlns:".concat(elementType.xmlNamespacePrefix) : "xmlns";

          if (elementType.type.name === "Composite") {
            tempArray[i] = Object.assign({}, serializedValue);
            tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = _defineProperty({}, xmlnsKey, elementType.xmlNamespace);
          } else {
            tempArray[i] = {};
            tempArray[i][options.xmlCharKey] = serializedValue;
            tempArray[i][_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = _defineProperty({}, xmlnsKey, elementType.xmlNamespace);
          }
        } else {
          tempArray[i] = serializedValue;
        }
      }

      return tempArray;
    }

    function serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {
      if (typeof object !== "object") {
        throw new Error("".concat(objectName, " must be of type object."));
      }

      var valueType = mapper.type.value;

      if (!valueType || typeof valueType !== "object") {
        throw new Error("\"value\" metadata for a Dictionary must be defined in the " + "mapper and it must of type \"object\" in ".concat(objectName, "."));
      }

      var tempDictionary = {};

      for (var _i3 = 0, _Object$keys = Object.keys(object); _i3 < _Object$keys.length; _i3++) {
        var key = _Object$keys[_i3];
        var serializedValue = serializer.serialize(valueType, object[key], objectName, options); // If the element needs an XML namespace we need to add it within the $ property

        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);
      } // Add the namespace to the root element if needed


      if (isXml && mapper.xmlNamespace) {
        var xmlnsKey = mapper.xmlNamespacePrefix ? "xmlns:".concat(mapper.xmlNamespacePrefix) : "xmlns";
        var result = tempDictionary;
        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = _defineProperty({}, xmlnsKey, mapper.xmlNamespace);
        return result;
      }

      return tempDictionary;
    }
    /**
     * Resolves the additionalProperties property from a referenced mapper
     * @param serializer - The serializer containing the entire set of mappers
     * @param mapper - The composite mapper to resolve
     * @param objectName - Name of the object being serialized
     */


    function resolveAdditionalProperties(serializer, mapper, objectName) {
      var additionalProperties = mapper.type.additionalProperties;

      if (!additionalProperties && mapper.type.className) {
        var modelMapper = resolveReferencedMapper(serializer, mapper, objectName);
        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;
      }

      return additionalProperties;
    }
    /**
     * Finds the mapper referenced by className
     * @param serializer - The serializer containing the entire set of mappers
     * @param mapper - The composite mapper to resolve
     * @param objectName - Name of the object being serialized
     */


    function resolveReferencedMapper(serializer, mapper, objectName) {
      var className = mapper.type.className;

      if (!className) {
        throw new Error("Class name for model \"".concat(objectName, "\" is not provided in the mapper \"").concat(JSON.stringify(mapper, undefined, 2), "\"."));
      }

      return serializer.modelMappers[className];
    }
    /**
     * Resolves a composite mapper's modelProperties.
     * @param serializer - The serializer containing the entire set of mappers
     * @param mapper - The composite mapper to resolve
     */


    function resolveModelProperties(serializer, mapper, objectName) {
      var modelProps = mapper.type.modelProperties;

      if (!modelProps) {
        var modelMapper = resolveReferencedMapper(serializer, mapper, objectName);

        if (!modelMapper) {
          throw new Error("mapper() cannot be null or undefined for model \"".concat(mapper.type.className, "\"."));
        }

        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;

        if (!modelProps) {
          throw new Error("modelProperties cannot be null or undefined in the " + "mapper \"".concat(JSON.stringify(modelMapper), "\" of type \"").concat(mapper.type.className, "\" for object \"").concat(objectName, "\"."));
        }
      }

      return modelProps;
    }

    function serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {
      if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {
        mapper = getPolymorphicMapper(serializer, mapper, object, "clientName");
      }

      if (object != undefined) {
        var payload = {};
        var modelProps = resolveModelProperties(serializer, mapper, objectName);

        for (var _i4 = 0, _Object$keys2 = Object.keys(modelProps); _i4 < _Object$keys2.length; _i4++) {
          var key = _Object$keys2[_i4];
          var propertyMapper = modelProps[key];

          if (propertyMapper.readOnly) {
            continue;
          }

          var propName = void 0;
          var parentObject = payload;

          if (serializer.isXML) {
            if (propertyMapper.xmlIsWrapped) {
              propName = propertyMapper.xmlName;
            } else {
              propName = propertyMapper.xmlElementName || propertyMapper.xmlName;
            }
          } else {
            var paths = splitSerializeName(propertyMapper.serializedName);
            propName = paths.pop();

            var _iterator3 = _createForOfIteratorHelper(paths),
                _step3;

            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var pathName = _step3.value;
                var childObject = parentObject[pathName];

                if (childObject == undefined && (object[key] != undefined || propertyMapper.defaultValue !== undefined)) {
                  parentObject[pathName] = {};
                }

                parentObject = parentObject[pathName];
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          }

          if (parentObject != undefined) {
            if (isXml && mapper.xmlNamespace) {
              var xmlnsKey = mapper.xmlNamespacePrefix ? "xmlns:".concat(mapper.xmlNamespacePrefix) : "xmlns";
              parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = Object.assign(Object.assign({}, parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]]), _defineProperty({}, xmlnsKey, mapper.xmlNamespace));
            }

            var propertyObjectName = propertyMapper.serializedName !== "" ? objectName + "." + propertyMapper.serializedName : objectName;
            var toSerialize = object[key];
            var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);

            if (polymorphicDiscriminator && polymorphicDiscriminator.clientName === key && toSerialize == undefined) {
              toSerialize = mapper.serializedName;
            }

            var serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);

            if (serializedValue !== undefined && propName != undefined) {
              var value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);

              if (isXml && propertyMapper.xmlIsAttribute) {
                // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.
                // This keeps things simple while preventing name collision
                // with names in user documents.
                parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] || {};
                parentObject[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]][propName] = serializedValue;
              } else if (isXml && propertyMapper.xmlIsWrapped) {
                parentObject[propName] = _defineProperty({}, propertyMapper.xmlElementName, value);
              } else {
                parentObject[propName] = value;
              }
            }
          }
        }

        var additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);

        if (additionalPropertiesMapper) {
          var propNames = Object.keys(modelProps);

          var _loop = function _loop(clientPropName) {
            var isAdditionalProperty = propNames.every(function (pn) {
              return pn !== clientPropName;
            });

            if (isAdditionalProperty) {
              payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '["' + clientPropName + '"]', options);
            }
          };

          for (var clientPropName in object) {
            _loop(clientPropName);
          }
        }

        return payload;
      }

      return object;
    }

    function getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {
      if (!isXml || !propertyMapper.xmlNamespace) {
        return serializedValue;
      }

      var xmlnsKey = propertyMapper.xmlNamespacePrefix ? "xmlns:".concat(propertyMapper.xmlNamespacePrefix) : "xmlns";

      var xmlNamespace = _defineProperty({}, xmlnsKey, propertyMapper.xmlNamespace);

      if (["Composite"].includes(propertyMapper.type.name)) {
        if (serializedValue[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]]) {
          return serializedValue;
        } else {
          var _result = Object.assign({}, serializedValue);

          _result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = xmlNamespace;
          return _result;
        }
      }

      var result = {};
      result[options.xmlCharKey] = serializedValue;
      result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = xmlNamespace;
      return result;
    }

    function isSpecialXmlProperty(propertyName, options) {
      return [_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"], options.xmlCharKey].includes(propertyName);
    }

    function deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {
      var _a;

      if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {
        mapper = getPolymorphicMapper(serializer, mapper, responseBody, "serializedName");
      }

      var modelProps = resolveModelProperties(serializer, mapper, objectName);
      var instance = {};
      var handledPropertyNames = [];

      for (var _i5 = 0, _Object$keys3 = Object.keys(modelProps); _i5 < _Object$keys3.length; _i5++) {
        var key = _Object$keys3[_i5];
        var propertyMapper = modelProps[key];
        var paths = splitSerializeName(modelProps[key].serializedName);
        handledPropertyNames.push(paths[0]);
        var serializedName = propertyMapper.serializedName,
            xmlName = propertyMapper.xmlName,
            xmlElementName = propertyMapper.xmlElementName;
        var propertyObjectName = objectName;

        if (serializedName !== "" && serializedName !== undefined) {
          propertyObjectName = objectName + "." + serializedName;
        }

        var headerCollectionPrefix = propertyMapper.headerCollectionPrefix;

        if (headerCollectionPrefix) {
          var dictionary = {};

          for (var _i6 = 0, _Object$keys4 = Object.keys(responseBody); _i6 < _Object$keys4.length; _i6++) {
            var headerKey = _Object$keys4[_i6];

            if (headerKey.startsWith(headerCollectionPrefix)) {
              dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);
            }

            handledPropertyNames.push(headerKey);
          }

          instance[key] = dictionary;
        } else if (serializer.isXML) {
          if (propertyMapper.xmlIsAttribute && responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]]) {
            instance[key] = serializer.deserialize(propertyMapper, responseBody[_util_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]][xmlName], propertyObjectName, options);
          } else {
            var propertyName = xmlElementName || xmlName || serializedName;

            if (propertyMapper.xmlIsWrapped) {
              /* a list of <xmlElementName> wrapped by <xmlName>
                For the xml example below
                  <Cors>
                    <CorsRule>...</CorsRule>
                    <CorsRule>...</CorsRule>
                  </Cors>
                the responseBody has
                  {
                    Cors: {
                      CorsRule: [{...}, {...}]
                    }
                  }
                xmlName is "Cors" and xmlElementName is"CorsRule".
              */
              var wrapped = responseBody[xmlName];
              var elementList = (_a = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _a !== void 0 ? _a : [];
              instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);
            } else {
              var property = responseBody[propertyName];
              instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);
            }
          }
        } else {
          // deserialize the property if it is present in the provided responseBody instance
          var propertyInstance = void 0;
          var res = responseBody; // traversing the object step by step.

          var _iterator4 = _createForOfIteratorHelper(paths),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var item = _step4.value;
              if (!res) break;
              res = res[item];
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }

          propertyInstance = res;
          var polymorphicDiscriminator = mapper.type.polymorphicDiscriminator; // checking that the model property name (key)(ex: "fishtype") and the
          // clientName of the polymorphicDiscriminator {metadata} (ex: "fishtype")
          // instead of the serializedName of the polymorphicDiscriminator (ex: "fish.type")
          // is a better approach. The generator is not consistent with escaping '\.' in the
          // serializedName of the property (ex: "fish\.type") that is marked as polymorphic discriminator
          // and the serializedName of the metadata polymorphicDiscriminator (ex: "fish.type"). However,
          // the clientName transformation of the polymorphicDiscriminator (ex: "fishtype") and
          // the transformation of model property name (ex: "fishtype") is done consistently.
          // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.

          if (polymorphicDiscriminator && key === polymorphicDiscriminator.clientName && propertyInstance == undefined) {
            propertyInstance = mapper.serializedName;
          }

          var serializedValue = void 0; // paging

          if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === "") {
            propertyInstance = responseBody[key];
            var arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options); // Copy over any properties that have already been added into the instance, where they do
            // not exist on the newly de-serialized array

            for (var _i7 = 0, _Object$entries = Object.entries(instance); _i7 < _Object$entries.length; _i7++) {
              var _Object$entries$_i = _slicedToArray(_Object$entries[_i7], 2),
                  k = _Object$entries$_i[0],
                  v = _Object$entries$_i[1];

              if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {
                arrayInstance[k] = v;
              }
            }

            instance = arrayInstance;
          } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {
            serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);
            instance[key] = serializedValue;
          }
        }
      }

      var additionalPropertiesMapper = mapper.type.additionalProperties;

      if (additionalPropertiesMapper) {
        var isAdditionalProperty = function isAdditionalProperty(responsePropName) {
          for (var clientPropName in modelProps) {
            var _paths = splitSerializeName(modelProps[clientPropName].serializedName);

            if (_paths[0] === responsePropName) {
              return false;
            }
          }

          return true;
        };

        for (var responsePropName in responseBody) {
          if (isAdditionalProperty(responsePropName)) {
            instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '["' + responsePropName + '"]', options);
          }
        }
      } else if (responseBody) {
        for (var _i8 = 0, _Object$keys5 = Object.keys(responseBody); _i8 < _Object$keys5.length; _i8++) {
          var _key2 = _Object$keys5[_i8];

          if (instance[_key2] === undefined && !handledPropertyNames.includes(_key2) && !isSpecialXmlProperty(_key2, options)) {
            instance[_key2] = responseBody[_key2];
          }
        }
      }

      return instance;
    }

    function deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {
      var value = mapper.type.value;

      if (!value || typeof value !== "object") {
        throw new Error("\"value\" metadata for a Dictionary must be defined in the " + "mapper and it must of type \"object\" in ".concat(objectName));
      }

      if (responseBody) {
        var tempDictionary = {};

        for (var _i9 = 0, _Object$keys6 = Object.keys(responseBody); _i9 < _Object$keys6.length; _i9++) {
          var key = _Object$keys6[_i9];
          tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);
        }

        return tempDictionary;
      }

      return responseBody;
    }

    function deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {
      var element = mapper.type.element;

      if (!element || typeof element !== "object") {
        throw new Error("element\" metadata for an Array must be defined in the " + "mapper and it must of type \"object\" in ".concat(objectName));
      }

      if (responseBody) {
        if (!Array.isArray(responseBody)) {
          // xml2js will interpret a single element array as just the element, so force it to be an array
          responseBody = [responseBody];
        }

        var tempArray = [];

        for (var i = 0; i < responseBody.length; i++) {
          tempArray[i] = serializer.deserialize(element, responseBody[i], "".concat(objectName, "[").concat(i, "]"), options);
        }

        return tempArray;
      }

      return responseBody;
    }

    function getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {
      var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);

      if (polymorphicDiscriminator) {
        var discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];

        if (discriminatorName != undefined) {
          var discriminatorValue = object[discriminatorName];

          if (discriminatorValue != undefined) {
            var typeName = mapper.type.uberParent || mapper.type.className;
            var indexDiscriminator = discriminatorValue === typeName ? discriminatorValue : typeName + "." + discriminatorValue;
            var polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];

            if (polymorphicMapper) {
              mapper = polymorphicMapper;
            }
          }
        }
      }

      return mapper;
    }

    function getPolymorphicDiscriminatorRecursively(serializer, mapper) {
      return mapper.type.polymorphicDiscriminator || getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) || getPolymorphicDiscriminatorSafely(serializer, mapper.type.className);
    }

    function getPolymorphicDiscriminatorSafely(serializer, typeName) {
      return typeName && serializer.modelMappers[typeName] && serializer.modelMappers[typeName].type.polymorphicDiscriminator;
    } // TODO: why is this here?


    function serializeObject(toSerialize) {
      var castToSerialize = toSerialize;
      if (toSerialize == undefined) return undefined;

      if (toSerialize instanceof Uint8Array) {
        toSerialize = _util_base64__WEBPACK_IMPORTED_MODULE_0__["encodeByteArray"](toSerialize);
        return toSerialize;
      } else if (toSerialize instanceof Date) {
        return toSerialize.toISOString();
      } else if (Array.isArray(toSerialize)) {
        var array = [];

        for (var i = 0; i < toSerialize.length; i++) {
          array.push(serializeObject(toSerialize[i]));
        }

        return array;
      } else if (typeof toSerialize === "object") {
        var dictionary = {};

        for (var property in toSerialize) {
          dictionary[property] = serializeObject(castToSerialize[property]);
        }

        return dictionary;
      }

      return toSerialize;
    }
    /**
     * Utility function to create a K:V from a list of strings
     */


    function strEnum(o) {
      var result = {};

      var _iterator5 = _createForOfIteratorHelper(o),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var key = _step5.value;
          result[key] = key;
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return result;
    } // eslint-disable-next-line @typescript-eslint/no-redeclare


    var MapperType = strEnum(["Base64Url", "Boolean", "ByteArray", "Composite", "Date", "DateTime", "DateTimeRfc1123", "Dictionary", "Enum", "Number", "Object", "Sequence", "String", "Stream", "TimeSpan", "UnixTime"]); //# sourceMappingURL=serializer.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/serviceClient.js": function node_modulesAzureCoreHttpDistEsmSrcServiceClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceClient", function () {
      return ServiceClient;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "serializeRequestBody", function () {
      return serializeRequestBody;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createPipelineFromOptions", function () {
      return createPipelineFromOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPropertyParent", function () {
      return getPropertyParent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getOperationArgumentValueFromParameterPath", function () {
      return getOperationArgumentValueFromParameterPath;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "flattenResponse", function () {
      return flattenResponse;
    });
    /* harmony import */


    var _azure_core_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-auth */
    "./node_modules/@azure/core-auth/dist-esm/src/index.js");
    /* harmony import */


    var _policies_logPolicy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./policies/logPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/logPolicy.js");
    /* harmony import */


    var _operationParameter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./operationParameter */
    "./node_modules/@azure/core-http/dist-esm/src/operationParameter.js");
    /* harmony import */


    var _operationSpec__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./operationSpec */
    "./node_modules/@azure/core-http/dist-esm/src/operationSpec.js");
    /* harmony import */


    var _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./policies/deserializationPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/deserializationPolicy.js");
    /* harmony import */


    var _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./policies/exponentialRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/exponentialRetryPolicy.js");
    /* harmony import */


    var _policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./policies/generateClientRequestIdPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/generateClientRequestIdPolicy.js");
    /* harmony import */


    var _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./policies/userAgentPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/userAgentPolicy.js");
    /* harmony import */


    var _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./policies/redirectPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/redirectPolicy.js");
    /* harmony import */


    var _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./policies/requestPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/requestPolicy.js");
    /* harmony import */


    var _policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./policies/rpRegistrationPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/rpRegistrationPolicy.js");
    /* harmony import */


    var _policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./policies/bearerTokenAuthenticationPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/bearerTokenAuthenticationPolicy.js");
    /* harmony import */


    var _policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./policies/systemErrorRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/systemErrorRetryPolicy.js");
    /* harmony import */


    var _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./queryCollectionFormat */
    "./node_modules/@azure/core-http/dist-esm/src/queryCollectionFormat.js");
    /* harmony import */


    var _serializer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./serializer */
    "./node_modules/@azure/core-http/dist-esm/src/serializer.js");
    /* harmony import */


    var _url__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./url */
    "./node_modules/@azure/core-http/dist-esm/src/url.js");
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js");
    /* harmony import */


    var _util_xml__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./util/xml */
    "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js");
    /* harmony import */


    var _webResource__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./webResource */
    "./node_modules/@azure/core-http/dist-esm/src/webResource.js");
    /* harmony import */


    var _policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./policies/proxyPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/proxyPolicy.browser.js");
    /* harmony import */


    var _policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./policies/throttlingRetryPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/throttlingRetryPolicy.js");
    /* harmony import */


    var _policies_signingPolicy__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./policies/signingPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/signingPolicy.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./log */
    "./node_modules/@azure/core-http/dist-esm/src/log.js");
    /* harmony import */


    var _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./policies/keepAlivePolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/keepAlivePolicy.js");
    /* harmony import */


    var _policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./policies/tracingPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/tracingPolicy.js");
    /* harmony import */


    var _policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./policies/disableResponseDecompressionPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/disableResponseDecompressionPolicy.browser.js");
    /* harmony import */


    var _policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./policies/ndJsonPolicy */
    "./node_modules/@azure/core-http/dist-esm/src/policies/ndJsonPolicy.js");
    /* harmony import */


    var _util_serializer_common__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./util/serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js");
    /* harmony import */


    var _httpClientCache__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./httpClientCache */
    "./node_modules/@azure/core-http/dist-esm/src/httpClientCache.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ServiceClient sends service requests and receives responses.
     */


    var ServiceClient = /*#__PURE__*/function () {
      /**
       * The ServiceClient constructor
       * @param credentials - The credentials used for authentication with the service.
       * @param options - The service client options that govern the behavior of the client.
       */
      function ServiceClient(credentials,
      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */
      options) {
        var _this24 = this;

        _classCallCheck(this, ServiceClient);

        if (!options) {
          options = {};
        }

        this._withCredentials = options.withCredentials || false;
        this._httpClient = options.httpClient || Object(_httpClientCache__WEBPACK_IMPORTED_MODULE_28__["getCachedDefaultHttpClient"])();
        this._requestPolicyOptions = new _policies_requestPolicy__WEBPACK_IMPORTED_MODULE_9__["RequestPolicyOptions"](options.httpPipelineLogger);
        var requestPolicyFactories;

        if (Array.isArray(options.requestPolicyFactories)) {
          _log__WEBPACK_IMPORTED_MODULE_22__["logger"].info("ServiceClient: using custom request policies");

          requestPolicyFactories = options.requestPolicyFactories;
        } else {
          var authPolicyFactory = undefined;

          if (Object(_azure_core_auth__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentials)) {
            _log__WEBPACK_IMPORTED_MODULE_22__["logger"].info("ServiceClient: creating bearer token authentication policy from provided credentials"); // Create a wrapped RequestPolicyFactory here so that we can provide the
            // correct scope to the BearerTokenAuthenticationPolicy at the first time
            // one is requested.  This is needed because generated ServiceClient
            // implementations do not set baseUri until after ServiceClient's constructor
            // is finished, leaving baseUri empty at the time when it is needed to
            // build the correct scope name.


            var wrappedPolicyFactory = function wrappedPolicyFactory() {
              var bearerTokenPolicyFactory = undefined; // eslint-disable-next-line @typescript-eslint/no-this-alias

              var serviceClient = _this24;
              var serviceClientOptions = options;
              return {
                create: function create(nextPolicy, createOptions) {
                  var credentialScopes = getCredentialScopes(serviceClientOptions, serviceClient.baseUri);

                  if (!credentialScopes) {
                    throw new Error("When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy");
                  }

                  if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {
                    bearerTokenPolicyFactory = Object(_policies_bearerTokenAuthenticationPolicy__WEBPACK_IMPORTED_MODULE_11__["bearerTokenAuthenticationPolicy"])(credentials, credentialScopes);
                  }

                  return bearerTokenPolicyFactory.create(nextPolicy, createOptions);
                }
              };
            };

            authPolicyFactory = wrappedPolicyFactory();
          } else if (credentials && typeof credentials.signRequest === "function") {
            _log__WEBPACK_IMPORTED_MODULE_22__["logger"].info("ServiceClient: creating signing policy from provided credentials");

            authPolicyFactory = Object(_policies_signingPolicy__WEBPACK_IMPORTED_MODULE_21__["signingPolicy"])(credentials);
          } else if (credentials !== undefined && credentials !== null) {
            throw new Error("The credentials argument must implement the TokenCredential interface");
          }

          _log__WEBPACK_IMPORTED_MODULE_22__["logger"].info("ServiceClient: using default request policies");

          requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);

          if (options.requestPolicyFactories) {
            // options.requestPolicyFactories can also be a function that manipulates
            // the default requestPolicyFactories array
            var newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);

            if (newRequestPolicyFactories) {
              requestPolicyFactories = newRequestPolicyFactories;
            }
          }
        }

        this._requestPolicyFactories = requestPolicyFactories;
      }
      /**
       * Send the provided httpRequest.
       */


      _createClass(ServiceClient, [{
        key: "sendRequest",
        value: function sendRequest(options) {
          if (options === null || options === undefined || typeof options !== "object") {
            throw new Error("options cannot be null or undefined and it must be of type object.");
          }

          var httpRequest;

          try {
            if (Object(_webResource__WEBPACK_IMPORTED_MODULE_18__["isWebResourceLike"])(options)) {
              options.validateRequestProperties();
              httpRequest = options;
            } else {
              httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_18__["WebResource"]();
              httpRequest = httpRequest.prepare(options);
            }
          } catch (error) {
            return Promise.reject(error);
          }

          var httpPipeline = this._httpClient;

          if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {
            for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {
              httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);
            }
          }

          return httpPipeline.sendRequest(httpRequest);
        }
        /**
         * Send an HTTP request that is populated using the provided OperationSpec.
         * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.
         * @param operationSpec - The OperationSpec to use to populate the httpRequest.
         * @param callback - The callback to call when the response is received.
         */

      }, {
        key: "sendOperationRequest",
        value: function () {
          var _sendOperationRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(operationArguments, operationSpec, callback) {
            var _a, serializerOptions, httpRequest, result, baseUri, requestUrl, _iterator6, _step6, urlParameter, urlParameterValue, _iterator7, _step7, queryParameter, queryParameterValue, index, item, _index, contentType, _iterator8, _step8, headerParameter, headerValue, headerCollectionPrefix, _i10, _Object$keys7, key, options, customHeaderName, rawResponse, sendRequestError, cb;

            return regeneratorRuntime.wrap(function _callee17$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    if (typeof operationArguments.options === "function") {
                      callback = operationArguments.options;
                      operationArguments.options = undefined;
                    }

                    serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;
                    httpRequest = new _webResource__WEBPACK_IMPORTED_MODULE_18__["WebResource"]();
                    _context18.prev = 3;
                    baseUri = operationSpec.baseUrl || this.baseUri;

                    if (baseUri) {
                      _context18.next = 7;
                      break;
                    }

                    throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.");

                  case 7:
                    httpRequest.method = operationSpec.httpMethod;
                    httpRequest.operationSpec = operationSpec;
                    requestUrl = _url__WEBPACK_IMPORTED_MODULE_15__["URLBuilder"].parse(baseUri);

                    if (operationSpec.path) {
                      requestUrl.appendPath(operationSpec.path);
                    }

                    if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {
                      _iterator6 = _createForOfIteratorHelper(operationSpec.urlParameters);

                      try {
                        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                          urlParameter = _step6.value;
                          urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);
                          urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(urlParameter), serializerOptions);

                          if (!urlParameter.skipEncoding) {
                            urlParameterValue = encodeURIComponent(urlParameterValue);
                          }

                          requestUrl.replaceAll("{".concat(urlParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(urlParameter), "}"), urlParameterValue);
                        }
                      } catch (err) {
                        _iterator6.e(err);
                      } finally {
                        _iterator6.f();
                      }
                    }

                    if (!(operationSpec.queryParameters && operationSpec.queryParameters.length > 0)) {
                      _context18.next = 44;
                      break;
                    }

                    _iterator7 = _createForOfIteratorHelper(operationSpec.queryParameters);
                    _context18.prev = 14;

                    _iterator7.s();

                  case 16:
                    if ((_step7 = _iterator7.n()).done) {
                      _context18.next = 36;
                      break;
                    }

                    queryParameter = _step7.value;
                    queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);

                    if (!(queryParameterValue !== undefined && queryParameterValue !== null)) {
                      _context18.next = 34;
                      break;
                    }

                    queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(queryParameter), serializerOptions);

                    if (!(queryParameter.collectionFormat !== undefined && queryParameter.collectionFormat !== null)) {
                      _context18.next = 31;
                      break;
                    }

                    if (!(queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Multi)) {
                      _context18.next = 30;
                      break;
                    }

                    if (!(queryParameterValue.length === 0)) {
                      _context18.next = 27;
                      break;
                    }

                    return _context18.abrupt("continue", 34);

                  case 27:
                    for (index in queryParameterValue) {
                      item = queryParameterValue[index];
                      queryParameterValue[index] = item === undefined || item === null ? "" : item.toString();
                    }

                  case 28:
                    _context18.next = 31;
                    break;

                  case 30:
                    if (queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Ssv || queryParameter.collectionFormat === _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Tsv) {
                      queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);
                    }

                  case 31:
                    if (!queryParameter.skipEncoding) {
                      if (Array.isArray(queryParameterValue)) {
                        for (_index in queryParameterValue) {
                          if (queryParameterValue[_index] !== undefined && queryParameterValue[_index] !== null) {
                            queryParameterValue[_index] = encodeURIComponent(queryParameterValue[_index]);
                          }
                        }
                      } else {
                        queryParameterValue = encodeURIComponent(queryParameterValue);
                      }
                    }

                    if (queryParameter.collectionFormat !== undefined && queryParameter.collectionFormat !== null && queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Multi && queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Ssv && queryParameter.collectionFormat !== _queryCollectionFormat__WEBPACK_IMPORTED_MODULE_13__["QueryCollectionFormat"].Tsv) {
                      queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);
                    }

                    requestUrl.setQueryParameter(queryParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(queryParameter), queryParameterValue);

                  case 34:
                    _context18.next = 16;
                    break;

                  case 36:
                    _context18.next = 41;
                    break;

                  case 38:
                    _context18.prev = 38;
                    _context18.t0 = _context18["catch"](14);

                    _iterator7.e(_context18.t0);

                  case 41:
                    _context18.prev = 41;

                    _iterator7.f();

                    return _context18.finish(41);

                  case 44:
                    httpRequest.url = requestUrl.toString();
                    contentType = operationSpec.contentType || this.requestContentType;

                    if (contentType && operationSpec.requestBody) {
                      httpRequest.headers.set("Content-Type", contentType);
                    }

                    if (operationSpec.headerParameters) {
                      _iterator8 = _createForOfIteratorHelper(operationSpec.headerParameters);

                      try {
                        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                          headerParameter = _step8.value;
                          headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);

                          if (headerValue !== undefined && headerValue !== null) {
                            headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(headerParameter), serializerOptions);
                            headerCollectionPrefix = headerParameter.mapper.headerCollectionPrefix;

                            if (headerCollectionPrefix) {
                              for (_i10 = 0, _Object$keys7 = Object.keys(headerValue); _i10 < _Object$keys7.length; _i10++) {
                                key = _Object$keys7[_i10];
                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);
                              }
                            } else {
                              httpRequest.headers.set(headerParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(headerParameter), headerValue);
                            }
                          }
                        }
                      } catch (err) {
                        _iterator8.e(err);
                      } finally {
                        _iterator8.f();
                      }
                    }

                    options = operationArguments.options;

                    if (options) {
                      if (options.customHeaders) {
                        for (customHeaderName in options.customHeaders) {
                          httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);
                        }
                      }

                      if (options.abortSignal) {
                        httpRequest.abortSignal = options.abortSignal;
                      }

                      if (options.timeout) {
                        httpRequest.timeout = options.timeout;
                      }

                      if (options.onUploadProgress) {
                        httpRequest.onUploadProgress = options.onUploadProgress;
                      }

                      if (options.onDownloadProgress) {
                        httpRequest.onDownloadProgress = options.onDownloadProgress;
                      }

                      if (options.spanOptions) {
                        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.
                        httpRequest.spanOptions = options.spanOptions;
                      }

                      if (options.tracingContext) {
                        httpRequest.tracingContext = options.tracingContext;
                      }

                      if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {
                        httpRequest.shouldDeserialize = options.shouldDeserialize;
                      }
                    }

                    httpRequest.withCredentials = this._withCredentials;
                    serializeRequestBody(this, httpRequest, operationArguments, operationSpec);

                    if (httpRequest.streamResponseStatusCodes === undefined) {
                      httpRequest.streamResponseStatusCodes = Object(_operationSpec__WEBPACK_IMPORTED_MODULE_3__["getStreamResponseStatusCodes"])(operationSpec);
                    }

                    _context18.prev = 53;
                    _context18.next = 56;
                    return this.sendRequest(httpRequest);

                  case 56:
                    rawResponse = _context18.sent;
                    _context18.next = 62;
                    break;

                  case 59:
                    _context18.prev = 59;
                    _context18.t1 = _context18["catch"](53);
                    sendRequestError = _context18.t1;

                  case 62:
                    if (sendRequestError) {
                      if (sendRequestError.response) {
                        sendRequestError.details = flattenResponse(sendRequestError.response, operationSpec.responses[sendRequestError.statusCode] || operationSpec.responses["default"]);
                      }

                      result = Promise.reject(sendRequestError);
                    } else {
                      result = Promise.resolve(flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]));
                    }

                    _context18.next = 68;
                    break;

                  case 65:
                    _context18.prev = 65;
                    _context18.t2 = _context18["catch"](3);
                    result = Promise.reject(_context18.t2);

                  case 68:
                    cb = callback;

                    if (cb) {
                      result.then(function (res) {
                        return cb(null, res._response.parsedBody, res._response.request, res._response);
                      })["catch"](function (err) {
                        return cb(err);
                      });
                    }

                    return _context18.abrupt("return", result);

                  case 71:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee17, this, [[3, 65], [14, 38, 41, 44], [53, 59]]);
          }));

          function sendOperationRequest(_x32, _x33, _x34) {
            return _sendOperationRequest.apply(this, arguments);
          }

          return sendOperationRequest;
        }()
      }]);

      return ServiceClient;
    }();

    function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {
      var _a, _b, _c, _d, _e, _f;

      var serializerOptions = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions) !== null && _b !== void 0 ? _b : {};
      var updatedOptions = {
        rootName: (_c = serializerOptions.rootName) !== null && _c !== void 0 ? _c : "",
        includeRoot: (_d = serializerOptions.includeRoot) !== null && _d !== void 0 ? _d : false,
        xmlCharKey: (_e = serializerOptions.xmlCharKey) !== null && _e !== void 0 ? _e : _util_serializer_common__WEBPACK_IMPORTED_MODULE_27__["XML_CHARKEY"]
      };
      var xmlCharKey = serializerOptions.xmlCharKey;

      if (operationSpec.requestBody && operationSpec.requestBody.mapper) {
        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);
        var bodyMapper = operationSpec.requestBody.mapper;
        var required = bodyMapper.required,
            xmlName = bodyMapper.xmlName,
            xmlElementName = bodyMapper.xmlElementName,
            serializedName = bodyMapper.serializedName,
            xmlNamespace = bodyMapper.xmlNamespace,
            xmlNamespacePrefix = bodyMapper.xmlNamespacePrefix;
        var typeName = bodyMapper.type.name;

        try {
          if (httpRequest.body !== undefined && httpRequest.body !== null || required) {
            var requestBodyParameterPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(operationSpec.requestBody);
            httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString, updatedOptions);
            var isStream = typeName === _serializer__WEBPACK_IMPORTED_MODULE_14__["MapperType"].Stream;

            if (operationSpec.isXML) {
              var xmlnsKey = xmlNamespacePrefix ? "xmlns:".concat(xmlNamespacePrefix) : "xmlns";
              var value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, httpRequest.body, updatedOptions);

              if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_14__["MapperType"].Sequence) {
                httpRequest.body = Object(_util_xml__WEBPACK_IMPORTED_MODULE_17__["stringifyXML"])(_util_utils__WEBPACK_IMPORTED_MODULE_16__["prepareXMLRootList"](value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), {
                  rootName: xmlName || serializedName,
                  xmlCharKey: xmlCharKey
                });
              } else if (!isStream) {
                httpRequest.body = Object(_util_xml__WEBPACK_IMPORTED_MODULE_17__["stringifyXML"])(value, {
                  rootName: xmlName || serializedName,
                  xmlCharKey: xmlCharKey
                });
              }
            } else if (typeName === _serializer__WEBPACK_IMPORTED_MODULE_14__["MapperType"].String && (((_f = operationSpec.contentType) === null || _f === void 0 ? void 0 : _f.match("text/plain")) || operationSpec.mediaType === "text")) {
              // the String serializer has validated that request body is a string
              // so just send the string.
              return;
            } else if (!isStream) {
              httpRequest.body = JSON.stringify(httpRequest.body);
            }
          }
        } catch (error) {
          throw new Error("Error \"".concat(error.message, "\" occurred in serializing the payload - ").concat(JSON.stringify(serializedName, undefined, "  "), "."));
        }
      } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {
        httpRequest.formData = {};

        var _iterator9 = _createForOfIteratorHelper(operationSpec.formDataParameters),
            _step9;

        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
            var formDataParameter = _step9.value;
            var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);

            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {
              var formDataParameterPropertyName = formDataParameter.mapper.serializedName || Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(formDataParameter);
              httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameter"])(formDataParameter), updatedOptions);
            }
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }
      }
    }
    /**
     * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself
     */


    function getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {
      // Composite and Sequence schemas already got their root namespace set during serialization
      // We just need to add xmlns to the other schema types
      if (xmlNamespace && !["Composite", "Sequence", "Dictionary"].includes(typeName)) {
        var result = {};
        result[options.xmlCharKey] = serializedValue;
        result[_util_serializer_common__WEBPACK_IMPORTED_MODULE_27__["XML_ATTRKEY"]] = _defineProperty({}, xmlnsKey, xmlNamespace);
        return result;
      }

      return serializedValue;
    }

    function getValueOrFunctionResult(value, defaultValueCreator) {
      var result;

      if (typeof value === "string") {
        result = value;
      } else {
        result = defaultValueCreator();

        if (typeof value === "function") {
          result = value(result);
        }
      }

      return result;
    }

    function createDefaultRequestPolicyFactories(authPolicyFactory, options) {
      var factories = [];

      if (options.generateClientRequestIdHeader) {
        factories.push(Object(_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_6__["generateClientRequestIdPolicy"])(options.clientRequestIdHeaderName));
      }

      if (authPolicyFactory) {
        factories.push(authPolicyFactory);
      }

      var userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__["getDefaultUserAgentHeaderName"]);
      var userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, _policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__["getDefaultUserAgentValue"]);

      if (userAgentHeaderName && userAgentHeaderValue) {
        factories.push(Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__["userAgentPolicy"])({
          key: userAgentHeaderName,
          value: userAgentHeaderValue
        }));
      }

      factories.push(Object(_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_8__["redirectPolicy"])());
      factories.push(Object(_policies_rpRegistrationPolicy__WEBPACK_IMPORTED_MODULE_10__["rpRegistrationPolicy"])(options.rpRegistrationRetryTimeout));

      if (!options.noRetryPolicy) {
        factories.push(Object(_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__["exponentialRetryPolicy"])());
        factories.push(Object(_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_12__["systemErrorRetryPolicy"])());
        factories.push(Object(_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_20__["throttlingRetryPolicy"])());
      }

      factories.push(Object(_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_4__["deserializationPolicy"])(options.deserializationContentTypes));

      if (_util_utils__WEBPACK_IMPORTED_MODULE_16__["isNode"]) {
        factories.push(Object(_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_19__["proxyPolicy"])(options.proxySettings));
      }

      factories.push(Object(_policies_logPolicy__WEBPACK_IMPORTED_MODULE_1__["logPolicy"])({
        logger: _log__WEBPACK_IMPORTED_MODULE_22__["logger"].info
      }));
      return factories;
    }

    function createPipelineFromOptions(pipelineOptions, authPolicyFactory) {
      var requestPolicyFactories = [];

      if (pipelineOptions.sendStreamingJson) {
        requestPolicyFactories.push(Object(_policies_ndJsonPolicy__WEBPACK_IMPORTED_MODULE_26__["ndJsonPolicy"])());
      }

      var userAgentValue = undefined;

      if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {
        var userAgentInfo = [];
        userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix); // Add the default user agent value if it isn't already specified
        // by the userAgentPrefix option.

        var defaultUserAgentInfo = Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__["getDefaultUserAgentValue"])();

        if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {
          userAgentInfo.push(defaultUserAgentInfo);
        }

        userAgentValue = userAgentInfo.join(" ");
      }

      var keepAliveOptions = Object.assign(Object.assign({}, _policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_23__["DefaultKeepAliveOptions"]), pipelineOptions.keepAliveOptions);
      var retryOptions = Object.assign(Object.assign({}, _policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__["DefaultRetryOptions"]), pipelineOptions.retryOptions);
      var redirectOptions = Object.assign(Object.assign({}, _policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_8__["DefaultRedirectOptions"]), pipelineOptions.redirectOptions);

      if (_util_utils__WEBPACK_IMPORTED_MODULE_16__["isNode"]) {
        requestPolicyFactories.push(Object(_policies_proxyPolicy__WEBPACK_IMPORTED_MODULE_19__["proxyPolicy"])(pipelineOptions.proxyOptions));
      }

      var deserializationOptions = Object.assign(Object.assign({}, _policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_4__["DefaultDeserializationOptions"]), pipelineOptions.deserializationOptions);
      var loggingOptions = Object.assign({}, pipelineOptions.loggingOptions);
      requestPolicyFactories.push(Object(_policies_tracingPolicy__WEBPACK_IMPORTED_MODULE_24__["tracingPolicy"])({
        userAgent: userAgentValue
      }), Object(_policies_keepAlivePolicy__WEBPACK_IMPORTED_MODULE_23__["keepAlivePolicy"])(keepAliveOptions), Object(_policies_userAgentPolicy__WEBPACK_IMPORTED_MODULE_7__["userAgentPolicy"])({
        value: userAgentValue
      }), Object(_policies_generateClientRequestIdPolicy__WEBPACK_IMPORTED_MODULE_6__["generateClientRequestIdPolicy"])(), Object(_policies_deserializationPolicy__WEBPACK_IMPORTED_MODULE_4__["deserializationPolicy"])(deserializationOptions.expectedContentTypes), Object(_policies_throttlingRetryPolicy__WEBPACK_IMPORTED_MODULE_20__["throttlingRetryPolicy"])(), Object(_policies_systemErrorRetryPolicy__WEBPACK_IMPORTED_MODULE_12__["systemErrorRetryPolicy"])(), Object(_policies_exponentialRetryPolicy__WEBPACK_IMPORTED_MODULE_5__["exponentialRetryPolicy"])(retryOptions.maxRetries, retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs));

      if (redirectOptions.handleRedirects) {
        requestPolicyFactories.push(Object(_policies_redirectPolicy__WEBPACK_IMPORTED_MODULE_8__["redirectPolicy"])(redirectOptions.maxRetries));
      }

      if (authPolicyFactory) {
        requestPolicyFactories.push(authPolicyFactory);
      }

      requestPolicyFactories.push(Object(_policies_logPolicy__WEBPACK_IMPORTED_MODULE_1__["logPolicy"])(loggingOptions));

      if (_util_utils__WEBPACK_IMPORTED_MODULE_16__["isNode"] && pipelineOptions.decompressResponse === false) {
        requestPolicyFactories.push(Object(_policies_disableResponseDecompressionPolicy__WEBPACK_IMPORTED_MODULE_25__["disableResponseDecompressionPolicy"])());
      }

      return {
        httpClient: pipelineOptions.httpClient,
        requestPolicyFactories: requestPolicyFactories
      };
    }
    /**
     * Get the property parent for the property at the provided path when starting with the provided
     * parent object.
     */


    function getPropertyParent(parent, propertyPath) {
      if (parent && propertyPath) {
        var propertyPathLength = propertyPath.length;

        for (var i = 0; i < propertyPathLength - 1; ++i) {
          var propertyName = propertyPath[i];

          if (!parent[propertyName]) {
            parent[propertyName] = {};
          }

          parent = parent[propertyName];
        }
      }

      return parent;
    }

    function getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {
      return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);
    }

    function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {
      var _a;

      var value;

      if (typeof parameterPath === "string") {
        parameterPath = [parameterPath];
      }

      var serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;

      if (Array.isArray(parameterPath)) {
        if (parameterPath.length > 0) {
          if (parameterMapper.isConstant) {
            value = parameterMapper.defaultValue;
          } else {
            var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);

            if (!propertySearchResult.propertyFound) {
              propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);
            }

            var useDefaultValue = false;

            if (!propertySearchResult.propertyFound) {
              useDefaultValue = parameterMapper.required || parameterPath[0] === "options" && parameterPath.length === 2;
            }

            value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;
          } // Serialize just for validation purposes.


          var parameterPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameterPath"])(parameterPath, parameterMapper);
          serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);
        }
      } else {
        if (parameterMapper.required) {
          value = {};
        }

        for (var propertyName in parameterPath) {
          var propertyMapper = parameterMapper.type.modelProperties[propertyName];
          var propertyPath = parameterPath[propertyName];
          var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer); // Serialize just for validation purposes.

          var propertyPathString = Object(_operationParameter__WEBPACK_IMPORTED_MODULE_2__["getPathStringFromParameterPath"])(propertyPath, propertyMapper);
          serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);

          if (propertyValue !== undefined && propertyValue !== null) {
            if (!value) {
              value = {};
            }

            value[propertyName] = propertyValue;
          }
        }
      }

      return value;
    }

    function getPropertyFromParameterPath(parent, parameterPath) {
      var result = {
        propertyFound: false
      };
      var i = 0;

      for (; i < parameterPath.length; ++i) {
        var parameterPathPart = parameterPath[i]; // Make sure to check inherited properties too, so don't use hasOwnProperty().

        if (parent !== undefined && parent !== null && parameterPathPart in parent) {
          parent = parent[parameterPathPart];
        } else {
          break;
        }
      }

      if (i === parameterPath.length) {
        result.propertyValue = parent;
        result.propertyFound = true;
      }

      return result;
    }

    function flattenResponse(_response, responseSpec) {
      var parsedHeaders = _response.parsedHeaders;
      var bodyMapper = responseSpec && responseSpec.bodyMapper;

      var addOperationResponse = function addOperationResponse(obj) {
        return Object.defineProperty(obj, "_response", {
          value: _response
        });
      };

      if (bodyMapper) {
        var typeName = bodyMapper.type.name;

        if (typeName === "Stream") {
          return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), {
            blobBody: _response.blobBody,
            readableStreamBody: _response.readableStreamBody
          }));
        }

        var modelProperties = typeName === "Composite" && bodyMapper.type.modelProperties || {};
        var isPageableResponse = Object.keys(modelProperties).some(function (k) {
          return modelProperties[k].serializedName === "";
        });

        if (typeName === "Sequence" || isPageableResponse) {
          var arrayResponse = _toConsumableArray(_response.parsedBody || []);

          for (var _i11 = 0, _Object$keys8 = Object.keys(modelProperties); _i11 < _Object$keys8.length; _i11++) {
            var key = _Object$keys8[_i11];

            if (modelProperties[key].serializedName) {
              arrayResponse[key] = _response.parsedBody[key];
            }
          }

          if (parsedHeaders) {
            for (var _i12 = 0, _Object$keys9 = Object.keys(parsedHeaders); _i12 < _Object$keys9.length; _i12++) {
              var _key3 = _Object$keys9[_i12];
              arrayResponse[_key3] = parsedHeaders[_key3];
            }
          }

          addOperationResponse(arrayResponse);
          return arrayResponse;
        }

        if (typeName === "Composite" || typeName === "Dictionary") {
          return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));
        }
      }

      if (bodyMapper || _response.request.method === "HEAD" || _util_utils__WEBPACK_IMPORTED_MODULE_16__["isPrimitiveType"](_response.parsedBody)) {
        // primitive body types and HEAD booleans
        return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), {
          body: _response.parsedBody
        }));
      }

      return addOperationResponse(Object.assign(Object.assign({}, parsedHeaders), _response.parsedBody));
    }

    function getCredentialScopes(options, baseUri) {
      if (options === null || options === void 0 ? void 0 : options.credentialScopes) {
        var scopes = options.credentialScopes;
        return Array.isArray(scopes) ? scopes.map(function (scope) {
          return new _url__WEBPACK_IMPORTED_MODULE_15__["URL"](scope).toString();
        }) : new _url__WEBPACK_IMPORTED_MODULE_15__["URL"](scopes).toString();
      }

      if (baseUri) {
        return "".concat(baseUri, "/.default");
      }

      return undefined;
    } //# sourceMappingURL=serviceClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/url.js": function node_modulesAzureCoreHttpDistEsmSrcUrlJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URLQuery", function () {
      return URLQuery;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URLBuilder", function () {
      return URLBuilder;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URLToken", function () {
      return URLToken;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAlphaNumericCharacter", function () {
      return isAlphaNumericCharacter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URLTokenizer", function () {
      return URLTokenizer;
    });
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js");
    /* harmony import */


    var _util_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./util/url */
    "./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "URL", function () {
      return _util_url__WEBPACK_IMPORTED_MODULE_1__["URL"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A class that handles the query portion of a URLBuilder.
     */


    var URLQuery = /*#__PURE__*/function () {
      function URLQuery() {
        _classCallCheck(this, URLQuery);

        this._rawQuery = {};
      }
      /**
       * Get whether or not there any query parameters in this URLQuery.
       */


      _createClass(URLQuery, [{
        key: "any",
        value: function any() {
          return Object.keys(this._rawQuery).length > 0;
        }
        /**
         * Get the keys of the query string.
         */

      }, {
        key: "keys",
        value: function keys() {
          return Object.keys(this._rawQuery);
        }
        /**
         * Set a query parameter with the provided name and value. If the parameterValue is undefined or
         * empty, then this will attempt to remove an existing query parameter with the provided
         * parameterName.
         */

      }, {
        key: "set",
        value: function set(parameterName, parameterValue) {
          var caseParameterValue = parameterValue;

          if (parameterName) {
            if (caseParameterValue !== undefined && caseParameterValue !== null) {
              var newValue = Array.isArray(caseParameterValue) ? caseParameterValue : caseParameterValue.toString();
              this._rawQuery[parameterName] = newValue;
            } else {
              delete this._rawQuery[parameterName];
            }
          }
        }
        /**
         * Get the value of the query parameter with the provided name. If no parameter exists with the
         * provided parameter name, then undefined will be returned.
         */

      }, {
        key: "get",
        value: function get(parameterName) {
          return parameterName ? this._rawQuery[parameterName] : undefined;
        }
        /**
         * Get the string representation of this query. The return value will not start with a "?".
         */

      }, {
        key: "toString",
        value: function toString() {
          var result = "";

          for (var parameterName in this._rawQuery) {
            if (result) {
              result += "&";
            }

            var parameterValue = this._rawQuery[parameterName];

            if (Array.isArray(parameterValue)) {
              var parameterStrings = [];

              var _iterator10 = _createForOfIteratorHelper(parameterValue),
                  _step10;

              try {
                for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                  var parameterValueElement = _step10.value;
                  parameterStrings.push("".concat(parameterName, "=").concat(parameterValueElement));
                }
              } catch (err) {
                _iterator10.e(err);
              } finally {
                _iterator10.f();
              }

              result += parameterStrings.join("&");
            } else {
              result += "".concat(parameterName, "=").concat(parameterValue);
            }
          }

          return result;
        }
        /**
         * Parse a URLQuery from the provided text.
         */

      }], [{
        key: "parse",
        value: function parse(text) {
          var result = new URLQuery();

          if (text) {
            if (text.startsWith("?")) {
              text = text.substring(1);
            }

            var currentState = "ParameterName";
            var parameterName = "";
            var parameterValue = "";

            for (var i = 0; i < text.length; ++i) {
              var currentCharacter = text[i];

              switch (currentState) {
                case "ParameterName":
                  switch (currentCharacter) {
                    case "=":
                      currentState = "ParameterValue";
                      break;

                    case "&":
                      parameterName = "";
                      parameterValue = "";
                      break;

                    default:
                      parameterName += currentCharacter;
                      break;
                  }

                  break;

                case "ParameterValue":
                  switch (currentCharacter) {
                    case "&":
                      result.set(parameterName, parameterValue);
                      parameterName = "";
                      parameterValue = "";
                      currentState = "ParameterName";
                      break;

                    default:
                      parameterValue += currentCharacter;
                      break;
                  }

                  break;

                default:
                  throw new Error("Unrecognized URLQuery parse state: " + currentState);
              }
            }

            if (currentState === "ParameterValue") {
              result.set(parameterName, parameterValue);
            }
          }

          return result;
        }
      }]);

      return URLQuery;
    }();
    /**
     * A class that handles creating, modifying, and parsing URLs.
     */


    var URLBuilder = /*#__PURE__*/function () {
      function URLBuilder() {
        _classCallCheck(this, URLBuilder);
      }

      _createClass(URLBuilder, [{
        key: "setScheme",
        value:
        /**
         * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL
         * (such as a host, port, path, or query), those parts will be added to this URL as well.
         */
        function setScheme(scheme) {
          if (!scheme) {
            this._scheme = undefined;
          } else {
            this.set(scheme, "SCHEME");
          }
        }
        /**
         * Get the scheme that has been set in this URL.
         */

      }, {
        key: "getScheme",
        value: function getScheme() {
          return this._scheme;
        }
        /**
         * Set the host for this URL. If the provided host contains other parts of a URL (such as a
         * port, path, or query), those parts will be added to this URL as well.
         */

      }, {
        key: "setHost",
        value: function setHost(host) {
          if (!host) {
            this._host = undefined;
          } else {
            this.set(host, "SCHEME_OR_HOST");
          }
        }
        /**
         * Get the host that has been set in this URL.
         */

      }, {
        key: "getHost",
        value: function getHost() {
          return this._host;
        }
        /**
         * Set the port for this URL. If the provided port contains other parts of a URL (such as a
         * path or query), those parts will be added to this URL as well.
         */

      }, {
        key: "setPort",
        value: function setPort(port) {
          if (port === undefined || port === null || port === "") {
            this._port = undefined;
          } else {
            this.set(port.toString(), "PORT");
          }
        }
        /**
         * Get the port that has been set in this URL.
         */

      }, {
        key: "getPort",
        value: function getPort() {
          return this._port;
        }
        /**
         * Set the path for this URL. If the provided path contains a query, then it will be added to
         * this URL as well.
         */

      }, {
        key: "setPath",
        value: function setPath(path) {
          if (!path) {
            this._path = undefined;
          } else {
            var schemeIndex = path.indexOf("://");

            if (schemeIndex !== -1) {
              var schemeStart = path.lastIndexOf("/", schemeIndex); // Make sure to only grab the URL part of the path before setting the state back to SCHEME
              // this will handle cases such as "/a/b/c/https://microsoft.com" => "https://microsoft.com"

              this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), "SCHEME");
            } else {
              this.set(path, "PATH");
            }
          }
        }
        /**
         * Append the provided path to this URL's existing path. If the provided path contains a query,
         * then it will be added to this URL as well.
         */

      }, {
        key: "appendPath",
        value: function appendPath(path) {
          if (path) {
            var currentPath = this.getPath();

            if (currentPath) {
              if (!currentPath.endsWith("/")) {
                currentPath += "/";
              }

              if (path.startsWith("/")) {
                path = path.substring(1);
              }

              path = currentPath + path;
            }

            this.set(path, "PATH");
          }
        }
        /**
         * Get the path that has been set in this URL.
         */

      }, {
        key: "getPath",
        value: function getPath() {
          return this._path;
        }
        /**
         * Set the query in this URL.
         */

      }, {
        key: "setQuery",
        value: function setQuery(query) {
          if (!query) {
            this._query = undefined;
          } else {
            this._query = URLQuery.parse(query);
          }
        }
        /**
         * Set a query parameter with the provided name and value in this URL's query. If the provided
         * query parameter value is undefined or empty, then the query parameter will be removed if it
         * existed.
         */

      }, {
        key: "setQueryParameter",
        value: function setQueryParameter(queryParameterName, queryParameterValue) {
          if (queryParameterName) {
            if (!this._query) {
              this._query = new URLQuery();
            }

            this._query.set(queryParameterName, queryParameterValue);
          }
        }
        /**
         * Get the value of the query parameter with the provided query parameter name. If no query
         * parameter exists with the provided name, then undefined will be returned.
         */

      }, {
        key: "getQueryParameterValue",
        value: function getQueryParameterValue(queryParameterName) {
          return this._query ? this._query.get(queryParameterName) : undefined;
        }
        /**
         * Get the query in this URL.
         */

      }, {
        key: "getQuery",
        value: function getQuery() {
          return this._query ? this._query.toString() : undefined;
        }
        /**
         * Set the parts of this URL by parsing the provided text using the provided startState.
         */

      }, {
        key: "set",
        value: function set(text, startState) {
          var tokenizer = new URLTokenizer(text, startState);

          while (tokenizer.next()) {
            var token = tokenizer.current();
            var tokenPath = void 0;

            if (token) {
              switch (token.type) {
                case "SCHEME":
                  this._scheme = token.text || undefined;
                  break;

                case "HOST":
                  this._host = token.text || undefined;
                  break;

                case "PORT":
                  this._port = token.text || undefined;
                  break;

                case "PATH":
                  tokenPath = token.text || undefined;

                  if (!this._path || this._path === "/" || tokenPath !== "/") {
                    this._path = tokenPath;
                  }

                  break;

                case "QUERY":
                  this._query = URLQuery.parse(token.text);
                  break;

                default:
                  throw new Error("Unrecognized URLTokenType: ".concat(token.type));
              }
            }
          }
        }
      }, {
        key: "toString",
        value: function toString() {
          var result = "";

          if (this._scheme) {
            result += "".concat(this._scheme, "://");
          }

          if (this._host) {
            result += this._host;
          }

          if (this._port) {
            result += ":".concat(this._port);
          }

          if (this._path) {
            if (!this._path.startsWith("/")) {
              result += "/";
            }

            result += this._path;
          }

          if (this._query && this._query.any()) {
            result += "?".concat(this._query.toString());
          }

          return result;
        }
        /**
         * If the provided searchValue is found in this URLBuilder, then replace it with the provided
         * replaceValue.
         */

      }, {
        key: "replaceAll",
        value: function replaceAll(searchValue, replaceValue) {
          if (searchValue) {
            this.setScheme(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__["replaceAll"])(this.getScheme(), searchValue, replaceValue));
            this.setHost(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__["replaceAll"])(this.getHost(), searchValue, replaceValue));
            this.setPort(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__["replaceAll"])(this.getPort(), searchValue, replaceValue));
            this.setPath(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__["replaceAll"])(this.getPath(), searchValue, replaceValue));
            this.setQuery(Object(_util_utils__WEBPACK_IMPORTED_MODULE_0__["replaceAll"])(this.getQuery(), searchValue, replaceValue));
          }
        }
      }], [{
        key: "parse",
        value: function parse(text) {
          var result = new URLBuilder();
          result.set(text, "SCHEME_OR_HOST");
          return result;
        }
      }]);

      return URLBuilder;
    }();

    var URLToken = /*#__PURE__*/function () {
      function URLToken(text, type) {
        _classCallCheck(this, URLToken);

        this.text = text;
        this.type = type;
      }

      _createClass(URLToken, null, [{
        key: "scheme",
        value: function scheme(text) {
          return new URLToken(text, "SCHEME");
        }
      }, {
        key: "host",
        value: function host(text) {
          return new URLToken(text, "HOST");
        }
      }, {
        key: "port",
        value: function port(text) {
          return new URLToken(text, "PORT");
        }
      }, {
        key: "path",
        value: function path(text) {
          return new URLToken(text, "PATH");
        }
      }, {
        key: "query",
        value: function query(text) {
          return new URLToken(text, "QUERY");
        }
      }]);

      return URLToken;
    }();
    /**
     * Get whether or not the provided character (single character string) is an alphanumeric (letter or
     * digit) character.
     */


    function isAlphaNumericCharacter(character) {
      var characterCode = character.charCodeAt(0);
      return 48
      /* '0' */
      <= characterCode && characterCode <= 57 || 65
      /* 'A' */
      <= characterCode && characterCode <= 90
      /* 'Z' */
      || 97
      /* 'a' */
      <= characterCode && characterCode <= 122
      /* 'z' */
      ;
    }
    /**
     * A class that tokenizes URL strings.
     */


    var URLTokenizer = /*#__PURE__*/function () {
      function URLTokenizer(_text, state) {
        _classCallCheck(this, URLTokenizer);

        this._text = _text;
        this._textLength = _text ? _text.length : 0;
        this._currentState = state !== undefined && state !== null ? state : "SCHEME_OR_HOST";
        this._currentIndex = 0;
      }
      /**
       * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer
       * hasn't started or has finished tokenizing.
       */


      _createClass(URLTokenizer, [{
        key: "current",
        value: function current() {
          return this._currentToken;
        }
        /**
         * Advance to the next URLToken and return whether or not a URLToken was found.
         */

      }, {
        key: "next",
        value: function next() {
          if (!hasCurrentCharacter(this)) {
            this._currentToken = undefined;
          } else {
            switch (this._currentState) {
              case "SCHEME":
                nextScheme(this);
                break;

              case "SCHEME_OR_HOST":
                nextSchemeOrHost(this);
                break;

              case "HOST":
                nextHost(this);
                break;

              case "PORT":
                nextPort(this);
                break;

              case "PATH":
                nextPath(this);
                break;

              case "QUERY":
                nextQuery(this);
                break;

              default:
                throw new Error("Unrecognized URLTokenizerState: ".concat(this._currentState));
            }
          }

          return !!this._currentToken;
        }
      }]);

      return URLTokenizer;
    }();
    /**
     * Read the remaining characters from this Tokenizer's character stream.
     */


    function readRemaining(tokenizer) {
      var result = "";

      if (tokenizer._currentIndex < tokenizer._textLength) {
        result = tokenizer._text.substring(tokenizer._currentIndex);
        tokenizer._currentIndex = tokenizer._textLength;
      }

      return result;
    }
    /**
     * Whether or not this URLTokenizer has a current character.
     */


    function hasCurrentCharacter(tokenizer) {
      return tokenizer._currentIndex < tokenizer._textLength;
    }
    /**
     * Get the character in the text string at the current index.
     */


    function getCurrentCharacter(tokenizer) {
      return tokenizer._text[tokenizer._currentIndex];
    }
    /**
     * Advance to the character in text that is "step" characters ahead. If no step value is provided,
     * then step will default to 1.
     */


    function nextCharacter(tokenizer, step) {
      if (hasCurrentCharacter(tokenizer)) {
        if (!step) {
          step = 1;
        }

        tokenizer._currentIndex += step;
      }
    }
    /**
     * Starting with the current character, peek "charactersToPeek" number of characters ahead in this
     * Tokenizer's stream of characters.
     */


    function peekCharacters(tokenizer, charactersToPeek) {
      var endIndex = tokenizer._currentIndex + charactersToPeek;

      if (tokenizer._textLength < endIndex) {
        endIndex = tokenizer._textLength;
      }

      return tokenizer._text.substring(tokenizer._currentIndex, endIndex);
    }
    /**
     * Read characters from this Tokenizer until the end of the stream or until the provided condition
     * is false when provided the current character.
     */


    function readWhile(tokenizer, condition) {
      var result = "";

      while (hasCurrentCharacter(tokenizer)) {
        var currentCharacter = getCurrentCharacter(tokenizer);

        if (!condition(currentCharacter)) {
          break;
        } else {
          result += currentCharacter;
          nextCharacter(tokenizer);
        }
      }

      return result;
    }
    /**
     * Read characters from this Tokenizer until a non-alphanumeric character or the end of the
     * character stream is reached.
     */


    function readWhileLetterOrDigit(tokenizer) {
      return readWhile(tokenizer, function (character) {
        return isAlphaNumericCharacter(character);
      });
    }
    /**
     * Read characters from this Tokenizer until one of the provided terminating characters is read or
     * the end of the character stream is reached.
     */


    function readUntilCharacter(tokenizer) {
      for (var _len = arguments.length, terminatingCharacters = new Array(_len > 1 ? _len - 1 : 0), _key4 = 1; _key4 < _len; _key4++) {
        terminatingCharacters[_key4 - 1] = arguments[_key4];
      }

      return readWhile(tokenizer, function (character) {
        return terminatingCharacters.indexOf(character) === -1;
      });
    }

    function nextScheme(tokenizer) {
      var scheme = readWhileLetterOrDigit(tokenizer);
      tokenizer._currentToken = URLToken.scheme(scheme);

      if (!hasCurrentCharacter(tokenizer)) {
        tokenizer._currentState = "DONE";
      } else {
        tokenizer._currentState = "HOST";
      }
    }

    function nextSchemeOrHost(tokenizer) {
      var schemeOrHost = readUntilCharacter(tokenizer, ":", "/", "?");

      if (!hasCurrentCharacter(tokenizer)) {
        tokenizer._currentToken = URLToken.host(schemeOrHost);
        tokenizer._currentState = "DONE";
      } else if (getCurrentCharacter(tokenizer) === ":") {
        if (peekCharacters(tokenizer, 3) === "://") {
          tokenizer._currentToken = URLToken.scheme(schemeOrHost);
          tokenizer._currentState = "HOST";
        } else {
          tokenizer._currentToken = URLToken.host(schemeOrHost);
          tokenizer._currentState = "PORT";
        }
      } else {
        tokenizer._currentToken = URLToken.host(schemeOrHost);

        if (getCurrentCharacter(tokenizer) === "/") {
          tokenizer._currentState = "PATH";
        } else {
          tokenizer._currentState = "QUERY";
        }
      }
    }

    function nextHost(tokenizer) {
      if (peekCharacters(tokenizer, 3) === "://") {
        nextCharacter(tokenizer, 3);
      }

      var host = readUntilCharacter(tokenizer, ":", "/", "?");
      tokenizer._currentToken = URLToken.host(host);

      if (!hasCurrentCharacter(tokenizer)) {
        tokenizer._currentState = "DONE";
      } else if (getCurrentCharacter(tokenizer) === ":") {
        tokenizer._currentState = "PORT";
      } else if (getCurrentCharacter(tokenizer) === "/") {
        tokenizer._currentState = "PATH";
      } else {
        tokenizer._currentState = "QUERY";
      }
    }

    function nextPort(tokenizer) {
      if (getCurrentCharacter(tokenizer) === ":") {
        nextCharacter(tokenizer);
      }

      var port = readUntilCharacter(tokenizer, "/", "?");
      tokenizer._currentToken = URLToken.port(port);

      if (!hasCurrentCharacter(tokenizer)) {
        tokenizer._currentState = "DONE";
      } else if (getCurrentCharacter(tokenizer) === "/") {
        tokenizer._currentState = "PATH";
      } else {
        tokenizer._currentState = "QUERY";
      }
    }

    function nextPath(tokenizer) {
      var path = readUntilCharacter(tokenizer, "?");
      tokenizer._currentToken = URLToken.path(path);

      if (!hasCurrentCharacter(tokenizer)) {
        tokenizer._currentState = "DONE";
      } else {
        tokenizer._currentState = "QUERY";
      }
    }

    function nextQuery(tokenizer) {
      if (getCurrentCharacter(tokenizer) === "?") {
        nextCharacter(tokenizer);
      }

      var query = readRemaining(tokenizer);
      tokenizer._currentToken = URLToken.query(query);
      tokenizer._currentState = "DONE";
    } //# sourceMappingURL=url.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/base64.browser.js": function node_modulesAzureCoreHttpDistEsmSrcUtilBase64BrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encodeString", function () {
      return encodeString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encodeByteArray", function () {
      return encodeByteArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "decodeString", function () {
      return decodeString;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Encodes a string in base64 format.
     * @param value - The string to encode
     */


    function encodeString(value) {
      return btoa(value);
    }
    /**
     * Encodes a byte array in base64 format.
     * @param value - The Uint8Aray to encode
     */


    function encodeByteArray(value) {
      var str = "";

      for (var i = 0; i < value.length; i++) {
        str += String.fromCharCode(value[i]);
      }

      return btoa(str);
    }
    /**
     * Decodes a base64 string into a byte array.
     * @param value - The base64 string to decode
     */


    function decodeString(value) {
      var byteString = atob(value);
      var arr = new Uint8Array(byteString.length);

      for (var i = 0; i < byteString.length; i++) {
        arr[i] = byteString.charCodeAt(i);
      }

      return arr;
    } //# sourceMappingURL=base64.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/constants.js": function node_modulesAzureCoreHttpDistEsmSrcUtilConstantsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Constants", function () {
      return Constants;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var Constants = {
      /**
       * The core-http version
       */
      coreHttpVersion: "2.2.0",

      /**
       * Specifies HTTP.
       */
      HTTP: "http:",

      /**
       * Specifies HTTPS.
       */
      HTTPS: "https:",

      /**
       * Specifies HTTP Proxy.
       */
      HTTP_PROXY: "HTTP_PROXY",

      /**
       * Specifies HTTPS Proxy.
       */
      HTTPS_PROXY: "HTTPS_PROXY",

      /**
       * Specifies NO Proxy.
       */
      NO_PROXY: "NO_PROXY",

      /**
       * Specifies ALL Proxy.
       */
      ALL_PROXY: "ALL_PROXY",
      HttpConstants: {
        /**
         * Http Verbs
         */
        HttpVerbs: {
          PUT: "PUT",
          GET: "GET",
          DELETE: "DELETE",
          POST: "POST",
          MERGE: "MERGE",
          HEAD: "HEAD",
          PATCH: "PATCH"
        },
        StatusCodes: {
          TooManyRequests: 429,
          ServiceUnavailable: 503
        }
      },

      /**
       * Defines constants for use with HTTP headers.
       */
      HeaderConstants: {
        /**
         * The Authorization header.
         */
        AUTHORIZATION: "authorization",
        AUTHORIZATION_SCHEME: "Bearer",

        /**
         * The Retry-After response-header field can be used with a 503 (Service
         * Unavailable) or 349 (Too Many Requests) responses to indicate how long
         * the service is expected to be unavailable to the requesting client.
         */
        RETRY_AFTER: "Retry-After",

        /**
         * The UserAgent header.
         */
        USER_AGENT: "User-Agent"
      }
    }; //# sourceMappingURL=constants.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/delay.js": function node_modulesAzureCoreHttpDistEsmSrcUtilDelayJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "delay", function () {
      return delay;
    });
    /* harmony import */


    var _typeguards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./typeguards */
    "./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js");
    /* harmony import */


    var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/abort-controller */
    "./node_modules/@azure/abort-controller/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var StandardAbortMessage = "The operation was aborted.";
    /**
     * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.
     * @param delayInMs - The number of milliseconds to be delayed.
     * @param value - The value to be resolved with after a timeout of t milliseconds.
     * @param options - The options for delay - currently abort options
     *   @param abortSignal - The abortSignal associated with containing operation.
     *   @param abortErrorMsg - The abort error message associated with containing operation.
     * @returns - Resolved promise
     */

    function delay(delayInMs, value, options) {
      return new Promise(function (resolve, reject) {
        var timer = undefined;
        var onAborted = undefined;

        var rejectOnAbort = function rejectOnAbort() {
          return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_1__["AbortError"]((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));
        };

        var removeListeners = function removeListeners() {
          if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {
            options.abortSignal.removeEventListener("abort", onAborted);
          }
        };

        onAborted = function onAborted() {
          if (Object(_typeguards__WEBPACK_IMPORTED_MODULE_0__["isDefined"])(timer)) {
            clearTimeout(timer);
          }

          removeListeners();
          return rejectOnAbort();
        };

        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {
          return rejectOnAbort();
        }

        timer = setTimeout(function () {
          removeListeners();
          resolve(value);
        }, delayInMs);

        if (options === null || options === void 0 ? void 0 : options.abortSignal) {
          options.abortSignal.addEventListener("abort", onAborted);
        }
      });
    } //# sourceMappingURL=delay.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/exponentialBackoffStrategy.js": function node_modulesAzureCoreHttpDistEsmSrcUtilExponentialBackoffStrategyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CLIENT_RETRY_COUNT", function () {
      return DEFAULT_CLIENT_RETRY_COUNT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CLIENT_RETRY_INTERVAL", function () {
      return DEFAULT_CLIENT_RETRY_INTERVAL;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CLIENT_MAX_RETRY_INTERVAL", function () {
      return DEFAULT_CLIENT_MAX_RETRY_INTERVAL;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CLIENT_MIN_RETRY_INTERVAL", function () {
      return DEFAULT_CLIENT_MIN_RETRY_INTERVAL;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNumber", function () {
      return isNumber;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "shouldRetry", function () {
      return shouldRetry;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "updateRetryData", function () {
      return updateRetryData;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var DEFAULT_CLIENT_RETRY_COUNT = 3; // intervals are in ms

    var DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;
    var DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;
    var DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;

    function isNumber(n) {
      return typeof n === "number";
    }
    /**
     * @internal
     * Determines if the operation should be retried.
     *
     * @param retryLimit - Specifies the max number of retries.
     * @param predicate - Initial chekck on whether to retry based on given responses or errors
     * @param retryData -  The retry data.
     * @returns True if the operation qualifies for a retry; false otherwise.
     */


    function shouldRetry(retryLimit, predicate, retryData, response, error) {
      if (!predicate(response, error)) {
        return false;
      }

      return retryData.retryCount < retryLimit;
    }
    /**
     * @internal
     * Updates the retry data for the next attempt.
     *
     * @param retryOptions - specifies retry interval, and its lower bound and upper bound.
     * @param retryData -  The retry data.
     * @param err - The operation"s error, if any.
     */


    function updateRetryData(retryOptions) {
      var retryData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        retryCount: 0,
        retryInterval: 0
      };
      var err = arguments.length > 2 ? arguments[2] : undefined;

      if (err) {
        if (retryData.error) {
          err.innerError = retryData.error;
        }

        retryData.error = err;
      } // Adjust retry count


      retryData.retryCount++; // Adjust retry interval

      var incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;
      var boundedRandDelta = retryOptions.retryInterval * 0.8 + Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));
      incrementDelta *= boundedRandDelta;
      retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);
      return retryData;
    } //# sourceMappingURL=exponentialBackoffStrategy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/inspect.browser.js": function node_modulesAzureCoreHttpDistEsmSrcUtilInspectBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "custom", function () {
      return custom;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var custom = {}; //# sourceMappingURL=inspect.browser.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/sanitizer.js": function node_modulesAzureCoreHttpDistEsmSrcUtilSanitizerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Sanitizer", function () {
      return Sanitizer;
    });
    /* harmony import */


    var _url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../url */
    "./node_modules/@azure/core-http/dist-esm/src/url.js");
    /* harmony import */


    var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var RedactedString = "REDACTED";
    var defaultAllowedHeaderNames = ["x-ms-client-request-id", "x-ms-return-client-request-id", "x-ms-useragent", "x-ms-correlation-request-id", "x-ms-request-id", "client-request-id", "ms-cv", "return-client-request-id", "traceparent", "Access-Control-Allow-Credentials", "Access-Control-Allow-Headers", "Access-Control-Allow-Methods", "Access-Control-Allow-Origin", "Access-Control-Expose-Headers", "Access-Control-Max-Age", "Access-Control-Request-Headers", "Access-Control-Request-Method", "Origin", "Accept", "Accept-Encoding", "Cache-Control", "Connection", "Content-Length", "Content-Type", "Date", "ETag", "Expires", "If-Match", "If-Modified-Since", "If-None-Match", "If-Unmodified-Since", "Last-Modified", "Pragma", "Request-Id", "Retry-After", "Server", "Transfer-Encoding", "User-Agent"];
    var defaultAllowedQueryParameters = ["api-version"];

    var Sanitizer = /*#__PURE__*/function () {
      function Sanitizer() {
        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref3$allowedHeaderNa = _ref3.allowedHeaderNames,
            allowedHeaderNames = _ref3$allowedHeaderNa === void 0 ? [] : _ref3$allowedHeaderNa,
            _ref3$allowedQueryPar = _ref3.allowedQueryParameters,
            allowedQueryParameters = _ref3$allowedQueryPar === void 0 ? [] : _ref3$allowedQueryPar;

        _classCallCheck(this, Sanitizer);

        allowedHeaderNames = Array.isArray(allowedHeaderNames) ? defaultAllowedHeaderNames.concat(allowedHeaderNames) : defaultAllowedHeaderNames;
        allowedQueryParameters = Array.isArray(allowedQueryParameters) ? defaultAllowedQueryParameters.concat(allowedQueryParameters) : defaultAllowedQueryParameters;
        this.allowedHeaderNames = new Set(allowedHeaderNames.map(function (n) {
          return n.toLowerCase();
        }));
        this.allowedQueryParameters = new Set(allowedQueryParameters.map(function (p) {
          return p.toLowerCase();
        }));
      }

      _createClass(Sanitizer, [{
        key: "sanitize",
        value: function sanitize(obj) {
          var _this25 = this;

          var seen = new Set();
          return JSON.stringify(obj, function (key, value) {
            // Ensure Errors include their interesting non-enumerable members
            if (value instanceof Error) {
              return Object.assign(Object.assign({}, value), {
                name: value.name,
                message: value.message
              });
            }

            if (key === "_headersMap") {
              return _this25.sanitizeHeaders(value);
            } else if (key === "url") {
              return _this25.sanitizeUrl(value);
            } else if (key === "query") {
              return _this25.sanitizeQuery(value);
            } else if (key === "body") {
              // Don't log the request body
              return undefined;
            } else if (key === "response") {
              // Don't log response again
              return undefined;
            } else if (key === "operationSpec") {
              // When using sendOperationRequest, the request carries a massive
              // field with the autorest spec. No need to log it.
              return undefined;
            } else if (Array.isArray(value) || Object(_utils__WEBPACK_IMPORTED_MODULE_1__["isObject"])(value)) {
              if (seen.has(value)) {
                return "[Circular]";
              }

              seen.add(value);
            }

            return value;
          }, 2);
        }
      }, {
        key: "sanitizeHeaders",
        value: function sanitizeHeaders(value) {
          return this.sanitizeObject(value, this.allowedHeaderNames, function (v, k) {
            return v[k].value;
          });
        }
      }, {
        key: "sanitizeQuery",
        value: function sanitizeQuery(value) {
          return this.sanitizeObject(value, this.allowedQueryParameters, function (v, k) {
            return v[k];
          });
        }
      }, {
        key: "sanitizeObject",
        value: function sanitizeObject(value, allowedKeys, accessor) {
          if (typeof value !== "object" || value === null) {
            return value;
          }

          var sanitized = {};

          for (var _i13 = 0, _Object$keys10 = Object.keys(value); _i13 < _Object$keys10.length; _i13++) {
            var k = _Object$keys10[_i13];

            if (allowedKeys.has(k.toLowerCase())) {
              sanitized[k] = accessor(value, k);
            } else {
              sanitized[k] = RedactedString;
            }
          }

          return sanitized;
        }
      }, {
        key: "sanitizeUrl",
        value: function sanitizeUrl(value) {
          if (typeof value !== "string" || value === null) {
            return value;
          }

          var urlBuilder = _url__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(value);

          var queryString = urlBuilder.getQuery();

          if (!queryString) {
            return value;
          }

          var query = _url__WEBPACK_IMPORTED_MODULE_0__["URLQuery"].parse(queryString);

          var _iterator11 = _createForOfIteratorHelper(query.keys()),
              _step11;

          try {
            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
              var k = _step11.value;

              if (!this.allowedQueryParameters.has(k.toLowerCase())) {
                query.set(k, RedactedString);
              }
            }
          } catch (err) {
            _iterator11.e(err);
          } finally {
            _iterator11.f();
          }

          urlBuilder.setQuery(query.toString());
          return urlBuilder.toString();
        }
      }]);

      return Sanitizer;
    }(); //# sourceMappingURL=sanitizer.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js": function node_modulesAzureCoreHttpDistEsmSrcUtilSerializerCommonJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "XML_ATTRKEY", function () {
      return XML_ATTRKEY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "XML_CHARKEY", function () {
      return XML_CHARKEY;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Default key used to access the XML attributes.
     */


    var XML_ATTRKEY = "$";
    /**
     * Default key used to access the XML value content.
     */

    var XML_CHARKEY = "_"; //# sourceMappingURL=serializer.common.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/throttlingRetryStrategy.js": function node_modulesAzureCoreHttpDistEsmSrcUtilThrottlingRetryStrategyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_CLIENT_MAX_RETRY_COUNT", function () {
      return DEFAULT_CLIENT_MAX_RETRY_COUNT;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Maximum number of retries for the throttling retry policy
     */


    var DEFAULT_CLIENT_MAX_RETRY_COUNT = 3; //# sourceMappingURL=throttlingRetryStrategy.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/typeguards.js": function node_modulesAzureCoreHttpDistEsmSrcUtilTypeguardsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDefined", function () {
      return isDefined;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Helper TypeGuard that checks if the value is not null or undefined.
     * @param thing - Anything
     * @internal
     */


    function isDefined(thing) {
      return typeof thing !== "undefined" && thing !== null;
    } //# sourceMappingURL=typeguards.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/url.browser.js": function node_modulesAzureCoreHttpDistEsmSrcUtilUrlBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URL", function () {
      return url;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var url = URL; //# sourceMappingURL=url.browser.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/utils.js": function node_modulesAzureCoreHttpDistEsmSrcUtilUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNode", function () {
      return isNode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "urlIsHTTPS", function () {
      return urlIsHTTPS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encodeUri", function () {
      return encodeUri;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "stripResponse", function () {
      return stripResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "stripRequest", function () {
      return stripRequest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isValidUuid", function () {
      return isValidUuid;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateUuid", function () {
      return generateUuid;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "executePromisesSequentially", function () {
      return executePromisesSequentially;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "promiseToCallback", function () {
      return promiseToCallback;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "promiseToServiceCallback", function () {
      return promiseToServiceCallback;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "prepareXMLRootList", function () {
      return prepareXMLRootList;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "applyMixins", function () {
      return applyMixins;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDuration", function () {
      return isDuration;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "replaceAll", function () {
      return replaceAll;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isPrimitiveType", function () {
      return isPrimitiveType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getEnvironmentValue", function () {
      return getEnvironmentValue;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isObject", function () {
      return isObject;
    });
    /* harmony import */


    var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! uuid */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/index.js");
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./constants */
    "./node_modules/@azure/core-http/dist-esm/src/util/constants.js");
    /* harmony import */


    var _serializer_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
    /**
     * A constant that indicates whether the environment is node.js or browser based.
     */

    var isNode = typeof process !== "undefined" && !!process.version && !!process.versions && !!process.versions.node;
    /**
     * Checks if a parsed URL is HTTPS
     *
     * @param urlToCheck - The url to check
     * @returns True if the URL is HTTPS; false otherwise.
     */

    function urlIsHTTPS(urlToCheck) {
      return urlToCheck.protocol.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].HTTPS;
    }
    /**
     * Encodes an URI.
     *
     * @param uri - The URI to be encoded.
     * @returns The encoded URI.
     */


    function encodeUri(uri) {
      return encodeURIComponent(uri).replace(/!/g, "%21").replace(/"/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/\*/g, "%2A");
    }
    /**
     * Returns a stripped version of the Http Response which only contains body,
     * headers and the status.
     *
     * @param response - The Http Response
     * @returns The stripped version of Http Response.
     */


    function stripResponse(response) {
      var strippedResponse = {};
      strippedResponse.body = response.bodyAsText;
      strippedResponse.headers = response.headers;
      strippedResponse.status = response.status;
      return strippedResponse;
    }
    /**
     * Returns a stripped version of the Http Request that does not contain the
     * Authorization header.
     *
     * @param request - The Http Request object
     * @returns The stripped version of Http Request.
     */


    function stripRequest(request) {
      var strippedRequest = request.clone();

      if (strippedRequest.headers) {
        strippedRequest.headers.remove("authorization");
      }

      return strippedRequest;
    }
    /**
     * Validates the given uuid as a string
     *
     * @param uuid - The uuid as a string that needs to be validated
     * @returns True if the uuid is valid; false otherwise.
     */


    function isValidUuid(uuid) {
      return validUuidRegex.test(uuid);
    }
    /**
     * Generated UUID
     *
     * @returns RFC4122 v4 UUID.
     */


    function generateUuid() {
      return Object(uuid__WEBPACK_IMPORTED_MODULE_0__["v4"])();
    }
    /**
     * Executes an array of promises sequentially. Inspiration of this method is here:
     * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!
     *
     * @param promiseFactories - An array of promise factories(A function that return a promise)
     * @param kickstart - Input to the first promise that is used to kickstart the promise chain.
     * If not provided then the promise chain starts with undefined.
     * @returns A chain of resolved or rejected promises
     */


    function executePromisesSequentially(promiseFactories, kickstart) {
      var result = Promise.resolve(kickstart);
      promiseFactories.forEach(function (promiseFactory) {
        result = result.then(promiseFactory);
      });
      return result;
    }
    /**
     * Converts a Promise to a callback.
     * @param promise - The Promise to be converted to a callback
     * @returns A function that takes the callback `(cb: Function) => void`
     * @deprecated generated code should instead depend on responseToBody
     */
    // eslint-disable-next-line @typescript-eslint/ban-types


    function promiseToCallback(promise) {
      if (typeof promise.then !== "function") {
        throw new Error("The provided input is not a Promise.");
      } // eslint-disable-next-line @typescript-eslint/ban-types


      return function (cb) {
        promise.then(function (data) {
          // eslint-disable-next-line promise/no-callback-in-promise
          return cb(undefined, data);
        })["catch"](function (err) {
          // eslint-disable-next-line promise/no-callback-in-promise
          cb(err);
        });
      };
    }
    /**
     * Converts a Promise to a service callback.
     * @param promise - The Promise of HttpOperationResponse to be converted to a service callback
     * @returns A function that takes the service callback (cb: ServiceCallback<T>): void
     */


    function promiseToServiceCallback(promise) {
      if (typeof promise.then !== "function") {
        throw new Error("The provided input is not a Promise.");
      }

      return function (cb) {
        promise.then(function (data) {
          return process.nextTick(cb, undefined, data.parsedBody, data.request, data);
        })["catch"](function (err) {
          process.nextTick(cb, err);
        });
      };
    }

    function prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {
      if (!Array.isArray(obj)) {
        obj = [obj];
      }

      if (!xmlNamespaceKey || !xmlNamespace) {
        return _defineProperty({}, elementName, obj);
      }

      var result = _defineProperty({}, elementName, obj);

      result[_serializer_common__WEBPACK_IMPORTED_MODULE_2__["XML_ATTRKEY"]] = _defineProperty({}, xmlNamespaceKey, xmlNamespace);
      return result;
    }
    /**
     * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor
     * @param targetCtor - The target object on which the properties need to be applied.
     * @param sourceCtors - An array of source objects from which the properties need to be taken.
     */


    function applyMixins(targetCtorParam, sourceCtors) {
      var castTargetCtorParam = targetCtorParam;
      sourceCtors.forEach(function (sourceCtor) {
        Object.getOwnPropertyNames(sourceCtor.prototype).forEach(function (name) {
          castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];
        });
      });
    }

    var validateISODuration = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    /**
     * Indicates whether the given string is in ISO 8601 format.
     * @param value - The value to be validated for ISO 8601 duration format.
     * @returns `true` if valid, `false` otherwise.
     */

    function isDuration(value) {
      return validateISODuration.test(value);
    }
    /**
     * Replace all of the instances of searchValue in value with the provided replaceValue.
     * @param value - The value to search and replace in.
     * @param searchValue - The value to search for in the value argument.
     * @param replaceValue - The value to replace searchValue with in the value argument.
     * @returns The value where each instance of searchValue was replaced with replacedValue.
     */


    function replaceAll(value, searchValue, replaceValue) {
      return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || "");
    }
    /**
     * Determines whether the given entity is a basic/primitive type
     * (string, number, boolean, null, undefined).
     * @param value - Any entity
     * @returns true is it is primitive type, false otherwise.
     */


    function isPrimitiveType(value) {
      return typeof value !== "object" && typeof value !== "function" || value === null;
    }

    function getEnvironmentValue(name) {
      if (process.env[name]) {
        return process.env[name];
      } else if (process.env[name.toLowerCase()]) {
        return process.env[name.toLowerCase()];
      }

      return undefined;
    }
    /**
     * @internal
     * @returns true when input is an object type that is not null, Array, RegExp, or Date.
     */


    function isObject(input) {
      return typeof input === "object" && input !== null && !Array.isArray(input) && !(input instanceof RegExp) && !(input instanceof Date);
    } //# sourceMappingURL=utils.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/util/xml.browser.js": function node_modulesAzureCoreHttpDistEsmSrcUtilXmlBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "parseXML", function () {
      return parseXML;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "stringifyXML", function () {
      return stringifyXML;
    });
    /* harmony import */


    var _serializer_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./serializer.common */
    "./node_modules/@azure/core-http/dist-esm/src/util/serializer.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    if (!self.document || !self.DOMParser || !self.Node || !self.XMLSerializer) {
      throw new Error("This library depends on the following DOM objects: [\"document\", \"DOMParser\", \"Node\", \"XMLSerializer\"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. ");
    }

    var doc = document.implementation.createDocument(null, null, null);
    var parser = new DOMParser();

    function parseXML(str) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var _a, _b, _c;

      try {
        var updatedOptions = {
          rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : "",
          includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,
          xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__["XML_CHARKEY"]
        };
        var dom = parser.parseFromString(str, "application/xml");
        throwIfError(dom);
        var obj;

        if (updatedOptions.includeRoot) {
          obj = domToObject(dom, updatedOptions);
        } else {
          obj = domToObject(dom.childNodes[0], updatedOptions);
        }

        return Promise.resolve(obj);
      } catch (err) {
        return Promise.reject(err);
      }
    }

    var errorNS;

    function getErrorNamespace() {
      var _a;

      if (errorNS === undefined) {
        try {
          errorNS = (_a = parser.parseFromString("INVALID", "text/xml").getElementsByTagName("parsererror")[0].namespaceURI) !== null && _a !== void 0 ? _a : "";
        } catch (ignored) {
          // Most browsers will return a document containing <parsererror>, but IE will throw.
          errorNS = "";
        }
      }

      return errorNS;
    }

    function throwIfError(dom) {
      var parserErrors = dom.getElementsByTagName("parsererror");

      if (parserErrors.length > 0 && getErrorNamespace()) {
        for (var i = 0; i < parserErrors.length; i++) {
          if (parserErrors[i].namespaceURI === errorNS) {
            throw new Error(parserErrors[i].innerHTML);
          }
        }
      }
    }

    function isElement(node) {
      return !!node.attributes;
    }
    /**
     * Get the Element-typed version of the provided Node if the provided node is an element with
     * attributes. If it isn't, then undefined is returned.
     */


    function asElementWithAttributes(node) {
      return isElement(node) && node.hasAttributes() ? node : undefined;
    }

    function domToObject(node, options) {
      var result = {};
      var childNodeCount = node.childNodes.length;
      var firstChildNode = node.childNodes[0];
      var onlyChildTextValue = firstChildNode && childNodeCount === 1 && firstChildNode.nodeType === Node.TEXT_NODE && firstChildNode.nodeValue || undefined;
      var elementWithAttributes = asElementWithAttributes(node);

      if (elementWithAttributes) {
        result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__["XML_ATTRKEY"]] = {};

        for (var i = 0; i < elementWithAttributes.attributes.length; i++) {
          var attr = elementWithAttributes.attributes[i];
          result[_serializer_common__WEBPACK_IMPORTED_MODULE_0__["XML_ATTRKEY"]][attr.nodeName] = attr.nodeValue;
        }

        if (onlyChildTextValue) {
          result[options.xmlCharKey] = onlyChildTextValue;
        }
      } else if (childNodeCount === 0) {
        result = "";
      } else if (onlyChildTextValue) {
        result = onlyChildTextValue;
      }

      if (!onlyChildTextValue) {
        for (var _i14 = 0; _i14 < childNodeCount; _i14++) {
          var child = node.childNodes[_i14]; // Ignore leading/trailing whitespace nodes

          if (child.nodeType !== Node.TEXT_NODE) {
            var childObject = domToObject(child, options);

            if (!result[child.nodeName]) {
              result[child.nodeName] = childObject;
            } else if (Array.isArray(result[child.nodeName])) {
              result[child.nodeName].push(childObject);
            } else {
              result[child.nodeName] = [result[child.nodeName], childObject];
            }
          }
        }
      }

      return result;
    }

    var serializer = new XMLSerializer();

    function stringifyXML(content) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var _a, _b, _c;

      var updatedOptions = {
        rootName: (_a = opts.rootName) !== null && _a !== void 0 ? _a : "root",
        includeRoot: (_b = opts.includeRoot) !== null && _b !== void 0 ? _b : false,
        xmlCharKey: (_c = opts.xmlCharKey) !== null && _c !== void 0 ? _c : _serializer_common__WEBPACK_IMPORTED_MODULE_0__["XML_CHARKEY"]
      };
      var dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];
      return '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + serializer.serializeToString(dom);
    }

    function buildAttributes(attrs) {
      var result = [];

      for (var _i15 = 0, _Object$keys11 = Object.keys(attrs); _i15 < _Object$keys11.length; _i15++) {
        var key = _Object$keys11[_i15];
        var attr = doc.createAttribute(key);
        attr.value = attrs[key].toString();
        result.push(attr);
      }

      return result;
    }

    function buildNode(obj, elementName, options) {
      if (obj === undefined || obj === null || typeof obj === "string" || typeof obj === "number" || typeof obj === "boolean") {
        var elem = doc.createElement(elementName);
        elem.textContent = obj === undefined || obj === null ? "" : obj.toString();
        return [elem];
      } else if (Array.isArray(obj)) {
        var result = [];

        var _iterator12 = _createForOfIteratorHelper(obj),
            _step12;

        try {
          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
            var arrayElem = _step12.value;

            var _iterator13 = _createForOfIteratorHelper(buildNode(arrayElem, elementName, options)),
                _step13;

            try {
              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                var child = _step13.value;
                result.push(child);
              }
            } catch (err) {
              _iterator13.e(err);
            } finally {
              _iterator13.f();
            }
          }
        } catch (err) {
          _iterator12.e(err);
        } finally {
          _iterator12.f();
        }

        return result;
      } else if (typeof obj === "object") {
        var _elem = doc.createElement(elementName);

        for (var _i16 = 0, _Object$keys12 = Object.keys(obj); _i16 < _Object$keys12.length; _i16++) {
          var key = _Object$keys12[_i16];

          if (key === _serializer_common__WEBPACK_IMPORTED_MODULE_0__["XML_ATTRKEY"]) {
            var _iterator14 = _createForOfIteratorHelper(buildAttributes(obj[key])),
                _step14;

            try {
              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                var attr = _step14.value;

                _elem.attributes.setNamedItem(attr);
              }
            } catch (err) {
              _iterator14.e(err);
            } finally {
              _iterator14.f();
            }
          } else if (key === options.xmlCharKey) {
            _elem.textContent = obj[key].toString();
          } else {
            var _iterator15 = _createForOfIteratorHelper(buildNode(obj[key], key, options)),
                _step15;

            try {
              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                var _child = _step15.value;

                _elem.appendChild(_child);
              }
            } catch (err) {
              _iterator15.e(err);
            } finally {
              _iterator15.f();
            }
          }
        }

        return [_elem];
      } else {
        throw new Error("Illegal value passed to buildObject: ".concat(obj));
      }
    } //# sourceMappingURL=xml.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/webResource.js": function node_modulesAzureCoreHttpDistEsmSrcWebResourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isWebResourceLike", function () {
      return isWebResourceLike;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "WebResource", function () {
      return WebResource;
    });
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js");
    /* harmony import */


    var _serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./serializer */
    "./node_modules/@azure/core-http/dist-esm/src/serializer.js");
    /* harmony import */


    var _util_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./util/utils */
    "./node_modules/@azure/core-http/dist-esm/src/util/utils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function isWebResourceLike(object) {
      if (object && typeof object === "object") {
        var castObject = object;

        if (typeof castObject.url === "string" && typeof castObject.method === "string" && typeof castObject.headers === "object" && Object(_httpHeaders__WEBPACK_IMPORTED_MODULE_0__["isHttpHeadersLike"])(castObject.headers) && typeof castObject.validateRequestProperties === "function" && typeof castObject.prepare === "function" && typeof castObject.clone === "function") {
          return true;
        }
      }

      return false;
    }
    /**
     * Creates a new WebResource object.
     *
     * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary
     * properties to initiate a request.
     */


    var WebResource = /*#__PURE__*/function () {
      function WebResource(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, decompressResponse, streamResponseStatusCodes) {
        _classCallCheck(this, WebResource);

        this.streamResponseBody = streamResponseBody;
        this.streamResponseStatusCodes = streamResponseStatusCodes;
        this.url = url || "";
        this.method = method || "GET";
        this.headers = Object(_httpHeaders__WEBPACK_IMPORTED_MODULE_0__["isHttpHeadersLike"])(headers) ? headers : new _httpHeaders__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"](headers);
        this.body = body;
        this.query = query;
        this.formData = undefined;
        this.withCredentials = withCredentials || false;
        this.abortSignal = abortSignal;
        this.timeout = timeout || 0;
        this.onUploadProgress = onUploadProgress;
        this.onDownloadProgress = onDownloadProgress;
        this.proxySettings = proxySettings;
        this.keepAlive = keepAlive;
        this.decompressResponse = decompressResponse;
        this.requestId = this.headers.get("x-ms-client-request-id") || Object(_util_utils__WEBPACK_IMPORTED_MODULE_2__["generateUuid"])();
      }
      /**
       * Validates that the required properties such as method, url, headers["Content-Type"],
       * headers["accept-language"] are defined. It will throw an error if one of the above
       * mentioned properties are not defined.
       */


      _createClass(WebResource, [{
        key: "validateRequestProperties",
        value: function validateRequestProperties() {
          if (!this.method) {
            throw new Error("WebResource.method is required.");
          }

          if (!this.url) {
            throw new Error("WebResource.url is required.");
          }
        }
        /**
         * Prepares the request.
         * @param options - Options to provide for preparing the request.
         * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.
         */

      }, {
        key: "prepare",
        value: function prepare(options) {
          if (!options) {
            throw new Error("options object is required");
          }

          if (options.method === undefined || options.method === null || typeof options.method.valueOf() !== "string") {
            throw new Error("options.method must be a string.");
          }

          if (options.url && options.pathTemplate) {
            throw new Error("options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.");
          }

          if ((options.pathTemplate === undefined || options.pathTemplate === null || typeof options.pathTemplate.valueOf() !== "string") && (options.url === undefined || options.url === null || typeof options.url.valueOf() !== "string")) {
            throw new Error("Please provide exactly one of options.pathTemplate or options.url.");
          } // set the url if it is provided.


          if (options.url) {
            if (typeof options.url !== "string") {
              throw new Error('options.url must be of type "string".');
            }

            this.url = options.url;
          } // set the method


          if (options.method) {
            var validMethods = ["GET", "PUT", "HEAD", "DELETE", "OPTIONS", "POST", "PATCH", "TRACE"];

            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {
              throw new Error('The provided method "' + options.method + '" is invalid. Supported HTTP methods are: ' + JSON.stringify(validMethods));
            }
          }

          this.method = options.method.toUpperCase(); // construct the url if path template is provided

          if (options.pathTemplate) {
            var pathTemplate = options.pathTemplate,
                pathParameters = options.pathParameters;

            if (typeof pathTemplate !== "string") {
              throw new Error('options.pathTemplate must be of type "string".');
            }

            if (!options.baseUrl) {
              options.baseUrl = "https://management.azure.com";
            }

            var baseUrl = options.baseUrl;
            var url = baseUrl + (baseUrl.endsWith("/") ? "" : "/") + (pathTemplate.startsWith("/") ? pathTemplate.slice(1) : pathTemplate);
            var segments = url.match(/({[\w-]*\s*[\w-]*})/gi);

            if (segments && segments.length) {
              if (!pathParameters) {
                throw new Error("pathTemplate: ".concat(pathTemplate, " has been provided. Hence, options.pathParameters must also be provided."));
              }

              segments.forEach(function (item) {
                var pathParamName = item.slice(1, -1);
                var pathParam = pathParameters[pathParamName];

                if (pathParam === null || pathParam === undefined || !(typeof pathParam === "string" || typeof pathParam === "object")) {
                  var stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);
                  throw new Error("pathTemplate: ".concat(pathTemplate, " contains the path parameter ").concat(pathParamName) + " however, it is not present in parameters: ".concat(stringifiedPathParameters, ".") + "The value of the path parameter can either be a \"string\" of the form { ".concat(pathParamName, ": \"some sample value\" } or ") + "it can be an \"object\" of the form { \"".concat(pathParamName, "\": { value: \"some sample value\", skipUrlEncoding: true } }."));
                }

                if (typeof pathParam.valueOf() === "string") {
                  url = url.replace(item, encodeURIComponent(pathParam));
                }

                if (typeof pathParam.valueOf() === "object") {
                  if (!pathParam.value) {
                    throw new Error("options.pathParameters[".concat(pathParamName, "] is of type \"object\" but it does not contain a \"value\" property."));
                  }

                  if (pathParam.skipUrlEncoding) {
                    url = url.replace(item, pathParam.value);
                  } else {
                    url = url.replace(item, encodeURIComponent(pathParam.value));
                  }
                }
              });
            }

            this.url = url;
          } // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.


          if (options.queryParameters) {
            var queryParameters = options.queryParameters;

            if (typeof queryParameters !== "object") {
              throw new Error("options.queryParameters must be of type object. It should be a JSON object " + "of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. " + "The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.");
            } // append question mark if it is not present in the url


            if (this.url && this.url.indexOf("?") === -1) {
              this.url += "?";
            } // construct queryString


            var queryParams = []; // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().

            this.query = {};

            for (var queryParamName in queryParameters) {
              var queryParam = queryParameters[queryParamName];

              if (queryParam) {
                if (typeof queryParam === "string") {
                  queryParams.push(queryParamName + "=" + encodeURIComponent(queryParam));
                  this.query[queryParamName] = encodeURIComponent(queryParam);
                } else if (typeof queryParam === "object") {
                  if (!queryParam.value) {
                    throw new Error("options.queryParameters[".concat(queryParamName, "] is of type \"object\" but it does not contain a \"value\" property."));
                  }

                  if (queryParam.skipUrlEncoding) {
                    queryParams.push(queryParamName + "=" + queryParam.value);
                    this.query[queryParamName] = queryParam.value;
                  } else {
                    queryParams.push(queryParamName + "=" + encodeURIComponent(queryParam.value));
                    this.query[queryParamName] = encodeURIComponent(queryParam.value);
                  }
                }
              }
            } // end-of-for
            // append the queryString


            this.url += queryParams.join("&");
          } // add headers to the request if they are provided


          if (options.headers) {
            var headers = options.headers;

            for (var _i17 = 0, _Object$keys13 = Object.keys(options.headers); _i17 < _Object$keys13.length; _i17++) {
              var headerName = _Object$keys13[_i17];
              this.headers.set(headerName, headers[headerName]);
            }
          } // ensure accept-language is set correctly


          if (!this.headers.get("accept-language")) {
            this.headers.set("accept-language", "en-US");
          } // ensure the request-id is set correctly


          if (!this.headers.get("x-ms-client-request-id") && !options.disableClientRequestId) {
            this.headers.set("x-ms-client-request-id", this.requestId);
          } // default


          if (!this.headers.get("Content-Type")) {
            this.headers.set("Content-Type", "application/json; charset=utf-8");
          } // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly


          this.body = options.body;

          if (options.body !== undefined && options.body !== null) {
            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.
            if (options.bodyIsStream) {
              if (!this.headers.get("Transfer-Encoding")) {
                this.headers.set("Transfer-Encoding", "chunked");
              }

              if (this.headers.get("Content-Type") !== "application/octet-stream") {
                this.headers.set("Content-Type", "application/octet-stream");
              }
            } else {
              if (options.serializationMapper) {
                this.body = new _serializer__WEBPACK_IMPORTED_MODULE_1__["Serializer"](options.mappers).serialize(options.serializationMapper, options.body, "requestBody");
              }

              if (!options.disableJsonStringifyOnBody) {
                this.body = JSON.stringify(options.body);
              }
            }
          }

          if (options.spanOptions) {
            this.spanOptions = options.spanOptions;
          }

          if (options.tracingContext) {
            this.tracingContext = options.tracingContext;
          }

          this.abortSignal = options.abortSignal;
          this.onDownloadProgress = options.onDownloadProgress;
          this.onUploadProgress = options.onUploadProgress;
          return this;
        }
        /**
         * Clone this WebResource HTTP request object.
         * @returns The clone of this WebResource HTTP request object.
         */

      }, {
        key: "clone",
        value: function clone() {
          var result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.decompressResponse, this.streamResponseStatusCodes);

          if (this.formData) {
            result.formData = this.formData;
          }

          if (this.operationSpec) {
            result.operationSpec = this.operationSpec;
          }

          if (this.shouldDeserialize) {
            result.shouldDeserialize = this.shouldDeserialize;
          }

          if (this.operationResponseGetter) {
            result.operationResponseGetter = this.operationResponseGetter;
          }

          return result;
        }
      }]);

      return WebResource;
    }(); //# sourceMappingURL=webResource.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/dist-esm/src/xhrHttpClient.js": function node_modulesAzureCoreHttpDistEsmSrcXhrHttpClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "XhrHttpClient", function () {
      return XhrHttpClient;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "parseHeaders", function () {
      return parseHeaders;
    });
    /* harmony import */


    var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/abort-controller */
    "./node_modules/@azure/abort-controller/dist-esm/src/index.js");
    /* harmony import */


    var _httpHeaders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./httpHeaders */
    "./node_modules/@azure/core-http/dist-esm/src/httpHeaders.js");
    /* harmony import */


    var _restError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./restError */
    "./node_modules/@azure/core-http/dist-esm/src/restError.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.
     */


    var XhrHttpClient = /*#__PURE__*/function () {
      function XhrHttpClient() {
        _classCallCheck(this, XhrHttpClient);
      }

      _createClass(XhrHttpClient, [{
        key: "sendRequest",
        value: function sendRequest(request) {
          var _a;

          var xhr = new XMLHttpRequest();

          if (request.proxySettings) {
            throw new Error("HTTP proxy is not supported in browser environment");
          }

          var abortSignal = request.abortSignal;

          if (abortSignal) {
            if (abortSignal.aborted) {
              return Promise.reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__["AbortError"]("The operation was aborted."));
            }

            var listener = function listener() {
              xhr.abort();
            };

            abortSignal.addEventListener("abort", listener);
            xhr.addEventListener("readystatechange", function () {
              if (xhr.readyState === XMLHttpRequest.DONE) {
                abortSignal.removeEventListener("abort", listener);
              }
            });
          }

          addProgressListener(xhr.upload, request.onUploadProgress);
          addProgressListener(xhr, request.onDownloadProgress);

          if (request.formData) {
            var formData = request.formData;
            var requestForm = new FormData();

            var appendFormValue = function appendFormValue(key, value) {
              if (value && Object.prototype.hasOwnProperty.call(value, "value") && Object.prototype.hasOwnProperty.call(value, "options")) {
                requestForm.append(key, value.value, value.options);
              } else {
                requestForm.append(key, value);
              }
            };

            for (var _i18 = 0, _Object$keys14 = Object.keys(formData); _i18 < _Object$keys14.length; _i18++) {
              var formKey = _Object$keys14[_i18];
              var formValue = formData[formKey];

              if (Array.isArray(formValue)) {
                for (var j = 0; j < formValue.length; j++) {
                  appendFormValue(formKey, formValue[j]);
                }
              } else {
                appendFormValue(formKey, formValue);
              }
            }

            request.body = requestForm;
            request.formData = undefined;
            var contentType = request.headers.get("Content-Type");

            if (contentType && contentType.indexOf("multipart/form-data") !== -1) {
              // browser will automatically apply a suitable content-type header
              request.headers.remove("Content-Type");
            }
          }

          xhr.open(request.method, request.url);
          xhr.timeout = request.timeout;
          xhr.withCredentials = request.withCredentials;

          var _iterator16 = _createForOfIteratorHelper(request.headers.headersArray()),
              _step16;

          try {
            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
              var header = _step16.value;
              xhr.setRequestHeader(header.name, header.value);
            }
          } catch (err) {
            _iterator16.e(err);
          } finally {
            _iterator16.f();
          }

          xhr.responseType = ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.size) || request.streamResponseBody ? "blob" : "text"; // tslint:disable-next-line:no-null-keyword

          xhr.send(request.body === undefined ? null : request.body);

          if (xhr.responseType === "blob") {
            return new Promise(function (resolve, reject) {
              handleBlobResponse(xhr, request, resolve, reject);
              rejectOnTerminalEvent(request, xhr, reject);
            });
          } else {
            return new Promise(function (resolve, reject) {
              xhr.addEventListener("load", function () {
                return resolve({
                  request: request,
                  status: xhr.status,
                  headers: parseHeaders(xhr),
                  bodyAsText: xhr.responseText
                });
              });
              rejectOnTerminalEvent(request, xhr, reject);
            });
          }
        }
      }]);

      return XhrHttpClient;
    }();

    function handleBlobResponse(xhr, request, res, rej) {
      xhr.addEventListener("readystatechange", function () {
        var _a; // Resolve as soon as headers are loaded


        if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {
          if (request.streamResponseBody || ((_a = request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(xhr.status))) {
            var blobBody = new Promise(function (resolve, reject) {
              xhr.addEventListener("load", function () {
                resolve(xhr.response);
              });
              rejectOnTerminalEvent(request, xhr, reject);
            });
            res({
              request: request,
              status: xhr.status,
              headers: parseHeaders(xhr),
              blobBody: blobBody
            });
          } else {
            xhr.addEventListener("load", function () {
              // xhr.response is of Blob type if the request is sent with xhr.responseType === "blob"
              // but the status code is not one of the stream response status codes,
              // so treat it as text and convert from Blob to text
              if (xhr.response) {
                // Blob.text() is not supported in IE so using FileReader instead
                var reader = new FileReader();

                reader.onload = function (e) {
                  var _a;

                  var text = (_a = e.target) === null || _a === void 0 ? void 0 : _a.result;
                  res({
                    request: request,
                    status: xhr.status,
                    headers: parseHeaders(xhr),
                    bodyAsText: text
                  });
                };

                reader.onerror = function (_e) {
                  rej(reader.error);
                };

                reader.readAsText(xhr.response, "UTF-8");
              } else {
                res({
                  request: request,
                  status: xhr.status,
                  headers: parseHeaders(xhr)
                });
              }
            });
          }
        }
      });
    }

    function addProgressListener(xhr, listener) {
      if (listener) {
        xhr.addEventListener("progress", function (rawEvent) {
          return listener({
            loadedBytes: rawEvent.loaded
          });
        });
      }
    } // exported locally for testing


    function parseHeaders(xhr) {
      var responseHeaders = new _httpHeaders__WEBPACK_IMPORTED_MODULE_1__["HttpHeaders"]();
      var headerLines = xhr.getAllResponseHeaders().trim().split(/[\r\n]+/);

      var _iterator17 = _createForOfIteratorHelper(headerLines),
          _step17;

      try {
        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
          var line = _step17.value;
          var index = line.indexOf(":");
          var headerName = line.slice(0, index);
          var headerValue = line.slice(index + 2);
          responseHeaders.set(headerName, headerValue);
        }
      } catch (err) {
        _iterator17.e(err);
      } finally {
        _iterator17.f();
      }

      return responseHeaders;
    }

    function rejectOnTerminalEvent(request, xhr, reject) {
      xhr.addEventListener("error", function () {
        return reject(new _restError__WEBPACK_IMPORTED_MODULE_2__["RestError"]("Failed to send request to ".concat(request.url), _restError__WEBPACK_IMPORTED_MODULE_2__["RestError"].REQUEST_SEND_ERROR, undefined, request));
      });
      var abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__["AbortError"]("The operation was aborted.");
      xhr.addEventListener("abort", function () {
        return reject(abortError);
      });
      xhr.addEventListener("timeout", function () {
        return reject(abortError);
      });
    } //# sourceMappingURL=xhrHttpClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-http/node_modules/tslib/tslib.es6.js": function node_modulesAzureCoreHttpNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArray", function () {
      return __spreadArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics2 = function extendStatics(d, b) {
      _extendStatics2 = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        }
      };

      return _extendStatics2(d, b);
    };

    function __extends(d, b) {
      if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

      _extendStatics2(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign2 = function __assign() {
      _assign2 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign2.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    var __createBinding = Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    };

    function __exportStar(m, o) {
      for (var p in m) {
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }
    /** @deprecated */


    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }
    /** @deprecated */


    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    var __setModuleDefault = Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    };

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }

      __setModuleDefault(result, mod);

      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m") throw new TypeError("Private method is not writable");
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    }
    /***/

  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/index.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./v1.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v1.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "v1", function () {
      return _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    });
    /* harmony import */


    var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./v3.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v3.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "v3", function () {
      return _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"];
    });
    /* harmony import */


    var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./v4.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v4.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "v4", function () {
      return _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"];
    });
    /* harmony import */


    var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./v5.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v5.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "v5", function () {
      return _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"];
    });
    /* harmony import */


    var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./nil.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/nil.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "NIL", function () {
      return _nil_js__WEBPACK_IMPORTED_MODULE_4__["default"];
    });
    /* harmony import */


    var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./version.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/version.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "version", function () {
      return _version_js__WEBPACK_IMPORTED_MODULE_5__["default"];
    });
    /* harmony import */


    var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./validate.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "validate", function () {
      return _validate_js__WEBPACK_IMPORTED_MODULE_6__["default"];
    });
    /* harmony import */


    var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./stringify.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "stringify", function () {
      return _stringify_js__WEBPACK_IMPORTED_MODULE_7__["default"];
    });
    /* harmony import */


    var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./parse.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/parse.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "parse", function () {
      return _parse_js__WEBPACK_IMPORTED_MODULE_8__["default"];
    });
    /***/

  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/md5.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserMd5Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Browser-compatible JavaScript MD5
     *
     * Modification of JavaScript MD5
     * https://github.com/blueimp/JavaScript-MD5
     *
     * Copyright 2011, Sebastian Tschan
     * https://blueimp.net
     *
     * Licensed under the MIT license:
     * https://opensource.org/licenses/MIT
     *
     * Based on
     * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
     * Digest Algorithm, as defined in RFC 1321.
     * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
     * Distributed under the BSD License
     * See http://pajhome.org.uk/crypt/md5 for more info.
     */


    function md5(bytes) {
      if (typeof bytes === 'string') {
        var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

        bytes = new Uint8Array(msg.length);

        for (var i = 0; i < msg.length; ++i) {
          bytes[i] = msg.charCodeAt(i);
        }
      }

      return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
    }
    /*
     * Convert an array of little-endian words to an array of bytes
     */


    function md5ToHexEncodedArray(input) {
      var output = [];
      var length32 = input.length * 32;
      var hexTab = '0123456789abcdef';

      for (var i = 0; i < length32; i += 8) {
        var x = input[i >> 5] >>> i % 32 & 0xff;
        var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
        output.push(hex);
      }

      return output;
    }
    /**
     * Calculate output length with padding and bit length
     */


    function getOutputLength(inputLength8) {
      return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
    }
    /*
     * Calculate the MD5 of an array of little-endian words, and a bit length.
     */


    function wordsToMd5(x, len) {
      /* append padding */
      x[len >> 5] |= 0x80 << len % 32;
      x[getOutputLength(len) - 1] = len;
      var a = 1732584193;
      var b = -271733879;
      var c = -1732584194;
      var d = 271733878;

      for (var i = 0; i < x.length; i += 16) {
        var olda = a;
        var oldb = b;
        var oldc = c;
        var oldd = d;
        a = md5ff(a, b, c, d, x[i], 7, -680876936);
        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5gg(b, c, d, a, x[i], 20, -373897302);
        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
        a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5hh(d, a, b, c, x[i], 11, -358537222);
        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
        a = md5ii(a, b, c, d, x[i], 6, -198630844);
        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
        a = safeAdd(a, olda);
        b = safeAdd(b, oldb);
        c = safeAdd(c, oldc);
        d = safeAdd(d, oldd);
      }

      return [a, b, c, d];
    }
    /*
     * Convert an array bytes to an array of little-endian words
     * Characters >255 have their high-byte silently ignored.
     */


    function bytesToWords(input) {
      if (input.length === 0) {
        return [];
      }

      var length8 = input.length * 8;
      var output = new Uint32Array(getOutputLength(length8));

      for (var i = 0; i < length8; i += 8) {
        output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
      }

      return output;
    }
    /*
     * Add integers, wrapping at 2^32. This uses 16-bit operations internally
     * to work around bugs in some JS interpreters.
     */


    function safeAdd(x, y) {
      var lsw = (x & 0xffff) + (y & 0xffff);
      var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
      return msw << 16 | lsw & 0xffff;
    }
    /*
     * Bitwise rotate a 32-bit number to the left.
     */


    function bitRotateLeft(num, cnt) {
      return num << cnt | num >>> 32 - cnt;
    }
    /*
     * These functions implement the four basic operations the algorithm uses.
     */


    function md5cmn(q, a, b, x, s, t) {
      return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
    }

    function md5ff(a, b, c, d, x, s, t) {
      return md5cmn(b & c | ~b & d, a, b, x, s, t);
    }

    function md5gg(a, b, c, d, x, s, t) {
      return md5cmn(b & d | c & ~d, a, b, x, s, t);
    }

    function md5hh(a, b, c, d, x, s, t) {
      return md5cmn(b ^ c ^ d, a, b, x, s, t);
    }

    function md5ii(a, b, c, d, x, s, t) {
      return md5cmn(c ^ (b | ~d), a, b, x, s, t);
    }
    /* harmony default export */


    __webpack_exports__["default"] = md5;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/nil.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserNilJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = '00000000-0000-0000-0000-000000000000';
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/parse.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserParseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./validate.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js");

    function parse(uuid) {
      if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
        throw TypeError('Invalid UUID');
      }

      var v;
      var arr = new Uint8Array(16); // Parse ########-....-....-....-............

      arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
      arr[1] = v >>> 16 & 0xff;
      arr[2] = v >>> 8 & 0xff;
      arr[3] = v & 0xff; // Parse ........-####-....-....-............

      arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
      arr[5] = v & 0xff; // Parse ........-....-####-....-............

      arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
      arr[7] = v & 0xff; // Parse ........-....-....-####-............

      arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
      arr[9] = v & 0xff; // Parse ........-....-....-....-############
      // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

      arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
      arr[11] = v / 0x100000000 & 0xff;
      arr[12] = v >>> 24 & 0xff;
      arr[13] = v >>> 16 & 0xff;
      arr[14] = v >>> 8 & 0xff;
      arr[15] = v & 0xff;
      return arr;
    }
    /* harmony default export */


    __webpack_exports__["default"] = parse;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/regex.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserRegexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/rng.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserRngJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return rng;
    }); // Unique ID creation requires a high quality random # generator. In the browser we therefore
    // require the crypto API and do not support built-in fallback to lower quality random number
    // generators (like Math.random()).


    var getRandomValues;
    var rnds8 = new Uint8Array(16);

    function rng() {
      // lazy load so that environments that need to polyfill have a chance to do so
      if (!getRandomValues) {
        // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
        // find the complete implementation of crypto (msCrypto) on IE11.
        getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);

        if (!getRandomValues) {
          throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
        }
      }

      return getRandomValues(rnds8);
    }
    /***/

  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/sha1.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserSha1Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); // Adapted from Chris Veness' SHA1 code at
    // http://www.movable-type.co.uk/scripts/sha1.html


    function f(s, x, y, z) {
      switch (s) {
        case 0:
          return x & y ^ ~x & z;

        case 1:
          return x ^ y ^ z;

        case 2:
          return x & y ^ x & z ^ y & z;

        case 3:
          return x ^ y ^ z;
      }
    }

    function ROTL(x, n) {
      return x << n | x >>> 32 - n;
    }

    function sha1(bytes) {
      var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
      var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

      if (typeof bytes === 'string') {
        var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

        bytes = [];

        for (var i = 0; i < msg.length; ++i) {
          bytes.push(msg.charCodeAt(i));
        }
      } else if (!Array.isArray(bytes)) {
        // Convert Array-like to Array
        bytes = Array.prototype.slice.call(bytes);
      }

      bytes.push(0x80);
      var l = bytes.length / 4 + 2;
      var N = Math.ceil(l / 16);
      var M = new Array(N);

      for (var _i = 0; _i < N; ++_i) {
        var arr = new Uint32Array(16);

        for (var j = 0; j < 16; ++j) {
          arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
        }

        M[_i] = arr;
      }

      M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
      M[N - 1][14] = Math.floor(M[N - 1][14]);
      M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

      for (var _i2 = 0; _i2 < N; ++_i2) {
        var W = new Uint32Array(80);

        for (var t = 0; t < 16; ++t) {
          W[t] = M[_i2][t];
        }

        for (var _t = 16; _t < 80; ++_t) {
          W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
        }

        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];

        for (var _t2 = 0; _t2 < 80; ++_t2) {
          var s = Math.floor(_t2 / 20);
          var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
          e = d;
          d = c;
          c = ROTL(b, 30) >>> 0;
          b = a;
          a = T;
        }

        H[0] = H[0] + a >>> 0;
        H[1] = H[1] + b >>> 0;
        H[2] = H[2] + c >>> 0;
        H[3] = H[3] + d >>> 0;
        H[4] = H[4] + e >>> 0;
      }

      return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
    }
    /* harmony default export */


    __webpack_exports__["default"] = sha1;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserStringifyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./validate.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js");
    /**
     * Convert array of 16 byte values to UUID string format of the form:
     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
     */


    var byteToHex = [];

    for (var i = 0; i < 256; ++i) {
      byteToHex.push((i + 0x100).toString(16).substr(1));
    }

    function stringify(arr) {
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance
      // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434

      var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
      // of the following:
      // - One or more input array values don't map to a hex octet (leading to
      // "undefined" in the uuid)
      // - Invalid input values for the RFC `version` or `variant` fields

      if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
        throw TypeError('Stringified UUID is invalid');
      }

      return uuid;
    }
    /* harmony default export */


    __webpack_exports__["default"] = stringify;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v1.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserV1Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./rng.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/rng.js");
    /* harmony import */


    var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./stringify.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js"); // **`v1()` - Generate time-based UUID**
    //
    // Inspired by https://github.com/LiosK/UUID.js
    // and http://docs.python.org/library/uuid.html


    var _nodeId;

    var _clockseq; // Previous uuid creation time


    var _lastMSecs = 0;
    var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

    function v1(options, buf, offset) {
      var i = buf && offset || 0;
      var b = buf || new Array(16);
      options = options || {};
      var node = options.node || _nodeId;
      var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
      // specified.  We do this lazily to minimize issues related to insufficient
      // system entropy.  See #189

      if (node == null || clockseq == null) {
        var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

        if (node == null) {
          // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
          node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
        }

        if (clockseq == null) {
          // Per 4.2.2, randomize (14 bit) clockseq
          clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
        }
      } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
      // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
      // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
      // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


      var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
      // cycle to simulate higher resolution clock

      var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

      if (dt < 0 && options.clockseq === undefined) {
        clockseq = clockseq + 1 & 0x3fff;
      } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
      // time interval


      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
        nsecs = 0;
      } // Per 4.2.1.2 Throw error if too many uuids are requested


      if (nsecs >= 10000) {
        throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
      }

      _lastMSecs = msecs;
      _lastNSecs = nsecs;
      _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

      msecs += 12219292800000; // `time_low`

      var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
      b[i++] = tl >>> 24 & 0xff;
      b[i++] = tl >>> 16 & 0xff;
      b[i++] = tl >>> 8 & 0xff;
      b[i++] = tl & 0xff; // `time_mid`

      var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
      b[i++] = tmh >>> 8 & 0xff;
      b[i++] = tmh & 0xff; // `time_high_and_version`

      b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

      b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

      b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

      b[i++] = clockseq & 0xff; // `node`

      for (var n = 0; n < 6; ++n) {
        b[i + n] = node[n];
      }

      return buf || Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
    }
    /* harmony default export */


    __webpack_exports__["default"] = v1;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v3.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserV3Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./v35.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v35.js");
    /* harmony import */


    var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./md5.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/md5.js");

    var v3 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
    /* harmony default export */

    __webpack_exports__["default"] = v3;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v35.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserV35Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DNS", function () {
      return DNS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URL", function () {
      return URL;
    });
    /* harmony import */


    var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./stringify.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js");
    /* harmony import */


    var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./parse.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/parse.js");

    function stringToBytes(str) {
      str = unescape(encodeURIComponent(str)); // UTF8 escape

      var bytes = [];

      for (var i = 0; i < str.length; ++i) {
        bytes.push(str.charCodeAt(i));
      }

      return bytes;
    }

    var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
    var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
    /* harmony default export */

    __webpack_exports__["default"] = function (name, version, hashfunc) {
      function generateUUID(value, namespace, buf, offset) {
        if (typeof value === 'string') {
          value = stringToBytes(value);
        }

        if (typeof namespace === 'string') {
          namespace = Object(_parse_js__WEBPACK_IMPORTED_MODULE_1__["default"])(namespace);
        }

        if (namespace.length !== 16) {
          throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
        } // Compute hash of namespace and value, Per 4.3
        // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
        // hashfunc([...namespace, ... value])`


        var bytes = new Uint8Array(16 + value.length);
        bytes.set(namespace);
        bytes.set(value, namespace.length);
        bytes = hashfunc(bytes);
        bytes[6] = bytes[6] & 0x0f | version;
        bytes[8] = bytes[8] & 0x3f | 0x80;

        if (buf) {
          offset = offset || 0;

          for (var i = 0; i < 16; ++i) {
            buf[offset + i] = bytes[i];
          }

          return buf;
        }

        return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bytes);
      } // Function#name is not settable on some platforms (#270)


      try {
        generateUUID.name = name; // eslint-disable-next-line no-empty
      } catch (err) {} // For CommonJS default export support


      generateUUID.DNS = DNS;
      generateUUID.URL = URL;
      return generateUUID;
    };
    /***/

  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v4.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserV4Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./rng.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/rng.js");
    /* harmony import */


    var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./stringify.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/stringify.js");

    function v4(options, buf, offset) {
      options = options || {};

      var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


      rnds[6] = rnds[6] & 0x0f | 0x40;
      rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

      if (buf) {
        offset = offset || 0;

        for (var i = 0; i < 16; ++i) {
          buf[offset + i] = rnds[i];
        }

        return buf;
      }

      return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
    }
    /* harmony default export */


    __webpack_exports__["default"] = v4;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v5.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserV5Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./v35.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/v35.js");
    /* harmony import */


    var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./sha1.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/sha1.js");

    var v5 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
    /* harmony default export */

    __webpack_exports__["default"] = v5;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserValidateJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./regex.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/regex.js");

    function validate(uuid) {
      return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
    }
    /* harmony default export */


    __webpack_exports__["default"] = validate;
    /***/
  },

  /***/
  "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/version.js": function node_modulesAzureCoreHttpNode_modulesUuidDistEsmBrowserVersionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./validate.js */
    "./node_modules/@azure/core-http/node_modules/uuid/dist/esm-browser/validate.js");

    function version(uuid) {
      if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
        throw TypeError('Invalid UUID');
      }

      return parseInt(uuid.substr(14, 1), 16);
    }
    /* harmony default export */


    __webpack_exports__["default"] = version;
    /***/
  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/index.js": function node_modulesAzureCoreLroDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _pollOperation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./pollOperation */
    "./node_modules/@azure/core-lro/dist-esm/src/pollOperation.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _poller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./poller */
    "./node_modules/@azure/core-lro/dist-esm/src/poller.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PollerStoppedError", function () {
      return _poller__WEBPACK_IMPORTED_MODULE_1__["PollerStoppedError"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PollerCancelledError", function () {
      return _poller__WEBPACK_IMPORTED_MODULE_1__["PollerCancelledError"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Poller", function () {
      return _poller__WEBPACK_IMPORTED_MODULE_1__["Poller"];
    });
    /* harmony import */


    var _lroEngine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./lroEngine */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LroEngine", function () {
      return _lroEngine__WEBPACK_IMPORTED_MODULE_2__["LroEngine"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/azureAsyncPolling.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineAzureAsyncPollingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "processAzureAsyncOperationResult", function () {
      return processAzureAsyncOperationResult;
    });
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/models.js");
    /* harmony import */


    var _requestUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestUtils */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function getResponseStatus(rawResponse) {
      var _a, _b;

      var _ref5 = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {},
          status = _ref5.status;

      return (_b = status === null || status === void 0 ? void 0 : status.toLowerCase()) !== null && _b !== void 0 ? _b : "succeeded";
    }

    function isAzureAsyncPollingDone(rawResponse) {
      var state = getResponseStatus(rawResponse);

      if (Object(_requestUtils__WEBPACK_IMPORTED_MODULE_1__["isUnexpectedPollingResponse"])(rawResponse) || _models__WEBPACK_IMPORTED_MODULE_0__["failureStates"].includes(state)) {
        throw new Error("The long running operation has failed. The provisioning state: ".concat(state, "."));
      }

      return _models__WEBPACK_IMPORTED_MODULE_0__["successStates"].includes(state);
    }
    /**
     * Sends a request to the URI of the provisioned resource if needed.
     */


    function sendFinalRequest(_x35, _x36, _x37) {
      return _sendFinalRequest.apply(this, arguments);
    }

    function _sendFinalRequest() {
      _sendFinalRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(lro, resourceLocation, lroResourceLocationConfig) {
        return regeneratorRuntime.wrap(function _callee19$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.t0 = lroResourceLocationConfig;
                _context20.next = _context20.t0 === "original-uri" ? 3 : _context20.t0 === "azure-async-operation" ? 4 : _context20.t0 === "location" ? 5 : 5;
                break;

              case 3:
                return _context20.abrupt("return", lro.sendPollRequest(lro.requestPath));

              case 4:
                return _context20.abrupt("return", undefined);

              case 5:
                return _context20.abrupt("return", lro.sendPollRequest(resourceLocation !== null && resourceLocation !== void 0 ? resourceLocation : lro.requestPath));

              case 6:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee19);
      }));
      return _sendFinalRequest.apply(this, arguments);
    }

    function processAzureAsyncOperationResult(lro, resourceLocation, lroResourceLocationConfig) {
      return function (response) {
        if (isAzureAsyncPollingDone(response.rawResponse)) {
          if (resourceLocation === undefined) {
            return Object.assign(Object.assign({}, response), {
              done: true
            });
          } else {
            return Object.assign(Object.assign({}, response), {
              done: false,
              next: function () {
                var _next2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
                  var finalResponse;
                  return regeneratorRuntime.wrap(function _callee18$(_context19) {
                    while (1) {
                      switch (_context19.prev = _context19.next) {
                        case 0:
                          _context19.next = 2;
                          return sendFinalRequest(lro, resourceLocation, lroResourceLocationConfig);

                        case 2:
                          finalResponse = _context19.sent;
                          return _context19.abrupt("return", Object.assign(Object.assign({}, finalResponse !== null && finalResponse !== void 0 ? finalResponse : response), {
                            done: true
                          }));

                        case 4:
                        case "end":
                          return _context19.stop();
                      }
                    }
                  }, _callee18);
                }));

                function next() {
                  return _next2.apply(this, arguments);
                }

                return next;
              }()
            });
          }
        }

        return Object.assign(Object.assign({}, response), {
          done: false
        });
      };
    } //# sourceMappingURL=azureAsyncPolling.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/bodyPolling.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineBodyPollingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isBodyPollingDone", function () {
      return isBodyPollingDone;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "processBodyPollingOperationResult", function () {
      return processBodyPollingOperationResult;
    });
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/models.js");
    /* harmony import */


    var _requestUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestUtils */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function getProvisioningState(rawResponse) {
      var _a, _b, _c;

      var _ref6 = (_a = rawResponse.body) !== null && _a !== void 0 ? _a : {},
          properties = _ref6.properties,
          provisioningState = _ref6.provisioningState;

      var state = (_b = properties === null || properties === void 0 ? void 0 : properties.provisioningState) !== null && _b !== void 0 ? _b : provisioningState;
      return (_c = state === null || state === void 0 ? void 0 : state.toLowerCase()) !== null && _c !== void 0 ? _c : "succeeded";
    }

    function isBodyPollingDone(rawResponse) {
      var state = getProvisioningState(rawResponse);

      if (Object(_requestUtils__WEBPACK_IMPORTED_MODULE_1__["isUnexpectedPollingResponse"])(rawResponse) || _models__WEBPACK_IMPORTED_MODULE_0__["failureStates"].includes(state)) {
        throw new Error("The long running operation has failed. The provisioning state: ".concat(state, "."));
      }

      return _models__WEBPACK_IMPORTED_MODULE_0__["successStates"].includes(state);
    }
    /**
     * Creates a polling strategy based on BodyPolling which uses the provisioning state
     * from the result to determine the current operation state
     */


    function processBodyPollingOperationResult(response) {
      return Object.assign(Object.assign({}, response), {
        done: isBodyPollingDone(response.rawResponse)
      });
    } //# sourceMappingURL=bodyPolling.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/index.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lroEngine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./lroEngine */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/lroEngine.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LroEngine", function () {
      return _lroEngine__WEBPACK_IMPORTED_MODULE_0__["LroEngine"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/locationPolling.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineLocationPollingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "processLocationPollingOperationResult", function () {
      return processLocationPollingOperationResult;
    });
    /* harmony import */


    var _requestUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./requestUtils */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function isLocationPollingDone(rawResponse) {
      return !Object(_requestUtils__WEBPACK_IMPORTED_MODULE_0__["isUnexpectedPollingResponse"])(rawResponse) && rawResponse.statusCode !== 202;
    }

    function processLocationPollingOperationResult(response) {
      return Object.assign(Object.assign({}, response), {
        done: isLocationPollingDone(response.rawResponse)
      });
    } //# sourceMappingURL=locationPolling.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/logger.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineLoggerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "logger", function () {
      return logger;
    });
    /* harmony import */


    var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/logger */
    "./node_modules/@azure/logger/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * The `@azure/logger` configuration for this package.
     * @internal
     */


    var logger = Object(_azure_logger__WEBPACK_IMPORTED_MODULE_0__["createClientLogger"])("core-lro"); //# sourceMappingURL=logger.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/lroEngine.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineLroEngineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LroEngine", function () {
      return LroEngine;
    });
    /* harmony import */


    var _poller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../poller */
    "./node_modules/@azure/core-lro/dist-esm/src/poller.js");
    /* harmony import */


    var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./operation */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/operation.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function deserializeState(serializedState) {
      try {
        return JSON.parse(serializedState).state;
      } catch (e) {
        throw new Error("LroEngine: Unable to deserialize state: ".concat(serializedState));
      }
    }
    /**
     * The LRO Engine, a class that performs polling.
     */


    var LroEngine = /*#__PURE__*/function (_poller__WEBPACK_IMPO) {
      _inherits(LroEngine, _poller__WEBPACK_IMPO);

      var _super20 = _createSuper(LroEngine);

      function LroEngine(lro, options) {
        var _this26;

        _classCallCheck(this, LroEngine);

        var _ref7 = options || {},
            _ref7$intervalInMs = _ref7.intervalInMs,
            intervalInMs = _ref7$intervalInMs === void 0 ? 2000 : _ref7$intervalInMs,
            resumeFrom = _ref7.resumeFrom;

        var state = resumeFrom ? deserializeState(resumeFrom) : {};
        var operation = new _operation__WEBPACK_IMPORTED_MODULE_1__["GenericPollOperation"](state, lro, options === null || options === void 0 ? void 0 : options.lroResourceLocationConfig, options === null || options === void 0 ? void 0 : options.processResult, options === null || options === void 0 ? void 0 : options.updateState, options === null || options === void 0 ? void 0 : options.isDone);
        _this26 = _super20.call(this, operation);
        _this26.config = {
          intervalInMs: intervalInMs
        };
        operation.setPollerConfig(_this26.config);
        return _this26;
      }
      /**
       * The method used by the poller to wait before attempting to update its operation.
       */


      _createClass(LroEngine, [{
        key: "delay",
        value: function delay() {
          var _this27 = this;

          return new Promise(function (resolve) {
            return setTimeout(function () {
              return resolve();
            }, _this27.config.intervalInMs);
          });
        }
      }]);

      return LroEngine;
    }(_poller__WEBPACK_IMPORTED_MODULE_0__["Poller"]); //# sourceMappingURL=lroEngine.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/models.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineModelsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "successStates", function () {
      return successStates;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "failureStates", function () {
      return failureStates;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "terminalStates", function () {
      return terminalStates;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var successStates = ["succeeded"];
    var failureStates = ["failed", "canceled", "cancelled"];
    /**
     * The LRO states that signal that the LRO has completed.
     */

    var terminalStates = successStates.concat(failureStates); //# sourceMappingURL=models.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/operation.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineOperationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GenericPollOperation", function () {
      return GenericPollOperation;
    });
    /* harmony import */


    var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./logger */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/logger.js");
    /* harmony import */


    var _requestUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./requestUtils */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js");
    /* harmony import */


    var _stateMachine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./stateMachine */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/stateMachine.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var GenericPollOperation = /*#__PURE__*/function () {
      function GenericPollOperation(state, lro, lroResourceLocationConfig, processResult, updateState, isDone) {
        _classCallCheck(this, GenericPollOperation);

        this.state = state;
        this.lro = lro;
        this.lroResourceLocationConfig = lroResourceLocationConfig;
        this.processResult = processResult;
        this.updateState = updateState;
        this.isDone = isDone;
      }

      _createClass(GenericPollOperation, [{
        key: "setPollerConfig",
        value: function setPollerConfig(pollerConfig) {
          this.pollerConfig = pollerConfig;
        }
        /**
         * General update function for LROPoller, the general process is as follows
         * 1. Check initial operation result to determine the strategy to use
         *  - Strategies: Location, Azure-AsyncOperation, Original Uri
         * 2. Check if the operation result has a terminal state
         *  - Terminal state will be determined by each strategy
         *  2.1 If it is terminal state Check if a final GET request is required, if so
         *      send final GET request and return result from operation. If no final GET
         *      is required, just return the result from operation.
         *      - Determining what to call for final request is responsibility of each strategy
         *  2.2 If it is not terminal state, call the polling operation and go to step 1
         *      - Determining what to call for polling is responsibility of each strategy
         *      - Strategies will always use the latest URI for polling if provided otherwise
         *        the last known one
         */

      }, {
        key: "update",
        value: function () {
          var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(options) {
            var _this28 = this;

            var _a, _b, _c, state, lastResponse, initializeState, isDone, currentState;

            return regeneratorRuntime.wrap(function _callee20$(_context21) {
              while (1) {
                switch (_context21.prev = _context21.next) {
                  case 0:
                    state = this.state;
                    lastResponse = undefined;

                    if (state.isStarted) {
                      _context21.next = 8;
                      break;
                    }

                    initializeState = Object(_stateMachine__WEBPACK_IMPORTED_MODULE_2__["createInitializeState"])(state, this.lro.requestPath, this.lro.requestMethod);
                    _context21.next = 6;
                    return this.lro.sendInitialRequest();

                  case 6:
                    lastResponse = _context21.sent;
                    initializeState(lastResponse);

                  case 8:
                    if (state.isCompleted) {
                      _context21.next = 23;
                      break;
                    }

                    if (!(!this.poll || !this.getLroStatusFromResponse)) {
                      _context21.next = 15;
                      break;
                    }

                    if (state.config) {
                      _context21.next = 12;
                      break;
                    }

                    throw new Error("Bad state: LRO mode is undefined. Please check if the serialized state is well-formed.");

                  case 12:
                    isDone = this.isDone;
                    this.getLroStatusFromResponse = isDone ? function (response) {
                      return Object.assign(Object.assign({}, response), {
                        done: isDone(response.flatResponse, _this28.state)
                      });
                    } : Object(_stateMachine__WEBPACK_IMPORTED_MODULE_2__["createGetLroStatusFromResponse"])(this.lro, state.config, this.lroResourceLocationConfig);
                    this.poll = Object(_stateMachine__WEBPACK_IMPORTED_MODULE_2__["createPoll"])(this.lro);

                  case 15:
                    if (state.pollingURL) {
                      _context21.next = 17;
                      break;
                    }

                    throw new Error("Bad state: polling URL is undefined. Please check if the serialized state is well-formed.");

                  case 17:
                    _context21.next = 19;
                    return this.poll(state.pollingURL, this.pollerConfig, this.getLroStatusFromResponse);

                  case 19:
                    currentState = _context21.sent;

                    _logger__WEBPACK_IMPORTED_MODULE_0__["logger"].verbose("LRO: polling response: ".concat(JSON.stringify(currentState.rawResponse)));

                    if (currentState.done) {
                      state.result = this.processResult ? this.processResult(currentState.flatResponse, state) : currentState.flatResponse;
                      state.isCompleted = true;
                    } else {
                      this.poll = (_a = currentState.next) !== null && _a !== void 0 ? _a : this.poll;
                      state.pollingURL = Object(_requestUtils__WEBPACK_IMPORTED_MODULE_1__["getPollingUrl"])(currentState.rawResponse, state.pollingURL);
                    }

                    lastResponse = currentState;

                  case 23:
                    _logger__WEBPACK_IMPORTED_MODULE_0__["logger"].verbose("LRO: current state: ".concat(JSON.stringify(state)));

                    if (lastResponse) {
                      (_b = this.updateState) === null || _b === void 0 ? void 0 : _b.call(this, state, lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.rawResponse);
                    } else {
                      _logger__WEBPACK_IMPORTED_MODULE_0__["logger"].error("LRO: no response was received");
                    }

                    (_c = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _c === void 0 ? void 0 : _c.call(options, state);
                    return _context21.abrupt("return", this);

                  case 27:
                  case "end":
                    return _context21.stop();
                }
              }
            }, _callee20, this);
          }));

          function update(_x38) {
            return _update.apply(this, arguments);
          }

          return update;
        }()
      }, {
        key: "cancel",
        value: function () {
          var _cancel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
            return regeneratorRuntime.wrap(function _callee21$(_context22) {
              while (1) {
                switch (_context22.prev = _context22.next) {
                  case 0:
                    this.state.isCancelled = true;
                    return _context22.abrupt("return", this);

                  case 2:
                  case "end":
                    return _context22.stop();
                }
              }
            }, _callee21, this);
          }));

          function cancel() {
            return _cancel.apply(this, arguments);
          }

          return cancel;
        }()
        /**
         * Serializes the Poller operation.
         */

      }, {
        key: "toString",
        value: function toString() {
          return JSON.stringify({
            state: this.state
          });
        }
      }]);

      return GenericPollOperation;
    }(); //# sourceMappingURL=operation.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/passthrough.js": function node_modulesAzureCoreLroDistEsmSrcLroEnginePassthroughJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "processPassthroughOperationResult", function () {
      return processPassthroughOperationResult;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function processPassthroughOperationResult(response) {
      return Object.assign(Object.assign({}, response), {
        done: true
      });
    } //# sourceMappingURL=passthrough.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineRequestUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPollingUrl", function () {
      return getPollingUrl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "inferLroMode", function () {
      return inferLroMode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isUnexpectedInitialResponse", function () {
      return isUnexpectedInitialResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isUnexpectedPollingResponse", function () {
      return isUnexpectedPollingResponse;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Detects where the continuation token is and returns it. Notice that azure-asyncoperation
     * must be checked first before the other location headers because there are scenarios
     * where both azure-asyncoperation and location could be present in the same response but
     * azure-asyncoperation should be the one to use for polling.
     */


    function getPollingUrl(rawResponse, defaultPath) {
      var _a, _b, _c;

      return (_c = (_b = (_a = getAzureAsyncOperation(rawResponse)) !== null && _a !== void 0 ? _a : getLocation(rawResponse)) !== null && _b !== void 0 ? _b : getOperationLocation(rawResponse)) !== null && _c !== void 0 ? _c : defaultPath;
    }

    function getLocation(rawResponse) {
      return rawResponse.headers["location"];
    }

    function getOperationLocation(rawResponse) {
      return rawResponse.headers["operation-location"];
    }

    function getAzureAsyncOperation(rawResponse) {
      return rawResponse.headers["azure-asyncoperation"];
    }

    function inferLroMode(requestPath, requestMethod, rawResponse) {
      if (getAzureAsyncOperation(rawResponse) !== undefined) {
        return {
          mode: "AzureAsync",
          resourceLocation: requestMethod === "PUT" ? requestPath : requestMethod === "POST" ? getLocation(rawResponse) : undefined
        };
      } else if (getLocation(rawResponse) !== undefined || getOperationLocation(rawResponse) !== undefined) {
        return {
          mode: "Location"
        };
      } else if (["PUT", "PATCH"].includes(requestMethod)) {
        return {
          mode: "Body"
        };
      }

      return {};
    }

    var SimpleRestError = /*#__PURE__*/function (_Error2) {
      _inherits(SimpleRestError, _Error2);

      var _super21 = _createSuper(SimpleRestError);

      function SimpleRestError(message, statusCode) {
        var _this29;

        _classCallCheck(this, SimpleRestError);

        _this29 = _super21.call(this, message);
        _this29.name = "RestError";
        _this29.statusCode = statusCode;
        Object.setPrototypeOf(_assertThisInitialized(_this29), SimpleRestError.prototype);
        return _this29;
      }

      return SimpleRestError;
    }( /*#__PURE__*/_wrapNativeSuper(Error));

    function isUnexpectedInitialResponse(rawResponse) {
      var code = rawResponse.statusCode;

      if (![203, 204, 202, 201, 200, 500].includes(code)) {
        throw new SimpleRestError("Received unexpected HTTP status code ".concat(code, " in the initial response. This may indicate a server issue."), code);
      }

      return false;
    }

    function isUnexpectedPollingResponse(rawResponse) {
      var code = rawResponse.statusCode;

      if (![202, 201, 200, 500].includes(code)) {
        throw new SimpleRestError("Received unexpected HTTP status code ".concat(code, " while polling. This may indicate a server issue."), code);
      }

      return false;
    } //# sourceMappingURL=requestUtils.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/stateMachine.js": function node_modulesAzureCoreLroDistEsmSrcLroEngineStateMachineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetLroStatusFromResponse", function () {
      return createGetLroStatusFromResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createPoll", function () {
      return createPoll;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createInitializeState", function () {
      return createInitializeState;
    });
    /* harmony import */


    var _azureAsyncPolling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./azureAsyncPolling */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/azureAsyncPolling.js");
    /* harmony import */


    var _bodyPolling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./bodyPolling */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/bodyPolling.js");
    /* harmony import */


    var _locationPolling__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./locationPolling */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/locationPolling.js");
    /* harmony import */


    var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./logger */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/logger.js");
    /* harmony import */


    var _passthrough__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./passthrough */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/passthrough.js");
    /* harmony import */


    var _requestUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./requestUtils */
    "./node_modules/@azure/core-lro/dist-esm/src/lroEngine/requestUtils.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * creates a stepping function that maps an LRO state to another.
     */


    function createGetLroStatusFromResponse(lroPrimitives, config, lroResourceLocationConfig) {
      switch (config.mode) {
        case "AzureAsync":
          {
            return Object(_azureAsyncPolling__WEBPACK_IMPORTED_MODULE_0__["processAzureAsyncOperationResult"])(lroPrimitives, config.resourceLocation, lroResourceLocationConfig);
          }

        case "Location":
          {
            return _locationPolling__WEBPACK_IMPORTED_MODULE_2__["processLocationPollingOperationResult"];
          }

        case "Body":
          {
            return _bodyPolling__WEBPACK_IMPORTED_MODULE_1__["processBodyPollingOperationResult"];
          }

        default:
          {
            return _passthrough__WEBPACK_IMPORTED_MODULE_4__["processPassthroughOperationResult"];
          }
      }
    }
    /**
     * Creates a polling operation.
     */


    function createPoll(lroPrimitives) {
      return /*#__PURE__*/function () {
        var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22(path, pollerConfig, getLroStatusFromResponse) {
          var response, retryAfter, retryAfterInMs;
          return regeneratorRuntime.wrap(function _callee22$(_context23) {
            while (1) {
              switch (_context23.prev = _context23.next) {
                case 0:
                  _context23.next = 2;
                  return lroPrimitives.sendPollRequest(path);

                case 2:
                  response = _context23.sent;
                  retryAfter = response.rawResponse.headers["retry-after"];

                  if (retryAfter !== undefined) {
                    retryAfterInMs = parseInt(retryAfter);
                    pollerConfig.intervalInMs = isNaN(retryAfterInMs) ? calculatePollingIntervalFromDate(new Date(retryAfter), pollerConfig.intervalInMs) : retryAfterInMs;
                  }

                  return _context23.abrupt("return", getLroStatusFromResponse(response));

                case 6:
                case "end":
                  return _context23.stop();
              }
            }
          }, _callee22);
        }));

        return function (_x39, _x40, _x41) {
          return _ref8.apply(this, arguments);
        };
      }();
    }

    function calculatePollingIntervalFromDate(retryAfterDate, defaultIntervalInMs) {
      var timeNow = Math.floor(new Date().getTime());
      var retryAfterTime = retryAfterDate.getTime();

      if (timeNow < retryAfterTime) {
        return retryAfterTime - timeNow;
      }

      return defaultIntervalInMs;
    }
    /**
     * Creates a callback to be used to initialize the polling operation state.
     * @param state - of the polling operation
     * @param operationSpec - of the LRO
     * @param callback - callback to be called when the operation is done
     * @returns callback that initializes the state of the polling operation
     */


    function createInitializeState(state, requestPath, requestMethod) {
      return function (response) {
        if (Object(_requestUtils__WEBPACK_IMPORTED_MODULE_5__["isUnexpectedInitialResponse"])(response.rawResponse)) return true;
        state.initialRawResponse = response.rawResponse;
        state.isStarted = true;
        state.pollingURL = Object(_requestUtils__WEBPACK_IMPORTED_MODULE_5__["getPollingUrl"])(state.initialRawResponse, requestPath);
        state.config = Object(_requestUtils__WEBPACK_IMPORTED_MODULE_5__["inferLroMode"])(requestPath, requestMethod, state.initialRawResponse);
        /** short circuit polling if body polling is done in the initial request */

        if (state.config.mode === undefined || state.config.mode === "Body" && Object(_bodyPolling__WEBPACK_IMPORTED_MODULE_1__["isBodyPollingDone"])(state.initialRawResponse)) {
          state.result = response.flatResponse;
          state.isCompleted = true;
        }

        _logger__WEBPACK_IMPORTED_MODULE_3__["logger"].verbose("LRO: initial state: ".concat(JSON.stringify(state)));

        return Boolean(state.isCompleted);
      };
    } //# sourceMappingURL=stateMachine.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/pollOperation.js": function node_modulesAzureCoreLroDistEsmSrcPollOperationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=pollOperation.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-lro/dist-esm/src/poller.js": function node_modulesAzureCoreLroDistEsmSrcPollerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PollerStoppedError", function () {
      return PollerStoppedError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PollerCancelledError", function () {
      return PollerCancelledError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Poller", function () {
      return Poller;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * When a poller is manually stopped through the `stopPolling` method,
     * the poller will be rejected with an instance of the PollerStoppedError.
     */


    var PollerStoppedError = /*#__PURE__*/function (_Error3) {
      _inherits(PollerStoppedError, _Error3);

      var _super22 = _createSuper(PollerStoppedError);

      function PollerStoppedError(message) {
        var _this30;

        _classCallCheck(this, PollerStoppedError);

        _this30 = _super22.call(this, message);
        _this30.name = "PollerStoppedError";
        Object.setPrototypeOf(_assertThisInitialized(_this30), PollerStoppedError.prototype);
        return _this30;
      }

      return PollerStoppedError;
    }( /*#__PURE__*/_wrapNativeSuper(Error));
    /**
     * When a poller is cancelled through the `cancelOperation` method,
     * the poller will be rejected with an instance of the PollerCancelledError.
     */


    var PollerCancelledError = /*#__PURE__*/function (_Error4) {
      _inherits(PollerCancelledError, _Error4);

      var _super23 = _createSuper(PollerCancelledError);

      function PollerCancelledError(message) {
        var _this31;

        _classCallCheck(this, PollerCancelledError);

        _this31 = _super23.call(this, message);
        _this31.name = "PollerCancelledError";
        Object.setPrototypeOf(_assertThisInitialized(_this31), PollerCancelledError.prototype);
        return _this31;
      }

      return PollerCancelledError;
    }( /*#__PURE__*/_wrapNativeSuper(Error));
    /**
     * A class that represents the definition of a program that polls through consecutive requests
     * until it reaches a state of completion.
     *
     * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.
     * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.
     * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.
     *
     * ```ts
     * const poller = new MyPoller();
     *
     * // Polling just once:
     * await poller.poll();
     *
     * // We can try to cancel the request here, by calling:
     * //
     * //     await poller.cancelOperation();
     * //
     *
     * // Getting the final result:
     * const result = await poller.pollUntilDone();
     * ```
     *
     * The Poller is defined by two types, a type representing the state of the poller, which
     * must include a basic set of properties from `PollOperationState<TResult>`,
     * and a return type defined by `TResult`, which can be anything.
     *
     * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having
     * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.
     *
     * ```ts
     * class Client {
     *   public async makePoller: PollerLike<MyOperationState, MyResult> {
     *     const poller = new MyPoller({});
     *     // It might be preferred to return the poller after the first request is made,
     *     // so that some information can be obtained right away.
     *     await poller.poll();
     *     return poller;
     *   }
     * }
     *
     * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();
     * ```
     *
     * A poller can be created through its constructor, then it can be polled until it's completed.
     * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.
     * At any point in time, the intermediate forms of the result type can be requested without delay.
     * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.
     *
     * ```ts
     * const poller = myClient.makePoller();
     * const state: MyOperationState = poller.getOperationState();
     *
     * // The intermediate result can be obtained at any time.
     * const result: MyResult | undefined = poller.getResult();
     *
     * // The final result can only be obtained after the poller finishes.
     * const result: MyResult = await poller.pollUntilDone();
     * ```
     *
     */
    // eslint-disable-next-line no-use-before-define


    var Poller = /*#__PURE__*/function () {
      /**
       * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.
       *
       * When writing an implementation of a Poller, this implementation needs to deal with the initialization
       * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's
       * operation has already been defined, at least its basic properties. The code below shows how to approach
       * the definition of the constructor of a new custom poller.
       *
       * ```ts
       * export class MyPoller extends Poller<MyOperationState, string> {
       *   constructor({
       *     // Anything you might need outside of the basics
       *   }) {
       *     let state: MyOperationState = {
       *       privateProperty: private,
       *       publicProperty: public,
       *     };
       *
       *     const operation = {
       *       state,
       *       update,
       *       cancel,
       *       toString
       *     }
       *
       *     // Sending the operation to the parent's constructor.
       *     super(operation);
       *
       *     // You can assign more local properties here.
       *   }
       * }
       * ```
       *
       * Inside of this constructor, a new promise is created. This will be used to
       * tell the user when the poller finishes (see `pollUntilDone()`). The promise's
       * resolve and reject methods are also used internally to control when to resolve
       * or reject anyone waiting for the poller to finish.
       *
       * The constructor of a custom implementation of a poller is where any serialized version of
       * a previous poller's operation should be deserialized into the operation sent to the
       * base constructor. For example:
       *
       * ```ts
       * export class MyPoller extends Poller<MyOperationState, string> {
       *   constructor(
       *     baseOperation: string | undefined
       *   ) {
       *     let state: MyOperationState = {};
       *     if (baseOperation) {
       *       state = {
       *         ...JSON.parse(baseOperation).state,
       *         ...state
       *       };
       *     }
       *     const operation = {
       *       state,
       *       // ...
       *     }
       *     super(operation);
       *   }
       * }
       * ```
       *
       * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.
       */
      function Poller(operation) {
        var _this32 = this;

        _classCallCheck(this, Poller);

        this.stopped = true;
        this.pollProgressCallbacks = [];
        this.operation = operation;
        this.promise = new Promise(function (resolve, reject) {
          _this32.resolve = resolve;
          _this32.reject = reject;
        }); // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.
        // The above warning would get thrown if `poller.poll` is called, it returns an error,
        // and pullUntilDone did not have a .catch or await try/catch on it's return value.

        this.promise["catch"](function () {
          /* intentionally blank */
        });
      }
      /**
       * @internal
       * Starts a loop that will break only if the poller is done
       * or if the poller is stopped.
       */


      _createClass(Poller, [{
        key: "startPolling",
        value: function () {
          var _startPolling = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
            return regeneratorRuntime.wrap(function _callee23$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    if (this.stopped) {
                      this.stopped = false;
                    }

                  case 1:
                    if (!(!this.isStopped() && !this.isDone())) {
                      _context24.next = 8;
                      break;
                    }

                    _context24.next = 4;
                    return this.poll();

                  case 4:
                    _context24.next = 6;
                    return this.delay();

                  case 6:
                    _context24.next = 1;
                    break;

                  case 8:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee23, this);
          }));

          function startPolling() {
            return _startPolling.apply(this, arguments);
          }

          return startPolling;
        }()
        /**
         * @internal
         * pollOnce does one polling, by calling to the update method of the underlying
         * poll operation to make any relevant change effective.
         *
         * It only optionally receives an object with an abortSignal property, from \@azure/abort-controller's AbortSignalLike.
         *
         * @param options - Optional properties passed to the operation's update method.
         */

      }, {
        key: "pollOnce",
        value: function () {
          var _pollOnce = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
            var options,
                _args24 = arguments;
            return regeneratorRuntime.wrap(function _callee24$(_context25) {
              while (1) {
                switch (_context25.prev = _context25.next) {
                  case 0:
                    options = _args24.length > 0 && _args24[0] !== undefined ? _args24[0] : {};
                    _context25.prev = 1;

                    if (this.isDone()) {
                      _context25.next = 7;
                      break;
                    }

                    _context25.next = 5;
                    return this.operation.update({
                      abortSignal: options.abortSignal,
                      fireProgress: this.fireProgress.bind(this)
                    });

                  case 5:
                    this.operation = _context25.sent;

                    if (this.isDone() && this.resolve) {
                      // If the poller has finished polling, this means we now have a result.
                      // However, it can be the case that TResult is instantiated to void, so
                      // we are not expecting a result anyway. To assert that we might not
                      // have a result eventually after finishing polling, we cast the result
                      // to TResult.
                      this.resolve(this.operation.state.result);
                    }

                  case 7:
                    _context25.next = 14;
                    break;

                  case 9:
                    _context25.prev = 9;
                    _context25.t0 = _context25["catch"](1);
                    this.operation.state.error = _context25.t0;

                    if (this.reject) {
                      this.reject(_context25.t0);
                    }

                    throw _context25.t0;

                  case 14:
                  case "end":
                    return _context25.stop();
                }
              }
            }, _callee24, this, [[1, 9]]);
          }));

          function pollOnce() {
            return _pollOnce.apply(this, arguments);
          }

          return pollOnce;
        }()
        /**
         * @internal
         * fireProgress calls the functions passed in via onProgress the method of the poller.
         *
         * It loops over all of the callbacks received from onProgress, and executes them, sending them
         * the current operation state.
         *
         * @param state - The current operation state.
         */

      }, {
        key: "fireProgress",
        value: function fireProgress(state) {
          var _iterator18 = _createForOfIteratorHelper(this.pollProgressCallbacks),
              _step18;

          try {
            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
              var callback = _step18.value;
              callback(state);
            }
          } catch (err) {
            _iterator18.e(err);
          } finally {
            _iterator18.f();
          }
        }
        /**
         * @internal
         * Invokes the underlying operation's cancel method, and rejects the
         * pollUntilDone promise.
         */

      }, {
        key: "cancelOnce",
        value: function () {
          var _cancelOnce = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
            var options,
                _args25 = arguments;
            return regeneratorRuntime.wrap(function _callee25$(_context26) {
              while (1) {
                switch (_context26.prev = _context26.next) {
                  case 0:
                    options = _args25.length > 0 && _args25[0] !== undefined ? _args25[0] : {};
                    _context26.next = 3;
                    return this.operation.cancel(options);

                  case 3:
                    this.operation = _context26.sent;

                    if (this.reject) {
                      this.reject(new PollerCancelledError("Poller cancelled"));
                    }

                  case 5:
                  case "end":
                    return _context26.stop();
                }
              }
            }, _callee25, this);
          }));

          function cancelOnce() {
            return _cancelOnce.apply(this, arguments);
          }

          return cancelOnce;
        }()
        /**
         * Returns a promise that will resolve once a single polling request finishes.
         * It does this by calling the update method of the Poller's operation.
         *
         * It only optionally receives an object with an abortSignal property, from \@azure/abort-controller's AbortSignalLike.
         *
         * @param options - Optional properties passed to the operation's update method.
         */

      }, {
        key: "poll",
        value: function poll() {
          var _this33 = this;

          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          if (!this.pollOncePromise) {
            this.pollOncePromise = this.pollOnce(options);

            var clearPollOncePromise = function clearPollOncePromise() {
              _this33.pollOncePromise = undefined;
            };

            this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise)["catch"](this.reject);
          }

          return this.pollOncePromise;
        }
        /**
         * Returns a promise that will resolve once the underlying operation is completed.
         */

      }, {
        key: "pollUntilDone",
        value: function () {
          var _pollUntilDone = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
            return regeneratorRuntime.wrap(function _callee26$(_context27) {
              while (1) {
                switch (_context27.prev = _context27.next) {
                  case 0:
                    if (this.stopped) {
                      this.startPolling()["catch"](this.reject);
                    }

                    return _context27.abrupt("return", this.promise);

                  case 2:
                  case "end":
                    return _context27.stop();
                }
              }
            }, _callee26, this);
          }));

          function pollUntilDone() {
            return _pollUntilDone.apply(this, arguments);
          }

          return pollUntilDone;
        }()
        /**
         * Invokes the provided callback after each polling is completed,
         * sending the current state of the poller's operation.
         *
         * It returns a method that can be used to stop receiving updates on the given callback function.
         */

      }, {
        key: "onProgress",
        value: function onProgress(callback) {
          var _this34 = this;

          this.pollProgressCallbacks.push(callback);
          return function () {
            _this34.pollProgressCallbacks = _this34.pollProgressCallbacks.filter(function (c) {
              return c !== callback;
            });
          };
        }
        /**
         * Returns true if the poller has finished polling.
         */

      }, {
        key: "isDone",
        value: function isDone() {
          var state = this.operation.state;
          return Boolean(state.isCompleted || state.isCancelled || state.error);
        }
        /**
         * Stops the poller from continuing to poll.
         */

      }, {
        key: "stopPolling",
        value: function stopPolling() {
          if (!this.stopped) {
            this.stopped = true;

            if (this.reject) {
              this.reject(new PollerStoppedError("This poller is already stopped"));
            }
          }
        }
        /**
         * Returns true if the poller is stopped.
         */

      }, {
        key: "isStopped",
        value: function isStopped() {
          return this.stopped;
        }
        /**
         * Attempts to cancel the underlying operation.
         *
         * It only optionally receives an object with an abortSignal property, from \@azure/abort-controller's AbortSignalLike.
         *
         * If it's called again before it finishes, it will throw an error.
         *
         * @param options - Optional properties passed to the operation's update method.
         */

      }, {
        key: "cancelOperation",
        value: function cancelOperation() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          if (!this.stopped) {
            this.stopped = true;
          }

          if (!this.cancelPromise) {
            this.cancelPromise = this.cancelOnce(options);
          } else if (options.abortSignal) {
            throw new Error("A cancel request is currently pending");
          }

          return this.cancelPromise;
        }
        /**
         * Returns the state of the operation.
         *
         * Even though TState will be the same type inside any of the methods of any extension of the Poller class,
         * implementations of the pollers can customize what's shared with the public by writing their own
         * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller
         * and a public type representing a safe to share subset of the properties of the internal state.
         * Their definition of getOperationState can then return their public type.
         *
         * Example:
         *
         * ```ts
         * // Let's say we have our poller's operation state defined as:
         * interface MyOperationState extends PollOperationState<ResultType> {
         *   privateProperty?: string;
         *   publicProperty?: string;
         * }
         *
         * // To allow us to have a true separation of public and private state, we have to define another interface:
         * interface PublicState extends PollOperationState<ResultType> {
         *   publicProperty?: string;
         * }
         *
         * // Then, we define our Poller as follows:
         * export class MyPoller extends Poller<MyOperationState, ResultType> {
         *   // ... More content is needed here ...
         *
         *   public getOperationState(): PublicState {
         *     const state: PublicState = this.operation.state;
         *     return {
         *       // Properties from PollOperationState<TResult>
         *       isStarted: state.isStarted,
         *       isCompleted: state.isCompleted,
         *       isCancelled: state.isCancelled,
         *       error: state.error,
         *       result: state.result,
         *
         *       // The only other property needed by PublicState.
         *       publicProperty: state.publicProperty
         *     }
         *   }
         * }
         * ```
         *
         * You can see this in the tests of this repository, go to the file:
         * `../test/utils/testPoller.ts`
         * and look for the getOperationState implementation.
         */

      }, {
        key: "getOperationState",
        value: function getOperationState() {
          return this.operation.state;
        }
        /**
         * Returns the result value of the operation,
         * regardless of the state of the poller.
         * It can return undefined or an incomplete form of the final TResult value
         * depending on the implementation.
         */

      }, {
        key: "getResult",
        value: function getResult() {
          var state = this.operation.state;
          return state.result;
        }
        /**
         * Returns a serialized version of the poller's operation
         * by invoking the operation's toString method.
         */

      }, {
        key: "toString",
        value: function toString() {
          return this.operation.toString();
        }
      }]);

      return Poller;
    }(); //# sourceMappingURL=poller.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-paging/dist-esm/src/getPagedAsyncIterator.js": function node_modulesAzureCorePagingDistEsmSrcGetPagedAsyncIteratorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getPagedAsyncIterator", function () {
      return getPagedAsyncIterator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/core-paging/node_modules/tslib/tslib.es6.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * returns an async iterator that iterates over results. It also has a `byPage`
     * method that returns pages of items at once.
     *
     * @param pagedResult - an object that specifies how to get pages.
     * @returns a paged async iterator that iterates over results.
     */


    function getPagedAsyncIterator(pagedResult) {
      var _ref9;

      var _a;

      var iter = getItemAsyncIterator(pagedResult);
      return _ref9 = {
        next: function next() {
          return iter.next();
        }
      }, _defineProperty(_ref9, Symbol.asyncIterator, function () {
        return this;
      }), _defineProperty(_ref9, "byPage", (_a = pagedResult === null || pagedResult === void 0 ? void 0 : pagedResult.byPage) !== null && _a !== void 0 ? _a : function (settings) {
        return getPageAsyncIterator(pagedResult, settings === null || settings === void 0 ? void 0 : settings.maxPageSize);
      }), _ref9;
    }

    function getItemAsyncIterator(pagedResult, maxPageSize) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function getItemAsyncIterator_1() {
        var e_1, _a, pages, firstVal, pages_1, pages_1_1, page;

        return regeneratorRuntime.wrap(function getItemAsyncIterator_1$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                pages = getPageAsyncIterator(pagedResult, maxPageSize);
                _context28.next = 3;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(pages.next());

              case 3:
                firstVal = _context28.sent;

                if (Array.isArray(firstVal.value)) {
                  _context28.next = 16;
                  break;
                }

                _context28.next = 7;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(firstVal.value);

              case 7:
                _context28.next = 9;
                return _context28.sent;

              case 9:
                _context28.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                return _context28.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(pages)), "t1", 11);

              case 11:
                _context28.t2 = _context28.t1;
                _context28.next = 14;
                return (0, _context28.t0)(_context28.t2);

              case 14:
                _context28.next = 50;
                break;

              case 16:
                _context28.t3 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                return _context28.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(firstVal.value)), "t4", 18);

              case 18:
                _context28.t5 = _context28.t4;
                _context28.next = 21;
                return (0, _context28.t3)(_context28.t5);

              case 21:
                _context28.prev = 21;
                pages_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(pages);

              case 23:
                _context28.next = 25;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(pages_1.next());

              case 25:
                pages_1_1 = _context28.sent;

                if (pages_1_1.done) {
                  _context28.next = 35;
                  break;
                }

                page = pages_1_1.value; // pages is of type `AsyncIterableIterator<TPage>` so `page` is of type `TPage`. In this branch,
                // it must be the case that `TPage = TElement[]`

                _context28.t6 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                return _context28.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(page)), "t7", 30);

              case 30:
                _context28.t8 = _context28.t7;
                _context28.next = 33;
                return (0, _context28.t6)(_context28.t8);

              case 33:
                _context28.next = 23;
                break;

              case 35:
                _context28.next = 40;
                break;

              case 37:
                _context28.prev = 37;
                _context28.t9 = _context28["catch"](21);
                e_1 = {
                  error: _context28.t9
                };

              case 40:
                _context28.prev = 40;
                _context28.prev = 41;

                if (!(pages_1_1 && !pages_1_1.done && (_a = pages_1["return"]))) {
                  _context28.next = 45;
                  break;
                }

                _context28.next = 45;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_a.call(pages_1));

              case 45:
                _context28.prev = 45;

                if (!e_1) {
                  _context28.next = 48;
                  break;
                }

                throw e_1.error;

              case 48:
                return _context28.finish(45);

              case 49:
                return _context28.finish(40);

              case 50:
              case "end":
                return _context28.stop();
            }
          }
        }, getItemAsyncIterator_1, null, [[21, 37, 40, 50], [41,, 45, 49]]);
      }));
    }

    function getPageAsyncIterator(pagedResult, maxPageSize) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function getPageAsyncIterator_1() {
        var response;
        return regeneratorRuntime.wrap(function getPageAsyncIterator_1$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                _context29.next = 2;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(pagedResult.getPage(pagedResult.firstPageLink, maxPageSize));

              case 2:
                response = _context29.sent;
                _context29.next = 5;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(response.page);

              case 5:
                _context29.next = 7;
                return _context29.sent;

              case 7:
                if (!response.nextPageLink) {
                  _context29.next = 17;
                  break;
                }

                _context29.next = 10;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(pagedResult.getPage(response.nextPageLink, maxPageSize));

              case 10:
                response = _context29.sent;
                _context29.next = 13;
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(response.page);

              case 13:
                _context29.next = 15;
                return _context29.sent;

              case 15:
                _context29.next = 7;
                break;

              case 17:
              case "end":
                return _context29.stop();
            }
          }
        }, getPageAsyncIterator_1);
      }));
    } //# sourceMappingURL=getPagedAsyncIterator.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-paging/dist-esm/src/index.js": function node_modulesAzureCorePagingDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-asynciterator-polyfill */
    "./node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js");
    /* harmony import */


    var _azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_azure_core_asynciterator_polyfill__WEBPACK_IMPORTED_MODULE_0__);
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/core-paging/dist-esm/src/models.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _getPagedAsyncIterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./getPagedAsyncIterator */
    "./node_modules/@azure/core-paging/dist-esm/src/getPagedAsyncIterator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getPagedAsyncIterator", function () {
      return _getPagedAsyncIterator__WEBPACK_IMPORTED_MODULE_2__["getPagedAsyncIterator"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-paging/dist-esm/src/models.js": function node_modulesAzureCorePagingDistEsmSrcModelsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=models.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-paging/node_modules/tslib/tslib.es6.js": function node_modulesAzureCorePagingNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign3;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArray", function () {
      return __spreadArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics3 = function extendStatics(d, b) {
      _extendStatics3 = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        }
      };

      return _extendStatics3(d, b);
    };

    function __extends(d, b) {
      if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

      _extendStatics3(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign3 = function __assign() {
      _assign3 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign3.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    var __createBinding = Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    };

    function __exportStar(m, o) {
      for (var p in m) {
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }
    /** @deprecated */


    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }
    /** @deprecated */


    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    var __setModuleDefault = Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    };

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }

      __setModuleDefault(result, mod);

      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m") throw new TypeError("Private method is not writable");
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    }
    /***/

  },

  /***/
  "./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js": function node_modulesAzureCoreTracingDistEsmSrcCreateSpanJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isTracingDisabled", function () {
      return isTracingDisabled;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createSpanFunction", function () {
      return createSpanFunction;
    });
    /* harmony import */


    var _interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./interfaces */
    "./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js");
    /* harmony import */


    var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @opentelemetry/api */
    "./node_modules/@opentelemetry/api/build/esm/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function isTracingDisabled() {
      var _a;

      if (typeof process === "undefined") {
        // not supported in browser for now without polyfills
        return false;
      }

      var azureTracingDisabledValue = (_a = process.env.AZURE_TRACING_DISABLED) === null || _a === void 0 ? void 0 : _a.toLowerCase();

      if (azureTracingDisabledValue === "false" || azureTracingDisabledValue === "0") {
        return false;
      }

      return Boolean(azureTracingDisabledValue);
    }
    /**
     * Creates a function that can be used to create spans using the global tracer.
     *
     * Usage:
     *
     * ```typescript
     * // once
     * const createSpan = createSpanFunction({ packagePrefix: "Azure.Data.AppConfiguration", namespace: "Microsoft.AppConfiguration" });
     *
     * // in each operation
     * const span = createSpan("deleteConfigurationSetting", operationOptions);
     *    // code...
     * span.end();
     * ```
     *
     * @hidden
     * @param args - allows configuration of the prefix for each span as well as the az.namespace field.
     */


    function createSpanFunction(args) {
      return function (operationName, operationOptions) {
        var tracer = Object(_interfaces__WEBPACK_IMPORTED_MODULE_0__["getTracer"])();
        var tracingOptions = (operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) || {};
        var spanOptions = Object.assign({
          kind: _interfaces__WEBPACK_IMPORTED_MODULE_0__["SpanKind"].INTERNAL
        }, tracingOptions.spanOptions);
        var spanName = args.packagePrefix ? "".concat(args.packagePrefix, ".").concat(operationName) : operationName;
        var span;

        if (isTracingDisabled()) {
          span = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__["trace"].wrapSpanContext(_opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__["INVALID_SPAN_CONTEXT"]);
        } else {
          span = tracer.startSpan(spanName, spanOptions, tracingOptions.tracingContext);
        }

        if (args.namespace) {
          span.setAttribute("az.namespace", args.namespace);
        }

        var newSpanOptions = tracingOptions.spanOptions || {};

        if (span.isRecording() && args.namespace) {
          newSpanOptions = Object.assign(Object.assign({}, tracingOptions.spanOptions), {
            attributes: Object.assign(Object.assign({}, spanOptions.attributes), {
              "az.namespace": args.namespace
            })
          });
        }

        var newTracingOptions = Object.assign(Object.assign({}, tracingOptions), {
          spanOptions: newSpanOptions,
          tracingContext: Object(_interfaces__WEBPACK_IMPORTED_MODULE_0__["setSpan"])(tracingOptions.tracingContext || _interfaces__WEBPACK_IMPORTED_MODULE_0__["context"].active(), span)
        });
        var newOperationOptions = Object.assign(Object.assign({}, operationOptions), {
          tracingOptions: newTracingOptions
        });
        return {
          span: span,
          updatedOptions: newOperationOptions
        };
      };
    } //# sourceMappingURL=createSpan.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-tracing/dist-esm/src/index.js": function node_modulesAzureCoreTracingDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _createSpan__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./createSpan */
    "./node_modules/@azure/core-tracing/dist-esm/src/createSpan.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "createSpanFunction", function () {
      return _createSpan__WEBPACK_IMPORTED_MODULE_0__["createSpanFunction"];
    });
    /* harmony import */


    var _interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./interfaces */
    "./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "context", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["context"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getSpan", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["getSpan"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getSpanContext", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["getSpanContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getTracer", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["getTracer"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSpanContextValid", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["isSpanContextValid"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setSpan", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["setSpan"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setSpanContext", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["setSpanContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SpanKind", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["SpanKind"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SpanStatusCode", function () {
      return _interfaces__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"];
    });
    /* harmony import */


    var _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./utils/traceParentHeader */
    "./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "extractSpanContextFromTraceParentHeader", function () {
      return _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__["extractSpanContextFromTraceParentHeader"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getTraceParentHeader", function () {
      return _utils_traceParentHeader__WEBPACK_IMPORTED_MODULE_2__["getTraceParentHeader"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // Tracers and wrappers
    // Shared interfaces
    // Utilities
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-tracing/dist-esm/src/interfaces.js": function node_modulesAzureCoreTracingDistEsmSrcInterfacesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SpanKind", function () {
      return SpanKind;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getSpan", function () {
      return getSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setSpan", function () {
      return setSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setSpanContext", function () {
      return setSpanContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getSpanContext", function () {
      return getSpanContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isSpanContextValid", function () {
      return isSpanContextValid;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getTracer", function () {
      return getTracer;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "context", function () {
      return context;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SpanStatusCode", function () {
      return SpanStatusCode;
    });
    /* harmony import */


    var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @opentelemetry/api */
    "./node_modules/@opentelemetry/api/build/esm/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * The kind of span.
     */


    var SpanKind;

    (function (SpanKind) {
      /** Default value. Indicates that the span is used internally. */
      SpanKind[SpanKind["INTERNAL"] = 0] = "INTERNAL";
      /**
       * Indicates that the span covers server-side handling of an RPC or other
       * remote request.
       */

      SpanKind[SpanKind["SERVER"] = 1] = "SERVER";
      /**
       * Indicates that the span covers the client-side wrapper around an RPC or
       * other remote request.
       */

      SpanKind[SpanKind["CLIENT"] = 2] = "CLIENT";
      /**
       * Indicates that the span describes producer sending a message to a
       * broker. Unlike client and server, there is no direct critical path latency
       * relationship between producer and consumer spans.
       */

      SpanKind[SpanKind["PRODUCER"] = 3] = "PRODUCER";
      /**
       * Indicates that the span describes consumer receiving a message from a
       * broker. Unlike client and server, there is no direct critical path latency
       * relationship between producer and consumer spans.
       */

      SpanKind[SpanKind["CONSUMER"] = 4] = "CONSUMER";
    })(SpanKind || (SpanKind = {}));
    /**
     * Return the span if one exists
     *
     * @param context - context to get span from
     */


    function getSpan(context) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].getSpan(context);
    }
    /**
     * Set the span on a context
     *
     * @param context - context to use as parent
     * @param span - span to set active
     */


    function setSpan(context, span) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].setSpan(context, span);
    }
    /**
     * Wrap span context in a NoopSpan and set as span in a new
     * context
     *
     * @param context - context to set active span on
     * @param spanContext - span context to be wrapped
     */


    function setSpanContext(context, spanContext) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].setSpanContext(context, spanContext);
    }
    /**
     * Get the span context of the span if it exists.
     *
     * @param context - context to get values from
     */


    function getSpanContext(context) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].getSpanContext(context);
    }
    /**
     * Returns true of the given {@link SpanContext} is valid.
     * A valid {@link SpanContext} is one which has a valid trace ID and span ID as per the spec.
     *
     * @param context - the {@link SpanContext} to validate.
     *
     * @returns true if the {@link SpanContext} is valid, false otherwise.
     */


    function isSpanContextValid(context) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].isSpanContextValid(context);
    }

    function getTracer(name, version) {
      return _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["trace"].getTracer(name || "azure/core-tracing", version);
    }
    /** Entrypoint for context API */


    var context = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__["context"];
    /** SpanStatusCode */

    var SpanStatusCode;

    (function (SpanStatusCode) {
      /**
       * The default status.
       */
      SpanStatusCode[SpanStatusCode["UNSET"] = 0] = "UNSET";
      /**
       * The operation has been validated by an Application developer or
       * Operator to have completed successfully.
       */

      SpanStatusCode[SpanStatusCode["OK"] = 1] = "OK";
      /**
       * The operation contains an error.
       */

      SpanStatusCode[SpanStatusCode["ERROR"] = 2] = "ERROR";
    })(SpanStatusCode || (SpanStatusCode = {})); //# sourceMappingURL=interfaces.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/core-tracing/dist-esm/src/utils/traceParentHeader.js": function node_modulesAzureCoreTracingDistEsmSrcUtilsTraceParentHeaderJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "extractSpanContextFromTraceParentHeader", function () {
      return extractSpanContextFromTraceParentHeader;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getTraceParentHeader", function () {
      return getTraceParentHeader;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var VERSION = "00";
    /**
     * Generates a `SpanContext` given a `traceparent` header value.
     * @param traceParent - Serialized span context data as a `traceparent` header value.
     * @returns The `SpanContext` generated from the `traceparent` value.
     */

    function extractSpanContextFromTraceParentHeader(traceParentHeader) {
      var parts = traceParentHeader.split("-");

      if (parts.length !== 4) {
        return;
      }

      var _parts = _slicedToArray(parts, 4),
          version = _parts[0],
          traceId = _parts[1],
          spanId = _parts[2],
          traceOptions = _parts[3];

      if (version !== VERSION) {
        return;
      }

      var traceFlags = parseInt(traceOptions, 16);
      var spanContext = {
        spanId: spanId,
        traceId: traceId,
        traceFlags: traceFlags
      };
      return spanContext;
    }
    /**
     * Generates a `traceparent` value given a span context.
     * @param spanContext - Contains context for a specific span.
     * @returns The `spanContext` represented as a `traceparent` value.
     */


    function getTraceParentHeader(spanContext) {
      var missingFields = [];

      if (!spanContext.traceId) {
        missingFields.push("traceId");
      }

      if (!spanContext.spanId) {
        missingFields.push("spanId");
      }

      if (missingFields.length) {
        return;
      }

      var flags = spanContext.traceFlags || 0
      /* NONE */
      ;
      var hexFlags = flags.toString(16);
      var traceFlags = hexFlags.length === 1 ? "0".concat(hexFlags) : hexFlags; // https://www.w3.org/TR/trace-context/#traceparent-header-field-values

      return "".concat(VERSION, "-").concat(spanContext.traceId, "-").concat(spanContext.spanId, "-").concat(traceFlags);
    } //# sourceMappingURL=traceParentHeader.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/logger/dist-esm/src/debug.js": function node_modulesAzureLoggerDistEsmSrcDebugJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/logger/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./log */
    "./node_modules/@azure/logger/dist-esm/src/log.browser.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /* eslint-disable no-invalid-this */


    var debugEnvVariable = typeof process !== "undefined" && process.env && process.env.DEBUG || undefined;
    var enabledString;
    var enabledNamespaces = [];
    var skippedNamespaces = [];
    var debuggers = [];

    if (debugEnvVariable) {
      enable(debugEnvVariable);
    }

    var debugObj = Object.assign(function (namespace) {
      return createDebugger(namespace);
    }, {
      enable: enable,
      enabled: enabled,
      disable: disable,
      log: _log__WEBPACK_IMPORTED_MODULE_1__["log"]
    });

    function enable(namespaces) {
      var e_1, _a, e_2, _b;

      enabledString = namespaces;
      enabledNamespaces = [];
      skippedNamespaces = [];
      var wildcard = /\*/g;
      var namespaceList = namespaces.split(",").map(function (ns) {
        return ns.trim().replace(wildcard, ".*?");
      });

      try {
        for (var namespaceList_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(namespaceList), namespaceList_1_1 = namespaceList_1.next(); !namespaceList_1_1.done; namespaceList_1_1 = namespaceList_1.next()) {
          var ns = namespaceList_1_1.value;

          if (ns.startsWith("-")) {
            skippedNamespaces.push(new RegExp("^" + ns.substr(1) + "$"));
          } else {
            enabledNamespaces.push(new RegExp("^" + ns + "$"));
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (namespaceList_1_1 && !namespaceList_1_1.done && (_a = namespaceList_1["return"])) _a.call(namespaceList_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      try {
        for (var debuggers_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(debuggers), debuggers_1_1 = debuggers_1.next(); !debuggers_1_1.done; debuggers_1_1 = debuggers_1.next()) {
          var instance = debuggers_1_1.value;
          instance.enabled = enabled(instance.namespace);
        }
      } catch (e_2_1) {
        e_2 = {
          error: e_2_1
        };
      } finally {
        try {
          if (debuggers_1_1 && !debuggers_1_1.done && (_b = debuggers_1["return"])) _b.call(debuggers_1);
        } finally {
          if (e_2) throw e_2.error;
        }
      }
    }

    function enabled(namespace) {
      var e_3, _a, e_4, _b;

      if (namespace.endsWith("*")) {
        return true;
      }

      try {
        for (var skippedNamespaces_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(skippedNamespaces), skippedNamespaces_1_1 = skippedNamespaces_1.next(); !skippedNamespaces_1_1.done; skippedNamespaces_1_1 = skippedNamespaces_1.next()) {
          var skipped = skippedNamespaces_1_1.value;

          if (skipped.test(namespace)) {
            return false;
          }
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (skippedNamespaces_1_1 && !skippedNamespaces_1_1.done && (_a = skippedNamespaces_1["return"])) _a.call(skippedNamespaces_1);
        } finally {
          if (e_3) throw e_3.error;
        }
      }

      try {
        for (var enabledNamespaces_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(enabledNamespaces), enabledNamespaces_1_1 = enabledNamespaces_1.next(); !enabledNamespaces_1_1.done; enabledNamespaces_1_1 = enabledNamespaces_1.next()) {
          var enabledNamespace = enabledNamespaces_1_1.value;

          if (enabledNamespace.test(namespace)) {
            return true;
          }
        }
      } catch (e_4_1) {
        e_4 = {
          error: e_4_1
        };
      } finally {
        try {
          if (enabledNamespaces_1_1 && !enabledNamespaces_1_1.done && (_b = enabledNamespaces_1["return"])) _b.call(enabledNamespaces_1);
        } finally {
          if (e_4) throw e_4.error;
        }
      }

      return false;
    }

    function disable() {
      var result = enabledString || "";
      enable("");
      return result;
    }

    function createDebugger(namespace) {
      var newDebugger = Object.assign(debug, {
        enabled: enabled(namespace),
        destroy: destroy,
        log: debugObj.log,
        namespace: namespace,
        extend: extend
      });

      function debug() {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        if (!newDebugger.enabled) {
          return;
        }

        if (args.length > 0) {
          args[0] = namespace + " " + args[0];
        }

        newDebugger.log.apply(newDebugger, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
      }

      debuggers.push(newDebugger);
      return newDebugger;
    }

    function destroy() {
      var index = debuggers.indexOf(this);

      if (index >= 0) {
        debuggers.splice(index, 1);
        return true;
      }

      return false;
    }

    function extend(namespace) {
      var newDebugger = createDebugger(this.namespace + ":" + namespace);
      newDebugger.log = this.log;
      return newDebugger;
    }
    /* harmony default export */


    __webpack_exports__["default"] = debugObj; //# sourceMappingURL=debug.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/logger/dist-esm/src/index.js": function node_modulesAzureLoggerDistEsmSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AzureLogger", function () {
      return AzureLogger;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setLogLevel", function () {
      return setLogLevel;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getLogLevel", function () {
      return getLogLevel;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createClientLogger", function () {
      return createClientLogger;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/logger/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./debug */
    "./node_modules/@azure/logger/dist-esm/src/debug.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var registeredLoggers = new Set();
    var logLevelFromEnv = typeof process !== "undefined" && process.env && process.env.AZURE_LOG_LEVEL || undefined;
    var azureLogLevel;
    /**
     * The AzureLogger provides a mechanism for overriding where logs are output to.
     * By default, logs are sent to stderr.
     * Override the `log` method to redirect logs to another location.
     */

    var AzureLogger = Object(_debug__WEBPACK_IMPORTED_MODULE_1__["default"])("azure");

    AzureLogger.log = function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      _debug__WEBPACK_IMPORTED_MODULE_1__["default"].log.apply(_debug__WEBPACK_IMPORTED_MODULE_1__["default"], Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
    };

    var AZURE_LOG_LEVELS = ["verbose", "info", "warning", "error"];

    if (logLevelFromEnv) {
      // avoid calling setLogLevel because we don't want a mis-set environment variable to crash
      if (isAzureLogLevel(logLevelFromEnv)) {
        setLogLevel(logLevelFromEnv);
      } else {
        console.error("AZURE_LOG_LEVEL set to unknown log level '" + logLevelFromEnv + "'; logging is not enabled. Acceptable values: " + AZURE_LOG_LEVELS.join(", ") + ".");
      }
    }
    /**
     * Immediately enables logging at the specified log level.
     * @param level - The log level to enable for logging.
     * Options from most verbose to least verbose are:
     * - verbose
     * - info
     * - warning
     * - error
     */


    function setLogLevel(level) {
      var e_1, _a;

      if (level && !isAzureLogLevel(level)) {
        throw new Error("Unknown log level '" + level + "'. Acceptable values: " + AZURE_LOG_LEVELS.join(","));
      }

      azureLogLevel = level;
      var enabledNamespaces = [];

      try {
        for (var registeredLoggers_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(registeredLoggers), registeredLoggers_1_1 = registeredLoggers_1.next(); !registeredLoggers_1_1.done; registeredLoggers_1_1 = registeredLoggers_1.next()) {
          var logger = registeredLoggers_1_1.value;

          if (shouldEnable(logger)) {
            enabledNamespaces.push(logger.namespace);
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (registeredLoggers_1_1 && !registeredLoggers_1_1.done && (_a = registeredLoggers_1["return"])) _a.call(registeredLoggers_1);
        } finally {
          if (e_1) throw e_1.error;
        }
      }

      _debug__WEBPACK_IMPORTED_MODULE_1__["default"].enable(enabledNamespaces.join(","));
    }
    /**
     * Retrieves the currently specified log level.
     */


    function getLogLevel() {
      return azureLogLevel;
    }

    var levelMap = {
      verbose: 400,
      info: 300,
      warning: 200,
      error: 100
    };
    /**
     * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.
     * @param namespace - The name of the SDK package.
     * @hidden
     */

    function createClientLogger(namespace) {
      var clientRootLogger = AzureLogger.extend(namespace);
      patchLogMethod(AzureLogger, clientRootLogger);
      return {
        error: createLogger(clientRootLogger, "error"),
        warning: createLogger(clientRootLogger, "warning"),
        info: createLogger(clientRootLogger, "info"),
        verbose: createLogger(clientRootLogger, "verbose")
      };
    }

    function patchLogMethod(parent, child) {
      child.log = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        parent.log.apply(parent, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
      };
    }

    function createLogger(parent, level) {
      var logger = Object.assign(parent.extend(level), {
        level: level
      });
      patchLogMethod(parent, logger);

      if (shouldEnable(logger)) {
        var enabledNamespaces = _debug__WEBPACK_IMPORTED_MODULE_1__["default"].disable();

        _debug__WEBPACK_IMPORTED_MODULE_1__["default"].enable(enabledNamespaces + "," + logger.namespace);
      }

      registeredLoggers.add(logger);
      return logger;
    }

    function shouldEnable(logger) {
      if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {
        return true;
      } else {
        return false;
      }
    }

    function isAzureLogLevel(logLevel) {
      return AZURE_LOG_LEVELS.includes(logLevel);
    } //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/logger/dist-esm/src/log.browser.js": function node_modulesAzureLoggerDistEsmSrcLogBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "log", function () {
      return log;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/logger/node_modules/tslib/tslib.es6.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function log() {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      if (args.length > 0) {
        var firstArg = String(args[0]);

        if (firstArg.includes(":error")) {
          console.error.apply(console, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        } else if (firstArg.includes(":warning")) {
          console.warn.apply(console, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        } else if (firstArg.includes(":info")) {
          console.info.apply(console, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        } else if (firstArg.includes(":verbose")) {
          console.debug.apply(console, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        } else {
          console.debug.apply(console, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        }
      }
    } //# sourceMappingURL=log.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/logger/node_modules/tslib/tslib.es6.js": function node_modulesAzureLoggerNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArray", function () {
      return __spreadArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics4 = function extendStatics(d, b) {
      _extendStatics4 = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        }
      };

      return _extendStatics4(d, b);
    };

    function __extends(d, b) {
      if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

      _extendStatics4(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign4 = function __assign() {
      _assign4 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign4.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    var __createBinding = Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    };

    function __exportStar(m, o) {
      for (var p in m) {
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }
    /** @deprecated */


    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }
    /** @deprecated */


    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    var __setModuleDefault = Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    };

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }

      __setModuleDefault(result, mod);

      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m") throw new TypeError("Private method is not writable");
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    }
    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponse.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBatchResponseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=BatchResponse.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponseParser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBatchResponseParserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BatchResponseParser", function () {
      return BatchResponseParser;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _BatchUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./BatchUtils */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchUtils.browser.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./log */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var HTTP_HEADER_DELIMITER = ": ";
    var SPACE_DELIMITER = " ";
    var NOT_FOUND = -1;
    /**
     * Util class for parsing batch response.
     */

    var BatchResponseParser = /*#__PURE__*/function () {
      function BatchResponseParser(batchResponse, subRequests) {
        _classCallCheck(this, BatchResponseParser);

        if (!batchResponse || !batchResponse.contentType) {
          // In special case(reported), server may return invalid content-type which could not be parsed.
          throw new RangeError("batchResponse is malformed or doesn't contain valid content-type.");
        }

        if (!subRequests || subRequests.size === 0) {
          // This should be prevent during coding.
          throw new RangeError("Invalid state: subRequests is not provided or size is 0.");
        }

        this.batchResponse = batchResponse;
        this.subRequests = subRequests;
        this.responseBatchBoundary = this.batchResponse.contentType.split("=")[1];
        this.perResponsePrefix = "--".concat(this.responseBatchBoundary).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HTTP_LINE_ENDING"]);
        this.batchResponseEnding = "--".concat(this.responseBatchBoundary, "--");
      } // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response


      _createClass(BatchResponseParser, [{
        key: "parseBatchResponse",
        value: function () {
          var _parseBatchResponse = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {
            var responseBodyAsText, subResponses, subResponseCount, deserializedSubResponses, subResponsesSucceededCount, subResponsesFailedCount, index, subResponse, deserializedSubResponse, responseLines, subRespHeaderStartFound, subRespHeaderEndFound, subRespFailed, contentId, _iterator19, _step19, responseLine, tokens, _tokens;

            return regeneratorRuntime.wrap(function _callee27$(_context30) {
              while (1) {
                switch (_context30.prev = _context30.next) {
                  case 0:
                    if (!(this.batchResponse._response.status !== _utils_constants__WEBPACK_IMPORTED_MODULE_1__["HTTPURLConnection"].HTTP_ACCEPTED)) {
                      _context30.next = 2;
                      break;
                    }

                    throw new Error("Invalid state: batch request failed with status: '".concat(this.batchResponse._response.status, "'."));

                  case 2:
                    _context30.next = 4;
                    return Object(_BatchUtils__WEBPACK_IMPORTED_MODULE_2__["getBodyAsText"])(this.batchResponse);

                  case 4:
                    responseBodyAsText = _context30.sent;
                    subResponses = responseBodyAsText.split(this.batchResponseEnding)[0] // string after ending is useless
                    .split(this.perResponsePrefix).slice(1); // string before first response boundary is useless

                    subResponseCount = subResponses.length; // Defensive coding in case of potential error parsing.
                    // Note: subResponseCount == 1 is special case where sub request is invalid.
                    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.
                    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.

                    if (!(subResponseCount !== this.subRequests.size && subResponseCount !== 1)) {
                      _context30.next = 9;
                      break;
                    }

                    throw new Error("Invalid state: sub responses' count is not equal to sub requests' count.");

                  case 9:
                    deserializedSubResponses = new Array(subResponseCount);
                    subResponsesSucceededCount = 0;
                    subResponsesFailedCount = 0; // Parse sub subResponses.

                    index = 0;

                  case 13:
                    if (!(index < subResponseCount)) {
                      _context30.next = 59;
                      break;
                    }

                    subResponse = subResponses[index];
                    deserializedSubResponse = {};
                    deserializedSubResponse.headers = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
                    responseLines = subResponse.split("".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HTTP_LINE_ENDING"]));
                    subRespHeaderStartFound = false;
                    subRespHeaderEndFound = false;
                    subRespFailed = false;
                    contentId = NOT_FOUND;
                    _iterator19 = _createForOfIteratorHelper(responseLines);
                    _context30.prev = 23;

                    _iterator19.s();

                  case 25:
                    if ((_step19 = _iterator19.n()).done) {
                      _context30.next = 46;
                      break;
                    }

                    responseLine = _step19.value;

                    if (subRespHeaderStartFound) {
                      _context30.next = 31;
                      break;
                    }

                    // Convention line to indicate content ID
                    if (responseLine.startsWith(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].CONTENT_ID)) {
                      contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);
                    } // Http version line with status code indicates the start of sub request's response.
                    // Example: HTTP/1.1 202 Accepted


                    if (responseLine.startsWith(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HTTP_VERSION_1_1"])) {
                      subRespHeaderStartFound = true;
                      tokens = responseLine.split(SPACE_DELIMITER);
                      deserializedSubResponse.status = parseInt(tokens[1]);
                      deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);
                    }

                    return _context30.abrupt("continue", 44);

                  case 31:
                    if (!(responseLine.trim() === "")) {
                      _context30.next = 34;
                      break;
                    }

                    // Sub response's header start line already found, and the first empty line indicates header end line found.
                    if (!subRespHeaderEndFound) {
                      subRespHeaderEndFound = true;
                    }

                    return _context30.abrupt("continue", 44);

                  case 34:
                    if (subRespHeaderEndFound) {
                      _context30.next = 42;
                      break;
                    }

                    if (!(responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1)) {
                      _context30.next = 37;
                      break;
                    }

                    throw new Error("Invalid state: find non-empty line '".concat(responseLine, "' without HTTP header delimiter '").concat(HTTP_HEADER_DELIMITER, "'."));

                  case 37:
                    // Parse headers of sub response.
                    _tokens = responseLine.split(HTTP_HEADER_DELIMITER);
                    deserializedSubResponse.headers.set(_tokens[0], _tokens[1]);

                    if (_tokens[0] === _utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].X_MS_ERROR_CODE) {
                      deserializedSubResponse.errorCode = _tokens[1];
                      subRespFailed = true;
                    }

                    _context30.next = 44;
                    break;

                  case 42:
                    // Assemble body of sub response.
                    if (!deserializedSubResponse.bodyAsText) {
                      deserializedSubResponse.bodyAsText = "";
                    }

                    deserializedSubResponse.bodyAsText += responseLine;

                  case 44:
                    _context30.next = 25;
                    break;

                  case 46:
                    _context30.next = 51;
                    break;

                  case 48:
                    _context30.prev = 48;
                    _context30.t0 = _context30["catch"](23);

                    _iterator19.e(_context30.t0);

                  case 51:
                    _context30.prev = 51;

                    _iterator19.f();

                    return _context30.finish(51);

                  case 54:
                    // Inner for end
                    // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.
                    // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it
                    // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that
                    // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.
                    if (contentId !== NOT_FOUND && Number.isInteger(contentId) && contentId >= 0 && contentId < this.subRequests.size && deserializedSubResponses[contentId] === undefined) {
                      deserializedSubResponse._request = this.subRequests.get(contentId);
                      deserializedSubResponses[contentId] = deserializedSubResponse;
                    } else {
                      _log__WEBPACK_IMPORTED_MODULE_3__["logger"].error("subResponses[".concat(index, "] is dropped as the Content-ID is not found or invalid, Content-ID: ").concat(contentId));
                    }

                    if (subRespFailed) {
                      subResponsesFailedCount++;
                    } else {
                      subResponsesSucceededCount++;
                    }

                  case 56:
                    index++;
                    _context30.next = 13;
                    break;

                  case 59:
                    return _context30.abrupt("return", {
                      subResponses: deserializedSubResponses,
                      subResponsesSucceededCount: subResponsesSucceededCount,
                      subResponsesFailedCount: subResponsesFailedCount
                    });

                  case 60:
                  case "end":
                    return _context30.stop();
                }
              }
            }, _callee27, this, [[23, 48, 51, 54]]);
          }));

          function parseBatchResponse() {
            return _parseBatchResponse.apply(this, arguments);
          }

          return parseBatchResponse;
        }()
      }]);

      return BatchResponseParser;
    }(); //# sourceMappingURL=BatchResponseParser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchUtils.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBatchUtilsBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getBodyAsText", function () {
      return getBodyAsText;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "utf8ByteLength", function () {
      return utf8ByteLength;
    });
    /* harmony import */


    var _utils_utils_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./utils/utils.browser */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.browser.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function getBodyAsText(_x42) {
      return _getBodyAsText.apply(this, arguments);
    }

    function _getBodyAsText() {
      _getBodyAsText = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(batchResponse) {
        var blob;
        return regeneratorRuntime.wrap(function _callee28$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                _context31.next = 2;
                return batchResponse.blobBody;

              case 2:
                blob = _context31.sent;
                return _context31.abrupt("return", Object(_utils_utils_browser__WEBPACK_IMPORTED_MODULE_0__["blobToString"])(blob));

              case 4:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee28);
      }));
      return _getBodyAsText.apply(this, arguments);
    }

    function utf8ByteLength(str) {
      return new Blob([str]).size;
    } //# sourceMappingURL=BatchUtils.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatch.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobBatchJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobBatch", function () {
      return BlobBatch;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _Clients__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Clients */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Clients.js");
    /* harmony import */


    var _utils_Mutex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./utils/Mutex */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Mutex.js");
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A BlobBatch represents an aggregated set of operations on blobs.
     * Currently, only `delete` and `setAccessTier` are supported.
     */


    var BlobBatch = /*#__PURE__*/function () {
      function BlobBatch() {
        _classCallCheck(this, BlobBatch);

        this.batch = "batch";
        this.batchRequest = new InnerBatchRequest();
      }
      /**
       * Get the value of Content-Type for a batch request.
       * The value must be multipart/mixed with a batch boundary.
       * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252
       */


      _createClass(BlobBatch, [{
        key: "getMultiPartContentType",
        value: function getMultiPartContentType() {
          return this.batchRequest.getMultipartContentType();
        }
        /**
         * Get assembled HTTP request body for sub requests.
         */

      }, {
        key: "getHttpRequestBody",
        value: function getHttpRequestBody() {
          return this.batchRequest.getHttpRequestBody();
        }
        /**
         * Get sub requests that are added into the batch request.
         */

      }, {
        key: "getSubRequests",
        value: function getSubRequests() {
          return this.batchRequest.getSubRequests();
        }
      }, {
        key: "addSubRequestInternal",
        value: function () {
          var _addSubRequestInternal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(subRequest, assembleSubRequestFunc) {
            return regeneratorRuntime.wrap(function _callee29$(_context32) {
              while (1) {
                switch (_context32.prev = _context32.next) {
                  case 0:
                    _context32.next = 2;
                    return _utils_Mutex__WEBPACK_IMPORTED_MODULE_4__["Mutex"].lock(this.batch);

                  case 2:
                    _context32.prev = 2;
                    this.batchRequest.preAddSubRequest(subRequest);
                    _context32.next = 6;
                    return assembleSubRequestFunc();

                  case 6:
                    this.batchRequest.postAddSubRequest(subRequest);

                  case 7:
                    _context32.prev = 7;
                    _context32.next = 10;
                    return _utils_Mutex__WEBPACK_IMPORTED_MODULE_4__["Mutex"].unlock(this.batch);

                  case 10:
                    return _context32.finish(7);

                  case 11:
                  case "end":
                    return _context32.stop();
                }
              }
            }, _callee29, this, [[2,, 7, 11]]);
          }));

          function addSubRequestInternal(_x43, _x44) {
            return _addSubRequestInternal.apply(this, arguments);
          }

          return addSubRequestInternal;
        }()
      }, {
        key: "setBatchType",
        value: function setBatchType(batchType) {
          if (!this.batchType) {
            this.batchType = batchType;
          }

          if (this.batchType !== batchType) {
            throw new RangeError("BlobBatch only supports one operation type per batch and it already is being used for ".concat(this.batchType, " operations."));
          }
        }
      }, {
        key: "deleteBlob",
        value: function () {
          var _deleteBlob = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31(urlOrBlobClient, credentialOrOptions, options) {
            var _this35 = this;

            var url, credential, _Object, span, updatedOptions;

            return regeneratorRuntime.wrap(function _callee31$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    if (!(typeof urlOrBlobClient === "string" && (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrOptions instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_8__["StorageSharedKeyCredential"] || credentialOrOptions instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrOptions)))) {
                      _context34.next = 5;
                      break;
                    }

                    // First overload
                    url = urlOrBlobClient;
                    credential = credentialOrOptions;
                    _context34.next = 12;
                    break;

                  case 5:
                    if (!(urlOrBlobClient instanceof _Clients__WEBPACK_IMPORTED_MODULE_3__["BlobClient"])) {
                      _context34.next = 11;
                      break;
                    }

                    // Second overload
                    url = urlOrBlobClient.url;
                    credential = urlOrBlobClient.credential;
                    options = credentialOrOptions;
                    _context34.next = 12;
                    break;

                  case 11:
                    throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");

                  case 12:
                    if (!options) {
                      options = {};
                    }

                    _Object = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_9__["createSpan"])("BatchDeleteRequest-addSubRequest", options), span = _Object.span, updatedOptions = _Object.updatedOptions;
                    _context34.prev = 14;
                    this.setBatchType("delete");
                    _context34.next = 18;
                    return this.addSubRequestInternal({
                      url: url,
                      credential: credential
                    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
                      return regeneratorRuntime.wrap(function _callee30$(_context33) {
                        while (1) {
                          switch (_context33.prev = _context33.next) {
                            case 0:
                              _context33.next = 2;
                              return new _Clients__WEBPACK_IMPORTED_MODULE_3__["BlobClient"](url, _this35.batchRequest.createPipeline(credential))["delete"](updatedOptions);

                            case 2:
                            case "end":
                              return _context33.stop();
                          }
                        }
                      }, _callee30);
                    })));

                  case 18:
                    _context34.next = 24;
                    break;

                  case 20:
                    _context34.prev = 20;
                    _context34.t0 = _context34["catch"](14);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context34.t0.message
                    });
                    throw _context34.t0;

                  case 24:
                    _context34.prev = 24;
                    span.end();
                    return _context34.finish(24);

                  case 27:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee31, this, [[14, 20, 24, 27]]);
          }));

          function deleteBlob(_x45, _x46, _x47) {
            return _deleteBlob.apply(this, arguments);
          }

          return deleteBlob;
        }()
      }, {
        key: "setBlobAccessTier",
        value: function () {
          var _setBlobAccessTier = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33(urlOrBlobClient, credentialOrTier, tierOrOptions, options) {
            var _this36 = this;

            var url, credential, tier, _Object2, span, updatedOptions;

            return regeneratorRuntime.wrap(function _callee33$(_context36) {
              while (1) {
                switch (_context36.prev = _context36.next) {
                  case 0:
                    if (!(typeof urlOrBlobClient === "string" && (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrTier instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_8__["StorageSharedKeyCredential"] || credentialOrTier instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrTier)))) {
                      _context36.next = 6;
                      break;
                    }

                    // First overload
                    url = urlOrBlobClient;
                    credential = credentialOrTier;
                    tier = tierOrOptions;
                    _context36.next = 14;
                    break;

                  case 6:
                    if (!(urlOrBlobClient instanceof _Clients__WEBPACK_IMPORTED_MODULE_3__["BlobClient"])) {
                      _context36.next = 13;
                      break;
                    }

                    // Second overload
                    url = urlOrBlobClient.url;
                    credential = urlOrBlobClient.credential;
                    tier = credentialOrTier;
                    options = tierOrOptions;
                    _context36.next = 14;
                    break;

                  case 13:
                    throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");

                  case 14:
                    if (!options) {
                      options = {};
                    }

                    _Object2 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_9__["createSpan"])("BatchSetTierRequest-addSubRequest", options), span = _Object2.span, updatedOptions = _Object2.updatedOptions;
                    _context36.prev = 16;
                    this.setBatchType("setAccessTier");
                    _context36.next = 20;
                    return this.addSubRequestInternal({
                      url: url,
                      credential: credential
                    }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {
                      return regeneratorRuntime.wrap(function _callee32$(_context35) {
                        while (1) {
                          switch (_context35.prev = _context35.next) {
                            case 0:
                              _context35.next = 2;
                              return new _Clients__WEBPACK_IMPORTED_MODULE_3__["BlobClient"](url, _this36.batchRequest.createPipeline(credential)).setAccessTier(tier, updatedOptions);

                            case 2:
                            case "end":
                              return _context35.stop();
                          }
                        }
                      }, _callee32);
                    })));

                  case 20:
                    _context36.next = 26;
                    break;

                  case 22:
                    _context36.prev = 22;
                    _context36.t0 = _context36["catch"](16);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context36.t0.message
                    });
                    throw _context36.t0;

                  case 26:
                    _context36.prev = 26;
                    span.end();
                    return _context36.finish(26);

                  case 29:
                  case "end":
                    return _context36.stop();
                }
              }
            }, _callee33, this, [[16, 22, 26, 29]]);
          }));

          function setBlobAccessTier(_x48, _x49, _x50, _x51) {
            return _setBlobAccessTier.apply(this, arguments);
          }

          return setBlobAccessTier;
        }()
      }]);

      return BlobBatch;
    }();
    /**
     * Inner batch request class which is responsible for assembling and serializing sub requests.
     * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.
     */


    var InnerBatchRequest = /*#__PURE__*/function () {
      function InnerBatchRequest() {
        _classCallCheck(this, InnerBatchRequest);

        this.operationCount = 0;
        this.body = "";
        var tempGuid = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["generateUuid"])(); // batch_{batchid}

        this.boundary = "batch_".concat(tempGuid); // --batch_{batchid}
        // Content-Type: application/http
        // Content-Transfer-Encoding: binary

        this.subRequestPrefix = "--".concat(this.boundary).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HeaderConstants"].CONTENT_TYPE, ": application/http").concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HeaderConstants"].CONTENT_TRANSFER_ENCODING, ": binary"); // multipart/mixed; boundary=batch_{batchid}

        this.multipartContentType = "multipart/mixed; boundary=".concat(this.boundary); // --batch_{batchid}--

        this.batchRequestEnding = "--".concat(this.boundary, "--");
        this.subRequests = new Map();
      }
      /**
       * Create pipeline to assemble sub requests. The idea here is to use existing
       * credential and serialization/deserialization components, with additional policies to
       * filter unnecessary headers, assemble sub requests into request's body
       * and intercept request from going to wire.
       * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.
       */


      _createClass(InnerBatchRequest, [{
        key: "createPipeline",
        value: function createPipeline(credential) {
          var isAnonymousCreds = credential instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__["AnonymousCredential"];
          var policyFactoryLength = 3 + (isAnonymousCreds ? 0 : 1); // [deserializationPolicy, BatchHeaderFilterPolicyFactory, (Optional)Credential, BatchRequestAssemblePolicyFactory]

          var factories = new Array(policyFactoryLength);
          factories[0] = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["deserializationPolicy"])(); // Default deserializationPolicy is provided by protocol layer

          factories[1] = new BatchHeaderFilterPolicyFactory(); // Use batch header filter policy to exclude unnecessary headers

          if (!isAnonymousCreds) {
            factories[2] = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credential) ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["attachCredential"])(Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["bearerTokenAuthenticationPolicy"])(credential, _utils_constants__WEBPACK_IMPORTED_MODULE_7__["StorageOAuthScopes"]), credential) : credential;
          }

          factories[policyFactoryLength - 1] = new BatchRequestAssemblePolicyFactory(this); // Use batch assemble policy to assemble request and intercept request from going to wire

          return new _Pipeline__WEBPACK_IMPORTED_MODULE_5__["Pipeline"](factories, {});
        }
      }, {
        key: "appendSubRequestToBody",
        value: function appendSubRequestToBody(request) {
          // Start to assemble sub request
          this.body += [this.subRequestPrefix, "".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HeaderConstants"].CONTENT_ID, ": ").concat(this.operationCount), "", "".concat(request.method.toString(), " ").concat(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["getURLPathAndQuery"])(request.url), " ").concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_VERSION_1_1"]).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]) // sub request start line with method
          ].join(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]);

          var _iterator20 = _createForOfIteratorHelper(request.headers.headersArray()),
              _step20;

          try {
            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
              var header = _step20.value;
              this.body += "".concat(header.name, ": ").concat(header.value).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]);
            }
          } catch (err) {
            _iterator20.e(err);
          } finally {
            _iterator20.f();
          }

          this.body += _utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]; // sub request's headers need be ending with an empty line
          // No body to assemble for current batch request support
          // End to assemble sub request
        }
      }, {
        key: "preAddSubRequest",
        value: function preAddSubRequest(subRequest) {
          if (this.operationCount >= _utils_constants__WEBPACK_IMPORTED_MODULE_7__["BATCH_MAX_REQUEST"]) {
            throw new RangeError("Cannot exceed ".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["BATCH_MAX_REQUEST"], " sub requests in a single batch"));
          } // Fast fail if url for sub request is invalid


          var path = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["getURLPath"])(subRequest.url);

          if (!path || path === "") {
            throw new RangeError("Invalid url for sub request: '".concat(subRequest.url, "'"));
          }
        }
      }, {
        key: "postAddSubRequest",
        value: function postAddSubRequest(subRequest) {
          this.subRequests.set(this.operationCount, subRequest);
          this.operationCount++;
        } // Return the http request body with assembling the ending line to the sub request body.

      }, {
        key: "getHttpRequestBody",
        value: function getHttpRequestBody() {
          return "".concat(this.body).concat(this.batchRequestEnding).concat(_utils_constants__WEBPACK_IMPORTED_MODULE_7__["HTTP_LINE_ENDING"]);
        }
      }, {
        key: "getMultipartContentType",
        value: function getMultipartContentType() {
          return this.multipartContentType;
        }
      }, {
        key: "getSubRequests",
        value: function getSubRequests() {
          return this.subRequests;
        }
      }]);

      return InnerBatchRequest;
    }();

    var BatchRequestAssemblePolicy = /*#__PURE__*/function (_azure_core_http__WEB) {
      _inherits(BatchRequestAssemblePolicy, _azure_core_http__WEB);

      var _super24 = _createSuper(BatchRequestAssemblePolicy);

      function BatchRequestAssemblePolicy(batchRequest, nextPolicy, options) {
        var _this37;

        _classCallCheck(this, BatchRequestAssemblePolicy);

        _this37 = _super24.call(this, nextPolicy, options);
        _this37.dummyResponse = {
          request: new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["WebResource"](),
          status: 200,
          headers: new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]()
        };
        _this37.batchRequest = batchRequest;
        return _this37;
      }

      _createClass(BatchRequestAssemblePolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34(request) {
            return regeneratorRuntime.wrap(function _callee34$(_context37) {
              while (1) {
                switch (_context37.prev = _context37.next) {
                  case 0:
                    _context37.next = 2;
                    return this.batchRequest.appendSubRequestToBody(request);

                  case 2:
                    return _context37.abrupt("return", this.dummyResponse);

                  case 3:
                  case "end":
                    return _context37.stop();
                }
              }
            }, _callee34, this);
          }));

          function sendRequest(_x52) {
            return _sendRequest8.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return BatchRequestAssemblePolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]);

    var BatchRequestAssemblePolicyFactory = /*#__PURE__*/function () {
      function BatchRequestAssemblePolicyFactory(batchRequest) {
        _classCallCheck(this, BatchRequestAssemblePolicyFactory);

        this.batchRequest = batchRequest;
      }

      _createClass(BatchRequestAssemblePolicyFactory, [{
        key: "create",
        value: function create(nextPolicy, options) {
          return new BatchRequestAssemblePolicy(this.batchRequest, nextPolicy, options);
        }
      }]);

      return BatchRequestAssemblePolicyFactory;
    }();

    var BatchHeaderFilterPolicy = /*#__PURE__*/function (_azure_core_http__WEB2) {
      _inherits(BatchHeaderFilterPolicy, _azure_core_http__WEB2);

      var _super25 = _createSuper(BatchHeaderFilterPolicy);

      // The base class has a protected constructor. Adding a public one to enable constructing of this class.

      /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/
      function BatchHeaderFilterPolicy(nextPolicy, options) {
        _classCallCheck(this, BatchHeaderFilterPolicy);

        return _super25.call(this, nextPolicy, options);
      }

      _createClass(BatchHeaderFilterPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35(request) {
            var xMsHeaderName, _iterator21, _step21, header;

            return regeneratorRuntime.wrap(function _callee35$(_context38) {
              while (1) {
                switch (_context38.prev = _context38.next) {
                  case 0:
                    xMsHeaderName = "";
                    _iterator21 = _createForOfIteratorHelper(request.headers.headersArray());

                    try {
                      for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
                        header = _step21.value;

                        if (Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["iEqual"])(header.name, _utils_constants__WEBPACK_IMPORTED_MODULE_7__["HeaderConstants"].X_MS_VERSION)) {
                          xMsHeaderName = header.name;
                        }
                      }
                    } catch (err) {
                      _iterator21.e(err);
                    } finally {
                      _iterator21.f();
                    }

                    if (xMsHeaderName !== "") {
                      request.headers.remove(xMsHeaderName); // The subrequests should not have the x-ms-version header.
                    }

                    return _context38.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 5:
                  case "end":
                    return _context38.stop();
                }
              }
            }, _callee35, this);
          }));

          function sendRequest(_x53) {
            return _sendRequest9.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return BatchHeaderFilterPolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]);

    var BatchHeaderFilterPolicyFactory = /*#__PURE__*/function () {
      function BatchHeaderFilterPolicyFactory() {
        _classCallCheck(this, BatchHeaderFilterPolicyFactory);
      }

      _createClass(BatchHeaderFilterPolicyFactory, [{
        key: "create",
        value: function create(nextPolicy, options) {
          return new BatchHeaderFilterPolicy(nextPolicy, options);
        }
      }]);

      return BatchHeaderFilterPolicyFactory;
    }(); //# sourceMappingURL=BlobBatch.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatchClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobBatchClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobBatchClient", function () {
      return BlobBatchClient;
    });
    /* harmony import */


    var _BatchResponseParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./BatchResponseParser */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponseParser.js");
    /* harmony import */


    var _BatchUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./BatchUtils */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchUtils.browser.js");
    /* harmony import */


    var _BlobBatch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./BlobBatch */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatch.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js");
    /* harmony import */


    var _generated_src_operations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./generated/src/operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _generated_src_storageClientContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./generated/src/storageClientContext */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js");
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.
     *
     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch
     */


    var BlobBatchClient = /*#__PURE__*/function () {
      function BlobBatchClient(url, credentialOrPipeline, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        _classCallCheck(this, BlobBatchClient);

        var pipeline;

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_8__["isPipelineLike"])(credentialOrPipeline)) {
          pipeline = credentialOrPipeline;
        } else if (!credentialOrPipeline) {
          // no credential provided
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_8__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_6__["AnonymousCredential"](), options);
        } else {
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_8__["newPipeline"])(credentialOrPipeline, options);
        }

        var storageClientContext = new _generated_src_storageClientContext__WEBPACK_IMPORTED_MODULE_7__["StorageClientContext"](url, pipeline.toServiceClientOptions());
        var path = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["getURLPath"])(url);

        if (path && path !== "/") {
          // Container scoped.
          this.serviceOrContainerContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_5__["Container"](storageClientContext);
        } else {
          this.serviceOrContainerContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_5__["Service"](storageClientContext);
        }
      }
      /**
       * Creates a {@link BlobBatch}.
       * A BlobBatch represents an aggregated set of operations on blobs.
       */


      _createClass(BlobBatchClient, [{
        key: "createBatch",
        value: function createBatch() {
          return new _BlobBatch__WEBPACK_IMPORTED_MODULE_2__["BlobBatch"]();
        }
      }, {
        key: "deleteBlobs",
        value: function () {
          var _deleteBlobs = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36(urlsOrBlobClients, credentialOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

          /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
          options) {
            var batch, _iterator22, _step22, urlOrBlobClient;

            return regeneratorRuntime.wrap(function _callee36$(_context39) {
              while (1) {
                switch (_context39.prev = _context39.next) {
                  case 0:
                    batch = new _BlobBatch__WEBPACK_IMPORTED_MODULE_2__["BlobBatch"]();
                    _iterator22 = _createForOfIteratorHelper(urlsOrBlobClients);
                    _context39.prev = 2;

                    _iterator22.s();

                  case 4:
                    if ((_step22 = _iterator22.n()).done) {
                      _context39.next = 15;
                      break;
                    }

                    urlOrBlobClient = _step22.value;

                    if (!(typeof urlOrBlobClient === "string")) {
                      _context39.next = 11;
                      break;
                    }

                    _context39.next = 9;
                    return batch.deleteBlob(urlOrBlobClient, credentialOrOptions, options);

                  case 9:
                    _context39.next = 13;
                    break;

                  case 11:
                    _context39.next = 13;
                    return batch.deleteBlob(urlOrBlobClient, credentialOrOptions);

                  case 13:
                    _context39.next = 4;
                    break;

                  case 15:
                    _context39.next = 20;
                    break;

                  case 17:
                    _context39.prev = 17;
                    _context39.t0 = _context39["catch"](2);

                    _iterator22.e(_context39.t0);

                  case 20:
                    _context39.prev = 20;

                    _iterator22.f();

                    return _context39.finish(20);

                  case 23:
                    return _context39.abrupt("return", this.submitBatch(batch));

                  case 24:
                  case "end":
                    return _context39.stop();
                }
              }
            }, _callee36, this, [[2, 17, 20, 23]]);
          }));

          function deleteBlobs(_x54, _x55, _x56) {
            return _deleteBlobs.apply(this, arguments);
          }

          return deleteBlobs;
        }()
      }, {
        key: "setBlobsAccessTier",
        value: function () {
          var _setBlobsAccessTier = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37(urlsOrBlobClients, credentialOrTier, tierOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

          /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
          options) {
            var batch, _iterator23, _step23, urlOrBlobClient;

            return regeneratorRuntime.wrap(function _callee37$(_context40) {
              while (1) {
                switch (_context40.prev = _context40.next) {
                  case 0:
                    batch = new _BlobBatch__WEBPACK_IMPORTED_MODULE_2__["BlobBatch"]();
                    _iterator23 = _createForOfIteratorHelper(urlsOrBlobClients);
                    _context40.prev = 2;

                    _iterator23.s();

                  case 4:
                    if ((_step23 = _iterator23.n()).done) {
                      _context40.next = 15;
                      break;
                    }

                    urlOrBlobClient = _step23.value;

                    if (!(typeof urlOrBlobClient === "string")) {
                      _context40.next = 11;
                      break;
                    }

                    _context40.next = 9;
                    return batch.setBlobAccessTier(urlOrBlobClient, credentialOrTier, tierOrOptions, options);

                  case 9:
                    _context40.next = 13;
                    break;

                  case 11:
                    _context40.next = 13;
                    return batch.setBlobAccessTier(urlOrBlobClient, credentialOrTier, tierOrOptions);

                  case 13:
                    _context40.next = 4;
                    break;

                  case 15:
                    _context40.next = 20;
                    break;

                  case 17:
                    _context40.prev = 17;
                    _context40.t0 = _context40["catch"](2);

                    _iterator23.e(_context40.t0);

                  case 20:
                    _context40.prev = 20;

                    _iterator23.f();

                    return _context40.finish(20);

                  case 23:
                    return _context40.abrupt("return", this.submitBatch(batch));

                  case 24:
                  case "end":
                    return _context40.stop();
                }
              }
            }, _callee37, this, [[2, 17, 20, 23]]);
          }));

          function setBlobsAccessTier(_x57, _x58, _x59, _x60) {
            return _setBlobsAccessTier.apply(this, arguments);
          }

          return setBlobsAccessTier;
        }()
        /**
         * Submit batch request which consists of multiple subrequests.
         *
         * Get `blobBatchClient` and other details before running the snippets.
         * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`
         *
         * Example usage:
         *
         * ```js
         * let batchRequest = new BlobBatch();
         * await batchRequest.deleteBlob(urlInString0, credential0);
         * await batchRequest.deleteBlob(urlInString1, credential1, {
         *  deleteSnapshots: "include"
         * });
         * const batchResp = await blobBatchClient.submitBatch(batchRequest);
         * console.log(batchResp.subResponsesSucceededCount);
         * ```
         *
         * Example using a lease:
         *
         * ```js
         * let batchRequest = new BlobBatch();
         * await batchRequest.setBlobAccessTier(blockBlobClient0, "Cool");
         * await batchRequest.setBlobAccessTier(blockBlobClient1, "Cool", {
         *  conditions: { leaseId: leaseId }
         * });
         * const batchResp = await blobBatchClient.submitBatch(batchRequest);
         * console.log(batchResp.subResponsesSucceededCount);
         * ```
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch
         *
         * @param batchRequest - A set of Delete or SetTier operations.
         * @param options -
         */

      }, {
        key: "submitBatch",
        value: function () {
          var _submitBatch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38(batchRequest) {
            var options,
                _Object3,
                span,
                updatedOptions,
                batchRequestBody,
                rawBatchResponse,
                batchResponseParser,
                responseSummary,
                res,
                _args40 = arguments;

            return regeneratorRuntime.wrap(function _callee38$(_context41) {
              while (1) {
                switch (_context41.prev = _context41.next) {
                  case 0:
                    options = _args40.length > 1 && _args40[1] !== undefined ? _args40[1] : {};

                    if (!(!batchRequest || batchRequest.getSubRequests().size === 0)) {
                      _context41.next = 3;
                      break;
                    }

                    throw new RangeError("Batch request should contain one or more sub requests.");

                  case 3:
                    _Object3 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_4__["createSpan"])("BlobBatchClient-submitBatch", options), span = _Object3.span, updatedOptions = _Object3.updatedOptions;
                    _context41.prev = 4;
                    batchRequestBody = batchRequest.getHttpRequestBody(); // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.

                    _context41.next = 8;
                    return this.serviceOrContainerContext.submitBatch(Object(_BatchUtils__WEBPACK_IMPORTED_MODULE_1__["utf8ByteLength"])(batchRequestBody), batchRequest.getMultiPartContentType(), batchRequestBody, Object.assign(Object.assign({}, options), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_4__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    rawBatchResponse = _context41.sent;
                    // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).
                    batchResponseParser = new _BatchResponseParser__WEBPACK_IMPORTED_MODULE_0__["BatchResponseParser"](rawBatchResponse, batchRequest.getSubRequests());
                    _context41.next = 12;
                    return batchResponseParser.parseBatchResponse();

                  case 12:
                    responseSummary = _context41.sent;
                    res = {
                      _response: rawBatchResponse._response,
                      contentType: rawBatchResponse.contentType,
                      errorCode: rawBatchResponse.errorCode,
                      requestId: rawBatchResponse.requestId,
                      clientRequestId: rawBatchResponse.clientRequestId,
                      version: rawBatchResponse.version,
                      subResponses: responseSummary.subResponses,
                      subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,
                      subResponsesFailedCount: responseSummary.subResponsesFailedCount
                    };
                    return _context41.abrupt("return", res);

                  case 17:
                    _context41.prev = 17;
                    _context41.t0 = _context41["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_3__["SpanStatusCode"].ERROR,
                      message: _context41.t0.message
                    });
                    throw _context41.t0;

                  case 21:
                    _context41.prev = 21;
                    span.end();
                    return _context41.finish(21);

                  case 24:
                  case "end":
                    return _context41.stop();
                }
              }
            }, _callee38, this, [[4, 17, 21, 24]]);
          }));

          function submitBatch(_x61) {
            return _submitBatch.apply(this, arguments);
          }

          return submitBatch;
        }()
      }]);

      return BlobBatchClient;
    }(); //# sourceMappingURL=BlobBatchClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobDownloadResponse.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobDownloadResponseBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDownloadResponse", function () {
      return BlobDownloadResponse;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // This file is used as a shim of "BlobDownloadResponse" for some browser bundlers
    // when trying to bundle "BlobDownloadResponse"
    // "BlobDownloadResponse" class is only available in Node.js runtime


    var BlobDownloadResponse = 1; //# sourceMappingURL=BlobDownloadResponse.browser.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobLeaseClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobLeaseClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobLeaseClient", function () {
      return BlobLeaseClient;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _generated_src_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./generated/src/index */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/index.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./generated/src/operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.
     */


    var BlobLeaseClient = /*#__PURE__*/function () {
      /**
       * Creates an instance of BlobLeaseClient.
       * @param client - The client to make the lease operation requests.
       * @param leaseId - Initial proposed lease id.
       */
      function BlobLeaseClient(client, leaseId) {
        _classCallCheck(this, BlobLeaseClient);

        var clientContext = new _generated_src_index__WEBPACK_IMPORTED_MODULE_1__["StorageClientContext"](client.url, client.pipeline.toServiceClientOptions());
        this._url = client.url;

        if (client.name === undefined) {
          this._isContainer = true;
          this._containerOrBlobOperation = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__["Container"](clientContext);
        } else {
          this._isContainer = false;
          this._containerOrBlobOperation = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__["Blob"](clientContext);
        }

        if (!leaseId) {
          leaseId = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["generateUuid"])();
        }

        this._leaseId = leaseId;
      }
      /**
       * Gets the lease Id.
       *
       * @readonly
       */


      _createClass(BlobLeaseClient, [{
        key: "leaseId",
        get: function get() {
          return this._leaseId;
        }
        /**
         * Gets the url.
         *
         * @readonly
         */

      }, {
        key: "url",
        get: function get() {
          return this._url;
        }
        /**
         * Establishes and manages a lock on a container for delete operations, or on a blob
         * for write and delete operations.
         * The lock duration can be 15 to 60 seconds, or can be infinite.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container
         * and
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob
         *
         * @param duration - Must be between 15 to 60 seconds, or infinite (-1)
         * @param options - option to configure lease management operations.
         * @returns Response data for acquire lease operation.
         */

      }, {
        key: "acquireLease",
        value: function () {
          var _acquireLease = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39(duration) {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _f,
                _Object4,
                span,
                updatedOptions,
                _args41 = arguments;

            return regeneratorRuntime.wrap(function _callee39$(_context42) {
              while (1) {
                switch (_context42.prev = _context42.next) {
                  case 0:
                    options = _args41.length > 1 && _args41[1] !== undefined ? _args41[1] : {};
                    _Object4 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["createSpan"])("BlobLeaseClient-acquireLease", options), span = _Object4.span, updatedOptions = _Object4.updatedOptions;

                    if (!(this._isContainer && (((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions)))) {
                      _context42.next = 4;
                      break;
                    }

                    throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");

                  case 4:
                    _context42.prev = 4;
                    _context42.next = 7;
                    return this._containerOrBlobOperation.acquireLease(Object.assign({
                      abortSignal: options.abortSignal,
                      duration: duration,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions
                      }),
                      proposedLeaseId: this._leaseId
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context42.abrupt("return", _context42.sent);

                  case 10:
                    _context42.prev = 10;
                    _context42.t0 = _context42["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context42.t0.message
                    });
                    throw _context42.t0;

                  case 14:
                    _context42.prev = 14;
                    span.end();
                    return _context42.finish(14);

                  case 17:
                  case "end":
                    return _context42.stop();
                }
              }
            }, _callee39, this, [[4, 10, 14, 17]]);
          }));

          function acquireLease(_x62) {
            return _acquireLease.apply(this, arguments);
          }

          return acquireLease;
        }()
        /**
         * To change the ID of the lease.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container
         * and
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob
         *
         * @param proposedLeaseId - the proposed new lease Id.
         * @param options - option to configure lease management operations.
         * @returns Response data for change lease operation.
         */

      }, {
        key: "changeLease",
        value: function () {
          var _changeLease = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40(proposedLeaseId) {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _f,
                _Object5,
                span,
                updatedOptions,
                response,
                _args42 = arguments;

            return regeneratorRuntime.wrap(function _callee40$(_context43) {
              while (1) {
                switch (_context43.prev = _context43.next) {
                  case 0:
                    options = _args42.length > 1 && _args42[1] !== undefined ? _args42[1] : {};
                    _Object5 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["createSpan"])("BlobLeaseClient-changeLease", options), span = _Object5.span, updatedOptions = _Object5.updatedOptions;

                    if (!(this._isContainer && (((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions)))) {
                      _context43.next = 4;
                      break;
                    }

                    throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");

                  case 4:
                    _context43.prev = 4;
                    _context43.next = 7;
                    return this._containerOrBlobOperation.changeLease(this._leaseId, proposedLeaseId, Object.assign({
                      abortSignal: options.abortSignal,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    response = _context43.sent;
                    this._leaseId = proposedLeaseId;
                    return _context43.abrupt("return", response);

                  case 12:
                    _context43.prev = 12;
                    _context43.t0 = _context43["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context43.t0.message
                    });
                    throw _context43.t0;

                  case 16:
                    _context43.prev = 16;
                    span.end();
                    return _context43.finish(16);

                  case 19:
                  case "end":
                    return _context43.stop();
                }
              }
            }, _callee40, this, [[4, 12, 16, 19]]);
          }));

          function changeLease(_x63) {
            return _changeLease.apply(this, arguments);
          }

          return changeLease;
        }()
        /**
         * To free the lease if it is no longer needed so that another client may
         * immediately acquire a lease against the container or the blob.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container
         * and
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob
         *
         * @param options - option to configure lease management operations.
         * @returns Response data for release lease operation.
         */

      }, {
        key: "releaseLease",
        value: function () {
          var _releaseLease = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _f,
                _Object6,
                span,
                updatedOptions,
                _args43 = arguments;

            return regeneratorRuntime.wrap(function _callee41$(_context44) {
              while (1) {
                switch (_context44.prev = _context44.next) {
                  case 0:
                    options = _args43.length > 0 && _args43[0] !== undefined ? _args43[0] : {};
                    _Object6 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["createSpan"])("BlobLeaseClient-releaseLease", options), span = _Object6.span, updatedOptions = _Object6.updatedOptions;

                    if (!(this._isContainer && (((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions)))) {
                      _context44.next = 4;
                      break;
                    }

                    throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");

                  case 4:
                    _context44.prev = 4;
                    _context44.next = 7;
                    return this._containerOrBlobOperation.releaseLease(this._leaseId, Object.assign({
                      abortSignal: options.abortSignal,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context44.abrupt("return", _context44.sent);

                  case 10:
                    _context44.prev = 10;
                    _context44.t0 = _context44["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context44.t0.message
                    });
                    throw _context44.t0;

                  case 14:
                    _context44.prev = 14;
                    span.end();
                    return _context44.finish(14);

                  case 17:
                  case "end":
                    return _context44.stop();
                }
              }
            }, _callee41, this, [[4, 10, 14, 17]]);
          }));

          function releaseLease() {
            return _releaseLease.apply(this, arguments);
          }

          return releaseLease;
        }()
        /**
         * To renew the lease.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container
         * and
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob
         *
         * @param options - Optional option to configure lease management operations.
         * @returns Response data for renew lease operation.
         */

      }, {
        key: "renewLease",
        value: function () {
          var _renewLease = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _f,
                _Object7,
                span,
                updatedOptions,
                _args44 = arguments;

            return regeneratorRuntime.wrap(function _callee42$(_context45) {
              while (1) {
                switch (_context45.prev = _context45.next) {
                  case 0:
                    options = _args44.length > 0 && _args44[0] !== undefined ? _args44[0] : {};
                    _Object7 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["createSpan"])("BlobLeaseClient-renewLease", options), span = _Object7.span, updatedOptions = _Object7.updatedOptions;

                    if (!(this._isContainer && (((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions)))) {
                      _context45.next = 4;
                      break;
                    }

                    throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");

                  case 4:
                    _context45.prev = 4;
                    _context45.next = 7;
                    return this._containerOrBlobOperation.renewLease(this._leaseId, Object.assign({
                      abortSignal: options.abortSignal,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context45.abrupt("return", _context45.sent);

                  case 10:
                    _context45.prev = 10;
                    _context45.t0 = _context45["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context45.t0.message
                    });
                    throw _context45.t0;

                  case 14:
                    _context45.prev = 14;
                    span.end();
                    return _context45.finish(14);

                  case 17:
                  case "end":
                    return _context45.stop();
                }
              }
            }, _callee42, this, [[4, 10, 14, 17]]);
          }));

          function renewLease() {
            return _renewLease.apply(this, arguments);
          }

          return renewLease;
        }()
        /**
         * To end the lease but ensure that another client cannot acquire a new lease
         * until the current lease period has expired.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container
         * and
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob
         *
         * @param breakPeriod - Break period
         * @param options - Optional options to configure lease management operations.
         * @returns Response data for break lease operation.
         */

      }, {
        key: "breakLease",
        value: function () {
          var _breakLease = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43(breakPeriod) {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _f,
                _Object8,
                span,
                updatedOptions,
                operationOptions,
                _args45 = arguments;

            return regeneratorRuntime.wrap(function _callee43$(_context46) {
              while (1) {
                switch (_context46.prev = _context46.next) {
                  case 0:
                    options = _args45.length > 1 && _args45[1] !== undefined ? _args45[1] : {};
                    _Object8 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["createSpan"])("BlobLeaseClient-breakLease", options), span = _Object8.span, updatedOptions = _Object8.updatedOptions;

                    if (!(this._isContainer && (((_a = options.conditions) === null || _a === void 0 ? void 0 : _a.ifMatch) && ((_b = options.conditions) === null || _b === void 0 ? void 0 : _b.ifMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_c = options.conditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch) && ((_d = options.conditions) === null || _d === void 0 ? void 0 : _d.ifNoneMatch) !== _utils_constants__WEBPACK_IMPORTED_MODULE_4__["ETagNone"] || ((_e = options.conditions) === null || _e === void 0 ? void 0 : _e.tagConditions)))) {
                      _context46.next = 4;
                      break;
                    }

                    throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");

                  case 4:
                    _context46.prev = 4;
                    operationOptions = Object.assign({
                      abortSignal: options.abortSignal,
                      breakPeriod: breakPeriod,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_f = options.conditions) === null || _f === void 0 ? void 0 : _f.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_5__["convertTracingToRequestOptionsBase"])(updatedOptions));
                    _context46.next = 8;
                    return this._containerOrBlobOperation.breakLease(operationOptions);

                  case 8:
                    return _context46.abrupt("return", _context46.sent);

                  case 11:
                    _context46.prev = 11;
                    _context46.t0 = _context46["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context46.t0.message
                    });
                    throw _context46.t0;

                  case 15:
                    _context46.prev = 15;
                    span.end();
                    return _context46.finish(15);

                  case 18:
                  case "end":
                    return _context46.stop();
                }
              }
            }, _callee43, this, [[4, 11, 15, 18]]);
          }));

          function breakLease(_x64) {
            return _breakLease.apply(this, arguments);
          }

          return breakLease;
        }()
      }]);

      return BlobLeaseClient;
    }(); //# sourceMappingURL=BlobLeaseClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobQueryResponse.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobQueryResponseBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobQueryResponse", function () {
      return BlobQueryResponse;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN BROWSER RUNTIME.
     *
     * BlobQueryResponse implements BlobDownloadResponseModel interface, and in browser runtime it will
     * parse avor data returned by blob query.
     */


    var BlobQueryResponse = /*#__PURE__*/function () {
      /**
       * Creates an instance of BlobQueryResponse.
       *
       * @param originalResponse -
       * @param options -
       */
      function BlobQueryResponse(originalResponse) {
        var _options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, BlobQueryResponse);

        this.originalResponse = originalResponse;
      }
      /**
       * Indicates that the service supports
       * requests for partial file content.
       *
       * @readonly
       */


      _createClass(BlobQueryResponse, [{
        key: "acceptRanges",
        get: function get() {
          return this.originalResponse.acceptRanges;
        }
        /**
         * Returns if it was previously specified
         * for the file.
         *
         * @readonly
         */

      }, {
        key: "cacheControl",
        get: function get() {
          return this.originalResponse.cacheControl;
        }
        /**
         * Returns the value that was specified
         * for the 'x-ms-content-disposition' header and specifies how to process the
         * response.
         *
         * @readonly
         */

      }, {
        key: "contentDisposition",
        get: function get() {
          return this.originalResponse.contentDisposition;
        }
        /**
         * Returns the value that was specified
         * for the Content-Encoding request header.
         *
         * @readonly
         */

      }, {
        key: "contentEncoding",
        get: function get() {
          return this.originalResponse.contentEncoding;
        }
        /**
         * Returns the value that was specified
         * for the Content-Language request header.
         *
         * @readonly
         */

      }, {
        key: "contentLanguage",
        get: function get() {
          return this.originalResponse.contentLanguage;
        }
        /**
         * The current sequence number for a
         * page blob. This header is not returned for block blobs or append blobs.
         *
         * @readonly
         */

      }, {
        key: "blobSequenceNumber",
        get: function get() {
          return this.originalResponse.blobSequenceNumber;
        }
        /**
         * The blob's type. Possible values include:
         * 'BlockBlob', 'PageBlob', 'AppendBlob'.
         *
         * @readonly
         */

      }, {
        key: "blobType",
        get: function get() {
          return this.originalResponse.blobType;
        }
        /**
         * The number of bytes present in the
         * response body.
         *
         * @readonly
         */

      }, {
        key: "contentLength",
        get: function get() {
          return this.originalResponse.contentLength;
        }
        /**
         * If the file has an MD5 hash and the
         * request is to read the full file, this response header is returned so that
         * the client can check for message content integrity. If the request is to
         * read a specified range and the 'x-ms-range-get-content-md5' is set to
         * true, then the request returns an MD5 hash for the range, as long as the
         * range size is less than or equal to 4 MB. If neither of these sets of
         * conditions is true, then no value is returned for the 'Content-MD5'
         * header.
         *
         * @readonly
         */

      }, {
        key: "contentMD5",
        get: function get() {
          return this.originalResponse.contentMD5;
        }
        /**
         * Indicates the range of bytes returned if
         * the client requested a subset of the file by setting the Range request
         * header.
         *
         * @readonly
         */

      }, {
        key: "contentRange",
        get: function get() {
          return this.originalResponse.contentRange;
        }
        /**
         * The content type specified for the file.
         * The default content type is 'application/octet-stream'
         *
         * @readonly
         */

      }, {
        key: "contentType",
        get: function get() {
          return this.originalResponse.contentType;
        }
        /**
         * Conclusion time of the last attempted
         * Copy File operation where this file was the destination file. This value
         * can specify the time of a completed, aborted, or failed copy attempt.
         *
         * @readonly
         */

      }, {
        key: "copyCompletedOn",
        get: function get() {
          return undefined;
        }
        /**
         * String identifier for the last attempted Copy
         * File operation where this file was the destination file.
         *
         * @readonly
         */

      }, {
        key: "copyId",
        get: function get() {
          return this.originalResponse.copyId;
        }
        /**
         * Contains the number of bytes copied and
         * the total bytes in the source in the last attempted Copy File operation
         * where this file was the destination file. Can show between 0 and
         * Content-Length bytes copied.
         *
         * @readonly
         */

      }, {
        key: "copyProgress",
        get: function get() {
          return this.originalResponse.copyProgress;
        }
        /**
         * URL up to 2KB in length that specifies the
         * source file used in the last attempted Copy File operation where this file
         * was the destination file.
         *
         * @readonly
         */

      }, {
        key: "copySource",
        get: function get() {
          return this.originalResponse.copySource;
        }
        /**
         * State of the copy operation
         * identified by 'x-ms-copy-id'. Possible values include: 'pending',
         * 'success', 'aborted', 'failed'
         *
         * @readonly
         */

      }, {
        key: "copyStatus",
        get: function get() {
          return this.originalResponse.copyStatus;
        }
        /**
         * Only appears when
         * x-ms-copy-status is failed or pending. Describes cause of fatal or
         * non-fatal copy operation failure.
         *
         * @readonly
         */

      }, {
        key: "copyStatusDescription",
        get: function get() {
          return this.originalResponse.copyStatusDescription;
        }
        /**
         * When a blob is leased,
         * specifies whether the lease is of infinite or fixed duration. Possible
         * values include: 'infinite', 'fixed'.
         *
         * @readonly
         */

      }, {
        key: "leaseDuration",
        get: function get() {
          return this.originalResponse.leaseDuration;
        }
        /**
         * Lease state of the blob. Possible
         * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.
         *
         * @readonly
         */

      }, {
        key: "leaseState",
        get: function get() {
          return this.originalResponse.leaseState;
        }
        /**
         * The current lease status of the
         * blob. Possible values include: 'locked', 'unlocked'.
         *
         * @readonly
         */

      }, {
        key: "leaseStatus",
        get: function get() {
          return this.originalResponse.leaseStatus;
        }
        /**
         * A UTC date/time value generated by the service that
         * indicates the time at which the response was initiated.
         *
         * @readonly
         */

      }, {
        key: "date",
        get: function get() {
          return this.originalResponse.date;
        }
        /**
         * The number of committed blocks
         * present in the blob. This header is returned only for append blobs.
         *
         * @readonly
         */

      }, {
        key: "blobCommittedBlockCount",
        get: function get() {
          return this.originalResponse.blobCommittedBlockCount;
        }
        /**
         * The ETag contains a value that you can use to
         * perform operations conditionally, in quotes.
         *
         * @readonly
         */

      }, {
        key: "etag",
        get: function get() {
          return this.originalResponse.etag;
        }
        /**
         * The error code.
         *
         * @readonly
         */

      }, {
        key: "errorCode",
        get: function get() {
          return this.originalResponse.errorCode;
        }
        /**
         * The value of this header is set to
         * true if the file data and application metadata are completely encrypted
         * using the specified algorithm. Otherwise, the value is set to false (when
         * the file is unencrypted, or if only parts of the file/application metadata
         * are encrypted).
         *
         * @readonly
         */

      }, {
        key: "isServerEncrypted",
        get: function get() {
          return this.originalResponse.isServerEncrypted;
        }
        /**
         * If the blob has a MD5 hash, and if
         * request contains range header (Range or x-ms-range), this response header
         * is returned with the value of the whole blob's MD5 value. This value may
         * or may not be equal to the value returned in Content-MD5 header, with the
         * latter calculated from the requested range.
         *
         * @readonly
         */

      }, {
        key: "blobContentMD5",
        get: function get() {
          return this.originalResponse.blobContentMD5;
        }
        /**
         * Returns the date and time the file was last
         * modified. Any operation that modifies the file or its properties updates
         * the last modified time.
         *
         * @readonly
         */

      }, {
        key: "lastModified",
        get: function get() {
          return this.originalResponse.lastModified;
        }
        /**
         * A name-value pair
         * to associate with a file storage object.
         *
         * @readonly
         */

      }, {
        key: "metadata",
        get: function get() {
          return this.originalResponse.metadata;
        }
        /**
         * This header uniquely identifies the request
         * that was made and can be used for troubleshooting the request.
         *
         * @readonly
         */

      }, {
        key: "requestId",
        get: function get() {
          return this.originalResponse.requestId;
        }
        /**
         * If a client request id header is sent in the request, this header will be present in the
         * response with the same value.
         *
         * @readonly
         */

      }, {
        key: "clientRequestId",
        get: function get() {
          return this.originalResponse.clientRequestId;
        }
        /**
         * Indicates the version of the File service used
         * to execute the request.
         *
         * @readonly
         */

      }, {
        key: "version",
        get: function get() {
          return this.originalResponse.version;
        }
        /**
         * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned
         * when the blob was encrypted with a customer-provided key.
         *
         * @readonly
         */

      }, {
        key: "encryptionKeySha256",
        get: function get() {
          return this.originalResponse.encryptionKeySha256;
        }
        /**
         * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to
         * true, then the request returns a crc64 for the range, as long as the range size is less than
         * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is
         * specified in the same request, it will fail with 400(Bad Request)
         */

      }, {
        key: "contentCrc64",
        get: function get() {
          return this.originalResponse.contentCrc64;
        }
        /**
         * The response body as a browser Blob.
         * Always undefined in node.js.
         *
         * @readonly
         */

      }, {
        key: "blobBody",
        get: function get() {
          throw Error("Quick query in browser is not supported yet.");
        }
        /**
         * The response body as a node.js Readable stream.
         * Always undefined in the browser.
         *
         * @readonly
         */

      }, {
        key: "readableStreamBody",
        get: function get() {
          return undefined;
        }
        /**
         * The HTTP response.
         */

      }, {
        key: "_response",
        get: function get() {
          return this.originalResponse._response;
        }
      }]);

      return BlobQueryResponse;
    }(); //# sourceMappingURL=BlobQueryResponse.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobServiceClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcBlobServiceClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobServiceClient", function () {
      return BlobServiceClient;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/storage-blob/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./generated/src/operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony import */


    var _ContainerClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./ContainerClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/ContainerClient.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _azure_core_paging__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @azure/core-paging */
    "./node_modules/@azure/core-paging/dist-esm/src/index.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js");
    /* harmony import */


    var _BlobBatchClient__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./BlobBatchClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatchClient.js");
    /* harmony import */


    var _StorageClient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./StorageClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageClient.js");
    /* harmony import */


    var _sas_AccountSASPermissions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./sas/AccountSASPermissions */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASPermissions.js");
    /* harmony import */


    var _sas_AccountSASSignatureValues__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./sas/AccountSASSignatureValues */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASSignatureValues.js");
    /* harmony import */


    var _sas_AccountSASServices__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./sas/AccountSASServices */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASServices.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you
     * to manipulate blob containers.
     */


    var BlobServiceClient = /*#__PURE__*/function (_StorageClient__WEBPA) {
      _inherits(BlobServiceClient, _StorageClient__WEBPA);

      var _super26 = _createSuper(BlobServiceClient);

      function BlobServiceClient(url, credentialOrPipeline, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this38;

        _classCallCheck(this, BlobServiceClient);

        var pipeline;

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_4__["isPipelineLike"])(credentialOrPipeline)) {
          pipeline = credentialOrPipeline;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isNode"] && credentialOrPipeline instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_7__["StorageSharedKeyCredential"] || credentialOrPipeline instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_8__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isTokenCredential"])(credentialOrPipeline)) {
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_4__["newPipeline"])(credentialOrPipeline, options);
        } else {
          // The second parameter is undefined. Use anonymous credential
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_4__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_8__["AnonymousCredential"](), options);
        }

        _this38 = _super26.call(this, url, pipeline);
        _this38.serviceContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__["Service"](_this38.storageClientContext);
        return _this38;
      }
      /**
       *
       * Creates an instance of BlobServiceClient from connection string.
       *
       * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.
       *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]
       *                                  Account connection string example -
       *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
       *                                  SAS connection string example -
       *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
       * @param options - Optional. Options to configure the HTTP pipeline.
       */


      _createClass(BlobServiceClient, [{
        key: "getContainerClient",
        value:
        /**
         * Creates a {@link ContainerClient} object
         *
         * @param containerName - A container name
         * @returns A new ContainerClient object for the given container name.
         *
         * Example usage:
         *
         * ```js
         * const containerClient = blobServiceClient.getContainerClient("<container name>");
         * ```
         */
        function getContainerClient(containerName) {
          return new _ContainerClient__WEBPACK_IMPORTED_MODULE_5__["ContainerClient"](Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["appendToURLPath"])(this.url, encodeURIComponent(containerName)), this.pipeline);
        }
        /**
         * Create a Blob container.
         *
         * @param containerName - Name of the container to create.
         * @param options - Options to configure Container Create operation.
         * @returns Container creation response and the corresponding container client.
         */

      }, {
        key: "createContainer",
        value: function () {
          var _createContainer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44(containerName) {
            var options,
                _Object9,
                span,
                updatedOptions,
                containerClient,
                containerCreateResponse,
                _args46 = arguments;

            return regeneratorRuntime.wrap(function _callee44$(_context47) {
              while (1) {
                switch (_context47.prev = _context47.next) {
                  case 0:
                    options = _args46.length > 1 && _args46[1] !== undefined ? _args46[1] : {};
                    _Object9 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-createContainer", options), span = _Object9.span, updatedOptions = _Object9.updatedOptions;
                    _context47.prev = 2;
                    containerClient = this.getContainerClient(containerName);
                    _context47.next = 6;
                    return containerClient.create(updatedOptions);

                  case 6:
                    containerCreateResponse = _context47.sent;
                    return _context47.abrupt("return", {
                      containerClient: containerClient,
                      containerCreateResponse: containerCreateResponse
                    });

                  case 10:
                    _context47.prev = 10;
                    _context47.t0 = _context47["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context47.t0.message
                    });
                    throw _context47.t0;

                  case 14:
                    _context47.prev = 14;
                    span.end();
                    return _context47.finish(14);

                  case 17:
                  case "end":
                    return _context47.stop();
                }
              }
            }, _callee44, this, [[2, 10, 14, 17]]);
          }));

          function createContainer(_x65) {
            return _createContainer.apply(this, arguments);
          }

          return createContainer;
        }()
        /**
         * Deletes a Blob container.
         *
         * @param containerName - Name of the container to delete.
         * @param options - Options to configure Container Delete operation.
         * @returns Container deletion response.
         */

      }, {
        key: "deleteContainer",
        value: function () {
          var _deleteContainer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45(containerName) {
            var options,
                _Object10,
                span,
                updatedOptions,
                containerClient,
                _args47 = arguments;

            return regeneratorRuntime.wrap(function _callee45$(_context48) {
              while (1) {
                switch (_context48.prev = _context48.next) {
                  case 0:
                    options = _args47.length > 1 && _args47[1] !== undefined ? _args47[1] : {};
                    _Object10 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-deleteContainer", options), span = _Object10.span, updatedOptions = _Object10.updatedOptions;
                    _context48.prev = 2;
                    containerClient = this.getContainerClient(containerName);
                    _context48.next = 6;
                    return containerClient["delete"](updatedOptions);

                  case 6:
                    return _context48.abrupt("return", _context48.sent);

                  case 9:
                    _context48.prev = 9;
                    _context48.t0 = _context48["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context48.t0.message
                    });
                    throw _context48.t0;

                  case 13:
                    _context48.prev = 13;
                    span.end();
                    return _context48.finish(13);

                  case 16:
                  case "end":
                    return _context48.stop();
                }
              }
            }, _callee45, this, [[2, 9, 13, 16]]);
          }));

          function deleteContainer(_x66) {
            return _deleteContainer.apply(this, arguments);
          }

          return deleteContainer;
        }()
        /**
         * Restore a previously deleted Blob container.
         * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.
         *
         * @param deletedContainerName - Name of the previously deleted container.
         * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.
         * @param options - Options to configure Container Restore operation.
         * @returns Container deletion response.
         */

      }, {
        key: "undeleteContainer",
        value: function () {
          var _undeleteContainer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46(deletedContainerName, deletedContainerVersion) {
            var options,
                _Object11,
                span,
                updatedOptions,
                containerClient,
                containerContext,
                containerUndeleteResponse,
                _args48 = arguments;

            return regeneratorRuntime.wrap(function _callee46$(_context49) {
              while (1) {
                switch (_context49.prev = _context49.next) {
                  case 0:
                    options = _args48.length > 2 && _args48[2] !== undefined ? _args48[2] : {};
                    _Object11 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-undeleteContainer", options), span = _Object11.span, updatedOptions = _Object11.updatedOptions;
                    _context49.prev = 2;
                    containerClient = this.getContainerClient(options.destinationContainerName || deletedContainerName); // Hack to access a protected member.

                    containerContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__["Container"](containerClient["storageClientContext"]);
                    _context49.next = 7;
                    return containerContext.restore(Object.assign({
                      deletedContainerName: deletedContainerName,
                      deletedContainerVersion: deletedContainerVersion
                    }, updatedOptions));

                  case 7:
                    containerUndeleteResponse = _context49.sent;
                    return _context49.abrupt("return", {
                      containerClient: containerClient,
                      containerUndeleteResponse: containerUndeleteResponse
                    });

                  case 11:
                    _context49.prev = 11;
                    _context49.t0 = _context49["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context49.t0.message
                    });
                    throw _context49.t0;

                  case 15:
                    _context49.prev = 15;
                    span.end();
                    return _context49.finish(15);

                  case 18:
                  case "end":
                    return _context49.stop();
                }
              }
            }, _callee46, this, [[2, 11, 15, 18]]);
          }));

          function undeleteContainer(_x67, _x68) {
            return _undeleteContainer.apply(this, arguments);
          }

          return undeleteContainer;
        }()
        /**
         * Rename an existing Blob Container.
         *
         * @param sourceContainerName - The name of the source container.
         * @param destinationContainerName - The new name of the container.
         * @param options - Options to configure Container Rename operation.
         */

        /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */
        // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.

      }, {
        key: "renameContainer",
        value: function () {
          var _renameContainer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47(sourceContainerName, destinationContainerName) {
            var options,
                _a,
                _Object12,
                span,
                updatedOptions,
                containerClient,
                containerContext,
                containerRenameResponse,
                _args49 = arguments;

            return regeneratorRuntime.wrap(function _callee47$(_context50) {
              while (1) {
                switch (_context50.prev = _context50.next) {
                  case 0:
                    options = _args49.length > 2 && _args49[2] !== undefined ? _args49[2] : {};
                    _Object12 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-renameContainer", options), span = _Object12.span, updatedOptions = _Object12.updatedOptions;
                    _context50.prev = 2;
                    containerClient = this.getContainerClient(destinationContainerName); // Hack to access a protected member.

                    containerContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_3__["Container"](containerClient["storageClientContext"]);
                    _context50.next = 7;
                    return containerContext.rename(sourceContainerName, Object.assign(Object.assign({}, updatedOptions), {
                      sourceLeaseId: (_a = options.sourceCondition) === null || _a === void 0 ? void 0 : _a.leaseId
                    }));

                  case 7:
                    containerRenameResponse = _context50.sent;
                    return _context50.abrupt("return", {
                      containerClient: containerClient,
                      containerRenameResponse: containerRenameResponse
                    });

                  case 11:
                    _context50.prev = 11;
                    _context50.t0 = _context50["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context50.t0.message
                    });
                    throw _context50.t0;

                  case 15:
                    _context50.prev = 15;
                    span.end();
                    return _context50.finish(15);

                  case 18:
                  case "end":
                    return _context50.stop();
                }
              }
            }, _callee47, this, [[2, 11, 15, 18]]);
          }));

          function renameContainer(_x69, _x70) {
            return _renameContainer.apply(this, arguments);
          }

          return renameContainer;
        }()
        /**
         * Gets the properties of a storage account’s Blob service, including properties
         * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties
         *
         * @param options - Options to the Service Get Properties operation.
         * @returns Response data for the Service Get Properties operation.
         */

      }, {
        key: "getProperties",
        value: function () {
          var _getProperties = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
            var options,
                _Object13,
                span,
                updatedOptions,
                _args50 = arguments;

            return regeneratorRuntime.wrap(function _callee48$(_context51) {
              while (1) {
                switch (_context51.prev = _context51.next) {
                  case 0:
                    options = _args50.length > 0 && _args50[0] !== undefined ? _args50[0] : {};
                    _Object13 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-getProperties", options), span = _Object13.span, updatedOptions = _Object13.updatedOptions;
                    _context51.prev = 2;
                    _context51.next = 5;
                    return this.serviceContext.getProperties(Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context51.abrupt("return", _context51.sent);

                  case 8:
                    _context51.prev = 8;
                    _context51.t0 = _context51["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context51.t0.message
                    });
                    throw _context51.t0;

                  case 12:
                    _context51.prev = 12;
                    span.end();
                    return _context51.finish(12);

                  case 15:
                  case "end":
                    return _context51.stop();
                }
              }
            }, _callee48, this, [[2, 8, 12, 15]]);
          }));

          function getProperties() {
            return _getProperties.apply(this, arguments);
          }

          return getProperties;
        }()
        /**
         * Sets properties for a storage account’s Blob service endpoint, including properties
         * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties
         *
         * @param properties -
         * @param options - Options to the Service Set Properties operation.
         * @returns Response data for the Service Set Properties operation.
         */

      }, {
        key: "setProperties",
        value: function () {
          var _setProperties = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee49(properties) {
            var options,
                _Object14,
                span,
                updatedOptions,
                _args51 = arguments;

            return regeneratorRuntime.wrap(function _callee49$(_context52) {
              while (1) {
                switch (_context52.prev = _context52.next) {
                  case 0:
                    options = _args51.length > 1 && _args51[1] !== undefined ? _args51[1] : {};
                    _Object14 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-setProperties", options), span = _Object14.span, updatedOptions = _Object14.updatedOptions;
                    _context52.prev = 2;
                    _context52.next = 5;
                    return this.serviceContext.setProperties(properties, Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context52.abrupt("return", _context52.sent);

                  case 8:
                    _context52.prev = 8;
                    _context52.t0 = _context52["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context52.t0.message
                    });
                    throw _context52.t0;

                  case 12:
                    _context52.prev = 12;
                    span.end();
                    return _context52.finish(12);

                  case 15:
                  case "end":
                    return _context52.stop();
                }
              }
            }, _callee49, this, [[2, 8, 12, 15]]);
          }));

          function setProperties(_x71) {
            return _setProperties.apply(this, arguments);
          }

          return setProperties;
        }()
        /**
         * Retrieves statistics related to replication for the Blob service. It is only
         * available on the secondary location endpoint when read-access geo-redundant
         * replication is enabled for the storage account.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats
         *
         * @param options - Options to the Service Get Statistics operation.
         * @returns Response data for the Service Get Statistics operation.
         */

      }, {
        key: "getStatistics",
        value: function () {
          var _getStatistics = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
            var options,
                _Object15,
                span,
                updatedOptions,
                _args52 = arguments;

            return regeneratorRuntime.wrap(function _callee50$(_context53) {
              while (1) {
                switch (_context53.prev = _context53.next) {
                  case 0:
                    options = _args52.length > 0 && _args52[0] !== undefined ? _args52[0] : {};
                    _Object15 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-getStatistics", options), span = _Object15.span, updatedOptions = _Object15.updatedOptions;
                    _context53.prev = 2;
                    _context53.next = 5;
                    return this.serviceContext.getStatistics(Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context53.abrupt("return", _context53.sent);

                  case 8:
                    _context53.prev = 8;
                    _context53.t0 = _context53["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context53.t0.message
                    });
                    throw _context53.t0;

                  case 12:
                    _context53.prev = 12;
                    span.end();
                    return _context53.finish(12);

                  case 15:
                  case "end":
                    return _context53.stop();
                }
              }
            }, _callee50, this, [[2, 8, 12, 15]]);
          }));

          function getStatistics() {
            return _getStatistics.apply(this, arguments);
          }

          return getStatistics;
        }()
        /**
         * The Get Account Information operation returns the sku name and account kind
         * for the specified account.
         * The Get Account Information operation is available on service versions beginning
         * with version 2018-03-28.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information
         *
         * @param options - Options to the Service Get Account Info operation.
         * @returns Response data for the Service Get Account Info operation.
         */

      }, {
        key: "getAccountInfo",
        value: function () {
          var _getAccountInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
            var options,
                _Object16,
                span,
                updatedOptions,
                _args53 = arguments;

            return regeneratorRuntime.wrap(function _callee51$(_context54) {
              while (1) {
                switch (_context54.prev = _context54.next) {
                  case 0:
                    options = _args53.length > 0 && _args53[0] !== undefined ? _args53[0] : {};
                    _Object16 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-getAccountInfo", options), span = _Object16.span, updatedOptions = _Object16.updatedOptions;
                    _context54.prev = 2;
                    _context54.next = 5;
                    return this.serviceContext.getAccountInfo(Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context54.abrupt("return", _context54.sent);

                  case 8:
                    _context54.prev = 8;
                    _context54.t0 = _context54["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context54.t0.message
                    });
                    throw _context54.t0;

                  case 12:
                    _context54.prev = 12;
                    span.end();
                    return _context54.finish(12);

                  case 15:
                  case "end":
                    return _context54.stop();
                }
              }
            }, _callee51, this, [[2, 8, 12, 15]]);
          }));

          function getAccountInfo() {
            return _getAccountInfo.apply(this, arguments);
          }

          return getAccountInfo;
        }()
        /**
         * Returns a list of the containers under the specified account.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2
         *
         * @param marker - A string value that identifies the portion of
         *                        the list of containers to be returned with the next listing operation. The
         *                        operation returns the continuationToken value within the response body if the
         *                        listing operation did not return all containers remaining to be listed
         *                        with the current page. The continuationToken value can be used as the value for
         *                        the marker parameter in a subsequent call to request the next page of list
         *                        items. The marker value is opaque to the client.
         * @param options - Options to the Service List Container Segment operation.
         * @returns Response data for the Service List Container Segment operation.
         */

      }, {
        key: "listContainersSegment",
        value: function () {
          var _listContainersSegment = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee52(marker) {
            var options,
                _Object17,
                span,
                updatedOptions,
                _args54 = arguments;

            return regeneratorRuntime.wrap(function _callee52$(_context55) {
              while (1) {
                switch (_context55.prev = _context55.next) {
                  case 0:
                    options = _args54.length > 1 && _args54[1] !== undefined ? _args54[1] : {};
                    _Object17 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-listContainersSegment", options), span = _Object17.span, updatedOptions = _Object17.updatedOptions;
                    _context55.prev = 2;
                    _context55.next = 5;
                    return this.serviceContext.listContainersSegment(Object.assign(Object.assign(Object.assign({
                      abortSignal: options.abortSignal,
                      marker: marker
                    }, options), {
                      include: typeof options.include === "string" ? [options.include] : options.include
                    }), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context55.abrupt("return", _context55.sent);

                  case 8:
                    _context55.prev = 8;
                    _context55.t0 = _context55["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context55.t0.message
                    });
                    throw _context55.t0;

                  case 12:
                    _context55.prev = 12;
                    span.end();
                    return _context55.finish(12);

                  case 15:
                  case "end":
                    return _context55.stop();
                }
              }
            }, _callee52, this, [[2, 8, 12, 15]]);
          }));

          function listContainersSegment(_x72) {
            return _listContainersSegment.apply(this, arguments);
          }

          return listContainersSegment;
        }()
        /**
         * The Filter Blobs operation enables callers to list blobs across all containers whose tags
         * match a given search expression. Filter blobs searches across all containers within a
         * storage account but can be scoped within the expression to a single container.
         *
         * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.
         *                                        The given expression must evaluate to true for a blob to be returned in the results.
         *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;
         *                                        however, only a subset of the OData filter syntax is supported in the Blob service.
         * @param marker - A string value that identifies the portion of
         *                          the list of blobs to be returned with the next listing operation. The
         *                          operation returns the continuationToken value within the response body if the
         *                          listing operation did not return all blobs remaining to be listed
         *                          with the current page. The continuationToken value can be used as the value for
         *                          the marker parameter in a subsequent call to request the next page of list
         *                          items. The marker value is opaque to the client.
         * @param options - Options to find blobs by tags.
         */

      }, {
        key: "findBlobsByTagsSegment",
        value: function () {
          var _findBlobsByTagsSegment = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee53(tagFilterSqlExpression, marker) {
            var options,
                _Object18,
                span,
                updatedOptions,
                response,
                wrappedResponse,
                _args55 = arguments;

            return regeneratorRuntime.wrap(function _callee53$(_context56) {
              while (1) {
                switch (_context56.prev = _context56.next) {
                  case 0:
                    options = _args55.length > 2 && _args55[2] !== undefined ? _args55[2] : {};
                    _Object18 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-findBlobsByTagsSegment", options), span = _Object18.span, updatedOptions = _Object18.updatedOptions;
                    _context56.prev = 2;
                    _context56.next = 5;
                    return this.serviceContext.filterBlobs(Object.assign({
                      abortSignal: options.abortSignal,
                      where: tagFilterSqlExpression,
                      marker: marker,
                      maxPageSize: options.maxPageSize
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    response = _context56.sent;
                    wrappedResponse = Object.assign(Object.assign({}, response), {
                      _response: response._response,
                      blobs: response.blobs.map(function (blob) {
                        var _a;

                        var tagValue = "";

                        if (((_a = blob.tags) === null || _a === void 0 ? void 0 : _a.blobTagSet.length) === 1) {
                          tagValue = blob.tags.blobTagSet[0].value;
                        }

                        return Object.assign(Object.assign({}, blob), {
                          tags: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["toTags"])(blob.tags),
                          tagValue: tagValue
                        });
                      })
                    });
                    return _context56.abrupt("return", wrappedResponse);

                  case 10:
                    _context56.prev = 10;
                    _context56.t0 = _context56["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context56.t0.message
                    });
                    throw _context56.t0;

                  case 14:
                    _context56.prev = 14;
                    span.end();
                    return _context56.finish(14);

                  case 17:
                  case "end":
                    return _context56.stop();
                }
              }
            }, _callee53, this, [[2, 10, 14, 17]]);
          }));

          function findBlobsByTagsSegment(_x73, _x74) {
            return _findBlobsByTagsSegment.apply(this, arguments);
          }

          return findBlobsByTagsSegment;
        }()
        /**
         * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.
         *
         * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.
         *                                         The given expression must evaluate to true for a blob to be returned in the results.
         *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;
         *                                         however, only a subset of the OData filter syntax is supported in the Blob service.
         * @param marker - A string value that identifies the portion of
         *                          the list of blobs to be returned with the next listing operation. The
         *                          operation returns the continuationToken value within the response body if the
         *                          listing operation did not return all blobs remaining to be listed
         *                          with the current page. The continuationToken value can be used as the value for
         *                          the marker parameter in a subsequent call to request the next page of list
         *                          items. The marker value is opaque to the client.
         * @param options - Options to find blobs by tags.
         */

      }, {
        key: "findBlobsByTagsSegments",
        value: function findBlobsByTagsSegments(tagFilterSqlExpression, marker) {
          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function findBlobsByTagsSegments_1() {
            var response;
            return regeneratorRuntime.wrap(function findBlobsByTagsSegments_1$(_context57) {
              while (1) {
                switch (_context57.prev = _context57.next) {
                  case 0:
                    if (!(!!marker || marker === undefined)) {
                      _context57.next = 11;
                      break;
                    }

                  case 1:
                    _context57.next = 3;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options));

                  case 3:
                    response = _context57.sent;
                    response.blobs = response.blobs || [];
                    marker = response.continuationToken;
                    _context57.next = 8;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(response);

                  case 8:
                    _context57.next = 10;
                    return _context57.sent;

                  case 10:
                    if (marker) {
                      _context57.next = 1;
                      break;
                    }

                  case 11:
                  case "end":
                    return _context57.stop();
                }
              }
            }, findBlobsByTagsSegments_1, this);
          }));
        }
        /**
         * Returns an AsyncIterableIterator for blobs.
         *
         * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.
         *                                         The given expression must evaluate to true for a blob to be returned in the results.
         *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;
         *                                         however, only a subset of the OData filter syntax is supported in the Blob service.
         * @param options - Options to findBlobsByTagsItems.
         */

      }, {
        key: "findBlobsByTagsItems",
        value: function findBlobsByTagsItems(tagFilterSqlExpression) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function findBlobsByTagsItems_1() {
            var e_1, _a, marker, _b, _c, segment;

            return regeneratorRuntime.wrap(function findBlobsByTagsItems_1$(_context58) {
              while (1) {
                switch (_context58.prev = _context58.next) {
                  case 0:
                    _context58.prev = 0;
                    _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(this.findBlobsByTagsSegments(tagFilterSqlExpression, marker, options));

                  case 2:
                    _context58.next = 4;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_b.next());

                  case 4:
                    _c = _context58.sent;

                    if (_c.done) {
                      _context58.next = 14;
                      break;
                    }

                    segment = _c.value;
                    _context58.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    return _context58.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(segment.blobs)), "t1", 9);

                  case 9:
                    _context58.t2 = _context58.t1;
                    _context58.next = 12;
                    return (0, _context58.t0)(_context58.t2);

                  case 12:
                    _context58.next = 2;
                    break;

                  case 14:
                    _context58.next = 19;
                    break;

                  case 16:
                    _context58.prev = 16;
                    _context58.t3 = _context58["catch"](0);
                    e_1 = {
                      error: _context58.t3
                    };

                  case 19:
                    _context58.prev = 19;
                    _context58.prev = 20;

                    if (!(_c && !_c.done && (_a = _b["return"]))) {
                      _context58.next = 24;
                      break;
                    }

                    _context58.next = 24;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_a.call(_b));

                  case 24:
                    _context58.prev = 24;

                    if (!e_1) {
                      _context58.next = 27;
                      break;
                    }

                    throw e_1.error;

                  case 27:
                    return _context58.finish(24);

                  case 28:
                    return _context58.finish(19);

                  case 29:
                  case "end":
                    return _context58.stop();
                }
              }
            }, findBlobsByTagsItems_1, this, [[0, 16, 19, 29], [20,, 24, 28]]);
          }));
        }
        /**
         * Returns an async iterable iterator to find all blobs with specified tag
         * under the specified account.
         *
         * .byPage() returns an async iterable iterator to list the blobs in pages.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties
         *
         * Example using `for await` syntax:
         *
         * ```js
         * let i = 1;
         * for await (const blob of blobServiceClient.findBlobsByTags("tagkey='tagvalue'")) {
         *   console.log(`Blob ${i++}: ${container.name}`);
         * }
         * ```
         *
         * Example using `iter.next()`:
         *
         * ```js
         * let i = 1;
         * const iter = blobServiceClient.findBlobsByTags("tagkey='tagvalue'");
         * let blobItem = await iter.next();
         * while (!blobItem.done) {
         *   console.log(`Blob ${i++}: ${blobItem.value.name}`);
         *   blobItem = await iter.next();
         * }
         * ```
         *
         * Example using `byPage()`:
         *
         * ```js
         * // passing optional maxPageSize in the page settings
         * let i = 1;
         * for await (const response of blobServiceClient.findBlobsByTags("tagkey='tagvalue'").byPage({ maxPageSize: 20 })) {
         *   if (response.blobs) {
         *     for (const blob of response.blobs) {
         *       console.log(`Blob ${i++}: ${blob.name}`);
         *     }
         *   }
         * }
         * ```
         *
         * Example using paging with a marker:
         *
         * ```js
         * let i = 1;
         * let iterator = blobServiceClient.findBlobsByTags("tagkey='tagvalue'").byPage({ maxPageSize: 2 });
         * let response = (await iterator.next()).value;
         *
         * // Prints 2 blob names
         * if (response.blobs) {
         *   for (const blob of response.blobs) {
         *     console.log(`Blob ${i++}: ${blob.name}`);
         *   }
         * }
         *
         * // Gets next marker
         * let marker = response.continuationToken;
         * // Passing next marker as continuationToken
         * iterator = blobServiceClient
         *   .findBlobsByTags("tagkey='tagvalue'")
         *   .byPage({ continuationToken: marker, maxPageSize: 10 });
         * response = (await iterator.next()).value;
         *
         * // Prints blob names
         * if (response.blobs) {
         *   for (const blob of response.blobs) {
         *      console.log(`Blob ${i++}: ${blob.name}`);
         *   }
         * }
         * ```
         *
         * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.
         *                                         The given expression must evaluate to true for a blob to be returned in the results.
         *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;
         *                                         however, only a subset of the OData filter syntax is supported in the Blob service.
         * @param options - Options to find blobs by tags.
         */

      }, {
        key: "findBlobsByTags",
        value: function findBlobsByTags(tagFilterSqlExpression) {
          var _this39 = this,
              _ref12;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          // AsyncIterableIterator to iterate over blobs
          var listSegmentOptions = Object.assign({}, options);
          var iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);
          return _ref12 = {
            /**
             * The next method, part of the iteration protocol
             */
            next: function next() {
              return iter.next();
            }
          }, _defineProperty(_ref12, Symbol.asyncIterator, function () {
            return this;
          }), _defineProperty(_ref12, "byPage", function byPage() {
            var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return _this39.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, Object.assign({
              maxPageSize: settings.maxPageSize
            }, listSegmentOptions));
          }), _ref12;
        }
        /**
         * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses
         *
         * @param marker - A string value that identifies the portion of
         *                        the list of containers to be returned with the next listing operation. The
         *                        operation returns the continuationToken value within the response body if the
         *                        listing operation did not return all containers remaining to be listed
         *                        with the current page. The continuationToken value can be used as the value for
         *                        the marker parameter in a subsequent call to request the next page of list
         *                        items. The marker value is opaque to the client.
         * @param options - Options to list containers operation.
         */

      }, {
        key: "listSegments",
        value: function listSegments(marker) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listSegments_1() {
            var listContainersSegmentResponse;
            return regeneratorRuntime.wrap(function listSegments_1$(_context59) {
              while (1) {
                switch (_context59.prev = _context59.next) {
                  case 0:
                    if (!(!!marker || marker === undefined)) {
                      _context59.next = 15;
                      break;
                    }

                  case 1:
                    _context59.next = 3;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(this.listContainersSegment(marker, options));

                  case 3:
                    listContainersSegmentResponse = _context59.sent;
                    listContainersSegmentResponse.containerItems = listContainersSegmentResponse.containerItems || [];
                    marker = listContainersSegmentResponse.continuationToken;
                    _context59.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    _context59.next = 9;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(listContainersSegmentResponse);

                  case 9:
                    _context59.t1 = _context59.sent;
                    _context59.next = 12;
                    return (0, _context59.t0)(_context59.t1);

                  case 12:
                    _context59.next = 14;
                    return _context59.sent;

                  case 14:
                    if (marker) {
                      _context59.next = 1;
                      break;
                    }

                  case 15:
                  case "end":
                    return _context59.stop();
                }
              }
            }, listSegments_1, this);
          }));
        }
        /**
         * Returns an AsyncIterableIterator for Container Items
         *
         * @param options - Options to list containers operation.
         */

      }, {
        key: "listItems",
        value: function listItems() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listItems_1() {
            var e_2, _a, marker, _b, _c, segment;

            return regeneratorRuntime.wrap(function listItems_1$(_context60) {
              while (1) {
                switch (_context60.prev = _context60.next) {
                  case 0:
                    _context60.prev = 0;
                    _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(this.listSegments(marker, options));

                  case 2:
                    _context60.next = 4;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_b.next());

                  case 4:
                    _c = _context60.sent;

                    if (_c.done) {
                      _context60.next = 14;
                      break;
                    }

                    segment = _c.value;
                    _context60.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    return _context60.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(segment.containerItems)), "t1", 9);

                  case 9:
                    _context60.t2 = _context60.t1;
                    _context60.next = 12;
                    return (0, _context60.t0)(_context60.t2);

                  case 12:
                    _context60.next = 2;
                    break;

                  case 14:
                    _context60.next = 19;
                    break;

                  case 16:
                    _context60.prev = 16;
                    _context60.t3 = _context60["catch"](0);
                    e_2 = {
                      error: _context60.t3
                    };

                  case 19:
                    _context60.prev = 19;
                    _context60.prev = 20;

                    if (!(_c && !_c.done && (_a = _b["return"]))) {
                      _context60.next = 24;
                      break;
                    }

                    _context60.next = 24;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_a.call(_b));

                  case 24:
                    _context60.prev = 24;

                    if (!e_2) {
                      _context60.next = 27;
                      break;
                    }

                    throw e_2.error;

                  case 27:
                    return _context60.finish(24);

                  case 28:
                    return _context60.finish(19);

                  case 29:
                  case "end":
                    return _context60.stop();
                }
              }
            }, listItems_1, this, [[0, 16, 19, 29], [20,, 24, 28]]);
          }));
        }
        /**
         * Returns an async iterable iterator to list all the containers
         * under the specified account.
         *
         * .byPage() returns an async iterable iterator to list the containers in pages.
         *
         * Example using `for await` syntax:
         *
         * ```js
         * let i = 1;
         * for await (const container of blobServiceClient.listContainers()) {
         *   console.log(`Container ${i++}: ${container.name}`);
         * }
         * ```
         *
         * Example using `iter.next()`:
         *
         * ```js
         * let i = 1;
         * const iter = blobServiceClient.listContainers();
         * let containerItem = await iter.next();
         * while (!containerItem.done) {
         *   console.log(`Container ${i++}: ${containerItem.value.name}`);
         *   containerItem = await iter.next();
         * }
         * ```
         *
         * Example using `byPage()`:
         *
         * ```js
         * // passing optional maxPageSize in the page settings
         * let i = 1;
         * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {
         *   if (response.containerItems) {
         *     for (const container of response.containerItems) {
         *       console.log(`Container ${i++}: ${container.name}`);
         *     }
         *   }
         * }
         * ```
         *
         * Example using paging with a marker:
         *
         * ```js
         * let i = 1;
         * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });
         * let response = (await iterator.next()).value;
         *
         * // Prints 2 container names
         * if (response.containerItems) {
         *   for (const container of response.containerItems) {
         *     console.log(`Container ${i++}: ${container.name}`);
         *   }
         * }
         *
         * // Gets next marker
         * let marker = response.continuationToken;
         * // Passing next marker as continuationToken
         * iterator = blobServiceClient
         *   .listContainers()
         *   .byPage({ continuationToken: marker, maxPageSize: 10 });
         * response = (await iterator.next()).value;
         *
         * // Prints 10 container names
         * if (response.containerItems) {
         *   for (const container of response.containerItems) {
         *      console.log(`Container ${i++}: ${container.name}`);
         *   }
         * }
         * ```
         *
         * @param options - Options to list containers.
         * @returns An asyncIterableIterator that supports paging.
         */

      }, {
        key: "listContainers",
        value: function listContainers() {
          var _this40 = this,
              _ref13;

          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          if (options.prefix === "") {
            options.prefix = undefined;
          }

          var include = [];

          if (options.includeDeleted) {
            include.push("deleted");
          }

          if (options.includeMetadata) {
            include.push("metadata");
          } // AsyncIterableIterator to iterate over containers


          var listSegmentOptions = Object.assign(Object.assign({}, options), include.length > 0 ? {
            include: include
          } : {});
          var iter = this.listItems(listSegmentOptions);
          return _ref13 = {
            /**
             * The next method, part of the iteration protocol
             */
            next: function next() {
              return iter.next();
            }
          }, _defineProperty(_ref13, Symbol.asyncIterator, function () {
            return this;
          }), _defineProperty(_ref13, "byPage", function byPage() {
            var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return _this40.listSegments(settings.continuationToken, Object.assign({
              maxPageSize: settings.maxPageSize
            }, listSegmentOptions));
          }), _ref13;
        }
        /**
         * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).
         *
         * Retrieves a user delegation key for the Blob service. This is only a valid operation when using
         * bearer token authentication.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key
         *
         * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time
         * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time
         */

      }, {
        key: "getUserDelegationKey",
        value: function () {
          var _getUserDelegationKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee54(startsOn, expiresOn) {
            var options,
                _Object19,
                span,
                updatedOptions,
                response,
                userDelegationKey,
                res,
                _args60 = arguments;

            return regeneratorRuntime.wrap(function _callee54$(_context61) {
              while (1) {
                switch (_context61.prev = _context61.next) {
                  case 0:
                    options = _args60.length > 2 && _args60[2] !== undefined ? _args60[2] : {};
                    _Object19 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["createSpan"])("BlobServiceClient-getUserDelegationKey", options), span = _Object19.span, updatedOptions = _Object19.updatedOptions;
                    _context61.prev = 2;
                    _context61.next = 5;
                    return this.serviceContext.getUserDelegationKey({
                      startsOn: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["truncatedISO8061Date"])(startsOn, false),
                      expiresOn: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["truncatedISO8061Date"])(expiresOn, false)
                    }, Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_10__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    response = _context61.sent;
                    userDelegationKey = {
                      signedObjectId: response.signedObjectId,
                      signedTenantId: response.signedTenantId,
                      signedStartsOn: new Date(response.signedStartsOn),
                      signedExpiresOn: new Date(response.signedExpiresOn),
                      signedService: response.signedService,
                      signedVersion: response.signedVersion,
                      value: response.value
                    };
                    res = Object.assign({
                      _response: response._response,
                      requestId: response.requestId,
                      clientRequestId: response.clientRequestId,
                      version: response.version,
                      date: response.date,
                      errorCode: response.errorCode
                    }, userDelegationKey);
                    return _context61.abrupt("return", res);

                  case 11:
                    _context61.prev = 11;
                    _context61.t0 = _context61["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context61.t0.message
                    });
                    throw _context61.t0;

                  case 15:
                    _context61.prev = 15;
                    span.end();
                    return _context61.finish(15);

                  case 18:
                  case "end":
                    return _context61.stop();
                }
              }
            }, _callee54, this, [[2, 11, 15, 18]]);
          }));

          function getUserDelegationKey(_x75, _x76) {
            return _getUserDelegationKey.apply(this, arguments);
          }

          return getUserDelegationKey;
        }()
        /**
         * Creates a BlobBatchClient object to conduct batch operations.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch
         *
         * @returns A new BlobBatchClient object for this service.
         */

      }, {
        key: "getBlobBatchClient",
        value: function getBlobBatchClient() {
          return new _BlobBatchClient__WEBPACK_IMPORTED_MODULE_11__["BlobBatchClient"](this.url, this.pipeline);
        }
        /**
         * Only available for BlobServiceClient constructed with a shared key credential.
         *
         * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties
         * and parameters passed in. The SAS is signed by the shared key credential of the client.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas
         *
         * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.
         * @param permissions - Specifies the list of permissions to be associated with the SAS.
         * @param resourceTypes - Specifies the resource types associated with the shared access signature.
         * @param options - Optional parameters.
         * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.
         */

      }, {
        key: "generateAccountSasUrl",
        value: function generateAccountSasUrl(expiresOn) {
          var permissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _sas_AccountSASPermissions__WEBPACK_IMPORTED_MODULE_13__["AccountSASPermissions"].parse("r");
          var resourceTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "sco";
          var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

          if (!(this.credential instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_7__["StorageSharedKeyCredential"])) {
            throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");
          }

          if (expiresOn === undefined) {
            var now = new Date();
            expiresOn = new Date(now.getTime() + 3600 * 1000);
          }

          var sas = Object(_sas_AccountSASSignatureValues__WEBPACK_IMPORTED_MODULE_14__["generateAccountSASQueryParameters"])(Object.assign({
            permissions: permissions,
            expiresOn: expiresOn,
            resourceTypes: resourceTypes,
            services: _sas_AccountSASServices__WEBPACK_IMPORTED_MODULE_15__["AccountSASServices"].parse("b").toString()
          }, options), this.credential).toString();
          return Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["appendToURLQuery"])(this.url, sas);
        }
      }], [{
        key: "fromConnectionString",
        value: function fromConnectionString(connectionString, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

        /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
        options) {
          options = options || {};
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["extractConnectionStringParts"])(connectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_7__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              var pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_4__["newPipeline"])(sharedKeyCredential, options);
              return new BlobServiceClient(extractedCreds.url, pipeline);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            var _pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_4__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_8__["AnonymousCredential"](), options);

            return new BlobServiceClient(extractedCreds.url + "?" + extractedCreds.accountSas, _pipeline);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        }
      }]);

      return BlobServiceClient;
    }(_StorageClient__WEBPACK_IMPORTED_MODULE_12__["StorageClient"]); //# sourceMappingURL=BlobServiceClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Clients.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcClientsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobClient", function () {
      return BlobClient;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobClient", function () {
      return AppendBlobClient;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobClient", function () {
      return BlockBlobClient;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobClient", function () {
      return PageBlobClient;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _BlobDownloadResponse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./BlobDownloadResponse */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobDownloadResponse.browser.js");
    /* harmony import */


    var _BlobQueryResponse__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./BlobQueryResponse */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobQueryResponse.browser.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./generated/src/operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/models.js");
    /* harmony import */


    var _PageBlobRangeResponse__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./PageBlobRangeResponse */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/PageBlobRangeResponse.js");
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony import */


    var _pollers_BlobStartCopyFromUrlPoller__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./pollers/BlobStartCopyFromUrlPoller */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.js");
    /* harmony import */


    var _Range__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./Range */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Range.js");
    /* harmony import */


    var _StorageClient__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./StorageClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageClient.js");
    /* harmony import */


    var _utils_Batch__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./utils/Batch */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Batch.js");
    /* harmony import */


    var _storage_common_src__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../../storage-common/src */
    "./node_modules/@azure/storage-blob/dist-esm/storage-common/src/index.browser.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _utils_utils_node__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./utils/utils.node */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.browser.js");
    /* harmony import */


    var _sas_BlobSASSignatureValues__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./sas/BlobSASSignatureValues */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASSignatureValues.js");
    /* harmony import */


    var _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./BlobLeaseClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobLeaseClient.js");
    /**
     * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,
     * append blob, or page blob.
     */


    var BlobClient = /*#__PURE__*/function (_StorageClient__WEBPA2) {
      _inherits(BlobClient, _StorageClient__WEBPA2);

      var _super27 = _createSuper(BlobClient);

      function BlobClient(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this41;

        _classCallCheck(this, BlobClient);

        options = options || {};
        var pipeline;
        var url;

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["isPipelineLike"])(credentialOrPipelineOrContainerName)) {
          // (url: string, pipeline: Pipeline)
          url = urlOrConnectionString;
          pipeline = credentialOrPipelineOrContainerName;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrPipelineOrContainerName instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"] || credentialOrPipelineOrContainerName instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrPipelineOrContainerName)) {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          url = urlOrConnectionString;
          options = blobNameOrOptions;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(credentialOrPipelineOrContainerName, options);
        } else if (!credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName !== "string") {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          // The second parameter is undefined. Use anonymous credential.
          url = urlOrConnectionString;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
        } else if (credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName === "string" && blobNameOrOptions && typeof blobNameOrOptions === "string") {
          // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)
          var containerName = credentialOrPipelineOrContainerName;
          var blobName = blobNameOrOptions;
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["extractConnectionStringParts"])(urlOrConnectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(sharedKeyCredential, options);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) + "?" + extractedCreds.accountSas;
            pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        } else {
          throw new Error("Expecting non-empty strings for containerName and blobName parameters");
        }

        _this41 = _super27.call(this, url, pipeline);

        var _this41$getBlobAndCon = _this41.getBlobAndContainerNamesFromUrl();

        _this41._name = _this41$getBlobAndCon.blobName;
        _this41._containerName = _this41$getBlobAndCon.containerName;
        _this41.blobContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__["Blob"](_this41.storageClientContext);
        _this41._snapshot = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["getURLParameter"])(_this41.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.SNAPSHOT);
        _this41._versionId = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["getURLParameter"])(_this41.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.VERSIONID);
        return _this41;
      }
      /**
       * The name of the blob.
       */


      _createClass(BlobClient, [{
        key: "name",
        get: function get() {
          return this._name;
        }
        /**
         * The name of the storage container the blob is associated with.
         */

      }, {
        key: "containerName",
        get: function get() {
          return this._containerName;
        }
        /**
         * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.
         * Provide "" will remove the snapshot and return a Client to the base blob.
         *
         * @param snapshot - The snapshot timestamp.
         * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp
         */

      }, {
        key: "withSnapshot",
        value: function withSnapshot(snapshot) {
          return new BlobClient(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["setURLParameter"])(this.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);
        }
        /**
         * Creates a new BlobClient object pointing to a version of this blob.
         * Provide "" will remove the versionId and return a Client to the base blob.
         *
         * @param versionId - The versionId.
         * @returns A new BlobClient object pointing to the version of this blob.
         */

      }, {
        key: "withVersion",
        value: function withVersion(versionId) {
          return new BlobClient(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["setURLParameter"])(this.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.VERSIONID, versionId.length === 0 ? undefined : versionId), this.pipeline);
        }
        /**
         * Creates a AppendBlobClient object.
         *
         */

      }, {
        key: "getAppendBlobClient",
        value: function getAppendBlobClient() {
          return new AppendBlobClient(this.url, this.pipeline);
        }
        /**
         * Creates a BlockBlobClient object.
         *
         */

      }, {
        key: "getBlockBlobClient",
        value: function getBlockBlobClient() {
          return new BlockBlobClient(this.url, this.pipeline);
        }
        /**
         * Creates a PageBlobClient object.
         *
         */

      }, {
        key: "getPageBlobClient",
        value: function getPageBlobClient() {
          return new PageBlobClient(this.url, this.pipeline);
        }
        /**
         * Reads or downloads a blob from the system, including its metadata and properties.
         * You can also call Get Blob to read a snapshot.
         *
         * * In Node.js, data returns in a Readable stream readableStreamBody
         * * In browsers, data returns in a promise blobBody
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob
         *
         * @param offset - From which position of the blob to download, greater than or equal to 0
         * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined
         * @param options - Optional options to Blob Download operation.
         *
         *
         * Example usage (Node.js):
         *
         * ```js
         * // Download and convert a blob to a string
         * const downloadBlockBlobResponse = await blobClient.download();
         * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);
         * console.log("Downloaded blob content:", downloaded.toString());
         *
         * async function streamToBuffer(readableStream) {
         * return new Promise((resolve, reject) => {
         * const chunks = [];
         * readableStream.on("data", (data) => {
         * chunks.push(data instanceof Buffer ? data : Buffer.from(data));
         * });
         * readableStream.on("end", () => {
         * resolve(Buffer.concat(chunks));
         * });
         * readableStream.on("error", reject);
         * });
         * }
         * ```
         *
         * Example usage (browser):
         *
         * ```js
         * // Download and convert a blob to a string
         * const downloadBlockBlobResponse = await blobClient.download();
         * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);
         * console.log(
         *   "Downloaded blob content",
         *   downloaded
         * );
         *
         * async function blobToString(blob: Blob): Promise<string> {
         *   const fileReader = new FileReader();
         *   return new Promise<string>((resolve, reject) => {
         *     fileReader.onloadend = (ev: any) => {
         *       resolve(ev.target!.result);
         *     };
         *     fileReader.onerror = reject;
         *     fileReader.readAsText(blob);
         *   });
         * }
         * ```
         */

      }, {
        key: "download",
        value: function () {
          var _download = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {
            var _this42 = this;

            var offset,
                count,
                options,
                _a,
                _Object20,
                span,
                updatedOptions,
                res,
                wrappedRes,
                _args62 = arguments;

            return regeneratorRuntime.wrap(function _callee56$(_context63) {
              while (1) {
                switch (_context63.prev = _context63.next) {
                  case 0:
                    offset = _args62.length > 0 && _args62[0] !== undefined ? _args62[0] : 0;
                    count = _args62.length > 1 ? _args62[1] : undefined;
                    options = _args62.length > 2 && _args62[2] !== undefined ? _args62[2] : {};
                    options.conditions = options.conditions || {};
                    options.conditions = options.conditions || {};
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _Object20 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-download", options), span = _Object20.span, updatedOptions = _Object20.updatedOptions;
                    _context63.prev = 7;
                    _context63.next = 10;
                    return this.blobContext.download(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      requestOptions: {
                        onDownloadProgress: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] ? undefined : options.onProgress // for Node.js, progress is reported by RetriableReadableStream

                      },
                      range: offset === 0 && !count ? undefined : Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      }),
                      rangeGetContentMD5: options.rangeGetContentMD5,
                      rangeGetContentCRC64: options.rangeGetContentCrc64,
                      snapshot: options.snapshot,
                      cpkInfo: options.customerProvidedKey
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 10:
                    res = _context63.sent;
                    wrappedRes = Object.assign(Object.assign({}, res), {
                      _response: res._response,
                      objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,
                      objectReplicationSourceProperties: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["parseObjectReplicationRecord"])(res.objectReplicationRules)
                    }); // Return browser response immediately

                    if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
                      _context63.next = 14;
                      break;
                    }

                    return _context63.abrupt("return", wrappedRes);

                  case 14:
                    // We support retrying when download stream unexpected ends in Node.js runtime
                    // Following code shouldn't be bundled into browser build, however some
                    // bundlers may try to bundle following code and "FileReadResponse.ts".
                    // In this case, "FileDownloadResponse.browser.ts" will be used as a shim of "FileDownloadResponse.ts"
                    // The config is in package.json "browser" field
                    if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {
                      // TODO: Default value or make it a required parameter?
                      options.maxRetryRequests = _utils_constants__WEBPACK_IMPORTED_MODULE_15__["DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS"];
                    }

                    if (!(res.contentLength === undefined)) {
                      _context63.next = 17;
                      break;
                    }

                    throw new RangeError("File download response doesn't contain valid content length header");

                  case 17:
                    if (res.etag) {
                      _context63.next = 19;
                      break;
                    }

                    throw new RangeError("File download response doesn't contain valid etag header");

                  case 19:
                    return _context63.abrupt("return", new _BlobDownloadResponse__WEBPACK_IMPORTED_MODULE_2__["BlobDownloadResponse"](wrappedRes, /*#__PURE__*/function () {
                      var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee55(start) {
                        var _a, updatedDownloadOptions;

                        return regeneratorRuntime.wrap(function _callee55$(_context62) {
                          while (1) {
                            switch (_context62.prev = _context62.next) {
                              case 0:
                                updatedDownloadOptions = {
                                  leaseAccessConditions: options.conditions,
                                  modifiedAccessConditions: {
                                    ifMatch: options.conditions.ifMatch || res.etag,
                                    ifModifiedSince: options.conditions.ifModifiedSince,
                                    ifNoneMatch: options.conditions.ifNoneMatch,
                                    ifUnmodifiedSince: options.conditions.ifUnmodifiedSince,
                                    ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                                  },
                                  range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                                    count: offset + res.contentLength - start,
                                    offset: start
                                  }),
                                  rangeGetContentMD5: options.rangeGetContentMD5,
                                  rangeGetContentCRC64: options.rangeGetContentCrc64,
                                  snapshot: options.snapshot,
                                  cpkInfo: options.customerProvidedKey
                                }; // Debug purpose only
                                // console.log(
                                //   `Read from internal stream, range: ${
                                //     updatedOptions.range
                                //   }, options: ${JSON.stringify(updatedOptions)}`
                                // );

                                _context62.next = 3;
                                return _this42.blobContext.download(Object.assign({
                                  abortSignal: options.abortSignal
                                }, updatedDownloadOptions));

                              case 3:
                                return _context62.abrupt("return", _context62.sent.readableStreamBody);

                              case 4:
                              case "end":
                                return _context62.stop();
                            }
                          }
                        }, _callee55);
                      }));

                      return function (_x77) {
                        return _ref14.apply(this, arguments);
                      };
                    }(), offset, res.contentLength, {
                      maxRetryRequests: options.maxRetryRequests,
                      onProgress: options.onProgress
                    }));

                  case 22:
                    _context63.prev = 22;
                    _context63.t0 = _context63["catch"](7);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context63.t0.message
                    });
                    throw _context63.t0;

                  case 26:
                    _context63.prev = 26;
                    span.end();
                    return _context63.finish(26);

                  case 29:
                  case "end":
                    return _context63.stop();
                }
              }
            }, _callee56, this, [[7, 22, 26, 29]]);
          }));

          function download() {
            return _download.apply(this, arguments);
          }

          return download;
        }()
        /**
         * Returns true if the Azure blob resource represented by this client exists; false otherwise.
         *
         * NOTE: use this function with care since an existing blob might be deleted by other clients or
         * applications. Vice versa new blobs might be added by other clients or applications after this
         * function completes.
         *
         * @param options - options to Exists operation.
         */

      }, {
        key: "exists",
        value: function () {
          var _exists = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
            var options,
                _Object21,
                span,
                updatedOptions,
                _args63 = arguments;

            return regeneratorRuntime.wrap(function _callee57$(_context64) {
              while (1) {
                switch (_context64.prev = _context64.next) {
                  case 0:
                    options = _args63.length > 0 && _args63[0] !== undefined ? _args63[0] : {};
                    _Object21 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-exists", options), span = _Object21.span, updatedOptions = _Object21.updatedOptions;
                    _context64.prev = 2;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context64.next = 6;
                    return this.getProperties({
                      abortSignal: options.abortSignal,
                      customerProvidedKey: options.customerProvidedKey,
                      conditions: options.conditions,
                      tracingOptions: updatedOptions.tracingOptions
                    });

                  case 6:
                    return _context64.abrupt("return", true);

                  case 9:
                    _context64.prev = 9;
                    _context64.t0 = _context64["catch"](2);

                    if (!(_context64.t0.statusCode === 404)) {
                      _context64.next = 14;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: "Expected exception when checking blob existence"
                    });
                    return _context64.abrupt("return", false);

                  case 14:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context64.t0.message
                    });
                    throw _context64.t0;

                  case 16:
                    _context64.prev = 16;
                    span.end();
                    return _context64.finish(16);

                  case 19:
                  case "end":
                    return _context64.stop();
                }
              }
            }, _callee57, this, [[2, 9, 16, 19]]);
          }));

          function exists() {
            return _exists.apply(this, arguments);
          }

          return exists;
        }()
        /**
         * Returns all user-defined metadata, standard HTTP properties, and system properties
         * for the blob. It does not return the content of the blob.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties
         *
         * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if
         * they originally contained uppercase characters. This differs from the metadata keys returned by
         * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which
         * will retain their original casing.
         *
         * @param options - Optional options to Get Properties operation.
         */

      }, {
        key: "getProperties",
        value: function () {
          var _getProperties2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
            var options,
                _a,
                _Object22,
                span,
                updatedOptions,
                res,
                _args64 = arguments;

            return regeneratorRuntime.wrap(function _callee58$(_context65) {
              while (1) {
                switch (_context65.prev = _context65.next) {
                  case 0:
                    options = _args64.length > 0 && _args64[0] !== undefined ? _args64[0] : {};
                    _Object22 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-getProperties", options), span = _Object22.span, updatedOptions = _Object22.updatedOptions;
                    _context65.prev = 2;
                    options.conditions = options.conditions || {};
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context65.next = 7;
                    return this.blobContext.getProperties(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    res = _context65.sent;
                    return _context65.abrupt("return", Object.assign(Object.assign({}, res), {
                      _response: res._response,
                      objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,
                      objectReplicationSourceProperties: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["parseObjectReplicationRecord"])(res.objectReplicationRules)
                    }));

                  case 11:
                    _context65.prev = 11;
                    _context65.t0 = _context65["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context65.t0.message
                    });
                    throw _context65.t0;

                  case 15:
                    _context65.prev = 15;
                    span.end();
                    return _context65.finish(15);

                  case 18:
                  case "end":
                    return _context65.stop();
                }
              }
            }, _callee58, this, [[2, 11, 15, 18]]);
          }));

          function getProperties() {
            return _getProperties2.apply(this, arguments);
          }

          return getProperties;
        }()
        /**
         * Marks the specified blob or snapshot for deletion. The blob is later deleted
         * during garbage collection. Note that in order to delete a blob, you must delete
         * all of its snapshots. You can delete both at the same time with the Delete
         * Blob operation.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
         *
         * @param options - Optional options to Blob Delete operation.
         */

      }, {
        key: "delete",
        value: function () {
          var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {
            var options,
                _a,
                _Object23,
                span,
                updatedOptions,
                _args65 = arguments;

            return regeneratorRuntime.wrap(function _callee59$(_context66) {
              while (1) {
                switch (_context66.prev = _context66.next) {
                  case 0:
                    options = _args65.length > 0 && _args65[0] !== undefined ? _args65[0] : {};
                    _Object23 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-delete", options), span = _Object23.span, updatedOptions = _Object23.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context66.prev = 3;
                    _context66.next = 6;
                    return this.blobContext["delete"](Object.assign({
                      abortSignal: options.abortSignal,
                      deleteSnapshots: options.deleteSnapshots,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context66.abrupt("return", _context66.sent);

                  case 9:
                    _context66.prev = 9;
                    _context66.t0 = _context66["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context66.t0.message
                    });
                    throw _context66.t0;

                  case 13:
                    _context66.prev = 13;
                    span.end();
                    return _context66.finish(13);

                  case 16:
                  case "end":
                    return _context66.stop();
                }
              }
            }, _callee59, this, [[3, 9, 13, 16]]);
          }));

          function _delete() {
            return _delete2.apply(this, arguments);
          }

          return _delete;
        }()
        /**
         * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted
         * during garbage collection. Note that in order to delete a blob, you must delete
         * all of its snapshots. You can delete both at the same time with the Delete
         * Blob operation.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
         *
         * @param options - Optional options to Blob Delete operation.
         */

      }, {
        key: "deleteIfExists",
        value: function () {
          var _deleteIfExists = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
            var options,
                _a,
                _b,
                _Object24,
                span,
                updatedOptions,
                res,
                _args66 = arguments;

            return regeneratorRuntime.wrap(function _callee60$(_context67) {
              while (1) {
                switch (_context67.prev = _context67.next) {
                  case 0:
                    options = _args66.length > 0 && _args66[0] !== undefined ? _args66[0] : {};
                    _Object24 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-deleteIfExists", options), span = _Object24.span, updatedOptions = _Object24.updatedOptions;
                    _context67.prev = 2;
                    _context67.next = 5;
                    return this["delete"](updatedOptions);

                  case 5:
                    res = _context67.sent;
                    return _context67.abrupt("return", Object.assign(Object.assign({
                      succeeded: true
                    }, res), {
                      _response: res._response // _response is made non-enumerable

                    }));

                  case 9:
                    _context67.prev = 9;
                    _context67.t0 = _context67["catch"](2);

                    if (!(((_a = _context67.t0.details) === null || _a === void 0 ? void 0 : _a.errorCode) === "BlobNotFound")) {
                      _context67.next = 14;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: "Expected exception when deleting a blob or snapshot only if it exists."
                    });
                    return _context67.abrupt("return", Object.assign(Object.assign({
                      succeeded: false
                    }, (_b = _context67.t0.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), {
                      _response: _context67.t0.response
                    }));

                  case 14:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context67.t0.message
                    });
                    throw _context67.t0;

                  case 16:
                    _context67.prev = 16;
                    span.end();
                    return _context67.finish(16);

                  case 19:
                  case "end":
                    return _context67.stop();
                }
              }
            }, _callee60, this, [[2, 9, 16, 19]]);
          }));

          function deleteIfExists() {
            return _deleteIfExists.apply(this, arguments);
          }

          return deleteIfExists;
        }()
        /**
         * Restores the contents and metadata of soft deleted blob and any associated
         * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29
         * or later.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob
         *
         * @param options - Optional options to Blob Undelete operation.
         */

      }, {
        key: "undelete",
        value: function () {
          var _undelete = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
            var options,
                _Object25,
                span,
                updatedOptions,
                _args67 = arguments;

            return regeneratorRuntime.wrap(function _callee61$(_context68) {
              while (1) {
                switch (_context68.prev = _context68.next) {
                  case 0:
                    options = _args67.length > 0 && _args67[0] !== undefined ? _args67[0] : {};
                    _Object25 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-undelete", options), span = _Object25.span, updatedOptions = _Object25.updatedOptions;
                    _context68.prev = 2;
                    _context68.next = 5;
                    return this.blobContext.undelete(Object.assign({
                      abortSignal: options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context68.abrupt("return", _context68.sent);

                  case 8:
                    _context68.prev = 8;
                    _context68.t0 = _context68["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context68.t0.message
                    });
                    throw _context68.t0;

                  case 12:
                    _context68.prev = 12;
                    span.end();
                    return _context68.finish(12);

                  case 15:
                  case "end":
                    return _context68.stop();
                }
              }
            }, _callee61, this, [[2, 8, 12, 15]]);
          }));

          function undelete() {
            return _undelete.apply(this, arguments);
          }

          return undelete;
        }()
        /**
         * Sets system properties on the blob.
         *
         * If no value provided, or no value provided for the specified blob HTTP headers,
         * these blob HTTP headers without a value will be cleared.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties
         *
         * @param blobHTTPHeaders - If no value provided, or no value provided for
         *                                                   the specified blob HTTP headers, these blob HTTP
         *                                                   headers without a value will be cleared.
         *                                                   A common header to set is `blobContentType`
         *                                                   enabling the browser to provide functionality
         *                                                   based on file type.
         * @param options - Optional options to Blob Set HTTP Headers operation.
         */

      }, {
        key: "setHTTPHeaders",
        value: function () {
          var _setHTTPHeaders = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee62(blobHTTPHeaders) {
            var options,
                _a,
                _Object26,
                span,
                updatedOptions,
                _args68 = arguments;

            return regeneratorRuntime.wrap(function _callee62$(_context69) {
              while (1) {
                switch (_context69.prev = _context69.next) {
                  case 0:
                    options = _args68.length > 1 && _args68[1] !== undefined ? _args68[1] : {};
                    _Object26 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setHTTPHeaders", options), span = _Object26.span, updatedOptions = _Object26.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context69.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context69.next = 7;
                    return this.blobContext.setHttpHeaders(Object.assign({
                      abortSignal: options.abortSignal,
                      blobHttpHeaders: blobHTTPHeaders,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context69.abrupt("return", _context69.sent);

                  case 10:
                    _context69.prev = 10;
                    _context69.t0 = _context69["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context69.t0.message
                    });
                    throw _context69.t0;

                  case 14:
                    _context69.prev = 14;
                    span.end();
                    return _context69.finish(14);

                  case 17:
                  case "end":
                    return _context69.stop();
                }
              }
            }, _callee62, this, [[3, 10, 14, 17]]);
          }));

          function setHTTPHeaders(_x78) {
            return _setHTTPHeaders.apply(this, arguments);
          }

          return setHTTPHeaders;
        }()
        /**
         * Sets user-defined metadata for the specified blob as one or more name-value pairs.
         *
         * If no option provided, or no metadata defined in the parameter, the blob
         * metadata will be removed.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata
         *
         * @param metadata - Replace existing metadata with this value.
         *                               If no value provided the existing metadata will be removed.
         * @param options - Optional options to Set Metadata operation.
         */

      }, {
        key: "setMetadata",
        value: function () {
          var _setMetadata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee63(metadata) {
            var options,
                _a,
                _Object27,
                span,
                updatedOptions,
                _args69 = arguments;

            return regeneratorRuntime.wrap(function _callee63$(_context70) {
              while (1) {
                switch (_context70.prev = _context70.next) {
                  case 0:
                    options = _args69.length > 1 && _args69[1] !== undefined ? _args69[1] : {};
                    _Object27 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setMetadata", options), span = _Object27.span, updatedOptions = _Object27.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context70.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context70.next = 7;
                    return this.blobContext.setMetadata(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      metadata: metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context70.abrupt("return", _context70.sent);

                  case 10:
                    _context70.prev = 10;
                    _context70.t0 = _context70["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context70.t0.message
                    });
                    throw _context70.t0;

                  case 14:
                    _context70.prev = 14;
                    span.end();
                    return _context70.finish(14);

                  case 17:
                  case "end":
                    return _context70.stop();
                }
              }
            }, _callee63, this, [[3, 10, 14, 17]]);
          }));

          function setMetadata(_x79) {
            return _setMetadata.apply(this, arguments);
          }

          return setMetadata;
        }()
        /**
         * Sets tags on the underlying blob.
         * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.
         * Valid tag key and value characters include lower and upper case letters, digits (0-9),
         * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').
         *
         * @param tags -
         * @param options -
         */

      }, {
        key: "setTags",
        value: function () {
          var _setTags = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee64(tags) {
            var options,
                _a,
                _Object28,
                span,
                updatedOptions,
                _args70 = arguments;

            return regeneratorRuntime.wrap(function _callee64$(_context71) {
              while (1) {
                switch (_context71.prev = _context71.next) {
                  case 0:
                    options = _args70.length > 1 && _args70[1] !== undefined ? _args70[1] : {};
                    _Object28 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setTags", options), span = _Object28.span, updatedOptions = _Object28.updatedOptions;
                    _context71.prev = 2;
                    _context71.next = 5;
                    return this.blobContext.setTags(Object.assign(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)), {
                      tags: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTags"])(tags)
                    }));

                  case 5:
                    return _context71.abrupt("return", _context71.sent);

                  case 8:
                    _context71.prev = 8;
                    _context71.t0 = _context71["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context71.t0.message
                    });
                    throw _context71.t0;

                  case 12:
                    _context71.prev = 12;
                    span.end();
                    return _context71.finish(12);

                  case 15:
                  case "end":
                    return _context71.stop();
                }
              }
            }, _callee64, this, [[2, 8, 12, 15]]);
          }));

          function setTags(_x80) {
            return _setTags.apply(this, arguments);
          }

          return setTags;
        }()
        /**
         * Gets the tags associated with the underlying blob.
         *
         * @param options -
         */

      }, {
        key: "getTags",
        value: function () {
          var _getTags = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {
            var options,
                _a,
                _Object29,
                span,
                updatedOptions,
                response,
                wrappedResponse,
                _args71 = arguments;

            return regeneratorRuntime.wrap(function _callee65$(_context72) {
              while (1) {
                switch (_context72.prev = _context72.next) {
                  case 0:
                    options = _args71.length > 0 && _args71[0] !== undefined ? _args71[0] : {};
                    _Object29 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-getTags", options), span = _Object29.span, updatedOptions = _Object29.updatedOptions;
                    _context72.prev = 2;
                    _context72.next = 5;
                    return this.blobContext.getTags(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    response = _context72.sent;
                    wrappedResponse = Object.assign(Object.assign({}, response), {
                      _response: response._response,
                      tags: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toTags"])({
                        blobTagSet: response.blobTagSet
                      }) || {}
                    });
                    return _context72.abrupt("return", wrappedResponse);

                  case 10:
                    _context72.prev = 10;
                    _context72.t0 = _context72["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context72.t0.message
                    });
                    throw _context72.t0;

                  case 14:
                    _context72.prev = 14;
                    span.end();
                    return _context72.finish(14);

                  case 17:
                  case "end":
                    return _context72.stop();
                }
              }
            }, _callee65, this, [[2, 10, 14, 17]]);
          }));

          function getTags() {
            return _getTags.apply(this, arguments);
          }

          return getTags;
        }()
        /**
         * Get a {@link BlobLeaseClient} that manages leases on the blob.
         *
         * @param proposeLeaseId - Initial proposed lease Id.
         * @returns A new BlobLeaseClient object for managing leases on the blob.
         */

      }, {
        key: "getBlobLeaseClient",
        value: function getBlobLeaseClient(proposeLeaseId) {
          return new _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_20__["BlobLeaseClient"](this, proposeLeaseId);
        }
        /**
         * Creates a read-only snapshot of a blob.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob
         *
         * @param options - Optional options to the Blob Create Snapshot operation.
         */

      }, {
        key: "createSnapshot",
        value: function () {
          var _createSnapshot = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {
            var options,
                _a,
                _Object30,
                span,
                updatedOptions,
                _args72 = arguments;

            return regeneratorRuntime.wrap(function _callee66$(_context73) {
              while (1) {
                switch (_context73.prev = _context73.next) {
                  case 0:
                    options = _args72.length > 0 && _args72[0] !== undefined ? _args72[0] : {};
                    _Object30 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-createSnapshot", options), span = _Object30.span, updatedOptions = _Object30.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context73.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context73.next = 7;
                    return this.blobContext.createSnapshot(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context73.abrupt("return", _context73.sent);

                  case 10:
                    _context73.prev = 10;
                    _context73.t0 = _context73["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context73.t0.message
                    });
                    throw _context73.t0;

                  case 14:
                    _context73.prev = 14;
                    span.end();
                    return _context73.finish(14);

                  case 17:
                  case "end":
                    return _context73.stop();
                }
              }
            }, _callee66, this, [[3, 10, 14, 17]]);
          }));

          function createSnapshot() {
            return _createSnapshot.apply(this, arguments);
          }

          return createSnapshot;
        }()
        /**
         * Asynchronously copies a blob to a destination within the storage account.
         * This method returns a long running operation poller that allows you to wait
         * indefinitely until the copy is completed.
         * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.
         * Note that the onProgress callback will not be invoked if the operation completes in the first
         * request, and attempting to cancel a completed copy will result in an error being thrown.
         *
         * In version 2012-02-12 and later, the source for a Copy Blob operation can be
         * a committed blob in any Azure storage account.
         * Beginning with version 2015-02-21, the source for a Copy Blob operation can be
         * an Azure file in any Azure storage account.
         * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob
         * operation to copy from another storage account.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob
         *
         * Example using automatic polling:
         *
         * ```js
         * const copyPoller = await blobClient.beginCopyFromURL('url');
         * const result = await copyPoller.pollUntilDone();
         * ```
         *
         * Example using manual polling:
         *
         * ```js
         * const copyPoller = await blobClient.beginCopyFromURL('url');
         * while (!poller.isDone()) {
         *    await poller.poll();
         * }
         * const result = copyPoller.getResult();
         * ```
         *
         * Example using progress updates:
         *
         * ```js
         * const copyPoller = await blobClient.beginCopyFromURL('url', {
         *   onProgress(state) {
         *     console.log(`Progress: ${state.copyProgress}`);
         *   }
         * });
         * const result = await copyPoller.pollUntilDone();
         * ```
         *
         * Example using a changing polling interval (default 15 seconds):
         *
         * ```js
         * const copyPoller = await blobClient.beginCopyFromURL('url', {
         *   intervalInMs: 1000 // poll blob every 1 second for copy progress
         * });
         * const result = await copyPoller.pollUntilDone();
         * ```
         *
         * Example using copy cancellation:
         *
         * ```js
         * const copyPoller = await blobClient.beginCopyFromURL('url');
         * // cancel operation after starting it.
         * try {
         *   await copyPoller.cancelOperation();
         *   // calls to get the result now throw PollerCancelledError
         *   await copyPoller.getResult();
         * } catch (err) {
         *   if (err.name === 'PollerCancelledError') {
         *     console.log('The copy was cancelled.');
         *   }
         * }
         * ```
         *
         * @param copySource - url to the source Azure Blob/File.
         * @param options - Optional options to the Blob Start Copy From URL operation.
         */

      }, {
        key: "beginCopyFromURL",
        value: function () {
          var _beginCopyFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee67(copySource) {
            var _this43 = this;

            var options,
                client,
                poller,
                _args73 = arguments;
            return regeneratorRuntime.wrap(function _callee67$(_context74) {
              while (1) {
                switch (_context74.prev = _context74.next) {
                  case 0:
                    options = _args73.length > 1 && _args73[1] !== undefined ? _args73[1] : {};
                    client = {
                      abortCopyFromURL: function abortCopyFromURL() {
                        return _this43.abortCopyFromURL.apply(_this43, arguments);
                      },
                      getProperties: function getProperties() {
                        return _this43.getProperties.apply(_this43, arguments);
                      },
                      startCopyFromURL: function startCopyFromURL() {
                        return _this43.startCopyFromURL.apply(_this43, arguments);
                      }
                    };
                    poller = new _pollers_BlobStartCopyFromUrlPoller__WEBPACK_IMPORTED_MODULE_10__["BlobBeginCopyFromUrlPoller"]({
                      blobClient: client,
                      copySource: copySource,
                      intervalInMs: options.intervalInMs,
                      onProgress: options.onProgress,
                      resumeFrom: options.resumeFrom,
                      startCopyFromURLOptions: options
                    }); // Trigger the startCopyFromURL call by calling poll.
                    // Any errors from this method should be surfaced to the user.

                    _context74.next = 5;
                    return poller.poll();

                  case 5:
                    return _context74.abrupt("return", poller);

                  case 6:
                  case "end":
                    return _context74.stop();
                }
              }
            }, _callee67);
          }));

          function beginCopyFromURL(_x81) {
            return _beginCopyFromURL.apply(this, arguments);
          }

          return beginCopyFromURL;
        }()
        /**
         * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero
         * length and full metadata. Version 2012-02-12 and newer.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob
         *
         * @param copyId - Id of the Copy From URL operation.
         * @param options - Optional options to the Blob Abort Copy From URL operation.
         */

      }, {
        key: "abortCopyFromURL",
        value: function () {
          var _abortCopyFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee68(copyId) {
            var options,
                _Object31,
                span,
                updatedOptions,
                _args74 = arguments;

            return regeneratorRuntime.wrap(function _callee68$(_context75) {
              while (1) {
                switch (_context75.prev = _context75.next) {
                  case 0:
                    options = _args74.length > 1 && _args74[1] !== undefined ? _args74[1] : {};
                    _Object31 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-abortCopyFromURL", options), span = _Object31.span, updatedOptions = _Object31.updatedOptions;
                    _context75.prev = 2;
                    _context75.next = 5;
                    return this.blobContext.abortCopyFromURL(copyId, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context75.abrupt("return", _context75.sent);

                  case 8:
                    _context75.prev = 8;
                    _context75.t0 = _context75["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context75.t0.message
                    });
                    throw _context75.t0;

                  case 12:
                    _context75.prev = 12;
                    span.end();
                    return _context75.finish(12);

                  case 15:
                  case "end":
                    return _context75.stop();
                }
              }
            }, _callee68, this, [[2, 8, 12, 15]]);
          }));

          function abortCopyFromURL(_x82) {
            return _abortCopyFromURL.apply(this, arguments);
          }

          return abortCopyFromURL;
        }()
        /**
         * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not
         * return a response until the copy is complete.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url
         *
         * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication
         * @param options -
         */

      }, {
        key: "syncCopyFromURL",
        value: function () {
          var _syncCopyFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee69(copySource) {
            var options,
                _a,
                _b,
                _c,
                _Object32,
                span,
                updatedOptions,
                _args75 = arguments;

            return regeneratorRuntime.wrap(function _callee69$(_context76) {
              while (1) {
                switch (_context76.prev = _context76.next) {
                  case 0:
                    options = _args75.length > 1 && _args75[1] !== undefined ? _args75[1] : {};
                    _Object32 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-syncCopyFromURL", options), span = _Object32.span, updatedOptions = _Object32.updatedOptions;
                    options.conditions = options.conditions || {};
                    options.sourceConditions = options.sourceConditions || {};
                    _context76.prev = 4;
                    _context76.next = 7;
                    return this.blobContext.copyFromURL(copySource, Object.assign({
                      abortSignal: options.abortSignal,
                      metadata: options.metadata,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      sourceModifiedAccessConditions: {
                        sourceIfMatch: options.sourceConditions.ifMatch,
                        sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,
                        sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,
                        sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince
                      },
                      sourceContentMD5: options.sourceContentMD5,
                      copySourceAuthorization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["httpAuthorizationToString"])(options.sourceAuthorization),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags),
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context76.abrupt("return", _context76.sent);

                  case 10:
                    _context76.prev = 10;
                    _context76.t0 = _context76["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context76.t0.message
                    });
                    throw _context76.t0;

                  case 14:
                    _context76.prev = 14;
                    span.end();
                    return _context76.finish(14);

                  case 17:
                  case "end":
                    return _context76.stop();
                }
              }
            }, _callee69, this, [[4, 10, 14, 17]]);
          }));

          function syncCopyFromURL(_x83) {
            return _syncCopyFromURL.apply(this, arguments);
          }

          return syncCopyFromURL;
        }()
        /**
         * Sets the tier on a blob. The operation is allowed on a page blob in a premium
         * storage account and on a block blob in a blob storage account (locally redundant
         * storage only). A premium page blob's tier determines the allowed size, IOPS,
         * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive
         * storage type. This operation does not update the blob's ETag.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier
         *
         * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.
         * @param options - Optional options to the Blob Set Tier operation.
         */

      }, {
        key: "setAccessTier",
        value: function () {
          var _setAccessTier = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee70(tier) {
            var options,
                _a,
                _Object33,
                span,
                updatedOptions,
                _args76 = arguments;

            return regeneratorRuntime.wrap(function _callee70$(_context77) {
              while (1) {
                switch (_context77.prev = _context77.next) {
                  case 0:
                    options = _args76.length > 1 && _args76[1] !== undefined ? _args76[1] : {};
                    _Object33 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setAccessTier", options), span = _Object33.span, updatedOptions = _Object33.updatedOptions;
                    _context77.prev = 2;
                    _context77.next = 5;
                    return this.blobContext.setTier(Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(tier), Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      rehydratePriority: options.rehydratePriority
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context77.abrupt("return", _context77.sent);

                  case 8:
                    _context77.prev = 8;
                    _context77.t0 = _context77["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context77.t0.message
                    });
                    throw _context77.t0;

                  case 12:
                    _context77.prev = 12;
                    span.end();
                    return _context77.finish(12);

                  case 15:
                  case "end":
                    return _context77.stop();
                }
              }
            }, _callee70, this, [[2, 8, 12, 15]]);
          }));

          function setAccessTier(_x84) {
            return _setAccessTier.apply(this, arguments);
          }

          return setAccessTier;
        }()
      }, {
        key: "downloadToBuffer",
        value: function () {
          var _downloadToBuffer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee73(param1, param2, param3) {
            var _this44 = this;

            var param4,
                buffer,
                offset,
                count,
                options,
                _Object34,
                span,
                updatedOptions,
                _ret,
                _args79 = arguments;

            return regeneratorRuntime.wrap(function _callee73$(_context80) {
              while (1) {
                switch (_context80.prev = _context80.next) {
                  case 0:
                    param4 = _args79.length > 3 && _args79[3] !== undefined ? _args79[3] : {};
                    offset = 0;
                    count = 0;
                    options = param4;

                    if (param1 instanceof Buffer) {
                      buffer = param1;
                      offset = param2 || 0;
                      count = typeof param3 === "number" ? param3 : 0;
                    } else {
                      offset = typeof param1 === "number" ? param1 : 0;
                      count = typeof param2 === "number" ? param2 : 0;
                      options = param3 || {};
                    }

                    _Object34 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-downloadToBuffer", options), span = _Object34.span, updatedOptions = _Object34.updatedOptions;
                    _context80.prev = 6;
                    return _context80.delegateYield( /*#__PURE__*/regeneratorRuntime.mark(function _callee72() {
                      var response, transferProgress, batch, _loop2, off;

                      return regeneratorRuntime.wrap(function _callee72$(_context79) {
                        while (1) {
                          switch (_context79.prev = _context79.next) {
                            case 0:
                              if (!options.blockSize) {
                                options.blockSize = 0;
                              }

                              if (!(options.blockSize < 0)) {
                                _context79.next = 3;
                                break;
                              }

                              throw new RangeError("blockSize option must be >= 0");

                            case 3:
                              if (options.blockSize === 0) {
                                options.blockSize = _utils_constants__WEBPACK_IMPORTED_MODULE_15__["DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES"];
                              }

                              if (!(offset < 0)) {
                                _context79.next = 6;
                                break;
                              }

                              throw new RangeError("offset option must be >= 0");

                            case 6:
                              if (!(count && count <= 0)) {
                                _context79.next = 8;
                                break;
                              }

                              throw new RangeError("count option must be greater than 0");

                            case 8:
                              if (!options.conditions) {
                                options.conditions = {};
                              } // Customer doesn't specify length, get it


                              if (count) {
                                _context79.next = 16;
                                break;
                              }

                              _context79.next = 12;
                              return _this44.getProperties(Object.assign(Object.assign({}, options), {
                                tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))
                              }));

                            case 12:
                              response = _context79.sent;
                              count = response.contentLength - offset;

                              if (!(count < 0)) {
                                _context79.next = 16;
                                break;
                              }

                              throw new RangeError("offset ".concat(offset, " shouldn't be larger than blob size ").concat(response.contentLength));

                            case 16:
                              if (buffer) {
                                _context79.next = 24;
                                break;
                              }

                              _context79.prev = 17;
                              buffer = Buffer.alloc(count);
                              _context79.next = 24;
                              break;

                            case 21:
                              _context79.prev = 21;
                              _context79.t0 = _context79["catch"](17);
                              throw new Error("Unable to allocate the buffer of size: ".concat(count, "(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\t ").concat(_context79.t0.message));

                            case 24:
                              if (!(buffer.length < count)) {
                                _context79.next = 26;
                                break;
                              }

                              throw new RangeError("The buffer's size should be equal to or larger than the request count of bytes: ".concat(count));

                            case 26:
                              transferProgress = 0;
                              batch = new _utils_Batch__WEBPACK_IMPORTED_MODULE_13__["Batch"](options.concurrency);

                              _loop2 = function _loop2(off) {
                                batch.addOperation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee71() {
                                  var chunkEnd, response, stream;
                                  return regeneratorRuntime.wrap(function _callee71$(_context78) {
                                    while (1) {
                                      switch (_context78.prev = _context78.next) {
                                        case 0:
                                          // Exclusive chunk end position
                                          chunkEnd = offset + count;

                                          if (off + options.blockSize < chunkEnd) {
                                            chunkEnd = off + options.blockSize;
                                          }

                                          _context78.next = 4;
                                          return _this44.download(off, chunkEnd - off, {
                                            abortSignal: options.abortSignal,
                                            conditions: options.conditions,
                                            maxRetryRequests: options.maxRetryRequestsPerBlock,
                                            customerProvidedKey: options.customerProvidedKey,
                                            tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))
                                          });

                                        case 4:
                                          response = _context78.sent;
                                          stream = response.readableStreamBody;
                                          _context78.next = 8;
                                          return Object(_utils_utils_node__WEBPACK_IMPORTED_MODULE_18__["streamToBuffer"])(stream, buffer, off - offset, chunkEnd - offset);

                                        case 8:
                                          // Update progress after block is downloaded, in case of block trying
                                          // Could provide finer grained progress updating inside HTTP requests,
                                          // only if convenience layer download try is enabled
                                          transferProgress += chunkEnd - off;

                                          if (options.onProgress) {
                                            options.onProgress({
                                              loadedBytes: transferProgress
                                            });
                                          }

                                        case 10:
                                        case "end":
                                          return _context78.stop();
                                      }
                                    }
                                  }, _callee71);
                                })));
                              };

                              for (off = offset; off < offset + count; off = off + options.blockSize) {
                                _loop2(off);
                              }

                              _context79.next = 32;
                              return batch["do"]();

                            case 32:
                              return _context79.abrupt("return", {
                                v: buffer
                              });

                            case 33:
                            case "end":
                              return _context79.stop();
                          }
                        }
                      }, _callee72, null, [[17, 21]]);
                    })(), "t0", 8);

                  case 8:
                    _ret = _context80.t0;

                    if (!(typeof _ret === "object")) {
                      _context80.next = 11;
                      break;
                    }

                    return _context80.abrupt("return", _ret.v);

                  case 11:
                    _context80.next = 17;
                    break;

                  case 13:
                    _context80.prev = 13;
                    _context80.t1 = _context80["catch"](6);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context80.t1.message
                    });
                    throw _context80.t1;

                  case 17:
                    _context80.prev = 17;
                    span.end();
                    return _context80.finish(17);

                  case 20:
                  case "end":
                    return _context80.stop();
                }
              }
            }, _callee73, null, [[6, 13, 17, 20]]);
          }));

          function downloadToBuffer(_x85, _x86, _x87) {
            return _downloadToBuffer.apply(this, arguments);
          }

          return downloadToBuffer;
        }()
        /**
         * ONLY AVAILABLE IN NODE.JS RUNTIME.
         *
         * Downloads an Azure Blob to a local file.
         * Fails if the the given file path already exits.
         * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.
         *
         * @param filePath -
         * @param offset - From which position of the block blob to download.
         * @param count - How much data to be downloaded. Will download to the end when passing undefined.
         * @param options - Options to Blob download options.
         * @returns The response data for blob download operation,
         *                                                 but with readableStreamBody set to undefined since its
         *                                                 content is already read and written into a local file
         *                                                 at the specified path.
         */

      }, {
        key: "downloadToFile",
        value: function () {
          var _downloadToFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee74(filePath) {
            var offset,
                count,
                options,
                _Object35,
                span,
                updatedOptions,
                response,
                _args80 = arguments;

            return regeneratorRuntime.wrap(function _callee74$(_context81) {
              while (1) {
                switch (_context81.prev = _context81.next) {
                  case 0:
                    offset = _args80.length > 1 && _args80[1] !== undefined ? _args80[1] : 0;
                    count = _args80.length > 2 ? _args80[2] : undefined;
                    options = _args80.length > 3 && _args80[3] !== undefined ? _args80[3] : {};
                    _Object35 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-downloadToFile", options), span = _Object35.span, updatedOptions = _Object35.updatedOptions;
                    _context81.prev = 4;
                    _context81.next = 7;
                    return this.download(offset, count, Object.assign(Object.assign({}, options), {
                      tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))
                    }));

                  case 7:
                    response = _context81.sent;

                    if (!response.readableStreamBody) {
                      _context81.next = 11;
                      break;
                    }

                    _context81.next = 11;
                    return Object(_utils_utils_node__WEBPACK_IMPORTED_MODULE_18__["readStreamToLocalFile"])(response.readableStreamBody, filePath);

                  case 11:
                    // The stream is no longer accessible so setting it to undefined.
                    response.blobDownloadStream = undefined;
                    return _context81.abrupt("return", response);

                  case 15:
                    _context81.prev = 15;
                    _context81.t0 = _context81["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context81.t0.message
                    });
                    throw _context81.t0;

                  case 19:
                    _context81.prev = 19;
                    span.end();
                    return _context81.finish(19);

                  case 22:
                  case "end":
                    return _context81.stop();
                }
              }
            }, _callee74, this, [[4, 15, 19, 22]]);
          }));

          function downloadToFile(_x88) {
            return _downloadToFile.apply(this, arguments);
          }

          return downloadToFile;
        }()
      }, {
        key: "getBlobAndContainerNamesFromUrl",
        value: function getBlobAndContainerNamesFromUrl() {
          var containerName;
          var blobName;

          try {
            //  URL may look like the following
            // "https://myaccount.blob.core.windows.net/mycontainer/blob?sasString";
            // "https://myaccount.blob.core.windows.net/mycontainer/blob";
            // "https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString";
            // "https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt";
            // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`
            // http://localhost:10001/devstoreaccount1/containername/blob
            var parsedUrl = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(this.url);

            if (parsedUrl.getHost().split(".")[1] === "blob") {
              // "https://myaccount.blob.core.windows.net/containername/blob".
              // .getPath() -> /containername/blob
              var pathComponents = parsedUrl.getPath().match("/([^/]*)(/(.*))?");
              containerName = pathComponents[1];
              blobName = pathComponents[3];
            } else if (Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["isIpEndpointStyle"])(parsedUrl)) {
              // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob
              // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob
              // .getPath() -> /devstoreaccount1/containername/blob
              var _pathComponents = parsedUrl.getPath().match("/([^/]*)/([^/]*)(/(.*))?");

              containerName = _pathComponents[2];
              blobName = _pathComponents[4];
            } else {
              // "https://customdomain.com/containername/blob".
              // .getPath() -> /containername/blob
              var _pathComponents2 = parsedUrl.getPath().match("/([^/]*)(/(.*))?");

              containerName = _pathComponents2[1];
              blobName = _pathComponents2[3];
            } // decode the encoded blobName, containerName - to get all the special characters that might be present in them


            containerName = decodeURIComponent(containerName);
            blobName = decodeURIComponent(blobName); // Azure Storage Server will replace "\" with "/" in the blob names
            //   doing the same in the SDK side so that the user doesn't have to replace "\" instances in the blobName

            blobName = blobName.replace(/\\/g, "/");

            if (!containerName) {
              throw new Error("Provided containerName is invalid.");
            }

            return {
              blobName: blobName,
              containerName: containerName
            };
          } catch (error) {
            throw new Error("Unable to extract blobName and containerName with provided information.");
          }
        }
        /**
         * Asynchronously copies a blob to a destination within the storage account.
         * In version 2012-02-12 and later, the source for a Copy Blob operation can be
         * a committed blob in any Azure storage account.
         * Beginning with version 2015-02-21, the source for a Copy Blob operation can be
         * an Azure file in any Azure storage account.
         * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob
         * operation to copy from another storage account.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob
         *
         * @param copySource - url to the source Azure Blob/File.
         * @param options - Optional options to the Blob Start Copy From URL operation.
         */

      }, {
        key: "startCopyFromURL",
        value: function () {
          var _startCopyFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee75(copySource) {
            var options,
                _a,
                _b,
                _c,
                _Object36,
                span,
                updatedOptions,
                _args81 = arguments;

            return regeneratorRuntime.wrap(function _callee75$(_context82) {
              while (1) {
                switch (_context82.prev = _context82.next) {
                  case 0:
                    options = _args81.length > 1 && _args81[1] !== undefined ? _args81[1] : {};
                    _Object36 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-startCopyFromURL", options), span = _Object36.span, updatedOptions = _Object36.updatedOptions;
                    options.conditions = options.conditions || {};
                    options.sourceConditions = options.sourceConditions || {};
                    _context82.prev = 4;
                    _context82.next = 7;
                    return this.blobContext.startCopyFromURL(copySource, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      sourceModifiedAccessConditions: {
                        sourceIfMatch: options.sourceConditions.ifMatch,
                        sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,
                        sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,
                        sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,
                        sourceIfTags: options.sourceConditions.tagConditions
                      },
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold,
                      rehydratePriority: options.rehydratePriority,
                      tier: Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(options.tier),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags),
                      sealBlob: options.sealBlob
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context82.abrupt("return", _context82.sent);

                  case 10:
                    _context82.prev = 10;
                    _context82.t0 = _context82["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context82.t0.message
                    });
                    throw _context82.t0;

                  case 14:
                    _context82.prev = 14;
                    span.end();
                    return _context82.finish(14);

                  case 17:
                  case "end":
                    return _context82.stop();
                }
              }
            }, _callee75, this, [[4, 10, 14, 17]]);
          }));

          function startCopyFromURL(_x89) {
            return _startCopyFromURL.apply(this, arguments);
          }

          return startCopyFromURL;
        }()
        /**
         * Only available for BlobClient constructed with a shared key credential.
         *
         * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties
         * and parameters passed in. The SAS is signed by the shared key credential of the client.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas
         *
         * @param options - Optional parameters.
         * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.
         */

      }, {
        key: "generateSasUrl",
        value: function generateSasUrl(options) {
          var _this45 = this;

          return new Promise(function (resolve) {
            if (!(_this45.credential instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"])) {
              throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");
            }

            var sas = Object(_sas_BlobSASSignatureValues__WEBPACK_IMPORTED_MODULE_19__["generateBlobSASQueryParameters"])(Object.assign({
              containerName: _this45._containerName,
              blobName: _this45._name,
              snapshotTime: _this45._snapshot,
              versionId: _this45._versionId
            }, options), _this45.credential).toString();
            resolve(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLQuery"])(_this45.url, sas));
          });
        }
        /**
         * Delete the immutablility policy on the blob.
         *
         * @param options - Optional options to delete immutability policy on the blob.
         */

      }, {
        key: "deleteImmutabilityPolicy",
        value: function () {
          var _deleteImmutabilityPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee76(options) {
            var _Object37, span, updatedOptions;

            return regeneratorRuntime.wrap(function _callee76$(_context83) {
              while (1) {
                switch (_context83.prev = _context83.next) {
                  case 0:
                    _Object37 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-deleteImmutabilityPolicy", options), span = _Object37.span, updatedOptions = _Object37.updatedOptions;
                    _context83.prev = 1;
                    _context83.next = 4;
                    return this.blobContext.deleteImmutabilityPolicy(Object.assign({
                      abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 4:
                    return _context83.abrupt("return", _context83.sent);

                  case 7:
                    _context83.prev = 7;
                    _context83.t0 = _context83["catch"](1);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context83.t0.message
                    });
                    throw _context83.t0;

                  case 11:
                    _context83.prev = 11;
                    span.end();
                    return _context83.finish(11);

                  case 14:
                  case "end":
                    return _context83.stop();
                }
              }
            }, _callee76, this, [[1, 7, 11, 14]]);
          }));

          function deleteImmutabilityPolicy(_x90) {
            return _deleteImmutabilityPolicy.apply(this, arguments);
          }

          return deleteImmutabilityPolicy;
        }()
        /**
         * Set immutablility policy on the blob.
         *
         * @param options - Optional options to set immutability policy on the blob.
         */

      }, {
        key: "setImmutabilityPolicy",
        value: function () {
          var _setImmutabilityPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee77(immutabilityPolicy, options) {
            var _Object38, span, updatedOptions;

            return regeneratorRuntime.wrap(function _callee77$(_context84) {
              while (1) {
                switch (_context84.prev = _context84.next) {
                  case 0:
                    _Object38 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setImmutabilityPolicy", options), span = _Object38.span, updatedOptions = _Object38.updatedOptions;
                    _context84.prev = 1;
                    _context84.next = 4;
                    return this.blobContext.setImmutabilityPolicy(Object.assign({
                      abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal,
                      immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn,
                      immutabilityPolicyMode: immutabilityPolicy.policyMode,
                      modifiedAccessConditions: options === null || options === void 0 ? void 0 : options.modifiedAccessCondition
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 4:
                    return _context84.abrupt("return", _context84.sent);

                  case 7:
                    _context84.prev = 7;
                    _context84.t0 = _context84["catch"](1);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context84.t0.message
                    });
                    throw _context84.t0;

                  case 11:
                    _context84.prev = 11;
                    span.end();
                    return _context84.finish(11);

                  case 14:
                  case "end":
                    return _context84.stop();
                }
              }
            }, _callee77, this, [[1, 7, 11, 14]]);
          }));

          function setImmutabilityPolicy(_x91, _x92) {
            return _setImmutabilityPolicy.apply(this, arguments);
          }

          return setImmutabilityPolicy;
        }()
        /**
         * Set legal hold on the blob.
         *
         * @param options - Optional options to set legal hold on the blob.
         */

      }, {
        key: "setLegalHold",
        value: function () {
          var _setLegalHold = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee78(legalHoldEnabled, options) {
            var _Object39, span, updatedOptions;

            return regeneratorRuntime.wrap(function _callee78$(_context85) {
              while (1) {
                switch (_context85.prev = _context85.next) {
                  case 0:
                    _Object39 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlobClient-setLegalHold", options), span = _Object39.span, updatedOptions = _Object39.updatedOptions;
                    _context85.prev = 1;
                    _context85.next = 4;
                    return this.blobContext.setLegalHold(legalHoldEnabled, Object.assign({
                      abortSignal: options === null || options === void 0 ? void 0 : options.abortSignal
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 4:
                    return _context85.abrupt("return", _context85.sent);

                  case 7:
                    _context85.prev = 7;
                    _context85.t0 = _context85["catch"](1);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context85.t0.message
                    });
                    throw _context85.t0;

                  case 11:
                    _context85.prev = 11;
                    span.end();
                    return _context85.finish(11);

                  case 14:
                  case "end":
                    return _context85.stop();
                }
              }
            }, _callee78, this, [[1, 7, 11, 14]]);
          }));

          function setLegalHold(_x93, _x94) {
            return _setLegalHold.apply(this, arguments);
          }

          return setLegalHold;
        }()
      }]);

      return BlobClient;
    }(_StorageClient__WEBPACK_IMPORTED_MODULE_12__["StorageClient"]);
    /**
     * AppendBlobClient defines a set of operations applicable to append blobs.
     */


    var AppendBlobClient = /*#__PURE__*/function (_BlobClient) {
      _inherits(AppendBlobClient, _BlobClient);

      var _super28 = _createSuper(AppendBlobClient);

      function AppendBlobClient(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this46;

        _classCallCheck(this, AppendBlobClient);

        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.
        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);
        var pipeline;
        var url;
        options = options || {};

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["isPipelineLike"])(credentialOrPipelineOrContainerName)) {
          // (url: string, pipeline: Pipeline)
          url = urlOrConnectionString;
          pipeline = credentialOrPipelineOrContainerName;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrPipelineOrContainerName instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"] || credentialOrPipelineOrContainerName instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrPipelineOrContainerName)) {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;
          url = urlOrConnectionString;
          options = blobNameOrOptions;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(credentialOrPipelineOrContainerName, options);
        } else if (!credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName !== "string") {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          url = urlOrConnectionString; // The second parameter is undefined. Use anonymous credential.

          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
        } else if (credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName === "string" && blobNameOrOptions && typeof blobNameOrOptions === "string") {
          // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)
          var containerName = credentialOrPipelineOrContainerName;
          var blobName = blobNameOrOptions;
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["extractConnectionStringParts"])(urlOrConnectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(sharedKeyCredential, options);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) + "?" + extractedCreds.accountSas;
            pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        } else {
          throw new Error("Expecting non-empty strings for containerName and blobName parameters");
        }

        _this46 = _super28.call(this, url, pipeline);
        _this46.appendBlobContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__["AppendBlob"](_this46.storageClientContext);
        return _this46;
      }
      /**
       * Creates a new AppendBlobClient object identical to the source but with the
       * specified snapshot timestamp.
       * Provide "" will remove the snapshot and return a Client to the base blob.
       *
       * @param snapshot - The snapshot timestamp.
       * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.
       */


      _createClass(AppendBlobClient, [{
        key: "withSnapshot",
        value: function withSnapshot(snapshot) {
          return new AppendBlobClient(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["setURLParameter"])(this.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);
        }
        /**
         * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param options - Options to the Append Block Create operation.
         *
         *
         * Example usage:
         *
         * ```js
         * const appendBlobClient = containerClient.getAppendBlobClient("<blob name>");
         * await appendBlobClient.create();
         * ```
         */

      }, {
        key: "create",
        value: function () {
          var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee79() {
            var options,
                _a,
                _b,
                _c,
                _Object40,
                span,
                updatedOptions,
                _args85 = arguments;

            return regeneratorRuntime.wrap(function _callee79$(_context86) {
              while (1) {
                switch (_context86.prev = _context86.next) {
                  case 0:
                    options = _args85.length > 0 && _args85[0] !== undefined ? _args85[0] : {};
                    _Object40 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("AppendBlobClient-create", options), span = _Object40.span, updatedOptions = _Object40.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context86.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context86.next = 7;
                    return this.appendBlobContext.create(0, Object.assign({
                      abortSignal: options.abortSignal,
                      blobHttpHeaders: options.blobHTTPHeaders,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold,
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context86.abrupt("return", _context86.sent);

                  case 10:
                    _context86.prev = 10;
                    _context86.t0 = _context86["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context86.t0.message
                    });
                    throw _context86.t0;

                  case 14:
                    _context86.prev = 14;
                    span.end();
                    return _context86.finish(14);

                  case 17:
                  case "end":
                    return _context86.stop();
                }
              }
            }, _callee79, this, [[3, 10, 14, 17]]);
          }));

          function create() {
            return _create.apply(this, arguments);
          }

          return create;
        }()
        /**
         * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.
         * If the blob with the same name already exists, the content of the existing blob will remain unchanged.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param options -
         */

      }, {
        key: "createIfNotExists",
        value: function () {
          var _createIfNotExists = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee80() {
            var options,
                _a,
                _b,
                _Object41,
                span,
                updatedOptions,
                conditions,
                res,
                _args86 = arguments;

            return regeneratorRuntime.wrap(function _callee80$(_context87) {
              while (1) {
                switch (_context87.prev = _context87.next) {
                  case 0:
                    options = _args86.length > 0 && _args86[0] !== undefined ? _args86[0] : {};
                    _Object41 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("AppendBlobClient-createIfNotExists", options), span = _Object41.span, updatedOptions = _Object41.updatedOptions;
                    conditions = {
                      ifNoneMatch: _utils_constants__WEBPACK_IMPORTED_MODULE_15__["ETagAny"]
                    };
                    _context87.prev = 3;
                    _context87.next = 6;
                    return this.create(Object.assign(Object.assign({}, updatedOptions), {
                      conditions: conditions
                    }));

                  case 6:
                    res = _context87.sent;
                    return _context87.abrupt("return", Object.assign(Object.assign({
                      succeeded: true
                    }, res), {
                      _response: res._response // _response is made non-enumerable

                    }));

                  case 10:
                    _context87.prev = 10;
                    _context87.t0 = _context87["catch"](3);

                    if (!(((_a = _context87.t0.details) === null || _a === void 0 ? void 0 : _a.errorCode) === "BlobAlreadyExists")) {
                      _context87.next = 15;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: "Expected exception when creating a blob only if it does not already exist."
                    });
                    return _context87.abrupt("return", Object.assign(Object.assign({
                      succeeded: false
                    }, (_b = _context87.t0.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), {
                      _response: _context87.t0.response
                    }));

                  case 15:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context87.t0.message
                    });
                    throw _context87.t0;

                  case 17:
                    _context87.prev = 17;
                    span.end();
                    return _context87.finish(17);

                  case 20:
                  case "end":
                    return _context87.stop();
                }
              }
            }, _callee80, this, [[3, 10, 17, 20]]);
          }));

          function createIfNotExists() {
            return _createIfNotExists.apply(this, arguments);
          }

          return createIfNotExists;
        }()
        /**
         * Seals the append blob, making it read only.
         *
         * @param options -
         */

      }, {
        key: "seal",
        value: function () {
          var _seal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {
            var options,
                _a,
                _Object42,
                span,
                updatedOptions,
                _args87 = arguments;

            return regeneratorRuntime.wrap(function _callee81$(_context88) {
              while (1) {
                switch (_context88.prev = _context88.next) {
                  case 0:
                    options = _args87.length > 0 && _args87[0] !== undefined ? _args87[0] : {};
                    _Object42 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("AppendBlobClient-seal", options), span = _Object42.span, updatedOptions = _Object42.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context88.prev = 3;
                    _context88.next = 6;
                    return this.appendBlobContext.seal(Object.assign({
                      abortSignal: options.abortSignal,
                      appendPositionAccessConditions: options.conditions,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context88.abrupt("return", _context88.sent);

                  case 9:
                    _context88.prev = 9;
                    _context88.t0 = _context88["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context88.t0.message
                    });
                    throw _context88.t0;

                  case 13:
                    _context88.prev = 13;
                    span.end();
                    return _context88.finish(13);

                  case 16:
                  case "end":
                    return _context88.stop();
                }
              }
            }, _callee81, this, [[3, 9, 13, 16]]);
          }));

          function seal() {
            return _seal.apply(this, arguments);
          }

          return seal;
        }()
        /**
         * Commits a new block of data to the end of the existing append blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/append-block
         *
         * @param body - Data to be appended.
         * @param contentLength - Length of the body in bytes.
         * @param options - Options to the Append Block operation.
         *
         *
         * Example usage:
         *
         * ```js
         * const content = "Hello World!";
         *
         * // Create a new append blob and append data to the blob.
         * const newAppendBlobClient = containerClient.getAppendBlobClient("<blob name>");
         * await newAppendBlobClient.create();
         * await newAppendBlobClient.appendBlock(content, content.length);
         *
         * // Append data to an existing append blob.
         * const existingAppendBlobClient = containerClient.getAppendBlobClient("<blob name>");
         * await existingAppendBlobClient.appendBlock(content, content.length);
         * ```
         */

      }, {
        key: "appendBlock",
        value: function () {
          var _appendBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee82(body, contentLength) {
            var options,
                _a,
                _Object43,
                span,
                updatedOptions,
                _args88 = arguments;

            return regeneratorRuntime.wrap(function _callee82$(_context89) {
              while (1) {
                switch (_context89.prev = _context89.next) {
                  case 0:
                    options = _args88.length > 2 && _args88[2] !== undefined ? _args88[2] : {};
                    _Object43 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("AppendBlobClient-appendBlock", options), span = _Object43.span, updatedOptions = _Object43.updatedOptions;
                    options.conditions = options.conditions || {};
                    _context89.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context89.next = 7;
                    return this.appendBlobContext.appendBlock(contentLength, body, Object.assign({
                      abortSignal: options.abortSignal,
                      appendPositionAccessConditions: options.conditions,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      requestOptions: {
                        onUploadProgress: options.onProgress
                      },
                      transactionalContentMD5: options.transactionalContentMD5,
                      transactionalContentCrc64: options.transactionalContentCrc64,
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context89.abrupt("return", _context89.sent);

                  case 10:
                    _context89.prev = 10;
                    _context89.t0 = _context89["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context89.t0.message
                    });
                    throw _context89.t0;

                  case 14:
                    _context89.prev = 14;
                    span.end();
                    return _context89.finish(14);

                  case 17:
                  case "end":
                    return _context89.stop();
                }
              }
            }, _callee82, this, [[3, 10, 14, 17]]);
          }));

          function appendBlock(_x95, _x96) {
            return _appendBlock.apply(this, arguments);
          }

          return appendBlock;
        }()
        /**
         * The Append Block operation commits a new block of data to the end of an existing append blob
         * where the contents are read from a source url.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url
         *
         * @param sourceURL -
         *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can
         *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob
         *                 must either be public or must be authenticated via a shared access signature. If the source blob is
         *                 public, no authentication is required to perform the operation.
         * @param sourceOffset - Offset in source to be appended
         * @param count - Number of bytes to be appended as a block
         * @param options -
         */

      }, {
        key: "appendBlockFromURL",
        value: function () {
          var _appendBlockFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee83(sourceURL, sourceOffset, count) {
            var options,
                _a,
                _Object44,
                span,
                updatedOptions,
                _args89 = arguments;

            return regeneratorRuntime.wrap(function _callee83$(_context90) {
              while (1) {
                switch (_context90.prev = _context90.next) {
                  case 0:
                    options = _args89.length > 3 && _args89[3] !== undefined ? _args89[3] : {};
                    _Object44 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("AppendBlobClient-appendBlockFromURL", options), span = _Object44.span, updatedOptions = _Object44.updatedOptions;
                    options.conditions = options.conditions || {};
                    options.sourceConditions = options.sourceConditions || {};
                    _context90.prev = 4;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context90.next = 8;
                    return this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, Object.assign({
                      abortSignal: options.abortSignal,
                      sourceRange: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: sourceOffset,
                        count: count
                      }),
                      sourceContentMD5: options.sourceContentMD5,
                      sourceContentCrc64: options.sourceContentCrc64,
                      leaseAccessConditions: options.conditions,
                      appendPositionAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      sourceModifiedAccessConditions: {
                        sourceIfMatch: options.sourceConditions.ifMatch,
                        sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,
                        sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,
                        sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince
                      },
                      copySourceAuthorization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["httpAuthorizationToString"])(options.sourceAuthorization),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    return _context90.abrupt("return", _context90.sent);

                  case 11:
                    _context90.prev = 11;
                    _context90.t0 = _context90["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context90.t0.message
                    });
                    throw _context90.t0;

                  case 15:
                    _context90.prev = 15;
                    span.end();
                    return _context90.finish(15);

                  case 18:
                  case "end":
                    return _context90.stop();
                }
              }
            }, _callee83, this, [[4, 11, 15, 18]]);
          }));

          function appendBlockFromURL(_x97, _x98, _x99) {
            return _appendBlockFromURL.apply(this, arguments);
          }

          return appendBlockFromURL;
        }()
      }]);

      return AppendBlobClient;
    }(BlobClient);
    /**
     * BlockBlobClient defines a set of operations applicable to block blobs.
     */


    var BlockBlobClient = /*#__PURE__*/function (_BlobClient2) {
      _inherits(BlockBlobClient, _BlobClient2);

      var _super29 = _createSuper(BlockBlobClient);

      function BlockBlobClient(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this47;

        _classCallCheck(this, BlockBlobClient);

        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.
        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);
        var pipeline;
        var url;
        options = options || {};

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["isPipelineLike"])(credentialOrPipelineOrContainerName)) {
          // (url: string, pipeline: Pipeline)
          url = urlOrConnectionString;
          pipeline = credentialOrPipelineOrContainerName;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrPipelineOrContainerName instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"] || credentialOrPipelineOrContainerName instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrPipelineOrContainerName)) {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          url = urlOrConnectionString;
          options = blobNameOrOptions;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(credentialOrPipelineOrContainerName, options);
        } else if (!credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName !== "string") {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          // The second parameter is undefined. Use anonymous credential.
          url = urlOrConnectionString;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
        } else if (credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName === "string" && blobNameOrOptions && typeof blobNameOrOptions === "string") {
          // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)
          var containerName = credentialOrPipelineOrContainerName;
          var blobName = blobNameOrOptions;
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["extractConnectionStringParts"])(urlOrConnectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(sharedKeyCredential, options);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) + "?" + extractedCreds.accountSas;
            pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        } else {
          throw new Error("Expecting non-empty strings for containerName and blobName parameters");
        }

        _this47 = _super29.call(this, url, pipeline);
        _this47.blockBlobContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__["BlockBlob"](_this47.storageClientContext);
        _this47._blobContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__["Blob"](_this47.storageClientContext);
        return _this47;
      }
      /**
       * Creates a new BlockBlobClient object identical to the source but with the
       * specified snapshot timestamp.
       * Provide "" will remove the snapshot and return a URL to the base blob.
       *
       * @param snapshot - The snapshot timestamp.
       * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.
       */


      _createClass(BlockBlobClient, [{
        key: "withSnapshot",
        value: function withSnapshot(snapshot) {
          return new BlockBlobClient(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["setURLParameter"])(this.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);
        }
        /**
         * ONLY AVAILABLE IN NODE.JS RUNTIME.
         *
         * Quick query for a JSON or CSV formatted blob.
         *
         * Example usage (Node.js):
         *
         * ```js
         * // Query and convert a blob to a string
         * const queryBlockBlobResponse = await blockBlobClient.query("select * from BlobStorage");
         * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();
         * console.log("Query blob content:", downloaded);
         *
         * async function streamToBuffer(readableStream) {
         *   return new Promise((resolve, reject) => {
         *     const chunks = [];
         *     readableStream.on("data", (data) => {
         *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));
         *     });
         *     readableStream.on("end", () => {
         *       resolve(Buffer.concat(chunks));
         *     });
         *     readableStream.on("error", reject);
         *   });
         * }
         * ```
         *
         * @param query -
         * @param options -
         */

      }, {
        key: "query",
        value: function () {
          var _query2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee84(_query) {
            var options,
                _a,
                _Object45,
                span,
                updatedOptions,
                response,
                _args90 = arguments;

            return regeneratorRuntime.wrap(function _callee84$(_context91) {
              while (1) {
                switch (_context91.prev = _context91.next) {
                  case 0:
                    options = _args90.length > 1 && _args90[1] !== undefined ? _args90[1] : {};
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _Object45 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-query", options), span = _Object45.span, updatedOptions = _Object45.updatedOptions;
                    _context91.prev = 3;

                    if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
                      _context91.next = 6;
                      break;
                    }

                    throw new Error("This operation currently is only supported in Node.js.");

                  case 6:
                    _context91.next = 8;
                    return this._blobContext.query(Object.assign({
                      abortSignal: options.abortSignal,
                      queryRequest: {
                        queryType: "SQL",
                        expression: _query,
                        inputSerialization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toQuerySerialization"])(options.inputTextConfiguration),
                        outputSerialization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toQuerySerialization"])(options.outputTextConfiguration)
                      },
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    response = _context91.sent;
                    return _context91.abrupt("return", new _BlobQueryResponse__WEBPACK_IMPORTED_MODULE_3__["BlobQueryResponse"](response, {
                      abortSignal: options.abortSignal,
                      onProgress: options.onProgress,
                      onError: options.onError
                    }));

                  case 12:
                    _context91.prev = 12;
                    _context91.t0 = _context91["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context91.t0.message
                    });
                    throw _context91.t0;

                  case 16:
                    _context91.prev = 16;
                    span.end();
                    return _context91.finish(16);

                  case 19:
                  case "end":
                    return _context91.stop();
                }
              }
            }, _callee84, this, [[3, 12, 16, 19]]);
          }));

          function query(_x100) {
            return _query2.apply(this, arguments);
          }

          return query;
        }()
        /**
         * Creates a new block blob, or updates the content of an existing block blob.
         * Updating an existing block blob overwrites any existing metadata on the blob.
         * Partial updates are not supported; the content of the existing blob is
         * overwritten with the new content. To perform a partial update of a block blob's,
         * use {@link stageBlock} and {@link commitBlockList}.
         *
         * This is a non-parallel uploading method, please use {@link uploadFile},
         * {@link uploadStream} or {@link uploadBrowserData} for better performance
         * with concurrency uploading.
         *
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function
         *                               which returns a new Readable stream whose offset is from data source beginning.
         * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a
         *                               string including non non-Base64/Hex-encoded characters.
         * @param options - Options to the Block Blob Upload operation.
         * @returns Response data for the Block Blob Upload operation.
         *
         * Example usage:
         *
         * ```js
         * const content = "Hello world!";
         * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);
         * ```
         */

      }, {
        key: "upload",
        value: function () {
          var _upload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee85(body, contentLength) {
            var options,
                _a,
                _b,
                _c,
                _Object46,
                span,
                updatedOptions,
                _args91 = arguments;

            return regeneratorRuntime.wrap(function _callee85$(_context92) {
              while (1) {
                switch (_context92.prev = _context92.next) {
                  case 0:
                    options = _args91.length > 2 && _args91[2] !== undefined ? _args91[2] : {};
                    options.conditions = options.conditions || {};
                    _Object46 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-upload", options), span = _Object46.span, updatedOptions = _Object46.updatedOptions;
                    _context92.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context92.next = 7;
                    return this.blockBlobContext.upload(contentLength, body, Object.assign({
                      abortSignal: options.abortSignal,
                      blobHttpHeaders: options.blobHTTPHeaders,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      requestOptions: {
                        onUploadProgress: options.onProgress
                      },
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold,
                      tier: Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(options.tier),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context92.abrupt("return", _context92.sent);

                  case 10:
                    _context92.prev = 10;
                    _context92.t0 = _context92["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context92.t0.message
                    });
                    throw _context92.t0;

                  case 14:
                    _context92.prev = 14;
                    span.end();
                    return _context92.finish(14);

                  case 17:
                  case "end":
                    return _context92.stop();
                }
              }
            }, _callee85, this, [[3, 10, 14, 17]]);
          }));

          function upload(_x101, _x102) {
            return _upload.apply(this, arguments);
          }

          return upload;
        }()
        /**
         * Creates a new Block Blob where the contents of the blob are read from a given URL.
         * This API is supported beginning with the 2020-04-08 version. Partial updates
         * are not supported with Put Blob from URL; the content of an existing blob is overwritten with
         * the content of the new blob.  To perform partial updates to a block blob’s contents using a
         * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.
         *
         * @param sourceURL - Specifies the URL of the blob. The value
         *                           may be a URL of up to 2 KB in length that specifies a blob.
         *                           The value should be URL-encoded as it would appear
         *                           in a request URI. The source blob must either be public
         *                           or must be authenticated via a shared access signature.
         *                           If the source blob is public, no authentication is required
         *                           to perform the operation. Here are some examples of source object URLs:
         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob
         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>
         * @param options - Optional parameters.
         */

      }, {
        key: "syncUploadFromURL",
        value: function () {
          var _syncUploadFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee86(sourceURL) {
            var options,
                _a,
                _b,
                _c,
                _d,
                _e,
                _Object47,
                span,
                updatedOptions,
                _args92 = arguments;

            return regeneratorRuntime.wrap(function _callee86$(_context93) {
              while (1) {
                switch (_context93.prev = _context93.next) {
                  case 0:
                    options = _args92.length > 1 && _args92[1] !== undefined ? _args92[1] : {};
                    options.conditions = options.conditions || {};
                    _Object47 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-syncUploadFromURL", options), span = _Object47.span, updatedOptions = _Object47.updatedOptions;
                    _context93.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context93.next = 7;
                    return this.blockBlobContext.putBlobFromUrl(0, sourceURL, Object.assign(Object.assign(Object.assign({}, options), {
                      blobHttpHeaders: options.blobHTTPHeaders,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: options.conditions.tagConditions
                      }),
                      sourceModifiedAccessConditions: {
                        sourceIfMatch: (_a = options.sourceConditions) === null || _a === void 0 ? void 0 : _a.ifMatch,
                        sourceIfModifiedSince: (_b = options.sourceConditions) === null || _b === void 0 ? void 0 : _b.ifModifiedSince,
                        sourceIfNoneMatch: (_c = options.sourceConditions) === null || _c === void 0 ? void 0 : _c.ifNoneMatch,
                        sourceIfUnmodifiedSince: (_d = options.sourceConditions) === null || _d === void 0 ? void 0 : _d.ifUnmodifiedSince,
                        sourceIfTags: (_e = options.sourceConditions) === null || _e === void 0 ? void 0 : _e.tagConditions
                      },
                      cpkInfo: options.customerProvidedKey,
                      copySourceAuthorization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["httpAuthorizationToString"])(options.sourceAuthorization),
                      tier: Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(options.tier),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags)
                    }), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context93.abrupt("return", _context93.sent);

                  case 10:
                    _context93.prev = 10;
                    _context93.t0 = _context93["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context93.t0.message
                    });
                    throw _context93.t0;

                  case 14:
                    _context93.prev = 14;
                    span.end();
                    return _context93.finish(14);

                  case 17:
                  case "end":
                    return _context93.stop();
                }
              }
            }, _callee86, this, [[3, 10, 14, 17]]);
          }));

          function syncUploadFromURL(_x103) {
            return _syncUploadFromURL.apply(this, arguments);
          }

          return syncUploadFromURL;
        }()
        /**
         * Uploads the specified block to the block blob's "staging area" to be later
         * committed by a call to commitBlockList.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-block
         *
         * @param blockId - A 64-byte value that is base64-encoded
         * @param body - Data to upload to the staging area.
         * @param contentLength - Number of bytes to upload.
         * @param options - Options to the Block Blob Stage Block operation.
         * @returns Response data for the Block Blob Stage Block operation.
         */

      }, {
        key: "stageBlock",
        value: function () {
          var _stageBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee87(blockId, body, contentLength) {
            var options,
                _Object48,
                span,
                updatedOptions,
                _args93 = arguments;

            return regeneratorRuntime.wrap(function _callee87$(_context94) {
              while (1) {
                switch (_context94.prev = _context94.next) {
                  case 0:
                    options = _args93.length > 3 && _args93[3] !== undefined ? _args93[3] : {};
                    _Object48 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-stageBlock", options), span = _Object48.span, updatedOptions = _Object48.updatedOptions;
                    _context94.prev = 2;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context94.next = 6;
                    return this.blockBlobContext.stageBlock(blockId, contentLength, body, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      requestOptions: {
                        onUploadProgress: options.onProgress
                      },
                      transactionalContentMD5: options.transactionalContentMD5,
                      transactionalContentCrc64: options.transactionalContentCrc64,
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context94.abrupt("return", _context94.sent);

                  case 9:
                    _context94.prev = 9;
                    _context94.t0 = _context94["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context94.t0.message
                    });
                    throw _context94.t0;

                  case 13:
                    _context94.prev = 13;
                    span.end();
                    return _context94.finish(13);

                  case 16:
                  case "end":
                    return _context94.stop();
                }
              }
            }, _callee87, this, [[2, 9, 13, 16]]);
          }));

          function stageBlock(_x104, _x105, _x106) {
            return _stageBlock.apply(this, arguments);
          }

          return stageBlock;
        }()
        /**
         * The Stage Block From URL operation creates a new block to be committed as part
         * of a blob where the contents are read from a URL.
         * This API is available starting in version 2018-03-28.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url
         *
         * @param blockId - A 64-byte value that is base64-encoded
         * @param sourceURL - Specifies the URL of the blob. The value
         *                           may be a URL of up to 2 KB in length that specifies a blob.
         *                           The value should be URL-encoded as it would appear
         *                           in a request URI. The source blob must either be public
         *                           or must be authenticated via a shared access signature.
         *                           If the source blob is public, no authentication is required
         *                           to perform the operation. Here are some examples of source object URLs:
         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob
         *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>
         * @param offset - From which position of the blob to download, greater than or equal to 0
         * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined
         * @param options - Options to the Block Blob Stage Block From URL operation.
         * @returns Response data for the Block Blob Stage Block From URL operation.
         */

      }, {
        key: "stageBlockFromURL",
        value: function () {
          var _stageBlockFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee88(blockId, sourceURL) {
            var offset,
                count,
                options,
                _Object49,
                span,
                updatedOptions,
                _args94 = arguments;

            return regeneratorRuntime.wrap(function _callee88$(_context95) {
              while (1) {
                switch (_context95.prev = _context95.next) {
                  case 0:
                    offset = _args94.length > 2 && _args94[2] !== undefined ? _args94[2] : 0;
                    count = _args94.length > 3 ? _args94[3] : undefined;
                    options = _args94.length > 4 && _args94[4] !== undefined ? _args94[4] : {};
                    _Object49 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-stageBlockFromURL", options), span = _Object49.span, updatedOptions = _Object49.updatedOptions;
                    _context95.prev = 4;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context95.next = 8;
                    return this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      sourceContentMD5: options.sourceContentMD5,
                      sourceContentCrc64: options.sourceContentCrc64,
                      sourceRange: offset === 0 && !count ? undefined : Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      copySourceAuthorization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["httpAuthorizationToString"])(options.sourceAuthorization)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    return _context95.abrupt("return", _context95.sent);

                  case 11:
                    _context95.prev = 11;
                    _context95.t0 = _context95["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context95.t0.message
                    });
                    throw _context95.t0;

                  case 15:
                    _context95.prev = 15;
                    span.end();
                    return _context95.finish(15);

                  case 18:
                  case "end":
                    return _context95.stop();
                }
              }
            }, _callee88, this, [[4, 11, 15, 18]]);
          }));

          function stageBlockFromURL(_x107, _x108) {
            return _stageBlockFromURL.apply(this, arguments);
          }

          return stageBlockFromURL;
        }()
        /**
         * Writes a blob by specifying the list of block IDs that make up the blob.
         * In order to be written as part of a blob, a block must have been successfully written
         * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to
         * update a blob by uploading only those blocks that have changed, then committing the new and existing
         * blocks together. Any blocks not specified in the block list and permanently deleted.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list
         *
         * @param blocks -  Array of 64-byte value that is base64-encoded
         * @param options - Options to the Block Blob Commit Block List operation.
         * @returns Response data for the Block Blob Commit Block List operation.
         */

      }, {
        key: "commitBlockList",
        value: function () {
          var _commitBlockList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee89(blocks) {
            var options,
                _a,
                _b,
                _c,
                _Object50,
                span,
                updatedOptions,
                _args95 = arguments;

            return regeneratorRuntime.wrap(function _callee89$(_context96) {
              while (1) {
                switch (_context96.prev = _context96.next) {
                  case 0:
                    options = _args95.length > 1 && _args95[1] !== undefined ? _args95[1] : {};
                    options.conditions = options.conditions || {};
                    _Object50 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-commitBlockList", options), span = _Object50.span, updatedOptions = _Object50.updatedOptions;
                    _context96.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context96.next = 7;
                    return this.blockBlobContext.commitBlockList({
                      latest: blocks
                    }, Object.assign({
                      abortSignal: options.abortSignal,
                      blobHttpHeaders: options.blobHTTPHeaders,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold,
                      tier: Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(options.tier),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context96.abrupt("return", _context96.sent);

                  case 10:
                    _context96.prev = 10;
                    _context96.t0 = _context96["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context96.t0.message
                    });
                    throw _context96.t0;

                  case 14:
                    _context96.prev = 14;
                    span.end();
                    return _context96.finish(14);

                  case 17:
                  case "end":
                    return _context96.stop();
                }
              }
            }, _callee89, this, [[3, 10, 14, 17]]);
          }));

          function commitBlockList(_x109) {
            return _commitBlockList.apply(this, arguments);
          }

          return commitBlockList;
        }()
        /**
         * Returns the list of blocks that have been uploaded as part of a block blob
         * using the specified block list filter.
         * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list
         *
         * @param listType - Specifies whether to return the list of committed blocks,
         *                                        the list of uncommitted blocks, or both lists together.
         * @param options - Options to the Block Blob Get Block List operation.
         * @returns Response data for the Block Blob Get Block List operation.
         */

      }, {
        key: "getBlockList",
        value: function () {
          var _getBlockList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee90(listType) {
            var options,
                _a,
                _Object51,
                span,
                updatedOptions,
                res,
                _args96 = arguments;

            return regeneratorRuntime.wrap(function _callee90$(_context97) {
              while (1) {
                switch (_context97.prev = _context97.next) {
                  case 0:
                    options = _args96.length > 1 && _args96[1] !== undefined ? _args96[1] : {};
                    _Object51 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-getBlockList", options), span = _Object51.span, updatedOptions = _Object51.updatedOptions;
                    _context97.prev = 2;
                    _context97.next = 5;
                    return this.blockBlobContext.getBlockList(listType, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    res = _context97.sent;

                    if (!res.committedBlocks) {
                      res.committedBlocks = [];
                    }

                    if (!res.uncommittedBlocks) {
                      res.uncommittedBlocks = [];
                    }

                    return _context97.abrupt("return", res);

                  case 11:
                    _context97.prev = 11;
                    _context97.t0 = _context97["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context97.t0.message
                    });
                    throw _context97.t0;

                  case 15:
                    _context97.prev = 15;
                    span.end();
                    return _context97.finish(15);

                  case 18:
                  case "end":
                    return _context97.stop();
                }
              }
            }, _callee90, this, [[2, 11, 15, 18]]);
          }));

          function getBlockList(_x110) {
            return _getBlockList.apply(this, arguments);
          }

          return getBlockList;
        }() // High level functions

        /**
         * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.
         *
         * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is
         * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.
         * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}
         * to commit the block list.
         *
         * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is
         * `blobContentType`, enabling the browser to provide
         * functionality based on file type.
         *
         * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView
         * @param options -
         */

      }, {
        key: "uploadData",
        value: function () {
          var _uploadData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee91(data) {
            var options,
                _Object52,
                span,
                updatedOptions,
                buffer,
                browserBlob,
                _args97 = arguments;

            return regeneratorRuntime.wrap(function _callee91$(_context98) {
              while (1) {
                switch (_context98.prev = _context98.next) {
                  case 0:
                    options = _args97.length > 1 && _args97[1] !== undefined ? _args97[1] : {};
                    _Object52 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-uploadData", options), span = _Object52.span, updatedOptions = _Object52.updatedOptions;
                    _context98.prev = 2;

                    if (!_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
                      _context98.next = 8;
                      break;
                    }

                    if (data instanceof Buffer) {
                      buffer = data;
                    } else if (data instanceof ArrayBuffer) {
                      buffer = Buffer.from(data);
                    } else {
                      data = data;
                      buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);
                    }

                    return _context98.abrupt("return", this.uploadSeekableInternal(function (offset, size) {
                      return buffer.slice(offset, offset + size);
                    }, buffer.byteLength, updatedOptions));

                  case 8:
                    browserBlob = new Blob([data]);
                    return _context98.abrupt("return", this.uploadSeekableInternal(function (offset, size) {
                      return browserBlob.slice(offset, offset + size);
                    }, browserBlob.size, updatedOptions));

                  case 10:
                    _context98.next = 16;
                    break;

                  case 12:
                    _context98.prev = 12;
                    _context98.t0 = _context98["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context98.t0.message
                    });
                    throw _context98.t0;

                  case 16:
                    _context98.prev = 16;
                    span.end();
                    return _context98.finish(16);

                  case 19:
                  case "end":
                    return _context98.stop();
                }
              }
            }, _callee91, this, [[2, 12, 16, 19]]);
          }));

          function uploadData(_x111) {
            return _uploadData.apply(this, arguments);
          }

          return uploadData;
        }()
        /**
         * ONLY AVAILABLE IN BROWSERS.
         *
         * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.
         *
         * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.
         * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call
         * {@link commitBlockList} to commit the block list.
         *
         * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is
         * `blobContentType`, enabling the browser to provide
         * functionality based on file type.
         *
         * @deprecated Use {@link uploadData} instead.
         *
         * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView
         * @param options - Options to upload browser data.
         * @returns Response data for the Blob Upload operation.
         */

      }, {
        key: "uploadBrowserData",
        value: function () {
          var _uploadBrowserData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee92(browserData) {
            var options,
                _Object53,
                span,
                updatedOptions,
                browserBlob,
                _args98 = arguments;

            return regeneratorRuntime.wrap(function _callee92$(_context99) {
              while (1) {
                switch (_context99.prev = _context99.next) {
                  case 0:
                    options = _args98.length > 1 && _args98[1] !== undefined ? _args98[1] : {};
                    _Object53 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-uploadBrowserData", options), span = _Object53.span, updatedOptions = _Object53.updatedOptions;
                    _context99.prev = 2;
                    browserBlob = new Blob([browserData]);
                    _context99.next = 6;
                    return this.uploadSeekableInternal(function (offset, size) {
                      return browserBlob.slice(offset, offset + size);
                    }, browserBlob.size, updatedOptions);

                  case 6:
                    return _context99.abrupt("return", _context99.sent);

                  case 9:
                    _context99.prev = 9;
                    _context99.t0 = _context99["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context99.t0.message
                    });
                    throw _context99.t0;

                  case 13:
                    _context99.prev = 13;
                    span.end();
                    return _context99.finish(13);

                  case 16:
                  case "end":
                    return _context99.stop();
                }
              }
            }, _callee92, this, [[2, 9, 13, 16]]);
          }));

          function uploadBrowserData(_x112) {
            return _uploadBrowserData.apply(this, arguments);
          }

          return uploadBrowserData;
        }()
        /**
         *
         * Uploads data to block blob. Requires a bodyFactory as the data source,
         * which need to return a {@link HttpRequestBody} object with the offset and size provided.
         *
         * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is
         * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.
         * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}
         * to commit the block list.
         *
         * @param bodyFactory -
         * @param size - size of the data to upload.
         * @param options - Options to Upload to Block Blob operation.
         * @returns Response data for the Blob Upload operation.
         */

      }, {
        key: "uploadSeekableInternal",
        value: function () {
          var _uploadSeekableInternal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee95(bodyFactory, size) {
            var _this48 = this;

            var options,
                _Object54,
                span,
                updatedOptions,
                _ret2,
                _args101 = arguments;

            return regeneratorRuntime.wrap(function _callee95$(_context102) {
              while (1) {
                switch (_context102.prev = _context102.next) {
                  case 0:
                    options = _args101.length > 2 && _args101[2] !== undefined ? _args101[2] : {};

                    if (!options.blockSize) {
                      options.blockSize = 0;
                    }

                    if (!(options.blockSize < 0 || options.blockSize > _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES"])) {
                      _context102.next = 4;
                      break;
                    }

                    throw new RangeError("blockSize option must be >= 0 and <= ".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES"]));

                  case 4:
                    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {
                      options.maxSingleShotSize = _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES"];
                    }

                    if (!(options.maxSingleShotSize < 0 || options.maxSingleShotSize > _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES"])) {
                      _context102.next = 7;
                      break;
                    }

                    throw new RangeError("maxSingleShotSize option must be >= 0 and <= ".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES"]));

                  case 7:
                    if (!(options.blockSize === 0)) {
                      _context102.next = 11;
                      break;
                    }

                    if (!(size > _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES"] * _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_BLOCKS"])) {
                      _context102.next = 10;
                      break;
                    }

                    throw new RangeError("".concat(size, " is too larger to upload to a block blob."));

                  case 10:
                    if (size > options.maxSingleShotSize) {
                      options.blockSize = Math.ceil(size / _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_BLOCKS"]);

                      if (options.blockSize < _utils_constants__WEBPACK_IMPORTED_MODULE_15__["DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES"]) {
                        options.blockSize = _utils_constants__WEBPACK_IMPORTED_MODULE_15__["DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES"];
                      }
                    }

                  case 11:
                    if (!options.blobHTTPHeaders) {
                      options.blobHTTPHeaders = {};
                    }

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    _Object54 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-uploadSeekableInternal", options), span = _Object54.span, updatedOptions = _Object54.updatedOptions;
                    _context102.prev = 14;
                    return _context102.delegateYield( /*#__PURE__*/regeneratorRuntime.mark(function _callee94() {
                      var numBlocks, blockList, blockIDPrefix, transferProgress, batch, _loop3, i;

                      return regeneratorRuntime.wrap(function _callee94$(_context101) {
                        while (1) {
                          switch (_context101.prev = _context101.next) {
                            case 0:
                              if (!(size <= options.maxSingleShotSize)) {
                                _context101.next = 5;
                                break;
                              }

                              _context101.next = 3;
                              return _this48.upload(bodyFactory(0, size), size, updatedOptions);

                            case 3:
                              _context101.t0 = _context101.sent;
                              return _context101.abrupt("return", {
                                v: _context101.t0
                              });

                            case 5:
                              numBlocks = Math.floor((size - 1) / options.blockSize) + 1;

                              if (!(numBlocks > _utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_BLOCKS"])) {
                                _context101.next = 8;
                                break;
                              }

                              throw new RangeError("The buffer's size is too big or the BlockSize is too small;" + "the number of blocks must be <= ".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_15__["BLOCK_BLOB_MAX_BLOCKS"]));

                            case 8:
                              blockList = [];
                              blockIDPrefix = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["generateUuid"])();
                              transferProgress = 0;
                              batch = new _utils_Batch__WEBPACK_IMPORTED_MODULE_13__["Batch"](options.concurrency);

                              _loop3 = function _loop3(i) {
                                batch.addOperation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee93() {
                                  var blockID, start, end, contentLength;
                                  return regeneratorRuntime.wrap(function _callee93$(_context100) {
                                    while (1) {
                                      switch (_context100.prev = _context100.next) {
                                        case 0:
                                          blockID = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["generateBlockID"])(blockIDPrefix, i);
                                          start = options.blockSize * i;
                                          end = i === numBlocks - 1 ? size : start + options.blockSize;
                                          contentLength = end - start;
                                          blockList.push(blockID);
                                          _context100.next = 7;
                                          return _this48.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {
                                            abortSignal: options.abortSignal,
                                            conditions: options.conditions,
                                            encryptionScope: options.encryptionScope,
                                            tracingOptions: updatedOptions.tracingOptions
                                          });

                                        case 7:
                                          // Update progress after block is successfully uploaded to server, in case of block trying
                                          // TODO: Hook with convenience layer progress event in finer level
                                          transferProgress += contentLength;

                                          if (options.onProgress) {
                                            options.onProgress({
                                              loadedBytes: transferProgress
                                            });
                                          }

                                        case 9:
                                        case "end":
                                          return _context100.stop();
                                      }
                                    }
                                  }, _callee93);
                                })));
                              };

                              for (i = 0; i < numBlocks; i++) {
                                _loop3(i);
                              }

                              _context101.next = 16;
                              return batch["do"]();

                            case 16:
                              return _context101.abrupt("return", {
                                v: _this48.commitBlockList(blockList, updatedOptions)
                              });

                            case 17:
                            case "end":
                              return _context101.stop();
                          }
                        }
                      }, _callee94);
                    })(), "t0", 16);

                  case 16:
                    _ret2 = _context102.t0;

                    if (!(typeof _ret2 === "object")) {
                      _context102.next = 19;
                      break;
                    }

                    return _context102.abrupt("return", _ret2.v);

                  case 19:
                    _context102.next = 25;
                    break;

                  case 21:
                    _context102.prev = 21;
                    _context102.t1 = _context102["catch"](14);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context102.t1.message
                    });
                    throw _context102.t1;

                  case 25:
                    _context102.prev = 25;
                    span.end();
                    return _context102.finish(25);

                  case 28:
                  case "end":
                    return _context102.stop();
                }
              }
            }, _callee95, null, [[14, 21, 25, 28]]);
          }));

          function uploadSeekableInternal(_x113, _x114) {
            return _uploadSeekableInternal.apply(this, arguments);
          }

          return uploadSeekableInternal;
        }()
        /**
         * ONLY AVAILABLE IN NODE.JS RUNTIME.
         *
         * Uploads a local file in blocks to a block blob.
         *
         * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.
         * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList
         * to commit the block list.
         *
         * @param filePath - Full path of local file
         * @param options - Options to Upload to Block Blob operation.
         * @returns Response data for the Blob Upload operation.
         */

      }, {
        key: "uploadFile",
        value: function () {
          var _uploadFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee96(filePath) {
            var options,
                _Object55,
                span,
                updatedOptions,
                size,
                _args102 = arguments;

            return regeneratorRuntime.wrap(function _callee96$(_context103) {
              while (1) {
                switch (_context103.prev = _context103.next) {
                  case 0:
                    options = _args102.length > 1 && _args102[1] !== undefined ? _args102[1] : {};
                    _Object55 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-uploadFile", options), span = _Object55.span, updatedOptions = _Object55.updatedOptions;
                    _context103.prev = 2;
                    _context103.next = 5;
                    return Object(_utils_utils_node__WEBPACK_IMPORTED_MODULE_18__["fsStat"])(filePath);

                  case 5:
                    size = _context103.sent.size;
                    _context103.next = 8;
                    return this.uploadSeekableInternal(function (offset, count) {
                      return function () {
                        return Object(_utils_utils_node__WEBPACK_IMPORTED_MODULE_18__["fsCreateReadStream"])(filePath, {
                          autoClose: true,
                          end: count ? offset + count - 1 : Infinity,
                          start: offset
                        });
                      };
                    }, size, Object.assign(Object.assign({}, options), {
                      tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))
                    }));

                  case 8:
                    return _context103.abrupt("return", _context103.sent);

                  case 11:
                    _context103.prev = 11;
                    _context103.t0 = _context103["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context103.t0.message
                    });
                    throw _context103.t0;

                  case 15:
                    _context103.prev = 15;
                    span.end();
                    return _context103.finish(15);

                  case 18:
                  case "end":
                    return _context103.stop();
                }
              }
            }, _callee96, this, [[2, 11, 15, 18]]);
          }));

          function uploadFile(_x115) {
            return _uploadFile.apply(this, arguments);
          }

          return uploadFile;
        }()
        /**
         * ONLY AVAILABLE IN NODE.JS RUNTIME.
         *
         * Uploads a Node.js Readable stream into block blob.
         *
         * PERFORMANCE IMPROVEMENT TIPS:
         * * Input stream highWaterMark is better to set a same value with bufferSize
         *    parameter, which will avoid Buffer.concat() operations.
         *
         * @param stream - Node.js Readable stream
         * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB
         * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,
         *                                 positive correlation with max uploading concurrency. Default value is 5
         * @param options - Options to Upload Stream to Block Blob operation.
         * @returns Response data for the Blob Upload operation.
         */

      }, {
        key: "uploadStream",
        value: function () {
          var _uploadStream = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee98(stream) {
            var _this49 = this;

            var bufferSize,
                maxConcurrency,
                options,
                _Object56,
                span,
                updatedOptions,
                blockNum,
                _blockIDPrefix,
                _transferProgress,
                _blockList,
                scheduler,
                _args104 = arguments;

            return regeneratorRuntime.wrap(function _callee98$(_context105) {
              while (1) {
                switch (_context105.prev = _context105.next) {
                  case 0:
                    bufferSize = _args104.length > 1 && _args104[1] !== undefined ? _args104[1] : _utils_constants__WEBPACK_IMPORTED_MODULE_15__["DEFAULT_BLOCK_BUFFER_SIZE_BYTES"];
                    maxConcurrency = _args104.length > 2 && _args104[2] !== undefined ? _args104[2] : 5;
                    options = _args104.length > 3 && _args104[3] !== undefined ? _args104[3] : {};

                    if (!options.blobHTTPHeaders) {
                      options.blobHTTPHeaders = {};
                    }

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    _Object56 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("BlockBlobClient-uploadStream", options), span = _Object56.span, updatedOptions = _Object56.updatedOptions;
                    _context105.prev = 6;
                    blockNum = 0;
                    _blockIDPrefix = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["generateUuid"])();
                    _transferProgress = 0;
                    _blockList = [];
                    scheduler = new _storage_common_src__WEBPACK_IMPORTED_MODULE_14__["BufferScheduler"](stream, bufferSize, maxConcurrency, /*#__PURE__*/function () {
                      var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee97(body, length) {
                        var blockID;
                        return regeneratorRuntime.wrap(function _callee97$(_context104) {
                          while (1) {
                            switch (_context104.prev = _context104.next) {
                              case 0:
                                blockID = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["generateBlockID"])(_blockIDPrefix, blockNum);

                                _blockList.push(blockID);

                                blockNum++;
                                _context104.next = 5;
                                return _this49.stageBlock(blockID, body, length, {
                                  conditions: options.conditions,
                                  encryptionScope: options.encryptionScope,
                                  tracingOptions: updatedOptions.tracingOptions
                                });

                              case 5:
                                // Update progress after block is successfully uploaded to server, in case of block trying
                                _transferProgress += length;

                                if (options.onProgress) {
                                  options.onProgress({
                                    loadedBytes: _transferProgress
                                  });
                                }

                              case 7:
                              case "end":
                                return _context104.stop();
                            }
                          }
                        }, _callee97);
                      }));

                      return function (_x117, _x118) {
                        return _ref17.apply(this, arguments);
                      };
                    }(), // concurrency should set a smaller value than maxConcurrency, which is helpful to
                    // reduce the possibility when a outgoing handler waits for stream data, in
                    // this situation, outgoing handlers are blocked.
                    // Outgoing queue shouldn't be empty.
                    Math.ceil(maxConcurrency / 4 * 3));
                    _context105.next = 14;
                    return scheduler["do"]();

                  case 14:
                    _context105.next = 16;
                    return this.commitBlockList(_blockList, Object.assign(Object.assign({}, options), {
                      tracingOptions: Object.assign(Object.assign({}, options.tracingOptions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))
                    }));

                  case 16:
                    return _context105.abrupt("return", _context105.sent);

                  case 19:
                    _context105.prev = 19;
                    _context105.t0 = _context105["catch"](6);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context105.t0.message
                    });
                    throw _context105.t0;

                  case 23:
                    _context105.prev = 23;
                    span.end();
                    return _context105.finish(23);

                  case 26:
                  case "end":
                    return _context105.stop();
                }
              }
            }, _callee98, this, [[6, 19, 23, 26]]);
          }));

          function uploadStream(_x116) {
            return _uploadStream.apply(this, arguments);
          }

          return uploadStream;
        }()
      }]);

      return BlockBlobClient;
    }(BlobClient);
    /**
     * PageBlobClient defines a set of operations applicable to page blobs.
     */


    var PageBlobClient = /*#__PURE__*/function (_BlobClient3) {
      _inherits(PageBlobClient, _BlobClient3);

      var _super30 = _createSuper(PageBlobClient);

      function PageBlobClient(urlOrConnectionString, credentialOrPipelineOrContainerName, blobNameOrOptions, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this50;

        _classCallCheck(this, PageBlobClient);

        // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.
        //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);
        var pipeline;
        var url;
        options = options || {};

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["isPipelineLike"])(credentialOrPipelineOrContainerName)) {
          // (url: string, pipeline: Pipeline)
          url = urlOrConnectionString;
          pipeline = credentialOrPipelineOrContainerName;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] && credentialOrPipelineOrContainerName instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"] || credentialOrPipelineOrContainerName instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credentialOrPipelineOrContainerName)) {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          url = urlOrConnectionString;
          options = blobNameOrOptions;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(credentialOrPipelineOrContainerName, options);
        } else if (!credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName !== "string") {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          // The second parameter is undefined. Use anonymous credential.
          url = urlOrConnectionString;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
        } else if (credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName === "string" && blobNameOrOptions && typeof blobNameOrOptions === "string") {
          // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)
          var containerName = credentialOrPipelineOrContainerName;
          var blobName = blobNameOrOptions;
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["extractConnectionStringParts"])(urlOrConnectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_5__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName));
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(sharedKeyCredential, options);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)), encodeURIComponent(blobName)) + "?" + extractedCreds.accountSas;
            pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_9__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"](), options);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        } else {
          throw new Error("Expecting non-empty strings for containerName and blobName parameters");
        }

        _this50 = _super30.call(this, url, pipeline);
        _this50.pageBlobContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_6__["PageBlob"](_this50.storageClientContext);
        return _this50;
      }
      /**
       * Creates a new PageBlobClient object identical to the source but with the
       * specified snapshot timestamp.
       * Provide "" will remove the snapshot and return a Client to the base blob.
       *
       * @param snapshot - The snapshot timestamp.
       * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.
       */


      _createClass(PageBlobClient, [{
        key: "withSnapshot",
        value: function withSnapshot(snapshot) {
          return new PageBlobClient(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["setURLParameter"])(this.url, _utils_constants__WEBPACK_IMPORTED_MODULE_15__["URLConstants"].Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);
        }
        /**
         * Creates a page blob of the specified length. Call uploadPages to upload data
         * data to a page blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param size - size of the page blob.
         * @param options - Options to the Page Blob Create operation.
         * @returns Response data for the Page Blob Create operation.
         */

      }, {
        key: "create",
        value: function () {
          var _create2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee99(size) {
            var options,
                _a,
                _b,
                _c,
                _Object57,
                span,
                updatedOptions,
                _args105 = arguments;

            return regeneratorRuntime.wrap(function _callee99$(_context106) {
              while (1) {
                switch (_context106.prev = _context106.next) {
                  case 0:
                    options = _args105.length > 1 && _args105[1] !== undefined ? _args105[1] : {};
                    options.conditions = options.conditions || {};
                    _Object57 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-create", options), span = _Object57.span, updatedOptions = _Object57.updatedOptions;
                    _context106.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context106.next = 7;
                    return this.pageBlobContext.create(0, size, Object.assign({
                      abortSignal: options.abortSignal,
                      blobHttpHeaders: options.blobHTTPHeaders,
                      blobSequenceNumber: options.blobSequenceNumber,
                      leaseAccessConditions: options.conditions,
                      metadata: options.metadata,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      immutabilityPolicyExpiry: (_b = options.immutabilityPolicy) === null || _b === void 0 ? void 0 : _b.expiriesOn,
                      immutabilityPolicyMode: (_c = options.immutabilityPolicy) === null || _c === void 0 ? void 0 : _c.policyMode,
                      legalHold: options.legalHold,
                      tier: Object(_models__WEBPACK_IMPORTED_MODULE_7__["toAccessTier"])(options.tier),
                      blobTagsString: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["toBlobTagsString"])(options.tags)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context106.abrupt("return", _context106.sent);

                  case 10:
                    _context106.prev = 10;
                    _context106.t0 = _context106["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context106.t0.message
                    });
                    throw _context106.t0;

                  case 14:
                    _context106.prev = 14;
                    span.end();
                    return _context106.finish(14);

                  case 17:
                  case "end":
                    return _context106.stop();
                }
              }
            }, _callee99, this, [[3, 10, 14, 17]]);
          }));

          function create(_x119) {
            return _create2.apply(this, arguments);
          }

          return create;
        }()
        /**
         * Creates a page blob of the specified length. Call uploadPages to upload data
         * data to a page blob. If the blob with the same name already exists, the content
         * of the existing blob will remain unchanged.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param size - size of the page blob.
         * @param options -
         */

      }, {
        key: "createIfNotExists",
        value: function () {
          var _createIfNotExists2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee100(size) {
            var options,
                _a,
                _b,
                _Object58,
                span,
                updatedOptions,
                conditions,
                res,
                _args106 = arguments;

            return regeneratorRuntime.wrap(function _callee100$(_context107) {
              while (1) {
                switch (_context107.prev = _context107.next) {
                  case 0:
                    options = _args106.length > 1 && _args106[1] !== undefined ? _args106[1] : {};
                    _Object58 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-createIfNotExists", options), span = _Object58.span, updatedOptions = _Object58.updatedOptions;
                    _context107.prev = 2;
                    conditions = {
                      ifNoneMatch: _utils_constants__WEBPACK_IMPORTED_MODULE_15__["ETagAny"]
                    };
                    _context107.next = 6;
                    return this.create(size, Object.assign(Object.assign({}, options), {
                      conditions: conditions,
                      tracingOptions: updatedOptions.tracingOptions
                    }));

                  case 6:
                    res = _context107.sent;
                    return _context107.abrupt("return", Object.assign(Object.assign({
                      succeeded: true
                    }, res), {
                      _response: res._response // _response is made non-enumerable

                    }));

                  case 10:
                    _context107.prev = 10;
                    _context107.t0 = _context107["catch"](2);

                    if (!(((_a = _context107.t0.details) === null || _a === void 0 ? void 0 : _a.errorCode) === "BlobAlreadyExists")) {
                      _context107.next = 15;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: "Expected exception when creating a blob only if it does not already exist."
                    });
                    return _context107.abrupt("return", Object.assign(Object.assign({
                      succeeded: false
                    }, (_b = _context107.t0.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), {
                      _response: _context107.t0.response
                    }));

                  case 15:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context107.t0.message
                    });
                    throw _context107.t0;

                  case 17:
                    _context107.prev = 17;
                    span.end();
                    return _context107.finish(17);

                  case 20:
                  case "end":
                    return _context107.stop();
                }
              }
            }, _callee100, this, [[2, 10, 17, 20]]);
          }));

          function createIfNotExists(_x120) {
            return _createIfNotExists2.apply(this, arguments);
          }

          return createIfNotExists;
        }()
        /**
         * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-page
         *
         * @param body - Data to upload
         * @param offset - Offset of destination page blob
         * @param count - Content length of the body, also number of bytes to be uploaded
         * @param options - Options to the Page Blob Upload Pages operation.
         * @returns Response data for the Page Blob Upload Pages operation.
         */

      }, {
        key: "uploadPages",
        value: function () {
          var _uploadPages = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee101(body, offset, count) {
            var options,
                _a,
                _Object59,
                span,
                updatedOptions,
                _args107 = arguments;

            return regeneratorRuntime.wrap(function _callee101$(_context108) {
              while (1) {
                switch (_context108.prev = _context108.next) {
                  case 0:
                    options = _args107.length > 3 && _args107[3] !== undefined ? _args107[3] : {};
                    options.conditions = options.conditions || {};
                    _Object59 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-uploadPages", options), span = _Object59.span, updatedOptions = _Object59.updatedOptions;
                    _context108.prev = 3;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context108.next = 7;
                    return this.pageBlobContext.uploadPages(count, body, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      requestOptions: {
                        onUploadProgress: options.onProgress
                      },
                      range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      }),
                      sequenceNumberAccessConditions: options.conditions,
                      transactionalContentMD5: options.transactionalContentMD5,
                      transactionalContentCrc64: options.transactionalContentCrc64,
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 7:
                    return _context108.abrupt("return", _context108.sent);

                  case 10:
                    _context108.prev = 10;
                    _context108.t0 = _context108["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context108.t0.message
                    });
                    throw _context108.t0;

                  case 14:
                    _context108.prev = 14;
                    span.end();
                    return _context108.finish(14);

                  case 17:
                  case "end":
                    return _context108.stop();
                }
              }
            }, _callee101, this, [[3, 10, 14, 17]]);
          }));

          function uploadPages(_x121, _x122, _x123) {
            return _uploadPages.apply(this, arguments);
          }

          return uploadPages;
        }()
        /**
         * The Upload Pages operation writes a range of pages to a page blob where the
         * contents are read from a URL.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url
         *
         * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication
         * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob
         * @param destOffset - Offset of destination page blob
         * @param count - Number of bytes to be uploaded from source page blob
         * @param options -
         */

      }, {
        key: "uploadPagesFromURL",
        value: function () {
          var _uploadPagesFromURL = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee102(sourceURL, sourceOffset, destOffset, count) {
            var options,
                _a,
                _Object60,
                span,
                updatedOptions,
                _args108 = arguments;

            return regeneratorRuntime.wrap(function _callee102$(_context109) {
              while (1) {
                switch (_context109.prev = _context109.next) {
                  case 0:
                    options = _args108.length > 4 && _args108[4] !== undefined ? _args108[4] : {};
                    options.conditions = options.conditions || {};
                    options.sourceConditions = options.sourceConditions || {};
                    _Object60 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-uploadPagesFromURL", options), span = _Object60.span, updatedOptions = _Object60.updatedOptions;
                    _context109.prev = 4;
                    Object(_models__WEBPACK_IMPORTED_MODULE_7__["ensureCpkIfSpecified"])(options.customerProvidedKey, this.isHttps);
                    _context109.next = 8;
                    return this.pageBlobContext.uploadPagesFromURL(sourceURL, Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                      offset: sourceOffset,
                      count: count
                    }), 0, Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                      offset: destOffset,
                      count: count
                    }), Object.assign({
                      abortSignal: options.abortSignal,
                      sourceContentMD5: options.sourceContentMD5,
                      sourceContentCrc64: options.sourceContentCrc64,
                      leaseAccessConditions: options.conditions,
                      sequenceNumberAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      sourceModifiedAccessConditions: {
                        sourceIfMatch: options.sourceConditions.ifMatch,
                        sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,
                        sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,
                        sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince
                      },
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope,
                      copySourceAuthorization: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_17__["httpAuthorizationToString"])(options.sourceAuthorization)
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    return _context109.abrupt("return", _context109.sent);

                  case 11:
                    _context109.prev = 11;
                    _context109.t0 = _context109["catch"](4);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context109.t0.message
                    });
                    throw _context109.t0;

                  case 15:
                    _context109.prev = 15;
                    span.end();
                    return _context109.finish(15);

                  case 18:
                  case "end":
                    return _context109.stop();
                }
              }
            }, _callee102, this, [[4, 11, 15, 18]]);
          }));

          function uploadPagesFromURL(_x124, _x125, _x126, _x127) {
            return _uploadPagesFromURL.apply(this, arguments);
          }

          return uploadPagesFromURL;
        }()
        /**
         * Frees the specified pages from the page blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/put-page
         *
         * @param offset - Starting byte position of the pages to clear.
         * @param count - Number of bytes to clear.
         * @param options - Options to the Page Blob Clear Pages operation.
         * @returns Response data for the Page Blob Clear Pages operation.
         */

      }, {
        key: "clearPages",
        value: function () {
          var _clearPages = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee103() {
            var offset,
                count,
                options,
                _a,
                _Object61,
                span,
                updatedOptions,
                _args109 = arguments;

            return regeneratorRuntime.wrap(function _callee103$(_context110) {
              while (1) {
                switch (_context110.prev = _context110.next) {
                  case 0:
                    offset = _args109.length > 0 && _args109[0] !== undefined ? _args109[0] : 0;
                    count = _args109.length > 1 ? _args109[1] : undefined;
                    options = _args109.length > 2 && _args109[2] !== undefined ? _args109[2] : {};
                    options.conditions = options.conditions || {};
                    _Object61 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-clearPages", options), span = _Object61.span, updatedOptions = _Object61.updatedOptions;
                    _context110.prev = 5;
                    _context110.next = 8;
                    return this.pageBlobContext.clearPages(0, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      }),
                      sequenceNumberAccessConditions: options.conditions,
                      cpkInfo: options.customerProvidedKey,
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    return _context110.abrupt("return", _context110.sent);

                  case 11:
                    _context110.prev = 11;
                    _context110.t0 = _context110["catch"](5);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context110.t0.message
                    });
                    throw _context110.t0;

                  case 15:
                    _context110.prev = 15;
                    span.end();
                    return _context110.finish(15);

                  case 18:
                  case "end":
                    return _context110.stop();
                }
              }
            }, _callee103, this, [[5, 11, 15, 18]]);
          }));

          function clearPages() {
            return _clearPages.apply(this, arguments);
          }

          return clearPages;
        }()
        /**
         * Returns the list of valid page ranges for a page blob or snapshot of a page blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges
         *
         * @param offset - Starting byte position of the page ranges.
         * @param count - Number of bytes to get.
         * @param options - Options to the Page Blob Get Ranges operation.
         * @returns Response data for the Page Blob Get Ranges operation.
         */

      }, {
        key: "getPageRanges",
        value: function () {
          var _getPageRanges = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee104() {
            var offset,
                count,
                options,
                _a,
                _Object62,
                span,
                updatedOptions,
                _args110 = arguments;

            return regeneratorRuntime.wrap(function _callee104$(_context111) {
              while (1) {
                switch (_context111.prev = _context111.next) {
                  case 0:
                    offset = _args110.length > 0 && _args110[0] !== undefined ? _args110[0] : 0;
                    count = _args110.length > 1 ? _args110[1] : undefined;
                    options = _args110.length > 2 && _args110[2] !== undefined ? _args110[2] : {};
                    options.conditions = options.conditions || {};
                    _Object62 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-getPageRanges", options), span = _Object62.span, updatedOptions = _Object62.updatedOptions;
                    _context111.prev = 5;
                    _context111.next = 8;
                    return this.pageBlobContext.getPageRanges(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))).then(_PageBlobRangeResponse__WEBPACK_IMPORTED_MODULE_8__["rangeResponseFromModel"]);

                  case 8:
                    return _context111.abrupt("return", _context111.sent);

                  case 11:
                    _context111.prev = 11;
                    _context111.t0 = _context111["catch"](5);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context111.t0.message
                    });
                    throw _context111.t0;

                  case 15:
                    _context111.prev = 15;
                    span.end();
                    return _context111.finish(15);

                  case 18:
                  case "end":
                    return _context111.stop();
                }
              }
            }, _callee104, this, [[5, 11, 15, 18]]);
          }));

          function getPageRanges() {
            return _getPageRanges.apply(this, arguments);
          }

          return getPageRanges;
        }()
        /**
         * Gets the collection of page ranges that differ between a specified snapshot and this page blob.
         * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges
         *
         * @param offset - Starting byte position of the page blob
         * @param count - Number of bytes to get ranges diff.
         * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.
         * @param options - Options to the Page Blob Get Page Ranges Diff operation.
         * @returns Response data for the Page Blob Get Page Range Diff operation.
         */

      }, {
        key: "getPageRangesDiff",
        value: function () {
          var _getPageRangesDiff = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee105(offset, count, prevSnapshot) {
            var options,
                _a,
                _Object63,
                span,
                updatedOptions,
                _args111 = arguments;

            return regeneratorRuntime.wrap(function _callee105$(_context112) {
              while (1) {
                switch (_context112.prev = _context112.next) {
                  case 0:
                    options = _args111.length > 3 && _args111[3] !== undefined ? _args111[3] : {};
                    options.conditions = options.conditions || {};
                    _Object63 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-getPageRangesDiff", options), span = _Object63.span, updatedOptions = _Object63.updatedOptions;
                    _context112.prev = 3;
                    _context112.next = 6;
                    return this.pageBlobContext.getPageRangesDiff(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      prevsnapshot: prevSnapshot,
                      range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))).then(_PageBlobRangeResponse__WEBPACK_IMPORTED_MODULE_8__["rangeResponseFromModel"]);

                  case 6:
                    return _context112.abrupt("return", _context112.sent);

                  case 9:
                    _context112.prev = 9;
                    _context112.t0 = _context112["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context112.t0.message
                    });
                    throw _context112.t0;

                  case 13:
                    _context112.prev = 13;
                    span.end();
                    return _context112.finish(13);

                  case 16:
                  case "end":
                    return _context112.stop();
                }
              }
            }, _callee105, this, [[3, 9, 13, 16]]);
          }));

          function getPageRangesDiff(_x128, _x129, _x130) {
            return _getPageRangesDiff.apply(this, arguments);
          }

          return getPageRangesDiff;
        }()
        /**
         * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.
         * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges
         *
         * @param offset - Starting byte position of the page blob
         * @param count - Number of bytes to get ranges diff.
         * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.
         * @param options - Options to the Page Blob Get Page Ranges Diff operation.
         * @returns Response data for the Page Blob Get Page Range Diff operation.
         */

      }, {
        key: "getPageRangesDiffForManagedDisks",
        value: function () {
          var _getPageRangesDiffForManagedDisks = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee106(offset, count, prevSnapshotUrl) {
            var options,
                _a,
                _Object64,
                span,
                updatedOptions,
                _args112 = arguments;

            return regeneratorRuntime.wrap(function _callee106$(_context113) {
              while (1) {
                switch (_context113.prev = _context113.next) {
                  case 0:
                    options = _args112.length > 3 && _args112[3] !== undefined ? _args112[3] : {};
                    options.conditions = options.conditions || {};
                    _Object64 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-GetPageRangesDiffForManagedDisks", options), span = _Object64.span, updatedOptions = _Object64.updatedOptions;
                    _context113.prev = 3;
                    _context113.next = 6;
                    return this.pageBlobContext.getPageRangesDiff(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      prevSnapshotUrl: prevSnapshotUrl,
                      range: Object(_Range__WEBPACK_IMPORTED_MODULE_11__["rangeToString"])({
                        offset: offset,
                        count: count
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions))).then(_PageBlobRangeResponse__WEBPACK_IMPORTED_MODULE_8__["rangeResponseFromModel"]);

                  case 6:
                    return _context113.abrupt("return", _context113.sent);

                  case 9:
                    _context113.prev = 9;
                    _context113.t0 = _context113["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context113.t0.message
                    });
                    throw _context113.t0;

                  case 13:
                    _context113.prev = 13;
                    span.end();
                    return _context113.finish(13);

                  case 16:
                  case "end":
                    return _context113.stop();
                }
              }
            }, _callee106, this, [[3, 9, 13, 16]]);
          }));

          function getPageRangesDiffForManagedDisks(_x131, _x132, _x133) {
            return _getPageRangesDiffForManagedDisks.apply(this, arguments);
          }

          return getPageRangesDiffForManagedDisks;
        }()
        /**
         * Resizes the page blob to the specified size (which must be a multiple of 512).
         * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties
         *
         * @param size - Target size
         * @param options - Options to the Page Blob Resize operation.
         * @returns Response data for the Page Blob Resize operation.
         */

      }, {
        key: "resize",
        value: function () {
          var _resize = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee107(size) {
            var options,
                _a,
                _Object65,
                span,
                updatedOptions,
                _args113 = arguments;

            return regeneratorRuntime.wrap(function _callee107$(_context114) {
              while (1) {
                switch (_context114.prev = _context114.next) {
                  case 0:
                    options = _args113.length > 1 && _args113[1] !== undefined ? _args113[1] : {};
                    options.conditions = options.conditions || {};
                    _Object65 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-resize", options), span = _Object65.span, updatedOptions = _Object65.updatedOptions;
                    _context114.prev = 3;
                    _context114.next = 6;
                    return this.pageBlobContext.resize(size, Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      }),
                      encryptionScope: options.encryptionScope
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context114.abrupt("return", _context114.sent);

                  case 9:
                    _context114.prev = 9;
                    _context114.t0 = _context114["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context114.t0.message
                    });
                    throw _context114.t0;

                  case 13:
                    _context114.prev = 13;
                    span.end();
                    return _context114.finish(13);

                  case 16:
                  case "end":
                    return _context114.stop();
                }
              }
            }, _callee107, this, [[3, 9, 13, 16]]);
          }));

          function resize(_x134) {
            return _resize.apply(this, arguments);
          }

          return resize;
        }()
        /**
         * Sets a page blob's sequence number.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties
         *
         * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.
         * @param sequenceNumber - Required if sequenceNumberAction is max or update
         * @param options - Options to the Page Blob Update Sequence Number operation.
         * @returns Response data for the Page Blob Update Sequence Number operation.
         */

      }, {
        key: "updateSequenceNumber",
        value: function () {
          var _updateSequenceNumber = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee108(sequenceNumberAction, sequenceNumber) {
            var options,
                _a,
                _Object66,
                span,
                updatedOptions,
                _args114 = arguments;

            return regeneratorRuntime.wrap(function _callee108$(_context115) {
              while (1) {
                switch (_context115.prev = _context115.next) {
                  case 0:
                    options = _args114.length > 2 && _args114[2] !== undefined ? _args114[2] : {};
                    options.conditions = options.conditions || {};
                    _Object66 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-updateSequenceNumber", options), span = _Object66.span, updatedOptions = _Object66.updatedOptions;
                    _context115.prev = 3;
                    _context115.next = 6;
                    return this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, Object.assign({
                      abortSignal: options.abortSignal,
                      blobSequenceNumber: sequenceNumber,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context115.abrupt("return", _context115.sent);

                  case 9:
                    _context115.prev = 9;
                    _context115.t0 = _context115["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context115.t0.message
                    });
                    throw _context115.t0;

                  case 13:
                    _context115.prev = 13;
                    span.end();
                    return _context115.finish(13);

                  case 16:
                  case "end":
                    return _context115.stop();
                }
              }
            }, _callee108, this, [[3, 9, 13, 16]]);
          }));

          function updateSequenceNumber(_x135, _x136) {
            return _updateSequenceNumber.apply(this, arguments);
          }

          return updateSequenceNumber;
        }()
        /**
         * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.
         * The snapshot is copied such that only the differential changes between the previously
         * copied snapshot are transferred to the destination.
         * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.
         * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob
         * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots
         *
         * @param copySource - Specifies the name of the source page blob snapshot. For example,
         *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>
         * @param options - Options to the Page Blob Copy Incremental operation.
         * @returns Response data for the Page Blob Copy Incremental operation.
         */

      }, {
        key: "startCopyIncremental",
        value: function () {
          var _startCopyIncremental = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee109(copySource) {
            var options,
                _a,
                _Object67,
                span,
                updatedOptions,
                _args115 = arguments;

            return regeneratorRuntime.wrap(function _callee109$(_context116) {
              while (1) {
                switch (_context116.prev = _context116.next) {
                  case 0:
                    options = _args115.length > 1 && _args115[1] !== undefined ? _args115[1] : {};
                    _Object67 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["createSpan"])("PageBlobClient-startCopyIncremental", options), span = _Object67.span, updatedOptions = _Object67.updatedOptions;
                    _context116.prev = 2;
                    _context116.next = 5;
                    return this.pageBlobContext.copyIncremental(copySource, Object.assign({
                      abortSignal: options.abortSignal,
                      modifiedAccessConditions: Object.assign(Object.assign({}, options.conditions), {
                        ifTags: (_a = options.conditions) === null || _a === void 0 ? void 0 : _a.tagConditions
                      })
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_16__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context116.abrupt("return", _context116.sent);

                  case 8:
                    _context116.prev = 8;
                    _context116.t0 = _context116["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_1__["SpanStatusCode"].ERROR,
                      message: _context116.t0.message
                    });
                    throw _context116.t0;

                  case 12:
                    _context116.prev = 12;
                    span.end();
                    return _context116.finish(12);

                  case 15:
                  case "end":
                    return _context116.stop();
                }
              }
            }, _callee109, this, [[2, 8, 12, 15]]);
          }));

          function startCopyIncremental(_x137) {
            return _startCopyIncremental.apply(this, arguments);
          }

          return startCopyIncremental;
        }()
      }]);

      return PageBlobClient;
    }(BlobClient); //# sourceMappingURL=Clients.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/ContainerClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcContainerClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerClient", function () {
      return ContainerClient;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/@azure/storage-blob/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _generated_src_operations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./generated/src/operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony import */


    var _StorageClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./StorageClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageClient.js");
    /* harmony import */


    var _utils_tracing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./utils/tracing */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _sas_BlobSASSignatureValues__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./sas/BlobSASSignatureValues */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASSignatureValues.js");
    /* harmony import */


    var _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./BlobLeaseClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobLeaseClient.js");
    /* harmony import */


    var _Clients__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./Clients */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Clients.js");
    /* harmony import */


    var _BlobBatchClient__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./BlobBatchClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatchClient.js");
    /**
     * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.
     */


    var ContainerClient = /*#__PURE__*/function (_StorageClient__WEBPA3) {
      _inherits(ContainerClient, _StorageClient__WEBPA3);

      var _super31 = _createSuper(ContainerClient);

      function ContainerClient(urlOrConnectionString, credentialOrPipelineOrContainerName, // Legacy, no fix for eslint error without breaking. Disable it for this interface.

      /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/
      options) {
        var _this51;

        _classCallCheck(this, ContainerClient);

        var pipeline;
        var url;
        options = options || {};

        if (Object(_Pipeline__WEBPACK_IMPORTED_MODULE_6__["isPipelineLike"])(credentialOrPipelineOrContainerName)) {
          // (url: string, pipeline: Pipeline)
          url = urlOrConnectionString;
          pipeline = credentialOrPipelineOrContainerName;
        } else if (_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isNode"] && credentialOrPipelineOrContainerName instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_4__["StorageSharedKeyCredential"] || credentialOrPipelineOrContainerName instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_3__["AnonymousCredential"] || Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isTokenCredential"])(credentialOrPipelineOrContainerName)) {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          url = urlOrConnectionString;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_6__["newPipeline"])(credentialOrPipelineOrContainerName, options);
        } else if (!credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName !== "string") {
          // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
          // The second parameter is undefined. Use anonymous credential.
          url = urlOrConnectionString;
          pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_6__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_3__["AnonymousCredential"](), options);
        } else if (credentialOrPipelineOrContainerName && typeof credentialOrPipelineOrContainerName === "string") {
          // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)
          var containerName = credentialOrPipelineOrContainerName;
          var extractedCreds = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["extractConnectionStringParts"])(urlOrConnectionString);

          if (extractedCreds.kind === "AccountConnString") {
            if (_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["isNode"]) {
              var sharedKeyCredential = new _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_4__["StorageSharedKeyCredential"](extractedCreds.accountName, extractedCreds.accountKey);
              url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName));
              options.proxyOptions = Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["getDefaultProxySettings"])(extractedCreds.proxyUri);
              pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_6__["newPipeline"])(sharedKeyCredential, options);
            } else {
              throw new Error("Account connection string is only supported in Node.js environment");
            }
          } else if (extractedCreds.kind === "SASConnString") {
            url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(extractedCreds.url, encodeURIComponent(containerName)) + "?" + extractedCreds.accountSas;
            pipeline = Object(_Pipeline__WEBPACK_IMPORTED_MODULE_6__["newPipeline"])(new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_3__["AnonymousCredential"](), options);
          } else {
            throw new Error("Connection string must be either an Account connection string or a SAS connection string");
          }
        } else {
          throw new Error("Expecting non-empty strings for containerName parameter");
        }

        _this51 = _super31.call(this, url, pipeline);
        _this51._containerName = _this51.getContainerNameFromUrl();
        _this51.containerContext = new _generated_src_operations__WEBPACK_IMPORTED_MODULE_5__["Container"](_this51.storageClientContext);
        return _this51;
      }
      /**
       * The name of the container.
       */


      _createClass(ContainerClient, [{
        key: "containerName",
        get: function get() {
          return this._containerName;
        }
        /**
         * Creates a new container under the specified account. If the container with
         * the same name already exists, the operation fails.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container
         *
         * @param options - Options to Container Create operation.
         *
         *
         * Example usage:
         *
         * ```js
         * const containerClient = blobServiceClient.getContainerClient("<container name>");
         * const createContainerResponse = await containerClient.create();
         * console.log("Container was created successfully", createContainerResponse.requestId);
         * ```
         */

      }, {
        key: "create",
        value: function () {
          var _create3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee110() {
            var options,
                _Object68,
                span,
                updatedOptions,
                _args116 = arguments;

            return regeneratorRuntime.wrap(function _callee110$(_context117) {
              while (1) {
                switch (_context117.prev = _context117.next) {
                  case 0:
                    options = _args116.length > 0 && _args116[0] !== undefined ? _args116[0] : {};
                    _Object68 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-create", options), span = _Object68.span, updatedOptions = _Object68.updatedOptions;
                    _context117.prev = 2;
                    _context117.next = 5;
                    return this.containerContext.create(Object.assign(Object.assign({}, options), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    return _context117.abrupt("return", _context117.sent);

                  case 8:
                    _context117.prev = 8;
                    _context117.t0 = _context117["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context117.t0.message
                    });
                    throw _context117.t0;

                  case 12:
                    _context117.prev = 12;
                    span.end();
                    return _context117.finish(12);

                  case 15:
                  case "end":
                    return _context117.stop();
                }
              }
            }, _callee110, this, [[2, 8, 12, 15]]);
          }));

          function create() {
            return _create3.apply(this, arguments);
          }

          return create;
        }()
        /**
         * Creates a new container under the specified account. If the container with
         * the same name already exists, it is not changed.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container
         *
         * @param options -
         */

      }, {
        key: "createIfNotExists",
        value: function () {
          var _createIfNotExists3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee111() {
            var options,
                _a,
                _b,
                _Object69,
                span,
                updatedOptions,
                res,
                _args117 = arguments;

            return regeneratorRuntime.wrap(function _callee111$(_context118) {
              while (1) {
                switch (_context118.prev = _context118.next) {
                  case 0:
                    options = _args117.length > 0 && _args117[0] !== undefined ? _args117[0] : {};
                    _Object69 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-createIfNotExists", options), span = _Object69.span, updatedOptions = _Object69.updatedOptions;
                    _context118.prev = 2;
                    _context118.next = 5;
                    return this.create(updatedOptions);

                  case 5:
                    res = _context118.sent;
                    return _context118.abrupt("return", Object.assign(Object.assign({
                      succeeded: true
                    }, res), {
                      _response: res._response // _response is made non-enumerable

                    }));

                  case 9:
                    _context118.prev = 9;
                    _context118.t0 = _context118["catch"](2);

                    if (!(((_a = _context118.t0.details) === null || _a === void 0 ? void 0 : _a.errorCode) === "ContainerAlreadyExists")) {
                      _context118.next = 14;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: "Expected exception when creating a container only if it does not already exist."
                    });
                    return _context118.abrupt("return", Object.assign(Object.assign({
                      succeeded: false
                    }, (_b = _context118.t0.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), {
                      _response: _context118.t0.response
                    }));

                  case 14:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context118.t0.message
                    });
                    throw _context118.t0;

                  case 16:
                    _context118.prev = 16;
                    span.end();
                    return _context118.finish(16);

                  case 19:
                  case "end":
                    return _context118.stop();
                }
              }
            }, _callee111, this, [[2, 9, 16, 19]]);
          }));

          function createIfNotExists() {
            return _createIfNotExists3.apply(this, arguments);
          }

          return createIfNotExists;
        }()
        /**
         * Returns true if the Azure container resource represented by this client exists; false otherwise.
         *
         * NOTE: use this function with care since an existing container might be deleted by other clients or
         * applications. Vice versa new containers with the same name might be added by other clients or
         * applications after this function completes.
         *
         * @param options -
         */

      }, {
        key: "exists",
        value: function () {
          var _exists2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee112() {
            var options,
                _Object70,
                span,
                updatedOptions,
                _args118 = arguments;

            return regeneratorRuntime.wrap(function _callee112$(_context119) {
              while (1) {
                switch (_context119.prev = _context119.next) {
                  case 0:
                    options = _args118.length > 0 && _args118[0] !== undefined ? _args118[0] : {};
                    _Object70 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-exists", options), span = _Object70.span, updatedOptions = _Object70.updatedOptions;
                    _context119.prev = 2;
                    _context119.next = 5;
                    return this.getProperties({
                      abortSignal: options.abortSignal,
                      tracingOptions: updatedOptions.tracingOptions
                    });

                  case 5:
                    return _context119.abrupt("return", true);

                  case 8:
                    _context119.prev = 8;
                    _context119.t0 = _context119["catch"](2);

                    if (!(_context119.t0.statusCode === 404)) {
                      _context119.next = 13;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: "Expected exception when checking container existence"
                    });
                    return _context119.abrupt("return", false);

                  case 13:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context119.t0.message
                    });
                    throw _context119.t0;

                  case 15:
                    _context119.prev = 15;
                    span.end();
                    return _context119.finish(15);

                  case 18:
                  case "end":
                    return _context119.stop();
                }
              }
            }, _callee112, this, [[2, 8, 15, 18]]);
          }));

          function exists() {
            return _exists2.apply(this, arguments);
          }

          return exists;
        }()
        /**
         * Creates a {@link BlobClient}
         *
         * @param blobName - A blob name
         * @returns A new BlobClient object for the given blob name.
         */

      }, {
        key: "getBlobClient",
        value: function getBlobClient(blobName) {
          return new _Clients__WEBPACK_IMPORTED_MODULE_12__["BlobClient"](Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(this.url, encodeURIComponent(blobName)), this.pipeline);
        }
        /**
         * Creates an {@link AppendBlobClient}
         *
         * @param blobName - An append blob name
         */

      }, {
        key: "getAppendBlobClient",
        value: function getAppendBlobClient(blobName) {
          return new _Clients__WEBPACK_IMPORTED_MODULE_12__["AppendBlobClient"](Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(this.url, encodeURIComponent(blobName)), this.pipeline);
        }
        /**
         * Creates a {@link BlockBlobClient}
         *
         * @param blobName - A block blob name
         *
         *
         * Example usage:
         *
         * ```js
         * const content = "Hello world!";
         *
         * const blockBlobClient = containerClient.getBlockBlobClient("<blob name>");
         * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);
         * ```
         */

      }, {
        key: "getBlockBlobClient",
        value: function getBlockBlobClient(blobName) {
          return new _Clients__WEBPACK_IMPORTED_MODULE_12__["BlockBlobClient"](Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(this.url, encodeURIComponent(blobName)), this.pipeline);
        }
        /**
         * Creates a {@link PageBlobClient}
         *
         * @param blobName - A page blob name
         */

      }, {
        key: "getPageBlobClient",
        value: function getPageBlobClient(blobName) {
          return new _Clients__WEBPACK_IMPORTED_MODULE_12__["PageBlobClient"](Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLPath"])(this.url, encodeURIComponent(blobName)), this.pipeline);
        }
        /**
         * Returns all user-defined metadata and system properties for the specified
         * container. The data returned does not include the container's list of blobs.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties
         *
         * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if
         * they originally contained uppercase characters. This differs from the metadata keys returned by
         * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which
         * will retain their original casing.
         *
         * @param options - Options to Container Get Properties operation.
         */

      }, {
        key: "getProperties",
        value: function () {
          var _getProperties3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee113() {
            var options,
                _Object71,
                span,
                updatedOptions,
                _args119 = arguments;

            return regeneratorRuntime.wrap(function _callee113$(_context120) {
              while (1) {
                switch (_context120.prev = _context120.next) {
                  case 0:
                    options = _args119.length > 0 && _args119[0] !== undefined ? _args119[0] : {};

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    _Object71 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-getProperties", options), span = _Object71.span, updatedOptions = _Object71.updatedOptions;
                    _context120.prev = 3;
                    _context120.next = 6;
                    return this.containerContext.getProperties(Object.assign(Object.assign({
                      abortSignal: options.abortSignal
                    }, options.conditions), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context120.abrupt("return", _context120.sent);

                  case 9:
                    _context120.prev = 9;
                    _context120.t0 = _context120["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context120.t0.message
                    });
                    throw _context120.t0;

                  case 13:
                    _context120.prev = 13;
                    span.end();
                    return _context120.finish(13);

                  case 16:
                  case "end":
                    return _context120.stop();
                }
              }
            }, _callee113, this, [[3, 9, 13, 16]]);
          }));

          function getProperties() {
            return _getProperties3.apply(this, arguments);
          }

          return getProperties;
        }()
        /**
         * Marks the specified container for deletion. The container and any blobs
         * contained within it are later deleted during garbage collection.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container
         *
         * @param options - Options to Container Delete operation.
         */

      }, {
        key: "delete",
        value: function () {
          var _delete3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee114() {
            var options,
                _Object72,
                span,
                updatedOptions,
                _args120 = arguments;

            return regeneratorRuntime.wrap(function _callee114$(_context121) {
              while (1) {
                switch (_context121.prev = _context121.next) {
                  case 0:
                    options = _args120.length > 0 && _args120[0] !== undefined ? _args120[0] : {};

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    _Object72 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-delete", options), span = _Object72.span, updatedOptions = _Object72.updatedOptions;
                    _context121.prev = 3;
                    _context121.next = 6;
                    return this.containerContext["delete"](Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: options.conditions
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    return _context121.abrupt("return", _context121.sent);

                  case 9:
                    _context121.prev = 9;
                    _context121.t0 = _context121["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context121.t0.message
                    });
                    throw _context121.t0;

                  case 13:
                    _context121.prev = 13;
                    span.end();
                    return _context121.finish(13);

                  case 16:
                  case "end":
                    return _context121.stop();
                }
              }
            }, _callee114, this, [[3, 9, 13, 16]]);
          }));

          function _delete() {
            return _delete3.apply(this, arguments);
          }

          return _delete;
        }()
        /**
         * Marks the specified container for deletion if it exists. The container and any blobs
         * contained within it are later deleted during garbage collection.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container
         *
         * @param options - Options to Container Delete operation.
         */

      }, {
        key: "deleteIfExists",
        value: function () {
          var _deleteIfExists2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee115() {
            var options,
                _a,
                _b,
                _Object73,
                span,
                updatedOptions,
                res,
                _args121 = arguments;

            return regeneratorRuntime.wrap(function _callee115$(_context122) {
              while (1) {
                switch (_context122.prev = _context122.next) {
                  case 0:
                    options = _args121.length > 0 && _args121[0] !== undefined ? _args121[0] : {};
                    _Object73 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-deleteIfExists", options), span = _Object73.span, updatedOptions = _Object73.updatedOptions;
                    _context122.prev = 2;
                    _context122.next = 5;
                    return this["delete"](updatedOptions);

                  case 5:
                    res = _context122.sent;
                    return _context122.abrupt("return", Object.assign(Object.assign({
                      succeeded: true
                    }, res), {
                      _response: res._response // _response is made non-enumerable

                    }));

                  case 9:
                    _context122.prev = 9;
                    _context122.t0 = _context122["catch"](2);

                    if (!(((_a = _context122.t0.details) === null || _a === void 0 ? void 0 : _a.errorCode) === "ContainerNotFound")) {
                      _context122.next = 14;
                      break;
                    }

                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: "Expected exception when deleting a container only if it exists."
                    });
                    return _context122.abrupt("return", Object.assign(Object.assign({
                      succeeded: false
                    }, (_b = _context122.t0.response) === null || _b === void 0 ? void 0 : _b.parsedHeaders), {
                      _response: _context122.t0.response
                    }));

                  case 14:
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context122.t0.message
                    });
                    throw _context122.t0;

                  case 16:
                    _context122.prev = 16;
                    span.end();
                    return _context122.finish(16);

                  case 19:
                  case "end":
                    return _context122.stop();
                }
              }
            }, _callee115, this, [[2, 9, 16, 19]]);
          }));

          function deleteIfExists() {
            return _deleteIfExists2.apply(this, arguments);
          }

          return deleteIfExists;
        }()
        /**
         * Sets one or more user-defined name-value pairs for the specified container.
         *
         * If no option provided, or no metadata defined in the parameter, the container
         * metadata will be removed.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata
         *
         * @param metadata - Replace existing metadata with this value.
         *                            If no value provided the existing metadata will be removed.
         * @param options - Options to Container Set Metadata operation.
         */

      }, {
        key: "setMetadata",
        value: function () {
          var _setMetadata2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee116(metadata) {
            var options,
                _Object74,
                span,
                updatedOptions,
                _args122 = arguments;

            return regeneratorRuntime.wrap(function _callee116$(_context123) {
              while (1) {
                switch (_context123.prev = _context123.next) {
                  case 0:
                    options = _args122.length > 1 && _args122[1] !== undefined ? _args122[1] : {};

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    if (!options.conditions.ifUnmodifiedSince) {
                      _context123.next = 4;
                      break;
                    }

                    throw new RangeError("the IfUnmodifiedSince must have their default values because they are ignored by the blob service");

                  case 4:
                    _Object74 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-setMetadata", options), span = _Object74.span, updatedOptions = _Object74.updatedOptions;
                    _context123.prev = 5;
                    _context123.next = 8;
                    return this.containerContext.setMetadata(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions,
                      metadata: metadata,
                      modifiedAccessConditions: options.conditions
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 8:
                    return _context123.abrupt("return", _context123.sent);

                  case 11:
                    _context123.prev = 11;
                    _context123.t0 = _context123["catch"](5);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context123.t0.message
                    });
                    throw _context123.t0;

                  case 15:
                    _context123.prev = 15;
                    span.end();
                    return _context123.finish(15);

                  case 18:
                  case "end":
                    return _context123.stop();
                }
              }
            }, _callee116, this, [[5, 11, 15, 18]]);
          }));

          function setMetadata(_x138) {
            return _setMetadata2.apply(this, arguments);
          }

          return setMetadata;
        }()
        /**
         * Gets the permissions for the specified container. The permissions indicate
         * whether container data may be accessed publicly.
         *
         * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.
         * For example, new Date("2018-12-31T03:44:23.8827891Z").toISOString() will get "2018-12-31T03:44:23.882Z".
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl
         *
         * @param options - Options to Container Get Access Policy operation.
         */

      }, {
        key: "getAccessPolicy",
        value: function () {
          var _getAccessPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee117() {
            var options,
                _Object75,
                span,
                updatedOptions,
                response,
                res,
                _iterator24,
                _step24,
                identifier,
                accessPolicy,
                _args123 = arguments;

            return regeneratorRuntime.wrap(function _callee117$(_context124) {
              while (1) {
                switch (_context124.prev = _context124.next) {
                  case 0:
                    options = _args123.length > 0 && _args123[0] !== undefined ? _args123[0] : {};

                    if (!options.conditions) {
                      options.conditions = {};
                    }

                    _Object75 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-getAccessPolicy", options), span = _Object75.span, updatedOptions = _Object75.updatedOptions;
                    _context124.prev = 3;
                    _context124.next = 6;
                    return this.containerContext.getAccessPolicy(Object.assign({
                      abortSignal: options.abortSignal,
                      leaseAccessConditions: options.conditions
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 6:
                    response = _context124.sent;
                    res = {
                      _response: response._response,
                      blobPublicAccess: response.blobPublicAccess,
                      date: response.date,
                      etag: response.etag,
                      errorCode: response.errorCode,
                      lastModified: response.lastModified,
                      requestId: response.requestId,
                      clientRequestId: response.clientRequestId,
                      signedIdentifiers: [],
                      version: response.version
                    };
                    _iterator24 = _createForOfIteratorHelper(response);

                    try {
                      for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
                        identifier = _step24.value;
                        accessPolicy = undefined;

                        if (identifier.accessPolicy) {
                          accessPolicy = {
                            permissions: identifier.accessPolicy.permissions
                          };

                          if (identifier.accessPolicy.expiresOn) {
                            accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);
                          }

                          if (identifier.accessPolicy.startsOn) {
                            accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);
                          }
                        }

                        res.signedIdentifiers.push({
                          accessPolicy: accessPolicy,
                          id: identifier.id
                        });
                      }
                    } catch (err) {
                      _iterator24.e(err);
                    } finally {
                      _iterator24.f();
                    }

                    return _context124.abrupt("return", res);

                  case 13:
                    _context124.prev = 13;
                    _context124.t0 = _context124["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context124.t0.message
                    });
                    throw _context124.t0;

                  case 17:
                    _context124.prev = 17;
                    span.end();
                    return _context124.finish(17);

                  case 20:
                  case "end":
                    return _context124.stop();
                }
              }
            }, _callee117, this, [[3, 13, 17, 20]]);
          }));

          function getAccessPolicy() {
            return _getAccessPolicy.apply(this, arguments);
          }

          return getAccessPolicy;
        }()
        /**
         * Sets the permissions for the specified container. The permissions indicate
         * whether blobs in a container may be accessed publicly.
         *
         * When you set permissions for a container, the existing permissions are replaced.
         * If no access or containerAcl provided, the existing container ACL will be
         * removed.
         *
         * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.
         * During this interval, a shared access signature that is associated with the stored access policy will
         * fail with status code 403 (Forbidden), until the access policy becomes active.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl
         *
         * @param access - The level of public access to data in the container.
         * @param containerAcl - Array of elements each having a unique Id and details of the access policy.
         * @param options - Options to Container Set Access Policy operation.
         */

      }, {
        key: "setAccessPolicy",
        value: function () {
          var _setAccessPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee118(access, containerAcl) {
            var options,
                _Object76,
                span,
                updatedOptions,
                acl,
                _iterator25,
                _step25,
                identifier,
                _args124 = arguments;

            return regeneratorRuntime.wrap(function _callee118$(_context125) {
              while (1) {
                switch (_context125.prev = _context125.next) {
                  case 0:
                    options = _args124.length > 2 && _args124[2] !== undefined ? _args124[2] : {};
                    options.conditions = options.conditions || {};
                    _Object76 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-setAccessPolicy", options), span = _Object76.span, updatedOptions = _Object76.updatedOptions;
                    _context125.prev = 3;
                    acl = [];
                    _iterator25 = _createForOfIteratorHelper(containerAcl || []);

                    try {
                      for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
                        identifier = _step25.value;
                        acl.push({
                          accessPolicy: {
                            expiresOn: identifier.accessPolicy.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["truncatedISO8061Date"])(identifier.accessPolicy.expiresOn) : "",
                            permissions: identifier.accessPolicy.permissions,
                            startsOn: identifier.accessPolicy.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["truncatedISO8061Date"])(identifier.accessPolicy.startsOn) : ""
                          },
                          id: identifier.id
                        });
                      }
                    } catch (err) {
                      _iterator25.e(err);
                    } finally {
                      _iterator25.f();
                    }

                    _context125.next = 9;
                    return this.containerContext.setAccessPolicy(Object.assign({
                      abortSignal: options.abortSignal,
                      access: access,
                      containerAcl: acl,
                      leaseAccessConditions: options.conditions,
                      modifiedAccessConditions: options.conditions
                    }, Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 9:
                    return _context125.abrupt("return", _context125.sent);

                  case 12:
                    _context125.prev = 12;
                    _context125.t0 = _context125["catch"](3);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context125.t0.message
                    });
                    throw _context125.t0;

                  case 16:
                    _context125.prev = 16;
                    span.end();
                    return _context125.finish(16);

                  case 19:
                  case "end":
                    return _context125.stop();
                }
              }
            }, _callee118, this, [[3, 12, 16, 19]]);
          }));

          function setAccessPolicy(_x139, _x140) {
            return _setAccessPolicy.apply(this, arguments);
          }

          return setAccessPolicy;
        }()
        /**
         * Get a {@link BlobLeaseClient} that manages leases on the container.
         *
         * @param proposeLeaseId - Initial proposed lease Id.
         * @returns A new BlobLeaseClient object for managing leases on the container.
         */

      }, {
        key: "getBlobLeaseClient",
        value: function getBlobLeaseClient(proposeLeaseId) {
          return new _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_11__["BlobLeaseClient"](this, proposeLeaseId);
        }
        /**
         * Creates a new block blob, or updates the content of an existing block blob.
         *
         * Updating an existing block blob overwrites any existing metadata on the blob.
         * Partial updates are not supported; the content of the existing blob is
         * overwritten with the new content. To perform a partial update of a block blob's,
         * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.
         *
         * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},
         * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better
         * performance with concurrency uploading.
         *
         * @see https://docs.microsoft.com/rest/api/storageservices/put-blob
         *
         * @param blobName - Name of the block blob to create or update.
         * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function
         *                               which returns a new Readable stream whose offset is from data source beginning.
         * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a
         *                               string including non non-Base64/Hex-encoded characters.
         * @param options - Options to configure the Block Blob Upload operation.
         * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.
         */

      }, {
        key: "uploadBlockBlob",
        value: function () {
          var _uploadBlockBlob = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee119(blobName, body, contentLength) {
            var options,
                _Object77,
                span,
                updatedOptions,
                blockBlobClient,
                response,
                _args125 = arguments;

            return regeneratorRuntime.wrap(function _callee119$(_context126) {
              while (1) {
                switch (_context126.prev = _context126.next) {
                  case 0:
                    options = _args125.length > 3 && _args125[3] !== undefined ? _args125[3] : {};
                    _Object77 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-uploadBlockBlob", options), span = _Object77.span, updatedOptions = _Object77.updatedOptions;
                    _context126.prev = 2;
                    blockBlobClient = this.getBlockBlobClient(blobName);
                    _context126.next = 6;
                    return blockBlobClient.upload(body, contentLength, updatedOptions);

                  case 6:
                    response = _context126.sent;
                    return _context126.abrupt("return", {
                      blockBlobClient: blockBlobClient,
                      response: response
                    });

                  case 10:
                    _context126.prev = 10;
                    _context126.t0 = _context126["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context126.t0.message
                    });
                    throw _context126.t0;

                  case 14:
                    _context126.prev = 14;
                    span.end();
                    return _context126.finish(14);

                  case 17:
                  case "end":
                    return _context126.stop();
                }
              }
            }, _callee119, this, [[2, 10, 14, 17]]);
          }));

          function uploadBlockBlob(_x141, _x142, _x143) {
            return _uploadBlockBlob.apply(this, arguments);
          }

          return uploadBlockBlob;
        }()
        /**
         * Marks the specified blob or snapshot for deletion. The blob is later deleted
         * during garbage collection. Note that in order to delete a blob, you must delete
         * all of its snapshots. You can delete both at the same time with the Delete
         * Blob operation.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob
         *
         * @param blobName -
         * @param options - Options to Blob Delete operation.
         * @returns Block blob deletion response data.
         */

      }, {
        key: "deleteBlob",
        value: function () {
          var _deleteBlob2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee120(blobName) {
            var options,
                _Object78,
                span,
                updatedOptions,
                blobClient,
                _args126 = arguments;

            return regeneratorRuntime.wrap(function _callee120$(_context127) {
              while (1) {
                switch (_context127.prev = _context127.next) {
                  case 0:
                    options = _args126.length > 1 && _args126[1] !== undefined ? _args126[1] : {};
                    _Object78 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-deleteBlob", options), span = _Object78.span, updatedOptions = _Object78.updatedOptions;
                    _context127.prev = 2;
                    blobClient = this.getBlobClient(blobName);

                    if (options.versionId) {
                      blobClient = blobClient.withVersion(options.versionId);
                    }

                    _context127.next = 7;
                    return blobClient["delete"](updatedOptions);

                  case 7:
                    return _context127.abrupt("return", _context127.sent);

                  case 10:
                    _context127.prev = 10;
                    _context127.t0 = _context127["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context127.t0.message
                    });
                    throw _context127.t0;

                  case 14:
                    _context127.prev = 14;
                    span.end();
                    return _context127.finish(14);

                  case 17:
                  case "end":
                    return _context127.stop();
                }
              }
            }, _callee120, this, [[2, 10, 14, 17]]);
          }));

          function deleteBlob(_x144) {
            return _deleteBlob2.apply(this, arguments);
          }

          return deleteBlob;
        }()
        /**
         * listBlobFlatSegment returns a single segment of blobs starting from the
         * specified Marker. Use an empty Marker to start enumeration from the beginning.
         * After getting a segment, process it, and then call listBlobsFlatSegment again
         * (passing the the previously-returned Marker) to get the next segment.
         * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs
         *
         * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.
         * @param options - Options to Container List Blob Flat Segment operation.
         */

      }, {
        key: "listBlobFlatSegment",
        value: function () {
          var _listBlobFlatSegment = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee121(marker) {
            var options,
                _Object79,
                span,
                updatedOptions,
                response,
                wrappedResponse,
                _args127 = arguments;

            return regeneratorRuntime.wrap(function _callee121$(_context128) {
              while (1) {
                switch (_context128.prev = _context128.next) {
                  case 0:
                    options = _args127.length > 1 && _args127[1] !== undefined ? _args127[1] : {};
                    _Object79 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-listBlobFlatSegment", options), span = _Object79.span, updatedOptions = _Object79.updatedOptions;
                    _context128.prev = 2;
                    _context128.next = 5;
                    return this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({
                      marker: marker
                    }, options), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    response = _context128.sent;
                    wrappedResponse = Object.assign(Object.assign({}, response), {
                      _response: response._response,
                      segment: Object.assign(Object.assign({}, response.segment), {
                        blobItems: response.segment.blobItems.map(function (blobItemInteral) {
                          var blobItem = Object.assign(Object.assign({}, blobItemInteral), {
                            tags: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["toTags"])(blobItemInteral.blobTags),
                            objectReplicationSourceProperties: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["parseObjectReplicationRecord"])(blobItemInteral.objectReplicationMetadata)
                          });
                          return blobItem;
                        })
                      })
                    });
                    return _context128.abrupt("return", wrappedResponse);

                  case 10:
                    _context128.prev = 10;
                    _context128.t0 = _context128["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context128.t0.message
                    });
                    throw _context128.t0;

                  case 14:
                    _context128.prev = 14;
                    span.end();
                    return _context128.finish(14);

                  case 17:
                  case "end":
                    return _context128.stop();
                }
              }
            }, _callee121, this, [[2, 10, 14, 17]]);
          }));

          function listBlobFlatSegment(_x145) {
            return _listBlobFlatSegment.apply(this, arguments);
          }

          return listBlobFlatSegment;
        }()
        /**
         * listBlobHierarchySegment returns a single segment of blobs starting from
         * the specified Marker. Use an empty Marker to start enumeration from the
         * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment
         * again (passing the the previously-returned Marker) to get the next segment.
         * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs
         *
         * @param delimiter - The character or string used to define the virtual hierarchy
         * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.
         * @param options - Options to Container List Blob Hierarchy Segment operation.
         */

      }, {
        key: "listBlobHierarchySegment",
        value: function () {
          var _listBlobHierarchySegment = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee122(delimiter, marker) {
            var options,
                _Object80,
                span,
                updatedOptions,
                response,
                wrappedResponse,
                _args128 = arguments;

            return regeneratorRuntime.wrap(function _callee122$(_context129) {
              while (1) {
                switch (_context129.prev = _context129.next) {
                  case 0:
                    options = _args128.length > 2 && _args128[2] !== undefined ? _args128[2] : {};
                    _Object80 = Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["createSpan"])("ContainerClient-listBlobHierarchySegment", options), span = _Object80.span, updatedOptions = _Object80.updatedOptions;
                    _context129.prev = 2;
                    _context129.next = 5;
                    return this.containerContext.listBlobHierarchySegment(delimiter, Object.assign(Object.assign({
                      marker: marker
                    }, options), Object(_utils_tracing__WEBPACK_IMPORTED_MODULE_8__["convertTracingToRequestOptionsBase"])(updatedOptions)));

                  case 5:
                    response = _context129.sent;
                    wrappedResponse = Object.assign(Object.assign({}, response), {
                      _response: response._response,
                      segment: Object.assign(Object.assign({}, response.segment), {
                        blobItems: response.segment.blobItems.map(function (blobItemInteral) {
                          var blobItem = Object.assign(Object.assign({}, blobItemInteral), {
                            tags: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["toTags"])(blobItemInteral.blobTags),
                            objectReplicationSourceProperties: Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["parseObjectReplicationRecord"])(blobItemInteral.objectReplicationMetadata)
                          });
                          return blobItem;
                        })
                      })
                    });
                    return _context129.abrupt("return", wrappedResponse);

                  case 10:
                    _context129.prev = 10;
                    _context129.t0 = _context129["catch"](2);
                    span.setStatus({
                      code: _azure_core_tracing__WEBPACK_IMPORTED_MODULE_2__["SpanStatusCode"].ERROR,
                      message: _context129.t0.message
                    });
                    throw _context129.t0;

                  case 14:
                    _context129.prev = 14;
                    span.end();
                    return _context129.finish(14);

                  case 17:
                  case "end":
                    return _context129.stop();
                }
              }
            }, _callee122, this, [[2, 10, 14, 17]]);
          }));

          function listBlobHierarchySegment(_x146, _x147) {
            return _listBlobHierarchySegment.apply(this, arguments);
          }

          return listBlobHierarchySegment;
        }()
        /**
         * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse
         *
         * @param marker - A string value that identifies the portion of
         *                          the list of blobs to be returned with the next listing operation. The
         *                          operation returns the ContinuationToken value within the response body if the
         *                          listing operation did not return all blobs remaining to be listed
         *                          with the current page. The ContinuationToken value can be used as the value for
         *                          the marker parameter in a subsequent call to request the next page of list
         *                          items. The marker value is opaque to the client.
         * @param options - Options to list blobs operation.
         */

      }, {
        key: "listSegments",
        value: function listSegments(marker) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listSegments_1() {
            var listBlobsFlatSegmentResponse;
            return regeneratorRuntime.wrap(function listSegments_1$(_context130) {
              while (1) {
                switch (_context130.prev = _context130.next) {
                  case 0:
                    if (!(!!marker || marker === undefined)) {
                      _context130.next = 14;
                      break;
                    }

                  case 1:
                    _context130.next = 3;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(this.listBlobFlatSegment(marker, options));

                  case 3:
                    listBlobsFlatSegmentResponse = _context130.sent;
                    marker = listBlobsFlatSegmentResponse.continuationToken;
                    _context130.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    _context130.next = 8;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(listBlobsFlatSegmentResponse);

                  case 8:
                    _context130.t1 = _context130.sent;
                    _context130.next = 11;
                    return (0, _context130.t0)(_context130.t1);

                  case 11:
                    _context130.next = 13;
                    return _context130.sent;

                  case 13:
                    if (marker) {
                      _context130.next = 1;
                      break;
                    }

                  case 14:
                  case "end":
                    return _context130.stop();
                }
              }
            }, listSegments_1, this);
          }));
        }
        /**
         * Returns an AsyncIterableIterator of {@link BlobItem} objects
         *
         * @param options - Options to list blobs operation.
         */

      }, {
        key: "listItems",
        value: function listItems() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listItems_1() {
            var e_1, _a, marker, _b, _c, listBlobsFlatSegmentResponse;

            return regeneratorRuntime.wrap(function listItems_1$(_context131) {
              while (1) {
                switch (_context131.prev = _context131.next) {
                  case 0:
                    _context131.prev = 0;
                    _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(this.listSegments(marker, options));

                  case 2:
                    _context131.next = 4;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_b.next());

                  case 4:
                    _c = _context131.sent;

                    if (_c.done) {
                      _context131.next = 14;
                      break;
                    }

                    listBlobsFlatSegmentResponse = _c.value;
                    _context131.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    return _context131.delegateYield(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncDelegator"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(listBlobsFlatSegmentResponse.segment.blobItems)), "t1", 9);

                  case 9:
                    _context131.t2 = _context131.t1;
                    _context131.next = 12;
                    return (0, _context131.t0)(_context131.t2);

                  case 12:
                    _context131.next = 2;
                    break;

                  case 14:
                    _context131.next = 19;
                    break;

                  case 16:
                    _context131.prev = 16;
                    _context131.t3 = _context131["catch"](0);
                    e_1 = {
                      error: _context131.t3
                    };

                  case 19:
                    _context131.prev = 19;
                    _context131.prev = 20;

                    if (!(_c && !_c.done && (_a = _b["return"]))) {
                      _context131.next = 24;
                      break;
                    }

                    _context131.next = 24;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_a.call(_b));

                  case 24:
                    _context131.prev = 24;

                    if (!e_1) {
                      _context131.next = 27;
                      break;
                    }

                    throw e_1.error;

                  case 27:
                    return _context131.finish(24);

                  case 28:
                    return _context131.finish(19);

                  case 29:
                  case "end":
                    return _context131.stop();
                }
              }
            }, listItems_1, this, [[0, 16, 19, 29], [20,, 24, 28]]);
          }));
        }
        /**
         * Returns an async iterable iterator to list all the blobs
         * under the specified account.
         *
         * .byPage() returns an async iterable iterator to list the blobs in pages.
         *
         * Example using `for await` syntax:
         *
         * ```js
         * // Get the containerClient before you run these snippets,
         * // Can be obtained from `blobServiceClient.getContainerClient("<your-container-name>");`
         * let i = 1;
         * for await (const blob of containerClient.listBlobsFlat()) {
         *   console.log(`Blob ${i++}: ${blob.name}`);
         * }
         * ```
         *
         * Example using `iter.next()`:
         *
         * ```js
         * let i = 1;
         * let iter = containerClient.listBlobsFlat();
         * let blobItem = await iter.next();
         * while (!blobItem.done) {
         *   console.log(`Blob ${i++}: ${blobItem.value.name}`);
         *   blobItem = await iter.next();
         * }
         * ```
         *
         * Example using `byPage()`:
         *
         * ```js
         * // passing optional maxPageSize in the page settings
         * let i = 1;
         * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {
         *   for (const blob of response.segment.blobItems) {
         *     console.log(`Blob ${i++}: ${blob.name}`);
         *   }
         * }
         * ```
         *
         * Example using paging with a marker:
         *
         * ```js
         * let i = 1;
         * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });
         * let response = (await iterator.next()).value;
         *
         * // Prints 2 blob names
         * for (const blob of response.segment.blobItems) {
         *   console.log(`Blob ${i++}: ${blob.name}`);
         * }
         *
         * // Gets next marker
         * let marker = response.continuationToken;
         *
         * // Passing next marker as continuationToken
         *
         * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });
         * response = (await iterator.next()).value;
         *
         * // Prints 10 blob names
         * for (const blob of response.segment.blobItems) {
         *   console.log(`Blob ${i++}: ${blob.name}`);
         * }
         * ```
         *
         * @param options - Options to list blobs.
         * @returns An asyncIterableIterator that supports paging.
         */

      }, {
        key: "listBlobsFlat",
        value: function listBlobsFlat() {
          var _this52 = this,
              _ref18;

          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          var include = [];

          if (options.includeCopy) {
            include.push("copy");
          }

          if (options.includeDeleted) {
            include.push("deleted");
          }

          if (options.includeMetadata) {
            include.push("metadata");
          }

          if (options.includeSnapshots) {
            include.push("snapshots");
          }

          if (options.includeVersions) {
            include.push("versions");
          }

          if (options.includeUncommitedBlobs) {
            include.push("uncommittedblobs");
          }

          if (options.includeTags) {
            include.push("tags");
          }

          if (options.includeDeletedWithVersions) {
            include.push("deletedwithversions");
          }

          if (options.includeImmutabilityPolicy) {
            include.push("immutabilitypolicy");
          }

          if (options.includeLegalHold) {
            include.push("legalhold");
          }

          if (options.prefix === "") {
            options.prefix = undefined;
          }

          var updatedOptions = Object.assign(Object.assign({}, options), include.length > 0 ? {
            include: include
          } : {}); // AsyncIterableIterator to iterate over blobs

          var iter = this.listItems(updatedOptions);
          return _ref18 = {
            /**
             * The next method, part of the iteration protocol
             */
            next: function next() {
              return iter.next();
            }
          }, _defineProperty(_ref18, Symbol.asyncIterator, function () {
            return this;
          }), _defineProperty(_ref18, "byPage", function byPage() {
            var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return _this52.listSegments(settings.continuationToken, Object.assign({
              maxPageSize: settings.maxPageSize
            }, updatedOptions));
          }), _ref18;
        }
        /**
         * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse
         *
         * @param delimiter - The character or string used to define the virtual hierarchy
         * @param marker - A string value that identifies the portion of
         *                          the list of blobs to be returned with the next listing operation. The
         *                          operation returns the ContinuationToken value within the response body if the
         *                          listing operation did not return all blobs remaining to be listed
         *                          with the current page. The ContinuationToken value can be used as the value for
         *                          the marker parameter in a subsequent call to request the next page of list
         *                          items. The marker value is opaque to the client.
         * @param options - Options to list blobs operation.
         */

      }, {
        key: "listHierarchySegments",
        value: function listHierarchySegments(delimiter, marker) {
          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listHierarchySegments_1() {
            var listBlobsHierarchySegmentResponse;
            return regeneratorRuntime.wrap(function listHierarchySegments_1$(_context132) {
              while (1) {
                switch (_context132.prev = _context132.next) {
                  case 0:
                    if (!(!!marker || marker === undefined)) {
                      _context132.next = 14;
                      break;
                    }

                  case 1:
                    _context132.next = 3;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(this.listBlobHierarchySegment(delimiter, marker, options));

                  case 3:
                    listBlobsHierarchySegmentResponse = _context132.sent;
                    marker = listBlobsHierarchySegmentResponse.continuationToken;
                    _context132.t0 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"]);
                    _context132.next = 8;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(listBlobsHierarchySegmentResponse);

                  case 8:
                    _context132.t1 = _context132.sent;
                    _context132.next = 11;
                    return (0, _context132.t0)(_context132.t1);

                  case 11:
                    _context132.next = 13;
                    return _context132.sent;

                  case 13:
                    if (marker) {
                      _context132.next = 1;
                      break;
                    }

                  case 14:
                  case "end":
                    return _context132.stop();
                }
              }
            }, listHierarchySegments_1, this);
          }));
        }
        /**
         * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.
         *
         * @param delimiter - The character or string used to define the virtual hierarchy
         * @param options - Options to list blobs operation.
         */

      }, {
        key: "listItemsByHierarchy",
        value: function listItemsByHierarchy(delimiter) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncGenerator"])(this, arguments, /*#__PURE__*/regeneratorRuntime.mark(function listItemsByHierarchy_1() {
            var e_2, _a, marker, _b, _c, listBlobsHierarchySegmentResponse, segment, _iterator26, _step26, prefix, _iterator27, _step27, blob;

            return regeneratorRuntime.wrap(function listItemsByHierarchy_1$(_context133) {
              while (1) {
                switch (_context133.prev = _context133.next) {
                  case 0:
                    _context133.prev = 0;
                    _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__asyncValues"])(this.listHierarchySegments(delimiter, marker, options));

                  case 2:
                    _context133.next = 4;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_b.next());

                  case 4:
                    _c = _context133.sent;

                    if (_c.done) {
                      _context133.next = 49;
                      break;
                    }

                    listBlobsHierarchySegmentResponse = _c.value;
                    segment = listBlobsHierarchySegmentResponse.segment;

                    if (!segment.blobPrefixes) {
                      _context133.next = 28;
                      break;
                    }

                    _iterator26 = _createForOfIteratorHelper(segment.blobPrefixes);
                    _context133.prev = 10;

                    _iterator26.s();

                  case 12:
                    if ((_step26 = _iterator26.n()).done) {
                      _context133.next = 20;
                      break;
                    }

                    prefix = _step26.value;
                    _context133.next = 16;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(Object.assign({
                      kind: "prefix"
                    }, prefix));

                  case 16:
                    _context133.next = 18;
                    return _context133.sent;

                  case 18:
                    _context133.next = 12;
                    break;

                  case 20:
                    _context133.next = 25;
                    break;

                  case 22:
                    _context133.prev = 22;
                    _context133.t0 = _context133["catch"](10);

                    _iterator26.e(_context133.t0);

                  case 25:
                    _context133.prev = 25;

                    _iterator26.f();

                    return _context133.finish(25);

                  case 28:
                    _iterator27 = _createForOfIteratorHelper(segment.blobItems);
                    _context133.prev = 29;

                    _iterator27.s();

                  case 31:
                    if ((_step27 = _iterator27.n()).done) {
                      _context133.next = 39;
                      break;
                    }

                    blob = _step27.value;
                    _context133.next = 35;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(Object.assign({
                      kind: "blob"
                    }, blob));

                  case 35:
                    _context133.next = 37;
                    return _context133.sent;

                  case 37:
                    _context133.next = 31;
                    break;

                  case 39:
                    _context133.next = 44;
                    break;

                  case 41:
                    _context133.prev = 41;
                    _context133.t1 = _context133["catch"](29);

                    _iterator27.e(_context133.t1);

                  case 44:
                    _context133.prev = 44;

                    _iterator27.f();

                    return _context133.finish(44);

                  case 47:
                    _context133.next = 2;
                    break;

                  case 49:
                    _context133.next = 54;
                    break;

                  case 51:
                    _context133.prev = 51;
                    _context133.t2 = _context133["catch"](0);
                    e_2 = {
                      error: _context133.t2
                    };

                  case 54:
                    _context133.prev = 54;
                    _context133.prev = 55;

                    if (!(_c && !_c.done && (_a = _b["return"]))) {
                      _context133.next = 59;
                      break;
                    }

                    _context133.next = 59;
                    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__await"])(_a.call(_b));

                  case 59:
                    _context133.prev = 59;

                    if (!e_2) {
                      _context133.next = 62;
                      break;
                    }

                    throw e_2.error;

                  case 62:
                    return _context133.finish(59);

                  case 63:
                    return _context133.finish(54);

                  case 64:
                  case "end":
                    return _context133.stop();
                }
              }
            }, listItemsByHierarchy_1, this, [[0, 51, 54, 64], [10, 22, 25, 28], [29, 41, 44, 47], [55,, 59, 63]]);
          }));
        }
        /**
         * Returns an async iterable iterator to list all the blobs by hierarchy.
         * under the specified account.
         *
         * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.
         *
         * Example using `for await` syntax:
         *
         * ```js
         * for await (const item of containerClient.listBlobsByHierarchy("/")) {
         *   if (item.kind === "prefix") {
         *     console.log(`\tBlobPrefix: ${item.name}`);
         *   } else {
         *     console.log(`\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);
         *   }
         * }
         * ```
         *
         * Example using `iter.next()`:
         *
         * ```js
         * let iter = containerClient.listBlobsByHierarchy("/", { prefix: "prefix1/" });
         * let entity = await iter.next();
         * while (!entity.done) {
         *   let item = entity.value;
         *   if (item.kind === "prefix") {
         *     console.log(`\tBlobPrefix: ${item.name}`);
         *   } else {
         *     console.log(`\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);
         *   }
         *   entity = await iter.next();
         * }
         * ```
         *
         * Example using `byPage()`:
         *
         * ```js
         * console.log("Listing blobs by hierarchy by page");
         * for await (const response of containerClient.listBlobsByHierarchy("/").byPage()) {
         *   const segment = response.segment;
         *   if (segment.blobPrefixes) {
         *     for (const prefix of segment.blobPrefixes) {
         *       console.log(`\tBlobPrefix: ${prefix.name}`);
         *     }
         *   }
         *   for (const blob of response.segment.blobItems) {
         *     console.log(`\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);
         *   }
         * }
         * ```
         *
         * Example using paging with a max page size:
         *
         * ```js
         * console.log("Listing blobs by hierarchy by page, specifying a prefix and a max page size");
         *
         * let i = 1;
         * for await (const response of containerClient.listBlobsByHierarchy("/", { prefix: "prefix2/sub1/"}).byPage({ maxPageSize: 2 })) {
         *   console.log(`Page ${i++}`);
         *   const segment = response.segment;
         *
         *   if (segment.blobPrefixes) {
         *     for (const prefix of segment.blobPrefixes) {
         *       console.log(`\tBlobPrefix: ${prefix.name}`);
         *     }
         *   }
         *
         *   for (const blob of response.segment.blobItems) {
         *     console.log(`\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);
         *   }
         * }
         * ```
         *
         * @param delimiter - The character or string used to define the virtual hierarchy
         * @param options - Options to list blobs operation.
         */

      }, {
        key: "listBlobsByHierarchy",
        value: function listBlobsByHierarchy(delimiter) {
          var _this53 = this,
              _ref19;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          if (delimiter === "") {
            throw new RangeError("delimiter should contain one or more characters");
          }

          var include = [];

          if (options.includeCopy) {
            include.push("copy");
          }

          if (options.includeDeleted) {
            include.push("deleted");
          }

          if (options.includeMetadata) {
            include.push("metadata");
          }

          if (options.includeSnapshots) {
            include.push("snapshots");
          }

          if (options.includeVersions) {
            include.push("versions");
          }

          if (options.includeUncommitedBlobs) {
            include.push("uncommittedblobs");
          }

          if (options.includeTags) {
            include.push("tags");
          }

          if (options.includeDeletedWithVersions) {
            include.push("deletedwithversions");
          }

          if (options.includeImmutabilityPolicy) {
            include.push("immutabilitypolicy");
          }

          if (options.includeLegalHold) {
            include.push("legalhold");
          }

          if (options.prefix === "") {
            options.prefix = undefined;
          }

          var updatedOptions = Object.assign(Object.assign({}, options), include.length > 0 ? {
            include: include
          } : {}); // AsyncIterableIterator to iterate over blob prefixes and blobs

          var iter = this.listItemsByHierarchy(delimiter, updatedOptions);
          return _ref19 = {
            /**
             * The next method, part of the iteration protocol
             */
            next: function next() {
              return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee123() {
                return regeneratorRuntime.wrap(function _callee123$(_context134) {
                  while (1) {
                    switch (_context134.prev = _context134.next) {
                      case 0:
                        return _context134.abrupt("return", iter.next());

                      case 1:
                      case "end":
                        return _context134.stop();
                    }
                  }
                }, _callee123);
              }))();
            }
          }, _defineProperty(_ref19, Symbol.asyncIterator, function () {
            return this;
          }), _defineProperty(_ref19, "byPage", function byPage() {
            var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            return _this53.listHierarchySegments(delimiter, settings.continuationToken, Object.assign({
              maxPageSize: settings.maxPageSize
            }, updatedOptions));
          }), _ref19;
        }
      }, {
        key: "getContainerNameFromUrl",
        value: function getContainerNameFromUrl() {
          var containerName;

          try {
            //  URL may look like the following
            // "https://myaccount.blob.core.windows.net/mycontainer?sasString";
            // "https://myaccount.blob.core.windows.net/mycontainer";
            // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`
            // http://localhost:10001/devstoreaccount1/containername
            var parsedUrl = _azure_core_http__WEBPACK_IMPORTED_MODULE_1__["URLBuilder"].parse(this.url);

            if (parsedUrl.getHost().split(".")[1] === "blob") {
              // "https://myaccount.blob.core.windows.net/containername".
              // "https://customdomain.com/containername".
              // .getPath() -> /containername
              containerName = parsedUrl.getPath().split("/")[1];
            } else if (Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["isIpEndpointStyle"])(parsedUrl)) {
              // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername
              // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername
              // .getPath() -> /devstoreaccount1/containername
              containerName = parsedUrl.getPath().split("/")[2];
            } else {
              // "https://customdomain.com/containername".
              // .getPath() -> /containername
              containerName = parsedUrl.getPath().split("/")[1];
            } // decode the encoded containerName - to get all the special characters that might be present in it


            containerName = decodeURIComponent(containerName);

            if (!containerName) {
              throw new Error("Provided containerName is invalid.");
            }

            return containerName;
          } catch (error) {
            throw new Error("Unable to extract containerName with provided information.");
          }
        }
        /**
         * Only available for ContainerClient constructed with a shared key credential.
         *
         * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties
         * and parameters passed in. The SAS is signed by the shared key credential of the client.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas
         *
         * @param options - Optional parameters.
         * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.
         */

      }, {
        key: "generateSasUrl",
        value: function generateSasUrl(options) {
          var _this54 = this;

          return new Promise(function (resolve) {
            if (!(_this54.credential instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_4__["StorageSharedKeyCredential"])) {
              throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");
            }

            var sas = Object(_sas_BlobSASSignatureValues__WEBPACK_IMPORTED_MODULE_10__["generateBlobSASQueryParameters"])(Object.assign({
              containerName: _this54._containerName
            }, options), _this54.credential).toString();
            resolve(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_9__["appendToURLQuery"])(_this54.url, sas));
          });
        }
        /**
         * Creates a BlobBatchClient object to conduct batch operations.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch
         *
         * @returns A new BlobBatchClient object for this container.
         */

      }, {
        key: "getBlobBatchClient",
        value: function getBlobBatchClient() {
          return new _BlobBatchClient__WEBPACK_IMPORTED_MODULE_13__["BlobBatchClient"](this.url, this.pipeline);
        }
      }]);

      return ContainerClient;
    }(_StorageClient__WEBPACK_IMPORTED_MODULE_7__["StorageClient"]); //# sourceMappingURL=ContainerClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/PageBlobRangeResponse.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPageBlobRangeResponseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rangeResponseFromModel", function () {
      return rangeResponseFromModel;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Function that converts PageRange and ClearRange to a common Range object.
     * PageRange and ClearRange have start and end while Range offset and count
     * this function normalizes to Range.
     * @param response - Model PageBlob Range response
     */


    function rangeResponseFromModel(response) {
      var pageRange = (response._response.parsedBody.pageRange || []).map(function (x) {
        return {
          offset: x.start,
          count: x.end - x.start
        };
      });
      var clearRange = (response._response.parsedBody.clearRange || []).map(function (x) {
        return {
          offset: x.start,
          count: x.end - x.start
        };
      });
      return Object.assign(Object.assign({}, response), {
        pageRange: pageRange,
        clearRange: clearRange,
        _response: Object.assign(Object.assign({}, response._response), {
          parsedBody: {
            pageRange: pageRange,
            clearRange: clearRange
          }
        })
      });
    } //# sourceMappingURL=PageBlobRangeResponse.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPipelineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isPipelineLike", function () {
      return isPipelineLike;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Pipeline", function () {
      return Pipeline;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "newPipeline", function () {
      return newPipeline;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseRequestPolicy", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "deserializationPolicy", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["deserializationPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "HttpHeaders", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WebResource", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["WebResource"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RequestPolicyOptions", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["RequestPolicyOptions"];
    });
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./log */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js");
    /* harmony import */


    var _StorageBrowserPolicyFactory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./StorageBrowserPolicyFactory */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageBrowserPolicyFactory.js");
    /* harmony import */


    var _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./StorageRetryPolicyFactory */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageRetryPolicyFactory.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageOAuthScopes", function () {
      return _utils_constants__WEBPACK_IMPORTED_MODULE_5__["StorageOAuthScopes"];
    });
    /* harmony import */


    var _TelemetryPolicyFactory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./TelemetryPolicyFactory */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/TelemetryPolicyFactory.js");
    /* harmony import */


    var _utils_cache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./utils/cache */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/cache.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // Export following interfaces and types for customers who want to implement their
    // own RequestPolicy or HTTPClient

    /**
     * A helper to decide if a given argument satisfies the Pipeline contract
     * @param pipeline - An argument that may be a Pipeline
     * @returns true when the argument satisfies the Pipeline contract
     */


    function isPipelineLike(pipeline) {
      if (!pipeline || typeof pipeline !== "object") {
        return false;
      }

      var castPipeline = pipeline;
      return Array.isArray(castPipeline.factories) && typeof castPipeline.options === "object" && typeof castPipeline.toServiceClientOptions === "function";
    }
    /**
     * A Pipeline class containing HTTP request policies.
     * You can create a default Pipeline by calling {@link newPipeline}.
     * Or you can create a Pipeline with your own policies by the constructor of Pipeline.
     *
     * Refer to {@link newPipeline} and provided policies before implementing your
     * customized Pipeline.
     */


    var Pipeline = /*#__PURE__*/function () {
      /**
       * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.
       *
       * @param factories -
       * @param options -
       */
      function Pipeline(factories) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Pipeline);

        this.factories = factories; // when options.httpClient is not specified, passing in a DefaultHttpClient instance to
        // avoid each client creating its own http client.

        this.options = Object.assign(Object.assign({}, options), {
          httpClient: options.httpClient || Object(_utils_cache__WEBPACK_IMPORTED_MODULE_7__["getCachedDefaultHttpClient"])()
        });
      }
      /**
       * Transfer Pipeline object to ServiceClientOptions object which is required by
       * ServiceClient constructor.
       *
       * @returns The ServiceClientOptions object from this Pipeline.
       */


      _createClass(Pipeline, [{
        key: "toServiceClientOptions",
        value: function toServiceClientOptions() {
          return {
            httpClient: this.options.httpClient,
            requestPolicyFactories: this.factories
          };
        }
      }]);

      return Pipeline;
    }();
    /**
     * Creates a new Pipeline object with Credential provided.
     *
     * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.
     * @param pipelineOptions - Optional. Options.
     * @returns A new Pipeline object.
     */


    function newPipeline(credential) {
      var pipelineOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (credential === undefined) {
        credential = new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_4__["AnonymousCredential"]();
      } // Order is important. Closer to the API at the top & closer to the network at the bottom.
      // The credential's policy factory must appear close to the wire so it can sign any
      // changes made by other factories (like UniqueRequestIDPolicyFactory)


      var telemetryPolicy = new _TelemetryPolicyFactory__WEBPACK_IMPORTED_MODULE_6__["TelemetryPolicyFactory"](pipelineOptions.userAgentOptions);
      var factories = [Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["tracingPolicy"])({
        userAgent: telemetryPolicy.telemetryString
      }), Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["keepAlivePolicy"])(pipelineOptions.keepAliveOptions), telemetryPolicy, Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["generateClientRequestIdPolicy"])(), new _StorageBrowserPolicyFactory__WEBPACK_IMPORTED_MODULE_2__["StorageBrowserPolicyFactory"](), new _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_3__["StorageRetryPolicyFactory"](pipelineOptions.retryOptions), // Default deserializationPolicy is provided by protocol layer
      // Use customized XML char key of "#" so we could deserialize metadata
      // with "_" key
      Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["deserializationPolicy"])(undefined, {
        xmlCharKey: "#"
      }), Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["logPolicy"])({
        logger: _log__WEBPACK_IMPORTED_MODULE_1__["logger"].info,
        allowedHeaderNames: _utils_constants__WEBPACK_IMPORTED_MODULE_5__["StorageBlobLoggingAllowedHeaderNames"],
        allowedQueryParameters: _utils_constants__WEBPACK_IMPORTED_MODULE_5__["StorageBlobLoggingAllowedQueryParameters"]
      })];

      if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
        // policies only available in Node.js runtime, not in browsers
        factories.push(Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["proxyPolicy"])(pipelineOptions.proxyOptions));
        factories.push(Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["disableResponseDecompressionPolicy"])());
      }

      factories.push(Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isTokenCredential"])(credential) ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_8__["attachCredential"])(Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["bearerTokenAuthenticationPolicy"])(credential, _utils_constants__WEBPACK_IMPORTED_MODULE_5__["StorageOAuthScopes"]), credential) : credential);
      return new Pipeline(factories, pipelineOptions);
    } //# sourceMappingURL=Pipeline.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Range.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcRangeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rangeToString", function () {
      return rangeToString;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Generate a range string. For example:
     *
     * "bytes=255-" or "bytes=0-511"
     *
     * @param iRange -
     */


    function rangeToString(iRange) {
      if (iRange.offset < 0) {
        throw new RangeError("Range.offset cannot be smaller than 0.");
      }

      if (iRange.count && iRange.count <= 0) {
        throw new RangeError("Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.");
      }

      return iRange.count ? "bytes=".concat(iRange.offset, "-").concat(iRange.offset + iRange.count - 1) : "bytes=".concat(iRange.offset, "-");
    } //# sourceMappingURL=Range.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageBrowserPolicyFactory.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcStorageBrowserPolicyFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageBrowserPolicyFactory", function () {
      return StorageBrowserPolicyFactory;
    });
    /* harmony import */


    var _policies_StorageBrowserPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./policies/StorageBrowserPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageBrowserPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageBrowserPolicy", function () {
      return _policies_StorageBrowserPolicy__WEBPACK_IMPORTED_MODULE_0__["StorageBrowserPolicy"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.
     */


    var StorageBrowserPolicyFactory = /*#__PURE__*/function () {
      function StorageBrowserPolicyFactory() {
        _classCallCheck(this, StorageBrowserPolicyFactory);
      }

      _createClass(StorageBrowserPolicyFactory, [{
        key: "create",
        value:
        /**
         * Creates a StorageBrowserPolicyFactory object.
         *
         * @param nextPolicy -
         * @param options -
         */
        function create(nextPolicy, options) {
          return new _policies_StorageBrowserPolicy__WEBPACK_IMPORTED_MODULE_0__["StorageBrowserPolicy"](nextPolicy, options);
        }
      }]);

      return StorageBrowserPolicyFactory;
    }(); //# sourceMappingURL=StorageBrowserPolicyFactory.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcStorageClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageClient", function () {
      return StorageClient;
    });
    /* harmony import */


    var _generated_src_storageClientContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./generated/src/storageClientContext */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}
     * and etc.
     */


    var StorageClient =
    /**
     * Creates an instance of StorageClient.
     * @param url - url to resource
     * @param pipeline - request policy pipeline.
     */
    function StorageClient(url, pipeline) {
      _classCallCheck(this, StorageClient);

      // URL should be encoded and only once, protocol layer shouldn't encode URL again
      this.url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["escapeURLPath"])(url);
      this.accountName = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["getAccountNameFromUrl"])(url);
      this.pipeline = pipeline;
      this.storageClientContext = new _generated_src_storageClientContext__WEBPACK_IMPORTED_MODULE_0__["StorageClientContext"](this.url, pipeline.toServiceClientOptions());
      this.isHttps = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["iEqual"])(Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["getURLScheme"])(this.url) || "", "https");
      this.credential = new _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__["AnonymousCredential"]();

      var _iterator28 = _createForOfIteratorHelper(this.pipeline.factories),
          _step28;

      try {
        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
          var factory = _step28.value;

          if (_azure_core_http__WEBPACK_IMPORTED_MODULE_4__["isNode"] && factory instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_3__["StorageSharedKeyCredential"] || factory instanceof _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_2__["AnonymousCredential"]) {
            this.credential = factory;
          } else if (Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_4__["isTokenCredential"])(factory.credential)) {
            // Only works if the factory has been attached a "credential" property.
            // We do that in newPipeline() when using TokenCredential.
            this.credential = factory.credential;
          }
        } // Override protocol layer's default content-type

      } catch (err) {
        _iterator28.e(err);
      } finally {
        _iterator28.f();
      }

      var storageClientContext = this.storageClientContext;
      storageClientContext.requestContentType = undefined;
    }; //# sourceMappingURL=StorageClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageRetryPolicyFactory.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcStorageRetryPolicyFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicyFactory", function () {
      return StorageRetryPolicyFactory;
    });
    /* harmony import */


    var _policies_StorageRetryPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./policies/StorageRetryPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageRetryPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicyType", function () {
      return _policies_StorageRetryPolicy__WEBPACK_IMPORTED_MODULE_0__["StorageRetryPolicyType"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicy", function () {
      return _policies_StorageRetryPolicy__WEBPACK_IMPORTED_MODULE_0__["StorageRetryPolicy"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.
     */


    var StorageRetryPolicyFactory = /*#__PURE__*/function () {
      /**
       * Creates an instance of StorageRetryPolicyFactory.
       * @param retryOptions -
       */
      function StorageRetryPolicyFactory(retryOptions) {
        _classCallCheck(this, StorageRetryPolicyFactory);

        this.retryOptions = retryOptions;
      }
      /**
       * Creates a StorageRetryPolicy object.
       *
       * @param nextPolicy -
       * @param options -
       */


      _createClass(StorageRetryPolicyFactory, [{
        key: "create",
        value: function create(nextPolicy, options) {
          return new _policies_StorageRetryPolicy__WEBPACK_IMPORTED_MODULE_0__["StorageRetryPolicy"](nextPolicy, options, this.retryOptions);
        }
      }]);

      return StorageRetryPolicyFactory;
    }(); //# sourceMappingURL=StorageRetryPolicyFactory.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/TelemetryPolicyFactory.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcTelemetryPolicyFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TelemetryPolicyFactory", function () {
      return TelemetryPolicyFactory;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! os */
    4);
    /* harmony import */


    var os__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony import */


    var _policies_TelemetryPolicy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./policies/TelemetryPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/TelemetryPolicy.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.
     */


    var TelemetryPolicyFactory = /*#__PURE__*/function () {
      /**
       * Creates an instance of TelemetryPolicyFactory.
       * @param telemetry -
       */
      function TelemetryPolicyFactory(telemetry) {
        _classCallCheck(this, TelemetryPolicyFactory);

        var userAgentInfo = [];

        if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
          if (telemetry) {
            var telemetryString = telemetry.userAgentPrefix || "";

            if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {
              userAgentInfo.push(telemetryString);
            }
          } // e.g. azsdk-js-storageblob/10.0.0


          var libInfo = "azsdk-js-storageblob/".concat(_utils_constants__WEBPACK_IMPORTED_MODULE_3__["SDK_VERSION"]);

          if (userAgentInfo.indexOf(libInfo) === -1) {
            userAgentInfo.push(libInfo);
          } // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)


          var runtimeInfo = "(NODE-VERSION ".concat(process.version, "; ").concat(os__WEBPACK_IMPORTED_MODULE_1__["type"](), " ").concat(os__WEBPACK_IMPORTED_MODULE_1__["release"](), ")");

          if (userAgentInfo.indexOf(runtimeInfo) === -1) {
            userAgentInfo.push(runtimeInfo);
          }
        }

        this.telemetryString = userAgentInfo.join(" ");
      }
      /**
       * Creates a TelemetryPolicy object.
       *
       * @param nextPolicy -
       * @param options -
       */


      _createClass(TelemetryPolicyFactory, [{
        key: "create",
        value: function create(nextPolicy, options) {
          return new _policies_TelemetryPolicy__WEBPACK_IMPORTED_MODULE_2__["TelemetryPolicy"](nextPolicy, options, this.telemetryString);
        }
      }]);

      return TelemetryPolicyFactory;
    }(); //# sourceMappingURL=TelemetryPolicyFactory.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcCredentialsAnonymousCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AnonymousCredential", function () {
      return AnonymousCredential;
    });
    /* harmony import */


    var _policies_AnonymousCredentialPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../policies/AnonymousCredentialPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/AnonymousCredentialPolicy.js");
    /* harmony import */


    var _Credential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Credential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/Credential.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * AnonymousCredential provides a credentialPolicyCreator member used to create
     * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with
     * HTTP(S) requests that read public resources or for use with Shared Access
     * Signatures (SAS).
     */


    var AnonymousCredential = /*#__PURE__*/function (_Credential__WEBPACK_) {
      _inherits(AnonymousCredential, _Credential__WEBPACK_);

      var _super32 = _createSuper(AnonymousCredential);

      function AnonymousCredential() {
        _classCallCheck(this, AnonymousCredential);

        return _super32.apply(this, arguments);
      }

      _createClass(AnonymousCredential, [{
        key: "create",
        value:
        /**
         * Creates an {@link AnonymousCredentialPolicy} object.
         *
         * @param nextPolicy -
         * @param options -
         */
        function create(nextPolicy, options) {
          return new _policies_AnonymousCredentialPolicy__WEBPACK_IMPORTED_MODULE_0__["AnonymousCredentialPolicy"](nextPolicy, options);
        }
      }]);

      return AnonymousCredential;
    }(_Credential__WEBPACK_IMPORTED_MODULE_1__["Credential"]); //# sourceMappingURL=AnonymousCredential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/Credential.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcCredentialsCredentialJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Credential", function () {
      return Credential;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Credential is an abstract class for Azure Storage HTTP requests signing. This
     * class will host an credentialPolicyCreator factory which generates CredentialPolicy.
     */


    var Credential = /*#__PURE__*/function () {
      function Credential() {
        _classCallCheck(this, Credential);
      }

      _createClass(Credential, [{
        key: "create",
        value:
        /**
         * Creates a RequestPolicy object.
         *
         * @param _nextPolicy -
         * @param _options -
         */
        function create(_nextPolicy, _options) {
          throw new Error("Method should be implemented in children classes.");
        }
      }]);

      return Credential;
    }(); //# sourceMappingURL=Credential.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcCredentialsStorageSharedKeyCredentialBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageSharedKeyCredential", function () {
      return StorageSharedKeyCredential;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var StorageSharedKeyCredential = function StorageSharedKeyCredential() {
      _classCallCheck(this, StorageSharedKeyCredential);
    }; //# sourceMappingURL=StorageSharedKeyCredential.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/UserDelegationKeyCredential.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcCredentialsUserDelegationKeyCredentialBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UserDelegationKeyCredential", function () {
      return UserDelegationKeyCredential;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var UserDelegationKeyCredential = function UserDelegationKeyCredential() {
      _classCallCheck(this, UserDelegationKeyCredential);
    }; //# sourceMappingURL=UserDelegationKeyCredential.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/index.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/index.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _storageClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./storageClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageClient", function () {
      return _storageClient__WEBPACK_IMPORTED_MODULE_1__["StorageClient"];
    });
    /* harmony import */


    var _storageClientContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./storageClientContext */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageClientContext", function () {
      return _storageClientContext__WEBPACK_IMPORTED_MODULE_2__["StorageClientContext"];
    });
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/index.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcModelsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcModelsMappersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobServiceProperties", function () {
      return BlobServiceProperties;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Logging", function () {
      return Logging;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "RetentionPolicy", function () {
      return RetentionPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Metrics", function () {
      return Metrics;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CorsRule", function () {
      return CorsRule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StaticWebsite", function () {
      return StaticWebsite;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageError", function () {
      return StorageError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobServiceStatistics", function () {
      return BlobServiceStatistics;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GeoReplication", function () {
      return GeoReplication;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListContainersSegmentResponse", function () {
      return ListContainersSegmentResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerItem", function () {
      return ContainerItem;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerProperties", function () {
      return ContainerProperties;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "KeyInfo", function () {
      return KeyInfo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UserDelegationKey", function () {
      return UserDelegationKey;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FilterBlobSegment", function () {
      return FilterBlobSegment;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FilterBlobItem", function () {
      return FilterBlobItem;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobTags", function () {
      return BlobTags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobTag", function () {
      return BlobTag;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignedIdentifier", function () {
      return SignedIdentifier;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccessPolicy", function () {
      return AccessPolicy;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListBlobsFlatSegmentResponse", function () {
      return ListBlobsFlatSegmentResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobFlatListSegment", function () {
      return BlobFlatListSegment;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobItemInternal", function () {
      return BlobItemInternal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobPropertiesInternal", function () {
      return BlobPropertiesInternal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ListBlobsHierarchySegmentResponse", function () {
      return ListBlobsHierarchySegmentResponse;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobHierarchyListSegment", function () {
      return BlobHierarchyListSegment;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobPrefix", function () {
      return BlobPrefix;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockLookupList", function () {
      return BlockLookupList;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockList", function () {
      return BlockList;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Block", function () {
      return Block;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageList", function () {
      return PageList;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageRange", function () {
      return PageRange;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ClearRange", function () {
      return ClearRange;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "QueryRequest", function () {
      return QueryRequest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "QuerySerialization", function () {
      return QuerySerialization;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "QueryFormat", function () {
      return QueryFormat;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DelimitedTextConfiguration", function () {
      return DelimitedTextConfiguration;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "JsonTextConfiguration", function () {
      return JsonTextConfiguration;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ArrowConfiguration", function () {
      return ArrowConfiguration;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ArrowField", function () {
      return ArrowField;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceSetPropertiesHeaders", function () {
      return ServiceSetPropertiesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceSetPropertiesExceptionHeaders", function () {
      return ServiceSetPropertiesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetPropertiesHeaders", function () {
      return ServiceGetPropertiesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetPropertiesExceptionHeaders", function () {
      return ServiceGetPropertiesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetStatisticsHeaders", function () {
      return ServiceGetStatisticsHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetStatisticsExceptionHeaders", function () {
      return ServiceGetStatisticsExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceListContainersSegmentHeaders", function () {
      return ServiceListContainersSegmentHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceListContainersSegmentExceptionHeaders", function () {
      return ServiceListContainersSegmentExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetUserDelegationKeyHeaders", function () {
      return ServiceGetUserDelegationKeyHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetUserDelegationKeyExceptionHeaders", function () {
      return ServiceGetUserDelegationKeyExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetAccountInfoHeaders", function () {
      return ServiceGetAccountInfoHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceGetAccountInfoExceptionHeaders", function () {
      return ServiceGetAccountInfoExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceSubmitBatchHeaders", function () {
      return ServiceSubmitBatchHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceSubmitBatchExceptionHeaders", function () {
      return ServiceSubmitBatchExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceFilterBlobsHeaders", function () {
      return ServiceFilterBlobsHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ServiceFilterBlobsExceptionHeaders", function () {
      return ServiceFilterBlobsExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerCreateHeaders", function () {
      return ContainerCreateHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerCreateExceptionHeaders", function () {
      return ContainerCreateExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetPropertiesHeaders", function () {
      return ContainerGetPropertiesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetPropertiesExceptionHeaders", function () {
      return ContainerGetPropertiesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerDeleteHeaders", function () {
      return ContainerDeleteHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerDeleteExceptionHeaders", function () {
      return ContainerDeleteExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSetMetadataHeaders", function () {
      return ContainerSetMetadataHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSetMetadataExceptionHeaders", function () {
      return ContainerSetMetadataExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetAccessPolicyHeaders", function () {
      return ContainerGetAccessPolicyHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetAccessPolicyExceptionHeaders", function () {
      return ContainerGetAccessPolicyExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSetAccessPolicyHeaders", function () {
      return ContainerSetAccessPolicyHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSetAccessPolicyExceptionHeaders", function () {
      return ContainerSetAccessPolicyExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRestoreHeaders", function () {
      return ContainerRestoreHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRestoreExceptionHeaders", function () {
      return ContainerRestoreExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRenameHeaders", function () {
      return ContainerRenameHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRenameExceptionHeaders", function () {
      return ContainerRenameExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSubmitBatchHeaders", function () {
      return ContainerSubmitBatchHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSubmitBatchExceptionHeaders", function () {
      return ContainerSubmitBatchExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerAcquireLeaseHeaders", function () {
      return ContainerAcquireLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerAcquireLeaseExceptionHeaders", function () {
      return ContainerAcquireLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerReleaseLeaseHeaders", function () {
      return ContainerReleaseLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerReleaseLeaseExceptionHeaders", function () {
      return ContainerReleaseLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRenewLeaseHeaders", function () {
      return ContainerRenewLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerRenewLeaseExceptionHeaders", function () {
      return ContainerRenewLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerBreakLeaseHeaders", function () {
      return ContainerBreakLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerBreakLeaseExceptionHeaders", function () {
      return ContainerBreakLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerChangeLeaseHeaders", function () {
      return ContainerChangeLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerChangeLeaseExceptionHeaders", function () {
      return ContainerChangeLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerListBlobFlatSegmentHeaders", function () {
      return ContainerListBlobFlatSegmentHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerListBlobFlatSegmentExceptionHeaders", function () {
      return ContainerListBlobFlatSegmentExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerListBlobHierarchySegmentHeaders", function () {
      return ContainerListBlobHierarchySegmentHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerListBlobHierarchySegmentExceptionHeaders", function () {
      return ContainerListBlobHierarchySegmentExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetAccountInfoHeaders", function () {
      return ContainerGetAccountInfoHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerGetAccountInfoExceptionHeaders", function () {
      return ContainerGetAccountInfoExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDownloadHeaders", function () {
      return BlobDownloadHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDownloadExceptionHeaders", function () {
      return BlobDownloadExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetPropertiesHeaders", function () {
      return BlobGetPropertiesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetPropertiesExceptionHeaders", function () {
      return BlobGetPropertiesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDeleteHeaders", function () {
      return BlobDeleteHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDeleteExceptionHeaders", function () {
      return BlobDeleteExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobUndeleteHeaders", function () {
      return BlobUndeleteHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobUndeleteExceptionHeaders", function () {
      return BlobUndeleteExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetExpiryHeaders", function () {
      return BlobSetExpiryHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetExpiryExceptionHeaders", function () {
      return BlobSetExpiryExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetHttpHeadersHeaders", function () {
      return BlobSetHttpHeadersHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetHttpHeadersExceptionHeaders", function () {
      return BlobSetHttpHeadersExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetImmutabilityPolicyHeaders", function () {
      return BlobSetImmutabilityPolicyHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetImmutabilityPolicyExceptionHeaders", function () {
      return BlobSetImmutabilityPolicyExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDeleteImmutabilityPolicyHeaders", function () {
      return BlobDeleteImmutabilityPolicyHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobDeleteImmutabilityPolicyExceptionHeaders", function () {
      return BlobDeleteImmutabilityPolicyExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetLegalHoldHeaders", function () {
      return BlobSetLegalHoldHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetLegalHoldExceptionHeaders", function () {
      return BlobSetLegalHoldExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetMetadataHeaders", function () {
      return BlobSetMetadataHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetMetadataExceptionHeaders", function () {
      return BlobSetMetadataExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobAcquireLeaseHeaders", function () {
      return BlobAcquireLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobAcquireLeaseExceptionHeaders", function () {
      return BlobAcquireLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobReleaseLeaseHeaders", function () {
      return BlobReleaseLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobReleaseLeaseExceptionHeaders", function () {
      return BlobReleaseLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobRenewLeaseHeaders", function () {
      return BlobRenewLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobRenewLeaseExceptionHeaders", function () {
      return BlobRenewLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobChangeLeaseHeaders", function () {
      return BlobChangeLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobChangeLeaseExceptionHeaders", function () {
      return BlobChangeLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobBreakLeaseHeaders", function () {
      return BlobBreakLeaseHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobBreakLeaseExceptionHeaders", function () {
      return BlobBreakLeaseExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobCreateSnapshotHeaders", function () {
      return BlobCreateSnapshotHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobCreateSnapshotExceptionHeaders", function () {
      return BlobCreateSnapshotExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobStartCopyFromURLHeaders", function () {
      return BlobStartCopyFromURLHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobStartCopyFromURLExceptionHeaders", function () {
      return BlobStartCopyFromURLExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobCopyFromURLHeaders", function () {
      return BlobCopyFromURLHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobCopyFromURLExceptionHeaders", function () {
      return BlobCopyFromURLExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobAbortCopyFromURLHeaders", function () {
      return BlobAbortCopyFromURLHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobAbortCopyFromURLExceptionHeaders", function () {
      return BlobAbortCopyFromURLExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetTierHeaders", function () {
      return BlobSetTierHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetTierExceptionHeaders", function () {
      return BlobSetTierExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetAccountInfoHeaders", function () {
      return BlobGetAccountInfoHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetAccountInfoExceptionHeaders", function () {
      return BlobGetAccountInfoExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobQueryHeaders", function () {
      return BlobQueryHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobQueryExceptionHeaders", function () {
      return BlobQueryExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetTagsHeaders", function () {
      return BlobGetTagsHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobGetTagsExceptionHeaders", function () {
      return BlobGetTagsExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetTagsHeaders", function () {
      return BlobSetTagsHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSetTagsExceptionHeaders", function () {
      return BlobSetTagsExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobCreateHeaders", function () {
      return PageBlobCreateHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobCreateExceptionHeaders", function () {
      return PageBlobCreateExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUploadPagesHeaders", function () {
      return PageBlobUploadPagesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUploadPagesExceptionHeaders", function () {
      return PageBlobUploadPagesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobClearPagesHeaders", function () {
      return PageBlobClearPagesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobClearPagesExceptionHeaders", function () {
      return PageBlobClearPagesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUploadPagesFromURLHeaders", function () {
      return PageBlobUploadPagesFromURLHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUploadPagesFromURLExceptionHeaders", function () {
      return PageBlobUploadPagesFromURLExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobGetPageRangesHeaders", function () {
      return PageBlobGetPageRangesHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobGetPageRangesExceptionHeaders", function () {
      return PageBlobGetPageRangesExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobGetPageRangesDiffHeaders", function () {
      return PageBlobGetPageRangesDiffHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobGetPageRangesDiffExceptionHeaders", function () {
      return PageBlobGetPageRangesDiffExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobResizeHeaders", function () {
      return PageBlobResizeHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobResizeExceptionHeaders", function () {
      return PageBlobResizeExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUpdateSequenceNumberHeaders", function () {
      return PageBlobUpdateSequenceNumberHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobUpdateSequenceNumberExceptionHeaders", function () {
      return PageBlobUpdateSequenceNumberExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobCopyIncrementalHeaders", function () {
      return PageBlobCopyIncrementalHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlobCopyIncrementalExceptionHeaders", function () {
      return PageBlobCopyIncrementalExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobCreateHeaders", function () {
      return AppendBlobCreateHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobCreateExceptionHeaders", function () {
      return AppendBlobCreateExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobAppendBlockHeaders", function () {
      return AppendBlobAppendBlockHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobAppendBlockExceptionHeaders", function () {
      return AppendBlobAppendBlockExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobAppendBlockFromUrlHeaders", function () {
      return AppendBlobAppendBlockFromUrlHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobAppendBlockFromUrlExceptionHeaders", function () {
      return AppendBlobAppendBlockFromUrlExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobSealHeaders", function () {
      return AppendBlobSealHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobSealExceptionHeaders", function () {
      return AppendBlobSealExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobUploadHeaders", function () {
      return BlockBlobUploadHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobUploadExceptionHeaders", function () {
      return BlockBlobUploadExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobPutBlobFromUrlHeaders", function () {
      return BlockBlobPutBlobFromUrlHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobPutBlobFromUrlExceptionHeaders", function () {
      return BlockBlobPutBlobFromUrlExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobStageBlockHeaders", function () {
      return BlockBlobStageBlockHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobStageBlockExceptionHeaders", function () {
      return BlockBlobStageBlockExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobStageBlockFromURLHeaders", function () {
      return BlockBlobStageBlockFromURLHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobStageBlockFromURLExceptionHeaders", function () {
      return BlockBlobStageBlockFromURLExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobCommitBlockListHeaders", function () {
      return BlockBlobCommitBlockListHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobCommitBlockListExceptionHeaders", function () {
      return BlockBlobCommitBlockListExceptionHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobGetBlockListHeaders", function () {
      return BlockBlobGetBlockListHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobGetBlockListExceptionHeaders", function () {
      return BlockBlobGetBlockListExceptionHeaders;
    });
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */


    var BlobServiceProperties = {
      serializedName: "BlobServiceProperties",
      xmlName: "StorageServiceProperties",
      type: {
        name: "Composite",
        className: "BlobServiceProperties",
        modelProperties: {
          blobAnalyticsLogging: {
            serializedName: "Logging",
            xmlName: "Logging",
            type: {
              name: "Composite",
              className: "Logging"
            }
          },
          hourMetrics: {
            serializedName: "HourMetrics",
            xmlName: "HourMetrics",
            type: {
              name: "Composite",
              className: "Metrics"
            }
          },
          minuteMetrics: {
            serializedName: "MinuteMetrics",
            xmlName: "MinuteMetrics",
            type: {
              name: "Composite",
              className: "Metrics"
            }
          },
          cors: {
            serializedName: "Cors",
            xmlName: "Cors",
            xmlIsWrapped: true,
            xmlElementName: "CorsRule",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "CorsRule"
                }
              }
            }
          },
          defaultServiceVersion: {
            serializedName: "DefaultServiceVersion",
            xmlName: "DefaultServiceVersion",
            type: {
              name: "String"
            }
          },
          deleteRetentionPolicy: {
            serializedName: "DeleteRetentionPolicy",
            xmlName: "DeleteRetentionPolicy",
            type: {
              name: "Composite",
              className: "RetentionPolicy"
            }
          },
          staticWebsite: {
            serializedName: "StaticWebsite",
            xmlName: "StaticWebsite",
            type: {
              name: "Composite",
              className: "StaticWebsite"
            }
          }
        }
      }
    };
    var Logging = {
      serializedName: "Logging",
      type: {
        name: "Composite",
        className: "Logging",
        modelProperties: {
          version: {
            serializedName: "Version",
            required: true,
            xmlName: "Version",
            type: {
              name: "String"
            }
          },
          deleteProperty: {
            serializedName: "Delete",
            required: true,
            xmlName: "Delete",
            type: {
              name: "Boolean"
            }
          },
          read: {
            serializedName: "Read",
            required: true,
            xmlName: "Read",
            type: {
              name: "Boolean"
            }
          },
          write: {
            serializedName: "Write",
            required: true,
            xmlName: "Write",
            type: {
              name: "Boolean"
            }
          },
          retentionPolicy: {
            serializedName: "RetentionPolicy",
            xmlName: "RetentionPolicy",
            type: {
              name: "Composite",
              className: "RetentionPolicy"
            }
          }
        }
      }
    };
    var RetentionPolicy = {
      serializedName: "RetentionPolicy",
      type: {
        name: "Composite",
        className: "RetentionPolicy",
        modelProperties: {
          enabled: {
            serializedName: "Enabled",
            required: true,
            xmlName: "Enabled",
            type: {
              name: "Boolean"
            }
          },
          days: {
            constraints: {
              InclusiveMinimum: 1
            },
            serializedName: "Days",
            xmlName: "Days",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var Metrics = {
      serializedName: "Metrics",
      type: {
        name: "Composite",
        className: "Metrics",
        modelProperties: {
          version: {
            serializedName: "Version",
            xmlName: "Version",
            type: {
              name: "String"
            }
          },
          enabled: {
            serializedName: "Enabled",
            required: true,
            xmlName: "Enabled",
            type: {
              name: "Boolean"
            }
          },
          includeAPIs: {
            serializedName: "IncludeAPIs",
            xmlName: "IncludeAPIs",
            type: {
              name: "Boolean"
            }
          },
          retentionPolicy: {
            serializedName: "RetentionPolicy",
            xmlName: "RetentionPolicy",
            type: {
              name: "Composite",
              className: "RetentionPolicy"
            }
          }
        }
      }
    };
    var CorsRule = {
      serializedName: "CorsRule",
      type: {
        name: "Composite",
        className: "CorsRule",
        modelProperties: {
          allowedOrigins: {
            serializedName: "AllowedOrigins",
            required: true,
            xmlName: "AllowedOrigins",
            type: {
              name: "String"
            }
          },
          allowedMethods: {
            serializedName: "AllowedMethods",
            required: true,
            xmlName: "AllowedMethods",
            type: {
              name: "String"
            }
          },
          allowedHeaders: {
            serializedName: "AllowedHeaders",
            required: true,
            xmlName: "AllowedHeaders",
            type: {
              name: "String"
            }
          },
          exposedHeaders: {
            serializedName: "ExposedHeaders",
            required: true,
            xmlName: "ExposedHeaders",
            type: {
              name: "String"
            }
          },
          maxAgeInSeconds: {
            constraints: {
              InclusiveMinimum: 0
            },
            serializedName: "MaxAgeInSeconds",
            required: true,
            xmlName: "MaxAgeInSeconds",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var StaticWebsite = {
      serializedName: "StaticWebsite",
      type: {
        name: "Composite",
        className: "StaticWebsite",
        modelProperties: {
          enabled: {
            serializedName: "Enabled",
            required: true,
            xmlName: "Enabled",
            type: {
              name: "Boolean"
            }
          },
          indexDocument: {
            serializedName: "IndexDocument",
            xmlName: "IndexDocument",
            type: {
              name: "String"
            }
          },
          errorDocument404Path: {
            serializedName: "ErrorDocument404Path",
            xmlName: "ErrorDocument404Path",
            type: {
              name: "String"
            }
          },
          defaultIndexDocumentPath: {
            serializedName: "DefaultIndexDocumentPath",
            xmlName: "DefaultIndexDocumentPath",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var StorageError = {
      serializedName: "StorageError",
      type: {
        name: "Composite",
        className: "StorageError",
        modelProperties: {
          message: {
            serializedName: "Message",
            xmlName: "Message",
            type: {
              name: "String"
            }
          },
          code: {
            serializedName: "Code",
            xmlName: "Code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobServiceStatistics = {
      serializedName: "BlobServiceStatistics",
      xmlName: "StorageServiceStats",
      type: {
        name: "Composite",
        className: "BlobServiceStatistics",
        modelProperties: {
          geoReplication: {
            serializedName: "GeoReplication",
            xmlName: "GeoReplication",
            type: {
              name: "Composite",
              className: "GeoReplication"
            }
          }
        }
      }
    };
    var GeoReplication = {
      serializedName: "GeoReplication",
      type: {
        name: "Composite",
        className: "GeoReplication",
        modelProperties: {
          status: {
            serializedName: "Status",
            required: true,
            xmlName: "Status",
            type: {
              name: "Enum",
              allowedValues: ["live", "bootstrap", "unavailable"]
            }
          },
          lastSyncOn: {
            serializedName: "LastSyncTime",
            required: true,
            xmlName: "LastSyncTime",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ListContainersSegmentResponse = {
      serializedName: "ListContainersSegmentResponse",
      xmlName: "EnumerationResults",
      type: {
        name: "Composite",
        className: "ListContainersSegmentResponse",
        modelProperties: {
          serviceEndpoint: {
            serializedName: "ServiceEndpoint",
            required: true,
            xmlName: "ServiceEndpoint",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          prefix: {
            serializedName: "Prefix",
            xmlName: "Prefix",
            type: {
              name: "String"
            }
          },
          marker: {
            serializedName: "Marker",
            xmlName: "Marker",
            type: {
              name: "String"
            }
          },
          maxPageSize: {
            serializedName: "MaxResults",
            xmlName: "MaxResults",
            type: {
              name: "Number"
            }
          },
          containerItems: {
            serializedName: "ContainerItems",
            required: true,
            xmlName: "Containers",
            xmlIsWrapped: true,
            xmlElementName: "Container",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "ContainerItem"
                }
              }
            }
          },
          continuationToken: {
            serializedName: "NextMarker",
            xmlName: "NextMarker",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerItem = {
      serializedName: "ContainerItem",
      xmlName: "Container",
      type: {
        name: "Composite",
        className: "ContainerItem",
        modelProperties: {
          name: {
            serializedName: "Name",
            required: true,
            xmlName: "Name",
            type: {
              name: "String"
            }
          },
          deleted: {
            serializedName: "Deleted",
            xmlName: "Deleted",
            type: {
              name: "Boolean"
            }
          },
          version: {
            serializedName: "Version",
            xmlName: "Version",
            type: {
              name: "String"
            }
          },
          properties: {
            serializedName: "Properties",
            xmlName: "Properties",
            type: {
              name: "Composite",
              className: "ContainerProperties"
            }
          },
          metadata: {
            serializedName: "Metadata",
            xmlName: "Metadata",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    };
    var ContainerProperties = {
      serializedName: "ContainerProperties",
      type: {
        name: "Composite",
        className: "ContainerProperties",
        modelProperties: {
          lastModified: {
            serializedName: "Last-Modified",
            required: true,
            xmlName: "Last-Modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          etag: {
            serializedName: "Etag",
            required: true,
            xmlName: "Etag",
            type: {
              name: "String"
            }
          },
          leaseStatus: {
            serializedName: "LeaseStatus",
            xmlName: "LeaseStatus",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          leaseState: {
            serializedName: "LeaseState",
            xmlName: "LeaseState",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseDuration: {
            serializedName: "LeaseDuration",
            xmlName: "LeaseDuration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          publicAccess: {
            serializedName: "PublicAccess",
            xmlName: "PublicAccess",
            type: {
              name: "Enum",
              allowedValues: ["container", "blob"]
            }
          },
          hasImmutabilityPolicy: {
            serializedName: "HasImmutabilityPolicy",
            xmlName: "HasImmutabilityPolicy",
            type: {
              name: "Boolean"
            }
          },
          hasLegalHold: {
            serializedName: "HasLegalHold",
            xmlName: "HasLegalHold",
            type: {
              name: "Boolean"
            }
          },
          defaultEncryptionScope: {
            serializedName: "DefaultEncryptionScope",
            xmlName: "DefaultEncryptionScope",
            type: {
              name: "String"
            }
          },
          preventEncryptionScopeOverride: {
            serializedName: "DenyEncryptionScopeOverride",
            xmlName: "DenyEncryptionScopeOverride",
            type: {
              name: "Boolean"
            }
          },
          deletedOn: {
            serializedName: "DeletedTime",
            xmlName: "DeletedTime",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          remainingRetentionDays: {
            serializedName: "RemainingRetentionDays",
            xmlName: "RemainingRetentionDays",
            type: {
              name: "Number"
            }
          },
          isImmutableStorageWithVersioningEnabled: {
            serializedName: "ImmutableStorageWithVersioningEnabled",
            xmlName: "ImmutableStorageWithVersioningEnabled",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var KeyInfo = {
      serializedName: "KeyInfo",
      type: {
        name: "Composite",
        className: "KeyInfo",
        modelProperties: {
          startsOn: {
            serializedName: "Start",
            required: true,
            xmlName: "Start",
            type: {
              name: "String"
            }
          },
          expiresOn: {
            serializedName: "Expiry",
            required: true,
            xmlName: "Expiry",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var UserDelegationKey = {
      serializedName: "UserDelegationKey",
      type: {
        name: "Composite",
        className: "UserDelegationKey",
        modelProperties: {
          signedObjectId: {
            serializedName: "SignedOid",
            required: true,
            xmlName: "SignedOid",
            type: {
              name: "String"
            }
          },
          signedTenantId: {
            serializedName: "SignedTid",
            required: true,
            xmlName: "SignedTid",
            type: {
              name: "String"
            }
          },
          signedStartsOn: {
            serializedName: "SignedStart",
            required: true,
            xmlName: "SignedStart",
            type: {
              name: "String"
            }
          },
          signedExpiresOn: {
            serializedName: "SignedExpiry",
            required: true,
            xmlName: "SignedExpiry",
            type: {
              name: "String"
            }
          },
          signedService: {
            serializedName: "SignedService",
            required: true,
            xmlName: "SignedService",
            type: {
              name: "String"
            }
          },
          signedVersion: {
            serializedName: "SignedVersion",
            required: true,
            xmlName: "SignedVersion",
            type: {
              name: "String"
            }
          },
          value: {
            serializedName: "Value",
            required: true,
            xmlName: "Value",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var FilterBlobSegment = {
      serializedName: "FilterBlobSegment",
      xmlName: "EnumerationResults",
      type: {
        name: "Composite",
        className: "FilterBlobSegment",
        modelProperties: {
          serviceEndpoint: {
            serializedName: "ServiceEndpoint",
            required: true,
            xmlName: "ServiceEndpoint",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          where: {
            serializedName: "Where",
            required: true,
            xmlName: "Where",
            type: {
              name: "String"
            }
          },
          blobs: {
            serializedName: "Blobs",
            required: true,
            xmlName: "Blobs",
            xmlIsWrapped: true,
            xmlElementName: "Blob",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "FilterBlobItem"
                }
              }
            }
          },
          continuationToken: {
            serializedName: "NextMarker",
            xmlName: "NextMarker",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var FilterBlobItem = {
      serializedName: "FilterBlobItem",
      xmlName: "Blob",
      type: {
        name: "Composite",
        className: "FilterBlobItem",
        modelProperties: {
          name: {
            serializedName: "Name",
            required: true,
            xmlName: "Name",
            type: {
              name: "String"
            }
          },
          containerName: {
            serializedName: "ContainerName",
            required: true,
            xmlName: "ContainerName",
            type: {
              name: "String"
            }
          },
          tags: {
            serializedName: "Tags",
            xmlName: "Tags",
            type: {
              name: "Composite",
              className: "BlobTags"
            }
          }
        }
      }
    };
    var BlobTags = {
      serializedName: "BlobTags",
      xmlName: "Tags",
      type: {
        name: "Composite",
        className: "BlobTags",
        modelProperties: {
          blobTagSet: {
            serializedName: "BlobTagSet",
            required: true,
            xmlName: "TagSet",
            xmlIsWrapped: true,
            xmlElementName: "Tag",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "BlobTag"
                }
              }
            }
          }
        }
      }
    };
    var BlobTag = {
      serializedName: "BlobTag",
      xmlName: "Tag",
      type: {
        name: "Composite",
        className: "BlobTag",
        modelProperties: {
          key: {
            serializedName: "Key",
            required: true,
            xmlName: "Key",
            type: {
              name: "String"
            }
          },
          value: {
            serializedName: "Value",
            required: true,
            xmlName: "Value",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var SignedIdentifier = {
      serializedName: "SignedIdentifier",
      xmlName: "SignedIdentifier",
      type: {
        name: "Composite",
        className: "SignedIdentifier",
        modelProperties: {
          id: {
            serializedName: "Id",
            required: true,
            xmlName: "Id",
            type: {
              name: "String"
            }
          },
          accessPolicy: {
            serializedName: "AccessPolicy",
            xmlName: "AccessPolicy",
            type: {
              name: "Composite",
              className: "AccessPolicy"
            }
          }
        }
      }
    };
    var AccessPolicy = {
      serializedName: "AccessPolicy",
      type: {
        name: "Composite",
        className: "AccessPolicy",
        modelProperties: {
          startsOn: {
            serializedName: "Start",
            xmlName: "Start",
            type: {
              name: "String"
            }
          },
          expiresOn: {
            serializedName: "Expiry",
            xmlName: "Expiry",
            type: {
              name: "String"
            }
          },
          permissions: {
            serializedName: "Permission",
            xmlName: "Permission",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ListBlobsFlatSegmentResponse = {
      serializedName: "ListBlobsFlatSegmentResponse",
      xmlName: "EnumerationResults",
      type: {
        name: "Composite",
        className: "ListBlobsFlatSegmentResponse",
        modelProperties: {
          serviceEndpoint: {
            serializedName: "ServiceEndpoint",
            required: true,
            xmlName: "ServiceEndpoint",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          containerName: {
            serializedName: "ContainerName",
            required: true,
            xmlName: "ContainerName",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          prefix: {
            serializedName: "Prefix",
            xmlName: "Prefix",
            type: {
              name: "String"
            }
          },
          marker: {
            serializedName: "Marker",
            xmlName: "Marker",
            type: {
              name: "String"
            }
          },
          maxPageSize: {
            serializedName: "MaxResults",
            xmlName: "MaxResults",
            type: {
              name: "Number"
            }
          },
          segment: {
            serializedName: "Segment",
            xmlName: "Blobs",
            type: {
              name: "Composite",
              className: "BlobFlatListSegment"
            }
          },
          continuationToken: {
            serializedName: "NextMarker",
            xmlName: "NextMarker",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobFlatListSegment = {
      serializedName: "BlobFlatListSegment",
      xmlName: "Blobs",
      type: {
        name: "Composite",
        className: "BlobFlatListSegment",
        modelProperties: {
          blobItems: {
            serializedName: "BlobItems",
            required: true,
            xmlName: "BlobItems",
            xmlElementName: "Blob",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "BlobItemInternal"
                }
              }
            }
          }
        }
      }
    };
    var BlobItemInternal = {
      serializedName: "BlobItemInternal",
      xmlName: "Blob",
      type: {
        name: "Composite",
        className: "BlobItemInternal",
        modelProperties: {
          name: {
            serializedName: "Name",
            required: true,
            xmlName: "Name",
            type: {
              name: "String"
            }
          },
          deleted: {
            serializedName: "Deleted",
            required: true,
            xmlName: "Deleted",
            type: {
              name: "Boolean"
            }
          },
          snapshot: {
            serializedName: "Snapshot",
            required: true,
            xmlName: "Snapshot",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "VersionId",
            xmlName: "VersionId",
            type: {
              name: "String"
            }
          },
          isCurrentVersion: {
            serializedName: "IsCurrentVersion",
            xmlName: "IsCurrentVersion",
            type: {
              name: "Boolean"
            }
          },
          properties: {
            serializedName: "Properties",
            xmlName: "Properties",
            type: {
              name: "Composite",
              className: "BlobPropertiesInternal"
            }
          },
          metadata: {
            serializedName: "Metadata",
            xmlName: "Metadata",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          },
          blobTags: {
            serializedName: "BlobTags",
            xmlName: "Tags",
            type: {
              name: "Composite",
              className: "BlobTags"
            }
          },
          objectReplicationMetadata: {
            serializedName: "ObjectReplicationMetadata",
            xmlName: "OrMetadata",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          },
          hasVersionsOnly: {
            serializedName: "HasVersionsOnly",
            xmlName: "HasVersionsOnly",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var BlobPropertiesInternal = {
      serializedName: "BlobPropertiesInternal",
      xmlName: "Properties",
      type: {
        name: "Composite",
        className: "BlobPropertiesInternal",
        modelProperties: {
          createdOn: {
            serializedName: "Creation-Time",
            xmlName: "Creation-Time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          lastModified: {
            serializedName: "Last-Modified",
            required: true,
            xmlName: "Last-Modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          etag: {
            serializedName: "Etag",
            required: true,
            xmlName: "Etag",
            type: {
              name: "String"
            }
          },
          contentLength: {
            serializedName: "Content-Length",
            xmlName: "Content-Length",
            type: {
              name: "Number"
            }
          },
          contentType: {
            serializedName: "Content-Type",
            xmlName: "Content-Type",
            type: {
              name: "String"
            }
          },
          contentEncoding: {
            serializedName: "Content-Encoding",
            xmlName: "Content-Encoding",
            type: {
              name: "String"
            }
          },
          contentLanguage: {
            serializedName: "Content-Language",
            xmlName: "Content-Language",
            type: {
              name: "String"
            }
          },
          contentMD5: {
            serializedName: "Content-MD5",
            xmlName: "Content-MD5",
            type: {
              name: "ByteArray"
            }
          },
          contentDisposition: {
            serializedName: "Content-Disposition",
            xmlName: "Content-Disposition",
            type: {
              name: "String"
            }
          },
          cacheControl: {
            serializedName: "Cache-Control",
            xmlName: "Cache-Control",
            type: {
              name: "String"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          blobType: {
            serializedName: "BlobType",
            xmlName: "BlobType",
            type: {
              name: "Enum",
              allowedValues: ["BlockBlob", "PageBlob", "AppendBlob"]
            }
          },
          leaseStatus: {
            serializedName: "LeaseStatus",
            xmlName: "LeaseStatus",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          leaseState: {
            serializedName: "LeaseState",
            xmlName: "LeaseState",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseDuration: {
            serializedName: "LeaseDuration",
            xmlName: "LeaseDuration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          copyId: {
            serializedName: "CopyId",
            xmlName: "CopyId",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "CopyStatus",
            xmlName: "CopyStatus",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          copySource: {
            serializedName: "CopySource",
            xmlName: "CopySource",
            type: {
              name: "String"
            }
          },
          copyProgress: {
            serializedName: "CopyProgress",
            xmlName: "CopyProgress",
            type: {
              name: "String"
            }
          },
          copyCompletedOn: {
            serializedName: "CopyCompletionTime",
            xmlName: "CopyCompletionTime",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyStatusDescription: {
            serializedName: "CopyStatusDescription",
            xmlName: "CopyStatusDescription",
            type: {
              name: "String"
            }
          },
          serverEncrypted: {
            serializedName: "ServerEncrypted",
            xmlName: "ServerEncrypted",
            type: {
              name: "Boolean"
            }
          },
          incrementalCopy: {
            serializedName: "IncrementalCopy",
            xmlName: "IncrementalCopy",
            type: {
              name: "Boolean"
            }
          },
          destinationSnapshot: {
            serializedName: "DestinationSnapshot",
            xmlName: "DestinationSnapshot",
            type: {
              name: "String"
            }
          },
          deletedOn: {
            serializedName: "DeletedTime",
            xmlName: "DeletedTime",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          remainingRetentionDays: {
            serializedName: "RemainingRetentionDays",
            xmlName: "RemainingRetentionDays",
            type: {
              name: "Number"
            }
          },
          accessTier: {
            serializedName: "AccessTier",
            xmlName: "AccessTier",
            type: {
              name: "Enum",
              allowedValues: ["P4", "P6", "P10", "P15", "P20", "P30", "P40", "P50", "P60", "P70", "P80", "Hot", "Cool", "Archive"]
            }
          },
          accessTierInferred: {
            serializedName: "AccessTierInferred",
            xmlName: "AccessTierInferred",
            type: {
              name: "Boolean"
            }
          },
          archiveStatus: {
            serializedName: "ArchiveStatus",
            xmlName: "ArchiveStatus",
            type: {
              name: "Enum",
              allowedValues: ["rehydrate-pending-to-hot", "rehydrate-pending-to-cool"]
            }
          },
          customerProvidedKeySha256: {
            serializedName: "CustomerProvidedKeySha256",
            xmlName: "CustomerProvidedKeySha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "EncryptionScope",
            xmlName: "EncryptionScope",
            type: {
              name: "String"
            }
          },
          accessTierChangedOn: {
            serializedName: "AccessTierChangeTime",
            xmlName: "AccessTierChangeTime",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          tagCount: {
            serializedName: "TagCount",
            xmlName: "TagCount",
            type: {
              name: "Number"
            }
          },
          expiresOn: {
            serializedName: "Expiry-Time",
            xmlName: "Expiry-Time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isSealed: {
            serializedName: "Sealed",
            xmlName: "Sealed",
            type: {
              name: "Boolean"
            }
          },
          rehydratePriority: {
            serializedName: "RehydratePriority",
            xmlName: "RehydratePriority",
            type: {
              name: "Enum",
              allowedValues: ["High", "Standard"]
            }
          },
          lastAccessedOn: {
            serializedName: "LastAccessTime",
            xmlName: "LastAccessTime",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyExpiresOn: {
            serializedName: "ImmutabilityPolicyUntilDate",
            xmlName: "ImmutabilityPolicyUntilDate",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyMode: {
            serializedName: "ImmutabilityPolicyMode",
            xmlName: "ImmutabilityPolicyMode",
            type: {
              name: "Enum",
              allowedValues: ["Mutable", "Unlocked", "Locked"]
            }
          },
          legalHold: {
            serializedName: "LegalHold",
            xmlName: "LegalHold",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var ListBlobsHierarchySegmentResponse = {
      serializedName: "ListBlobsHierarchySegmentResponse",
      xmlName: "EnumerationResults",
      type: {
        name: "Composite",
        className: "ListBlobsHierarchySegmentResponse",
        modelProperties: {
          serviceEndpoint: {
            serializedName: "ServiceEndpoint",
            required: true,
            xmlName: "ServiceEndpoint",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          containerName: {
            serializedName: "ContainerName",
            required: true,
            xmlName: "ContainerName",
            xmlIsAttribute: true,
            type: {
              name: "String"
            }
          },
          prefix: {
            serializedName: "Prefix",
            xmlName: "Prefix",
            type: {
              name: "String"
            }
          },
          marker: {
            serializedName: "Marker",
            xmlName: "Marker",
            type: {
              name: "String"
            }
          },
          maxPageSize: {
            serializedName: "MaxResults",
            xmlName: "MaxResults",
            type: {
              name: "Number"
            }
          },
          delimiter: {
            serializedName: "Delimiter",
            xmlName: "Delimiter",
            type: {
              name: "String"
            }
          },
          segment: {
            serializedName: "Segment",
            xmlName: "Blobs",
            type: {
              name: "Composite",
              className: "BlobHierarchyListSegment"
            }
          },
          continuationToken: {
            serializedName: "NextMarker",
            xmlName: "NextMarker",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobHierarchyListSegment = {
      serializedName: "BlobHierarchyListSegment",
      xmlName: "Blobs",
      type: {
        name: "Composite",
        className: "BlobHierarchyListSegment",
        modelProperties: {
          blobPrefixes: {
            serializedName: "BlobPrefixes",
            xmlName: "BlobPrefixes",
            xmlElementName: "BlobPrefix",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "BlobPrefix"
                }
              }
            }
          },
          blobItems: {
            serializedName: "BlobItems",
            required: true,
            xmlName: "BlobItems",
            xmlElementName: "Blob",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "BlobItemInternal"
                }
              }
            }
          }
        }
      }
    };
    var BlobPrefix = {
      serializedName: "BlobPrefix",
      type: {
        name: "Composite",
        className: "BlobPrefix",
        modelProperties: {
          name: {
            serializedName: "Name",
            required: true,
            xmlName: "Name",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockLookupList = {
      serializedName: "BlockLookupList",
      xmlName: "BlockList",
      type: {
        name: "Composite",
        className: "BlockLookupList",
        modelProperties: {
          committed: {
            serializedName: "Committed",
            xmlName: "Committed",
            xmlElementName: "Committed",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          },
          uncommitted: {
            serializedName: "Uncommitted",
            xmlName: "Uncommitted",
            xmlElementName: "Uncommitted",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          },
          latest: {
            serializedName: "Latest",
            xmlName: "Latest",
            xmlElementName: "Latest",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      }
    };
    var BlockList = {
      serializedName: "BlockList",
      type: {
        name: "Composite",
        className: "BlockList",
        modelProperties: {
          committedBlocks: {
            serializedName: "CommittedBlocks",
            xmlName: "CommittedBlocks",
            xmlIsWrapped: true,
            xmlElementName: "Block",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "Block"
                }
              }
            }
          },
          uncommittedBlocks: {
            serializedName: "UncommittedBlocks",
            xmlName: "UncommittedBlocks",
            xmlIsWrapped: true,
            xmlElementName: "Block",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "Block"
                }
              }
            }
          }
        }
      }
    };
    var Block = {
      serializedName: "Block",
      type: {
        name: "Composite",
        className: "Block",
        modelProperties: {
          name: {
            serializedName: "Name",
            required: true,
            xmlName: "Name",
            type: {
              name: "String"
            }
          },
          size: {
            serializedName: "Size",
            required: true,
            xmlName: "Size",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var PageList = {
      serializedName: "PageList",
      type: {
        name: "Composite",
        className: "PageList",
        modelProperties: {
          pageRange: {
            serializedName: "PageRange",
            xmlName: "PageRange",
            xmlElementName: "PageRange",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "PageRange"
                }
              }
            }
          },
          clearRange: {
            serializedName: "ClearRange",
            xmlName: "ClearRange",
            xmlElementName: "ClearRange",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "ClearRange"
                }
              }
            }
          }
        }
      }
    };
    var PageRange = {
      serializedName: "PageRange",
      xmlName: "PageRange",
      type: {
        name: "Composite",
        className: "PageRange",
        modelProperties: {
          start: {
            serializedName: "Start",
            required: true,
            xmlName: "Start",
            type: {
              name: "Number"
            }
          },
          end: {
            serializedName: "End",
            required: true,
            xmlName: "End",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var ClearRange = {
      serializedName: "ClearRange",
      xmlName: "ClearRange",
      type: {
        name: "Composite",
        className: "ClearRange",
        modelProperties: {
          start: {
            serializedName: "Start",
            required: true,
            xmlName: "Start",
            type: {
              name: "Number"
            }
          },
          end: {
            serializedName: "End",
            required: true,
            xmlName: "End",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var QueryRequest = {
      serializedName: "QueryRequest",
      xmlName: "QueryRequest",
      type: {
        name: "Composite",
        className: "QueryRequest",
        modelProperties: {
          queryType: {
            serializedName: "QueryType",
            required: true,
            xmlName: "QueryType",
            type: {
              name: "String"
            }
          },
          expression: {
            serializedName: "Expression",
            required: true,
            xmlName: "Expression",
            type: {
              name: "String"
            }
          },
          inputSerialization: {
            serializedName: "InputSerialization",
            xmlName: "InputSerialization",
            type: {
              name: "Composite",
              className: "QuerySerialization"
            }
          },
          outputSerialization: {
            serializedName: "OutputSerialization",
            xmlName: "OutputSerialization",
            type: {
              name: "Composite",
              className: "QuerySerialization"
            }
          }
        }
      }
    };
    var QuerySerialization = {
      serializedName: "QuerySerialization",
      type: {
        name: "Composite",
        className: "QuerySerialization",
        modelProperties: {
          format: {
            serializedName: "Format",
            xmlName: "Format",
            type: {
              name: "Composite",
              className: "QueryFormat"
            }
          }
        }
      }
    };
    var QueryFormat = {
      serializedName: "QueryFormat",
      type: {
        name: "Composite",
        className: "QueryFormat",
        modelProperties: {
          type: {
            serializedName: "Type",
            required: true,
            xmlName: "Type",
            type: {
              name: "Enum",
              allowedValues: ["delimited", "json", "arrow", "parquet"]
            }
          },
          delimitedTextConfiguration: {
            serializedName: "DelimitedTextConfiguration",
            xmlName: "DelimitedTextConfiguration",
            type: {
              name: "Composite",
              className: "DelimitedTextConfiguration"
            }
          },
          jsonTextConfiguration: {
            serializedName: "JsonTextConfiguration",
            xmlName: "JsonTextConfiguration",
            type: {
              name: "Composite",
              className: "JsonTextConfiguration"
            }
          },
          arrowConfiguration: {
            serializedName: "ArrowConfiguration",
            xmlName: "ArrowConfiguration",
            type: {
              name: "Composite",
              className: "ArrowConfiguration"
            }
          },
          parquetTextConfiguration: {
            serializedName: "ParquetTextConfiguration",
            xmlName: "ParquetTextConfiguration",
            type: {
              name: "any"
            }
          }
        }
      }
    };
    var DelimitedTextConfiguration = {
      serializedName: "DelimitedTextConfiguration",
      xmlName: "DelimitedTextConfiguration",
      type: {
        name: "Composite",
        className: "DelimitedTextConfiguration",
        modelProperties: {
          columnSeparator: {
            serializedName: "ColumnSeparator",
            xmlName: "ColumnSeparator",
            type: {
              name: "String"
            }
          },
          fieldQuote: {
            serializedName: "FieldQuote",
            xmlName: "FieldQuote",
            type: {
              name: "String"
            }
          },
          recordSeparator: {
            serializedName: "RecordSeparator",
            xmlName: "RecordSeparator",
            type: {
              name: "String"
            }
          },
          escapeChar: {
            serializedName: "EscapeChar",
            xmlName: "EscapeChar",
            type: {
              name: "String"
            }
          },
          headersPresent: {
            serializedName: "HeadersPresent",
            xmlName: "HasHeaders",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var JsonTextConfiguration = {
      serializedName: "JsonTextConfiguration",
      xmlName: "JsonTextConfiguration",
      type: {
        name: "Composite",
        className: "JsonTextConfiguration",
        modelProperties: {
          recordSeparator: {
            serializedName: "RecordSeparator",
            xmlName: "RecordSeparator",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ArrowConfiguration = {
      serializedName: "ArrowConfiguration",
      xmlName: "ArrowConfiguration",
      type: {
        name: "Composite",
        className: "ArrowConfiguration",
        modelProperties: {
          schema: {
            serializedName: "Schema",
            required: true,
            xmlName: "Schema",
            xmlIsWrapped: true,
            xmlElementName: "Field",
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "ArrowField"
                }
              }
            }
          }
        }
      }
    };
    var ArrowField = {
      serializedName: "ArrowField",
      xmlName: "Field",
      type: {
        name: "Composite",
        className: "ArrowField",
        modelProperties: {
          type: {
            serializedName: "Type",
            required: true,
            xmlName: "Type",
            type: {
              name: "String"
            }
          },
          name: {
            serializedName: "Name",
            xmlName: "Name",
            type: {
              name: "String"
            }
          },
          precision: {
            serializedName: "Precision",
            xmlName: "Precision",
            type: {
              name: "Number"
            }
          },
          scale: {
            serializedName: "Scale",
            xmlName: "Scale",
            type: {
              name: "Number"
            }
          }
        }
      }
    };
    var ServiceSetPropertiesHeaders = {
      serializedName: "Service_setPropertiesHeaders",
      type: {
        name: "Composite",
        className: "ServiceSetPropertiesHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceSetPropertiesExceptionHeaders = {
      serializedName: "Service_setPropertiesExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceSetPropertiesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetPropertiesHeaders = {
      serializedName: "Service_getPropertiesHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetPropertiesHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetPropertiesExceptionHeaders = {
      serializedName: "Service_getPropertiesExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetPropertiesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetStatisticsHeaders = {
      serializedName: "Service_getStatisticsHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetStatisticsHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetStatisticsExceptionHeaders = {
      serializedName: "Service_getStatisticsExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetStatisticsExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceListContainersSegmentHeaders = {
      serializedName: "Service_listContainersSegmentHeaders",
      type: {
        name: "Composite",
        className: "ServiceListContainersSegmentHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceListContainersSegmentExceptionHeaders = {
      serializedName: "Service_listContainersSegmentExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceListContainersSegmentExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetUserDelegationKeyHeaders = {
      serializedName: "Service_getUserDelegationKeyHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetUserDelegationKeyHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetUserDelegationKeyExceptionHeaders = {
      serializedName: "Service_getUserDelegationKeyExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetUserDelegationKeyExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetAccountInfoHeaders = {
      serializedName: "Service_getAccountInfoHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetAccountInfoHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          skuName: {
            serializedName: "x-ms-sku-name",
            xmlName: "x-ms-sku-name",
            type: {
              name: "Enum",
              allowedValues: ["Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Standard_ZRS", "Premium_LRS"]
            }
          },
          accountKind: {
            serializedName: "x-ms-account-kind",
            xmlName: "x-ms-account-kind",
            type: {
              name: "Enum",
              allowedValues: ["Storage", "BlobStorage", "StorageV2", "FileStorage", "BlockBlobStorage"]
            }
          },
          isHierarchicalNamespaceEnabled: {
            serializedName: "x-ms-is-hns-enabled",
            xmlName: "x-ms-is-hns-enabled",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceGetAccountInfoExceptionHeaders = {
      serializedName: "Service_getAccountInfoExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceGetAccountInfoExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceSubmitBatchHeaders = {
      serializedName: "Service_submitBatchHeaders",
      type: {
        name: "Composite",
        className: "ServiceSubmitBatchHeaders",
        modelProperties: {
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceSubmitBatchExceptionHeaders = {
      serializedName: "Service_submitBatchExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceSubmitBatchExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceFilterBlobsHeaders = {
      serializedName: "Service_filterBlobsHeaders",
      type: {
        name: "Composite",
        className: "ServiceFilterBlobsHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ServiceFilterBlobsExceptionHeaders = {
      serializedName: "Service_filterBlobsExceptionHeaders",
      type: {
        name: "Composite",
        className: "ServiceFilterBlobsExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerCreateHeaders = {
      serializedName: "Container_createHeaders",
      type: {
        name: "Composite",
        className: "ContainerCreateHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerCreateExceptionHeaders = {
      serializedName: "Container_createExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerCreateExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerGetPropertiesHeaders = {
      serializedName: "Container_getPropertiesHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetPropertiesHeaders",
        modelProperties: {
          metadata: {
            serializedName: "x-ms-meta",
            xmlName: "x-ms-meta",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            },
            headerCollectionPrefix: "x-ms-meta-"
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseDuration: {
            serializedName: "x-ms-lease-duration",
            xmlName: "x-ms-lease-duration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          leaseState: {
            serializedName: "x-ms-lease-state",
            xmlName: "x-ms-lease-state",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseStatus: {
            serializedName: "x-ms-lease-status",
            xmlName: "x-ms-lease-status",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobPublicAccess: {
            serializedName: "x-ms-blob-public-access",
            xmlName: "x-ms-blob-public-access",
            type: {
              name: "Enum",
              allowedValues: ["container", "blob"]
            }
          },
          hasImmutabilityPolicy: {
            serializedName: "x-ms-has-immutability-policy",
            xmlName: "x-ms-has-immutability-policy",
            type: {
              name: "Boolean"
            }
          },
          hasLegalHold: {
            serializedName: "x-ms-has-legal-hold",
            xmlName: "x-ms-has-legal-hold",
            type: {
              name: "Boolean"
            }
          },
          defaultEncryptionScope: {
            serializedName: "x-ms-default-encryption-scope",
            xmlName: "x-ms-default-encryption-scope",
            type: {
              name: "String"
            }
          },
          denyEncryptionScopeOverride: {
            serializedName: "x-ms-deny-encryption-scope-override",
            xmlName: "x-ms-deny-encryption-scope-override",
            type: {
              name: "Boolean"
            }
          },
          isImmutableStorageWithVersioningEnabled: {
            serializedName: "x-ms-immutable-storage-with-versioning-enabled",
            xmlName: "x-ms-immutable-storage-with-versioning-enabled",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerGetPropertiesExceptionHeaders = {
      serializedName: "Container_getPropertiesExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetPropertiesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerDeleteHeaders = {
      serializedName: "Container_deleteHeaders",
      type: {
        name: "Composite",
        className: "ContainerDeleteHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerDeleteExceptionHeaders = {
      serializedName: "Container_deleteExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerDeleteExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSetMetadataHeaders = {
      serializedName: "Container_setMetadataHeaders",
      type: {
        name: "Composite",
        className: "ContainerSetMetadataHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSetMetadataExceptionHeaders = {
      serializedName: "Container_setMetadataExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerSetMetadataExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerGetAccessPolicyHeaders = {
      serializedName: "Container_getAccessPolicyHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetAccessPolicyHeaders",
        modelProperties: {
          blobPublicAccess: {
            serializedName: "x-ms-blob-public-access",
            xmlName: "x-ms-blob-public-access",
            type: {
              name: "Enum",
              allowedValues: ["container", "blob"]
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerGetAccessPolicyExceptionHeaders = {
      serializedName: "Container_getAccessPolicyExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetAccessPolicyExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSetAccessPolicyHeaders = {
      serializedName: "Container_setAccessPolicyHeaders",
      type: {
        name: "Composite",
        className: "ContainerSetAccessPolicyHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSetAccessPolicyExceptionHeaders = {
      serializedName: "Container_setAccessPolicyExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerSetAccessPolicyExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerRestoreHeaders = {
      serializedName: "Container_restoreHeaders",
      type: {
        name: "Composite",
        className: "ContainerRestoreHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerRestoreExceptionHeaders = {
      serializedName: "Container_restoreExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerRestoreExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerRenameHeaders = {
      serializedName: "Container_renameHeaders",
      type: {
        name: "Composite",
        className: "ContainerRenameHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerRenameExceptionHeaders = {
      serializedName: "Container_renameExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerRenameExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSubmitBatchHeaders = {
      serializedName: "Container_submitBatchHeaders",
      type: {
        name: "Composite",
        className: "ContainerSubmitBatchHeaders",
        modelProperties: {
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerSubmitBatchExceptionHeaders = {
      serializedName: "Container_submitBatchExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerSubmitBatchExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerAcquireLeaseHeaders = {
      serializedName: "Container_acquireLeaseHeaders",
      type: {
        name: "Composite",
        className: "ContainerAcquireLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ContainerAcquireLeaseExceptionHeaders = {
      serializedName: "Container_acquireLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerAcquireLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerReleaseLeaseHeaders = {
      serializedName: "Container_releaseLeaseHeaders",
      type: {
        name: "Composite",
        className: "ContainerReleaseLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ContainerReleaseLeaseExceptionHeaders = {
      serializedName: "Container_releaseLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerReleaseLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerRenewLeaseHeaders = {
      serializedName: "Container_renewLeaseHeaders",
      type: {
        name: "Composite",
        className: "ContainerRenewLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ContainerRenewLeaseExceptionHeaders = {
      serializedName: "Container_renewLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerRenewLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerBreakLeaseHeaders = {
      serializedName: "Container_breakLeaseHeaders",
      type: {
        name: "Composite",
        className: "ContainerBreakLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseTime: {
            serializedName: "x-ms-lease-time",
            xmlName: "x-ms-lease-time",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ContainerBreakLeaseExceptionHeaders = {
      serializedName: "Container_breakLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerBreakLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerChangeLeaseHeaders = {
      serializedName: "Container_changeLeaseHeaders",
      type: {
        name: "Composite",
        className: "ContainerChangeLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var ContainerChangeLeaseExceptionHeaders = {
      serializedName: "Container_changeLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerChangeLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerListBlobFlatSegmentHeaders = {
      serializedName: "Container_listBlobFlatSegmentHeaders",
      type: {
        name: "Composite",
        className: "ContainerListBlobFlatSegmentHeaders",
        modelProperties: {
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerListBlobFlatSegmentExceptionHeaders = {
      serializedName: "Container_listBlobFlatSegmentExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerListBlobFlatSegmentExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerListBlobHierarchySegmentHeaders = {
      serializedName: "Container_listBlobHierarchySegmentHeaders",
      type: {
        name: "Composite",
        className: "ContainerListBlobHierarchySegmentHeaders",
        modelProperties: {
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerListBlobHierarchySegmentExceptionHeaders = {
      serializedName: "Container_listBlobHierarchySegmentExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerListBlobHierarchySegmentExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var ContainerGetAccountInfoHeaders = {
      serializedName: "Container_getAccountInfoHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetAccountInfoHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          skuName: {
            serializedName: "x-ms-sku-name",
            xmlName: "x-ms-sku-name",
            type: {
              name: "Enum",
              allowedValues: ["Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Standard_ZRS", "Premium_LRS"]
            }
          },
          accountKind: {
            serializedName: "x-ms-account-kind",
            xmlName: "x-ms-account-kind",
            type: {
              name: "Enum",
              allowedValues: ["Storage", "BlobStorage", "StorageV2", "FileStorage", "BlockBlobStorage"]
            }
          }
        }
      }
    };
    var ContainerGetAccountInfoExceptionHeaders = {
      serializedName: "Container_getAccountInfoExceptionHeaders",
      type: {
        name: "Composite",
        className: "ContainerGetAccountInfoExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobDownloadHeaders = {
      serializedName: "Blob_downloadHeaders",
      type: {
        name: "Composite",
        className: "BlobDownloadHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          metadata: {
            serializedName: "x-ms-meta",
            xmlName: "x-ms-meta",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            },
            headerCollectionPrefix: "x-ms-meta-"
          },
          objectReplicationPolicyId: {
            serializedName: "x-ms-or-policy-id",
            xmlName: "x-ms-or-policy-id",
            type: {
              name: "String"
            }
          },
          objectReplicationRules: {
            serializedName: "x-ms-or",
            xmlName: "x-ms-or",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            },
            headerCollectionPrefix: "x-ms-or-"
          },
          contentLength: {
            serializedName: "content-length",
            xmlName: "content-length",
            type: {
              name: "Number"
            }
          },
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          contentRange: {
            serializedName: "content-range",
            xmlName: "content-range",
            type: {
              name: "String"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          contentEncoding: {
            serializedName: "content-encoding",
            xmlName: "content-encoding",
            type: {
              name: "String"
            }
          },
          cacheControl: {
            serializedName: "cache-control",
            xmlName: "cache-control",
            type: {
              name: "String"
            }
          },
          contentDisposition: {
            serializedName: "content-disposition",
            xmlName: "content-disposition",
            type: {
              name: "String"
            }
          },
          contentLanguage: {
            serializedName: "content-language",
            xmlName: "content-language",
            type: {
              name: "String"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          blobType: {
            serializedName: "x-ms-blob-type",
            xmlName: "x-ms-blob-type",
            type: {
              name: "Enum",
              allowedValues: ["BlockBlob", "PageBlob", "AppendBlob"]
            }
          },
          copyCompletedOn: {
            serializedName: "x-ms-copy-completion-time",
            xmlName: "x-ms-copy-completion-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyStatusDescription: {
            serializedName: "x-ms-copy-status-description",
            xmlName: "x-ms-copy-status-description",
            type: {
              name: "String"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyProgress: {
            serializedName: "x-ms-copy-progress",
            xmlName: "x-ms-copy-progress",
            type: {
              name: "String"
            }
          },
          copySource: {
            serializedName: "x-ms-copy-source",
            xmlName: "x-ms-copy-source",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "x-ms-copy-status",
            xmlName: "x-ms-copy-status",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          leaseDuration: {
            serializedName: "x-ms-lease-duration",
            xmlName: "x-ms-lease-duration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          leaseState: {
            serializedName: "x-ms-lease-state",
            xmlName: "x-ms-lease-state",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseStatus: {
            serializedName: "x-ms-lease-status",
            xmlName: "x-ms-lease-status",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          isCurrentVersion: {
            serializedName: "x-ms-is-current-version",
            xmlName: "x-ms-is-current-version",
            type: {
              name: "Boolean"
            }
          },
          acceptRanges: {
            serializedName: "accept-ranges",
            xmlName: "accept-ranges",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobCommittedBlockCount: {
            serializedName: "x-ms-blob-committed-block-count",
            xmlName: "x-ms-blob-committed-block-count",
            type: {
              name: "Number"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-server-encrypted",
            xmlName: "x-ms-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          blobContentMD5: {
            serializedName: "x-ms-blob-content-md5",
            xmlName: "x-ms-blob-content-md5",
            type: {
              name: "ByteArray"
            }
          },
          tagCount: {
            serializedName: "x-ms-tag-count",
            xmlName: "x-ms-tag-count",
            type: {
              name: "Number"
            }
          },
          isSealed: {
            serializedName: "x-ms-blob-sealed",
            xmlName: "x-ms-blob-sealed",
            type: {
              name: "Boolean"
            }
          },
          lastAccessed: {
            serializedName: "x-ms-last-access-time",
            xmlName: "x-ms-last-access-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyExpiresOn: {
            serializedName: "x-ms-immutability-policy-until-date",
            xmlName: "x-ms-immutability-policy-until-date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyMode: {
            serializedName: "x-ms-immutability-policy-mode",
            xmlName: "x-ms-immutability-policy-mode",
            type: {
              name: "Enum",
              allowedValues: ["Mutable", "Unlocked", "Locked"]
            }
          },
          legalHold: {
            serializedName: "x-ms-legal-hold",
            xmlName: "x-ms-legal-hold",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          },
          contentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          }
        }
      }
    };
    var BlobDownloadExceptionHeaders = {
      serializedName: "Blob_downloadExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobDownloadExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobGetPropertiesHeaders = {
      serializedName: "Blob_getPropertiesHeaders",
      type: {
        name: "Composite",
        className: "BlobGetPropertiesHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          createdOn: {
            serializedName: "x-ms-creation-time",
            xmlName: "x-ms-creation-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          metadata: {
            serializedName: "x-ms-meta",
            xmlName: "x-ms-meta",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            },
            headerCollectionPrefix: "x-ms-meta-"
          },
          objectReplicationPolicyId: {
            serializedName: "x-ms-or-policy-id",
            xmlName: "x-ms-or-policy-id",
            type: {
              name: "String"
            }
          },
          objectReplicationRules: {
            serializedName: "x-ms-or",
            xmlName: "x-ms-or",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            },
            headerCollectionPrefix: "x-ms-or-"
          },
          blobType: {
            serializedName: "x-ms-blob-type",
            xmlName: "x-ms-blob-type",
            type: {
              name: "Enum",
              allowedValues: ["BlockBlob", "PageBlob", "AppendBlob"]
            }
          },
          copyCompletedOn: {
            serializedName: "x-ms-copy-completion-time",
            xmlName: "x-ms-copy-completion-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyStatusDescription: {
            serializedName: "x-ms-copy-status-description",
            xmlName: "x-ms-copy-status-description",
            type: {
              name: "String"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyProgress: {
            serializedName: "x-ms-copy-progress",
            xmlName: "x-ms-copy-progress",
            type: {
              name: "String"
            }
          },
          copySource: {
            serializedName: "x-ms-copy-source",
            xmlName: "x-ms-copy-source",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "x-ms-copy-status",
            xmlName: "x-ms-copy-status",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          isIncrementalCopy: {
            serializedName: "x-ms-incremental-copy",
            xmlName: "x-ms-incremental-copy",
            type: {
              name: "Boolean"
            }
          },
          destinationSnapshot: {
            serializedName: "x-ms-copy-destination-snapshot",
            xmlName: "x-ms-copy-destination-snapshot",
            type: {
              name: "String"
            }
          },
          leaseDuration: {
            serializedName: "x-ms-lease-duration",
            xmlName: "x-ms-lease-duration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          leaseState: {
            serializedName: "x-ms-lease-state",
            xmlName: "x-ms-lease-state",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseStatus: {
            serializedName: "x-ms-lease-status",
            xmlName: "x-ms-lease-status",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          contentLength: {
            serializedName: "content-length",
            xmlName: "content-length",
            type: {
              name: "Number"
            }
          },
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          contentEncoding: {
            serializedName: "content-encoding",
            xmlName: "content-encoding",
            type: {
              name: "String"
            }
          },
          contentDisposition: {
            serializedName: "content-disposition",
            xmlName: "content-disposition",
            type: {
              name: "String"
            }
          },
          contentLanguage: {
            serializedName: "content-language",
            xmlName: "content-language",
            type: {
              name: "String"
            }
          },
          cacheControl: {
            serializedName: "cache-control",
            xmlName: "cache-control",
            type: {
              name: "String"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          acceptRanges: {
            serializedName: "accept-ranges",
            xmlName: "accept-ranges",
            type: {
              name: "String"
            }
          },
          blobCommittedBlockCount: {
            serializedName: "x-ms-blob-committed-block-count",
            xmlName: "x-ms-blob-committed-block-count",
            type: {
              name: "Number"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-server-encrypted",
            xmlName: "x-ms-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          accessTier: {
            serializedName: "x-ms-access-tier",
            xmlName: "x-ms-access-tier",
            type: {
              name: "String"
            }
          },
          accessTierInferred: {
            serializedName: "x-ms-access-tier-inferred",
            xmlName: "x-ms-access-tier-inferred",
            type: {
              name: "Boolean"
            }
          },
          archiveStatus: {
            serializedName: "x-ms-archive-status",
            xmlName: "x-ms-archive-status",
            type: {
              name: "String"
            }
          },
          accessTierChangedOn: {
            serializedName: "x-ms-access-tier-change-time",
            xmlName: "x-ms-access-tier-change-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          isCurrentVersion: {
            serializedName: "x-ms-is-current-version",
            xmlName: "x-ms-is-current-version",
            type: {
              name: "Boolean"
            }
          },
          tagCount: {
            serializedName: "x-ms-tag-count",
            xmlName: "x-ms-tag-count",
            type: {
              name: "Number"
            }
          },
          expiresOn: {
            serializedName: "x-ms-expiry-time",
            xmlName: "x-ms-expiry-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isSealed: {
            serializedName: "x-ms-blob-sealed",
            xmlName: "x-ms-blob-sealed",
            type: {
              name: "Boolean"
            }
          },
          rehydratePriority: {
            serializedName: "x-ms-rehydrate-priority",
            xmlName: "x-ms-rehydrate-priority",
            type: {
              name: "Enum",
              allowedValues: ["High", "Standard"]
            }
          },
          lastAccessed: {
            serializedName: "x-ms-last-access-time",
            xmlName: "x-ms-last-access-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyExpiresOn: {
            serializedName: "x-ms-immutability-policy-until-date",
            xmlName: "x-ms-immutability-policy-until-date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyMode: {
            serializedName: "x-ms-immutability-policy-mode",
            xmlName: "x-ms-immutability-policy-mode",
            type: {
              name: "Enum",
              allowedValues: ["Mutable", "Unlocked", "Locked"]
            }
          },
          legalHold: {
            serializedName: "x-ms-legal-hold",
            xmlName: "x-ms-legal-hold",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobGetPropertiesExceptionHeaders = {
      serializedName: "Blob_getPropertiesExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobGetPropertiesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobDeleteHeaders = {
      serializedName: "Blob_deleteHeaders",
      type: {
        name: "Composite",
        className: "BlobDeleteHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobDeleteExceptionHeaders = {
      serializedName: "Blob_deleteExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobDeleteExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobUndeleteHeaders = {
      serializedName: "Blob_undeleteHeaders",
      type: {
        name: "Composite",
        className: "BlobUndeleteHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobUndeleteExceptionHeaders = {
      serializedName: "Blob_undeleteExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobUndeleteExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetExpiryHeaders = {
      serializedName: "Blob_setExpiryHeaders",
      type: {
        name: "Composite",
        className: "BlobSetExpiryHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobSetExpiryExceptionHeaders = {
      serializedName: "Blob_setExpiryExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetExpiryExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetHttpHeadersHeaders = {
      serializedName: "Blob_setHttpHeadersHeaders",
      type: {
        name: "Composite",
        className: "BlobSetHttpHeadersHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetHttpHeadersExceptionHeaders = {
      serializedName: "Blob_setHttpHeadersExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetHttpHeadersExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetImmutabilityPolicyHeaders = {
      serializedName: "Blob_setImmutabilityPolicyHeaders",
      type: {
        name: "Composite",
        className: "BlobSetImmutabilityPolicyHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyExpiry: {
            serializedName: "x-ms-immutability-policy-until-date",
            xmlName: "x-ms-immutability-policy-until-date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          immutabilityPolicyMode: {
            serializedName: "x-ms-immutability-policy-mode",
            xmlName: "x-ms-immutability-policy-mode",
            type: {
              name: "Enum",
              allowedValues: ["Mutable", "Unlocked", "Locked"]
            }
          }
        }
      }
    };
    var BlobSetImmutabilityPolicyExceptionHeaders = {
      serializedName: "Blob_setImmutabilityPolicyExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetImmutabilityPolicyExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobDeleteImmutabilityPolicyHeaders = {
      serializedName: "Blob_deleteImmutabilityPolicyHeaders",
      type: {
        name: "Composite",
        className: "BlobDeleteImmutabilityPolicyHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobDeleteImmutabilityPolicyExceptionHeaders = {
      serializedName: "Blob_deleteImmutabilityPolicyExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobDeleteImmutabilityPolicyExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetLegalHoldHeaders = {
      serializedName: "Blob_setLegalHoldHeaders",
      type: {
        name: "Composite",
        className: "BlobSetLegalHoldHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          legalHold: {
            serializedName: "x-ms-legal-hold",
            xmlName: "x-ms-legal-hold",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var BlobSetLegalHoldExceptionHeaders = {
      serializedName: "Blob_setLegalHoldExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetLegalHoldExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetMetadataHeaders = {
      serializedName: "Blob_setMetadataHeaders",
      type: {
        name: "Composite",
        className: "BlobSetMetadataHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetMetadataExceptionHeaders = {
      serializedName: "Blob_setMetadataExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetMetadataExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobAcquireLeaseHeaders = {
      serializedName: "Blob_acquireLeaseHeaders",
      type: {
        name: "Composite",
        className: "BlobAcquireLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobAcquireLeaseExceptionHeaders = {
      serializedName: "Blob_acquireLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobAcquireLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobReleaseLeaseHeaders = {
      serializedName: "Blob_releaseLeaseHeaders",
      type: {
        name: "Composite",
        className: "BlobReleaseLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobReleaseLeaseExceptionHeaders = {
      serializedName: "Blob_releaseLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobReleaseLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobRenewLeaseHeaders = {
      serializedName: "Blob_renewLeaseHeaders",
      type: {
        name: "Composite",
        className: "BlobRenewLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobRenewLeaseExceptionHeaders = {
      serializedName: "Blob_renewLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobRenewLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobChangeLeaseHeaders = {
      serializedName: "Blob_changeLeaseHeaders",
      type: {
        name: "Composite",
        className: "BlobChangeLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          leaseId: {
            serializedName: "x-ms-lease-id",
            xmlName: "x-ms-lease-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobChangeLeaseExceptionHeaders = {
      serializedName: "Blob_changeLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobChangeLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobBreakLeaseHeaders = {
      serializedName: "Blob_breakLeaseHeaders",
      type: {
        name: "Composite",
        className: "BlobBreakLeaseHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          leaseTime: {
            serializedName: "x-ms-lease-time",
            xmlName: "x-ms-lease-time",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          }
        }
      }
    };
    var BlobBreakLeaseExceptionHeaders = {
      serializedName: "Blob_breakLeaseExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobBreakLeaseExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobCreateSnapshotHeaders = {
      serializedName: "Blob_createSnapshotHeaders",
      type: {
        name: "Composite",
        className: "BlobCreateSnapshotHeaders",
        modelProperties: {
          snapshot: {
            serializedName: "x-ms-snapshot",
            xmlName: "x-ms-snapshot",
            type: {
              name: "String"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobCreateSnapshotExceptionHeaders = {
      serializedName: "Blob_createSnapshotExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobCreateSnapshotExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobStartCopyFromURLHeaders = {
      serializedName: "Blob_startCopyFromURLHeaders",
      type: {
        name: "Composite",
        className: "BlobStartCopyFromURLHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "x-ms-copy-status",
            xmlName: "x-ms-copy-status",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobStartCopyFromURLExceptionHeaders = {
      serializedName: "Blob_startCopyFromURLExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobStartCopyFromURLExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobCopyFromURLHeaders = {
      serializedName: "Blob_copyFromURLHeaders",
      type: {
        name: "Composite",
        className: "BlobCopyFromURLHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            defaultValue: "success",
            isConstant: true,
            serializedName: "x-ms-copy-status",
            type: {
              name: "String"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobCopyFromURLExceptionHeaders = {
      serializedName: "Blob_copyFromURLExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobCopyFromURLExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobAbortCopyFromURLHeaders = {
      serializedName: "Blob_abortCopyFromURLHeaders",
      type: {
        name: "Composite",
        className: "BlobAbortCopyFromURLHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobAbortCopyFromURLExceptionHeaders = {
      serializedName: "Blob_abortCopyFromURLExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobAbortCopyFromURLExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetTierHeaders = {
      serializedName: "Blob_setTierHeaders",
      type: {
        name: "Composite",
        className: "BlobSetTierHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetTierExceptionHeaders = {
      serializedName: "Blob_setTierExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetTierExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobGetAccountInfoHeaders = {
      serializedName: "Blob_getAccountInfoHeaders",
      type: {
        name: "Composite",
        className: "BlobGetAccountInfoHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          skuName: {
            serializedName: "x-ms-sku-name",
            xmlName: "x-ms-sku-name",
            type: {
              name: "Enum",
              allowedValues: ["Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Standard_ZRS", "Premium_LRS"]
            }
          },
          accountKind: {
            serializedName: "x-ms-account-kind",
            xmlName: "x-ms-account-kind",
            type: {
              name: "Enum",
              allowedValues: ["Storage", "BlobStorage", "StorageV2", "FileStorage", "BlockBlobStorage"]
            }
          }
        }
      }
    };
    var BlobGetAccountInfoExceptionHeaders = {
      serializedName: "Blob_getAccountInfoExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobGetAccountInfoExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobQueryHeaders = {
      serializedName: "Blob_queryHeaders",
      type: {
        name: "Composite",
        className: "BlobQueryHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          metadata: {
            serializedName: "x-ms-meta",
            xmlName: "x-ms-meta",
            type: {
              name: "Dictionary",
              value: {
                type: {
                  name: "String"
                }
              }
            }
          },
          contentLength: {
            serializedName: "content-length",
            xmlName: "content-length",
            type: {
              name: "Number"
            }
          },
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          contentRange: {
            serializedName: "content-range",
            xmlName: "content-range",
            type: {
              name: "String"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          contentEncoding: {
            serializedName: "content-encoding",
            xmlName: "content-encoding",
            type: {
              name: "String"
            }
          },
          cacheControl: {
            serializedName: "cache-control",
            xmlName: "cache-control",
            type: {
              name: "String"
            }
          },
          contentDisposition: {
            serializedName: "content-disposition",
            xmlName: "content-disposition",
            type: {
              name: "String"
            }
          },
          contentLanguage: {
            serializedName: "content-language",
            xmlName: "content-language",
            type: {
              name: "String"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          blobType: {
            serializedName: "x-ms-blob-type",
            xmlName: "x-ms-blob-type",
            type: {
              name: "Enum",
              allowedValues: ["BlockBlob", "PageBlob", "AppendBlob"]
            }
          },
          copyCompletionTime: {
            serializedName: "x-ms-copy-completion-time",
            xmlName: "x-ms-copy-completion-time",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyStatusDescription: {
            serializedName: "x-ms-copy-status-description",
            xmlName: "x-ms-copy-status-description",
            type: {
              name: "String"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyProgress: {
            serializedName: "x-ms-copy-progress",
            xmlName: "x-ms-copy-progress",
            type: {
              name: "String"
            }
          },
          copySource: {
            serializedName: "x-ms-copy-source",
            xmlName: "x-ms-copy-source",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "x-ms-copy-status",
            xmlName: "x-ms-copy-status",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          leaseDuration: {
            serializedName: "x-ms-lease-duration",
            xmlName: "x-ms-lease-duration",
            type: {
              name: "Enum",
              allowedValues: ["infinite", "fixed"]
            }
          },
          leaseState: {
            serializedName: "x-ms-lease-state",
            xmlName: "x-ms-lease-state",
            type: {
              name: "Enum",
              allowedValues: ["available", "leased", "expired", "breaking", "broken"]
            }
          },
          leaseStatus: {
            serializedName: "x-ms-lease-status",
            xmlName: "x-ms-lease-status",
            type: {
              name: "Enum",
              allowedValues: ["locked", "unlocked"]
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          acceptRanges: {
            serializedName: "accept-ranges",
            xmlName: "accept-ranges",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobCommittedBlockCount: {
            serializedName: "x-ms-blob-committed-block-count",
            xmlName: "x-ms-blob-committed-block-count",
            type: {
              name: "Number"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-server-encrypted",
            xmlName: "x-ms-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          blobContentMD5: {
            serializedName: "x-ms-blob-content-md5",
            xmlName: "x-ms-blob-content-md5",
            type: {
              name: "ByteArray"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          },
          contentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          }
        }
      }
    };
    var BlobQueryExceptionHeaders = {
      serializedName: "Blob_queryExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobQueryExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobGetTagsHeaders = {
      serializedName: "Blob_getTagsHeaders",
      type: {
        name: "Composite",
        className: "BlobGetTagsHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobGetTagsExceptionHeaders = {
      serializedName: "Blob_getTagsExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobGetTagsExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetTagsHeaders = {
      serializedName: "Blob_setTagsHeaders",
      type: {
        name: "Composite",
        className: "BlobSetTagsHeaders",
        modelProperties: {
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlobSetTagsExceptionHeaders = {
      serializedName: "Blob_setTagsExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlobSetTagsExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobCreateHeaders = {
      serializedName: "PageBlob_createHeaders",
      type: {
        name: "Composite",
        className: "PageBlobCreateHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobCreateExceptionHeaders = {
      serializedName: "PageBlob_createExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobCreateExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUploadPagesHeaders = {
      serializedName: "PageBlob_uploadPagesHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUploadPagesHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUploadPagesExceptionHeaders = {
      serializedName: "PageBlob_uploadPagesExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUploadPagesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobClearPagesHeaders = {
      serializedName: "PageBlob_clearPagesHeaders",
      type: {
        name: "Composite",
        className: "PageBlobClearPagesHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobClearPagesExceptionHeaders = {
      serializedName: "PageBlob_clearPagesExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobClearPagesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUploadPagesFromURLHeaders = {
      serializedName: "PageBlob_uploadPagesFromURLHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUploadPagesFromURLHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUploadPagesFromURLExceptionHeaders = {
      serializedName: "PageBlob_uploadPagesFromURLExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUploadPagesFromURLExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobGetPageRangesHeaders = {
      serializedName: "PageBlob_getPageRangesHeaders",
      type: {
        name: "Composite",
        className: "PageBlobGetPageRangesHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          blobContentLength: {
            serializedName: "x-ms-blob-content-length",
            xmlName: "x-ms-blob-content-length",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobGetPageRangesExceptionHeaders = {
      serializedName: "PageBlob_getPageRangesExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobGetPageRangesExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobGetPageRangesDiffHeaders = {
      serializedName: "PageBlob_getPageRangesDiffHeaders",
      type: {
        name: "Composite",
        className: "PageBlobGetPageRangesDiffHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          blobContentLength: {
            serializedName: "x-ms-blob-content-length",
            xmlName: "x-ms-blob-content-length",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobGetPageRangesDiffExceptionHeaders = {
      serializedName: "PageBlob_getPageRangesDiffExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobGetPageRangesDiffExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobResizeHeaders = {
      serializedName: "PageBlob_resizeHeaders",
      type: {
        name: "Composite",
        className: "PageBlobResizeHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobResizeExceptionHeaders = {
      serializedName: "PageBlob_resizeExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobResizeExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUpdateSequenceNumberHeaders = {
      serializedName: "PageBlob_updateSequenceNumberHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUpdateSequenceNumberHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobSequenceNumber: {
            serializedName: "x-ms-blob-sequence-number",
            xmlName: "x-ms-blob-sequence-number",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobUpdateSequenceNumberExceptionHeaders = {
      serializedName: "PageBlob_updateSequenceNumberExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobUpdateSequenceNumberExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobCopyIncrementalHeaders = {
      serializedName: "PageBlob_copyIncrementalHeaders",
      type: {
        name: "Composite",
        className: "PageBlobCopyIncrementalHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          copyId: {
            serializedName: "x-ms-copy-id",
            xmlName: "x-ms-copy-id",
            type: {
              name: "String"
            }
          },
          copyStatus: {
            serializedName: "x-ms-copy-status",
            xmlName: "x-ms-copy-status",
            type: {
              name: "Enum",
              allowedValues: ["pending", "success", "aborted", "failed"]
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var PageBlobCopyIncrementalExceptionHeaders = {
      serializedName: "PageBlob_copyIncrementalExceptionHeaders",
      type: {
        name: "Composite",
        className: "PageBlobCopyIncrementalExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobCreateHeaders = {
      serializedName: "AppendBlob_createHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobCreateHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobCreateExceptionHeaders = {
      serializedName: "AppendBlob_createExceptionHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobCreateExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobAppendBlockHeaders = {
      serializedName: "AppendBlob_appendBlockHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobAppendBlockHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobAppendOffset: {
            serializedName: "x-ms-blob-append-offset",
            xmlName: "x-ms-blob-append-offset",
            type: {
              name: "String"
            }
          },
          blobCommittedBlockCount: {
            serializedName: "x-ms-blob-committed-block-count",
            xmlName: "x-ms-blob-committed-block-count",
            type: {
              name: "Number"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobAppendBlockExceptionHeaders = {
      serializedName: "AppendBlob_appendBlockExceptionHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobAppendBlockExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobAppendBlockFromUrlHeaders = {
      serializedName: "AppendBlob_appendBlockFromUrlHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobAppendBlockFromUrlHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          blobAppendOffset: {
            serializedName: "x-ms-blob-append-offset",
            xmlName: "x-ms-blob-append-offset",
            type: {
              name: "String"
            }
          },
          blobCommittedBlockCount: {
            serializedName: "x-ms-blob-committed-block-count",
            xmlName: "x-ms-blob-committed-block-count",
            type: {
              name: "Number"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobAppendBlockFromUrlExceptionHeaders = {
      serializedName: "AppendBlob_appendBlockFromUrlExceptionHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobAppendBlockFromUrlExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var AppendBlobSealHeaders = {
      serializedName: "AppendBlob_sealHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobSealHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isSealed: {
            serializedName: "x-ms-blob-sealed",
            xmlName: "x-ms-blob-sealed",
            type: {
              name: "Boolean"
            }
          }
        }
      }
    };
    var AppendBlobSealExceptionHeaders = {
      serializedName: "AppendBlob_sealExceptionHeaders",
      type: {
        name: "Composite",
        className: "AppendBlobSealExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobUploadHeaders = {
      serializedName: "BlockBlob_uploadHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobUploadHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobUploadExceptionHeaders = {
      serializedName: "BlockBlob_uploadExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobUploadExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobPutBlobFromUrlHeaders = {
      serializedName: "BlockBlob_putBlobFromUrlHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobPutBlobFromUrlHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobPutBlobFromUrlExceptionHeaders = {
      serializedName: "BlockBlob_putBlobFromUrlExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobPutBlobFromUrlExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobStageBlockHeaders = {
      serializedName: "BlockBlob_stageBlockHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobStageBlockHeaders",
        modelProperties: {
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobStageBlockExceptionHeaders = {
      serializedName: "BlockBlob_stageBlockExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobStageBlockExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobStageBlockFromURLHeaders = {
      serializedName: "BlockBlob_stageBlockFromURLHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobStageBlockFromURLHeaders",
        modelProperties: {
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobStageBlockFromURLExceptionHeaders = {
      serializedName: "BlockBlob_stageBlockFromURLExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobStageBlockFromURLExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobCommitBlockListHeaders = {
      serializedName: "BlockBlob_commitBlockListHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobCommitBlockListHeaders",
        modelProperties: {
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          contentMD5: {
            serializedName: "content-md5",
            xmlName: "content-md5",
            type: {
              name: "ByteArray"
            }
          },
          xMsContentCrc64: {
            serializedName: "x-ms-content-crc64",
            xmlName: "x-ms-content-crc64",
            type: {
              name: "ByteArray"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          versionId: {
            serializedName: "x-ms-version-id",
            xmlName: "x-ms-version-id",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          isServerEncrypted: {
            serializedName: "x-ms-request-server-encrypted",
            xmlName: "x-ms-request-server-encrypted",
            type: {
              name: "Boolean"
            }
          },
          encryptionKeySha256: {
            serializedName: "x-ms-encryption-key-sha256",
            xmlName: "x-ms-encryption-key-sha256",
            type: {
              name: "String"
            }
          },
          encryptionScope: {
            serializedName: "x-ms-encryption-scope",
            xmlName: "x-ms-encryption-scope",
            type: {
              name: "String"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobCommitBlockListExceptionHeaders = {
      serializedName: "BlockBlob_commitBlockListExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobCommitBlockListExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobGetBlockListHeaders = {
      serializedName: "BlockBlob_getBlockListHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobGetBlockListHeaders",
        modelProperties: {
          lastModified: {
            serializedName: "last-modified",
            xmlName: "last-modified",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          etag: {
            serializedName: "etag",
            xmlName: "etag",
            type: {
              name: "String"
            }
          },
          contentType: {
            serializedName: "content-type",
            xmlName: "content-type",
            type: {
              name: "String"
            }
          },
          blobContentLength: {
            serializedName: "x-ms-blob-content-length",
            xmlName: "x-ms-blob-content-length",
            type: {
              name: "Number"
            }
          },
          clientRequestId: {
            serializedName: "x-ms-client-request-id",
            xmlName: "x-ms-client-request-id",
            type: {
              name: "String"
            }
          },
          requestId: {
            serializedName: "x-ms-request-id",
            xmlName: "x-ms-request-id",
            type: {
              name: "String"
            }
          },
          version: {
            serializedName: "x-ms-version",
            xmlName: "x-ms-version",
            type: {
              name: "String"
            }
          },
          date: {
            serializedName: "date",
            xmlName: "date",
            type: {
              name: "DateTimeRfc1123"
            }
          },
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    };
    var BlockBlobGetBlockListExceptionHeaders = {
      serializedName: "BlockBlob_getBlockListExceptionHeaders",
      type: {
        name: "Composite",
        className: "BlockBlobGetBlockListExceptionHeaders",
        modelProperties: {
          errorCode: {
            serializedName: "x-ms-error-code",
            xmlName: "x-ms-error-code",
            type: {
              name: "String"
            }
          }
        }
      }
    }; //# sourceMappingURL=mappers.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcModelsParametersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "contentType", function () {
      return contentType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobServiceProperties", function () {
      return blobServiceProperties;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "accept", function () {
      return accept;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "url", function () {
      return url;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "restype", function () {
      return restype;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp", function () {
      return comp;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "timeoutInSeconds", function () {
      return timeoutInSeconds;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "version", function () {
      return version;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "requestId", function () {
      return requestId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "accept1", function () {
      return accept1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp1", function () {
      return comp1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp2", function () {
      return comp2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "prefix", function () {
      return prefix;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "marker", function () {
      return marker;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "maxPageSize", function () {
      return maxPageSize;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "include", function () {
      return include;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "keyInfo", function () {
      return keyInfo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp3", function () {
      return comp3;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "restype1", function () {
      return restype1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "body", function () {
      return body;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp4", function () {
      return comp4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "contentLength", function () {
      return contentLength;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "multipartContentType", function () {
      return multipartContentType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp5", function () {
      return comp5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "where", function () {
      return where;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "restype2", function () {
      return restype2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "metadata", function () {
      return metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "access", function () {
      return access;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultEncryptionScope", function () {
      return defaultEncryptionScope;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "preventEncryptionScopeOverride", function () {
      return preventEncryptionScopeOverride;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "leaseId", function () {
      return leaseId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifModifiedSince", function () {
      return ifModifiedSince;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifUnmodifiedSince", function () {
      return ifUnmodifiedSince;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp6", function () {
      return comp6;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp7", function () {
      return comp7;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "containerAcl", function () {
      return containerAcl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp8", function () {
      return comp8;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deletedContainerName", function () {
      return deletedContainerName;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deletedContainerVersion", function () {
      return deletedContainerVersion;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp9", function () {
      return comp9;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceContainerName", function () {
      return sourceContainerName;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceLeaseId", function () {
      return sourceLeaseId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp10", function () {
      return comp10;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "action", function () {
      return action;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "duration", function () {
      return duration;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "proposedLeaseId", function () {
      return proposedLeaseId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "action1", function () {
      return action1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "leaseId1", function () {
      return leaseId1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "action2", function () {
      return action2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "action3", function () {
      return action3;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "breakPeriod", function () {
      return breakPeriod;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "action4", function () {
      return action4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "proposedLeaseId1", function () {
      return proposedLeaseId1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "include1", function () {
      return include1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "delimiter", function () {
      return delimiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "snapshot", function () {
      return snapshot;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "versionId", function () {
      return versionId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "range", function () {
      return range;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rangeGetContentMD5", function () {
      return rangeGetContentMD5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rangeGetContentCRC64", function () {
      return rangeGetContentCRC64;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encryptionKey", function () {
      return encryptionKey;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encryptionKeySha256", function () {
      return encryptionKeySha256;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encryptionAlgorithm", function () {
      return encryptionAlgorithm;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifMatch", function () {
      return ifMatch;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifNoneMatch", function () {
      return ifNoneMatch;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifTags", function () {
      return ifTags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deleteSnapshots", function () {
      return deleteSnapshots;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobDeleteType", function () {
      return blobDeleteType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp11", function () {
      return comp11;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "expiryOptions", function () {
      return expiryOptions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "expiresOn", function () {
      return expiresOn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobCacheControl", function () {
      return blobCacheControl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentType", function () {
      return blobContentType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentMD5", function () {
      return blobContentMD5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentEncoding", function () {
      return blobContentEncoding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentLanguage", function () {
      return blobContentLanguage;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentDisposition", function () {
      return blobContentDisposition;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp12", function () {
      return comp12;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "immutabilityPolicyExpiry", function () {
      return immutabilityPolicyExpiry;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "immutabilityPolicyMode", function () {
      return immutabilityPolicyMode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp13", function () {
      return comp13;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "legalHold", function () {
      return legalHold;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "encryptionScope", function () {
      return encryptionScope;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp14", function () {
      return comp14;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "tier", function () {
      return tier;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "rehydratePriority", function () {
      return rehydratePriority;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceIfModifiedSince", function () {
      return sourceIfModifiedSince;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceIfUnmodifiedSince", function () {
      return sourceIfUnmodifiedSince;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceIfMatch", function () {
      return sourceIfMatch;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceIfNoneMatch", function () {
      return sourceIfNoneMatch;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceIfTags", function () {
      return sourceIfTags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copySource", function () {
      return copySource;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobTagsString", function () {
      return blobTagsString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sealBlob", function () {
      return sealBlob;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "legalHold1", function () {
      return legalHold1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "xMsRequiresSync", function () {
      return xMsRequiresSync;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceContentMD5", function () {
      return sourceContentMD5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copySourceAuthorization", function () {
      return copySourceAuthorization;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp15", function () {
      return comp15;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copyActionAbortConstant", function () {
      return copyActionAbortConstant;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copyId", function () {
      return copyId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp16", function () {
      return comp16;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "tier1", function () {
      return tier1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "queryRequest", function () {
      return queryRequest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp17", function () {
      return comp17;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp18", function () {
      return comp18;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "tags", function () {
      return tags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "transactionalContentMD5", function () {
      return transactionalContentMD5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "transactionalContentCrc64", function () {
      return transactionalContentCrc64;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobType", function () {
      return blobType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobContentLength", function () {
      return blobContentLength;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobSequenceNumber", function () {
      return blobSequenceNumber;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "contentType1", function () {
      return contentType1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "body1", function () {
      return body1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "accept2", function () {
      return accept2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp19", function () {
      return comp19;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "pageWrite", function () {
      return pageWrite;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifSequenceNumberLessThanOrEqualTo", function () {
      return ifSequenceNumberLessThanOrEqualTo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifSequenceNumberLessThan", function () {
      return ifSequenceNumberLessThan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ifSequenceNumberEqualTo", function () {
      return ifSequenceNumberEqualTo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "pageWrite1", function () {
      return pageWrite1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceUrl", function () {
      return sourceUrl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceRange", function () {
      return sourceRange;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceContentCrc64", function () {
      return sourceContentCrc64;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "range1", function () {
      return range1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp20", function () {
      return comp20;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "prevsnapshot", function () {
      return prevsnapshot;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "prevSnapshotUrl", function () {
      return prevSnapshotUrl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sequenceNumberAction", function () {
      return sequenceNumberAction;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp21", function () {
      return comp21;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobType1", function () {
      return blobType1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp22", function () {
      return comp22;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "maxSize", function () {
      return maxSize;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "appendPosition", function () {
      return appendPosition;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sourceRange1", function () {
      return sourceRange1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp23", function () {
      return comp23;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobType2", function () {
      return blobType2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copySourceBlobProperties", function () {
      return copySourceBlobProperties;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp24", function () {
      return comp24;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blockId", function () {
      return blockId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blocks", function () {
      return blocks;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "comp25", function () {
      return comp25;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "listType", function () {
      return listType;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */


    var contentType = {
      parameterPath: ["options", "contentType"],
      mapper: {
        defaultValue: "application/xml",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
          name: "String"
        }
      }
    };
    var blobServiceProperties = {
      parameterPath: "blobServiceProperties",
      mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobServiceProperties"]
    };
    var accept = {
      parameterPath: "accept",
      mapper: {
        defaultValue: "application/xml",
        isConstant: true,
        serializedName: "Accept",
        type: {
          name: "String"
        }
      }
    };
    var url = {
      parameterPath: "url",
      mapper: {
        serializedName: "url",
        required: true,
        xmlName: "url",
        type: {
          name: "String"
        }
      },
      skipEncoding: true
    };
    var restype = {
      parameterPath: "restype",
      mapper: {
        defaultValue: "service",
        isConstant: true,
        serializedName: "restype",
        type: {
          name: "String"
        }
      }
    };
    var comp = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "properties",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var timeoutInSeconds = {
      parameterPath: ["options", "timeoutInSeconds"],
      mapper: {
        constraints: {
          InclusiveMinimum: 0
        },
        serializedName: "timeout",
        xmlName: "timeout",
        type: {
          name: "Number"
        }
      }
    };
    var version = {
      parameterPath: "version",
      mapper: {
        defaultValue: "2020-10-02",
        isConstant: true,
        serializedName: "x-ms-version",
        type: {
          name: "String"
        }
      }
    };
    var requestId = {
      parameterPath: ["options", "requestId"],
      mapper: {
        serializedName: "x-ms-client-request-id",
        xmlName: "x-ms-client-request-id",
        type: {
          name: "String"
        }
      }
    };
    var accept1 = {
      parameterPath: "accept",
      mapper: {
        defaultValue: "application/xml",
        isConstant: true,
        serializedName: "Accept",
        type: {
          name: "String"
        }
      }
    };
    var comp1 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "stats",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var comp2 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "list",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var prefix = {
      parameterPath: ["options", "prefix"],
      mapper: {
        serializedName: "prefix",
        xmlName: "prefix",
        type: {
          name: "String"
        }
      }
    };
    var marker = {
      parameterPath: ["options", "marker"],
      mapper: {
        serializedName: "marker",
        xmlName: "marker",
        type: {
          name: "String"
        }
      }
    };
    var maxPageSize = {
      parameterPath: ["options", "maxPageSize"],
      mapper: {
        constraints: {
          InclusiveMinimum: 1
        },
        serializedName: "maxresults",
        xmlName: "maxresults",
        type: {
          name: "Number"
        }
      }
    };
    var include = {
      parameterPath: ["options", "include"],
      mapper: {
        serializedName: "include",
        xmlName: "include",
        xmlElementName: "ListContainersIncludeType",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["metadata", "deleted"]
            }
          }
        }
      },
      collectionFormat: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["QueryCollectionFormat"].Csv
    };
    var keyInfo = {
      parameterPath: "keyInfo",
      mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["KeyInfo"]
    };
    var comp3 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "userdelegationkey",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var restype1 = {
      parameterPath: "restype",
      mapper: {
        defaultValue: "account",
        isConstant: true,
        serializedName: "restype",
        type: {
          name: "String"
        }
      }
    };
    var body = {
      parameterPath: "body",
      mapper: {
        serializedName: "body",
        required: true,
        xmlName: "body",
        type: {
          name: "Stream"
        }
      }
    };
    var comp4 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "batch",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var contentLength = {
      parameterPath: "contentLength",
      mapper: {
        serializedName: "Content-Length",
        required: true,
        xmlName: "Content-Length",
        type: {
          name: "Number"
        }
      }
    };
    var multipartContentType = {
      parameterPath: "multipartContentType",
      mapper: {
        serializedName: "Content-Type",
        required: true,
        xmlName: "Content-Type",
        type: {
          name: "String"
        }
      }
    };
    var comp5 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "blobs",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var where = {
      parameterPath: ["options", "where"],
      mapper: {
        serializedName: "where",
        xmlName: "where",
        type: {
          name: "String"
        }
      }
    };
    var restype2 = {
      parameterPath: "restype",
      mapper: {
        defaultValue: "container",
        isConstant: true,
        serializedName: "restype",
        type: {
          name: "String"
        }
      }
    };
    var metadata = {
      parameterPath: ["options", "metadata"],
      mapper: {
        serializedName: "x-ms-meta",
        xmlName: "x-ms-meta",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        },
        headerCollectionPrefix: "x-ms-meta-"
      }
    };
    var access = {
      parameterPath: ["options", "access"],
      mapper: {
        serializedName: "x-ms-blob-public-access",
        xmlName: "x-ms-blob-public-access",
        type: {
          name: "Enum",
          allowedValues: ["container", "blob"]
        }
      }
    };
    var defaultEncryptionScope = {
      parameterPath: ["options", "containerEncryptionScope", "defaultEncryptionScope"],
      mapper: {
        serializedName: "x-ms-default-encryption-scope",
        xmlName: "x-ms-default-encryption-scope",
        type: {
          name: "String"
        }
      }
    };
    var preventEncryptionScopeOverride = {
      parameterPath: ["options", "containerEncryptionScope", "preventEncryptionScopeOverride"],
      mapper: {
        serializedName: "x-ms-deny-encryption-scope-override",
        xmlName: "x-ms-deny-encryption-scope-override",
        type: {
          name: "Boolean"
        }
      }
    };
    var leaseId = {
      parameterPath: ["options", "leaseAccessConditions", "leaseId"],
      mapper: {
        serializedName: "x-ms-lease-id",
        xmlName: "x-ms-lease-id",
        type: {
          name: "String"
        }
      }
    };
    var ifModifiedSince = {
      parameterPath: ["options", "modifiedAccessConditions", "ifModifiedSince"],
      mapper: {
        serializedName: "If-Modified-Since",
        xmlName: "If-Modified-Since",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    };
    var ifUnmodifiedSince = {
      parameterPath: ["options", "modifiedAccessConditions", "ifUnmodifiedSince"],
      mapper: {
        serializedName: "If-Unmodified-Since",
        xmlName: "If-Unmodified-Since",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    };
    var comp6 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "metadata",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var comp7 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "acl",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var containerAcl = {
      parameterPath: ["options", "containerAcl"],
      mapper: {
        serializedName: "containerAcl",
        xmlName: "SignedIdentifiers",
        xmlIsWrapped: true,
        xmlElementName: "SignedIdentifier",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "SignedIdentifier"
            }
          }
        }
      }
    };
    var comp8 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "undelete",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var deletedContainerName = {
      parameterPath: ["options", "deletedContainerName"],
      mapper: {
        serializedName: "x-ms-deleted-container-name",
        xmlName: "x-ms-deleted-container-name",
        type: {
          name: "String"
        }
      }
    };
    var deletedContainerVersion = {
      parameterPath: ["options", "deletedContainerVersion"],
      mapper: {
        serializedName: "x-ms-deleted-container-version",
        xmlName: "x-ms-deleted-container-version",
        type: {
          name: "String"
        }
      }
    };
    var comp9 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "rename",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var sourceContainerName = {
      parameterPath: "sourceContainerName",
      mapper: {
        serializedName: "x-ms-source-container-name",
        required: true,
        xmlName: "x-ms-source-container-name",
        type: {
          name: "String"
        }
      }
    };
    var sourceLeaseId = {
      parameterPath: ["options", "sourceLeaseId"],
      mapper: {
        serializedName: "x-ms-source-lease-id",
        xmlName: "x-ms-source-lease-id",
        type: {
          name: "String"
        }
      }
    };
    var comp10 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "lease",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var action = {
      parameterPath: "action",
      mapper: {
        defaultValue: "acquire",
        isConstant: true,
        serializedName: "x-ms-lease-action",
        type: {
          name: "String"
        }
      }
    };
    var duration = {
      parameterPath: ["options", "duration"],
      mapper: {
        serializedName: "x-ms-lease-duration",
        xmlName: "x-ms-lease-duration",
        type: {
          name: "Number"
        }
      }
    };
    var proposedLeaseId = {
      parameterPath: ["options", "proposedLeaseId"],
      mapper: {
        serializedName: "x-ms-proposed-lease-id",
        xmlName: "x-ms-proposed-lease-id",
        type: {
          name: "String"
        }
      }
    };
    var action1 = {
      parameterPath: "action",
      mapper: {
        defaultValue: "release",
        isConstant: true,
        serializedName: "x-ms-lease-action",
        type: {
          name: "String"
        }
      }
    };
    var leaseId1 = {
      parameterPath: "leaseId",
      mapper: {
        serializedName: "x-ms-lease-id",
        required: true,
        xmlName: "x-ms-lease-id",
        type: {
          name: "String"
        }
      }
    };
    var action2 = {
      parameterPath: "action",
      mapper: {
        defaultValue: "renew",
        isConstant: true,
        serializedName: "x-ms-lease-action",
        type: {
          name: "String"
        }
      }
    };
    var action3 = {
      parameterPath: "action",
      mapper: {
        defaultValue: "break",
        isConstant: true,
        serializedName: "x-ms-lease-action",
        type: {
          name: "String"
        }
      }
    };
    var breakPeriod = {
      parameterPath: ["options", "breakPeriod"],
      mapper: {
        serializedName: "x-ms-lease-break-period",
        xmlName: "x-ms-lease-break-period",
        type: {
          name: "Number"
        }
      }
    };
    var action4 = {
      parameterPath: "action",
      mapper: {
        defaultValue: "change",
        isConstant: true,
        serializedName: "x-ms-lease-action",
        type: {
          name: "String"
        }
      }
    };
    var proposedLeaseId1 = {
      parameterPath: "proposedLeaseId",
      mapper: {
        serializedName: "x-ms-proposed-lease-id",
        required: true,
        xmlName: "x-ms-proposed-lease-id",
        type: {
          name: "String"
        }
      }
    };
    var include1 = {
      parameterPath: ["options", "include"],
      mapper: {
        serializedName: "include",
        xmlName: "include",
        xmlElementName: "ListBlobsIncludeItem",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Enum",
              allowedValues: ["copy", "deleted", "metadata", "snapshots", "uncommittedblobs", "versions", "tags", "immutabilitypolicy", "legalhold", "deletedwithversions"]
            }
          }
        }
      },
      collectionFormat: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["QueryCollectionFormat"].Csv
    };
    var delimiter = {
      parameterPath: "delimiter",
      mapper: {
        serializedName: "delimiter",
        required: true,
        xmlName: "delimiter",
        type: {
          name: "String"
        }
      }
    };
    var snapshot = {
      parameterPath: ["options", "snapshot"],
      mapper: {
        serializedName: "snapshot",
        xmlName: "snapshot",
        type: {
          name: "String"
        }
      }
    };
    var versionId = {
      parameterPath: ["options", "versionId"],
      mapper: {
        serializedName: "versionid",
        xmlName: "versionid",
        type: {
          name: "String"
        }
      }
    };
    var range = {
      parameterPath: ["options", "range"],
      mapper: {
        serializedName: "x-ms-range",
        xmlName: "x-ms-range",
        type: {
          name: "String"
        }
      }
    };
    var rangeGetContentMD5 = {
      parameterPath: ["options", "rangeGetContentMD5"],
      mapper: {
        serializedName: "x-ms-range-get-content-md5",
        xmlName: "x-ms-range-get-content-md5",
        type: {
          name: "Boolean"
        }
      }
    };
    var rangeGetContentCRC64 = {
      parameterPath: ["options", "rangeGetContentCRC64"],
      mapper: {
        serializedName: "x-ms-range-get-content-crc64",
        xmlName: "x-ms-range-get-content-crc64",
        type: {
          name: "Boolean"
        }
      }
    };
    var encryptionKey = {
      parameterPath: ["options", "cpkInfo", "encryptionKey"],
      mapper: {
        serializedName: "x-ms-encryption-key",
        xmlName: "x-ms-encryption-key",
        type: {
          name: "String"
        }
      }
    };
    var encryptionKeySha256 = {
      parameterPath: ["options", "cpkInfo", "encryptionKeySha256"],
      mapper: {
        serializedName: "x-ms-encryption-key-sha256",
        xmlName: "x-ms-encryption-key-sha256",
        type: {
          name: "String"
        }
      }
    };
    var encryptionAlgorithm = {
      parameterPath: ["options", "encryptionAlgorithm"],
      mapper: {
        defaultValue: "AES256",
        isConstant: true,
        serializedName: "x-ms-encryption-algorithm",
        type: {
          name: "String"
        }
      }
    };
    var ifMatch = {
      parameterPath: ["options", "modifiedAccessConditions", "ifMatch"],
      mapper: {
        serializedName: "If-Match",
        xmlName: "If-Match",
        type: {
          name: "String"
        }
      }
    };
    var ifNoneMatch = {
      parameterPath: ["options", "modifiedAccessConditions", "ifNoneMatch"],
      mapper: {
        serializedName: "If-None-Match",
        xmlName: "If-None-Match",
        type: {
          name: "String"
        }
      }
    };
    var ifTags = {
      parameterPath: ["options", "modifiedAccessConditions", "ifTags"],
      mapper: {
        serializedName: "x-ms-if-tags",
        xmlName: "x-ms-if-tags",
        type: {
          name: "String"
        }
      }
    };
    var deleteSnapshots = {
      parameterPath: ["options", "deleteSnapshots"],
      mapper: {
        serializedName: "x-ms-delete-snapshots",
        xmlName: "x-ms-delete-snapshots",
        type: {
          name: "Enum",
          allowedValues: ["include", "only"]
        }
      }
    };
    var blobDeleteType = {
      parameterPath: ["options", "blobDeleteType"],
      mapper: {
        serializedName: "deletetype",
        xmlName: "deletetype",
        type: {
          name: "String"
        }
      }
    };
    var comp11 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "expiry",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var expiryOptions = {
      parameterPath: "expiryOptions",
      mapper: {
        serializedName: "x-ms-expiry-option",
        required: true,
        xmlName: "x-ms-expiry-option",
        type: {
          name: "String"
        }
      }
    };
    var expiresOn = {
      parameterPath: ["options", "expiresOn"],
      mapper: {
        serializedName: "x-ms-expiry-time",
        xmlName: "x-ms-expiry-time",
        type: {
          name: "String"
        }
      }
    };
    var blobCacheControl = {
      parameterPath: ["options", "blobHttpHeaders", "blobCacheControl"],
      mapper: {
        serializedName: "x-ms-blob-cache-control",
        xmlName: "x-ms-blob-cache-control",
        type: {
          name: "String"
        }
      }
    };
    var blobContentType = {
      parameterPath: ["options", "blobHttpHeaders", "blobContentType"],
      mapper: {
        serializedName: "x-ms-blob-content-type",
        xmlName: "x-ms-blob-content-type",
        type: {
          name: "String"
        }
      }
    };
    var blobContentMD5 = {
      parameterPath: ["options", "blobHttpHeaders", "blobContentMD5"],
      mapper: {
        serializedName: "x-ms-blob-content-md5",
        xmlName: "x-ms-blob-content-md5",
        type: {
          name: "ByteArray"
        }
      }
    };
    var blobContentEncoding = {
      parameterPath: ["options", "blobHttpHeaders", "blobContentEncoding"],
      mapper: {
        serializedName: "x-ms-blob-content-encoding",
        xmlName: "x-ms-blob-content-encoding",
        type: {
          name: "String"
        }
      }
    };
    var blobContentLanguage = {
      parameterPath: ["options", "blobHttpHeaders", "blobContentLanguage"],
      mapper: {
        serializedName: "x-ms-blob-content-language",
        xmlName: "x-ms-blob-content-language",
        type: {
          name: "String"
        }
      }
    };
    var blobContentDisposition = {
      parameterPath: ["options", "blobHttpHeaders", "blobContentDisposition"],
      mapper: {
        serializedName: "x-ms-blob-content-disposition",
        xmlName: "x-ms-blob-content-disposition",
        type: {
          name: "String"
        }
      }
    };
    var comp12 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "immutabilityPolicies",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var immutabilityPolicyExpiry = {
      parameterPath: ["options", "immutabilityPolicyExpiry"],
      mapper: {
        serializedName: "x-ms-immutability-policy-until-date",
        xmlName: "x-ms-immutability-policy-until-date",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    };
    var immutabilityPolicyMode = {
      parameterPath: ["options", "immutabilityPolicyMode"],
      mapper: {
        serializedName: "x-ms-immutability-policy-mode",
        xmlName: "x-ms-immutability-policy-mode",
        type: {
          name: "Enum",
          allowedValues: ["Mutable", "Unlocked", "Locked"]
        }
      }
    };
    var comp13 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "legalhold",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var legalHold = {
      parameterPath: "legalHold",
      mapper: {
        serializedName: "x-ms-legal-hold",
        required: true,
        xmlName: "x-ms-legal-hold",
        type: {
          name: "Boolean"
        }
      }
    };
    var encryptionScope = {
      parameterPath: ["options", "encryptionScope"],
      mapper: {
        serializedName: "x-ms-encryption-scope",
        xmlName: "x-ms-encryption-scope",
        type: {
          name: "String"
        }
      }
    };
    var comp14 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "snapshot",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var tier = {
      parameterPath: ["options", "tier"],
      mapper: {
        serializedName: "x-ms-access-tier",
        xmlName: "x-ms-access-tier",
        type: {
          name: "Enum",
          allowedValues: ["P4", "P6", "P10", "P15", "P20", "P30", "P40", "P50", "P60", "P70", "P80", "Hot", "Cool", "Archive"]
        }
      }
    };
    var rehydratePriority = {
      parameterPath: ["options", "rehydratePriority"],
      mapper: {
        serializedName: "x-ms-rehydrate-priority",
        xmlName: "x-ms-rehydrate-priority",
        type: {
          name: "Enum",
          allowedValues: ["High", "Standard"]
        }
      }
    };
    var sourceIfModifiedSince = {
      parameterPath: ["options", "sourceModifiedAccessConditions", "sourceIfModifiedSince"],
      mapper: {
        serializedName: "x-ms-source-if-modified-since",
        xmlName: "x-ms-source-if-modified-since",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    };
    var sourceIfUnmodifiedSince = {
      parameterPath: ["options", "sourceModifiedAccessConditions", "sourceIfUnmodifiedSince"],
      mapper: {
        serializedName: "x-ms-source-if-unmodified-since",
        xmlName: "x-ms-source-if-unmodified-since",
        type: {
          name: "DateTimeRfc1123"
        }
      }
    };
    var sourceIfMatch = {
      parameterPath: ["options", "sourceModifiedAccessConditions", "sourceIfMatch"],
      mapper: {
        serializedName: "x-ms-source-if-match",
        xmlName: "x-ms-source-if-match",
        type: {
          name: "String"
        }
      }
    };
    var sourceIfNoneMatch = {
      parameterPath: ["options", "sourceModifiedAccessConditions", "sourceIfNoneMatch"],
      mapper: {
        serializedName: "x-ms-source-if-none-match",
        xmlName: "x-ms-source-if-none-match",
        type: {
          name: "String"
        }
      }
    };
    var sourceIfTags = {
      parameterPath: ["options", "sourceModifiedAccessConditions", "sourceIfTags"],
      mapper: {
        serializedName: "x-ms-source-if-tags",
        xmlName: "x-ms-source-if-tags",
        type: {
          name: "String"
        }
      }
    };
    var copySource = {
      parameterPath: "copySource",
      mapper: {
        serializedName: "x-ms-copy-source",
        required: true,
        xmlName: "x-ms-copy-source",
        type: {
          name: "String"
        }
      }
    };
    var blobTagsString = {
      parameterPath: ["options", "blobTagsString"],
      mapper: {
        serializedName: "x-ms-tags",
        xmlName: "x-ms-tags",
        type: {
          name: "String"
        }
      }
    };
    var sealBlob = {
      parameterPath: ["options", "sealBlob"],
      mapper: {
        serializedName: "x-ms-seal-blob",
        xmlName: "x-ms-seal-blob",
        type: {
          name: "Boolean"
        }
      }
    };
    var legalHold1 = {
      parameterPath: ["options", "legalHold"],
      mapper: {
        serializedName: "x-ms-legal-hold",
        xmlName: "x-ms-legal-hold",
        type: {
          name: "Boolean"
        }
      }
    };
    var xMsRequiresSync = {
      parameterPath: "xMsRequiresSync",
      mapper: {
        defaultValue: "true",
        isConstant: true,
        serializedName: "x-ms-requires-sync",
        type: {
          name: "String"
        }
      }
    };
    var sourceContentMD5 = {
      parameterPath: ["options", "sourceContentMD5"],
      mapper: {
        serializedName: "x-ms-source-content-md5",
        xmlName: "x-ms-source-content-md5",
        type: {
          name: "ByteArray"
        }
      }
    };
    var copySourceAuthorization = {
      parameterPath: ["options", "copySourceAuthorization"],
      mapper: {
        serializedName: "x-ms-copy-source-authorization",
        xmlName: "x-ms-copy-source-authorization",
        type: {
          name: "String"
        }
      }
    };
    var comp15 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "copy",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var copyActionAbortConstant = {
      parameterPath: "copyActionAbortConstant",
      mapper: {
        defaultValue: "abort",
        isConstant: true,
        serializedName: "x-ms-copy-action",
        type: {
          name: "String"
        }
      }
    };
    var copyId = {
      parameterPath: "copyId",
      mapper: {
        serializedName: "copyid",
        required: true,
        xmlName: "copyid",
        type: {
          name: "String"
        }
      }
    };
    var comp16 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "tier",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var tier1 = {
      parameterPath: "tier",
      mapper: {
        serializedName: "x-ms-access-tier",
        required: true,
        xmlName: "x-ms-access-tier",
        type: {
          name: "Enum",
          allowedValues: ["P4", "P6", "P10", "P15", "P20", "P30", "P40", "P50", "P60", "P70", "P80", "Hot", "Cool", "Archive"]
        }
      }
    };
    var queryRequest = {
      parameterPath: ["options", "queryRequest"],
      mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["QueryRequest"]
    };
    var comp17 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "query",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var comp18 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "tags",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var tags = {
      parameterPath: ["options", "tags"],
      mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobTags"]
    };
    var transactionalContentMD5 = {
      parameterPath: ["options", "transactionalContentMD5"],
      mapper: {
        serializedName: "Content-MD5",
        xmlName: "Content-MD5",
        type: {
          name: "ByteArray"
        }
      }
    };
    var transactionalContentCrc64 = {
      parameterPath: ["options", "transactionalContentCrc64"],
      mapper: {
        serializedName: "x-ms-content-crc64",
        xmlName: "x-ms-content-crc64",
        type: {
          name: "ByteArray"
        }
      }
    };
    var blobType = {
      parameterPath: "blobType",
      mapper: {
        defaultValue: "PageBlob",
        isConstant: true,
        serializedName: "x-ms-blob-type",
        type: {
          name: "String"
        }
      }
    };
    var blobContentLength = {
      parameterPath: "blobContentLength",
      mapper: {
        serializedName: "x-ms-blob-content-length",
        required: true,
        xmlName: "x-ms-blob-content-length",
        type: {
          name: "Number"
        }
      }
    };
    var blobSequenceNumber = {
      parameterPath: ["options", "blobSequenceNumber"],
      mapper: {
        serializedName: "x-ms-blob-sequence-number",
        xmlName: "x-ms-blob-sequence-number",
        type: {
          name: "Number"
        }
      }
    };
    var contentType1 = {
      parameterPath: ["options", "contentType"],
      mapper: {
        defaultValue: "application/octet-stream",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
          name: "String"
        }
      }
    };
    var body1 = {
      parameterPath: "body",
      mapper: {
        serializedName: "body",
        required: true,
        xmlName: "body",
        type: {
          name: "Stream"
        }
      }
    };
    var accept2 = {
      parameterPath: "accept",
      mapper: {
        defaultValue: "application/xml",
        isConstant: true,
        serializedName: "Accept",
        type: {
          name: "String"
        }
      }
    };
    var comp19 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "page",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var pageWrite = {
      parameterPath: "pageWrite",
      mapper: {
        defaultValue: "update",
        isConstant: true,
        serializedName: "x-ms-page-write",
        type: {
          name: "String"
        }
      }
    };
    var ifSequenceNumberLessThanOrEqualTo = {
      parameterPath: ["options", "sequenceNumberAccessConditions", "ifSequenceNumberLessThanOrEqualTo"],
      mapper: {
        serializedName: "x-ms-if-sequence-number-le",
        xmlName: "x-ms-if-sequence-number-le",
        type: {
          name: "Number"
        }
      }
    };
    var ifSequenceNumberLessThan = {
      parameterPath: ["options", "sequenceNumberAccessConditions", "ifSequenceNumberLessThan"],
      mapper: {
        serializedName: "x-ms-if-sequence-number-lt",
        xmlName: "x-ms-if-sequence-number-lt",
        type: {
          name: "Number"
        }
      }
    };
    var ifSequenceNumberEqualTo = {
      parameterPath: ["options", "sequenceNumberAccessConditions", "ifSequenceNumberEqualTo"],
      mapper: {
        serializedName: "x-ms-if-sequence-number-eq",
        xmlName: "x-ms-if-sequence-number-eq",
        type: {
          name: "Number"
        }
      }
    };
    var pageWrite1 = {
      parameterPath: "pageWrite",
      mapper: {
        defaultValue: "clear",
        isConstant: true,
        serializedName: "x-ms-page-write",
        type: {
          name: "String"
        }
      }
    };
    var sourceUrl = {
      parameterPath: "sourceUrl",
      mapper: {
        serializedName: "x-ms-copy-source",
        required: true,
        xmlName: "x-ms-copy-source",
        type: {
          name: "String"
        }
      }
    };
    var sourceRange = {
      parameterPath: "sourceRange",
      mapper: {
        serializedName: "x-ms-source-range",
        required: true,
        xmlName: "x-ms-source-range",
        type: {
          name: "String"
        }
      }
    };
    var sourceContentCrc64 = {
      parameterPath: ["options", "sourceContentCrc64"],
      mapper: {
        serializedName: "x-ms-source-content-crc64",
        xmlName: "x-ms-source-content-crc64",
        type: {
          name: "ByteArray"
        }
      }
    };
    var range1 = {
      parameterPath: "range",
      mapper: {
        serializedName: "x-ms-range",
        required: true,
        xmlName: "x-ms-range",
        type: {
          name: "String"
        }
      }
    };
    var comp20 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "pagelist",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var prevsnapshot = {
      parameterPath: ["options", "prevsnapshot"],
      mapper: {
        serializedName: "prevsnapshot",
        xmlName: "prevsnapshot",
        type: {
          name: "String"
        }
      }
    };
    var prevSnapshotUrl = {
      parameterPath: ["options", "prevSnapshotUrl"],
      mapper: {
        serializedName: "x-ms-previous-snapshot-url",
        xmlName: "x-ms-previous-snapshot-url",
        type: {
          name: "String"
        }
      }
    };
    var sequenceNumberAction = {
      parameterPath: "sequenceNumberAction",
      mapper: {
        serializedName: "x-ms-sequence-number-action",
        required: true,
        xmlName: "x-ms-sequence-number-action",
        type: {
          name: "Enum",
          allowedValues: ["max", "update", "increment"]
        }
      }
    };
    var comp21 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "incrementalcopy",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var blobType1 = {
      parameterPath: "blobType",
      mapper: {
        defaultValue: "AppendBlob",
        isConstant: true,
        serializedName: "x-ms-blob-type",
        type: {
          name: "String"
        }
      }
    };
    var comp22 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "appendblock",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var maxSize = {
      parameterPath: ["options", "appendPositionAccessConditions", "maxSize"],
      mapper: {
        serializedName: "x-ms-blob-condition-maxsize",
        xmlName: "x-ms-blob-condition-maxsize",
        type: {
          name: "Number"
        }
      }
    };
    var appendPosition = {
      parameterPath: ["options", "appendPositionAccessConditions", "appendPosition"],
      mapper: {
        serializedName: "x-ms-blob-condition-appendpos",
        xmlName: "x-ms-blob-condition-appendpos",
        type: {
          name: "Number"
        }
      }
    };
    var sourceRange1 = {
      parameterPath: ["options", "sourceRange"],
      mapper: {
        serializedName: "x-ms-source-range",
        xmlName: "x-ms-source-range",
        type: {
          name: "String"
        }
      }
    };
    var comp23 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "seal",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var blobType2 = {
      parameterPath: "blobType",
      mapper: {
        defaultValue: "BlockBlob",
        isConstant: true,
        serializedName: "x-ms-blob-type",
        type: {
          name: "String"
        }
      }
    };
    var copySourceBlobProperties = {
      parameterPath: ["options", "copySourceBlobProperties"],
      mapper: {
        serializedName: "x-ms-copy-source-blob-properties",
        xmlName: "x-ms-copy-source-blob-properties",
        type: {
          name: "Boolean"
        }
      }
    };
    var comp24 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "block",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var blockId = {
      parameterPath: "blockId",
      mapper: {
        serializedName: "blockid",
        required: true,
        xmlName: "blockid",
        type: {
          name: "String"
        }
      }
    };
    var blocks = {
      parameterPath: "blocks",
      mapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockLookupList"]
    };
    var comp25 = {
      parameterPath: "comp",
      mapper: {
        defaultValue: "blocklist",
        isConstant: true,
        serializedName: "comp",
        type: {
          name: "String"
        }
      }
    };
    var listType = {
      parameterPath: "listType",
      mapper: {
        defaultValue: "committed",
        serializedName: "blocklisttype",
        required: true,
        xmlName: "blocklisttype",
        type: {
          name: "Enum",
          allowedValues: ["committed", "uncommitted", "all"]
        }
      }
    }; //# sourceMappingURL=parameters.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/appendBlob.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsAppendBlobJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AppendBlob", function () {
      return AppendBlob;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a AppendBlob. */


    var AppendBlob = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class AppendBlob class.
       * @param client Reference to the service client
       */
      function AppendBlob(client) {
        _classCallCheck(this, AppendBlob);

        this.client = client;
      }
      /**
       * The Create Append Blob operation creates a new append blob.
       * @param contentLength The length of the request.
       * @param options The options parameters.
       */


      _createClass(AppendBlob, [{
        key: "create",
        value: function create(contentLength, options) {
          var operationArguments = {
            contentLength: contentLength,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, createOperationSpec);
        }
        /**
         * The Append Block operation commits a new block of data to the end of an existing append blob. The
         * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to
         * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.
         * @param contentLength The length of the request.
         * @param body Initial data
         * @param options The options parameters.
         */

      }, {
        key: "appendBlock",
        value: function appendBlock(contentLength, body, options) {
          var operationArguments = {
            contentLength: contentLength,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, appendBlockOperationSpec);
        }
        /**
         * The Append Block operation commits a new block of data to the end of an existing append blob where
         * the contents are read from a source url. The Append Block operation is permitted only if the blob
         * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version
         * 2015-02-21 version or later.
         * @param sourceUrl Specify a URL to the copy source.
         * @param contentLength The length of the request.
         * @param options The options parameters.
         */

      }, {
        key: "appendBlockFromUrl",
        value: function appendBlockFromUrl(sourceUrl, contentLength, options) {
          var operationArguments = {
            sourceUrl: sourceUrl,
            contentLength: contentLength,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, appendBlockFromUrlOperationSpec);
        }
        /**
         * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version
         * 2019-12-12 version or later.
         * @param options The options parameters.
         */

      }, {
        key: "seal",
        value: function seal(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, sealOperationSpec);
        }
      }]);

      return AppendBlob;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var serializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    false);
    var createOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobCreateHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobCreateExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobType1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var appendBlockOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobAppendBlockHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobAppendBlockExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body1"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp22"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["appendPosition"]],
      mediaType: "binary",
      serializer: serializer
    };
    var appendBlockFromUrlOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobAppendBlockFromUrlHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobAppendBlockFromUrlExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp22"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceAuthorization"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceUrl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["appendPosition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceRange1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var sealOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobSealHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["AppendBlobSealExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp23"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["appendPosition"]],
      isXML: true,
      serializer: xmlSerializer
    }; //# sourceMappingURL=appendBlob.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blob.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsBlobJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Blob", function () {
      return Blob;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a Blob. */


    var Blob = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class Blob class.
       * @param client Reference to the service client
       */
      function Blob(client) {
        _classCallCheck(this, Blob);

        this.client = client;
      }
      /**
       * The Download operation reads or downloads a blob from the system, including its metadata and
       * properties. You can also call Download to read a snapshot.
       * @param options The options parameters.
       */


      _createClass(Blob, [{
        key: "download",
        value: function download(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, downloadOperationSpec);
        }
        /**
         * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system
         * properties for the blob. It does not return the content of the blob.
         * @param options The options parameters.
         */

      }, {
        key: "getProperties",
        value: function getProperties(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);
        }
        /**
         * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is
         * permanently removed from the storage account. If the storage account's soft delete feature is
         * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible
         * immediately. However, the blob service retains the blob or snapshot for the number of days specified
         * by the DeleteRetentionPolicy section of [Storage service properties]
         * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is
         * permanently removed from the storage account. Note that you continue to be charged for the
         * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the
         * "include=deleted" query parameter to discover which blobs and snapshots have been soft deleted. You
         * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a
         * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404
         * (ResourceNotFound).
         * @param options The options parameters.
         */

      }, {
        key: "delete",
        value: function _delete(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, deleteOperationSpec);
        }
        /**
         * Undelete a blob that was previously soft deleted
         * @param options The options parameters.
         */

      }, {
        key: "undelete",
        value: function undelete(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, undeleteOperationSpec);
        }
        /**
         * Sets the time a blob will expire and be deleted.
         * @param expiryOptions Required. Indicates mode of the expiry time
         * @param options The options parameters.
         */

      }, {
        key: "setExpiry",
        value: function setExpiry(expiryOptions, options) {
          var operationArguments = {
            expiryOptions: expiryOptions,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setExpiryOperationSpec);
        }
        /**
         * The Set HTTP Headers operation sets system properties on the blob
         * @param options The options parameters.
         */

      }, {
        key: "setHttpHeaders",
        value: function setHttpHeaders(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setHttpHeadersOperationSpec);
        }
        /**
         * The Set Immutability Policy operation sets the immutability policy on the blob
         * @param options The options parameters.
         */

      }, {
        key: "setImmutabilityPolicy",
        value: function setImmutabilityPolicy(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setImmutabilityPolicyOperationSpec);
        }
        /**
         * The Delete Immutability Policy operation deletes the immutability policy on the blob
         * @param options The options parameters.
         */

      }, {
        key: "deleteImmutabilityPolicy",
        value: function deleteImmutabilityPolicy(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, deleteImmutabilityPolicyOperationSpec);
        }
        /**
         * The Set Legal Hold operation sets a legal hold on the blob.
         * @param legalHold Specified if a legal hold should be set on the blob.
         * @param options The options parameters.
         */

      }, {
        key: "setLegalHold",
        value: function setLegalHold(legalHold, options) {
          var operationArguments = {
            legalHold: legalHold,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setLegalHoldOperationSpec);
        }
        /**
         * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more
         * name-value pairs
         * @param options The options parameters.
         */

      }, {
        key: "setMetadata",
        value: function setMetadata(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setMetadataOperationSpec);
        }
        /**
         * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete
         * operations
         * @param options The options parameters.
         */

      }, {
        key: "acquireLease",
        value: function acquireLease(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, acquireLeaseOperationSpec);
        }
        /**
         * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete
         * operations
         * @param leaseId Specifies the current lease ID on the resource.
         * @param options The options parameters.
         */

      }, {
        key: "releaseLease",
        value: function releaseLease(leaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, releaseLeaseOperationSpec);
        }
        /**
         * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete
         * operations
         * @param leaseId Specifies the current lease ID on the resource.
         * @param options The options parameters.
         */

      }, {
        key: "renewLease",
        value: function renewLease(leaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, renewLeaseOperationSpec);
        }
        /**
         * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete
         * operations
         * @param leaseId Specifies the current lease ID on the resource.
         * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400
         *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor
         *                        (String) for a list of valid GUID string formats.
         * @param options The options parameters.
         */

      }, {
        key: "changeLease",
        value: function changeLease(leaseId, proposedLeaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            proposedLeaseId: proposedLeaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, changeLeaseOperationSpec);
        }
        /**
         * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete
         * operations
         * @param options The options parameters.
         */

      }, {
        key: "breakLease",
        value: function breakLease(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, breakLeaseOperationSpec);
        }
        /**
         * The Create Snapshot operation creates a read-only snapshot of a blob
         * @param options The options parameters.
         */

      }, {
        key: "createSnapshot",
        value: function createSnapshot(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, createSnapshotOperationSpec);
        }
        /**
         * The Start Copy From URL operation copies a blob or an internet resource to a new blob.
         * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to
         *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would
         *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared
         *                   access signature.
         * @param options The options parameters.
         */

      }, {
        key: "startCopyFromURL",
        value: function startCopyFromURL(copySource, options) {
          var operationArguments = {
            copySource: copySource,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, startCopyFromURLOperationSpec);
        }
        /**
         * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return
         * a response until the copy is complete.
         * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to
         *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would
         *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared
         *                   access signature.
         * @param options The options parameters.
         */

      }, {
        key: "copyFromURL",
        value: function copyFromURL(copySource, options) {
          var operationArguments = {
            copySource: copySource,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, copyFromURLOperationSpec);
        }
        /**
         * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination
         * blob with zero length and full metadata.
         * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob
         *               operation.
         * @param options The options parameters.
         */

      }, {
        key: "abortCopyFromURL",
        value: function abortCopyFromURL(copyId, options) {
          var operationArguments = {
            copyId: copyId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, abortCopyFromURLOperationSpec);
        }
        /**
         * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium
         * storage account and on a block blob in a blob storage account (locally redundant storage only). A
         * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block
         * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's
         * ETag.
         * @param tier Indicates the tier to be set on the blob.
         * @param options The options parameters.
         */

      }, {
        key: "setTier",
        value: function setTier(tier, options) {
          var operationArguments = {
            tier: tier,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setTierOperationSpec);
        }
        /**
         * Returns the sku name and account kind
         * @param options The options parameters.
         */

      }, {
        key: "getAccountInfo",
        value: function getAccountInfo(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);
        }
        /**
         * The Query operation enables users to select/project on blob data by providing simple query
         * expressions.
         * @param options The options parameters.
         */

      }, {
        key: "query",
        value: function query(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, queryOperationSpec);
        }
        /**
         * The Get Tags operation enables users to get the tags associated with a blob.
         * @param options The options parameters.
         */

      }, {
        key: "getTags",
        value: function getTags(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getTagsOperationSpec);
        }
        /**
         * The Set Tags operation enables users to set tags on a blob.
         * @param options The options parameters.
         */

      }, {
        key: "setTags",
        value: function setTags(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setTagsOperationSpec);
        }
      }]);

      return Blob;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var downloadOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDownloadHeaders"]
        },
        206: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDownloadHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDownloadExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["rangeGetContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["rangeGetContentCRC64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getPropertiesOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "HEAD",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetPropertiesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetPropertiesExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var deleteOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "DELETE",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDeleteHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDeleteExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobDeleteType"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["deleteSnapshots"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var undeleteOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobUndeleteHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobUndeleteExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp8"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setExpiryOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetExpiryHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetExpiryExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp11"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["expiryOptions"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["expiresOn"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setHttpHeadersOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetHttpHeadersHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetHttpHeadersExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setImmutabilityPolicyOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetImmutabilityPolicyHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetImmutabilityPolicyExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp12"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var deleteImmutabilityPolicyOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "DELETE",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDeleteImmutabilityPolicyHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobDeleteImmutabilityPolicyExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp12"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setLegalHoldOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetLegalHoldHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetLegalHoldExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp13"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setMetadataOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetMetadataHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetMetadataExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp6"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var acquireLeaseOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobAcquireLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobAcquireLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["duration"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["proposedLeaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var releaseLeaseOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobReleaseLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobReleaseLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var renewLeaseOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobRenewLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobRenewLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var changeLeaseOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobChangeLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobChangeLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action4"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["proposedLeaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var breakLeaseOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobBreakLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobBreakLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action3"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["breakPeriod"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var createSnapshotOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobCreateSnapshotHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobCreateSnapshotExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp14"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var startCopyFromURLOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobStartCopyFromURLHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobStartCopyFromURLExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["rehydratePriority"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySource"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sealBlob"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var copyFromURLOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobCopyFromURLHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobCopyFromURLExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySource"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["xMsRequiresSync"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceAuthorization"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var abortCopyFromURLOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        204: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobAbortCopyFromURLHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobAbortCopyFromURLExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp15"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copyId"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copyActionAbortConstant"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setTierOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetTierHeaders"]
        },
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetTierHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetTierExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp16"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["rehydratePriority"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getAccountInfoOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetAccountInfoHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetAccountInfoExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype1"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var queryOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "POST",
      responses: {
        200: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobQueryHeaders"]
        },
        206: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobQueryHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobQueryExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["queryRequest"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp17"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var getTagsOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobTags"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetTagsHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobGetTagsExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp18"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setTagsOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        204: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetTagsHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobSetTagsExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tags"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["versionId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp18"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentCrc64"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    }; //# sourceMappingURL=blob.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blockBlob.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsBlockBlobJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlob", function () {
      return BlockBlob;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a BlockBlob. */


    var BlockBlob = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class BlockBlob class.
       * @param client Reference to the service client
       */
      function BlockBlob(client) {
        _classCallCheck(this, BlockBlob);

        this.client = client;
      }
      /**
       * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing
       * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put
       * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a
       * partial update of the content of a block blob, use the Put Block List operation.
       * @param contentLength The length of the request.
       * @param body Initial data
       * @param options The options parameters.
       */


      _createClass(BlockBlob, [{
        key: "upload",
        value: function upload(contentLength, body, options) {
          var operationArguments = {
            contentLength: contentLength,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, uploadOperationSpec);
        }
        /**
         * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read
         * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are
         * not supported with Put Blob from URL; the content of an existing blob is overwritten with the
         * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,
         * use the Put Block from URL API in conjunction with Put Block List.
         * @param contentLength The length of the request.
         * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to
         *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would
         *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared
         *                   access signature.
         * @param options The options parameters.
         */

      }, {
        key: "putBlobFromUrl",
        value: function putBlobFromUrl(contentLength, copySource, options) {
          var operationArguments = {
            contentLength: contentLength,
            copySource: copySource,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, putBlobFromUrlOperationSpec);
        }
        /**
         * The Stage Block operation creates a new block to be committed as part of a blob
         * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string
         *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified
         *                for the blockid parameter must be the same size for each block.
         * @param contentLength The length of the request.
         * @param body Initial data
         * @param options The options parameters.
         */

      }, {
        key: "stageBlock",
        value: function stageBlock(blockId, contentLength, body, options) {
          var operationArguments = {
            blockId: blockId,
            contentLength: contentLength,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, stageBlockOperationSpec);
        }
        /**
         * The Stage Block operation creates a new block to be committed as part of a blob where the contents
         * are read from a URL.
         * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string
         *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified
         *                for the blockid parameter must be the same size for each block.
         * @param contentLength The length of the request.
         * @param sourceUrl Specify a URL to the copy source.
         * @param options The options parameters.
         */

      }, {
        key: "stageBlockFromURL",
        value: function stageBlockFromURL(blockId, contentLength, sourceUrl, options) {
          var operationArguments = {
            blockId: blockId,
            contentLength: contentLength,
            sourceUrl: sourceUrl,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, stageBlockFromURLOperationSpec);
        }
        /**
         * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the
         * blob. In order to be written as part of a blob, a block must have been successfully written to the
         * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading
         * only those blocks that have changed, then committing the new and existing blocks together. You can
         * do this by specifying whether to commit a block from the committed block list or from the
         * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list
         * it may belong to.
         * @param blocks Blob Blocks.
         * @param options The options parameters.
         */

      }, {
        key: "commitBlockList",
        value: function commitBlockList(blocks, options) {
          var operationArguments = {
            blocks: blocks,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, commitBlockListOperationSpec);
        }
        /**
         * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block
         * blob
         * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted
         *                 blocks, or both lists together.
         * @param options The options parameters.
         */

      }, {
        key: "getBlockList",
        value: function getBlockList(listType, options) {
          var operationArguments = {
            listType: listType,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getBlockListOperationSpec);
        }
      }]);

      return BlockBlob;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var serializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    false);
    var uploadOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobUploadHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobUploadExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body1"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobType2"]],
      mediaType: "binary",
      serializer: serializer
    };
    var putBlobFromUrlOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobPutBlobFromUrlHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobPutBlobFromUrlExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySource"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceAuthorization"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobType2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceBlobProperties"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var stageBlockOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobStageBlockHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobStageBlockExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body1"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp24"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blockId"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept2"]],
      mediaType: "binary",
      serializer: serializer
    };
    var stageBlockFromURLOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobStageBlockFromURLHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobStageBlockFromURLExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp24"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blockId"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceAuthorization"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceUrl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceRange1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var commitBlockListOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobCommitBlockListHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobCommitBlockListExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blocks"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp25"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentCrc64"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var getBlockListOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockList"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobGetBlockListHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlockBlobGetBlockListExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp25"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["listType"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    }; //# sourceMappingURL=blockBlob.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/container.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsContainerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Container", function () {
      return Container;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a Container. */


    var Container = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class Container class.
       * @param client Reference to the service client
       */
      function Container(client) {
        _classCallCheck(this, Container);

        this.client = client;
      }
      /**
       * creates a new container under the specified account. If the container with the same name already
       * exists, the operation fails
       * @param options The options parameters.
       */


      _createClass(Container, [{
        key: "create",
        value: function create(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, createOperationSpec);
        }
        /**
         * returns all user-defined metadata and system properties for the specified container. The data
         * returned does not include the container's list of blobs
         * @param options The options parameters.
         */

      }, {
        key: "getProperties",
        value: function getProperties(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);
        }
        /**
         * operation marks the specified container for deletion. The container and any blobs contained within
         * it are later deleted during garbage collection
         * @param options The options parameters.
         */

      }, {
        key: "delete",
        value: function _delete(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, deleteOperationSpec);
        }
        /**
         * operation sets one or more user-defined name-value pairs for the specified container.
         * @param options The options parameters.
         */

      }, {
        key: "setMetadata",
        value: function setMetadata(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setMetadataOperationSpec);
        }
        /**
         * gets the permissions for the specified container. The permissions indicate whether container data
         * may be accessed publicly.
         * @param options The options parameters.
         */

      }, {
        key: "getAccessPolicy",
        value: function getAccessPolicy(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getAccessPolicyOperationSpec);
        }
        /**
         * sets the permissions for the specified container. The permissions indicate whether blobs in a
         * container may be accessed publicly.
         * @param options The options parameters.
         */

      }, {
        key: "setAccessPolicy",
        value: function setAccessPolicy(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setAccessPolicyOperationSpec);
        }
        /**
         * Restores a previously-deleted container.
         * @param options The options parameters.
         */

      }, {
        key: "restore",
        value: function restore(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, restoreOperationSpec);
        }
        /**
         * Renames an existing container.
         * @param sourceContainerName Required.  Specifies the name of the container to rename.
         * @param options The options parameters.
         */

      }, {
        key: "rename",
        value: function rename(sourceContainerName, options) {
          var operationArguments = {
            sourceContainerName: sourceContainerName,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, renameOperationSpec);
        }
        /**
         * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
         * @param contentLength The length of the request.
         * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch
         *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>
         * @param body Initial data
         * @param options The options parameters.
         */

      }, {
        key: "submitBatch",
        value: function submitBatch(contentLength, multipartContentType, body, options) {
          var operationArguments = {
            contentLength: contentLength,
            multipartContentType: multipartContentType,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, submitBatchOperationSpec);
        }
        /**
         * [Update] establishes and manages a lock on a container for delete operations. The lock duration can
         * be 15 to 60 seconds, or can be infinite
         * @param options The options parameters.
         */

      }, {
        key: "acquireLease",
        value: function acquireLease(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, acquireLeaseOperationSpec);
        }
        /**
         * [Update] establishes and manages a lock on a container for delete operations. The lock duration can
         * be 15 to 60 seconds, or can be infinite
         * @param leaseId Specifies the current lease ID on the resource.
         * @param options The options parameters.
         */

      }, {
        key: "releaseLease",
        value: function releaseLease(leaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, releaseLeaseOperationSpec);
        }
        /**
         * [Update] establishes and manages a lock on a container for delete operations. The lock duration can
         * be 15 to 60 seconds, or can be infinite
         * @param leaseId Specifies the current lease ID on the resource.
         * @param options The options parameters.
         */

      }, {
        key: "renewLease",
        value: function renewLease(leaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, renewLeaseOperationSpec);
        }
        /**
         * [Update] establishes and manages a lock on a container for delete operations. The lock duration can
         * be 15 to 60 seconds, or can be infinite
         * @param options The options parameters.
         */

      }, {
        key: "breakLease",
        value: function breakLease(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, breakLeaseOperationSpec);
        }
        /**
         * [Update] establishes and manages a lock on a container for delete operations. The lock duration can
         * be 15 to 60 seconds, or can be infinite
         * @param leaseId Specifies the current lease ID on the resource.
         * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400
         *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor
         *                        (String) for a list of valid GUID string formats.
         * @param options The options parameters.
         */

      }, {
        key: "changeLease",
        value: function changeLease(leaseId, proposedLeaseId, options) {
          var operationArguments = {
            leaseId: leaseId,
            proposedLeaseId: proposedLeaseId,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, changeLeaseOperationSpec);
        }
        /**
         * [Update] The List Blobs operation returns a list of the blobs under the specified container
         * @param options The options parameters.
         */

      }, {
        key: "listBlobFlatSegment",
        value: function listBlobFlatSegment(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, listBlobFlatSegmentOperationSpec);
        }
        /**
         * [Update] The List Blobs operation returns a list of the blobs under the specified container
         * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix
         *                  element in the response body that acts as a placeholder for all blobs whose names begin with the
         *                  same substring up to the appearance of the delimiter character. The delimiter may be a single
         *                  character or a string.
         * @param options The options parameters.
         */

      }, {
        key: "listBlobHierarchySegment",
        value: function listBlobHierarchySegment(delimiter, options) {
          var operationArguments = {
            delimiter: delimiter,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, listBlobHierarchySegmentOperationSpec);
        }
        /**
         * Returns the sku name and account kind
         * @param options The options parameters.
         */

      }, {
        key: "getAccountInfo",
        value: function getAccountInfo(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);
        }
      }]);

      return Container;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var createOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerCreateHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerCreateExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["access"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["defaultEncryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["preventEncryptionScopeOverride"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getPropertiesOperationSpec = {
      path: "/{containerName}",
      httpMethod: "GET",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetPropertiesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetPropertiesExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var deleteOperationSpec = {
      path: "/{containerName}",
      httpMethod: "DELETE",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerDeleteHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerDeleteExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setMetadataOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSetMetadataHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSetMetadataExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp6"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getAccessPolicyOperationSpec = {
      path: "/{containerName}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "Composite",
                  className: "SignedIdentifier"
                }
              }
            },
            serializedName: "SignedIdentifiers",
            xmlName: "SignedIdentifiers",
            xmlIsWrapped: true,
            xmlElementName: "SignedIdentifier"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetAccessPolicyHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetAccessPolicyExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp7"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var setAccessPolicyOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSetAccessPolicyHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSetAccessPolicyExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["containerAcl"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp7"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["access"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var restoreOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRestoreHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRestoreExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp8"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["deletedContainerName"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["deletedContainerVersion"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var renameOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRenameHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRenameExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp9"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContainerName"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceLeaseId"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var submitBatchOperationSpec = {
      path: "/{containerName}",
      httpMethod: "POST",
      responses: {
        202: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSubmitBatchHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerSubmitBatchExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp4"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["multipartContentType"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var acquireLeaseOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerAcquireLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerAcquireLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["duration"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["proposedLeaseId"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var releaseLeaseOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerReleaseLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerReleaseLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var renewLeaseOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRenewLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerRenewLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action2"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var breakLeaseOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerBreakLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerBreakLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action3"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["breakPeriod"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var changeLeaseOperationSpec = {
      path: "/{containerName}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerChangeLeaseHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerChangeLeaseExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp10"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["action4"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["proposedLeaseId1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var listBlobFlatSegmentOperationSpec = {
      path: "/{containerName}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ListBlobsFlatSegmentResponse"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerListBlobFlatSegmentHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerListBlobFlatSegmentExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["prefix"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["marker"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxPageSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["include1"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var listBlobHierarchySegmentOperationSpec = {
      path: "/{containerName}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ListBlobsHierarchySegmentResponse"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerListBlobHierarchySegmentHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerListBlobHierarchySegmentExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["prefix"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["marker"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxPageSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["include1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["delimiter"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getAccountInfoOperationSpec = {
      path: "/{containerName}",
      httpMethod: "GET",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetAccountInfoHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ContainerGetAccountInfoExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype1"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    }; //# sourceMappingURL=container.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./service */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/service.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Service", function () {
      return _service__WEBPACK_IMPORTED_MODULE_0__["Service"];
    });
    /* harmony import */


    var _container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./container */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/container.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Container", function () {
      return _container__WEBPACK_IMPORTED_MODULE_1__["Container"];
    });
    /* harmony import */


    var _blob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./blob */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blob.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Blob", function () {
      return _blob__WEBPACK_IMPORTED_MODULE_2__["Blob"];
    });
    /* harmony import */


    var _pageBlob__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./pageBlob */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/pageBlob.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PageBlob", function () {
      return _pageBlob__WEBPACK_IMPORTED_MODULE_3__["PageBlob"];
    });
    /* harmony import */


    var _appendBlob__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./appendBlob */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/appendBlob.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AppendBlob", function () {
      return _appendBlob__WEBPACK_IMPORTED_MODULE_4__["AppendBlob"];
    });
    /* harmony import */


    var _blockBlob__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./blockBlob */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/blockBlob.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlockBlob", function () {
      return _blockBlob__WEBPACK_IMPORTED_MODULE_5__["BlockBlob"];
    });
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/pageBlob.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsPageBlobJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PageBlob", function () {
      return PageBlob;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a PageBlob. */


    var PageBlob = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class PageBlob class.
       * @param client Reference to the service client
       */
      function PageBlob(client) {
        _classCallCheck(this, PageBlob);

        this.client = client;
      }
      /**
       * The Create operation creates a new page blob.
       * @param contentLength The length of the request.
       * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The
       *                          page blob size must be aligned to a 512-byte boundary.
       * @param options The options parameters.
       */


      _createClass(PageBlob, [{
        key: "create",
        value: function create(contentLength, blobContentLength, options) {
          var operationArguments = {
            contentLength: contentLength,
            blobContentLength: blobContentLength,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, createOperationSpec);
        }
        /**
         * The Upload Pages operation writes a range of pages to a page blob
         * @param contentLength The length of the request.
         * @param body Initial data
         * @param options The options parameters.
         */

      }, {
        key: "uploadPages",
        value: function uploadPages(contentLength, body, options) {
          var operationArguments = {
            contentLength: contentLength,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, uploadPagesOperationSpec);
        }
        /**
         * The Clear Pages operation clears a set of pages from a page blob
         * @param contentLength The length of the request.
         * @param options The options parameters.
         */

      }, {
        key: "clearPages",
        value: function clearPages(contentLength, options) {
          var operationArguments = {
            contentLength: contentLength,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, clearPagesOperationSpec);
        }
        /**
         * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a
         * URL
         * @param sourceUrl Specify a URL to the copy source.
         * @param sourceRange Bytes of source data in the specified range. The length of this range should
         *                    match the ContentLength header and x-ms-range/Range destination range header.
         * @param contentLength The length of the request.
         * @param range The range of bytes to which the source range would be written. The range should be 512
         *              aligned and range-end is required.
         * @param options The options parameters.
         */

      }, {
        key: "uploadPagesFromURL",
        value: function uploadPagesFromURL(sourceUrl, sourceRange, contentLength, range, options) {
          var operationArguments = {
            sourceUrl: sourceUrl,
            sourceRange: sourceRange,
            contentLength: contentLength,
            range: range,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, uploadPagesFromURLOperationSpec);
        }
        /**
         * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a
         * page blob
         * @param options The options parameters.
         */

      }, {
        key: "getPageRanges",
        value: function getPageRanges(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getPageRangesOperationSpec);
        }
        /**
         * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were
         * changed between target blob and previous snapshot.
         * @param options The options parameters.
         */

      }, {
        key: "getPageRangesDiff",
        value: function getPageRangesDiff(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getPageRangesDiffOperationSpec);
        }
        /**
         * Resize the Blob
         * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The
         *                          page blob size must be aligned to a 512-byte boundary.
         * @param options The options parameters.
         */

      }, {
        key: "resize",
        value: function resize(blobContentLength, options) {
          var operationArguments = {
            blobContentLength: blobContentLength,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, resizeOperationSpec);
        }
        /**
         * Update the sequence number of the blob
         * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.
         *                             This property applies to page blobs only. This property indicates how the service should modify the
         *                             blob's sequence number
         * @param options The options parameters.
         */

      }, {
        key: "updateSequenceNumber",
        value: function updateSequenceNumber(sequenceNumberAction, options) {
          var operationArguments = {
            sequenceNumberAction: sequenceNumberAction,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, updateSequenceNumberOperationSpec);
        }
        /**
         * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.
         * The snapshot is copied such that only the differential changes between the previously copied
         * snapshot are transferred to the destination. The copied snapshots are complete copies of the
         * original snapshot and can be read or copied from as usual. This API is supported since REST version
         * 2016-05-31.
         * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to
         *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would
         *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared
         *                   access signature.
         * @param options The options parameters.
         */

      }, {
        key: "copyIncremental",
        value: function copyIncremental(copySource, options) {
          var operationArguments = {
            copySource: copySource,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, copyIncrementalOperationSpec);
        }
      }]);

      return PageBlob;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var serializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    false);
    var createOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobCreateHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobCreateExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["metadata"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobCacheControl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentEncoding"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLanguage"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentDisposition"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyExpiry"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["immutabilityPolicyMode"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["tier"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobTagsString"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["legalHold1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobSequenceNumber"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var uploadPagesOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUploadPagesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUploadPagesExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body1"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp19"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["transactionalContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["pageWrite"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThanOrEqualTo"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThan"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberEqualTo"]],
      mediaType: "binary",
      serializer: serializer
    };
    var clearPagesOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobClearPagesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobClearPagesExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp19"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThanOrEqualTo"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThan"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberEqualTo"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["pageWrite1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var uploadPagesFromURLOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        201: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUploadPagesFromURLHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUploadPagesFromURLExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp19"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceIfNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentMD5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySourceAuthorization"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["pageWrite"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThanOrEqualTo"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberLessThan"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifSequenceNumberEqualTo"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceUrl"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceRange"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sourceContentCrc64"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getPageRangesOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageList"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobGetPageRangesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobGetPageRangesExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp20"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getPageRangesDiffOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageList"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobGetPageRangesDiffHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobGetPageRangesDiffExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["snapshot"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp20"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["prevsnapshot"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["range"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["prevSnapshotUrl"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var resizeOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobResizeHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobResizeExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKey"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionKeySha256"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionAlgorithm"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["encryptionScope"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobContentLength"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var updateSequenceNumberOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUpdateSequenceNumberHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobUpdateSequenceNumberExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["leaseId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobSequenceNumber"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["sequenceNumberAction"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var copyIncrementalOperationSpec = {
      path: "/{containerName}/{blob}",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobCopyIncrementalHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["PageBlobCopyIncrementalExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp21"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifModifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifUnmodifiedSince"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifNoneMatch"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["ifTags"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["copySource"]],
      isXML: true,
      serializer: xmlSerializer
    }; //# sourceMappingURL=pageBlob.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/service.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcOperationsServiceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Service", function () {
      return Service;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _models_mappers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/mappers */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/mappers.js");
    /* harmony import */


    var _models_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/parameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/models/parameters.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */

    /** Class representing a Service. */


    var Service = /*#__PURE__*/function () {
      /**
       * Initialize a new instance of the class Service class.
       * @param client Reference to the service client
       */
      function Service(client) {
        _classCallCheck(this, Service);

        this.client = client;
      }
      /**
       * Sets properties for a storage account's Blob service endpoint, including properties for Storage
       * Analytics and CORS (Cross-Origin Resource Sharing) rules
       * @param blobServiceProperties The StorageService properties.
       * @param options The options parameters.
       */


      _createClass(Service, [{
        key: "setProperties",
        value: function setProperties(blobServiceProperties, options) {
          var operationArguments = {
            blobServiceProperties: blobServiceProperties,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, setPropertiesOperationSpec);
        }
        /**
         * gets the properties of a storage account's Blob service, including properties for Storage Analytics
         * and CORS (Cross-Origin Resource Sharing) rules.
         * @param options The options parameters.
         */

      }, {
        key: "getProperties",
        value: function getProperties(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getPropertiesOperationSpec);
        }
        /**
         * Retrieves statistics related to replication for the Blob service. It is only available on the
         * secondary location endpoint when read-access geo-redundant replication is enabled for the storage
         * account.
         * @param options The options parameters.
         */

      }, {
        key: "getStatistics",
        value: function getStatistics(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getStatisticsOperationSpec);
        }
        /**
         * The List Containers Segment operation returns a list of the containers under the specified account
         * @param options The options parameters.
         */

      }, {
        key: "listContainersSegment",
        value: function listContainersSegment(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, listContainersSegmentOperationSpec);
        }
        /**
         * Retrieves a user delegation key for the Blob service. This is only a valid operation when using
         * bearer token authentication.
         * @param keyInfo Key information
         * @param options The options parameters.
         */

      }, {
        key: "getUserDelegationKey",
        value: function getUserDelegationKey(keyInfo, options) {
          var operationArguments = {
            keyInfo: keyInfo,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getUserDelegationKeyOperationSpec);
        }
        /**
         * Returns the sku name and account kind
         * @param options The options parameters.
         */

      }, {
        key: "getAccountInfo",
        value: function getAccountInfo(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, getAccountInfoOperationSpec);
        }
        /**
         * The Batch operation allows multiple API calls to be embedded into a single HTTP request.
         * @param contentLength The length of the request.
         * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch
         *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>
         * @param body Initial data
         * @param options The options parameters.
         */

      }, {
        key: "submitBatch",
        value: function submitBatch(contentLength, multipartContentType, body, options) {
          var operationArguments = {
            contentLength: contentLength,
            multipartContentType: multipartContentType,
            body: body,
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, submitBatchOperationSpec);
        }
        /**
         * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a
         * given search expression.  Filter blobs searches across all containers within a storage account but
         * can be scoped within the expression to a single container.
         * @param options The options parameters.
         */

      }, {
        key: "filterBlobs",
        value: function filterBlobs(options) {
          var operationArguments = {
            options: _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["operationOptionsToRequestOptionsBase"](options || {})
          };
          return this.client.sendOperationRequest(operationArguments, filterBlobsOperationSpec);
        }
      }]);

      return Service;
    }(); // Operation Specifications


    var xmlSerializer = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["Serializer"](_models_mappers__WEBPACK_IMPORTED_MODULE_1__,
    /* isXml */
    true);
    var setPropertiesOperationSpec = {
      path: "/",
      httpMethod: "PUT",
      responses: {
        202: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceSetPropertiesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceSetPropertiesExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["blobServiceProperties"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var getPropertiesOperationSpec = {
      path: "/",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobServiceProperties"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetPropertiesHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetPropertiesExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getStatisticsOperationSpec = {
      path: "/",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["BlobServiceStatistics"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetStatisticsHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetStatisticsExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp1"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var listContainersSegmentOperationSpec = {
      path: "/",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ListContainersSegmentResponse"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceListContainersSegmentHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceListContainersSegmentExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp2"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["prefix"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["marker"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxPageSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["include"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var getUserDelegationKeyOperationSpec = {
      path: "/",
      httpMethod: "POST",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["UserDelegationKey"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetUserDelegationKeyHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetUserDelegationKeyExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["keyInfo"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp3"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var getAccountInfoOperationSpec = {
      path: "/",
      httpMethod: "GET",
      responses: {
        200: {
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetAccountInfoHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceGetAccountInfoExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["restype1"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    };
    var submitBatchOperationSpec = {
      path: "/",
      httpMethod: "POST",
      responses: {
        202: {
          bodyMapper: {
            type: {
              name: "Stream"
            },
            serializedName: "parsedResponse"
          },
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceSubmitBatchHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceSubmitBatchExceptionHeaders"]
        }
      },
      requestBody: _models_parameters__WEBPACK_IMPORTED_MODULE_2__["body"],
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp4"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentType"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["contentLength"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["multipartContentType"]],
      isXML: true,
      contentType: "application/xml; charset=utf-8",
      mediaType: "xml",
      serializer: xmlSerializer
    };
    var filterBlobsOperationSpec = {
      path: "/",
      httpMethod: "GET",
      responses: {
        200: {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["FilterBlobSegment"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceFilterBlobsHeaders"]
        },
        "default": {
          bodyMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["StorageError"],
          headersMapper: _models_mappers__WEBPACK_IMPORTED_MODULE_1__["ServiceFilterBlobsExceptionHeaders"]
        }
      },
      queryParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["timeoutInSeconds"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["marker"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["maxPageSize"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["comp5"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["where"]],
      urlParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["url"]],
      headerParameters: [_models_parameters__WEBPACK_IMPORTED_MODULE_2__["version"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["requestId"], _models_parameters__WEBPACK_IMPORTED_MODULE_2__["accept1"]],
      isXML: true,
      serializer: xmlSerializer
    }; //# sourceMappingURL=service.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClient.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcStorageClientJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageClient", function () {
      return StorageClient;
    });
    /* harmony import */


    var _operations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./operations */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/operations/index.js");
    /* harmony import */


    var _storageClientContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./storageClientContext */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */


    var StorageClient = /*#__PURE__*/function (_storageClientContext) {
      _inherits(StorageClient, _storageClientContext);

      var _super33 = _createSuper(StorageClient);

      /**
       * Initializes a new instance of the StorageClient class.
       * @param url The URL of the service account, container, or blob that is the target of the desired
       *            operation.
       * @param options The parameter options
       */
      function StorageClient(url, options) {
        var _this55;

        _classCallCheck(this, StorageClient);

        _this55 = _super33.call(this, url, options);
        _this55.service = new _operations__WEBPACK_IMPORTED_MODULE_0__["Service"](_assertThisInitialized(_this55));
        _this55.container = new _operations__WEBPACK_IMPORTED_MODULE_0__["Container"](_assertThisInitialized(_this55));
        _this55.blob = new _operations__WEBPACK_IMPORTED_MODULE_0__["Blob"](_assertThisInitialized(_this55));
        _this55.pageBlob = new _operations__WEBPACK_IMPORTED_MODULE_0__["PageBlob"](_assertThisInitialized(_this55));
        _this55.appendBlob = new _operations__WEBPACK_IMPORTED_MODULE_0__["AppendBlob"](_assertThisInitialized(_this55));
        _this55.blockBlob = new _operations__WEBPACK_IMPORTED_MODULE_0__["BlockBlob"](_assertThisInitialized(_this55));
        return _this55;
      }

      return StorageClient;
    }(_storageClientContext__WEBPACK_IMPORTED_MODULE_1__["StorageClientContext"]); //# sourceMappingURL=storageClient.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generated/src/storageClientContext.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedSrcStorageClientContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageClientContext", function () {
      return StorageClientContext;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /*
     * Copyright (c) Microsoft Corporation.
     * Licensed under the MIT License.
     *
     * Code generated by Microsoft (R) AutoRest Code Generator.
     * Changes may cause incorrect behavior and will be lost if the code is regenerated.
     */


    var packageName = "azure-storage-blob";
    var packageVersion = "12.8.0";

    var StorageClientContext = /*#__PURE__*/function (_azure_core_http__WEB3) {
      _inherits(StorageClientContext, _azure_core_http__WEB3);

      var _super34 = _createSuper(StorageClientContext);

      /**
       * Initializes a new instance of the StorageClientContext class.
       * @param url The URL of the service account, container, or blob that is the target of the desired
       *            operation.
       * @param options The parameter options
       */
      function StorageClientContext(url, options) {
        var _this56;

        _classCallCheck(this, StorageClientContext);

        if (url === undefined) {
          throw new Error("'url' cannot be null");
        } // Initializing default values for options


        if (!options) {
          options = {};
        }

        if (!options.userAgent) {
          var defaultUserAgent = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["getDefaultUserAgentValue"]();

          options.userAgent = "".concat(packageName, "/").concat(packageVersion, " ").concat(defaultUserAgent);
        }

        _this56 = _super34.call(this, undefined, options);
        _this56.requestContentType = "application/json; charset=utf-8";
        _this56.baseUri = options.endpoint || "{url}"; // Parameter assignments

        _this56.url = url; // Assigning values to Constant parameters

        _this56.version = options.version || "2020-10-02";
        return _this56;
      }

      return StorageClientContext;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["ServiceClient"]); //# sourceMappingURL=storageClientContext.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generatedModels.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcGeneratedModelsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=generatedModels.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/index.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcIndexBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RestError", function () {
      return _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["RestError"];
    });
    /* harmony import */


    var _BlobServiceClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./BlobServiceClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobServiceClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlobServiceClient", function () {
      return _BlobServiceClient__WEBPACK_IMPORTED_MODULE_1__["BlobServiceClient"];
    });
    /* harmony import */


    var _Clients__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Clients */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Clients.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlobClient", function () {
      return _Clients__WEBPACK_IMPORTED_MODULE_2__["BlobClient"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AppendBlobClient", function () {
      return _Clients__WEBPACK_IMPORTED_MODULE_2__["AppendBlobClient"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobClient", function () {
      return _Clients__WEBPACK_IMPORTED_MODULE_2__["BlockBlobClient"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PageBlobClient", function () {
      return _Clients__WEBPACK_IMPORTED_MODULE_2__["PageBlobClient"];
    });
    /* harmony import */


    var _ContainerClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ContainerClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/ContainerClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ContainerClient", function () {
      return _ContainerClient__WEBPACK_IMPORTED_MODULE_3__["ContainerClient"];
    });
    /* harmony import */


    var _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./BlobLeaseClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobLeaseClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlobLeaseClient", function () {
      return _BlobLeaseClient__WEBPACK_IMPORTED_MODULE_4__["BlobLeaseClient"];
    });
    /* harmony import */


    var _BlobBatch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./BlobBatch */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatch.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlobBatch", function () {
      return _BlobBatch__WEBPACK_IMPORTED_MODULE_5__["BlobBatch"];
    });
    /* harmony import */


    var _BlobBatchClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./BlobBatchClient */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BlobBatchClient.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlobBatchClient", function () {
      return _BlobBatchClient__WEBPACK_IMPORTED_MODULE_6__["BlobBatchClient"];
    });
    /* harmony import */


    var _BatchResponse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./BatchResponse */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/BatchResponse.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _StorageBrowserPolicyFactory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./StorageBrowserPolicyFactory */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageBrowserPolicyFactory.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageBrowserPolicy", function () {
      return _StorageBrowserPolicyFactory__WEBPACK_IMPORTED_MODULE_8__["StorageBrowserPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageBrowserPolicyFactory", function () {
      return _StorageBrowserPolicyFactory__WEBPACK_IMPORTED_MODULE_8__["StorageBrowserPolicyFactory"];
    });
    /* harmony import */


    var _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./credentials/AnonymousCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/AnonymousCredential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AnonymousCredential", function () {
      return _credentials_AnonymousCredential__WEBPACK_IMPORTED_MODULE_9__["AnonymousCredential"];
    });
    /* harmony import */


    var _credentials_Credential__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./credentials/Credential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/Credential.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Credential", function () {
      return _credentials_Credential__WEBPACK_IMPORTED_MODULE_10__["Credential"];
    });
    /* harmony import */


    var _models__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./models */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/models.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobTier", function () {
      return _models__WEBPACK_IMPORTED_MODULE_11__["BlockBlobTier"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PremiumPageBlobTier", function () {
      return _models__WEBPACK_IMPORTED_MODULE_11__["PremiumPageBlobTier"];
    });
    /* harmony import */


    var _Pipeline__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./Pipeline */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/Pipeline.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseRequestPolicy", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["BaseRequestPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageOAuthScopes", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["StorageOAuthScopes"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "deserializationPolicy", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["deserializationPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "HttpHeaders", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["HttpHeaders"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WebResource", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["WebResource"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "RequestPolicyOptions", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["RequestPolicyOptions"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isPipelineLike", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["isPipelineLike"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pipeline", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["Pipeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "newPipeline", function () {
      return _Pipeline__WEBPACK_IMPORTED_MODULE_12__["newPipeline"];
    });
    /* harmony import */


    var _policies_AnonymousCredentialPolicy__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./policies/AnonymousCredentialPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/AnonymousCredentialPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AnonymousCredentialPolicy", function () {
      return _policies_AnonymousCredentialPolicy__WEBPACK_IMPORTED_MODULE_13__["AnonymousCredentialPolicy"];
    });
    /* harmony import */


    var _policies_CredentialPolicy__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./policies/CredentialPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/CredentialPolicy.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "CredentialPolicy", function () {
      return _policies_CredentialPolicy__WEBPACK_IMPORTED_MODULE_14__["CredentialPolicy"];
    });
    /* harmony import */


    var _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./StorageRetryPolicyFactory */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/StorageRetryPolicyFactory.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicyType", function () {
      return _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_15__["StorageRetryPolicyType"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicy", function () {
      return _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_15__["StorageRetryPolicy"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicyFactory", function () {
      return _StorageRetryPolicyFactory__WEBPACK_IMPORTED_MODULE_15__["StorageRetryPolicyFactory"];
    });
    /* harmony import */


    var _generatedModels__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./generatedModels */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/generatedModels.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./log */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "logger", function () {
      return _log__WEBPACK_IMPORTED_MODULE_17__["logger"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcLogJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "logger", function () {
      return logger;
    });
    /* harmony import */


    var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/logger */
    "./node_modules/@azure/logger/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * The `@azure/logger` configuration for this package.
     */


    var logger = Object(_azure_logger__WEBPACK_IMPORTED_MODULE_0__["createClientLogger"])("storage-blob"); //# sourceMappingURL=log.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/models.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcModelsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlockBlobTier", function () {
      return BlockBlobTier;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PremiumPageBlobTier", function () {
      return PremiumPageBlobTier;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "toAccessTier", function () {
      return toAccessTier;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ensureCpkIfSpecified", function () {
      return ensureCpkIfSpecified;
    });
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Represents the access tier on a blob.
     * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}
     */


    var BlockBlobTier;

    (function (BlockBlobTier) {
      /**
       * Optimized for storing data that is accessed frequently.
       */
      BlockBlobTier["Hot"] = "Hot";
      /**
       * Optimized for storing data that is infrequently accessed and stored for at least 30 days.
       */

      BlockBlobTier["Cool"] = "Cool";
      /**
       * Optimized for storing data that is rarely accessed and stored for at least 180 days
       * with flexible latency requirements (on the order of hours).
       */

      BlockBlobTier["Archive"] = "Archive";
    })(BlockBlobTier || (BlockBlobTier = {}));
    /**
     * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.
     * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}
     * for detailed information on the corresponding IOPS and throughput per PageBlobTier.
     */


    var PremiumPageBlobTier;

    (function (PremiumPageBlobTier) {
      /**
       * P4 Tier.
       */
      PremiumPageBlobTier["P4"] = "P4";
      /**
       * P6 Tier.
       */

      PremiumPageBlobTier["P6"] = "P6";
      /**
       * P10 Tier.
       */

      PremiumPageBlobTier["P10"] = "P10";
      /**
       * P15 Tier.
       */

      PremiumPageBlobTier["P15"] = "P15";
      /**
       * P20 Tier.
       */

      PremiumPageBlobTier["P20"] = "P20";
      /**
       * P30 Tier.
       */

      PremiumPageBlobTier["P30"] = "P30";
      /**
       * P40 Tier.
       */

      PremiumPageBlobTier["P40"] = "P40";
      /**
       * P50 Tier.
       */

      PremiumPageBlobTier["P50"] = "P50";
      /**
       * P60 Tier.
       */

      PremiumPageBlobTier["P60"] = "P60";
      /**
       * P70 Tier.
       */

      PremiumPageBlobTier["P70"] = "P70";
      /**
       * P80 Tier.
       */

      PremiumPageBlobTier["P80"] = "P80";
    })(PremiumPageBlobTier || (PremiumPageBlobTier = {}));

    function toAccessTier(tier) {
      if (tier === undefined) {
        return undefined;
      }

      return tier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).
    }

    function ensureCpkIfSpecified(cpk, isHttps) {
      if (cpk && !isHttps) {
        throw new RangeError("Customer-provided encryption key must be used over HTTPS.");
      }

      if (cpk && !cpk.encryptionAlgorithm) {
        cpk.encryptionAlgorithm = _utils_constants__WEBPACK_IMPORTED_MODULE_0__["EncryptionAlgorithmAES25"];
      }
    } //# sourceMappingURL=models.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/AnonymousCredentialPolicy.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPoliciesAnonymousCredentialPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AnonymousCredentialPolicy", function () {
      return AnonymousCredentialPolicy;
    });
    /* harmony import */


    var _CredentialPolicy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./CredentialPolicy */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/CredentialPolicy.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources
     * or for use with Shared Access Signatures (SAS).
     */


    var AnonymousCredentialPolicy = /*#__PURE__*/function (_CredentialPolicy__WE) {
      _inherits(AnonymousCredentialPolicy, _CredentialPolicy__WE);

      var _super35 = _createSuper(AnonymousCredentialPolicy);

      /**
       * Creates an instance of AnonymousCredentialPolicy.
       * @param nextPolicy -
       * @param options -
       */
      // The base class has a protected constructor. Adding a public one to enable constructing of this class.

      /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/
      function AnonymousCredentialPolicy(nextPolicy, options) {
        _classCallCheck(this, AnonymousCredentialPolicy);

        return _super35.call(this, nextPolicy, options);
      }

      return AnonymousCredentialPolicy;
    }(_CredentialPolicy__WEBPACK_IMPORTED_MODULE_0__["CredentialPolicy"]); //# sourceMappingURL=AnonymousCredentialPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/CredentialPolicy.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPoliciesCredentialPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CredentialPolicy", function () {
      return CredentialPolicy;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Credential policy used to sign HTTP(S) requests before sending. This is an
     * abstract class.
     */


    var CredentialPolicy = /*#__PURE__*/function (_azure_core_http__WEB4) {
      _inherits(CredentialPolicy, _azure_core_http__WEB4);

      var _super36 = _createSuper(CredentialPolicy);

      function CredentialPolicy() {
        _classCallCheck(this, CredentialPolicy);

        return _super36.apply(this, arguments);
      }

      _createClass(CredentialPolicy, [{
        key: "sendRequest",
        value:
        /**
         * Sends out request.
         *
         * @param request -
         */
        function sendRequest(request) {
          return this._nextPolicy.sendRequest(this.signRequest(request));
        }
        /**
         * Child classes must implement this method with request signing. This method
         * will be executed in {@link sendRequest}.
         *
         * @param request -
         */

      }, {
        key: "signRequest",
        value: function signRequest(request) {
          // Child classes must override this method with request signing. This method
          // will be executed in sendRequest().
          return request;
        }
      }]);

      return CredentialPolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=CredentialPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageBrowserPolicy.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPoliciesStorageBrowserPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageBrowserPolicy", function () {
      return StorageBrowserPolicy;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:
     *
     * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.
     * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL
     * thus avoid the browser cache.
     *
     * 2. Remove cookie header for security
     *
     * 3. Remove content-length header to avoid browsers warning
     */


    var StorageBrowserPolicy = /*#__PURE__*/function (_azure_core_http__WEB5) {
      _inherits(StorageBrowserPolicy, _azure_core_http__WEB5);

      var _super37 = _createSuper(StorageBrowserPolicy);

      /**
       * Creates an instance of StorageBrowserPolicy.
       * @param nextPolicy -
       * @param options -
       */
      // The base class has a protected constructor. Adding a public one to enable constructing of this class.

      /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/
      function StorageBrowserPolicy(nextPolicy, options) {
        _classCallCheck(this, StorageBrowserPolicy);

        return _super37.call(this, nextPolicy, options);
      }
      /**
       * Sends out request.
       *
       * @param request -
       */


      _createClass(StorageBrowserPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee124(request) {
            return regeneratorRuntime.wrap(function _callee124$(_context135) {
              while (1) {
                switch (_context135.prev = _context135.next) {
                  case 0:
                    if (!_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
                      _context135.next = 2;
                      break;
                    }

                    return _context135.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 2:
                    if (request.method.toUpperCase() === "GET" || request.method.toUpperCase() === "HEAD") {
                      request.url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_2__["setURLParameter"])(request.url, _utils_constants__WEBPACK_IMPORTED_MODULE_1__["URLConstants"].Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());
                    }

                    request.headers.remove(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].COOKIE); // According to XHR standards, content-length should be fully controlled by browsers

                    request.headers.remove(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].CONTENT_LENGTH);
                    return _context135.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 6:
                  case "end":
                    return _context135.stop();
                }
              }
            }, _callee124, this);
          }));

          function sendRequest(_x148) {
            return _sendRequest10.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return StorageBrowserPolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=StorageBrowserPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/StorageRetryPolicy.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPoliciesStorageRetryPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NewRetryPolicyFactory", function () {
      return NewRetryPolicyFactory;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicyType", function () {
      return StorageRetryPolicyType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageRetryPolicy", function () {
      return StorageRetryPolicy;
    });
    /* harmony import */


    var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/abort-controller */
    "./node_modules/@azure/abort-controller/dist-esm/src/index.js");
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js");
    /* harmony import */


    var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../log */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/log.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * A factory method used to generated a RetryPolicy factory.
     *
     * @param retryOptions -
     */


    function NewRetryPolicyFactory(retryOptions) {
      return {
        create: function create(nextPolicy, options) {
          return new StorageRetryPolicy(nextPolicy, options, retryOptions);
        }
      };
    }
    /**
     * RetryPolicy types.
     */


    var StorageRetryPolicyType;

    (function (StorageRetryPolicyType) {
      /**
       * Exponential retry. Retry time delay grows exponentially.
       */
      StorageRetryPolicyType[StorageRetryPolicyType["EXPONENTIAL"] = 0] = "EXPONENTIAL";
      /**
       * Linear retry. Retry time delay grows linearly.
       */

      StorageRetryPolicyType[StorageRetryPolicyType["FIXED"] = 1] = "FIXED";
    })(StorageRetryPolicyType || (StorageRetryPolicyType = {})); // Default values of StorageRetryOptions


    var DEFAULT_RETRY_OPTIONS = {
      maxRetryDelayInMs: 120 * 1000,
      maxTries: 4,
      retryDelayInMs: 4 * 1000,
      retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,
      secondaryHost: "",
      tryTimeoutInMs: undefined // Use server side default timeout strategy

    };
    var RETRY_ABORT_ERROR = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__["AbortError"]("The operation was aborted.");
    /**
     * Retry policy with exponential retry and linear retry implemented.
     */

    var StorageRetryPolicy = /*#__PURE__*/function (_azure_core_http__WEB6) {
      _inherits(StorageRetryPolicy, _azure_core_http__WEB6);

      var _super38 = _createSuper(StorageRetryPolicy);

      /**
       * Creates an instance of RetryPolicy.
       *
       * @param nextPolicy -
       * @param options -
       * @param retryOptions -
       */
      function StorageRetryPolicy(nextPolicy, options) {
        var _this57;

        var retryOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_RETRY_OPTIONS;

        _classCallCheck(this, StorageRetryPolicy);

        _this57 = _super38.call(this, nextPolicy, options); // Initialize retry options

        _this57.retryOptions = {
          retryPolicyType: retryOptions.retryPolicyType ? retryOptions.retryPolicyType : DEFAULT_RETRY_OPTIONS.retryPolicyType,
          maxTries: retryOptions.maxTries && retryOptions.maxTries >= 1 ? Math.floor(retryOptions.maxTries) : DEFAULT_RETRY_OPTIONS.maxTries,
          tryTimeoutInMs: retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0 ? retryOptions.tryTimeoutInMs : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,
          retryDelayInMs: retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0 ? Math.min(retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs ? retryOptions.maxRetryDelayInMs : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs) : DEFAULT_RETRY_OPTIONS.retryDelayInMs,
          maxRetryDelayInMs: retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0 ? retryOptions.maxRetryDelayInMs : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,
          secondaryHost: retryOptions.secondaryHost ? retryOptions.secondaryHost : DEFAULT_RETRY_OPTIONS.secondaryHost
        };
        return _this57;
      }
      /**
       * Sends request.
       *
       * @param request -
       */


      _createClass(StorageRetryPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee125(request) {
            return regeneratorRuntime.wrap(function _callee125$(_context136) {
              while (1) {
                switch (_context136.prev = _context136.next) {
                  case 0:
                    return _context136.abrupt("return", this.attemptSendRequest(request, false, 1));

                  case 1:
                  case "end":
                    return _context136.stop();
                }
              }
            }, _callee125, this);
          }));

          function sendRequest(_x149) {
            return _sendRequest11.apply(this, arguments);
          }

          return sendRequest;
        }()
        /**
         * Decide and perform next retry. Won't mutate request parameter.
         *
         * @param request -
         * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then
         *                                   the resource was not found. This may be due to replication delay. So, in this
         *                                   case, we'll never try the secondary again for this operation.
         * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes
         *                                   the attempt will be performed by this method call.
         */

      }, {
        key: "attemptSendRequest",
        value: function () {
          var _attemptSendRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee126(request, secondaryHas404, attempt) {
            var newRequest, isPrimaryRetry, response;
            return regeneratorRuntime.wrap(function _callee126$(_context137) {
              while (1) {
                switch (_context137.prev = _context137.next) {
                  case 0:
                    newRequest = request.clone();
                    isPrimaryRetry = secondaryHas404 || !this.retryOptions.secondaryHost || !(request.method === "GET" || request.method === "HEAD" || request.method === "OPTIONS") || attempt % 2 === 1;

                    if (!isPrimaryRetry) {
                      newRequest.url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_3__["setURLHost"])(newRequest.url, this.retryOptions.secondaryHost);
                    } // Set the server-side timeout query parameter "timeout=[seconds]"


                    if (this.retryOptions.tryTimeoutInMs) {
                      newRequest.url = Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_3__["setURLParameter"])(newRequest.url, _utils_constants__WEBPACK_IMPORTED_MODULE_2__["URLConstants"].Parameters.TIMEOUT, Math.floor(this.retryOptions.tryTimeoutInMs / 1000).toString());
                    }

                    _context137.prev = 4;

                    _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: =====> Try=".concat(attempt, " ").concat(isPrimaryRetry ? "Primary" : "Secondary"));

                    _context137.next = 8;
                    return this._nextPolicy.sendRequest(newRequest);

                  case 8:
                    response = _context137.sent;

                    if (this.shouldRetry(isPrimaryRetry, attempt, response)) {
                      _context137.next = 11;
                      break;
                    }

                    return _context137.abrupt("return", response);

                  case 11:
                    secondaryHas404 = secondaryHas404 || !isPrimaryRetry && response.status === 404;
                    _context137.next = 19;
                    break;

                  case 14:
                    _context137.prev = 14;
                    _context137.t0 = _context137["catch"](4);

                    _log__WEBPACK_IMPORTED_MODULE_4__["logger"].error("RetryPolicy: Caught error, message: ".concat(_context137.t0.message, ", code: ").concat(_context137.t0.code));

                    if (this.shouldRetry(isPrimaryRetry, attempt, response, _context137.t0)) {
                      _context137.next = 19;
                      break;
                    }

                    throw _context137.t0;

                  case 19:
                    _context137.next = 21;
                    return this.delay(isPrimaryRetry, attempt, request.abortSignal);

                  case 21:
                    return _context137.abrupt("return", this.attemptSendRequest(request, secondaryHas404, ++attempt));

                  case 22:
                  case "end":
                    return _context137.stop();
                }
              }
            }, _callee126, this, [[4, 14]]);
          }));

          function attemptSendRequest(_x150, _x151, _x152) {
            return _attemptSendRequest.apply(this, arguments);
          }

          return attemptSendRequest;
        }()
        /**
         * Decide whether to retry according to last HTTP response and retry counters.
         *
         * @param isPrimaryRetry -
         * @param attempt -
         * @param response -
         * @param err -
         */

      }, {
        key: "shouldRetry",
        value: function shouldRetry(isPrimaryRetry, attempt, response, err) {
          if (attempt >= this.retryOptions.maxTries) {
            _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Attempt(s) ".concat(attempt, " >= maxTries ").concat(this.retryOptions.maxTries, ", no further try."));

            return false;
          } // Handle network failures, you may need to customize the list when you implement
          // your own http client


          var retriableErrors = ["ETIMEDOUT", "ESOCKETTIMEDOUT", "ECONNREFUSED", "ECONNRESET", "ENOENT", "ENOTFOUND", "TIMEOUT", "EPIPE", "REQUEST_SEND_ERROR" // For default xhr based http client provided in ms-rest-js
          ];

          if (err) {
            var _iterator29 = _createForOfIteratorHelper(retriableErrors),
                _step29;

            try {
              for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
                var retriableError = _step29.value;

                if (err.name.toUpperCase().includes(retriableError) || err.message.toUpperCase().includes(retriableError) || err.code && err.code.toString().toUpperCase() === retriableError) {
                  _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Network error ".concat(retriableError, " found, will retry."));

                  return true;
                }
              }
            } catch (err) {
              _iterator29.e(err);
            } finally {
              _iterator29.f();
            }
          } // If attempt was against the secondary & it returned a StatusNotFound (404), then
          // the resource was not found. This may be due to replication delay. So, in this
          // case, we'll never try the secondary again for this operation.


          if (response || err) {
            var statusCode = response ? response.status : err ? err.statusCode : 0;

            if (!isPrimaryRetry && statusCode === 404) {
              _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Secondary access with 404, will retry.");

              return true;
            } // Server internal error or server timeout


            if (statusCode === 503 || statusCode === 500) {
              _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Will retry for status code ".concat(statusCode, "."));

              return true;
            }
          }

          if ((err === null || err === void 0 ? void 0 : err.code) === "PARSE_ERROR" && (err === null || err === void 0 ? void 0 : err.message.startsWith("Error \"Error: Unclosed root tag"))) {
            _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry.");

            return true;
          }

          return false;
        }
        /**
         * Delay a calculated time between retries.
         *
         * @param isPrimaryRetry -
         * @param attempt -
         * @param abortSignal -
         */

      }, {
        key: "delay",
        value: function () {
          var _delay = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee127(isPrimaryRetry, attempt, abortSignal) {
            var delayTimeInMs;
            return regeneratorRuntime.wrap(function _callee127$(_context138) {
              while (1) {
                switch (_context138.prev = _context138.next) {
                  case 0:
                    delayTimeInMs = 0;

                    if (!isPrimaryRetry) {
                      _context138.next = 11;
                      break;
                    }

                    _context138.t0 = this.retryOptions.retryPolicyType;
                    _context138.next = _context138.t0 === StorageRetryPolicyType.EXPONENTIAL ? 5 : _context138.t0 === StorageRetryPolicyType.FIXED ? 7 : 9;
                    break;

                  case 5:
                    delayTimeInMs = Math.min((Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs, this.retryOptions.maxRetryDelayInMs);
                    return _context138.abrupt("break", 9);

                  case 7:
                    delayTimeInMs = this.retryOptions.retryDelayInMs;
                    return _context138.abrupt("break", 9);

                  case 9:
                    _context138.next = 12;
                    break;

                  case 11:
                    delayTimeInMs = Math.random() * 1000;

                  case 12:
                    _log__WEBPACK_IMPORTED_MODULE_4__["logger"].info("RetryPolicy: Delay for ".concat(delayTimeInMs, "ms"));

                    return _context138.abrupt("return", Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_3__["delay"])(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR));

                  case 14:
                  case "end":
                    return _context138.stop();
                }
              }
            }, _callee127, this);
          }));

          function delay(_x153, _x154, _x155) {
            return _delay.apply(this, arguments);
          }

          return delay;
        }()
      }]);

      return StorageRetryPolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_1__["BaseRequestPolicy"]); //# sourceMappingURL=StorageRetryPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/policies/TelemetryPolicy.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPoliciesTelemetryPolicyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TelemetryPolicy", function () {
      return TelemetryPolicy;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * TelemetryPolicy is a policy used to tag user-agent header for every requests.
     */


    var TelemetryPolicy = /*#__PURE__*/function (_azure_core_http__WEB7) {
      _inherits(TelemetryPolicy, _azure_core_http__WEB7);

      var _super39 = _createSuper(TelemetryPolicy);

      /**
       * Creates an instance of TelemetryPolicy.
       * @param nextPolicy -
       * @param options -
       * @param telemetry -
       */
      function TelemetryPolicy(nextPolicy, options, telemetry) {
        var _this58;

        _classCallCheck(this, TelemetryPolicy);

        _this58 = _super39.call(this, nextPolicy, options);
        _this58.telemetry = telemetry;
        return _this58;
      }
      /**
       * Sends out request.
       *
       * @param request -
       */


      _createClass(TelemetryPolicy, [{
        key: "sendRequest",
        value: function () {
          var _sendRequest12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee128(request) {
            return regeneratorRuntime.wrap(function _callee128$(_context139) {
              while (1) {
                switch (_context139.prev = _context139.next) {
                  case 0:
                    if (_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"]) {
                      if (!request.headers) {
                        request.headers = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();
                      }

                      if (!request.headers.get(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].USER_AGENT)) {
                        request.headers.set(_utils_constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].USER_AGENT, this.telemetry);
                      }
                    }

                    return _context139.abrupt("return", this._nextPolicy.sendRequest(request));

                  case 2:
                  case "end":
                    return _context139.stop();
                }
              }
            }, _callee128, this);
          }));

          function sendRequest(_x156) {
            return _sendRequest12.apply(this, arguments);
          }

          return sendRequest;
        }()
      }]);

      return TelemetryPolicy;
    }(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["BaseRequestPolicy"]); //# sourceMappingURL=TelemetryPolicy.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcPollersBlobStartCopyFromUrlPollerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobBeginCopyFromUrlPoller", function () {
      return BlobBeginCopyFromUrlPoller;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _azure_core_lro__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/core-lro */
    "./node_modules/@azure/core-lro/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * This is the poller returned by {@link BlobClient.beginCopyFromURL}.
     * This can not be instantiated directly outside of this package.
     *
     * @hidden
     */


    var BlobBeginCopyFromUrlPoller = /*#__PURE__*/function (_azure_core_lro__WEBP) {
      _inherits(BlobBeginCopyFromUrlPoller, _azure_core_lro__WEBP);

      var _super40 = _createSuper(BlobBeginCopyFromUrlPoller);

      function BlobBeginCopyFromUrlPoller(options) {
        var _this59;

        _classCallCheck(this, BlobBeginCopyFromUrlPoller);

        var blobClient = options.blobClient,
            copySource = options.copySource,
            _options$intervalInMs = options.intervalInMs,
            intervalInMs = _options$intervalInMs === void 0 ? 15000 : _options$intervalInMs,
            onProgress = options.onProgress,
            resumeFrom = options.resumeFrom,
            startCopyFromURLOptions = options.startCopyFromURLOptions;
        var state;

        if (resumeFrom) {
          state = JSON.parse(resumeFrom).state;
        }

        var operation = makeBlobBeginCopyFromURLPollOperation(Object.assign(Object.assign({}, state), {
          blobClient: blobClient,
          copySource: copySource,
          startCopyFromURLOptions: startCopyFromURLOptions
        }));
        _this59 = _super40.call(this, operation);

        if (typeof onProgress === "function") {
          _this59.onProgress(onProgress);
        }

        _this59.intervalInMs = intervalInMs;
        return _this59;
      }

      _createClass(BlobBeginCopyFromUrlPoller, [{
        key: "delay",
        value: function delay() {
          return Object(_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["delay"])(this.intervalInMs);
        }
      }]);

      return BlobBeginCopyFromUrlPoller;
    }(_azure_core_lro__WEBPACK_IMPORTED_MODULE_1__["Poller"]);
    /**
     * Note: Intentionally using function expression over arrow function expression
     * so that the function can be invoked with a different context.
     * This affects what `this` refers to.
     * @hidden
     */


    var cancel = /*#__PURE__*/function () {
      var _cancel2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee129() {
        var options,
            state,
            copyId,
            _args139 = arguments;
        return regeneratorRuntime.wrap(function _callee129$(_context140) {
          while (1) {
            switch (_context140.prev = _context140.next) {
              case 0:
                options = _args139.length > 0 && _args139[0] !== undefined ? _args139[0] : {};
                state = this.state;
                copyId = state.copyId;

                if (!state.isCompleted) {
                  _context140.next = 5;
                  break;
                }

                return _context140.abrupt("return", makeBlobBeginCopyFromURLPollOperation(state));

              case 5:
                if (copyId) {
                  _context140.next = 8;
                  break;
                }

                state.isCancelled = true;
                return _context140.abrupt("return", makeBlobBeginCopyFromURLPollOperation(state));

              case 8:
                _context140.next = 10;
                return state.blobClient.abortCopyFromURL(copyId, {
                  abortSignal: options.abortSignal
                });

              case 10:
                state.isCancelled = true;
                return _context140.abrupt("return", makeBlobBeginCopyFromURLPollOperation(state));

              case 12:
              case "end":
                return _context140.stop();
            }
          }
        }, _callee129, this);
      }));

      function cancel() {
        return _cancel2.apply(this, arguments);
      }

      return cancel;
    }();
    /**
     * Note: Intentionally using function expression over arrow function expression
     * so that the function can be invoked with a different context.
     * This affects what `this` refers to.
     * @hidden
     */


    var update = /*#__PURE__*/function () {
      var _update2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee130() {
        var options,
            state,
            blobClient,
            copySource,
            startCopyFromURLOptions,
            result,
            _result3,
            copyStatus,
            copyProgress,
            prevCopyProgress,
            _args140 = arguments;

        return regeneratorRuntime.wrap(function _callee130$(_context141) {
          while (1) {
            switch (_context141.prev = _context141.next) {
              case 0:
                options = _args140.length > 0 && _args140[0] !== undefined ? _args140[0] : {};
                state = this.state;
                blobClient = state.blobClient, copySource = state.copySource, startCopyFromURLOptions = state.startCopyFromURLOptions;

                if (state.isStarted) {
                  _context141.next = 12;
                  break;
                }

                state.isStarted = true;
                _context141.next = 7;
                return blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);

              case 7:
                result = _context141.sent;
                // copyId is needed to abort
                state.copyId = result.copyId;

                if (result.copyStatus === "success") {
                  state.result = result;
                  state.isCompleted = true;
                }

                _context141.next = 27;
                break;

              case 12:
                if (state.isCompleted) {
                  _context141.next = 27;
                  break;
                }

                _context141.prev = 13;
                _context141.next = 16;
                return state.blobClient.getProperties({
                  abortSignal: options.abortSignal
                });

              case 16:
                _result3 = _context141.sent;
                copyStatus = _result3.copyStatus, copyProgress = _result3.copyProgress;
                prevCopyProgress = state.copyProgress;

                if (copyProgress) {
                  state.copyProgress = copyProgress;
                }

                if (copyStatus === "pending" && copyProgress !== prevCopyProgress && typeof options.fireProgress === "function") {
                  // trigger in setTimeout, or swallow error?
                  options.fireProgress(state);
                } else if (copyStatus === "success") {
                  state.result = _result3;
                  state.isCompleted = true;
                } else if (copyStatus === "failed") {
                  state.error = new Error("Blob copy failed with reason: \"".concat(_result3.copyStatusDescription || "unknown", "\""));
                  state.isCompleted = true;
                }

                _context141.next = 27;
                break;

              case 23:
                _context141.prev = 23;
                _context141.t0 = _context141["catch"](13);
                state.error = _context141.t0;
                state.isCompleted = true;

              case 27:
                return _context141.abrupt("return", makeBlobBeginCopyFromURLPollOperation(state));

              case 28:
              case "end":
                return _context141.stop();
            }
          }
        }, _callee130, this, [[13, 23]]);
      }));

      function update() {
        return _update2.apply(this, arguments);
      }

      return update;
    }();
    /**
     * Note: Intentionally using function expression over arrow function expression
     * so that the function can be invoked with a different context.
     * This affects what `this` refers to.
     * @hidden
     */


    var toString = function toString() {
      return JSON.stringify({
        state: this.state
      }, function (key, value) {
        // remove blobClient from serialized state since a client can't be hydrated from this info.
        if (key === "blobClient") {
          return undefined;
        }

        return value;
      });
    };
    /**
     * Creates a poll operation given the provided state.
     * @hidden
     */


    function makeBlobBeginCopyFromURLPollOperation(state) {
      return {
        state: Object.assign({}, state),
        cancel: cancel,
        toString: toString,
        update: update
      };
    } //# sourceMappingURL=BlobStartCopyFromUrlPoller.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASPermissions.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasAccountSASPermissionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccountSASPermissions", function () {
      return AccountSASPermissions;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     *
     * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value
     * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the
     * values are set, this should be serialized with toString and set as the permissions field on an
     * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but
     * the order of the permissions is particular and this class guarantees correctness.
     */


    var AccountSASPermissions = /*#__PURE__*/function () {
      function AccountSASPermissions() {
        _classCallCheck(this, AccountSASPermissions);

        /**
         * Permission to read resources and list queues and tables granted.
         */
        this.read = false;
        /**
         * Permission to write resources granted.
         */

        this.write = false;
        /**
         * Permission to create blobs and files granted.
         */

        this["delete"] = false;
        /**
         * Permission to delete versions granted.
         */

        this.deleteVersion = false;
        /**
         * Permission to list blob containers, blobs, shares, directories, and files granted.
         */

        this.list = false;
        /**
         * Permission to add messages, table entities, and append to blobs granted.
         */

        this.add = false;
        /**
         * Permission to create blobs and files granted.
         */

        this.create = false;
        /**
         * Permissions to update messages and table entities granted.
         */

        this.update = false;
        /**
         * Permission to get and delete messages granted.
         */

        this.process = false;
        /**
         * Specfies Tag access granted.
         */

        this.tag = false;
        /**
         * Permission to filter blobs.
         */

        this.filter = false;
        /**
         * Permission to set immutability policy.
         */

        this.setImmutabilityPolicy = false;
      }
      /**
       * Parse initializes the AccountSASPermissions fields from a string.
       *
       * @param permissions -
       */


      _createClass(AccountSASPermissions, [{
        key: "toString",
        value:
        /**
         * Produces the SAS permissions string for an Azure Storage account.
         * Call this method to set AccountSASSignatureValues Permissions field.
         *
         * Using this method will guarantee the resource types are in
         * an order accepted by the service.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
         *
         */
        function toString() {
          // The order of the characters should be as specified here to ensure correctness:
          // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
          // Use a string array instead of string concatenating += operator for performance
          var permissions = [];

          if (this.read) {
            permissions.push("r");
          }

          if (this.write) {
            permissions.push("w");
          }

          if (this["delete"]) {
            permissions.push("d");
          }

          if (this.deleteVersion) {
            permissions.push("x");
          }

          if (this.filter) {
            permissions.push("f");
          }

          if (this.tag) {
            permissions.push("t");
          }

          if (this.list) {
            permissions.push("l");
          }

          if (this.add) {
            permissions.push("a");
          }

          if (this.create) {
            permissions.push("c");
          }

          if (this.update) {
            permissions.push("u");
          }

          if (this.process) {
            permissions.push("p");
          }

          if (this.setImmutabilityPolicy) {
            permissions.push("i");
          }

          return permissions.join("");
        }
      }], [{
        key: "parse",
        value: function parse(permissions) {
          var accountSASPermissions = new AccountSASPermissions();

          var _iterator30 = _createForOfIteratorHelper(permissions),
              _step30;

          try {
            for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
              var c = _step30.value;

              switch (c) {
                case "r":
                  accountSASPermissions.read = true;
                  break;

                case "w":
                  accountSASPermissions.write = true;
                  break;

                case "d":
                  accountSASPermissions["delete"] = true;
                  break;

                case "x":
                  accountSASPermissions.deleteVersion = true;
                  break;

                case "l":
                  accountSASPermissions.list = true;
                  break;

                case "a":
                  accountSASPermissions.add = true;
                  break;

                case "c":
                  accountSASPermissions.create = true;
                  break;

                case "u":
                  accountSASPermissions.update = true;
                  break;

                case "p":
                  accountSASPermissions.process = true;
                  break;

                case "t":
                  accountSASPermissions.tag = true;
                  break;

                case "f":
                  accountSASPermissions.filter = true;
                  break;

                case "i":
                  accountSASPermissions.setImmutabilityPolicy = true;
                  break;

                default:
                  throw new RangeError("Invalid permission character: ".concat(c));
              }
            }
          } catch (err) {
            _iterator30.e(err);
          } finally {
            _iterator30.f();
          }

          return accountSASPermissions;
        }
        /**
         * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it
         * and boolean values for them.
         *
         * @param permissionLike -
         */

      }, {
        key: "from",
        value: function from(permissionLike) {
          var accountSASPermissions = new AccountSASPermissions();

          if (permissionLike.read) {
            accountSASPermissions.read = true;
          }

          if (permissionLike.write) {
            accountSASPermissions.write = true;
          }

          if (permissionLike["delete"]) {
            accountSASPermissions["delete"] = true;
          }

          if (permissionLike.deleteVersion) {
            accountSASPermissions.deleteVersion = true;
          }

          if (permissionLike.filter) {
            accountSASPermissions.filter = true;
          }

          if (permissionLike.tag) {
            accountSASPermissions.tag = true;
          }

          if (permissionLike.list) {
            accountSASPermissions.list = true;
          }

          if (permissionLike.add) {
            accountSASPermissions.add = true;
          }

          if (permissionLike.create) {
            accountSASPermissions.create = true;
          }

          if (permissionLike.update) {
            accountSASPermissions.update = true;
          }

          if (permissionLike.process) {
            accountSASPermissions.process = true;
          }

          if (permissionLike.setImmutabilityPolicy) {
            accountSASPermissions.setImmutabilityPolicy = true;
          }

          return accountSASPermissions;
        }
      }]);

      return AccountSASPermissions;
    }(); //# sourceMappingURL=AccountSASPermissions.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASResourceTypes.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasAccountSASResourceTypesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccountSASResourceTypes", function () {
      return AccountSASResourceTypes;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     *
     * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value
     * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the
     * values are set, this should be serialized with toString and set as the resources field on an
     * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but
     * the order of the resources is particular and this class guarantees correctness.
     */


    var AccountSASResourceTypes = /*#__PURE__*/function () {
      function AccountSASResourceTypes() {
        _classCallCheck(this, AccountSASResourceTypes);

        /**
         * Permission to access service level APIs granted.
         */
        this.service = false;
        /**
         * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.
         */

        this.container = false;
        /**
         * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.
         */

        this.object = false;
      }
      /**
       * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an
       * Error if it encounters a character that does not correspond to a valid resource type.
       *
       * @param resourceTypes -
       */


      _createClass(AccountSASResourceTypes, [{
        key: "toString",
        value:
        /**
         * Converts the given resource types to a string.
         *
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
         *
         */
        function toString() {
          var resourceTypes = [];

          if (this.service) {
            resourceTypes.push("s");
          }

          if (this.container) {
            resourceTypes.push("c");
          }

          if (this.object) {
            resourceTypes.push("o");
          }

          return resourceTypes.join("");
        }
      }], [{
        key: "parse",
        value: function parse(resourceTypes) {
          var accountSASResourceTypes = new AccountSASResourceTypes();

          var _iterator31 = _createForOfIteratorHelper(resourceTypes),
              _step31;

          try {
            for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
              var c = _step31.value;

              switch (c) {
                case "s":
                  accountSASResourceTypes.service = true;
                  break;

                case "c":
                  accountSASResourceTypes.container = true;
                  break;

                case "o":
                  accountSASResourceTypes.object = true;
                  break;

                default:
                  throw new RangeError("Invalid resource type: ".concat(c));
              }
            }
          } catch (err) {
            _iterator31.e(err);
          } finally {
            _iterator31.f();
          }

          return accountSASResourceTypes;
        }
      }]);

      return AccountSASResourceTypes;
    }(); //# sourceMappingURL=AccountSASResourceTypes.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASServices.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasAccountSASServicesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AccountSASServices", function () {
      return AccountSASServices;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     *
     * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value
     * to true means that any SAS which uses these permissions will grant access to that service. Once all the
     * values are set, this should be serialized with toString and set as the services field on an
     * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but
     * the order of the services is particular and this class guarantees correctness.
     */


    var AccountSASServices = /*#__PURE__*/function () {
      function AccountSASServices() {
        _classCallCheck(this, AccountSASServices);

        /**
         * Permission to access blob resources granted.
         */
        this.blob = false;
        /**
         * Permission to access file resources granted.
         */

        this.file = false;
        /**
         * Permission to access queue resources granted.
         */

        this.queue = false;
        /**
         * Permission to access table resources granted.
         */

        this.table = false;
      }
      /**
       * Creates an {@link AccountSASServices} from the specified services string. This method will throw an
       * Error if it encounters a character that does not correspond to a valid service.
       *
       * @param services -
       */


      _createClass(AccountSASServices, [{
        key: "toString",
        value:
        /**
         * Converts the given services to a string.
         *
         */
        function toString() {
          var services = [];

          if (this.blob) {
            services.push("b");
          }

          if (this.table) {
            services.push("t");
          }

          if (this.queue) {
            services.push("q");
          }

          if (this.file) {
            services.push("f");
          }

          return services.join("");
        }
      }], [{
        key: "parse",
        value: function parse(services) {
          var accountSASServices = new AccountSASServices();

          var _iterator32 = _createForOfIteratorHelper(services),
              _step32;

          try {
            for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
              var c = _step32.value;

              switch (c) {
                case "b":
                  accountSASServices.blob = true;
                  break;

                case "f":
                  accountSASServices.file = true;
                  break;

                case "q":
                  accountSASServices.queue = true;
                  break;

                case "t":
                  accountSASServices.table = true;
                  break;

                default:
                  throw new RangeError("Invalid service character: ".concat(c));
              }
            }
          } catch (err) {
            _iterator32.e(err);
          } finally {
            _iterator32.f();
          }

          return accountSASServices;
        }
      }]);

      return AccountSASServices;
    }(); //# sourceMappingURL=AccountSASServices.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASSignatureValues.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasAccountSASSignatureValuesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateAccountSASQueryParameters", function () {
      return generateAccountSASQueryParameters;
    });
    /* harmony import */


    var _AccountSASPermissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./AccountSASPermissions */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASPermissions.js");
    /* harmony import */


    var _AccountSASResourceTypes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./AccountSASResourceTypes */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASResourceTypes.js");
    /* harmony import */


    var _AccountSASServices__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./AccountSASServices */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/AccountSASServices.js");
    /* harmony import */


    var _SasIPRange__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./SasIPRange */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SasIPRange.js");
    /* harmony import */


    var _SASQueryParameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./SASQueryParameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SASQueryParameters.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     *
     * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual
     * REST request.
     *
     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas
     *
     * @param accountSASSignatureValues -
     * @param sharedKeyCredential -
     */


    function generateAccountSASQueryParameters(accountSASSignatureValues, sharedKeyCredential) {
      var version = accountSASSignatureValues.version ? accountSASSignatureValues.version : _utils_constants__WEBPACK_IMPORTED_MODULE_5__["SERVICE_VERSION"];

      if (accountSASSignatureValues.permissions && accountSASSignatureValues.permissions.setImmutabilityPolicy && version < "2020-08-04") {
        throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");
      }

      if (accountSASSignatureValues.permissions && accountSASSignatureValues.permissions.deleteVersion && version < "2019-10-10") {
        throw RangeError("'version' must be >= '2019-10-10' when provided 'x' permission.");
      }

      if (accountSASSignatureValues.permissions && accountSASSignatureValues.permissions.tag && version < "2019-12-12") {
        throw RangeError("'version' must be >= '2019-12-12' when provided 't' permission.");
      }

      if (accountSASSignatureValues.permissions && accountSASSignatureValues.permissions.filter && version < "2019-12-12") {
        throw RangeError("'version' must be >= '2019-12-12' when provided 'f' permission.");
      }

      var parsedPermissions = _AccountSASPermissions__WEBPACK_IMPORTED_MODULE_0__["AccountSASPermissions"].parse(accountSASSignatureValues.permissions.toString());

      var parsedServices = _AccountSASServices__WEBPACK_IMPORTED_MODULE_2__["AccountSASServices"].parse(accountSASSignatureValues.services).toString();

      var parsedResourceTypes = _AccountSASResourceTypes__WEBPACK_IMPORTED_MODULE_1__["AccountSASResourceTypes"].parse(accountSASSignatureValues.resourceTypes).toString();

      var stringToSign = [sharedKeyCredential.accountName, parsedPermissions, parsedServices, parsedResourceTypes, accountSASSignatureValues.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["truncatedISO8061Date"])(accountSASSignatureValues.startsOn, false) : "", Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_6__["truncatedISO8061Date"])(accountSASSignatureValues.expiresOn, false), accountSASSignatureValues.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_3__["ipRangeToString"])(accountSASSignatureValues.ipRange) : "", accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : "", version, "" // Account SAS requires an additional newline character
      ].join("\n");
      var signature = sharedKeyCredential.computeHMACSHA256(stringToSign);
      return new _SASQueryParameters__WEBPACK_IMPORTED_MODULE_4__["SASQueryParameters"](version, signature, parsedPermissions.toString(), parsedServices, parsedResourceTypes, accountSASSignatureValues.protocol, accountSASSignatureValues.startsOn, accountSASSignatureValues.expiresOn, accountSASSignatureValues.ipRange);
    } //# sourceMappingURL=AccountSASSignatureValues.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASPermissions.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasBlobSASPermissionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BlobSASPermissions", function () {
      return BlobSASPermissions;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     *
     * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting
     * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all
     * the values are set, this should be serialized with toString and set as the permissions field on a
     * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but
     * the order of the permissions is particular and this class guarantees correctness.
     */


    var BlobSASPermissions = /*#__PURE__*/function () {
      function BlobSASPermissions() {
        _classCallCheck(this, BlobSASPermissions);

        /**
         * Specifies Read access granted.
         */
        this.read = false;
        /**
         * Specifies Add access granted.
         */

        this.add = false;
        /**
         * Specifies Create access granted.
         */

        this.create = false;
        /**
         * Specifies Write access granted.
         */

        this.write = false;
        /**
         * Specifies Delete access granted.
         */

        this["delete"] = false;
        /**
         * Specifies Delete version access granted.
         */

        this.deleteVersion = false;
        /**
         * Specfies Tag access granted.
         */

        this.tag = false;
        /**
         * Specifies Move access granted.
         */

        this.move = false;
        /**
         * Specifies Execute access granted.
         */

        this.execute = false;
        /**
         * Specifies SetImmutabilityPolicy access granted.
         */

        this.setImmutabilityPolicy = false;
      }
      /**
       * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an
       * Error if it encounters a character that does not correspond to a valid permission.
       *
       * @param permissions -
       */


      _createClass(BlobSASPermissions, [{
        key: "toString",
        value:
        /**
         * Converts the given permissions to a string. Using this method will guarantee the permissions are in an
         * order accepted by the service.
         *
         * @returns A string which represents the BlobSASPermissions
         */
        function toString() {
          var permissions = [];

          if (this.read) {
            permissions.push("r");
          }

          if (this.add) {
            permissions.push("a");
          }

          if (this.create) {
            permissions.push("c");
          }

          if (this.write) {
            permissions.push("w");
          }

          if (this["delete"]) {
            permissions.push("d");
          }

          if (this.deleteVersion) {
            permissions.push("x");
          }

          if (this.tag) {
            permissions.push("t");
          }

          if (this.move) {
            permissions.push("m");
          }

          if (this.execute) {
            permissions.push("e");
          }

          if (this.setImmutabilityPolicy) {
            permissions.push("i");
          }

          return permissions.join("");
        }
      }], [{
        key: "parse",
        value: function parse(permissions) {
          var blobSASPermissions = new BlobSASPermissions();

          var _iterator33 = _createForOfIteratorHelper(permissions),
              _step33;

          try {
            for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
              var _char = _step33.value;

              switch (_char) {
                case "r":
                  blobSASPermissions.read = true;
                  break;

                case "a":
                  blobSASPermissions.add = true;
                  break;

                case "c":
                  blobSASPermissions.create = true;
                  break;

                case "w":
                  blobSASPermissions.write = true;
                  break;

                case "d":
                  blobSASPermissions["delete"] = true;
                  break;

                case "x":
                  blobSASPermissions.deleteVersion = true;
                  break;

                case "t":
                  blobSASPermissions.tag = true;
                  break;

                case "m":
                  blobSASPermissions.move = true;
                  break;

                case "e":
                  blobSASPermissions.execute = true;
                  break;

                case "i":
                  blobSASPermissions.setImmutabilityPolicy = true;
                  break;

                default:
                  throw new RangeError("Invalid permission: ".concat(_char));
              }
            }
          } catch (err) {
            _iterator33.e(err);
          } finally {
            _iterator33.f();
          }

          return blobSASPermissions;
        }
        /**
         * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it
         * and boolean values for them.
         *
         * @param permissionLike -
         */

      }, {
        key: "from",
        value: function from(permissionLike) {
          var blobSASPermissions = new BlobSASPermissions();

          if (permissionLike.read) {
            blobSASPermissions.read = true;
          }

          if (permissionLike.add) {
            blobSASPermissions.add = true;
          }

          if (permissionLike.create) {
            blobSASPermissions.create = true;
          }

          if (permissionLike.write) {
            blobSASPermissions.write = true;
          }

          if (permissionLike["delete"]) {
            blobSASPermissions["delete"] = true;
          }

          if (permissionLike.deleteVersion) {
            blobSASPermissions.deleteVersion = true;
          }

          if (permissionLike.tag) {
            blobSASPermissions.tag = true;
          }

          if (permissionLike.move) {
            blobSASPermissions.move = true;
          }

          if (permissionLike.execute) {
            blobSASPermissions.execute = true;
          }

          if (permissionLike.setImmutabilityPolicy) {
            blobSASPermissions.setImmutabilityPolicy = true;
          }

          return blobSASPermissions;
        }
      }]);

      return BlobSASPermissions;
    }(); //# sourceMappingURL=BlobSASPermissions.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASSignatureValues.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasBlobSASSignatureValuesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateBlobSASQueryParameters", function () {
      return generateBlobSASQueryParameters;
    });
    /* harmony import */


    var _BlobSASPermissions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./BlobSASPermissions */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/BlobSASPermissions.js");
    /* harmony import */


    var _ContainerSASPermissions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./ContainerSASPermissions */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/ContainerSASPermissions.js");
    /* harmony import */


    var _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../credentials/StorageSharedKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/StorageSharedKeyCredential.browser.js");
    /* harmony import */


    var _credentials_UserDelegationKeyCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../credentials/UserDelegationKeyCredential */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/credentials/UserDelegationKeyCredential.browser.js");
    /* harmony import */


    var _SasIPRange__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./SasIPRange */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SasIPRange.js");
    /* harmony import */


    var _SASQueryParameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./SASQueryParameters */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SASQueryParameters.js");
    /* harmony import */


    var _utils_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../utils/constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    function generateBlobSASQueryParameters(blobSASSignatureValues, sharedKeyCredentialOrUserDelegationKey, accountName) {
      var version = blobSASSignatureValues.version ? blobSASSignatureValues.version : _utils_constants__WEBPACK_IMPORTED_MODULE_6__["SERVICE_VERSION"];
      var sharedKeyCredential = sharedKeyCredentialOrUserDelegationKey instanceof _credentials_StorageSharedKeyCredential__WEBPACK_IMPORTED_MODULE_2__["StorageSharedKeyCredential"] ? sharedKeyCredentialOrUserDelegationKey : undefined;
      var userDelegationKeyCredential;

      if (sharedKeyCredential === undefined && accountName !== undefined) {
        userDelegationKeyCredential = new _credentials_UserDelegationKeyCredential__WEBPACK_IMPORTED_MODULE_3__["UserDelegationKeyCredential"](accountName, sharedKeyCredentialOrUserDelegationKey);
      }

      if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {
        throw TypeError("Invalid sharedKeyCredential, userDelegationKey or accountName.");
      } // Version 2019-12-12 adds support for the blob tags permission.
      // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.
      // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string


      if (version >= "2018-11-09") {
        if (sharedKeyCredential !== undefined) {
          return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);
        } else {
          // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.
          if (version >= "2020-02-10") {
            return generateBlobSASQueryParametersUDK20200210(blobSASSignatureValues, userDelegationKeyCredential);
          } else {
            return generateBlobSASQueryParametersUDK20181109(blobSASSignatureValues, userDelegationKeyCredential);
          }
        }
      }

      if (version >= "2015-04-05") {
        if (sharedKeyCredential !== undefined) {
          return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);
        } else {
          throw new RangeError("'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.");
        }
      }

      throw new RangeError("'version' must be >= '2015-04-05'.");
    }
    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.
     *
     * Creates an instance of SASQueryParameters.
     *
     * Only accepts required settings needed to create a SAS. For optional settings please
     * set corresponding properties directly, such as permissions, startsOn and identifier.
     *
     * WARNING: When identifier is not provided, permissions and expiresOn are required.
     * You MUST assign value to identifier or expiresOn & permissions manually if you initial with
     * this constructor.
     *
     * @param blobSASSignatureValues -
     * @param sharedKeyCredential -
     */


    function generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential) {
      blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);

      if (!blobSASSignatureValues.identifier && !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)) {
        throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");
      }

      var resource = "c";

      if (blobSASSignatureValues.blobName) {
        resource = "b";
      } // Calling parse and toString guarantees the proper ordering and throws on invalid characters.


      var verifiedPermissions;

      if (blobSASSignatureValues.permissions) {
        if (blobSASSignatureValues.blobName) {
          verifiedPermissions = _BlobSASPermissions__WEBPACK_IMPORTED_MODULE_0__["BlobSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        } else {
          verifiedPermissions = _ContainerSASPermissions__WEBPACK_IMPORTED_MODULE_1__["ContainerSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        }
      } // Signature is generated on the un-url-encoded values.


      var stringToSign = [verifiedPermissions ? verifiedPermissions : "", blobSASSignatureValues.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.startsOn, false) : "", blobSASSignatureValues.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.expiresOn, false) : "", getCanonicalName(sharedKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName), blobSASSignatureValues.identifier, blobSASSignatureValues.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_4__["ipRangeToString"])(blobSASSignatureValues.ipRange) : "", blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : "", blobSASSignatureValues.version, blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : "", blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : "", blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : "", blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : "", blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : ""].join("\n");
      var signature = sharedKeyCredential.computeHMACSHA256(stringToSign);
      return new _SASQueryParameters__WEBPACK_IMPORTED_MODULE_5__["SASQueryParameters"](blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType);
    }
    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.
     *
     * Creates an instance of SASQueryParameters.
     *
     * Only accepts required settings needed to create a SAS. For optional settings please
     * set corresponding properties directly, such as permissions, startsOn and identifier.
     *
     * WARNING: When identifier is not provided, permissions and expiresOn are required.
     * You MUST assign value to identifier or expiresOn & permissions manually if you initial with
     * this constructor.
     *
     * @param blobSASSignatureValues -
     * @param sharedKeyCredential -
     */


    function generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential) {
      blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);

      if (!blobSASSignatureValues.identifier && !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)) {
        throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");
      }

      var resource = "c";
      var timestamp = blobSASSignatureValues.snapshotTime;

      if (blobSASSignatureValues.blobName) {
        resource = "b";

        if (blobSASSignatureValues.snapshotTime) {
          resource = "bs";
        } else if (blobSASSignatureValues.versionId) {
          resource = "bv";
          timestamp = blobSASSignatureValues.versionId;
        }
      } // Calling parse and toString guarantees the proper ordering and throws on invalid characters.


      var verifiedPermissions;

      if (blobSASSignatureValues.permissions) {
        if (blobSASSignatureValues.blobName) {
          verifiedPermissions = _BlobSASPermissions__WEBPACK_IMPORTED_MODULE_0__["BlobSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        } else {
          verifiedPermissions = _ContainerSASPermissions__WEBPACK_IMPORTED_MODULE_1__["ContainerSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        }
      } // Signature is generated on the un-url-encoded values.


      var stringToSign = [verifiedPermissions ? verifiedPermissions : "", blobSASSignatureValues.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.startsOn, false) : "", blobSASSignatureValues.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.expiresOn, false) : "", getCanonicalName(sharedKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName), blobSASSignatureValues.identifier, blobSASSignatureValues.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_4__["ipRangeToString"])(blobSASSignatureValues.ipRange) : "", blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : "", blobSASSignatureValues.version, resource, timestamp, blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : "", blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : "", blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : "", blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : "", blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : ""].join("\n");
      var signature = sharedKeyCredential.computeHMACSHA256(stringToSign);
      return new _SASQueryParameters__WEBPACK_IMPORTED_MODULE_5__["SASQueryParameters"](blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType);
    }
    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.
     *
     * Creates an instance of SASQueryParameters.
     *
     * Only accepts required settings needed to create a SAS. For optional settings please
     * set corresponding properties directly, such as permissions, startsOn.
     *
     * WARNING: identifier will be ignored, permissions and expiresOn are required.
     *
     * @param blobSASSignatureValues -
     * @param userDelegationKeyCredential -
     */


    function generateBlobSASQueryParametersUDK20181109(blobSASSignatureValues, userDelegationKeyCredential) {
      blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues); // Stored access policies are not supported for a user delegation SAS.

      if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {
        throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");
      }

      var resource = "c";
      var timestamp = blobSASSignatureValues.snapshotTime;

      if (blobSASSignatureValues.blobName) {
        resource = "b";

        if (blobSASSignatureValues.snapshotTime) {
          resource = "bs";
        } else if (blobSASSignatureValues.versionId) {
          resource = "bv";
          timestamp = blobSASSignatureValues.versionId;
        }
      } // Calling parse and toString guarantees the proper ordering and throws on invalid characters.


      var verifiedPermissions;

      if (blobSASSignatureValues.permissions) {
        if (blobSASSignatureValues.blobName) {
          verifiedPermissions = _BlobSASPermissions__WEBPACK_IMPORTED_MODULE_0__["BlobSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        } else {
          verifiedPermissions = _ContainerSASPermissions__WEBPACK_IMPORTED_MODULE_1__["ContainerSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        }
      } // Signature is generated on the un-url-encoded values.


      var stringToSign = [verifiedPermissions ? verifiedPermissions : "", blobSASSignatureValues.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.startsOn, false) : "", blobSASSignatureValues.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.expiresOn, false) : "", getCanonicalName(userDelegationKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName), userDelegationKeyCredential.userDelegationKey.signedObjectId, userDelegationKeyCredential.userDelegationKey.signedTenantId, userDelegationKeyCredential.userDelegationKey.signedStartsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false) : "", userDelegationKeyCredential.userDelegationKey.signedExpiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false) : "", userDelegationKeyCredential.userDelegationKey.signedService, userDelegationKeyCredential.userDelegationKey.signedVersion, blobSASSignatureValues.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_4__["ipRangeToString"])(blobSASSignatureValues.ipRange) : "", blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : "", blobSASSignatureValues.version, resource, timestamp, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType].join("\n");
      var signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);
      return new _SASQueryParameters__WEBPACK_IMPORTED_MODULE_5__["SASQueryParameters"](blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType, userDelegationKeyCredential.userDelegationKey);
    }
    /**
     * ONLY AVAILABLE IN NODE.JS RUNTIME.
     * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.
     *
     * Creates an instance of SASQueryParameters.
     *
     * Only accepts required settings needed to create a SAS. For optional settings please
     * set corresponding properties directly, such as permissions, startsOn.
     *
     * WARNING: identifier will be ignored, permissions and expiresOn are required.
     *
     * @param blobSASSignatureValues -
     * @param userDelegationKeyCredential -
     */


    function generateBlobSASQueryParametersUDK20200210(blobSASSignatureValues, userDelegationKeyCredential) {
      blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues); // Stored access policies are not supported for a user delegation SAS.

      if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {
        throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");
      }

      var resource = "c";
      var timestamp = blobSASSignatureValues.snapshotTime;

      if (blobSASSignatureValues.blobName) {
        resource = "b";

        if (blobSASSignatureValues.snapshotTime) {
          resource = "bs";
        } else if (blobSASSignatureValues.versionId) {
          resource = "bv";
          timestamp = blobSASSignatureValues.versionId;
        }
      } // Calling parse and toString guarantees the proper ordering and throws on invalid characters.


      var verifiedPermissions;

      if (blobSASSignatureValues.permissions) {
        if (blobSASSignatureValues.blobName) {
          verifiedPermissions = _BlobSASPermissions__WEBPACK_IMPORTED_MODULE_0__["BlobSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        } else {
          verifiedPermissions = _ContainerSASPermissions__WEBPACK_IMPORTED_MODULE_1__["ContainerSASPermissions"].parse(blobSASSignatureValues.permissions.toString()).toString();
        }
      } // Signature is generated on the un-url-encoded values.


      var stringToSign = [verifiedPermissions ? verifiedPermissions : "", blobSASSignatureValues.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.startsOn, false) : "", blobSASSignatureValues.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(blobSASSignatureValues.expiresOn, false) : "", getCanonicalName(userDelegationKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName), userDelegationKeyCredential.userDelegationKey.signedObjectId, userDelegationKeyCredential.userDelegationKey.signedTenantId, userDelegationKeyCredential.userDelegationKey.signedStartsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false) : "", userDelegationKeyCredential.userDelegationKey.signedExpiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_7__["truncatedISO8061Date"])(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false) : "", userDelegationKeyCredential.userDelegationKey.signedService, userDelegationKeyCredential.userDelegationKey.signedVersion, blobSASSignatureValues.preauthorizedAgentObjectId, undefined, blobSASSignatureValues.correlationId, blobSASSignatureValues.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_4__["ipRangeToString"])(blobSASSignatureValues.ipRange) : "", blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : "", blobSASSignatureValues.version, resource, timestamp, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType].join("\n");
      var signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);
      return new _SASQueryParameters__WEBPACK_IMPORTED_MODULE_5__["SASQueryParameters"](blobSASSignatureValues.version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startsOn, blobSASSignatureValues.expiresOn, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType, userDelegationKeyCredential.userDelegationKey, blobSASSignatureValues.preauthorizedAgentObjectId, blobSASSignatureValues.correlationId);
    }

    function getCanonicalName(accountName, containerName, blobName) {
      // Container: "/blob/account/containerName"
      // Blob:      "/blob/account/containerName/blobName"
      var elements = ["/blob/".concat(accountName, "/").concat(containerName)];

      if (blobName) {
        elements.push("/".concat(blobName));
      }

      return elements.join("");
    }

    function SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues) {
      var version = blobSASSignatureValues.version ? blobSASSignatureValues.version : _utils_constants__WEBPACK_IMPORTED_MODULE_6__["SERVICE_VERSION"];

      if (blobSASSignatureValues.snapshotTime && version < "2018-11-09") {
        throw RangeError("'version' must be >= '2018-11-09' when providing 'snapshotTime'.");
      }

      if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {
        throw RangeError("Must provide 'blobName' when providing 'snapshotTime'.");
      }

      if (blobSASSignatureValues.versionId && version < "2019-10-10") {
        throw RangeError("'version' must be >= '2019-10-10' when providing 'versionId'.");
      }

      if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {
        throw RangeError("Must provide 'blobName' when providing 'versionId'.");
      }

      if (blobSASSignatureValues.permissions && blobSASSignatureValues.permissions.setImmutabilityPolicy && version < "2020-08-04") {
        throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");
      }

      if (blobSASSignatureValues.permissions && blobSASSignatureValues.permissions.deleteVersion && version < "2019-10-10") {
        throw RangeError("'version' must be >= '2019-10-10' when providing 'x' permission.");
      }

      if (blobSASSignatureValues.permissions && blobSASSignatureValues.permissions.tag && version < "2019-12-12") {
        throw RangeError("'version' must be >= '2019-12-12' when providing 't' permission.");
      }

      if (version < "2020-02-10" && blobSASSignatureValues.permissions && (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)) {
        throw RangeError("'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.");
      }

      if (version < "2020-02-10" && (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)) {
        throw RangeError("'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.");
      }

      blobSASSignatureValues.version = version;
      return blobSASSignatureValues;
    } //# sourceMappingURL=BlobSASSignatureValues.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/ContainerSASPermissions.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasContainerSASPermissionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContainerSASPermissions", function () {
      return ContainerSASPermissions;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.
     * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.
     * Once all the values are set, this should be serialized with toString and set as the permissions field on a
     * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but
     * the order of the permissions is particular and this class guarantees correctness.
     */


    var ContainerSASPermissions = /*#__PURE__*/function () {
      function ContainerSASPermissions() {
        _classCallCheck(this, ContainerSASPermissions);

        /**
         * Specifies Read access granted.
         */
        this.read = false;
        /**
         * Specifies Add access granted.
         */

        this.add = false;
        /**
         * Specifies Create access granted.
         */

        this.create = false;
        /**
         * Specifies Write access granted.
         */

        this.write = false;
        /**
         * Specifies Delete access granted.
         */

        this["delete"] = false;
        /**
         * Specifies Delete version access granted.
         */

        this.deleteVersion = false;
        /**
         * Specifies List access granted.
         */

        this.list = false;
        /**
         * Specfies Tag access granted.
         */

        this.tag = false;
        /**
         * Specifies Move access granted.
         */

        this.move = false;
        /**
         * Specifies Execute access granted.
         */

        this.execute = false;
        /**
         * Specifies SetImmutabilityPolicy access granted.
         */

        this.setImmutabilityPolicy = false;
      }
      /**
       * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an
       * Error if it encounters a character that does not correspond to a valid permission.
       *
       * @param permissions -
       */


      _createClass(ContainerSASPermissions, [{
        key: "toString",
        value:
        /**
         * Converts the given permissions to a string. Using this method will guarantee the permissions are in an
         * order accepted by the service.
         *
         * The order of the characters should be as specified here to ensure correctness.
         * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas
         *
         */
        function toString() {
          var permissions = [];

          if (this.read) {
            permissions.push("r");
          }

          if (this.add) {
            permissions.push("a");
          }

          if (this.create) {
            permissions.push("c");
          }

          if (this.write) {
            permissions.push("w");
          }

          if (this["delete"]) {
            permissions.push("d");
          }

          if (this.deleteVersion) {
            permissions.push("x");
          }

          if (this.list) {
            permissions.push("l");
          }

          if (this.tag) {
            permissions.push("t");
          }

          if (this.move) {
            permissions.push("m");
          }

          if (this.execute) {
            permissions.push("e");
          }

          if (this.setImmutabilityPolicy) {
            permissions.push("i");
          }

          return permissions.join("");
        }
      }], [{
        key: "parse",
        value: function parse(permissions) {
          var containerSASPermissions = new ContainerSASPermissions();

          var _iterator34 = _createForOfIteratorHelper(permissions),
              _step34;

          try {
            for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
              var _char2 = _step34.value;

              switch (_char2) {
                case "r":
                  containerSASPermissions.read = true;
                  break;

                case "a":
                  containerSASPermissions.add = true;
                  break;

                case "c":
                  containerSASPermissions.create = true;
                  break;

                case "w":
                  containerSASPermissions.write = true;
                  break;

                case "d":
                  containerSASPermissions["delete"] = true;
                  break;

                case "l":
                  containerSASPermissions.list = true;
                  break;

                case "t":
                  containerSASPermissions.tag = true;
                  break;

                case "x":
                  containerSASPermissions.deleteVersion = true;
                  break;

                case "m":
                  containerSASPermissions.move = true;
                  break;

                case "e":
                  containerSASPermissions.execute = true;
                  break;

                case "i":
                  containerSASPermissions.setImmutabilityPolicy = true;
                  break;

                default:
                  throw new RangeError("Invalid permission ".concat(_char2));
              }
            }
          } catch (err) {
            _iterator34.e(err);
          } finally {
            _iterator34.f();
          }

          return containerSASPermissions;
        }
        /**
         * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it
         * and boolean values for them.
         *
         * @param permissionLike -
         */

      }, {
        key: "from",
        value: function from(permissionLike) {
          var containerSASPermissions = new ContainerSASPermissions();

          if (permissionLike.read) {
            containerSASPermissions.read = true;
          }

          if (permissionLike.add) {
            containerSASPermissions.add = true;
          }

          if (permissionLike.create) {
            containerSASPermissions.create = true;
          }

          if (permissionLike.write) {
            containerSASPermissions.write = true;
          }

          if (permissionLike["delete"]) {
            containerSASPermissions["delete"] = true;
          }

          if (permissionLike.list) {
            containerSASPermissions.list = true;
          }

          if (permissionLike.deleteVersion) {
            containerSASPermissions.deleteVersion = true;
          }

          if (permissionLike.tag) {
            containerSASPermissions.tag = true;
          }

          if (permissionLike.move) {
            containerSASPermissions.move = true;
          }

          if (permissionLike.execute) {
            containerSASPermissions.execute = true;
          }

          if (permissionLike.setImmutabilityPolicy) {
            containerSASPermissions.setImmutabilityPolicy = true;
          }

          return containerSASPermissions;
        }
      }]);

      return ContainerSASPermissions;
    }(); //# sourceMappingURL=ContainerSASPermissions.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SASQueryParameters.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasSASQueryParametersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SASProtocol", function () {
      return SASProtocol;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SASQueryParameters", function () {
      return SASQueryParameters;
    });
    /* harmony import */


    var _SasIPRange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./SasIPRange */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SasIPRange.js");
    /* harmony import */


    var _utils_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../utils/utils.common */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Protocols for generated SAS.
     */


    var SASProtocol;

    (function (SASProtocol) {
      /**
       * Protocol that allows HTTPS only
       */
      SASProtocol["Https"] = "https";
      /**
       * Protocol that allows both HTTPS and HTTP
       */

      SASProtocol["HttpsAndHttp"] = "https,http";
    })(SASProtocol || (SASProtocol = {}));
    /**
     * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly
     * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}
     * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should
     * be taken here in case there are existing query parameters, which might affect the appropriate means of appending
     * these query parameters).
     *
     * NOTE: Instances of this class are immutable.
     */


    var SASQueryParameters = /*#__PURE__*/function () {
      function SASQueryParameters(version, signature, permissionsOrOptions, services, resourceTypes, protocol, startsOn, expiresOn, ipRange, identifier, resource, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, userDelegationKey, preauthorizedAgentObjectId, correlationId) {
        _classCallCheck(this, SASQueryParameters);

        this.version = version;
        this.signature = signature;

        if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== "string") {
          // SASQueryParametersOptions
          this.permissions = permissionsOrOptions.permissions;
          this.services = permissionsOrOptions.services;
          this.resourceTypes = permissionsOrOptions.resourceTypes;
          this.protocol = permissionsOrOptions.protocol;
          this.startsOn = permissionsOrOptions.startsOn;
          this.expiresOn = permissionsOrOptions.expiresOn;
          this.ipRangeInner = permissionsOrOptions.ipRange;
          this.identifier = permissionsOrOptions.identifier;
          this.resource = permissionsOrOptions.resource;
          this.cacheControl = permissionsOrOptions.cacheControl;
          this.contentDisposition = permissionsOrOptions.contentDisposition;
          this.contentEncoding = permissionsOrOptions.contentEncoding;
          this.contentLanguage = permissionsOrOptions.contentLanguage;
          this.contentType = permissionsOrOptions.contentType;

          if (permissionsOrOptions.userDelegationKey) {
            this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;
            this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;
            this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;
            this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;
            this.signedService = permissionsOrOptions.userDelegationKey.signedService;
            this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;
            this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;
            this.correlationId = permissionsOrOptions.correlationId;
          }
        } else {
          this.services = services;
          this.resourceTypes = resourceTypes;
          this.expiresOn = expiresOn;
          this.permissions = permissionsOrOptions;
          this.protocol = protocol;
          this.startsOn = startsOn;
          this.ipRangeInner = ipRange;
          this.identifier = identifier;
          this.resource = resource;
          this.cacheControl = cacheControl;
          this.contentDisposition = contentDisposition;
          this.contentEncoding = contentEncoding;
          this.contentLanguage = contentLanguage;
          this.contentType = contentType;

          if (userDelegationKey) {
            this.signedOid = userDelegationKey.signedObjectId;
            this.signedTenantId = userDelegationKey.signedTenantId;
            this.signedStartsOn = userDelegationKey.signedStartsOn;
            this.signedExpiresOn = userDelegationKey.signedExpiresOn;
            this.signedService = userDelegationKey.signedService;
            this.signedVersion = userDelegationKey.signedVersion;
            this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;
            this.correlationId = correlationId;
          }
        }
      }
      /**
       * Optional. IP range allowed for this SAS.
       *
       * @readonly
       */


      _createClass(SASQueryParameters, [{
        key: "ipRange",
        get: function get() {
          if (this.ipRangeInner) {
            return {
              end: this.ipRangeInner.end,
              start: this.ipRangeInner.start
            };
          }

          return undefined;
        }
        /**
         * Encodes all SAS query parameters into a string that can be appended to a URL.
         *
         */

      }, {
        key: "toString",
        value: function toString() {
          var params = ["sv", "ss", "srt", "spr", "st", "se", "sip", "si", "skoid", "sktid", "skt", "ske", "sks", "skv", "sr", "sp", "sig", "rscc", "rscd", "rsce", "rscl", "rsct", "saoid", "scid"];
          var queries = [];

          for (var _i19 = 0, _params = params; _i19 < _params.length; _i19++) {
            var param = _params[_i19];

            switch (param) {
              case "sv":
                this.tryAppendQueryParameter(queries, param, this.version);
                break;

              case "ss":
                this.tryAppendQueryParameter(queries, param, this.services);
                break;

              case "srt":
                this.tryAppendQueryParameter(queries, param, this.resourceTypes);
                break;

              case "spr":
                this.tryAppendQueryParameter(queries, param, this.protocol);
                break;

              case "st":
                this.tryAppendQueryParameter(queries, param, this.startsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["truncatedISO8061Date"])(this.startsOn, false) : undefined);
                break;

              case "se":
                this.tryAppendQueryParameter(queries, param, this.expiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["truncatedISO8061Date"])(this.expiresOn, false) : undefined);
                break;

              case "sip":
                this.tryAppendQueryParameter(queries, param, this.ipRange ? Object(_SasIPRange__WEBPACK_IMPORTED_MODULE_0__["ipRangeToString"])(this.ipRange) : undefined);
                break;

              case "si":
                this.tryAppendQueryParameter(queries, param, this.identifier);
                break;

              case "skoid":
                // Signed object ID
                this.tryAppendQueryParameter(queries, param, this.signedOid);
                break;

              case "sktid":
                // Signed tenant ID
                this.tryAppendQueryParameter(queries, param, this.signedTenantId);
                break;

              case "skt":
                // Signed key start time
                this.tryAppendQueryParameter(queries, param, this.signedStartsOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["truncatedISO8061Date"])(this.signedStartsOn, false) : undefined);
                break;

              case "ske":
                // Signed key expiry time
                this.tryAppendQueryParameter(queries, param, this.signedExpiresOn ? Object(_utils_utils_common__WEBPACK_IMPORTED_MODULE_1__["truncatedISO8061Date"])(this.signedExpiresOn, false) : undefined);
                break;

              case "sks":
                // Signed key service
                this.tryAppendQueryParameter(queries, param, this.signedService);
                break;

              case "skv":
                // Signed key version
                this.tryAppendQueryParameter(queries, param, this.signedVersion);
                break;

              case "sr":
                this.tryAppendQueryParameter(queries, param, this.resource);
                break;

              case "sp":
                this.tryAppendQueryParameter(queries, param, this.permissions);
                break;

              case "sig":
                this.tryAppendQueryParameter(queries, param, this.signature);
                break;

              case "rscc":
                this.tryAppendQueryParameter(queries, param, this.cacheControl);
                break;

              case "rscd":
                this.tryAppendQueryParameter(queries, param, this.contentDisposition);
                break;

              case "rsce":
                this.tryAppendQueryParameter(queries, param, this.contentEncoding);
                break;

              case "rscl":
                this.tryAppendQueryParameter(queries, param, this.contentLanguage);
                break;

              case "rsct":
                this.tryAppendQueryParameter(queries, param, this.contentType);
                break;

              case "saoid":
                this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);
                break;

              case "scid":
                this.tryAppendQueryParameter(queries, param, this.correlationId);
                break;
            }
          }

          return queries.join("&");
        }
        /**
         * A private helper method used to filter and append query key/value pairs into an array.
         *
         * @param queries -
         * @param key -
         * @param value -
         */

      }, {
        key: "tryAppendQueryParameter",
        value: function tryAppendQueryParameter(queries, key, value) {
          if (!value) {
            return;
          }

          key = encodeURIComponent(key);
          value = encodeURIComponent(value);

          if (key.length > 0 && value.length > 0) {
            queries.push("".concat(key, "=").concat(value));
          }
        }
      }]);

      return SASQueryParameters;
    }(); //# sourceMappingURL=SASQueryParameters.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/sas/SasIPRange.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcSasSasIPRangeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ipRangeToString", function () {
      return ipRangeToString;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Generate SasIPRange format string. For example:
     *
     * "8.8.8.8" or "1.1.1.1-255.255.255.255"
     *
     * @param ipRange -
     */


    function ipRangeToString(ipRange) {
      return ipRange.end ? "".concat(ipRange.start, "-").concat(ipRange.end) : ipRange.start;
    } //# sourceMappingURL=SasIPRange.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Batch.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsBatchJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Batch", function () {
      return Batch;
    });
    /* harmony import */


    var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! events */
    "./node_modules/events/events.js");
    /* harmony import */


    var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // In browser, during webpack or browserify bundling, this module will be replaced by 'events'
    // https://github.com/Gozala/events

    /**
     * States for Batch.
     */


    var BatchStates;

    (function (BatchStates) {
      BatchStates[BatchStates["Good"] = 0] = "Good";
      BatchStates[BatchStates["Error"] = 1] = "Error";
    })(BatchStates || (BatchStates = {}));
    /**
     * Batch provides basic parallel execution with concurrency limits.
     * Will stop execute left operations when one of the executed operation throws an error.
     * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.
     */


    var Batch = /*#__PURE__*/function () {
      /**
       * Creates an instance of Batch.
       * @param concurrency -
       */
      function Batch() {
        var concurrency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;

        _classCallCheck(this, Batch);

        /**
         * Number of active operations under execution.
         */
        this.actives = 0;
        /**
         * Number of completed operations under execution.
         */

        this.completed = 0;
        /**
         * Offset of next operation to be executed.
         */

        this.offset = 0;
        /**
         * Operation array to be executed.
         */

        this.operations = [];
        /**
         * States of Batch. When an error happens, state will turn into error.
         * Batch will stop execute left operations.
         */

        this.state = BatchStates.Good;

        if (concurrency < 1) {
          throw new RangeError("concurrency must be larger than 0");
        }

        this.concurrency = concurrency;
        this.emitter = new events__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }
      /**
       * Add a operation into queue.
       *
       * @param operation -
       */


      _createClass(Batch, [{
        key: "addOperation",
        value: function addOperation(operation) {
          var _this60 = this;

          this.operations.push( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee131() {
            return regeneratorRuntime.wrap(function _callee131$(_context142) {
              while (1) {
                switch (_context142.prev = _context142.next) {
                  case 0:
                    _context142.prev = 0;
                    _this60.actives++;
                    _context142.next = 4;
                    return operation();

                  case 4:
                    _this60.actives--;
                    _this60.completed++;

                    _this60.parallelExecute();

                    _context142.next = 12;
                    break;

                  case 9:
                    _context142.prev = 9;
                    _context142.t0 = _context142["catch"](0);

                    _this60.emitter.emit("error", _context142.t0);

                  case 12:
                  case "end":
                    return _context142.stop();
                }
              }
            }, _callee131, null, [[0, 9]]);
          })));
        }
        /**
         * Start execute operations in the queue.
         *
         */

      }, {
        key: "do",
        value: function () {
          var _do2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee132() {
            var _this61 = this;

            return regeneratorRuntime.wrap(function _callee132$(_context143) {
              while (1) {
                switch (_context143.prev = _context143.next) {
                  case 0:
                    if (!(this.operations.length === 0)) {
                      _context143.next = 2;
                      break;
                    }

                    return _context143.abrupt("return", Promise.resolve());

                  case 2:
                    this.parallelExecute();
                    return _context143.abrupt("return", new Promise(function (resolve, reject) {
                      _this61.emitter.on("finish", resolve);

                      _this61.emitter.on("error", function (error) {
                        _this61.state = BatchStates.Error;
                        reject(error);
                      });
                    }));

                  case 4:
                  case "end":
                    return _context143.stop();
                }
              }
            }, _callee132, this);
          }));

          function _do() {
            return _do2.apply(this, arguments);
          }

          return _do;
        }()
        /**
         * Get next operation to be executed. Return null when reaching ends.
         *
         */

      }, {
        key: "nextOperation",
        value: function nextOperation() {
          if (this.offset < this.operations.length) {
            return this.operations[this.offset++];
          }

          return null;
        }
        /**
         * Start execute operations. One one the most important difference between
         * this method with do() is that do() wraps as an sync method.
         *
         */

      }, {
        key: "parallelExecute",
        value: function parallelExecute() {
          if (this.state === BatchStates.Error) {
            return;
          }

          if (this.completed >= this.operations.length) {
            this.emitter.emit("finish");
            return;
          }

          while (this.actives < this.concurrency) {
            var operation = this.nextOperation();

            if (operation) {
              operation();
            } else {
              return;
            }
          }
        }
      }]);

      return Batch;
    }(); //# sourceMappingURL=Batch.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/Mutex.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsMutexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Mutex", function () {
      return Mutex;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var MutexLockStatus;

    (function (MutexLockStatus) {
      MutexLockStatus[MutexLockStatus["LOCKED"] = 0] = "LOCKED";
      MutexLockStatus[MutexLockStatus["UNLOCKED"] = 1] = "UNLOCKED";
    })(MutexLockStatus || (MutexLockStatus = {}));
    /**
     * An async mutex lock.
     */


    var Mutex = /*#__PURE__*/function () {
      function Mutex() {
        _classCallCheck(this, Mutex);
      }

      _createClass(Mutex, null, [{
        key: "lock",
        value:
        /**
         * Lock for a specific key. If the lock has been acquired by another customer, then
         * will wait until getting the lock.
         *
         * @param key - lock key
         */
        function () {
          var _lock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee133(key) {
            var _this62 = this;

            return regeneratorRuntime.wrap(function _callee133$(_context144) {
              while (1) {
                switch (_context144.prev = _context144.next) {
                  case 0:
                    return _context144.abrupt("return", new Promise(function (resolve) {
                      if (_this62.keys[key] === undefined || _this62.keys[key] === MutexLockStatus.UNLOCKED) {
                        _this62.keys[key] = MutexLockStatus.LOCKED;
                        resolve();
                      } else {
                        _this62.onUnlockEvent(key, function () {
                          _this62.keys[key] = MutexLockStatus.LOCKED;
                          resolve();
                        });
                      }
                    }));

                  case 1:
                  case "end":
                    return _context144.stop();
                }
              }
            }, _callee133);
          }));

          function lock(_x157) {
            return _lock.apply(this, arguments);
          }

          return lock;
        }()
        /**
         * Unlock a key.
         *
         * @param key -
         */

      }, {
        key: "unlock",
        value: function () {
          var _unlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee134(key) {
            var _this63 = this;

            return regeneratorRuntime.wrap(function _callee134$(_context145) {
              while (1) {
                switch (_context145.prev = _context145.next) {
                  case 0:
                    return _context145.abrupt("return", new Promise(function (resolve) {
                      if (_this63.keys[key] === MutexLockStatus.LOCKED) {
                        _this63.emitUnlockEvent(key);
                      }

                      delete _this63.keys[key];
                      resolve();
                    }));

                  case 1:
                  case "end":
                    return _context145.stop();
                }
              }
            }, _callee134);
          }));

          function unlock(_x158) {
            return _unlock.apply(this, arguments);
          }

          return unlock;
        }()
      }, {
        key: "onUnlockEvent",
        value: function onUnlockEvent(key, handler) {
          if (this.listeners[key] === undefined) {
            this.listeners[key] = [handler];
          } else {
            this.listeners[key].push(handler);
          }
        }
      }, {
        key: "emitUnlockEvent",
        value: function emitUnlockEvent(key) {
          var _this64 = this;

          if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {
            var handler = this.listeners[key].shift();
            setImmediate(function () {
              handler.call(_this64);
            });
          }
        }
      }]);

      return Mutex;
    }();

    Mutex.keys = {};
    Mutex.listeners = {}; //# sourceMappingURL=Mutex.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/cache.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsCacheJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getCachedDefaultHttpClient", function () {
      return getCachedDefaultHttpClient;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var _defaultHttpClient = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["DefaultHttpClient"]();

    function getCachedDefaultHttpClient() {
      return _defaultHttpClient;
    } //# sourceMappingURL=cache.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsConstantsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SDK_VERSION", function () {
      return SDK_VERSION;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SERVICE_VERSION", function () {
      return SERVICE_VERSION;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES", function () {
      return BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES", function () {
      return BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BLOCK_BLOB_MAX_BLOCKS", function () {
      return BLOCK_BLOB_MAX_BLOCKS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_BLOCK_BUFFER_SIZE_BYTES", function () {
      return DEFAULT_BLOCK_BUFFER_SIZE_BYTES;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES", function () {
      return DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS", function () {
      return DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageOAuthScopes", function () {
      return StorageOAuthScopes;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "URLConstants", function () {
      return URLConstants;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HTTPURLConnection", function () {
      return HTTPURLConnection;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HeaderConstants", function () {
      return HeaderConstants;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ETagNone", function () {
      return ETagNone;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ETagAny", function () {
      return ETagAny;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SIZE_1_MB", function () {
      return SIZE_1_MB;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BATCH_MAX_REQUEST", function () {
      return BATCH_MAX_REQUEST;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BATCH_MAX_PAYLOAD_IN_BYTES", function () {
      return BATCH_MAX_PAYLOAD_IN_BYTES;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HTTP_LINE_ENDING", function () {
      return HTTP_LINE_ENDING;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "HTTP_VERSION_1_1", function () {
      return HTTP_VERSION_1_1;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EncryptionAlgorithmAES25", function () {
      return EncryptionAlgorithmAES25;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DevelopmentConnectionString", function () {
      return DevelopmentConnectionString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageBlobLoggingAllowedHeaderNames", function () {
      return StorageBlobLoggingAllowedHeaderNames;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StorageBlobLoggingAllowedQueryParameters", function () {
      return StorageBlobLoggingAllowedQueryParameters;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.


    var SDK_VERSION = "12.8.0";
    var SERVICE_VERSION = "2020-10-02";
    var BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES = 256 * 1024 * 1024; // 256MB

    var BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES = 4000 * 1024 * 1024; // 4000MB

    var BLOCK_BLOB_MAX_BLOCKS = 50000;
    var DEFAULT_BLOCK_BUFFER_SIZE_BYTES = 8 * 1024 * 1024; // 8MB

    var DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES = 4 * 1024 * 1024; // 4MB

    var DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS = 5;
    /**
     * The OAuth scope to use with Azure Storage.
     */

    var StorageOAuthScopes = "https://storage.azure.com/.default";
    var URLConstants = {
      Parameters: {
        FORCE_BROWSER_NO_CACHE: "_",
        SIGNATURE: "sig",
        SNAPSHOT: "snapshot",
        VERSIONID: "versionid",
        TIMEOUT: "timeout"
      }
    };
    var HTTPURLConnection = {
      HTTP_ACCEPTED: 202,
      HTTP_CONFLICT: 409,
      HTTP_NOT_FOUND: 404,
      HTTP_PRECON_FAILED: 412,
      HTTP_RANGE_NOT_SATISFIABLE: 416
    };
    var HeaderConstants = {
      AUTHORIZATION: "Authorization",
      AUTHORIZATION_SCHEME: "Bearer",
      CONTENT_ENCODING: "Content-Encoding",
      CONTENT_ID: "Content-ID",
      CONTENT_LANGUAGE: "Content-Language",
      CONTENT_LENGTH: "Content-Length",
      CONTENT_MD5: "Content-Md5",
      CONTENT_TRANSFER_ENCODING: "Content-Transfer-Encoding",
      CONTENT_TYPE: "Content-Type",
      COOKIE: "Cookie",
      DATE: "date",
      IF_MATCH: "if-match",
      IF_MODIFIED_SINCE: "if-modified-since",
      IF_NONE_MATCH: "if-none-match",
      IF_UNMODIFIED_SINCE: "if-unmodified-since",
      PREFIX_FOR_STORAGE: "x-ms-",
      RANGE: "Range",
      USER_AGENT: "User-Agent",
      X_MS_CLIENT_REQUEST_ID: "x-ms-client-request-id",
      X_MS_COPY_SOURCE: "x-ms-copy-source",
      X_MS_DATE: "x-ms-date",
      X_MS_ERROR_CODE: "x-ms-error-code",
      X_MS_VERSION: "x-ms-version"
    };
    var ETagNone = "";
    var ETagAny = "*";
    var SIZE_1_MB = 1 * 1024 * 1024;
    var BATCH_MAX_REQUEST = 256;
    var BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;
    var HTTP_LINE_ENDING = "\r\n";
    var HTTP_VERSION_1_1 = "HTTP/1.1";
    var EncryptionAlgorithmAES25 = "AES256";
    var DevelopmentConnectionString = "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;";
    var StorageBlobLoggingAllowedHeaderNames = ["Access-Control-Allow-Origin", "Cache-Control", "Content-Length", "Content-Type", "Date", "Request-Id", "traceparent", "Transfer-Encoding", "User-Agent", "x-ms-client-request-id", "x-ms-date", "x-ms-error-code", "x-ms-request-id", "x-ms-return-client-request-id", "x-ms-version", "Accept-Ranges", "Content-Disposition", "Content-Encoding", "Content-Language", "Content-MD5", "Content-Range", "ETag", "Last-Modified", "Server", "Vary", "x-ms-content-crc64", "x-ms-copy-action", "x-ms-copy-completion-time", "x-ms-copy-id", "x-ms-copy-progress", "x-ms-copy-status", "x-ms-has-immutability-policy", "x-ms-has-legal-hold", "x-ms-lease-state", "x-ms-lease-status", "x-ms-range", "x-ms-request-server-encrypted", "x-ms-server-encrypted", "x-ms-snapshot", "x-ms-source-range", "If-Match", "If-Modified-Since", "If-None-Match", "If-Unmodified-Since", "x-ms-access-tier", "x-ms-access-tier-change-time", "x-ms-access-tier-inferred", "x-ms-account-kind", "x-ms-archive-status", "x-ms-blob-append-offset", "x-ms-blob-cache-control", "x-ms-blob-committed-block-count", "x-ms-blob-condition-appendpos", "x-ms-blob-condition-maxsize", "x-ms-blob-content-disposition", "x-ms-blob-content-encoding", "x-ms-blob-content-language", "x-ms-blob-content-length", "x-ms-blob-content-md5", "x-ms-blob-content-type", "x-ms-blob-public-access", "x-ms-blob-sequence-number", "x-ms-blob-type", "x-ms-copy-destination-snapshot", "x-ms-creation-time", "x-ms-default-encryption-scope", "x-ms-delete-snapshots", "x-ms-delete-type-permanent", "x-ms-deny-encryption-scope-override", "x-ms-encryption-algorithm", "x-ms-if-sequence-number-eq", "x-ms-if-sequence-number-le", "x-ms-if-sequence-number-lt", "x-ms-incremental-copy", "x-ms-lease-action", "x-ms-lease-break-period", "x-ms-lease-duration", "x-ms-lease-id", "x-ms-lease-time", "x-ms-page-write", "x-ms-proposed-lease-id", "x-ms-range-get-content-md5", "x-ms-rehydrate-priority", "x-ms-sequence-number-action", "x-ms-sku-name", "x-ms-source-content-md5", "x-ms-source-if-match", "x-ms-source-if-modified-since", "x-ms-source-if-none-match", "x-ms-source-if-unmodified-since", "x-ms-tag-count", "x-ms-encryption-key-sha256", "x-ms-if-tags", "x-ms-source-if-tags"];
    var StorageBlobLoggingAllowedQueryParameters = ["comp", "maxresults", "rscc", "rscd", "rsce", "rscl", "rsct", "se", "si", "sip", "sp", "spr", "sr", "srt", "ss", "st", "sv", "include", "marker", "prefix", "copyid", "restype", "blockid", "blocklisttype", "delimiter", "prevsnapshot", "ske", "skoid", "sks", "skt", "sktid", "skv", "snapshot"]; //# sourceMappingURL=constants.js.map

    /***/
  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/tracing.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsTracingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createSpan", function () {
      return createSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "convertTracingToRequestOptionsBase", function () {
      return convertTracingToRequestOptionsBase;
    });
    /* harmony import */


    var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-tracing */
    "./node_modules/@azure/core-tracing/dist-esm/src/index.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Creates a span using the global tracer.
     * @internal
     */


    var createSpan = Object(_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__["createSpanFunction"])({
      packagePrefix: "Azure.Storage.Blob",
      namespace: "Microsoft.Storage"
    });
    /**
     * @internal
     *
     * Adapt the tracing options from OperationOptions to what they need to be for
     * RequestOptionsBase (when we update to later OpenTelemetry versions this is now
     * two separate fields, not just one).
     */

    function convertTracingToRequestOptionsBase(options) {
      var _a, _b;

      return {
        // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.
        spanOptions: (_a = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions,
        tracingContext: (_b = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _b === void 0 ? void 0 : _b.tracingContext
      };
    } //# sourceMappingURL=tracing.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.browser.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsUtilsBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobToArrayBuffer", function () {
      return blobToArrayBuffer;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "blobToString", function () {
      return blobToString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "streamToBuffer", function () {
      return streamToBuffer;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "streamToBuffer2", function () {
      return streamToBuffer2;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "readStreamToLocalFile", function () {
      return readStreamToLocalFile;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "fsStat", function () {
      return fsStat;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "fsCreateReadStream", function () {
      return fsCreateReadStream;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Convert a Browser Blob object into ArrayBuffer.
     *
     * @param blob -
     */


    function blobToArrayBuffer(_x159) {
      return _blobToArrayBuffer.apply(this, arguments);
    }
    /**
     * Convert a Browser Blob object into string.
     *
     * @param blob -
     */


    function _blobToArrayBuffer() {
      _blobToArrayBuffer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee135(blob) {
        var fileReader;
        return regeneratorRuntime.wrap(function _callee135$(_context146) {
          while (1) {
            switch (_context146.prev = _context146.next) {
              case 0:
                fileReader = new FileReader();
                return _context146.abrupt("return", new Promise(function (resolve, reject) {
                  fileReader.onloadend = function (ev) {
                    resolve(ev.target.result);
                  };

                  fileReader.onerror = reject;
                  fileReader.readAsArrayBuffer(blob);
                }));

              case 2:
              case "end":
                return _context146.stop();
            }
          }
        }, _callee135);
      }));
      return _blobToArrayBuffer.apply(this, arguments);
    }

    function blobToString(_x160) {
      return _blobToString.apply(this, arguments);
    }

    function _blobToString() {
      _blobToString = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee136(blob) {
        var fileReader;
        return regeneratorRuntime.wrap(function _callee136$(_context147) {
          while (1) {
            switch (_context147.prev = _context147.next) {
              case 0:
                fileReader = new FileReader();
                return _context147.abrupt("return", new Promise(function (resolve, reject) {
                  fileReader.onloadend = function (ev) {
                    resolve(ev.target.result);
                  };

                  fileReader.onerror = reject;
                  fileReader.readAsText(blob);
                }));

              case 2:
              case "end":
                return _context147.stop();
            }
          }
        }, _callee136);
      }));
      return _blobToString.apply(this, arguments);
    }

    function streamToBuffer() {
      /* empty */
    }

    function streamToBuffer2() {
      /* empty */
    }

    function readStreamToLocalFile() {
      /* empty */
    }

    var fsStat = function stat() {
      /* empty */
    };

    var fsCreateReadStream = function createReadStream() {
      /* empty */
    }; //# sourceMappingURL=utils.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/utils.common.js": function node_modulesAzureStorageBlobDistEsmStorageBlobSrcUtilsUtilsCommonJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "escapeURLPath", function () {
      return escapeURLPath;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getValueInConnString", function () {
      return getValueInConnString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "extractConnectionStringParts", function () {
      return extractConnectionStringParts;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "appendToURLPath", function () {
      return appendToURLPath;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setURLParameter", function () {
      return setURLParameter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getURLParameter", function () {
      return getURLParameter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setURLHost", function () {
      return setURLHost;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getURLPath", function () {
      return getURLPath;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getURLScheme", function () {
      return getURLScheme;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getURLPathAndQuery", function () {
      return getURLPathAndQuery;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getURLQueries", function () {
      return getURLQueries;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "appendToURLQuery", function () {
      return appendToURLQuery;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "truncatedISO8061Date", function () {
      return truncatedISO8061Date;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "base64encode", function () {
      return base64encode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "base64decode", function () {
      return base64decode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateBlockID", function () {
      return generateBlockID;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "delay", function () {
      return delay;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "padStart", function () {
      return padStart;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sanitizeURL", function () {
      return sanitizeURL;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "sanitizeHeaders", function () {
      return sanitizeHeaders;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "iEqual", function () {
      return iEqual;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getAccountNameFromUrl", function () {
      return getAccountNameFromUrl;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isIpEndpointStyle", function () {
      return isIpEndpointStyle;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "toBlobTagsString", function () {
      return toBlobTagsString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "toBlobTags", function () {
      return toBlobTags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "toTags", function () {
      return toTags;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "toQuerySerialization", function () {
      return toQuerySerialization;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "parseObjectReplicationRecord", function () {
      return parseObjectReplicationRecord;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "attachCredential", function () {
      return attachCredential;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "httpAuthorizationToString", function () {
      return httpAuthorizationToString;
    });
    /* harmony import */


    var _azure_core_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @azure/core-http */
    "./node_modules/@azure/core-http/dist-esm/src/coreHttp.js");
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./constants */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/utils/constants.js"); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.

    /**
     * Reserved URL characters must be properly escaped for Storage services like Blob or File.
     *
     * ## URL encode and escape strategy for JS SDKs
     *
     * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.
     * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL
     * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.
     *
     * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.
     *
     * This is what legacy V2 SDK does, simple and works for most of the cases.
     * - When customer URL string is "http://account.blob.core.windows.net/con/b:",
     *   SDK will encode it to "http://account.blob.core.windows.net/con/b%3A" and send to server. A blob named "b:" will be created.
     * - When customer URL string is "http://account.blob.core.windows.net/con/b%3A",
     *   SDK will encode it to "http://account.blob.core.windows.net/con/b%253A" and send to server. A blob named "b%3A" will be created.
     *
     * But this strategy will make it not possible to create a blob with "?" in it's name. Because when customer URL string is
     * "http://account.blob.core.windows.net/con/blob?name", the "?name" will be treated as URL paramter instead of blob name.
     * If customer URL string is "http://account.blob.core.windows.net/con/blob%3Fname", a blob named "blob%3Fname" will be created.
     * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.
     * We cannot accept a SDK cannot create a blob name with "?". So we implement strategy two:
     *
     * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.
     *
     * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.
     * - When customer URL string is "http://account.blob.core.windows.net/con/b:",
     *   SDK will escape ":" like "http://account.blob.core.windows.net/con/b%3A" and send to server. A blob named "b:" will be created.
     * - When customer URL string is "http://account.blob.core.windows.net/con/b%3A",
     *   There is no special characters, so send "http://account.blob.core.windows.net/con/b%3A" to server. A blob named "b:" will be created.
     * - When customer URL string is "http://account.blob.core.windows.net/con/b%253A",
     *   There is no special characters, so send "http://account.blob.core.windows.net/con/b%253A" to server. A blob named "b%3A" will be created.
     *
     * This strategy gives us flexibility to create with any special characters. But "%" will be treated as a special characters, if the URL string
     * is not encoded, there shouldn't a "%" in the URL string, otherwise the URL is not a valid URL.
     * If customer needs to create a blob with "%" in it's blob name, use "%25" instead of "%". Just like above 3rd sample.
     * And following URL strings are invalid:
     * - "http://account.blob.core.windows.net/con/b%"
     * - "http://account.blob.core.windows.net/con/b%2"
     * - "http://account.blob.core.windows.net/con/b%G"
     *
     * Another special character is "?", use "%2F" to represent a blob name with "?" in a URL string.
     *
     * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`
     *
     * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.
     *
     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata
     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata
     *
     * @param url -
     */


    function escapeURLPath(url) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      var path = urlParsed.getPath();
      path = path || "/";
      path = escape(path);
      urlParsed.setPath(path);
      return urlParsed.toString();
    }

    function getProxyUriFromDevConnString(connectionString) {
      // Development Connection String
      // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key
      var proxyUri = "";

      if (connectionString.search("DevelopmentStorageProxyUri=") !== -1) {
        // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri
        var matchCredentials = connectionString.split(";");

        var _iterator35 = _createForOfIteratorHelper(matchCredentials),
            _step35;

        try {
          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
            var element = _step35.value;

            if (element.trim().startsWith("DevelopmentStorageProxyUri=")) {
              proxyUri = element.trim().match("DevelopmentStorageProxyUri=(.*)")[1];
            }
          }
        } catch (err) {
          _iterator35.e(err);
        } finally {
          _iterator35.f();
        }
      }

      return proxyUri;
    }

    function getValueInConnString(connectionString, argument) {
      var elements = connectionString.split(";");

      var _iterator36 = _createForOfIteratorHelper(elements),
          _step36;

      try {
        for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
          var element = _step36.value;

          if (element.trim().startsWith(argument)) {
            return element.trim().match(argument + "=(.*)")[1];
          }
        }
      } catch (err) {
        _iterator36.e(err);
      } finally {
        _iterator36.f();
      }

      return "";
    }
    /**
     * Extracts the parts of an Azure Storage account connection string.
     *
     * @param connectionString - Connection string.
     * @returns String key value pairs of the storage account's url and credentials.
     */


    function extractConnectionStringParts(connectionString) {
      var proxyUri = "";

      if (connectionString.startsWith("UseDevelopmentStorage=true")) {
        // Development connection string
        proxyUri = getProxyUriFromDevConnString(connectionString);
        connectionString = _constants__WEBPACK_IMPORTED_MODULE_1__["DevelopmentConnectionString"];
      } // Matching BlobEndpoint in the Account connection string


      var blobEndpoint = getValueInConnString(connectionString, "BlobEndpoint"); // Slicing off '/' at the end if exists
      // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)

      blobEndpoint = blobEndpoint.endsWith("/") ? blobEndpoint.slice(0, -1) : blobEndpoint;

      if (connectionString.search("DefaultEndpointsProtocol=") !== -1 && connectionString.search("AccountKey=") !== -1) {
        // Account connection string
        var defaultEndpointsProtocol = "";
        var accountName = "";
        var accountKey = Buffer.from("accountKey", "base64");
        var endpointSuffix = ""; // Get account name and key

        accountName = getValueInConnString(connectionString, "AccountName");
        accountKey = Buffer.from(getValueInConnString(connectionString, "AccountKey"), "base64");

        if (!blobEndpoint) {
          // BlobEndpoint is not present in the Account connection string
          // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`
          defaultEndpointsProtocol = getValueInConnString(connectionString, "DefaultEndpointsProtocol");
          var protocol = defaultEndpointsProtocol.toLowerCase();

          if (protocol !== "https" && protocol !== "http") {
            throw new Error("Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'");
          }

          endpointSuffix = getValueInConnString(connectionString, "EndpointSuffix");

          if (!endpointSuffix) {
            throw new Error("Invalid EndpointSuffix in the provided Connection String");
          }

          blobEndpoint = "".concat(defaultEndpointsProtocol, "://").concat(accountName, ".blob.").concat(endpointSuffix);
        }

        if (!accountName) {
          throw new Error("Invalid AccountName in the provided Connection String");
        } else if (accountKey.length === 0) {
          throw new Error("Invalid AccountKey in the provided Connection String");
        }

        return {
          kind: "AccountConnString",
          url: blobEndpoint,
          accountName: accountName,
          accountKey: accountKey,
          proxyUri: proxyUri
        };
      } else {
        // SAS connection string
        var accountSas = getValueInConnString(connectionString, "SharedAccessSignature");

        var _accountName = getAccountNameFromUrl(blobEndpoint);

        if (!blobEndpoint) {
          throw new Error("Invalid BlobEndpoint in the provided SAS Connection String");
        } else if (!accountSas) {
          throw new Error("Invalid SharedAccessSignature in the provided SAS Connection String");
        }

        return {
          kind: "SASConnString",
          url: blobEndpoint,
          accountName: _accountName,
          accountSas: accountSas
        };
      }
    }
    /**
     * Internal escape method implemented Strategy Two mentioned in escapeURL() description.
     *
     * @param text -
     */


    function escape(text) {
      return encodeURIComponent(text).replace(/%2F/g, "/") // Don't escape for "/"
      .replace(/'/g, "%27") // Escape for "'"
      .replace(/\+/g, "%20").replace(/%25/g, "%"); // Revert encoded "%"
    }
    /**
     * Append a string to URL path. Will remove duplicated "/" in front of the string
     * when URL path ends with a "/".
     *
     * @param url - Source URL string
     * @param name - String to be appended to URL
     * @returns An updated URL string
     */


    function appendToURLPath(url, name) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      var path = urlParsed.getPath();
      path = path ? path.endsWith("/") ? "".concat(path).concat(name) : "".concat(path, "/").concat(name) : name;
      urlParsed.setPath(path);
      return urlParsed.toString();
    }
    /**
     * Set URL parameter name and value. If name exists in URL parameters, old value
     * will be replaced by name key. If not provide value, the parameter will be deleted.
     *
     * @param url - Source URL string
     * @param name - Parameter name
     * @param value - Parameter value
     * @returns An updated URL string
     */


    function setURLParameter(url, name, value) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      urlParsed.setQueryParameter(name, value);
      return urlParsed.toString();
    }
    /**
     * Get URL parameter by name.
     *
     * @param url -
     * @param name -
     */


    function getURLParameter(url, name) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      return urlParsed.getQueryParameterValue(name);
    }
    /**
     * Set URL host.
     *
     * @param url - Source URL string
     * @param host - New host string
     * @returns An updated URL string
     */


    function setURLHost(url, host) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      urlParsed.setHost(host);
      return urlParsed.toString();
    }
    /**
     * Get URL path from an URL string.
     *
     * @param url - Source URL string
     */


    function getURLPath(url) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      return urlParsed.getPath();
    }
    /**
     * Get URL scheme from an URL string.
     *
     * @param url - Source URL string
     */


    function getURLScheme(url) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      return urlParsed.getScheme();
    }
    /**
     * Get URL path and query from an URL string.
     *
     * @param url - Source URL string
     */


    function getURLPathAndQuery(url) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      var pathString = urlParsed.getPath();

      if (!pathString) {
        throw new RangeError("Invalid url without valid path.");
      }

      var queryString = urlParsed.getQuery() || "";
      queryString = queryString.trim();

      if (queryString !== "") {
        queryString = queryString.startsWith("?") ? queryString : "?".concat(queryString); // Ensure query string start with '?'
      }

      return "".concat(pathString).concat(queryString);
    }
    /**
     * Get URL query key value pairs from an URL string.
     *
     * @param url -
     */


    function getURLQueries(url) {
      var queryString = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url).getQuery();

      if (!queryString) {
        return {};
      }

      queryString = queryString.trim();
      queryString = queryString.startsWith("?") ? queryString.substr(1) : queryString;
      var querySubStrings = queryString.split("&");
      querySubStrings = querySubStrings.filter(function (value) {
        var indexOfEqual = value.indexOf("=");
        var lastIndexOfEqual = value.lastIndexOf("=");
        return indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1;
      });
      var queries = {};

      var _iterator37 = _createForOfIteratorHelper(querySubStrings),
          _step37;

      try {
        for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
          var querySubString = _step37.value;
          var splitResults = querySubString.split("=");
          var key = splitResults[0];
          var value = splitResults[1];
          queries[key] = value;
        }
      } catch (err) {
        _iterator37.e(err);
      } finally {
        _iterator37.f();
      }

      return queries;
    }
    /**
     * Append a string to URL query.
     *
     * @param url - Source URL string.
     * @param queryParts - String to be appended to the URL query.
     * @returns An updated URL string.
     */


    function appendToURLQuery(url, queryParts) {
      var urlParsed = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      var query = urlParsed.getQuery();

      if (query) {
        query += "&" + queryParts;
      } else {
        query = queryParts;
      }

      urlParsed.setQuery(query);
      return urlParsed.toString();
    }
    /**
     * Rounds a date off to seconds.
     *
     * @param date -
     * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;
     *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.
     * @returns Date string in ISO8061 format, with or without 7 milliseconds component
     */


    function truncatedISO8061Date(date) {
      var withMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      // Date.toISOString() will return like "2018-10-29T06:34:36.139Z"
      var dateString = date.toISOString();
      return withMilliseconds ? dateString.substring(0, dateString.length - 1) + "0000" + "Z" : dateString.substring(0, dateString.length - 5) + "Z";
    }
    /**
     * Base64 encode.
     *
     * @param content -
     */


    function base64encode(content) {
      return !_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] ? btoa(content) : Buffer.from(content).toString("base64");
    }
    /**
     * Base64 decode.
     *
     * @param encodedString -
     */


    function base64decode(encodedString) {
      return !_azure_core_http__WEBPACK_IMPORTED_MODULE_0__["isNode"] ? atob(encodedString) : Buffer.from(encodedString, "base64").toString();
    }
    /**
     * Generate a 64 bytes base64 block ID string.
     *
     * @param blockIndex -
     */


    function generateBlockID(blockIDPrefix, blockIndex) {
      // To generate a 64 bytes base64 string, source string should be 48
      var maxSourceStringLength = 48; // A blob can have a maximum of 100,000 uncommitted blocks at any given time

      var maxBlockIndexLength = 6;
      var maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;

      if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {
        blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);
      }

      var res = blockIDPrefix + padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, "0");
      return base64encode(res);
    }
    /**
     * Delay specified time interval.
     *
     * @param timeInMs -
     * @param aborter -
     * @param abortError -
     */


    function delay(_x161, _x162, _x163) {
      return _delay2.apply(this, arguments);
    }
    /**
     * String.prototype.padStart()
     *
     * @param currentString -
     * @param targetLength -
     * @param padString -
     */


    function _delay2() {
      _delay2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee137(timeInMs, aborter, abortError) {
        return regeneratorRuntime.wrap(function _callee137$(_context148) {
          while (1) {
            switch (_context148.prev = _context148.next) {
              case 0:
                return _context148.abrupt("return", new Promise(function (resolve, reject) {
                  /* eslint-disable-next-line prefer-const */
                  var timeout;

                  var abortHandler = function abortHandler() {
                    if (timeout !== undefined) {
                      clearTimeout(timeout);
                    }

                    reject(abortError);
                  };

                  var resolveHandler = function resolveHandler() {
                    if (aborter !== undefined) {
                      aborter.removeEventListener("abort", abortHandler);
                    }

                    resolve();
                  };

                  timeout = setTimeout(resolveHandler, timeInMs);

                  if (aborter !== undefined) {
                    aborter.addEventListener("abort", abortHandler);
                  }
                }));

              case 1:
              case "end":
                return _context148.stop();
            }
          }
        }, _callee137);
      }));
      return _delay2.apply(this, arguments);
    }

    function padStart(currentString, targetLength) {
      var padString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : " ";

      // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes
      if (String.prototype.padStart) {
        return currentString.padStart(targetLength, padString);
      }

      padString = padString || " ";

      if (currentString.length > targetLength) {
        return currentString;
      } else {
        targetLength = targetLength - currentString.length;

        if (targetLength > padString.length) {
          padString += padString.repeat(targetLength / padString.length);
        }

        return padString.slice(0, targetLength) + currentString;
      }
    }

    function sanitizeURL(url) {
      var safeURL = url;

      if (getURLParameter(safeURL, _constants__WEBPACK_IMPORTED_MODULE_1__["URLConstants"].Parameters.SIGNATURE)) {
        safeURL = setURLParameter(safeURL, _constants__WEBPACK_IMPORTED_MODULE_1__["URLConstants"].Parameters.SIGNATURE, "*****");
      }

      return safeURL;
    }

    function sanitizeHeaders(originalHeader) {
      var headers = new _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]();

      var _iterator38 = _createForOfIteratorHelper(originalHeader.headersArray()),
          _step38;

      try {
        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
          var header = _step38.value;

          if (header.name.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].AUTHORIZATION.toLowerCase()) {
            headers.set(header.name, "*****");
          } else if (header.name.toLowerCase() === _constants__WEBPACK_IMPORTED_MODULE_1__["HeaderConstants"].X_MS_COPY_SOURCE) {
            headers.set(header.name, sanitizeURL(header.value));
          } else {
            headers.set(header.name, header.value);
          }
        }
      } catch (err) {
        _iterator38.e(err);
      } finally {
        _iterator38.f();
      }

      return headers;
    }
    /**
     * If two strings are equal when compared case insensitive.
     *
     * @param str1 -
     * @param str2 -
     */


    function iEqual(str1, str2) {
      return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();
    }
    /**
     * Extracts account name from the url
     * @param url - url to extract the account name from
     * @returns with the account name
     */


    function getAccountNameFromUrl(url) {
      var parsedUrl = _azure_core_http__WEBPACK_IMPORTED_MODULE_0__["URLBuilder"].parse(url);

      var accountName;

      try {
        if (parsedUrl.getHost().split(".")[1] === "blob") {
          // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;
          accountName = parsedUrl.getHost().split(".")[0];
        } else if (isIpEndpointStyle(parsedUrl)) {
          // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/
          // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/
          // .getPath() -> /devstoreaccount1/
          accountName = parsedUrl.getPath().split("/")[1];
        } else {
          // Custom domain case: "https://customdomain.com/containername/blob".
          accountName = "";
        }

        return accountName;
      } catch (error) {
        throw new Error("Unable to extract accountName with provided information.");
      }
    }

    function isIpEndpointStyle(parsedUrl) {
      if (parsedUrl.getHost() === undefined) {
        return false;
      }

      var host = parsedUrl.getHost() + (parsedUrl.getPort() === undefined ? "" : ":" + parsedUrl.getPort()); // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.
      // Case 2: localhost(:port), use broad regex to match port part.
      // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.
      // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.

      return /^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])){3}(:[0-9]+)?$/.test(host);
    }
    /**
     * Convert Tags to encoded string.
     *
     * @param tags -
     */


    function toBlobTagsString(tags) {
      if (tags === undefined) {
        return undefined;
      }

      var tagPairs = [];

      for (var key in tags) {
        if (Object.prototype.hasOwnProperty.call(tags, key)) {
          var value = tags[key];
          tagPairs.push("".concat(encodeURIComponent(key), "=").concat(encodeURIComponent(value)));
        }
      }

      return tagPairs.join("&");
    }
    /**
     * Convert Tags type to BlobTags.
     *
     * @param tags -
     */


    function toBlobTags(tags) {
      if (tags === undefined) {
        return undefined;
      }

      var res = {
        blobTagSet: []
      };

      for (var key in tags) {
        if (Object.prototype.hasOwnProperty.call(tags, key)) {
          var value = tags[key];
          res.blobTagSet.push({
            key: key,
            value: value
          });
        }
      }

      return res;
    }
    /**
     * Covert BlobTags to Tags type.
     *
     * @param tags -
     */


    function toTags(tags) {
      if (tags === undefined) {
        return undefined;
      }

      var res = {};

      var _iterator39 = _createForOfIteratorHelper(tags.blobTagSet),
          _step39;

      try {
        for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
          var blobTag = _step39.value;
          res[blobTag.key] = blobTag.value;
        }
      } catch (err) {
        _iterator39.e(err);
      } finally {
        _iterator39.f();
      }

      return res;
    }
    /**
     * Convert BlobQueryTextConfiguration to QuerySerialization type.
     *
     * @param textConfiguration -
     */


    function toQuerySerialization(textConfiguration) {
      if (textConfiguration === undefined) {
        return undefined;
      }

      switch (textConfiguration.kind) {
        case "csv":
          return {
            format: {
              type: "delimited",
              delimitedTextConfiguration: {
                columnSeparator: textConfiguration.columnSeparator || ",",
                fieldQuote: textConfiguration.fieldQuote || "",
                recordSeparator: textConfiguration.recordSeparator,
                escapeChar: textConfiguration.escapeCharacter || "",
                headersPresent: textConfiguration.hasHeaders || false
              }
            }
          };

        case "json":
          return {
            format: {
              type: "json",
              jsonTextConfiguration: {
                recordSeparator: textConfiguration.recordSeparator
              }
            }
          };

        case "arrow":
          return {
            format: {
              type: "arrow",
              arrowConfiguration: {
                schema: textConfiguration.schema
              }
            }
          };

        case "parquet":
          return {
            format: {
              type: "parquet"
            }
          };

        default:
          throw Error("Invalid BlobQueryTextConfiguration.");
      }
    }

    function parseObjectReplicationRecord(objectReplicationRecord) {
      if (!objectReplicationRecord) {
        return undefined;
      }

      if ("policy-id" in objectReplicationRecord) {
        // If the dictionary contains a key with policy id, we are not required to do any parsing since
        // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.
        return undefined;
      }

      var orProperties = [];

      var _loop4 = function _loop4(key) {
        var ids = key.split("_");
        var policyPrefix = "or-";

        if (ids[0].startsWith(policyPrefix)) {
          ids[0] = ids[0].substring(policyPrefix.length);
        }

        var rule = {
          ruleId: ids[1],
          replicationStatus: objectReplicationRecord[key]
        };
        var policyIndex = orProperties.findIndex(function (policy) {
          return policy.policyId === ids[0];
        });

        if (policyIndex > -1) {
          orProperties[policyIndex].rules.push(rule);
        } else {
          orProperties.push({
            policyId: ids[0],
            rules: [rule]
          });
        }
      };

      for (var key in objectReplicationRecord) {
        _loop4(key);
      }

      return orProperties;
    }
    /**
     * Attach a TokenCredential to an object.
     *
     * @param thing -
     * @param credential -
     */


    function attachCredential(thing, credential) {
      thing.credential = credential;
      return thing;
    }

    function httpAuthorizationToString(httpAuthorization) {
      return httpAuthorization ? httpAuthorization.scheme + " " + httpAuthorization.value : undefined;
    } //# sourceMappingURL=utils.common.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-common/src/BufferScheduler.browser.js": function node_modulesAzureStorageBlobDistEsmStorageCommonSrcBufferSchedulerBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BufferScheduler", function () {
      return BufferScheduler;
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    // This file is used as a shim of "BufferScheduler" for some browser bundlers
    // when trying to bundle "BufferScheduler"
    // "BufferScheduler" class is only available in Node.js runtime


    var BufferScheduler = function BufferScheduler() {
      _classCallCheck(this, BufferScheduler);
    }; //# sourceMappingURL=BufferScheduler.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/dist-esm/storage-common/src/index.browser.js": function node_modulesAzureStorageBlobDistEsmStorageCommonSrcIndexBrowserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _BufferScheduler_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./BufferScheduler.browser */
    "./node_modules/@azure/storage-blob/dist-esm/storage-common/src/BufferScheduler.browser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BufferScheduler", function () {
      return _BufferScheduler_browser__WEBPACK_IMPORTED_MODULE_0__["BufferScheduler"];
    }); // Copyright (c) Microsoft Corporation.
    // Licensed under the MIT license.
    //# sourceMappingURL=index.browser.js.map

    /***/

  },

  /***/
  "./node_modules/@azure/storage-blob/node_modules/tslib/tslib.es6.js": function node_modulesAzureStorageBlobNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign5;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArray", function () {
      return __spreadArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics5 = function extendStatics(d, b) {
      _extendStatics5 = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        }
      };

      return _extendStatics5(d, b);
    };

    function __extends(d, b) {
      if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

      _extendStatics5(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign5 = function __assign() {
      _assign5 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign5.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    var __createBinding = Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, {
        enumerable: true,
        get: function get() {
          return m[k];
        }
      });
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    };

    function __exportStar(m, o) {
      for (var p in m) {
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }
    /** @deprecated */


    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }
    /** @deprecated */


    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    }

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    var __setModuleDefault = Object.create ? function (o, v) {
      Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
      });
    } : function (o, v) {
      o["default"] = v;
    };

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }

      __setModuleDefault(result, mod);

      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }

    function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m") throw new TypeError("Private method is not writable");
      if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
    }
    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/api/context.js": function node_modulesOpentelemetryApiBuildEsmApiContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContextAPI", function () {
      return ContextAPI;
    });
    /* harmony import */


    var _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/NoopContextManager */
    "./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js");
    /* harmony import */


    var _internal_global_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../internal/global-utils */
    "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js");
    /* harmony import */


    var _diag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./diag */
    "./node_modules/@opentelemetry/api/build/esm/api/diag.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var __spreadArray = undefined && undefined.__spreadArray || function (to, from) {
      for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
        to[j] = from[i];
      }

      return to;
    };

    var API_NAME = 'context';
    var NOOP_CONTEXT_MANAGER = new _context_NoopContextManager__WEBPACK_IMPORTED_MODULE_0__["NoopContextManager"]();
    /**
     * Singleton object which represents the entry point to the OpenTelemetry Context API
     */

    var ContextAPI = function () {
      /** Empty private constructor prevents end users from constructing a new instance of the API */
      function ContextAPI() {}
      /** Get the singleton instance of the Context API */


      ContextAPI.getInstance = function () {
        if (!this._instance) {
          this._instance = new ContextAPI();
        }

        return this._instance;
      };
      /**
       * Set the current context manager.
       *
       * @returns true if the context manager was successfully registered, else false
       */


      ContextAPI.prototype.setGlobalContextManager = function (contextManager) {
        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__["registerGlobal"])(API_NAME, contextManager, _diag__WEBPACK_IMPORTED_MODULE_2__["DiagAPI"].instance());
      };
      /**
       * Get the currently active context
       */


      ContextAPI.prototype.active = function () {
        return this._getContextManager().active();
      };
      /**
       * Execute a function with an active context
       *
       * @param context context to be active during function execution
       * @param fn function to execute in a context
       * @param thisArg optional receiver to be used for calling fn
       * @param args optional arguments forwarded to fn
       */


      ContextAPI.prototype["with"] = function (context, fn, thisArg) {
        var _a;

        var args = [];

        for (var _i = 3; _i < arguments.length; _i++) {
          args[_i - 3] = arguments[_i];
        }

        return (_a = this._getContextManager())["with"].apply(_a, __spreadArray([context, fn, thisArg], args));
      };
      /**
       * Bind a context to a target function or event emitter
       *
       * @param context context to bind to the event emitter or function. Defaults to the currently active context
       * @param target function or event emitter to bind
       */


      ContextAPI.prototype.bind = function (context, target) {
        return this._getContextManager().bind(context, target);
      };

      ContextAPI.prototype._getContextManager = function () {
        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__["getGlobal"])(API_NAME) || NOOP_CONTEXT_MANAGER;
      };
      /** Disable and remove the global context manager */


      ContextAPI.prototype.disable = function () {
        this._getContextManager().disable();

        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_1__["unregisterGlobal"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_2__["DiagAPI"].instance());
      };

      return ContextAPI;
    }(); //# sourceMappingURL=context.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/api/diag.js": function node_modulesOpentelemetryApiBuildEsmApiDiagJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagAPI", function () {
      return DiagAPI;
    });
    /* harmony import */


    var _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../diag/ComponentLogger */
    "./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js");
    /* harmony import */


    var _diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../diag/internal/logLevelLogger */
    "./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js");
    /* harmony import */


    var _diag_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../diag/types */
    "./node_modules/@opentelemetry/api/build/esm/diag/types.js");
    /* harmony import */


    var _internal_global_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../internal/global-utils */
    "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var API_NAME = 'diag';
    /**
     * Singleton object which represents the entry point to the OpenTelemetry internal
     * diagnostic API
     */

    var DiagAPI = function () {
      /**
       * Private internal constructor
       * @private
       */
      function DiagAPI() {
        function _logProxy(funcName) {
          return function () {
            var logger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__["getGlobal"])('diag'); // shortcut if logger not set

            if (!logger) return;
            return logger[funcName].apply(logger, // work around Function.prototype.apply types
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            arguments);
          };
        } // Using self local variable for minification purposes as 'this' cannot be minified


        var self = this; // DiagAPI specific functions

        self.setLogger = function (logger, logLevel) {
          var _a, _b;

          if (logLevel === void 0) {
            logLevel = _diag_types__WEBPACK_IMPORTED_MODULE_2__["DiagLogLevel"].INFO;
          }

          if (logger === self) {
            // There isn't much we can do here.
            // Logging to the console might break the user application.
            // Try to log to self. If a logger was previously registered it will receive the log.
            var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');
            self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);
            return false;
          }

          var oldLogger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__["getGlobal"])('diag');
          var newLogger = Object(_diag_internal_logLevelLogger__WEBPACK_IMPORTED_MODULE_1__["createLogLevelDiagLogger"])(logLevel, logger); // There already is an logger registered. We'll let it know before overwriting it.

          if (oldLogger) {
            var stack = (_b = new Error().stack) !== null && _b !== void 0 ? _b : '<failed to generate stacktrace>';
            oldLogger.warn("Current logger will be overwritten from " + stack);
            newLogger.warn("Current logger will overwrite one already registered from " + stack);
          }

          return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__["registerGlobal"])('diag', newLogger, self, true);
        };

        self.disable = function () {
          Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_3__["unregisterGlobal"])(API_NAME, self);
        };

        self.createComponentLogger = function (options) {
          return new _diag_ComponentLogger__WEBPACK_IMPORTED_MODULE_0__["DiagComponentLogger"](options);
        };

        self.verbose = _logProxy('verbose');
        self.debug = _logProxy('debug');
        self.info = _logProxy('info');
        self.warn = _logProxy('warn');
        self.error = _logProxy('error');
      }
      /** Get the singleton instance of the DiagAPI API */


      DiagAPI.instance = function () {
        if (!this._instance) {
          this._instance = new DiagAPI();
        }

        return this._instance;
      };

      return DiagAPI;
    }(); //# sourceMappingURL=diag.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/api/propagation.js": function node_modulesOpentelemetryApiBuildEsmApiPropagationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PropagationAPI", function () {
      return PropagationAPI;
    });
    /* harmony import */


    var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../internal/global-utils */
    "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js");
    /* harmony import */


    var _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../propagation/NoopTextMapPropagator */
    "./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js");
    /* harmony import */


    var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../propagation/TextMapPropagator */
    "./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js");
    /* harmony import */


    var _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../baggage/context-helpers */
    "./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js");
    /* harmony import */


    var _baggage_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../baggage/utils */
    "./node_modules/@opentelemetry/api/build/esm/baggage/utils.js");
    /* harmony import */


    var _diag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./diag */
    "./node_modules/@opentelemetry/api/build/esm/api/diag.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var API_NAME = 'propagation';
    var NOOP_TEXT_MAP_PROPAGATOR = new _propagation_NoopTextMapPropagator__WEBPACK_IMPORTED_MODULE_1__["NoopTextMapPropagator"]();
    /**
     * Singleton object which represents the entry point to the OpenTelemetry Propagation API
     */

    var PropagationAPI = function () {
      /** Empty private constructor prevents end users from constructing a new instance of the API */
      function PropagationAPI() {
        this.createBaggage = _baggage_utils__WEBPACK_IMPORTED_MODULE_4__["createBaggage"];
        this.getBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__["getBaggage"];
        this.setBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__["setBaggage"];
        this.deleteBaggage = _baggage_context_helpers__WEBPACK_IMPORTED_MODULE_3__["deleteBaggage"];
      }
      /** Get the singleton instance of the Propagator API */


      PropagationAPI.getInstance = function () {
        if (!this._instance) {
          this._instance = new PropagationAPI();
        }

        return this._instance;
      };
      /**
       * Set the current propagator.
       *
       * @returns true if the propagator was successfully registered, else false
       */


      PropagationAPI.prototype.setGlobalPropagator = function (propagator) {
        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["registerGlobal"])(API_NAME, propagator, _diag__WEBPACK_IMPORTED_MODULE_5__["DiagAPI"].instance());
      };
      /**
       * Inject context into a carrier to be propagated inter-process
       *
       * @param context Context carrying tracing data to inject
       * @param carrier carrier to inject context into
       * @param setter Function used to set values on the carrier
       */


      PropagationAPI.prototype.inject = function (context, carrier, setter) {
        if (setter === void 0) {
          setter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__["defaultTextMapSetter"];
        }

        return this._getGlobalPropagator().inject(context, carrier, setter);
      };
      /**
       * Extract context from a carrier
       *
       * @param context Context which the newly created context will inherit from
       * @param carrier Carrier to extract context from
       * @param getter Function used to extract keys from a carrier
       */


      PropagationAPI.prototype.extract = function (context, carrier, getter) {
        if (getter === void 0) {
          getter = _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_2__["defaultTextMapGetter"];
        }

        return this._getGlobalPropagator().extract(context, carrier, getter);
      };
      /**
       * Return a list of all fields which may be used by the propagator.
       */


      PropagationAPI.prototype.fields = function () {
        return this._getGlobalPropagator().fields();
      };
      /** Remove the global propagator */


      PropagationAPI.prototype.disable = function () {
        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["unregisterGlobal"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_5__["DiagAPI"].instance());
      };

      PropagationAPI.prototype._getGlobalPropagator = function () {
        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["getGlobal"])(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;
      };

      return PropagationAPI;
    }(); //# sourceMappingURL=propagation.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/api/trace.js": function node_modulesOpentelemetryApiBuildEsmApiTraceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TraceAPI", function () {
      return TraceAPI;
    });
    /* harmony import */


    var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../internal/global-utils */
    "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js");
    /* harmony import */


    var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../trace/ProxyTracerProvider */
    "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js");
    /* harmony import */


    var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../trace/spancontext-utils */
    "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js");
    /* harmony import */


    var _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../trace/context-utils */
    "./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js");
    /* harmony import */


    var _diag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./diag */
    "./node_modules/@opentelemetry/api/build/esm/api/diag.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var API_NAME = 'trace';
    /**
     * Singleton object which represents the entry point to the OpenTelemetry Tracing API
     */

    var TraceAPI = function () {
      /** Empty private constructor prevents end users from constructing a new instance of the API */
      function TraceAPI() {
        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__["ProxyTracerProvider"]();
        this.wrapSpanContext = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__["wrapSpanContext"];
        this.isSpanContextValid = _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_2__["isSpanContextValid"];
        this.deleteSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__["deleteSpan"];
        this.getSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__["getSpan"];
        this.getSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__["getSpanContext"];
        this.setSpan = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__["setSpan"];
        this.setSpanContext = _trace_context_utils__WEBPACK_IMPORTED_MODULE_3__["setSpanContext"];
      }
      /** Get the singleton instance of the Trace API */


      TraceAPI.getInstance = function () {
        if (!this._instance) {
          this._instance = new TraceAPI();
        }

        return this._instance;
      };
      /**
       * Set the current global tracer.
       *
       * @returns true if the tracer provider was successfully registered, else false
       */


      TraceAPI.prototype.setGlobalTracerProvider = function (provider) {
        var success = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["registerGlobal"])(API_NAME, this._proxyTracerProvider, _diag__WEBPACK_IMPORTED_MODULE_4__["DiagAPI"].instance());

        if (success) {
          this._proxyTracerProvider.setDelegate(provider);
        }

        return success;
      };
      /**
       * Returns the global tracer provider.
       */


      TraceAPI.prototype.getTracerProvider = function () {
        return Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["getGlobal"])(API_NAME) || this._proxyTracerProvider;
      };
      /**
       * Returns a tracer from the global tracer provider.
       */


      TraceAPI.prototype.getTracer = function (name, version) {
        return this.getTracerProvider().getTracer(name, version);
      };
      /** Remove the global tracer provider */


      TraceAPI.prototype.disable = function () {
        Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["unregisterGlobal"])(API_NAME, _diag__WEBPACK_IMPORTED_MODULE_4__["DiagAPI"].instance());
        this._proxyTracerProvider = new _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_1__["ProxyTracerProvider"]();
      };

      return TraceAPI;
    }(); //# sourceMappingURL=trace.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js": function node_modulesOpentelemetryApiBuildEsmBaggageContextHelpersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getBaggage", function () {
      return getBaggage;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setBaggage", function () {
      return setBaggage;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deleteBaggage", function () {
      return deleteBaggage;
    });
    /* harmony import */


    var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/context */
    "./node_modules/@opentelemetry/api/build/esm/context/context.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Baggage key
     */


    var BAGGAGE_KEY = Object(_context_context__WEBPACK_IMPORTED_MODULE_0__["createContextKey"])('OpenTelemetry Baggage Key');
    /**
     * Retrieve the current baggage from the given context
     *
     * @param {Context} Context that manage all context values
     * @returns {Baggage} Extracted baggage from the context
     */

    function getBaggage(context) {
      return context.getValue(BAGGAGE_KEY) || undefined;
    }
    /**
     * Store a baggage in the given context
     *
     * @param {Context} Context that manage all context values
     * @param {Baggage} baggage that will be set in the actual context
     */


    function setBaggage(context, baggage) {
      return context.setValue(BAGGAGE_KEY, baggage);
    }
    /**
     * Delete the baggage stored in the given context
     *
     * @param {Context} Context that manage all context values
     */


    function deleteBaggage(context) {
      return context.deleteValue(BAGGAGE_KEY);
    } //# sourceMappingURL=context-helpers.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js": function node_modulesOpentelemetryApiBuildEsmBaggageInternalBaggageImplJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BaggageImpl", function () {
      return BaggageImpl;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var BaggageImpl = function () {
      function BaggageImpl(entries) {
        this._entries = entries ? new Map(entries) : new Map();
      }

      BaggageImpl.prototype.getEntry = function (key) {
        var entry = this._entries.get(key);

        if (!entry) {
          return undefined;
        }

        return Object.assign({}, entry);
      };

      BaggageImpl.prototype.getAllEntries = function () {
        return Array.from(this._entries.entries()).map(function (_a) {
          var k = _a[0],
              v = _a[1];
          return [k, v];
        });
      };

      BaggageImpl.prototype.setEntry = function (key, entry) {
        var newBaggage = new BaggageImpl(this._entries);

        newBaggage._entries.set(key, entry);

        return newBaggage;
      };

      BaggageImpl.prototype.removeEntry = function (key) {
        var newBaggage = new BaggageImpl(this._entries);

        newBaggage._entries["delete"](key);

        return newBaggage;
      };

      BaggageImpl.prototype.removeEntries = function () {
        var keys = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          keys[_i] = arguments[_i];
        }

        var newBaggage = new BaggageImpl(this._entries);

        for (var _a = 0, keys_1 = keys; _a < keys_1.length; _a++) {
          var key = keys_1[_a];

          newBaggage._entries["delete"](key);
        }

        return newBaggage;
      };

      BaggageImpl.prototype.clear = function () {
        return new BaggageImpl();
      };

      return BaggageImpl;
    }(); //# sourceMappingURL=baggage-impl.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js": function node_modulesOpentelemetryApiBuildEsmBaggageInternalSymbolJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "baggageEntryMetadataSymbol", function () {
      return baggageEntryMetadataSymbol;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Symbol used to make BaggageEntryMetadata an opaque type
     */


    var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata'); //# sourceMappingURL=symbol.js.map

    /***/
  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/baggage/types.js": function node_modulesOpentelemetryApiBuildEsmBaggageTypesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=types.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/baggage/utils.js": function node_modulesOpentelemetryApiBuildEsmBaggageUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createBaggage", function () {
      return createBaggage;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "baggageEntryMetadataFromString", function () {
      return baggageEntryMetadataFromString;
    });
    /* harmony import */


    var _api_diag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../api/diag */
    "./node_modules/@opentelemetry/api/build/esm/api/diag.js");
    /* harmony import */


    var _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./internal/baggage-impl */
    "./node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js");
    /* harmony import */


    var _internal_symbol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./internal/symbol */
    "./node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var diag = _api_diag__WEBPACK_IMPORTED_MODULE_0__["DiagAPI"].instance();
    /**
     * Create a new Baggage with optional entries
     *
     * @param entries An array of baggage entries the new baggage should contain
     */


    function createBaggage(entries) {
      if (entries === void 0) {
        entries = {};
      }

      return new _internal_baggage_impl__WEBPACK_IMPORTED_MODULE_1__["BaggageImpl"](new Map(Object.entries(entries)));
    }
    /**
     * Create a serializable BaggageEntryMetadata object from a string.
     *
     * @param str string metadata. Format is currently not defined by the spec and has no special meaning.
     *
     */


    function baggageEntryMetadataFromString(str) {
      if (typeof str !== 'string') {
        diag.error("Cannot create baggage metadata from unknown type: " + typeof str);
        str = '';
      }

      return {
        __TYPE__: _internal_symbol__WEBPACK_IMPORTED_MODULE_2__["baggageEntryMetadataSymbol"],
        toString: function toString() {
          return str;
        }
      };
    } //# sourceMappingURL=utils.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/common/Exception.js": function node_modulesOpentelemetryApiBuildEsmCommonExceptionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=Exception.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/common/Time.js": function node_modulesOpentelemetryApiBuildEsmCommonTimeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__); //# sourceMappingURL=Time.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js": function node_modulesOpentelemetryApiBuildEsmContextNoopContextManagerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NoopContextManager", function () {
      return NoopContextManager;
    });
    /* harmony import */


    var _context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./context */
    "./node_modules/@opentelemetry/api/build/esm/context/context.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var __spreadArray = undefined && undefined.__spreadArray || function (to, from) {
      for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
        to[j] = from[i];
      }

      return to;
    };

    var NoopContextManager = function () {
      function NoopContextManager() {}

      NoopContextManager.prototype.active = function () {
        return _context__WEBPACK_IMPORTED_MODULE_0__["ROOT_CONTEXT"];
      };

      NoopContextManager.prototype["with"] = function (_context, fn, thisArg) {
        var args = [];

        for (var _i = 3; _i < arguments.length; _i++) {
          args[_i - 3] = arguments[_i];
        }

        return fn.call.apply(fn, __spreadArray([thisArg], args));
      };

      NoopContextManager.prototype.bind = function (_context, target) {
        return target;
      };

      NoopContextManager.prototype.enable = function () {
        return this;
      };

      NoopContextManager.prototype.disable = function () {
        return this;
      };

      return NoopContextManager;
    }(); //# sourceMappingURL=NoopContextManager.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/context/context.js": function node_modulesOpentelemetryApiBuildEsmContextContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createContextKey", function () {
      return createContextKey;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ROOT_CONTEXT", function () {
      return ROOT_CONTEXT;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /** Get a key to uniquely identify a context value */


    function createContextKey(description) {
      // The specification states that for the same input, multiple calls should
      // return different keys. Due to the nature of the JS dependency management
      // system, this creates problems where multiple versions of some package
      // could hold different keys for the same property.
      //
      // Therefore, we use Symbol.for which returns the same key for the same input.
      return Symbol["for"](description);
    }

    var BaseContext = function () {
      /**
       * Construct a new context which inherits values from an optional parent context.
       *
       * @param parentContext a context from which to inherit values
       */
      function BaseContext(parentContext) {
        // for minification
        var self = this;
        self._currentContext = parentContext ? new Map(parentContext) : new Map();

        self.getValue = function (key) {
          return self._currentContext.get(key);
        };

        self.setValue = function (key, value) {
          var context = new BaseContext(self._currentContext);

          context._currentContext.set(key, value);

          return context;
        };

        self.deleteValue = function (key) {
          var context = new BaseContext(self._currentContext);

          context._currentContext["delete"](key);

          return context;
        };
      }

      return BaseContext;
    }();
    /** The root context is used as the default parent context when there is no active context */


    var ROOT_CONTEXT = new BaseContext(); //# sourceMappingURL=context.js.map

    /***/
  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/context/types.js": function node_modulesOpentelemetryApiBuildEsmContextTypesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=types.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js": function node_modulesOpentelemetryApiBuildEsmDiagComponentLoggerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagComponentLogger", function () {
      return DiagComponentLogger;
    });
    /* harmony import */


    var _internal_global_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../internal/global-utils */
    "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Component Logger which is meant to be used as part of any component which
     * will add automatically additional namespace in front of the log message.
     * It will then forward all message to global diag logger
     * @example
     * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });
     * cLogger.debug('test');
     * // @opentelemetry/instrumentation-http test
     */


    var DiagComponentLogger = function () {
      function DiagComponentLogger(props) {
        this._namespace = props.namespace || 'DiagComponentLogger';
      }

      DiagComponentLogger.prototype.debug = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return logProxy('debug', this._namespace, args);
      };

      DiagComponentLogger.prototype.error = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return logProxy('error', this._namespace, args);
      };

      DiagComponentLogger.prototype.info = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return logProxy('info', this._namespace, args);
      };

      DiagComponentLogger.prototype.warn = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return logProxy('warn', this._namespace, args);
      };

      DiagComponentLogger.prototype.verbose = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return logProxy('verbose', this._namespace, args);
      };

      return DiagComponentLogger;
    }();

    function logProxy(funcName, namespace, args) {
      var logger = Object(_internal_global_utils__WEBPACK_IMPORTED_MODULE_0__["getGlobal"])('diag'); // shortcut if logger not set

      if (!logger) {
        return;
      }

      args.unshift(namespace);
      return logger[funcName].apply(logger, args);
    } //# sourceMappingURL=ComponentLogger.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js": function node_modulesOpentelemetryApiBuildEsmDiagConsoleLoggerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagConsoleLogger", function () {
      return DiagConsoleLogger;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var consoleMap = [{
      n: 'error',
      c: 'error'
    }, {
      n: 'warn',
      c: 'warn'
    }, {
      n: 'info',
      c: 'info'
    }, {
      n: 'debug',
      c: 'debug'
    }, {
      n: 'verbose',
      c: 'trace'
    }];
    /**
     * A simple Immutable Console based diagnostic logger which will output any messages to the Console.
     * If you want to limit the amount of logging to a specific level or lower use the
     * {@link createLogLevelDiagLogger}
     */

    var DiagConsoleLogger = function () {
      function DiagConsoleLogger() {
        function _consoleFunc(funcName) {
          return function () {
            var orgArguments = arguments;

            if (console) {
              // Some environments only expose the console when the F12 developer console is open
              var theFunc = console[funcName];

              if (typeof theFunc !== 'function') {
                // Not all environments support all functions
                theFunc = console.log;
              } // One last final check


              if (typeof theFunc === 'function') {
                return theFunc.apply(console, orgArguments);
              }
            }
          };
        }

        for (var i = 0; i < consoleMap.length; i++) {
          this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);
        }
      }

      return DiagConsoleLogger;
    }(); //# sourceMappingURL=consoleLogger.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/diag/index.js": function node_modulesOpentelemetryApiBuildEsmDiagIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _consoleLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./consoleLogger */
    "./node_modules/@opentelemetry/api/build/esm/diag/consoleLogger.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DiagConsoleLogger", function () {
      return _consoleLogger__WEBPACK_IMPORTED_MODULE_0__["DiagConsoleLogger"];
    });
    /* harmony import */


    var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./types */
    "./node_modules/@opentelemetry/api/build/esm/diag/types.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DiagLogLevel", function () {
      return _types__WEBPACK_IMPORTED_MODULE_1__["DiagLogLevel"];
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js": function node_modulesOpentelemetryApiBuildEsmDiagInternalLogLevelLoggerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createLogLevelDiagLogger", function () {
      return createLogLevelDiagLogger;
    });
    /* harmony import */


    var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../types */
    "./node_modules/@opentelemetry/api/build/esm/diag/types.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    function createLogLevelDiagLogger(maxLevel, logger) {
      if (maxLevel < _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].NONE) {
        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].NONE;
      } else if (maxLevel > _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].ALL) {
        maxLevel = _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].ALL;
      } // In case the logger is null or undefined


      logger = logger || {};

      function _filterFunc(funcName, theLevel) {
        var theFunc = logger[funcName];

        if (typeof theFunc === 'function' && maxLevel >= theLevel) {
          return theFunc.bind(logger);
        }

        return function () {};
      }

      return {
        error: _filterFunc('error', _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].ERROR),
        warn: _filterFunc('warn', _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].WARN),
        info: _filterFunc('info', _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].INFO),
        debug: _filterFunc('debug', _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].DEBUG),
        verbose: _filterFunc('verbose', _types__WEBPACK_IMPORTED_MODULE_0__["DiagLogLevel"].VERBOSE)
      };
    } //# sourceMappingURL=logLevelLogger.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/diag/types.js": function node_modulesOpentelemetryApiBuildEsmDiagTypesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DiagLogLevel", function () {
      return DiagLogLevel;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Defines the available internal logging levels for the diagnostic logger, the numeric values
     * of the levels are defined to match the original values from the initial LogLevel to avoid
     * compatibility/migration issues for any implementation that assume the numeric ordering.
     */


    var DiagLogLevel;

    (function (DiagLogLevel) {
      /** Diagnostic Logging level setting to disable all logging (except and forced logs) */
      DiagLogLevel[DiagLogLevel["NONE"] = 0] = "NONE";
      /** Identifies an error scenario */

      DiagLogLevel[DiagLogLevel["ERROR"] = 30] = "ERROR";
      /** Identifies a warning scenario */

      DiagLogLevel[DiagLogLevel["WARN"] = 50] = "WARN";
      /** General informational log message */

      DiagLogLevel[DiagLogLevel["INFO"] = 60] = "INFO";
      /** General debug log message */

      DiagLogLevel[DiagLogLevel["DEBUG"] = 70] = "DEBUG";
      /**
       * Detailed trace level logging should only be used for development, should only be set
       * in a development environment.
       */

      DiagLogLevel[DiagLogLevel["VERBOSE"] = 80] = "VERBOSE";
      /** Used to set the logging level to include all logging */

      DiagLogLevel[DiagLogLevel["ALL"] = 9999] = "ALL";
    })(DiagLogLevel || (DiagLogLevel = {})); //# sourceMappingURL=types.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/index.js": function node_modulesOpentelemetryApiBuildEsmIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "context", function () {
      return context;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "trace", function () {
      return trace;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "propagation", function () {
      return propagation;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "diag", function () {
      return diag;
    });
    /* harmony import */


    var _baggage_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./baggage/types */
    "./node_modules/@opentelemetry/api/build/esm/baggage/types.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _baggage_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./baggage/utils */
    "./node_modules/@opentelemetry/api/build/esm/baggage/utils.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "baggageEntryMetadataFromString", function () {
      return _baggage_utils__WEBPACK_IMPORTED_MODULE_1__["baggageEntryMetadataFromString"];
    });
    /* harmony import */


    var _common_Exception__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./common/Exception */
    "./node_modules/@opentelemetry/api/build/esm/common/Exception.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _common_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./common/Time */
    "./node_modules/@opentelemetry/api/build/esm/common/Time.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _diag__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./diag */
    "./node_modules/@opentelemetry/api/build/esm/diag/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DiagConsoleLogger", function () {
      return _diag__WEBPACK_IMPORTED_MODULE_4__["DiagConsoleLogger"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DiagLogLevel", function () {
      return _diag__WEBPACK_IMPORTED_MODULE_4__["DiagLogLevel"];
    });
    /* harmony import */


    var _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./propagation/TextMapPropagator */
    "./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "defaultTextMapGetter", function () {
      return _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__["defaultTextMapGetter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "defaultTextMapSetter", function () {
      return _propagation_TextMapPropagator__WEBPACK_IMPORTED_MODULE_5__["defaultTextMapSetter"];
    });
    /* harmony import */


    var _trace_attributes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./trace/attributes */
    "./node_modules/@opentelemetry/api/build/esm/trace/attributes.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./trace/link */
    "./node_modules/@opentelemetry/api/build/esm/trace/link.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./trace/ProxyTracer */
    "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ProxyTracer", function () {
      return _trace_ProxyTracer__WEBPACK_IMPORTED_MODULE_8__["ProxyTracer"];
    });
    /* harmony import */


    var _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./trace/ProxyTracerProvider */
    "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ProxyTracerProvider", function () {
      return _trace_ProxyTracerProvider__WEBPACK_IMPORTED_MODULE_9__["ProxyTracerProvider"];
    });
    /* harmony import */


    var _trace_Sampler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./trace/Sampler */
    "./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./trace/SamplingResult */
    "./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SamplingDecision", function () {
      return _trace_SamplingResult__WEBPACK_IMPORTED_MODULE_11__["SamplingDecision"];
    });
    /* harmony import */


    var _trace_span_context__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./trace/span_context */
    "./node_modules/@opentelemetry/api/build/esm/trace/span_context.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_span_kind__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./trace/span_kind */
    "./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SpanKind", function () {
      return _trace_span_kind__WEBPACK_IMPORTED_MODULE_13__["SpanKind"];
    });
    /* harmony import */


    var _trace_span__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./trace/span */
    "./node_modules/@opentelemetry/api/build/esm/trace/span.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_SpanOptions__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./trace/SpanOptions */
    "./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_status__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./trace/status */
    "./node_modules/@opentelemetry/api/build/esm/trace/status.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SpanStatusCode", function () {
      return _trace_status__WEBPACK_IMPORTED_MODULE_16__["SpanStatusCode"];
    });
    /* harmony import */


    var _trace_trace_flags__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./trace/trace_flags */
    "./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TraceFlags", function () {
      return _trace_trace_flags__WEBPACK_IMPORTED_MODULE_17__["TraceFlags"];
    });
    /* harmony import */


    var _trace_trace_state__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./trace/trace_state */
    "./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_tracer_provider__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./trace/tracer_provider */
    "./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_tracer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./trace/tracer */
    "./node_modules/@opentelemetry/api/build/esm/trace/tracer.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./trace/spancontext-utils */
    "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSpanContextValid", function () {
      return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__["isSpanContextValid"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isValidTraceId", function () {
      return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__["isValidTraceId"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isValidSpanId", function () {
      return _trace_spancontext_utils__WEBPACK_IMPORTED_MODULE_21__["isValidSpanId"];
    });
    /* harmony import */


    var _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./trace/invalid-span-constants */
    "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "INVALID_SPANID", function () {
      return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__["INVALID_SPANID"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "INVALID_TRACEID", function () {
      return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__["INVALID_TRACEID"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "INVALID_SPAN_CONTEXT", function () {
      return _trace_invalid_span_constants__WEBPACK_IMPORTED_MODULE_22__["INVALID_SPAN_CONTEXT"];
    });
    /* harmony import */


    var _context_context__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./context/context */
    "./node_modules/@opentelemetry/api/build/esm/context/context.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "createContextKey", function () {
      return _context_context__WEBPACK_IMPORTED_MODULE_23__["createContextKey"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ROOT_CONTEXT", function () {
      return _context_context__WEBPACK_IMPORTED_MODULE_23__["ROOT_CONTEXT"];
    });
    /* harmony import */


    var _context_types__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./context/types */
    "./node_modules/@opentelemetry/api/build/esm/context/types.js");
    /* empty/unused harmony star reexport */

    /* harmony import */


    var _api_context__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./api/context */
    "./node_modules/@opentelemetry/api/build/esm/api/context.js");
    /* harmony import */


    var _api_trace__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./api/trace */
    "./node_modules/@opentelemetry/api/build/esm/api/trace.js");
    /* harmony import */


    var _api_propagation__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./api/propagation */
    "./node_modules/@opentelemetry/api/build/esm/api/propagation.js");
    /* harmony import */


    var _api_diag__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./api/diag */
    "./node_modules/@opentelemetry/api/build/esm/api/diag.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /** Entrypoint for context API */


    var context = _api_context__WEBPACK_IMPORTED_MODULE_25__["ContextAPI"].getInstance();
    /** Entrypoint for trace API */


    var trace = _api_trace__WEBPACK_IMPORTED_MODULE_26__["TraceAPI"].getInstance();
    /** Entrypoint for propagation API */


    var propagation = _api_propagation__WEBPACK_IMPORTED_MODULE_27__["PropagationAPI"].getInstance();
    /**
     * Entrypoint for Diag API.
     * Defines Diagnostic handler used for internal diagnostic logging operations.
     * The default provides a Noop DiagLogger implementation which may be changed via the
     * diag.setLogger(logger: DiagLogger) function.
     */


    var diag = _api_diag__WEBPACK_IMPORTED_MODULE_28__["DiagAPI"].instance();
    /* harmony default export */


    __webpack_exports__["default"] = {
      trace: trace,
      context: context,
      propagation: propagation,
      diag: diag
    }; //# sourceMappingURL=index.js.map

    /***/
  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/internal/global-utils.js": function node_modulesOpentelemetryApiBuildEsmInternalGlobalUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "registerGlobal", function () {
      return registerGlobal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getGlobal", function () {
      return getGlobal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "unregisterGlobal", function () {
      return unregisterGlobal;
    });
    /* harmony import */


    var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../platform */
    "./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js");
    /* harmony import */


    var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../version */
    "./node_modules/@opentelemetry/api/build/esm/version.js");
    /* harmony import */


    var _semver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./semver */
    "./node_modules/@opentelemetry/api/build/esm/internal/semver.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var major = _version__WEBPACK_IMPORTED_MODULE_1__["VERSION"].split('.')[0];

    var GLOBAL_OPENTELEMETRY_API_KEY = Symbol["for"]("opentelemetry.js.api." + major);
    var _global = _platform__WEBPACK_IMPORTED_MODULE_0__["_globalThis"];

    function registerGlobal(type, instance, diag, allowOverride) {
      var _a;

      if (allowOverride === void 0) {
        allowOverride = false;
      }

      var api = _global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {
        version: _version__WEBPACK_IMPORTED_MODULE_1__["VERSION"]
      };

      if (!allowOverride && api[type]) {
        // already registered an API of this type
        var err = new Error("@opentelemetry/api: Attempted duplicate registration of API: " + type);
        diag.error(err.stack || err.message);
        return false;
      }

      if (api.version !== _version__WEBPACK_IMPORTED_MODULE_1__["VERSION"]) {
        // All registered APIs must be of the same version exactly
        var err = new Error('@opentelemetry/api: All API registration versions must match');
        diag.error(err.stack || err.message);
        return false;
      }

      api[type] = instance;
      diag.debug("@opentelemetry/api: Registered a global for " + type + " v" + _version__WEBPACK_IMPORTED_MODULE_1__["VERSION"] + ".");
      return true;
    }

    function getGlobal(type) {
      var _a, _b;

      var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;

      if (!globalVersion || !Object(_semver__WEBPACK_IMPORTED_MODULE_2__["isCompatible"])(globalVersion)) {
        return;
      }

      return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];
    }

    function unregisterGlobal(type, diag) {
      diag.debug("@opentelemetry/api: Unregistering a global for " + type + " v" + _version__WEBPACK_IMPORTED_MODULE_1__["VERSION"] + ".");
      var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];

      if (api) {
        delete api[type];
      }
    } //# sourceMappingURL=global-utils.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/internal/semver.js": function node_modulesOpentelemetryApiBuildEsmInternalSemverJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_makeCompatibilityCheck", function () {
      return _makeCompatibilityCheck;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isCompatible", function () {
      return isCompatible;
    });
    /* harmony import */


    var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../version */
    "./node_modules/@opentelemetry/api/build/esm/version.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var re = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
    /**
     * Create a function to test an API version to see if it is compatible with the provided ownVersion.
     *
     * The returned function has the following semantics:
     * - Exact match is always compatible
     * - Major versions must match exactly
     *    - 1.x package cannot use global 2.x package
     *    - 2.x package cannot use global 1.x package
     * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API
     *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects
     *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3
     * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor
     * - Patch and build tag differences are not considered at this time
     *
     * @param ownVersion version which should be checked against
     */

    function _makeCompatibilityCheck(ownVersion) {
      var acceptedVersions = new Set([ownVersion]);
      var rejectedVersions = new Set();
      var myVersionMatch = ownVersion.match(re);

      if (!myVersionMatch) {
        // we cannot guarantee compatibility so we always return noop
        return function () {
          return false;
        };
      }

      var ownVersionParsed = {
        major: +myVersionMatch[1],
        minor: +myVersionMatch[2],
        patch: +myVersionMatch[3],
        prerelease: myVersionMatch[4]
      }; // if ownVersion has a prerelease tag, versions must match exactly

      if (ownVersionParsed.prerelease != null) {
        return function isExactmatch(globalVersion) {
          return globalVersion === ownVersion;
        };
      }

      function _reject(v) {
        rejectedVersions.add(v);
        return false;
      }

      function _accept(v) {
        acceptedVersions.add(v);
        return true;
      }

      return function isCompatible(globalVersion) {
        if (acceptedVersions.has(globalVersion)) {
          return true;
        }

        if (rejectedVersions.has(globalVersion)) {
          return false;
        }

        var globalVersionMatch = globalVersion.match(re);

        if (!globalVersionMatch) {
          // cannot parse other version
          // we cannot guarantee compatibility so we always noop
          return _reject(globalVersion);
        }

        var globalVersionParsed = {
          major: +globalVersionMatch[1],
          minor: +globalVersionMatch[2],
          patch: +globalVersionMatch[3],
          prerelease: globalVersionMatch[4]
        }; // if globalVersion has a prerelease tag, versions must match exactly

        if (globalVersionParsed.prerelease != null) {
          return _reject(globalVersion);
        } // major versions must match


        if (ownVersionParsed.major !== globalVersionParsed.major) {
          return _reject(globalVersion);
        }

        if (ownVersionParsed.major === 0) {
          if (ownVersionParsed.minor === globalVersionParsed.minor && ownVersionParsed.patch <= globalVersionParsed.patch) {
            return _accept(globalVersion);
          }

          return _reject(globalVersion);
        }

        if (ownVersionParsed.minor <= globalVersionParsed.minor) {
          return _accept(globalVersion);
        }

        return _reject(globalVersion);
      };
    }
    /**
     * Test an API version to see if it is compatible with this API.
     *
     * - Exact match is always compatible
     * - Major versions must match exactly
     *    - 1.x package cannot use global 2.x package
     *    - 2.x package cannot use global 1.x package
     * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API
     *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects
     *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3
     * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor
     * - Patch and build tag differences are not considered at this time
     *
     * @param version version of the API requesting an instance of the global API
     */


    var isCompatible = _makeCompatibilityCheck(_version__WEBPACK_IMPORTED_MODULE_0__["VERSION"]); //# sourceMappingURL=semver.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js": function node_modulesOpentelemetryApiBuildEsmPlatformBrowserGlobalThisJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "_globalThis", function () {
      return _globalThis;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /** only globals that common to node and browsers are allowed */
    // eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef


    var _globalThis = typeof globalThis === 'object' ? globalThis : window; //# sourceMappingURL=globalThis.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/platform/browser/index.js": function node_modulesOpentelemetryApiBuildEsmPlatformBrowserIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _globalThis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./globalThis */
    "./node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "_globalThis", function () {
      return _globalThis__WEBPACK_IMPORTED_MODULE_0__["_globalThis"];
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js": function node_modulesOpentelemetryApiBuildEsmPropagationNoopTextMapPropagatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NoopTextMapPropagator", function () {
      return NoopTextMapPropagator;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * No-op implementations of {@link TextMapPropagator}.
     */


    var NoopTextMapPropagator = function () {
      function NoopTextMapPropagator() {}
      /** Noop inject function does nothing */


      NoopTextMapPropagator.prototype.inject = function (_context, _carrier) {};
      /** Noop extract function does nothing and returns the input context */


      NoopTextMapPropagator.prototype.extract = function (context, _carrier) {
        return context;
      };

      NoopTextMapPropagator.prototype.fields = function () {
        return [];
      };

      return NoopTextMapPropagator;
    }(); //# sourceMappingURL=NoopTextMapPropagator.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js": function node_modulesOpentelemetryApiBuildEsmPropagationTextMapPropagatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultTextMapGetter", function () {
      return defaultTextMapGetter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultTextMapSetter", function () {
      return defaultTextMapSetter;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var defaultTextMapGetter = {
      get: function get(carrier, key) {
        if (carrier == null) {
          return undefined;
        }

        return carrier[key];
      },
      keys: function keys(carrier) {
        if (carrier == null) {
          return [];
        }

        return Object.keys(carrier);
      }
    };
    var defaultTextMapSetter = {
      set: function set(carrier, key, value) {
        if (carrier == null) {
          return;
        }

        carrier[key] = value;
      }
    }; //# sourceMappingURL=TextMapPropagator.js.map

    /***/
  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js": function node_modulesOpentelemetryApiBuildEsmTraceNonRecordingSpanJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NonRecordingSpan", function () {
      return NonRecordingSpan;
    });
    /* harmony import */


    var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./invalid-span-constants */
    "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * The NonRecordingSpan is the default {@link Span} that is used when no Span
     * implementation is available. All operations are no-op including context
     * propagation.
     */


    var NonRecordingSpan = function () {
      function NonRecordingSpan(_spanContext) {
        if (_spanContext === void 0) {
          _spanContext = _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__["INVALID_SPAN_CONTEXT"];
        }

        this._spanContext = _spanContext;
      } // Returns a SpanContext.


      NonRecordingSpan.prototype.spanContext = function () {
        return this._spanContext;
      }; // By default does nothing


      NonRecordingSpan.prototype.setAttribute = function (_key, _value) {
        return this;
      }; // By default does nothing


      NonRecordingSpan.prototype.setAttributes = function (_attributes) {
        return this;
      }; // By default does nothing


      NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {
        return this;
      }; // By default does nothing


      NonRecordingSpan.prototype.setStatus = function (_status) {
        return this;
      }; // By default does nothing


      NonRecordingSpan.prototype.updateName = function (_name) {
        return this;
      }; // By default does nothing


      NonRecordingSpan.prototype.end = function (_endTime) {}; // isRecording always returns false for NonRecordingSpan.


      NonRecordingSpan.prototype.isRecording = function () {
        return false;
      }; // By default does nothing


      NonRecordingSpan.prototype.recordException = function (_exception, _time) {};

      return NonRecordingSpan;
    }(); //# sourceMappingURL=NonRecordingSpan.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js": function node_modulesOpentelemetryApiBuildEsmTraceNoopTracerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NoopTracer", function () {
      return NoopTracer;
    });
    /* harmony import */


    var _api_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../api/context */
    "./node_modules/@opentelemetry/api/build/esm/api/context.js");
    /* harmony import */


    var _trace_context_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../trace/context-utils */
    "./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js");
    /* harmony import */


    var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./NonRecordingSpan */
    "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js");
    /* harmony import */


    var _spancontext_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./spancontext-utils */
    "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var context = _api_context__WEBPACK_IMPORTED_MODULE_0__["ContextAPI"].getInstance();
    /**
     * No-op implementations of {@link Tracer}.
     */


    var NoopTracer = function () {
      function NoopTracer() {} // startSpan starts a noop span.


      NoopTracer.prototype.startSpan = function (name, options, context) {
        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);

        if (root) {
          return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__["NonRecordingSpan"]();
        }

        var parentFromContext = context && Object(_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__["getSpanContext"])(context);

        if (isSpanContext(parentFromContext) && Object(_spancontext_utils__WEBPACK_IMPORTED_MODULE_3__["isSpanContextValid"])(parentFromContext)) {
          return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__["NonRecordingSpan"](parentFromContext);
        } else {
          return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_2__["NonRecordingSpan"]();
        }
      };

      NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {
        var opts;
        var ctx;
        var fn;

        if (arguments.length < 2) {
          return;
        } else if (arguments.length === 2) {
          fn = arg2;
        } else if (arguments.length === 3) {
          opts = arg2;
          fn = arg3;
        } else {
          opts = arg2;
          ctx = arg3;
          fn = arg4;
        }

        var parentContext = ctx !== null && ctx !== void 0 ? ctx : context.active();
        var span = this.startSpan(name, opts, parentContext);
        var contextWithSpanSet = Object(_trace_context_utils__WEBPACK_IMPORTED_MODULE_1__["setSpan"])(parentContext, span);
        return context["with"](contextWithSpanSet, fn, undefined, span);
      };

      return NoopTracer;
    }();

    function isSpanContext(spanContext) {
      return typeof spanContext === 'object' && typeof spanContext['spanId'] === 'string' && typeof spanContext['traceId'] === 'string' && typeof spanContext['traceFlags'] === 'number';
    } //# sourceMappingURL=NoopTracer.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js": function node_modulesOpentelemetryApiBuildEsmTraceNoopTracerProviderJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NoopTracerProvider", function () {
      return NoopTracerProvider;
    });
    /* harmony import */


    var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./NoopTracer */
    "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * An implementation of the {@link TracerProvider} which returns an impotent
     * Tracer for all calls to `getTracer`.
     *
     * All operations are no-op.
     */


    var NoopTracerProvider = function () {
      function NoopTracerProvider() {}

      NoopTracerProvider.prototype.getTracer = function (_name, _version) {
        return new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__["NoopTracer"]();
      };

      return NoopTracerProvider;
    }(); //# sourceMappingURL=NoopTracerProvider.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js": function node_modulesOpentelemetryApiBuildEsmTraceProxyTracerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProxyTracer", function () {
      return ProxyTracer;
    });
    /* harmony import */


    var _NoopTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./NoopTracer */
    "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var NOOP_TRACER = new _NoopTracer__WEBPACK_IMPORTED_MODULE_0__["NoopTracer"]();
    /**
     * Proxy tracer provided by the proxy tracer provider
     */

    var ProxyTracer = function () {
      function ProxyTracer(_provider, name, version) {
        this._provider = _provider;
        this.name = name;
        this.version = version;
      }

      ProxyTracer.prototype.startSpan = function (name, options, context) {
        return this._getTracer().startSpan(name, options, context);
      };

      ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {
        var tracer = this._getTracer();

        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);
      };
      /**
       * Try to get a tracer from the proxy tracer provider.
       * If the proxy tracer provider has no delegate, return a noop tracer.
       */


      ProxyTracer.prototype._getTracer = function () {
        if (this._delegate) {
          return this._delegate;
        }

        var tracer = this._provider.getDelegateTracer(this.name, this.version);

        if (!tracer) {
          return NOOP_TRACER;
        }

        this._delegate = tracer;
        return this._delegate;
      };

      return ProxyTracer;
    }(); //# sourceMappingURL=ProxyTracer.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js": function node_modulesOpentelemetryApiBuildEsmTraceProxyTracerProviderJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProxyTracerProvider", function () {
      return ProxyTracerProvider;
    });
    /* harmony import */


    var _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./ProxyTracer */
    "./node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js");
    /* harmony import */


    var _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./NoopTracerProvider */
    "./node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var NOOP_TRACER_PROVIDER = new _NoopTracerProvider__WEBPACK_IMPORTED_MODULE_1__["NoopTracerProvider"]();
    /**
     * Tracer provider which provides {@link ProxyTracer}s.
     *
     * Before a delegate is set, tracers provided are NoOp.
     *   When a delegate is set, traces are provided from the delegate.
     *   When a delegate is set after tracers have already been provided,
     *   all tracers already provided will use the provided delegate implementation.
     */

    var ProxyTracerProvider = function () {
      function ProxyTracerProvider() {}
      /**
       * Get a {@link ProxyTracer}
       */


      ProxyTracerProvider.prototype.getTracer = function (name, version) {
        var _a;

        return (_a = this.getDelegateTracer(name, version)) !== null && _a !== void 0 ? _a : new _ProxyTracer__WEBPACK_IMPORTED_MODULE_0__["ProxyTracer"](this, name, version);
      };

      ProxyTracerProvider.prototype.getDelegate = function () {
        var _a;

        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;
      };
      /**
       * Set the delegate tracer provider
       */


      ProxyTracerProvider.prototype.setDelegate = function (delegate) {
        this._delegate = delegate;
      };

      ProxyTracerProvider.prototype.getDelegateTracer = function (name, version) {
        var _a;

        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version);
      };

      return ProxyTracerProvider;
    }(); //# sourceMappingURL=ProxyTracerProvider.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/Sampler.js": function node_modulesOpentelemetryApiBuildEsmTraceSamplerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=Sampler.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js": function node_modulesOpentelemetryApiBuildEsmTraceSamplingResultJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SamplingDecision", function () {
      return SamplingDecision;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * A sampling decision that determines how a {@link Span} will be recorded
     * and collected.
     */


    var SamplingDecision;

    (function (SamplingDecision) {
      /**
       * `Span.isRecording() === false`, span will not be recorded and all events
       * and attributes will be dropped.
       */
      SamplingDecision[SamplingDecision["NOT_RECORD"] = 0] = "NOT_RECORD";
      /**
       * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}
       * MUST NOT be set.
       */

      SamplingDecision[SamplingDecision["RECORD"] = 1] = "RECORD";
      /**
       * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}
       * MUST be set.
       */

      SamplingDecision[SamplingDecision["RECORD_AND_SAMPLED"] = 2] = "RECORD_AND_SAMPLED";
    })(SamplingDecision || (SamplingDecision = {})); //# sourceMappingURL=SamplingResult.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/SpanOptions.js": function node_modulesOpentelemetryApiBuildEsmTraceSpanOptionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=SpanOptions.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/attributes.js": function node_modulesOpentelemetryApiBuildEsmTraceAttributesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=attributes.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/context-utils.js": function node_modulesOpentelemetryApiBuildEsmTraceContextUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getSpan", function () {
      return getSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setSpan", function () {
      return setSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deleteSpan", function () {
      return deleteSpan;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setSpanContext", function () {
      return setSpanContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getSpanContext", function () {
      return getSpanContext;
    });
    /* harmony import */


    var _context_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/context */
    "./node_modules/@opentelemetry/api/build/esm/context/context.js");
    /* harmony import */


    var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./NonRecordingSpan */
    "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * span key
     */


    var SPAN_KEY = Object(_context_context__WEBPACK_IMPORTED_MODULE_0__["createContextKey"])('OpenTelemetry Context Key SPAN');
    /**
     * Return the span if one exists
     *
     * @param context context to get span from
     */

    function getSpan(context) {
      return context.getValue(SPAN_KEY) || undefined;
    }
    /**
     * Set the span on a context
     *
     * @param context context to use as parent
     * @param span span to set active
     */


    function setSpan(context, span) {
      return context.setValue(SPAN_KEY, span);
    }
    /**
     * Remove current span stored in the context
     *
     * @param context context to delete span from
     */


    function deleteSpan(context) {
      return context.deleteValue(SPAN_KEY);
    }
    /**
     * Wrap span context in a NoopSpan and set as span in a new
     * context
     *
     * @param context context to set active span on
     * @param spanContext span context to be wrapped
     */


    function setSpanContext(context, spanContext) {
      return setSpan(context, new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__["NonRecordingSpan"](spanContext));
    }
    /**
     * Get the span context of the span if it exists.
     *
     * @param context context to get values from
     */


    function getSpanContext(context) {
      var _a;

      return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();
    } //# sourceMappingURL=context-utils.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js": function node_modulesOpentelemetryApiBuildEsmTraceInvalidSpanConstantsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "INVALID_SPANID", function () {
      return INVALID_SPANID;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "INVALID_TRACEID", function () {
      return INVALID_TRACEID;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "INVALID_SPAN_CONTEXT", function () {
      return INVALID_SPAN_CONTEXT;
    });
    /* harmony import */


    var _trace_flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./trace_flags */
    "./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var INVALID_SPANID = '0000000000000000';
    var INVALID_TRACEID = '00000000000000000000000000000000';
    var INVALID_SPAN_CONTEXT = {
      traceId: INVALID_TRACEID,
      spanId: INVALID_SPANID,
      traceFlags: _trace_flags__WEBPACK_IMPORTED_MODULE_0__["TraceFlags"].NONE
    }; //# sourceMappingURL=invalid-span-constants.js.map

    /***/
  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/link.js": function node_modulesOpentelemetryApiBuildEsmTraceLinkJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=link.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/span.js": function node_modulesOpentelemetryApiBuildEsmTraceSpanJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=span.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/span_context.js": function node_modulesOpentelemetryApiBuildEsmTraceSpan_contextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=span_context.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/span_kind.js": function node_modulesOpentelemetryApiBuildEsmTraceSpan_kindJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SpanKind", function () {
      return SpanKind;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var SpanKind;

    (function (SpanKind) {
      /** Default value. Indicates that the span is used internally. */
      SpanKind[SpanKind["INTERNAL"] = 0] = "INTERNAL";
      /**
       * Indicates that the span covers server-side handling of an RPC or other
       * remote request.
       */

      SpanKind[SpanKind["SERVER"] = 1] = "SERVER";
      /**
       * Indicates that the span covers the client-side wrapper around an RPC or
       * other remote request.
       */

      SpanKind[SpanKind["CLIENT"] = 2] = "CLIENT";
      /**
       * Indicates that the span describes producer sending a message to a
       * broker. Unlike client and server, there is no direct critical path latency
       * relationship between producer and consumer spans.
       */

      SpanKind[SpanKind["PRODUCER"] = 3] = "PRODUCER";
      /**
       * Indicates that the span describes consumer receiving a message from a
       * broker. Unlike client and server, there is no direct critical path latency
       * relationship between producer and consumer spans.
       */

      SpanKind[SpanKind["CONSUMER"] = 4] = "CONSUMER";
    })(SpanKind || (SpanKind = {})); //# sourceMappingURL=span_kind.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js": function node_modulesOpentelemetryApiBuildEsmTraceSpancontextUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isValidTraceId", function () {
      return isValidTraceId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isValidSpanId", function () {
      return isValidSpanId;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isSpanContextValid", function () {
      return isSpanContextValid;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapSpanContext", function () {
      return wrapSpanContext;
    });
    /* harmony import */


    var _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./invalid-span-constants */
    "./node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js");
    /* harmony import */


    var _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./NonRecordingSpan */
    "./node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js");
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;
    var VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;

    function isValidTraceId(traceId) {
      return VALID_TRACEID_REGEX.test(traceId) && traceId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__["INVALID_TRACEID"];
    }

    function isValidSpanId(spanId) {
      return VALID_SPANID_REGEX.test(spanId) && spanId !== _invalid_span_constants__WEBPACK_IMPORTED_MODULE_0__["INVALID_SPANID"];
    }
    /**
     * Returns true if this {@link SpanContext} is valid.
     * @return true if this {@link SpanContext} is valid.
     */


    function isSpanContextValid(spanContext) {
      return isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId);
    }
    /**
     * Wrap the given {@link SpanContext} in a new non-recording {@link Span}
     *
     * @param spanContext span context to be wrapped
     * @returns a new non-recording {@link Span} with the provided context
     */


    function wrapSpanContext(spanContext) {
      return new _NonRecordingSpan__WEBPACK_IMPORTED_MODULE_1__["NonRecordingSpan"](spanContext);
    } //# sourceMappingURL=spancontext-utils.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/status.js": function node_modulesOpentelemetryApiBuildEsmTraceStatusJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SpanStatusCode", function () {
      return SpanStatusCode;
    });
    /**
     * An enumeration of status codes.
     */


    var SpanStatusCode;

    (function (SpanStatusCode) {
      /**
       * The default status.
       */
      SpanStatusCode[SpanStatusCode["UNSET"] = 0] = "UNSET";
      /**
       * The operation has been validated by an Application developer or
       * Operator to have completed successfully.
       */

      SpanStatusCode[SpanStatusCode["OK"] = 1] = "OK";
      /**
       * The operation contains an error.
       */

      SpanStatusCode[SpanStatusCode["ERROR"] = 2] = "ERROR";
    })(SpanStatusCode || (SpanStatusCode = {})); //# sourceMappingURL=status.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js": function node_modulesOpentelemetryApiBuildEsmTraceTrace_flagsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TraceFlags", function () {
      return TraceFlags;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */


    var TraceFlags;

    (function (TraceFlags) {
      /** Represents no flag set. */
      TraceFlags[TraceFlags["NONE"] = 0] = "NONE";
      /** Bit to represent whether trace is sampled in trace flags. */

      TraceFlags[TraceFlags["SAMPLED"] = 1] = "SAMPLED";
    })(TraceFlags || (TraceFlags = {})); //# sourceMappingURL=trace_flags.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/trace_state.js": function node_modulesOpentelemetryApiBuildEsmTraceTrace_stateJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=trace_state.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/tracer.js": function node_modulesOpentelemetryApiBuildEsmTraceTracerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=tracer.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/trace/tracer_provider.js": function node_modulesOpentelemetryApiBuildEsmTraceTracer_providerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    //# sourceMappingURL=tracer_provider.js.map

    /***/

  },

  /***/
  "./node_modules/@opentelemetry/api/build/esm/version.js": function node_modulesOpentelemetryApiBuildEsmVersionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VERSION", function () {
      return VERSION;
    });
    /*
     * Copyright The OpenTelemetry Authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      https://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    // this is autogenerated file, see scripts/version-update.js


    var VERSION = '1.0.3'; //# sourceMappingURL=version.js.map

    /***/
  },

  /***/
  "./node_modules/events/events.js": function node_modulesEventsEventsJs(module, exports, __webpack_require__) {
    "use strict"; // Copyright Joyent, Inc. and other Node contributors.
    //
    // Permission is hereby granted, free of charge, to any person obtaining a
    // copy of this software and associated documentation files (the
    // "Software"), to deal in the Software without restriction, including
    // without limitation the rights to use, copy, modify, merge, publish,
    // distribute, sublicense, and/or sell copies of the Software, and to permit
    // persons to whom the Software is furnished to do so, subject to the
    // following conditions:
    //
    // The above copyright notice and this permission notice shall be included
    // in all copies or substantial portions of the Software.
    //
    // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
    // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
    // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
    // USE OR OTHER DEALINGS IN THE SOFTWARE.

    var R = typeof Reflect === 'object' ? Reflect : null;
    var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;

    if (R && typeof R.ownKeys === 'function') {
      ReflectOwnKeys = R.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys(target) {
        return Object.getOwnPropertyNames(target);
      };
    }

    function ProcessEmitWarning(warning) {
      if (console && console.warn) console.warn(warning);
    }

    var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
      return value !== value;
    };

    function EventEmitter() {
      EventEmitter.init.call(this);
    }

    module.exports = EventEmitter;
    module.exports.once = once; // Backwards-compat with node 0.10.x

    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = undefined;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
    // added to it. This is a useful default which helps finding memory leaks.

    var defaultMaxListeners = 10;

    function checkListener(listener) {
      if (typeof listener !== 'function') {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }

    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
      enumerable: true,
      get: function get() {
        return defaultMaxListeners;
      },
      set: function set(arg) {
        if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
        }

        defaultMaxListeners = arg;
      }
    });

    EventEmitter.init = function () {
      if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
        this._events = Object.create(null);
        this._eventsCount = 0;
      }

      this._maxListeners = this._maxListeners || undefined;
    }; // Obviously not all Emitters should be limited to 10. This function allows
    // that to be increased. Set to zero for unlimited.


    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
      if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
      }

      this._maxListeners = n;
      return this;
    };

    function _getMaxListeners(that) {
      if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
      return that._maxListeners;
    }

    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };

    EventEmitter.prototype.emit = function emit(type) {
      var args = [];

      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }

      var doError = type === 'error';
      var events = this._events;
      if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

      if (doError) {
        var er;
        if (args.length > 0) er = args[0];

        if (er instanceof Error) {
          // Note: The comments on the `throw` lines are intentional, they show
          // up in Node's output if this results in an unhandled exception.
          throw er; // Unhandled 'error' event
        } // At least give some kind of context to the user


        var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
        err.context = er;
        throw err; // Unhandled 'error' event
      }

      var handler = events[type];
      if (handler === undefined) return false;

      if (typeof handler === 'function') {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);

        for (var i = 0; i < len; ++i) {
          ReflectApply(listeners[i], this, args);
        }
      }

      return true;
    };

    function _addListener(target, type, listener, prepend) {
      var m;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;

      if (events === undefined) {
        events = target._events = Object.create(null);
        target._eventsCount = 0;
      } else {
        // To avoid recursion in the case that type === "newListener"! Before
        // adding it to the listeners, first emit "newListener".
        if (events.newListener !== undefined) {
          target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
          // this._events to be assigned to a new object

          events = target._events;
        }

        existing = events[type];
      }

      if (existing === undefined) {
        // Optimize the case of one listener. Don't need the extra array object.
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === 'function') {
          // Adding the second element, need to change to array.
          existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        } // Check for listener leak


        m = _getMaxListeners(target);

        if (m > 0 && existing.length > m && !existing.warned) {
          existing.warned = true; // No error code for this since it is a Warning
          // eslint-disable-next-line no-restricted-syntax

          var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
          w.name = 'MaxListenersExceededWarning';
          w.emitter = target;
          w.type = type;
          w.count = existing.length;
          ProcessEmitWarning(w);
        }
      }

      return target;
    }

    EventEmitter.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };

    EventEmitter.prototype.on = EventEmitter.prototype.addListener;

    EventEmitter.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0) return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }

    function _onceWrap(target, type, listener) {
      var state = {
        fired: false,
        wrapFn: undefined,
        target: target,
        type: type,
        listener: listener
      };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }

    EventEmitter.prototype.once = function once(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };

    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    }; // Emits a 'removeListener' event if and only if the listener was removed.


    EventEmitter.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === undefined) return this;
      list = events[type];
      if (list === undefined) return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0) this._events = Object.create(null);else {
          delete events[type];
          if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0) return this;
        if (position === 0) list.shift();else {
          spliceOne(list, position);
        }
        if (list.length === 1) events[type] = list[0];
        if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i;
      events = this._events;
      if (events === undefined) return this; // not listening for removeListener, no need to emit

      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
        }

        return this;
      } // emit removeListener for all listeners on all events


      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;

        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }

        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === undefined) return [];
      var evlistener = events[type];
      if (evlistener === undefined) return [];
      if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }

    EventEmitter.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };

    EventEmitter.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };

    EventEmitter.listenerCount = function (emitter, type) {
      if (typeof emitter.listenerCount === 'function') {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };

    EventEmitter.prototype.listenerCount = listenerCount;

    function listenerCount(type) {
      var events = this._events;

      if (events !== undefined) {
        var evlistener = events[type];

        if (typeof evlistener === 'function') {
          return 1;
        } else if (evlistener !== undefined) {
          return evlistener.length;
        }
      }

      return 0;
    }

    EventEmitter.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };

    function arrayClone(arr, n) {
      var copy = new Array(n);

      for (var i = 0; i < n; ++i) {
        copy[i] = arr[i];
      }

      return copy;
    }

    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++) {
        list[index] = list[index + 1];
      }

      list.pop();
    }

    function unwrapListeners(arr) {
      var ret = new Array(arr.length);

      for (var i = 0; i < ret.length; ++i) {
        ret[i] = arr[i].listener || arr[i];
      }

      return ret;
    }

    function once(emitter, name) {
      return new Promise(function (resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name, resolver);
          reject(err);
        }

        function resolver() {
          if (typeof emitter.removeListener === 'function') {
            emitter.removeListener('error', errorListener);
          }

          resolve([].slice.call(arguments));
        }

        ;
        eventTargetAgnosticAddListener(emitter, name, resolver, {
          once: true
        });

        if (name !== 'error') {
          addErrorHandlerIfEventEmitter(emitter, errorListener, {
            once: true
          });
        }
      });
    }

    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === 'function') {
        eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
      }
    }

    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
      if (typeof emitter.on === 'function') {
        if (flags.once) {
          emitter.once(name, listener);
        } else {
          emitter.on(name, listener);
        }
      } else if (typeof emitter.addEventListener === 'function') {
        // EventTarget does not have `error` event semantics like Node
        // EventEmitters, we do not listen for `error` events here.
        emitter.addEventListener(name, function wrapListener(arg) {
          // IE does not have builtin `{ once: true }` support so we
          // have to do it manually.
          if (flags.once) {
            emitter.removeEventListener(name, wrapListener);
          }

          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
    /***/

  },

  /***/
  "./node_modules/rxjs/internal/Observable.js": function node_modulesRxjsInternalObservableJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var canReportError_1 = __webpack_require__(
    /*! ./util/canReportError */
    "./node_modules/rxjs/internal/util/canReportError.js");

    var toSubscriber_1 = __webpack_require__(
    /*! ./util/toSubscriber */
    "./node_modules/rxjs/internal/util/toSubscriber.js");

    var observable_1 = __webpack_require__(
    /*! ./symbol/observable */
    "./node_modules/rxjs/internal/symbol/observable.js");

    var pipe_1 = __webpack_require__(
    /*! ./util/pipe */
    "./node_modules/rxjs/internal/util/pipe.js");

    var config_1 = __webpack_require__(
    /*! ./config */
    "./node_modules/rxjs/internal/config.js");

    var Observable = function () {
      function Observable(subscribe) {
        this._isScalar = false;

        if (subscribe) {
          this._subscribe = subscribe;
        }
      }

      Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
      };

      Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);

        if (operator) {
          sink.add(operator.call(sink, this.source));
        } else {
          sink.add(this.source || config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
        }

        if (config_1.config.useDeprecatedSynchronousErrorHandling) {
          if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;

            if (sink.syncErrorThrown) {
              throw sink.syncErrorValue;
            }
          }
        }

        return sink;
      };

      Observable.prototype._trySubscribe = function (sink) {
        try {
          return this._subscribe(sink);
        } catch (err) {
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            sink.syncErrorThrown = true;
            sink.syncErrorValue = err;
          }

          if (canReportError_1.canReportError(sink)) {
            sink.error(err);
          } else {
            console.warn(err);
          }
        }
      };

      Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;

        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
          var subscription;
          subscription = _this.subscribe(function (value) {
            try {
              next(value);
            } catch (err) {
              reject(err);

              if (subscription) {
                subscription.unsubscribe();
              }
            }
          }, reject, resolve);
        });
      };

      Observable.prototype._subscribe = function (subscriber) {
        var source = this.source;
        return source && source.subscribe(subscriber);
      };

      Observable.prototype[observable_1.observable] = function () {
        return this;
      };

      Observable.prototype.pipe = function () {
        var operations = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          operations[_i] = arguments[_i];
        }

        if (operations.length === 0) {
          return this;
        }

        return pipe_1.pipeFromArray(operations)(this);
      };

      Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;

        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
          var value;

          _this.subscribe(function (x) {
            return value = x;
          }, function (err) {
            return reject(err);
          }, function () {
            return resolve(value);
          });
        });
      };

      Observable.create = function (subscribe) {
        return new Observable(subscribe);
      };

      return Observable;
    }();

    exports.Observable = Observable;

    function getPromiseCtor(promiseCtor) {
      if (!promiseCtor) {
        promiseCtor = config_1.config.Promise || Promise;
      }

      if (!promiseCtor) {
        throw new Error('no Promise impl found');
      }

      return promiseCtor;
    } //# sourceMappingURL=Observable.js.map

    /***/

  },

  /***/
  "./node_modules/rxjs/internal/Observer.js": function node_modulesRxjsInternalObserverJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var config_1 = __webpack_require__(
    /*! ./config */
    "./node_modules/rxjs/internal/config.js");

    var hostReportError_1 = __webpack_require__(
    /*! ./util/hostReportError */
    "./node_modules/rxjs/internal/util/hostReportError.js");

    exports.empty = {
      closed: true,
      next: function next(value) {},
      error: function error(err) {
        if (config_1.config.useDeprecatedSynchronousErrorHandling) {
          throw err;
        } else {
          hostReportError_1.hostReportError(err);
        }
      },
      complete: function complete() {}
    }; //# sourceMappingURL=Observer.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/Subject.js": function node_modulesRxjsInternalSubjectJs(module, exports, __webpack_require__) {
    "use strict";

    var __extends = this && this.__extends || function () {
      var _extendStatics6 = function extendStatics(d, b) {
        _extendStatics6 = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };

        return _extendStatics6(d, b);
      };

      return function (d, b) {
        _extendStatics6(d, b);

        function __() {
          this.constructor = d;
        }

        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var Observable_1 = __webpack_require__(
    /*! ./Observable */
    "./node_modules/rxjs/internal/Observable.js");

    var Subscriber_1 = __webpack_require__(
    /*! ./Subscriber */
    "./node_modules/rxjs/internal/Subscriber.js");

    var Subscription_1 = __webpack_require__(
    /*! ./Subscription */
    "./node_modules/rxjs/internal/Subscription.js");

    var ObjectUnsubscribedError_1 = __webpack_require__(
    /*! ./util/ObjectUnsubscribedError */
    "./node_modules/rxjs/internal/util/ObjectUnsubscribedError.js");

    var SubjectSubscription_1 = __webpack_require__(
    /*! ./SubjectSubscription */
    "./node_modules/rxjs/internal/SubjectSubscription.js");

    var rxSubscriber_1 = __webpack_require__(
    /*! ../internal/symbol/rxSubscriber */
    "./node_modules/rxjs/internal/symbol/rxSubscriber.js");

    var SubjectSubscriber = function (_super) {
      __extends(SubjectSubscriber, _super);

      function SubjectSubscriber(destination) {
        var _this = _super.call(this, destination) || this;

        _this.destination = destination;
        return _this;
      }

      return SubjectSubscriber;
    }(Subscriber_1.Subscriber);

    exports.SubjectSubscriber = SubjectSubscriber;

    var Subject = function (_super) {
      __extends(Subject, _super);

      function Subject() {
        var _this = _super.call(this) || this;

        _this.observers = [];
        _this.closed = false;
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
      }

      Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {
        return new SubjectSubscriber(this);
      };

      Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
      };

      Subject.prototype.next = function (value) {
        if (this.closed) {
          throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }

        if (!this.isStopped) {
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();

          for (var i = 0; i < len; i++) {
            copy[i].next(value);
          }
        }
      };

      Subject.prototype.error = function (err) {
        if (this.closed) {
          throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }

        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();

        for (var i = 0; i < len; i++) {
          copy[i].error(err);
        }

        this.observers.length = 0;
      };

      Subject.prototype.complete = function () {
        if (this.closed) {
          throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }

        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();

        for (var i = 0; i < len; i++) {
          copy[i].complete();
        }

        this.observers.length = 0;
      };

      Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
      };

      Subject.prototype._trySubscribe = function (subscriber) {
        if (this.closed) {
          throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        } else {
          return _super.prototype._trySubscribe.call(this, subscriber);
        }
      };

      Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
          throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        } else if (this.hasError) {
          subscriber.error(this.thrownError);
          return Subscription_1.Subscription.EMPTY;
        } else if (this.isStopped) {
          subscriber.complete();
          return Subscription_1.Subscription.EMPTY;
        } else {
          this.observers.push(subscriber);
          return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
      };

      Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
      };

      Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
      };

      return Subject;
    }(Observable_1.Observable);

    exports.Subject = Subject;

    var AnonymousSubject = function (_super) {
      __extends(AnonymousSubject, _super);

      function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;

        _this.destination = destination;
        _this.source = source;
        return _this;
      }

      AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;

        if (destination && destination.next) {
          destination.next(value);
        }
      };

      AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;

        if (destination && destination.error) {
          this.destination.error(err);
        }
      };

      AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;

        if (destination && destination.complete) {
          this.destination.complete();
        }
      };

      AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;

        if (source) {
          return this.source.subscribe(subscriber);
        } else {
          return Subscription_1.Subscription.EMPTY;
        }
      };

      return AnonymousSubject;
    }(Subject);

    exports.AnonymousSubject = AnonymousSubject; //# sourceMappingURL=Subject.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/SubjectSubscription.js": function node_modulesRxjsInternalSubjectSubscriptionJs(module, exports, __webpack_require__) {
    "use strict";

    var __extends = this && this.__extends || function () {
      var _extendStatics7 = function extendStatics(d, b) {
        _extendStatics7 = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };

        return _extendStatics7(d, b);
      };

      return function (d, b) {
        _extendStatics7(d, b);

        function __() {
          this.constructor = d;
        }

        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var Subscription_1 = __webpack_require__(
    /*! ./Subscription */
    "./node_modules/rxjs/internal/Subscription.js");

    var SubjectSubscription = function (_super) {
      __extends(SubjectSubscription, _super);

      function SubjectSubscription(subject, subscriber) {
        var _this = _super.call(this) || this;

        _this.subject = subject;
        _this.subscriber = subscriber;
        _this.closed = false;
        return _this;
      }

      SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
          return;
        }

        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;

        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
          return;
        }

        var subscriberIndex = observers.indexOf(this.subscriber);

        if (subscriberIndex !== -1) {
          observers.splice(subscriberIndex, 1);
        }
      };

      return SubjectSubscription;
    }(Subscription_1.Subscription);

    exports.SubjectSubscription = SubjectSubscription; //# sourceMappingURL=SubjectSubscription.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/Subscriber.js": function node_modulesRxjsInternalSubscriberJs(module, exports, __webpack_require__) {
    "use strict";

    var __extends = this && this.__extends || function () {
      var _extendStatics8 = function extendStatics(d, b) {
        _extendStatics8 = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };

        return _extendStatics8(d, b);
      };

      return function (d, b) {
        _extendStatics8(d, b);

        function __() {
          this.constructor = d;
        }

        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var isFunction_1 = __webpack_require__(
    /*! ./util/isFunction */
    "./node_modules/rxjs/internal/util/isFunction.js");

    var Observer_1 = __webpack_require__(
    /*! ./Observer */
    "./node_modules/rxjs/internal/Observer.js");

    var Subscription_1 = __webpack_require__(
    /*! ./Subscription */
    "./node_modules/rxjs/internal/Subscription.js");

    var rxSubscriber_1 = __webpack_require__(
    /*! ../internal/symbol/rxSubscriber */
    "./node_modules/rxjs/internal/symbol/rxSubscriber.js");

    var config_1 = __webpack_require__(
    /*! ./config */
    "./node_modules/rxjs/internal/config.js");

    var hostReportError_1 = __webpack_require__(
    /*! ./util/hostReportError */
    "./node_modules/rxjs/internal/util/hostReportError.js");

    var Subscriber = function (_super) {
      __extends(Subscriber, _super);

      function Subscriber(destinationOrNext, error, complete) {
        var _this = _super.call(this) || this;

        _this.syncErrorValue = null;
        _this.syncErrorThrown = false;
        _this.syncErrorThrowable = false;
        _this.isStopped = false;

        switch (arguments.length) {
          case 0:
            _this.destination = Observer_1.empty;
            break;

          case 1:
            if (!destinationOrNext) {
              _this.destination = Observer_1.empty;
              break;
            }

            if (typeof destinationOrNext === 'object') {
              if (destinationOrNext instanceof Subscriber) {
                _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                _this.destination = destinationOrNext;
                destinationOrNext.add(_this);
              } else {
                _this.syncErrorThrowable = true;
                _this.destination = new SafeSubscriber(_this, destinationOrNext);
              }

              break;
            }

          default:
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
            break;
        }

        return _this;
      }

      Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {
        return this;
      };

      Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
      };

      Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
          this._next(value);
        }
      };

      Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
          this.isStopped = true;

          this._error(err);
        }
      };

      Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
          this.isStopped = true;

          this._complete();
        }
      };

      Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
          return;
        }

        this.isStopped = true;

        _super.prototype.unsubscribe.call(this);
      };

      Subscriber.prototype._next = function (value) {
        this.destination.next(value);
      };

      Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
      };

      Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
      };

      Subscriber.prototype._unsubscribeAndRecycle = function () {
        var _parentOrParents = this._parentOrParents;
        this._parentOrParents = null;
        this.unsubscribe();
        this.closed = false;
        this.isStopped = false;
        this._parentOrParents = _parentOrParents;
        return this;
      };

      return Subscriber;
    }(Subscription_1.Subscription);

    exports.Subscriber = Subscriber;

    var SafeSubscriber = function (_super) {
      __extends(SafeSubscriber, _super);

      function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
        var _this = _super.call(this) || this;

        _this._parentSubscriber = _parentSubscriber;
        var next;
        var context = _this;

        if (isFunction_1.isFunction(observerOrNext)) {
          next = observerOrNext;
        } else if (observerOrNext) {
          next = observerOrNext.next;
          error = observerOrNext.error;
          complete = observerOrNext.complete;

          if (observerOrNext !== Observer_1.empty) {
            context = Object.create(observerOrNext);

            if (isFunction_1.isFunction(context.unsubscribe)) {
              _this.add(context.unsubscribe.bind(context));
            }

            context.unsubscribe = _this.unsubscribe.bind(_this);
          }
        }

        _this._context = context;
        _this._next = next;
        _this._error = error;
        _this._complete = complete;
        return _this;
      }

      SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
          var _parentSubscriber = this._parentSubscriber;

          if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
            this.__tryOrUnsub(this._next, value);
          } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
            this.unsubscribe();
          }
        }
      };

      SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
          var _parentSubscriber = this._parentSubscriber;
          var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;

          if (this._error) {
            if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
              this.__tryOrUnsub(this._error, err);

              this.unsubscribe();
            } else {
              this.__tryOrSetError(_parentSubscriber, this._error, err);

              this.unsubscribe();
            }
          } else if (!_parentSubscriber.syncErrorThrowable) {
            this.unsubscribe();

            if (useDeprecatedSynchronousErrorHandling) {
              throw err;
            }

            hostReportError_1.hostReportError(err);
          } else {
            if (useDeprecatedSynchronousErrorHandling) {
              _parentSubscriber.syncErrorValue = err;
              _parentSubscriber.syncErrorThrown = true;
            } else {
              hostReportError_1.hostReportError(err);
            }

            this.unsubscribe();
          }
        }
      };

      SafeSubscriber.prototype.complete = function () {
        var _this = this;

        if (!this.isStopped) {
          var _parentSubscriber = this._parentSubscriber;

          if (this._complete) {
            var wrappedComplete = function wrappedComplete() {
              return _this._complete.call(_this._context);
            };

            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
              this.__tryOrUnsub(wrappedComplete);

              this.unsubscribe();
            } else {
              this.__tryOrSetError(_parentSubscriber, wrappedComplete);

              this.unsubscribe();
            }
          } else {
            this.unsubscribe();
          }
        }
      };

      SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
          fn.call(this._context, value);
        } catch (err) {
          this.unsubscribe();

          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            throw err;
          } else {
            hostReportError_1.hostReportError(err);
          }
        }
      };

      SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {
          throw new Error('bad call');
        }

        try {
          fn.call(this._context, value);
        } catch (err) {
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
          } else {
            hostReportError_1.hostReportError(err);
            return true;
          }
        }

        return false;
      };

      SafeSubscriber.prototype._unsubscribe = function () {
        var _parentSubscriber = this._parentSubscriber;
        this._context = null;
        this._parentSubscriber = null;

        _parentSubscriber.unsubscribe();
      };

      return SafeSubscriber;
    }(Subscriber);

    exports.SafeSubscriber = SafeSubscriber; //# sourceMappingURL=Subscriber.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/Subscription.js": function node_modulesRxjsInternalSubscriptionJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var isArray_1 = __webpack_require__(
    /*! ./util/isArray */
    "./node_modules/rxjs/internal/util/isArray.js");

    var isObject_1 = __webpack_require__(
    /*! ./util/isObject */
    "./node_modules/rxjs/internal/util/isObject.js");

    var isFunction_1 = __webpack_require__(
    /*! ./util/isFunction */
    "./node_modules/rxjs/internal/util/isFunction.js");

    var UnsubscriptionError_1 = __webpack_require__(
    /*! ./util/UnsubscriptionError */
    "./node_modules/rxjs/internal/util/UnsubscriptionError.js");

    var Subscription = function () {
      function Subscription(unsubscribe) {
        this.closed = false;
        this._parentOrParents = null;
        this._subscriptions = null;

        if (unsubscribe) {
          this._unsubscribe = unsubscribe;
        }
      }

      Subscription.prototype.unsubscribe = function () {
        var errors;

        if (this.closed) {
          return;
        }

        var _a = this,
            _parentOrParents = _a._parentOrParents,
            _unsubscribe = _a._unsubscribe,
            _subscriptions = _a._subscriptions;

        this.closed = true;
        this._parentOrParents = null;
        this._subscriptions = null;

        if (_parentOrParents instanceof Subscription) {
          _parentOrParents.remove(this);
        } else if (_parentOrParents !== null) {
          for (var index = 0; index < _parentOrParents.length; ++index) {
            var parent_1 = _parentOrParents[index];
            parent_1.remove(this);
          }
        }

        if (isFunction_1.isFunction(_unsubscribe)) {
          try {
            _unsubscribe.call(this);
          } catch (e) {
            errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];
          }
        }

        if (isArray_1.isArray(_subscriptions)) {
          var index = -1;
          var len = _subscriptions.length;

          while (++index < len) {
            var sub = _subscriptions[index];

            if (isObject_1.isObject(sub)) {
              try {
                sub.unsubscribe();
              } catch (e) {
                errors = errors || [];

                if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {
                  errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                } else {
                  errors.push(e);
                }
              }
            }
          }
        }

        if (errors) {
          throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
      };

      Subscription.prototype.add = function (teardown) {
        var subscription = teardown;

        if (!teardown) {
          return Subscription.EMPTY;
        }

        switch (typeof teardown) {
          case 'function':
            subscription = new Subscription(teardown);

          case 'object':
            if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
              return subscription;
            } else if (this.closed) {
              subscription.unsubscribe();
              return subscription;
            } else if (!(subscription instanceof Subscription)) {
              var tmp = subscription;
              subscription = new Subscription();
              subscription._subscriptions = [tmp];
            }

            break;

          default:
            {
              throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
            }
        }

        var _parentOrParents = subscription._parentOrParents;

        if (_parentOrParents === null) {
          subscription._parentOrParents = this;
        } else if (_parentOrParents instanceof Subscription) {
          if (_parentOrParents === this) {
            return subscription;
          }

          subscription._parentOrParents = [_parentOrParents, this];
        } else if (_parentOrParents.indexOf(this) === -1) {
          _parentOrParents.push(this);
        } else {
          return subscription;
        }

        var subscriptions = this._subscriptions;

        if (subscriptions === null) {
          this._subscriptions = [subscription];
        } else {
          subscriptions.push(subscription);
        }

        return subscription;
      };

      Subscription.prototype.remove = function (subscription) {
        var subscriptions = this._subscriptions;

        if (subscriptions) {
          var subscriptionIndex = subscriptions.indexOf(subscription);

          if (subscriptionIndex !== -1) {
            subscriptions.splice(subscriptionIndex, 1);
          }
        }
      };

      Subscription.EMPTY = function (empty) {
        empty.closed = true;
        return empty;
      }(new Subscription());

      return Subscription;
    }();

    exports.Subscription = Subscription;

    function flattenUnsubscriptionErrors(errors) {
      return errors.reduce(function (errs, err) {
        return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError ? err.errors : err);
      }, []);
    } //# sourceMappingURL=Subscription.js.map

    /***/

  },

  /***/
  "./node_modules/rxjs/internal/config.js": function node_modulesRxjsInternalConfigJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _enable_super_gross_mode_that_will_cause_bad_things = false;
    exports.config = {
      Promise: undefined,

      set useDeprecatedSynchronousErrorHandling(value) {
        if (value) {
          var error = new Error();
          console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
        } else if (_enable_super_gross_mode_that_will_cause_bad_things) {
          console.log('RxJS: Back to a better error behavior. Thank you. <3');
        }

        _enable_super_gross_mode_that_will_cause_bad_things = value;
      },

      get useDeprecatedSynchronousErrorHandling() {
        return _enable_super_gross_mode_that_will_cause_bad_things;
      }

    }; //# sourceMappingURL=config.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/symbol/observable.js": function node_modulesRxjsInternalSymbolObservableJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    exports.observable = function () {
      return typeof Symbol === 'function' && Symbol.observable || '@@observable';
    }(); //# sourceMappingURL=observable.js.map

    /***/

  },

  /***/
  "./node_modules/rxjs/internal/symbol/rxSubscriber.js": function node_modulesRxjsInternalSymbolRxSubscriberJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    exports.rxSubscriber = function () {
      return typeof Symbol === 'function' ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random();
    }();

    exports.$$rxSubscriber = exports.rxSubscriber; //# sourceMappingURL=rxSubscriber.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/ObjectUnsubscribedError.js": function node_modulesRxjsInternalUtilObjectUnsubscribedErrorJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var ObjectUnsubscribedErrorImpl = function () {
      function ObjectUnsubscribedErrorImpl() {
        Error.call(this);
        this.message = 'object unsubscribed';
        this.name = 'ObjectUnsubscribedError';
        return this;
      }

      ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);
      return ObjectUnsubscribedErrorImpl;
    }();

    exports.ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl; //# sourceMappingURL=ObjectUnsubscribedError.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/UnsubscriptionError.js": function node_modulesRxjsInternalUtilUnsubscriptionErrorJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var UnsubscriptionErrorImpl = function () {
      function UnsubscriptionErrorImpl(errors) {
        Error.call(this);
        this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) {
          return i + 1 + ") " + err.toString();
        }).join('\n  ') : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
        return this;
      }

      UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);
      return UnsubscriptionErrorImpl;
    }();

    exports.UnsubscriptionError = UnsubscriptionErrorImpl; //# sourceMappingURL=UnsubscriptionError.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/canReportError.js": function node_modulesRxjsInternalUtilCanReportErrorJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var Subscriber_1 = __webpack_require__(
    /*! ../Subscriber */
    "./node_modules/rxjs/internal/Subscriber.js");

    function canReportError(observer) {
      while (observer) {
        var _a = observer,
            closed_1 = _a.closed,
            destination = _a.destination,
            isStopped = _a.isStopped;

        if (closed_1 || isStopped) {
          return false;
        } else if (destination && destination instanceof Subscriber_1.Subscriber) {
          observer = destination;
        } else {
          observer = null;
        }
      }

      return true;
    }

    exports.canReportError = canReportError; //# sourceMappingURL=canReportError.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/hostReportError.js": function node_modulesRxjsInternalUtilHostReportErrorJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    function hostReportError(err) {
      setTimeout(function () {
        throw err;
      }, 0);
    }

    exports.hostReportError = hostReportError; //# sourceMappingURL=hostReportError.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/identity.js": function node_modulesRxjsInternalUtilIdentityJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    function identity(x) {
      return x;
    }

    exports.identity = identity; //# sourceMappingURL=identity.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/isArray.js": function node_modulesRxjsInternalUtilIsArrayJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    exports.isArray = function () {
      return Array.isArray || function (x) {
        return x && typeof x.length === 'number';
      };
    }(); //# sourceMappingURL=isArray.js.map

    /***/

  },

  /***/
  "./node_modules/rxjs/internal/util/isFunction.js": function node_modulesRxjsInternalUtilIsFunctionJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    function isFunction(x) {
      return typeof x === 'function';
    }

    exports.isFunction = isFunction; //# sourceMappingURL=isFunction.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/isObject.js": function node_modulesRxjsInternalUtilIsObjectJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    function isObject(x) {
      return x !== null && typeof x === 'object';
    }

    exports.isObject = isObject; //# sourceMappingURL=isObject.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/pipe.js": function node_modulesRxjsInternalUtilPipeJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var identity_1 = __webpack_require__(
    /*! ./identity */
    "./node_modules/rxjs/internal/util/identity.js");

    function pipe() {
      var fns = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
      }

      return pipeFromArray(fns);
    }

    exports.pipe = pipe;

    function pipeFromArray(fns) {
      if (fns.length === 0) {
        return identity_1.identity;
      }

      if (fns.length === 1) {
        return fns[0];
      }

      return function piped(input) {
        return fns.reduce(function (prev, fn) {
          return fn(prev);
        }, input);
      };
    }

    exports.pipeFromArray = pipeFromArray; //# sourceMappingURL=pipe.js.map

    /***/
  },

  /***/
  "./node_modules/rxjs/internal/util/toSubscriber.js": function node_modulesRxjsInternalUtilToSubscriberJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var Subscriber_1 = __webpack_require__(
    /*! ../Subscriber */
    "./node_modules/rxjs/internal/Subscriber.js");

    var rxSubscriber_1 = __webpack_require__(
    /*! ../symbol/rxSubscriber */
    "./node_modules/rxjs/internal/symbol/rxSubscriber.js");

    var Observer_1 = __webpack_require__(
    /*! ../Observer */
    "./node_modules/rxjs/internal/Observer.js");

    function toSubscriber(nextOrObserver, error, complete) {
      if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
          return nextOrObserver;
        }

        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
          return nextOrObserver[rxSubscriber_1.rxSubscriber]();
        }
      }

      if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
      }

      return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
    }

    exports.toSubscriber = toSubscriber; //# sourceMappingURL=toSubscriber.js.map

    /***/
  },

  /***/
  "./src/app/directives/on-create.directive.ts": function srcAppDirectivesOnCreateDirectiveTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OnCreateDirective", function () {
      return OnCreateDirective;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

    var OnCreateDirective = /*#__PURE__*/function () {
      function OnCreateDirective() {
        _classCallCheck(this, OnCreateDirective);

        this.onCreate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(OnCreateDirective, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.onCreate.emit('dummy');
        }
      }]);

      return OnCreateDirective;
    }();

    OnCreateDirective.ɵfac = function OnCreateDirective_Factory(t) {
      return new (t || OnCreateDirective)();
    };

    OnCreateDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
      type: OnCreateDirective,
      selectors: [["", "onCreate", ""]],
      outputs: {
        onCreate: "onCreate"
      }
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](OnCreateDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
          selector: '[onCreate]'
        }]
      }], function () {
        return [];
      }, {
        onCreate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/imageupload/imageupload.component.ts": function srcAppImageuploadImageuploadComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ImageuploadComponent", function () {
      return ImageuploadComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FileInfo", function () {
      return FileInfo;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var src_app_app_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/app.constants */
    "./src/app/app.constants.ts");
    /* harmony import */


    var _declarations_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../declarations.module */
    "./src/app/declarations.module.ts");
    /* harmony import */


    var _invoice_services_imageservice_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../invoice/services/imageservice.service */
    "./src/app/invoice/services/imageservice.service.ts");
    /* harmony import */


    var _invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../invoice/services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function ImageuploadComponent_h4_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "BOL Image ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Lift Ticket Image ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Drop Image");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Additional Images ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Signature Image");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Tax Affidavit");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "BDN Image");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Coast Guard Inspection");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_h4_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Inspection Request Voucher");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "No image selected");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ImageuploadComponent_div_18_img_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "img", 18);
      }

      if (rf & 2) {
        var item_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", item_r11.AzurePath, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);
      }
    }

    function ImageuploadComponent_div_18_img_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "img", 19);
      }

      if (rf & 2) {
        var item_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", item_r11.Name);
      }
    }

    function ImageuploadComponent_div_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ImageuploadComponent_div_18_img_1_Template, 1, 1, "img", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ImageuploadComponent_div_18_img_2_Template, 1, 1, "img", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "input", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var item_r11 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", item_r11.IsPdf == false);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", item_r11.IsPdf);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", item_r11.FileUrl);
      }
    }

    var ImageuploadComponent = /*#__PURE__*/function () {
      function ImageuploadComponent(imageservice, fb, invoiceservice) {
        _classCallCheck(this, ImageuploadComponent);

        this.imageservice = imageservice;
        this.fb = fb;
        this.invoiceservice = invoiceservice;
        this.files = new Array();
        this.funcs = [];
        this.inputFile = new Array();
        this.ContainerName = "invoicepdffiles";
        this.onImageUpload = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](); // control value accessors 

        this.onTouched = function () {};
      }

      _createClass(ImageuploadComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.imageForm = this.fb.group({
            Image: this.fb.control(''),
            FileUrl: this.fb.control('') // hidden form control to set the value for file url received

          });
          this.currentInstance = this;
          this.uploadFunc = this.UploadFile;
          this.FileUrls = "";
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.inputFile && change.inputFile.currentValue != null) {
            this.files = change.inputFile.currentValue;
          }
        }
      }, {
        key: "onImageSelect",
        value: function onImageSelect(event) {
          var _this65 = this;

          this.files = new Array();

          if (event.target.files && event.target.files[0]) {
            var fileNumber = event.target.files.length; //validate file size for each file(jpg/pdf both). Continue only if all files are of valid size.

            for (var i = 0; i < fileNumber; i++) {
              var fileSize = event.target.files[i].size;
              var currentFileName = event.target.files[i].name;

              if (!Object(src_app_app_constants__WEBPACK_IMPORTED_MODULE_2__["IsValidFileSize"])(fileSize)) {
                _declarations_module__WEBPACK_IMPORTED_MODULE_3__["Declarations"].msgerror("File Size excceds 5 MB for file " + currentFileName, undefined, undefined);

                this.imageForm.reset();
                return false;
              }
            }

            var _loop5 = function _loop5(_i20) {
              currentFileName = event.target.files[_i20].name;
              fileSize = event.target.files[_i20].size;
              extension = currentFileName.split('.').pop();
              image = event.target.files[_i20];
              reader = new FileReader();
              reader["currentFileName"] = currentFileName;
              reader["image"] = image;
              _this65.funcs[_i20] = _this65.createOnloadFunction(currentFileName, image);

              reader.onload = function (event2) {
                return _this65.funcs[_i20](event2);
              };

              reader.readAsDataURL(event.target.files[_i20]);
            };

            for (var _i20 = 0; _i20 < fileNumber; _i20++) {
              var currentFileName;
              var fileSize;
              var extension;
              var image;
              var reader;

              _loop5(_i20);
            }
          }
        } //ngOnChanges(change: SimpleChanges) {
        //    if (change.orderId && change.orderId.currentValue != null) {
        //    }
        //}

      }, {
        key: "createOnloadFunction",
        value: function createOnloadFunction(currentFileName, image) {
          var self = this;
          return function (event2) {
            var file = new FileInfo();
            file.Name = currentFileName;
            file.Image = image;
            file.Extension = file.Name.split('.').pop();
            file.IsNewFile = true;

            if (file.Extension.toLowerCase() == 'pdf') {
              file.IsPdf = true;
            } else {
              file.IsPdf = false;
            }

            file.AzurePath = event2.target.result;
            self.files.push(file);
          };
        }
      }, {
        key: "GetSasForBlob",
        value: function GetSasForBlob() {
          var _this66 = this;

          return this.invoiceservice.getSASforblobStorage().toPromise().then(function (x) {
            _this66.sas = x;
            return x;
          });
        }
      }, {
        key: "UploadFile",
        value: function UploadFile(entireInvoiceModel, sas) {
          if (this.fileType == "BDN" || this.fileType == "TaxAffidavit" || this.fileType == "CoastGuardInspection" || this.fileType == "InspectionRequestVoucher") {
            //this.ContainerName = "bdn";
            var mnth = new Date().getMonth() + 1;
            this.ContainerName = "bdn" + "-" + mnth + "-" + new Date().getFullYear();
          } else this.ContainerName = "invoicepdffiles"; //else
          //this.ContainerName=this.ContainerName+"_"+new Date().getMonth()+"_"+new Date().getFullYear();


          var self = this;
          return self.imageservice.uploadImageToBlob(sas, this.files, this.files, this.fileType, this.orderId, entireInvoiceModel, this.ContainerName);
        }
      }, {
        key: "writeValue",
        value: function writeValue(val) {
          val && this.imageForm.setValue(val, {
            emitEvent: true
          });
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.imageForm.valueChanges.subscribe(fn);
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(isDisabled) {
          isDisabled ? this.imageForm.disable() : this.imageForm.enable();
        }
      }]);

      return ImageuploadComponent;
    }();

    ImageuploadComponent.ɵfac = function ImageuploadComponent_Factory(t) {
      return new (t || ImageuploadComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_invoice_services_imageservice_service__WEBPACK_IMPORTED_MODULE_4__["ImageserviceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_5__["InvoiceService"]));
    };

    ImageuploadComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ImageuploadComponent,
      selectors: [["app-imageupload"]],
      inputs: {
        invoice: "invoice",
        additional: "additional",
        signature: "signature",
        isBol: "isBol",
        isLift: "isLift",
        fileType: "fileType",
        orderId: "orderId",
        completeInvoiceViewModel: "completeInvoiceViewModel",
        inputFile: "inputFile",
        TaxAffidavit: "TaxAffidavit",
        BDNImage: "BDNImage",
        CoastGuardInspection: "CoastGuardInspection",
        InspectionRequestVoucher: "InspectionRequestVoucher"
      },
      outputs: {
        onImageUpload: "onImageUpload"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return ImageuploadComponent;
        }),
        multi: true
      }]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 19,
      vars: 12,
      consts: [[3, "formGroup"], [1, "overflow-h"], ["class", "mt0 pt0 dib mb5 pull-left fs18", 4, "ngIf"], ["class", "mt0 pt0 dib mb5 pull-left", 4, "ngIf"], [1, "dib", "ml10", "mt0", "pull-left"], [1, "upload-btn-wrapper"], [1, "fas", "fa-plus-circle", "fs21", "color-blue"], ["type", "file", "formControlName", "Image", "multiple", "", 3, "change"], [1, "form-group"], ["class", "color-orange", 4, "ngIf"], ["class", "dib mb5 thumb-wrapper", 4, "ngFor", "ngForOf"], [1, "mt0", "pt0", "dib", "mb5", "pull-left", "fs18"], [1, "mt0", "pt0", "dib", "mb5", "pull-left"], [1, "color-orange"], [1, "dib", "mb5", "thumb-wrapper"], ["class", "img-thumbnail mr5 img-thumb", 3, "src", 4, "ngIf"], ["src", "../../../Content/images/ico-thumbnailpdf.png", "class", "pdf-thumb img-thumbnail mr5", 3, "title", 4, "ngIf"], ["type", "hidden", "formControlName", "FileUrl", 3, "value"], [1, "img-thumbnail", "mr5", "img-thumb", 3, "src"], ["src", "../../../Content/images/ico-thumbnailpdf.png", 1, "pdf-thumb", "img-thumbnail", "mr5", 3, "title"]],
      template: function ImageuploadComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ImageuploadComponent_h4_2_Template, 2, 0, "h4", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ImageuploadComponent_h4_3_Template, 2, 0, "h4", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, ImageuploadComponent_h4_4_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, ImageuploadComponent_h4_5_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ImageuploadComponent_h4_6_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, ImageuploadComponent_h4_7_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ImageuploadComponent_h4_8_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, ImageuploadComponent_h4_9_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, ImageuploadComponent_h4_10_Template, 2, 0, "h4", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "i", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "input", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function ImageuploadComponent_Template_input_change_14_listener($event) {
            return ctx.onImageSelect($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, ImageuploadComponent_div_16_Template, 2, 0, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, ImageuploadComponent_div_18_Template, 4, 3, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.imageForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isBol);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isLift);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.invoice);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.additional);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.signature);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.TaxAffidavit);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.BDNImage);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.CoastGuardInspection);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.InspectionRequestVoucher);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.files.length == 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.files);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgForOf"]],
      styles: [".upload-btn-wrapper[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n}\r\n\r\n.btn-upload[_ngcontent-%COMP%] {\r\n    border: 2px solid gray;\r\n    color: gray;\r\n    background-color: white;\r\n    padding: 8px 20px;\r\n    border-radius: 8px;\r\n    font-weight: bold;\r\n}\r\n\r\n.upload-btn-wrapper[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%] {\r\n    font-size: 100px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW1hZ2V1cGxvYWQvaW1hZ2V1cGxvYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvaW1hZ2V1cGxvYWQvaW1hZ2V1cGxvYWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51cGxvYWQtYnRuLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLmJ0bi11cGxvYWQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JheTtcclxuICAgIGNvbG9yOiBncmF5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA4cHggMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4udXBsb2FkLWJ0bi13cmFwcGVyIGlucHV0W3R5cGU9ZmlsZV0ge1xyXG4gICAgZm9udC1zaXplOiAxMDBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcbiJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ImageuploadComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-imageupload',
          templateUrl: './imageupload.component.html',
          styleUrls: ['./imageupload.component.css'],
          providers: [{
            provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
            useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
              return ImageuploadComponent;
            }),
            multi: true
          }]
        }]
      }], function () {
        return [{
          type: _invoice_services_imageservice_service__WEBPACK_IMPORTED_MODULE_4__["ImageserviceService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_5__["InvoiceService"]
        }];
      }, {
        invoice: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        additional: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        signature: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        isBol: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        isLift: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        fileType: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        orderId: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        completeInvoiceViewModel: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        inputFile: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        TaxAffidavit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        BDNImage: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        CoastGuardInspection: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        InspectionRequestVoucher: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onImageUpload: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();

    var FileInfo = function FileInfo() {
      _classCallCheck(this, FileInfo);

      this.FileUrl = "";
    };
    /***/

  },

  /***/
  "./src/app/invoice/asset-list/asset-list.component.ts": function srcAppInvoiceAssetListAssetListComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AssetListComponent", function () {
      return AssetListComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var src_app_statelist_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/statelist.service */
    "./src/app/statelist.service.ts");
    /* harmony import */


    var src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/declarations.module */
    "./src/app/declarations.module.ts");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! src/app/services/validation.service */
    "./src/app/services/validation.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../directives/myDateTimePicker */
    "./src/app/directives/myDateTimePicker.ts");
    /* harmony import */


    var _directives_time_smaller_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../directives/time-smaller-than-or-equal-to-validator */
    "./src/app/directives/time-smaller-than-or-equal-to-validator.ts");
    /* harmony import */


    var _directives_time_greater_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../../directives/time-greater-than-or-equal-to-validator */
    "./src/app/directives/time-greater-than-or-equal-to-validator.ts");

    function AssetListComponent_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_td_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Pre Dip");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_td_14_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Post Dip");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_td_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "UOM");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_input_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "input", 33);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_6_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_6_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_span_6_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_6_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("AssetName").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("AssetName").errors.pattern);
      }
    }

    function AssetListComponent_div_4_ng_container_19_label_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "label", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](asset_r6.get("AssetName").value);
      }
    }

    function AssetListComponent_div_4_ng_container_19_input_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "input", 36);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_15_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_15_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_15_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Sum of quantity should match with delivered quantity. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_span_15_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_15_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AssetListComponent_div_4_ng_container_19_span_15_span_3_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        var asset_r6 = ctx_r27.$implicit;
        var last_r8 = ctx_r27.last;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("DropGallons").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("DropGallons").errors.pattern);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", (asset_r6.get("DropGallons").errors == null ? null : asset_r6.get("DropGallons").errors.isQuantityMismatch) && last_r8);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_18_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_18_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_18_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_18_span_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_span_18_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_18_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AssetListComponent_div_4_ng_container_19_span_18_span_3_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, AssetListComponent_div_4_ng_container_19_span_18_span_4_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("StartTime").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("StartTime").errors.pattern);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("StartTime").errors.timeSmallerThanOrEqualTo);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("StartTime").errors.invalidDropTime);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_21_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_21_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_21_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_21_span_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_span_21_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_21_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AssetListComponent_div_4_ng_container_19_span_21_span_3_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, AssetListComponent_div_4_ng_container_19_span_21_span_4_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("EndTime").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("EndTime").errors.pattern);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("EndTime").errors.timeGreaterThanOrEqualTo);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("EndTime").errors.invalidDropTime);
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_22_span_2_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_22_span_2_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_22_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_td_22_span_2_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_td_22_span_2_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PreDip").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PreDip").errors.pattern);
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "input", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_td_22_span_2_Template, 3, 2, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r16.IsDipDataRequired ? "null" : "hide-dip-data-controls");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PreDip").errors && (asset_r6.get("PreDip").touched || asset_r6.get("PreDip").dirty));
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_23_span_2_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_23_span_2_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_23_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_td_23_span_2_span_1_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_td_23_span_2_span_2_Template, 2, 0, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PostDip").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PostDip").errors.pattern);
      }
    }

    function AssetListComponent_div_4_ng_container_19_td_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "input", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_td_23_span_2_Template, 3, 2, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r17.IsDipDataRequired ? "null" : "hide-dip-data-controls");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("PostDip").errors && (asset_r6.get("PostDip").touched || asset_r6.get("PostDip").dirty));
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_span_1_option_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var uom_r51 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", uom_r51.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](uom_r51.Name);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "select", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "option", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Select");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, AssetListComponent_div_4_ng_container_19_span_25_span_1_option_4_Template, 2, 2, "option", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r48.UOMsForDipTest);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_span_2_option_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Select");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_span_2_option_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Select");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 0);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "select", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_25_span_2_option_2_Template, 2, 1, "option", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, AssetListComponent_div_4_ng_container_19_span_25_span_2_option_3_Template, 2, 1, "option", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "option", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        var ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("IsNewAsset").value == true);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("IsNewAsset").value == false);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r49.UoM);
      }
    }

    function AssetListComponent_div_4_ng_container_19_span_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_4_ng_container_19_span_25_span_1_Template, 5, 2, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, AssetListComponent_div_4_ng_container_19_span_25_span_2_Template, 6, 4, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("TankMakeModel").value != null && asset_r6.get("TankMakeModel").value != "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("TankMakeModel").value == null);
      }
    }

    function AssetListComponent_div_4_ng_container_19_a_27_Template(rf, ctx) {
      if (rf & 1) {
        var _r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AssetListComponent_div_4_ng_container_19_a_27_Template_a_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r58);

          var i_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;

          var ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r56.removeAsset(i_r7);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var _c0 = function _c0(a0) {
      return {
        "pntr-none": a0
      };
    };

    function AssetListComponent_div_4_ng_container_19_Template(rf, ctx) {
      if (rf & 1) {
        var _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "table", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "td", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, AssetListComponent_div_4_ng_container_19_input_5_Template, 1, 0, "input", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, AssetListComponent_div_4_ng_container_19_span_6_Template, 3, 2, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, AssetListComponent_div_4_ng_container_19_label_7_Template, 2, 1, "label", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, AssetListComponent_div_4_ng_container_19_input_8_Template, 1, 0, "input", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "td", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "input", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function AssetListComponent_div_4_ng_container_19_Template_input_input_11_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r60);

          var ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r59.validateSumOfAssetQuantity();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "span", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, AssetListComponent_div_4_ng_container_19_span_15_Template, 4, 3, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "td", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "input", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function AssetListComponent_div_4_ng_container_19_Template_input_onTimeChange_17_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r60);

          var asset_r6 = ctx.$implicit;
          return asset_r6.get("StartTime").setValue($event);
        })("blur", function AssetListComponent_div_4_ng_container_19_Template_input_blur_17_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r60);

          var asset_r6 = ctx.$implicit;

          var ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r62.ValidateAssetTime(asset_r6, "assetList", null);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, AssetListComponent_div_4_ng_container_19_span_18_Template, 5, 4, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "td", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "input", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function AssetListComponent_div_4_ng_container_19_Template_input_onTimeChange_20_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r60);

          var asset_r6 = ctx.$implicit;
          return asset_r6.get("EndTime").setValue($event);
        })("blur", function AssetListComponent_div_4_ng_container_19_Template_input_blur_20_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r60);

          var asset_r6 = ctx.$implicit;

          var ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r64.ValidateAssetTime(asset_r6, "assetList", null);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, AssetListComponent_div_4_ng_container_19_span_21_Template, 5, 4, "span", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, AssetListComponent_div_4_ng_container_19_td_22_Template, 3, 2, "td", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, AssetListComponent_div_4_ng_container_19_td_23_Template, 3, 2, "td", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "td", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, AssetListComponent_div_4_ng_container_19_span_25_Template, 3, 2, "span", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "td", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, AssetListComponent_div_4_ng_container_19_a_27_Template, 1, 0, "a", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var asset_r6 = ctx.$implicit;
        var i_r7 = ctx.index;

        var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("IsNewAsset").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("AssetName").errors && (asset_r6.get("AssetName").touched || asset_r6.get("AssetName").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !asset_r6.get("IsNewAsset").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !asset_r6.get("IsNewAsset").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](19, _c0, ctx_r5.isDisable(asset_r6, ctx_r5.IsDipDataRequired)));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx_r5.isDisable(asset_r6, ctx_r5.IsDipDataRequired) ? true : null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r5.IsSelectedMT ? "MT" : ctx_r5.UoM);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("DropGallons").errors && (asset_r6.get("DropGallons").touched || asset_r6.get("DropGallons").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("timeSmallerThanOrEqualTo", asset_r6.get("EndTime"))("format", "hh:mm:ss A");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("StartTime").errors && (asset_r6.get("StartTime").touched || asset_r6.get("StartTime").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("timeGreaterThanOrEqualTo", asset_r6.get("StartTime"))("format", "hh:mm:ss A");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("EndTime").errors && (asset_r6.get("EndTime").touched || asset_r6.get("EndTime").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.IsDipDataRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.IsDipDataRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.IsDipDataRequired && asset_r6.get("IsNewAsset").value == false);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", asset_r6.get("IsNewAsset").value);
      }
    }

    function AssetListComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "table", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "tr", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "td", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Asset/Tank Name");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "td", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Quantity");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "td", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "Start Time");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "td", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "End Time");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](13, AssetListComponent_div_4_td_13_Template, 2, 0, "td", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, AssetListComponent_div_4_td_14_Template, 2, 0, "td", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, AssetListComponent_div_4_td_15_Template, 2, 0, "td", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "td", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "\xA0");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](19, AssetListComponent_div_4_ng_container_19_Template, 28, 21, "ng-container", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](20, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDipDataRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDipDataRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDipDataRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r1.Parent.get("Assets")["controls"]);
      }
    }

    var AssetListComponent = /*#__PURE__*/function () {
      function AssetListComponent(fb, invoiceService, validationService) {
        _classCallCheck(this, AssetListComponent);

        this.fb = fb;
        this.invoiceService = invoiceService;
        this.validationService = validationService;
        this.UOMsForDipTest = [];
        this.IsCalculating = false;
      }

      _createClass(AssetListComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {//this.Parent.addControl('Assets', this.fb.array([]));
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.SelectedAssets && change.SelectedAssets.currentValue != null) {
            if (this.SelectedAssets != undefined) this.showAssets(this.SelectedAssets);
          }

          if (change.UoM && change.UoM.currentValue != null) {
            var uom = change.UoM.currentValue;
            this.setUoM(uom);
            this.CreateUOMsListForDipTestCalculation();
          }

          if (change.IsSelectedMT && change.IsSelectedMT.currentValue != null) {
            this.IsSelectedMT = change.IsSelectedMT.currentValue;
          }

          if (change.Parent && change.Parent.currentValue != null) {
            var drop = change.Parent.currentValue;
            this.IsDipDataRequired = drop.get('IsDipDataRequired').value;

            if (this.IsDipDataRequired && this.SelectedAssets && this.SelectedAssets.length > 0) {
              this.setDipDataValidatorForInvoiceConversion();
            }
          }
        }
      }, {
        key: "getNewAsset",
        value: function getNewAsset(asset) {
          var form = this.fb.group({
            Id: this.fb.control(asset.Id),
            AssetName: this.fb.control(asset.AssetName, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            JobXAssetId: this.fb.control(asset.JobXAssetId),
            DropGallons: this.fb.control(asset.DropGallons, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^((\d|[1-9]\d+)(\.\d{1,8})?|\.\d{1,8})$/)]),
            StartTime: this.fb.control(asset.StartTime, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            EndTime: this.fb.control(asset.EndTime, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            IsNewAsset: this.fb.control(asset.IsNewAsset),
            PreDip: this.fb.control(asset.PreDip),
            PostDip: this.fb.control(asset.PostDip),
            TankMakeModel: this.fb.control(asset.TankMakeModel),
            TankScaleMeasurement: this.fb.control(asset.TankScaleMeasurement)
          });

          var _assetForm = this.setDipDataValidators(form, this.IsDipDataRequired);

          return _assetForm;
        }
      }, {
        key: "setDipDataValidators",
        value: function setDipDataValidators(assetForm, IsDipDataRequired) {
          if (IsDipDataRequired) {
            assetForm.get('PreDip').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^((\d|[1-9]\d+)(\.\d{1,8})?|\.\d{1,8})$/)]);
            assetForm.get('PostDip').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^((\d|[1-9]\d+)(\.\d{1,8})?|\.\d{1,8})$/)]);
          }

          return assetForm;
        }
      }, {
        key: "setDipDataValidatorForInvoiceConversion",
        value: function setDipDataValidatorForInvoiceConversion() {
          var assetArray = this.Parent.get('Assets');
          var _dropQuantityFormControls = assetArray.controls;

          if (_dropQuantityFormControls != undefined && _dropQuantityFormControls != null) {
            _dropQuantityFormControls.forEach(function (formControl) {
              formControl.get('PreDip').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^((\d|[1-9]\d+)(\.\d{1,8})?|\.\d{1,8})$/)]);
              formControl.get('PostDip').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^((\d|[1-9]\d+)(\.\d{1,8})?|\.\d{1,8})$/)]);
            });
          }
        }
      }, {
        key: "setUoM",
        value: function setUoM(UOM) {
          this.UoM = UOM;
        } //setActualDropQuantity() {
        // var totalQuantity = 0;
        // var assets = <FormArray>this.Parent.get('Assets');
        // assets.controls.forEach((x: FormGroup) => {
        //     var dropGallons = x.get('DropGallons');
        //     if (dropGallons.value != null && dropGallons.value != undefined && dropGallons.value != '') {
        //         totalQuantity = totalQuantity + parseFloat(dropGallons.value);
        //     }
        // });
        // totalQuantity = parseFloat(totalQuantity.toFixed(8));
        // this.Parent.get('ActualDropQuantity').setValue(totalQuantity);
        // this.onDropQuantityUpdate.emit(totalQuantity);
        //}

      }, {
        key: "validateSumOfAssetQuantity",
        value: function validateSumOfAssetQuantity() {
          var _this67 = this;

          var assets = this.Parent.get('Assets');

          if (assets.controls.length > 0) {
            var sumOfAssetQuantity = assets.value.reduce(function (a, b) {
              return +a + +b.DropGallons;
            }, 0);
            var isQuantityMismatch = sumOfAssetQuantity != this.Parent.get('ActualDropQuantity').value && this.Parent.get('ActualDropQuantity').value > 0;
            assets.controls.forEach(function (asset) {
              if (isQuantityMismatch) _this67.validationService.addError(asset.get('DropGallons'), 'isQuantityMismatch');else _this67.validationService.removeError(asset.get('DropGallons'), 'isQuantityMismatch');
            });
          }
        }
      }, {
        key: "addNewAsset",
        value: function addNewAsset() {
          var asset = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__["AssetDropModel"]();
          asset.IsNewAsset = true;
          this.Parent.get('Assets').push(this.getNewAsset(asset));
          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "removeAsset",
        value: function removeAsset(idx) {
          this.Parent.get('Assets').removeAt(idx); //this.setActualDropQuantity();

          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "showAssets",
        value: function showAssets(assets) {
          var assetArray = this.Parent.get('Assets');
          var current = this;
          var existingAssets = [];
          assetArray.controls.forEach(function (control, idx) {
            var asset = assets.find(function (elem, idx2) {
              return elem.JobXAssetId == control.get('JobXAssetId').value && elem.AssetName == control.get('AssetName').value;
            });

            if (asset != undefined) {
              existingAssets.push(asset);
            }
          });
          var newAssets = assets.filter(function (el) {
            return existingAssets.indexOf(el) < 0;
          });
          newAssets.forEach(function (model, idx) {
            assetArray.push(current.getNewAsset(model));
          });
        }
      }, {
        key: "removeAssets",
        value: function removeAssets(assets) {
          var assetArray = this.Parent.get('Assets');
          var removedIndex;
          assetArray.controls.forEach(function (control, idx) {
            var asset = assets.find(function (elem, idx2) {
              return elem.JobXAssetId == control.get('JobXAssetId').value && elem.AssetName == control.get('AssetName').value;
            });

            if (asset != undefined) {
              removedIndex = idx;
            }
          });

          if (removedIndex >= 0) {
            assetArray.removeAt(removedIndex);
          } //this.setActualDropQuantity();

        } //------------------------------------------

      }, {
        key: "showSelectedAsset",
        value: function showSelectedAsset(item) {
          var _this68 = this;

          var assets = [];
          var thisDrop = this.Drops.find(function (x) {
            return x.OrderId == _this68.Parent.controls['OrderId'].value;
          });

          if (thisDrop) {
            //this.Drops.forEach(function (e) {
            thisDrop.Assets.forEach(function (e1) {
              if (e1.JobXAssetId == item.JobXAssetId && e1.AssetName == item.AssetName && assets.indexOf(e1) == -1) {
                assets.push(e1);
              }
            }); //});
          }

          assets = Array.from(new Set(assets));
          this.showAssets(assets);
          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "showSelectedAssets",
        value: function showSelectedAssets(item) {
          var orderId = item != null && item != undefined ? item[0].OrderId : 0;
          var assets = [];
          this.Drops.forEach(function (e) {
            if (e.OrderId == orderId) {
              e.Assets.forEach(function (ast) {
                assets.push(ast);
              });
            }
          });
          assets = Array.from(new Set(assets));
          this.showAssets(assets);
          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "removeUnselected",
        value: function removeUnselected(item) {
          var assets = [];
          this.Drops.forEach(function (e) {
            e.Assets.forEach(function (e1) {
              if (e1.JobXAssetId == item.JobXAssetId && e1.AssetName == item.AssetName) {
                assets.push(e1);
              }
            });
          });
          this.removeAssets(assets); //this.setActualDropQuantity();

          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "removeAllUnselected",
        value: function removeAllUnselected(item) {
          var assetArray = this.Parent.get('Assets');
          assetArray.clear(); //this.setActualDropQuantity();

          this.validateSumOfAssetQuantity();
        }
      }, {
        key: "CreateUOMsListForDipTestCalculation",
        value: function CreateUOMsListForDipTestCalculation() {
          var _centrimeteruom = new src_app_statelist_service__WEBPACK_IMPORTED_MODULE_3__["DropdownItem"]();

          _centrimeteruom.Id = 1; //CM

          _centrimeteruom.Name = 'cm';
          this.UOMsForDipTest.push(_centrimeteruom);

          var _inchuom = new src_app_statelist_service__WEBPACK_IMPORTED_MODULE_3__["DropdownItem"]();

          _inchuom.Id = 2; //in

          _inchuom.Name = 'in';
          this.UOMsForDipTest.push(_inchuom);

          if (this.UoM == 'Gallons') {
            var _gallonsuom = new src_app_statelist_service__WEBPACK_IMPORTED_MODULE_3__["DropdownItem"]();

            _gallonsuom.Id = 3; //Gallons

            _gallonsuom.Name = 'Gallons';
            this.UOMsForDipTest.push(_gallonsuom);
          } else if (this.UoM == 'Litres') {
            var litreUom = new src_app_statelist_service__WEBPACK_IMPORTED_MODULE_3__["DropdownItem"]();
            litreUom.Id = 3; //Gallons

            litreUom.Name = 'Litres';
            this.UOMsForDipTest.push(litreUom);
          }
        }
      }, {
        key: "CalculateDropQuantitiesFromPrePostDip",
        value: function CalculateDropQuantitiesFromPrePostDip() {
          var _this69 = this;

          var assetsInfo = [];
          var addedAssets = this.Parent.get('Assets').value; //Check for no assets added

          if (addedAssets == null || addedAssets == undefined || addedAssets.length == 0) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Assets/Tanks not added", undefined, undefined);
            return;
          } else {
            var incompleteInfoAssets = addedAssets.filter(function (t) {
              return (t.PreDip == null || t.PostDip == null) && !t.IsNewAsset;
            });
            var missingUoMAssets = addedAssets.filter(function (t) {
              return t.PreDip != null && t.PostDip != null && (t.TankScaleMeasurement == null || t.TankScaleMeasurement == 0) && !t.IsNewAsset;
            }); //console.log("incompleteInfoAssets ==>");
            //console.log(incompleteInfoAssets);

            if (incompleteInfoAssets != null && incompleteInfoAssets != undefined && incompleteInfoAssets.length > 0) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Please Provide Required PreDip/PostDip", undefined, undefined); // To trigger validations

              var assetsFormArray = this.Parent.get('Assets');
              assetsFormArray.controls.forEach(function (control) {
                var isNewAsset = control.get('IsNewAsset').value;

                if (!isNewAsset) {
                  control.get('PreDip').markAsTouched();
                  control.get('PostDip').markAsTouched();
                }
              });
              return;
            } else if (missingUoMAssets != null && missingUoMAssets != undefined && missingUoMAssets.length > 0) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Please Provide Required UoM(s)", undefined, undefined); // this.Parent.get('Assets').markAllAsTouched();// To trigger validations

              return;
            } else {
              assetsInfo = addedAssets.filter(function (t) {
                return t.PreDip != null && t.PostDip != null && t.TankScaleMeasurement != null && t.JobXAssetId > 0 && !t.IsNewAsset;
              });

              if (assetsInfo != null && assetsInfo != undefined && assetsInfo.length > 0) {
                this.IsCalculating = true;
                this.invoiceService.postPrePostAssetsInfo(assetsInfo).subscribe(function (data) {
                  _this69.IsCalculating = false;
                  var response = data;

                  if (response != undefined && response != null && response.length > 0) {
                    var _assetsFormArray = _this69.Parent.get('Assets');

                    response.forEach(function (obj) {
                      var _group = _assetsFormArray.controls.find(function (control) {
                        return control.get('JobXAssetId').value == obj.JobxAssetId;
                      });

                      if (obj.StatusCode == 0) //Success
                        {
                          if (_group != undefined && _group != null && obj.DropQuantity != null) {
                            _group.get('DropGallons').setValue(obj.DropQuantity);
                          }
                        } else if (obj.StatusCode == 1) //Failed 
                        {
                          var assetName = _group.get('AssetName').value;

                          var errMessage = "Error Ocurred when calculating quantity for asset/Tank  " + assetName + " . " + obj.StatusMessage;
                          src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror(errMessage, undefined, undefined);
                        } else if (obj.StatusCode == 2) {
                        var _assetName = _group.get('AssetName').value;

                        var _errMessage = obj.StatusMessage + _assetName + " . ";

                        src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror(_errMessage, undefined, undefined);
                      }
                    }); //this.setActualDropQuantity();
                  } else {
                    src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("An error occurred when calculating quantities", undefined, undefined);
                  }
                });
              }
            }
          }
        }
      }, {
        key: "isDisable",
        value: function isDisable(asset, isdipdataRequired) {
          if (asset) {
            if (!asset.get('IsNewAsset').value && isdipdataRequired) return true;else return false;
          }

          return false;
        }
      }, {
        key: "ValidateAssetTime",
        value: function ValidateAssetTime(asset, ValidationTriggedFrom, dropForm) {
          if (ValidationTriggedFrom === 'assetList') {
            var drop = this.Parent.value;
            var stringDropStartTime = drop.StartTime;
            var stringDropEndTime = drop.EndTime;
            var stringAssetStartTime = asset.get('StartTime').value;
            var stringAssetEndTime = asset.get('EndTime').value;

            if (stringDropStartTime != null && stringDropStartTime != undefined && stringDropStartTime != '' && stringDropEndTime != null && stringDropEndTime != undefined && stringDropEndTime != '' && stringAssetStartTime != null && stringAssetStartTime != undefined && stringAssetStartTime != '' && stringAssetEndTime != null && stringAssetEndTime != undefined && stringAssetEndTime != '') {
              //let dropStartTime = new Date().setHours(this.GetHours(stringDropStartTime), this.GetMinutes(stringDropStartTime), this.GetSeconds(stringDropStartTime));
              var dropStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropStartTime)));
              var dropEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringDropEndTime))); //let dropEndTime = new Date().setHours(this.GetHours(stringDropEndTime), this.GetMinutes(stringDropEndTime), this.GetSeconds(stringDropEndTime));

              var assetStartTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetStartTime)));
              var assetEndTime = parseInt(this.getSeconds(this.convertTo24Hour(stringAssetEndTime))); //let assetStartTime = new Date().setHours(this.GetHours(stringAssetStartTime), this.GetMinutes(stringAssetStartTime), this.GetSeconds(stringAssetStartTime));
              // let assetEndTime = new Date().setHours(this.GetHours(stringAssetEndTime), this.GetMinutes(stringAssetEndTime), this.GetSeconds(stringAssetEndTime));

              if (assetStartTime < dropStartTime || assetEndTime > dropEndTime) {
                if (assetStartTime < dropStartTime) {
                  asset.get('StartTime').setErrors({
                    invalidDropTime: true
                  });
                }

                if (assetEndTime > dropEndTime) {
                  asset.get('EndTime').setErrors({
                    invalidDropTime: true
                  });
                }
              } else {
                if (asset.get('StartTime').hasError('invalidDropTime')) {
                  asset.get('StartTime').setErrors(null);
                }

                if (asset.get('EndTime').hasError('invalidDropTime')) {
                  asset.get('EndTime').setErrors(null);
                }
              }
            }
          }

          if (ValidationTriggedFrom === 'productDetail') {
            if (dropForm != null && dropForm != undefined) {
              var _stringDropStartTime = dropForm.get('StartTime').value;
              var _stringDropEndTime = dropForm.get('EndTime').value;

              if (_stringDropStartTime != null && _stringDropStartTime != undefined && _stringDropStartTime != '' && _stringDropEndTime != null && _stringDropEndTime != undefined && _stringDropEndTime != '') {
                //let dropStartTime = new Date().setHours(this.GetHours(stringDropStartTime), this.GetMinutes(stringDropStartTime), this.GetSeconds(stringDropStartTime) );
                //let dropEndTime = new Date().setHours(this.GetHours(stringDropEndTime), this.GetMinutes(stringDropEndTime), this.GetSeconds(stringDropEndTime));
                var _dropStartTime = parseInt(this.getSeconds(this.convertTo24Hour(_stringDropStartTime)));

                var _dropEndTime = parseInt(this.getSeconds(this.convertTo24Hour(_stringDropEndTime)));

                var assetArray = dropForm.controls['Assets']['controls'];

                if (assetArray != null && assetArray != undefined && assetArray.length > 0) {
                  for (var idx = 0; idx < assetArray.length; idx++) {
                    var _stringAssetStartTime = assetArray[idx].get('StartTime').value;
                    var _stringAssetEndTime = assetArray[idx].get('EndTime').value;

                    if (_stringAssetStartTime != undefined && _stringAssetStartTime != null && _stringAssetStartTime != '' && _stringAssetEndTime != undefined && _stringAssetEndTime != null && _stringAssetEndTime != '') {
                      var _assetStartTime = parseInt(this.getSeconds(this.convertTo24Hour(_stringAssetStartTime)));

                      var _assetEndTime = parseInt(this.getSeconds(this.convertTo24Hour(_stringAssetEndTime))); //let assetStartTime = new Date().setHours(this.GetHours(stringAssetStartTime), this.GetMinutes(stringAssetStartTime), this.GetSeconds(stringAssetStartTime) );
                      //  let assetEndTime = new Date().setHours(this.GetHours(stringAssetEndTime), this.GetMinutes(stringAssetEndTime), this.GetSeconds(stringAssetEndTime));


                      if (_assetStartTime < _dropStartTime || _assetEndTime > _dropEndTime) {
                        if (_assetStartTime < _dropStartTime) {
                          assetArray[idx].get('StartTime').setErrors({
                            invalidDropTime: true
                          });
                        }

                        if (_assetEndTime > _dropEndTime) {
                          assetArray[idx].get('EndTime').setErrors({
                            invalidDropTime: true
                          });
                        }
                      } else {
                        if (assetArray[idx].get('StartTime').hasError('invalidDropTime')) {
                          assetArray[idx].get('StartTime').setErrors(null);
                        }

                        if (assetArray[idx].get('EndTime').hasError('invalidDropTime')) {
                          assetArray[idx].get('EndTime').setErrors(null);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        } //public GetHours(d) {
        //    var h = parseInt(d.split(':')[0]);
        //    if (d.split(':')[1].split(' ')[1] == "PM") {
        //        h = h + 12;
        //    }
        //    return h;
        //}
        //public GetMinutes(d) {
        //    return parseInt(d.split(':')[1].split(' ')[0]);
        //}
        //public GetSeconds(d) {
        //    return parseInt(d.split(':')[2].split(' ')[0]);
        //}

      }, {
        key: "convertTo24Hour",
        value: function convertTo24Hour(time) {
          if (/(1[2]):[0][0] ?[Aa][mM]$/.test(time)) {
            return '00:00';
          }

          if (/(1[2]):[0][0]:[0][0] ?[Aa][mM]$/.test(time)) {
            return '00:00:00';
          }

          var timewithFormat = time.split(' ');
          var response = timewithFormat[0].split(':');
          var hours = response[0],
              minutes = response[1];

          if (time.toLowerCase().indexOf('am') !== -1 && hours == 12) {
            hours = 0;
          }

          if (time.toLowerCase().indexOf('pm') !== -1 && hours < 12) {
            hours = parseInt(hours) + 12;
          }

          response = hours + ':' + minutes + (response.length == 3 ? ':' + response[2] : '');
          return response;
        }
      }, {
        key: "getMinutes",
        value: function getMinutes(time) {
          var splitTime = time.split(':');
          var minutes = splitTime[0] * 60 + splitTime[1];
          return minutes;
        }
      }, {
        key: "getSeconds",
        value: function getSeconds(time) {
          var splitTime = time.split(':');
          var seconds = this.getMinutes(time) * 60 + (splitTime.length === 3 ? splitTime[2] : 0);
          return seconds;
        }
      }]);

      return AssetListComponent;
    }();

    AssetListComponent.ɵfac = function AssetListComponent_Factory(t) {
      return new (t || AssetListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_5__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_6__["ValidationService"]));
    };

    AssetListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: AssetListComponent,
      selectors: [["app-asset-list"]],
      inputs: {
        Parent: "Parent",
        Drops: "Drops",
        SelectedAssets: "SelectedAssets",
        UoM: "UoM",
        IsSelectedMT: "IsSelectedMT"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 5,
      vars: 3,
      consts: [[3, "formGroup"], ["class", "pa bg-white z-index5 loading-wrapper left0 top0", 4, "ngIf"], [1, "row"], [1, "col-sm-12"], ["class", "row mt15 pl15 text-color-b", "formArrayName", "Assets", 4, "ngIf"], [1, "pa", "bg-white", "z-index5", "loading-wrapper", "left0", "top0"], [1, "spinner-dashboard", "pa"], ["formArrayName", "Assets", 1, "row", "mt15", "pl15", "text-color-b"], [1, "w-100", "border-b"], [1, "row", "col-sm-12"], ["width", "100%", "cellspacing", "2"], [1, "f-bold"], ["width", "17%", "valign", "top", 1, "pt5", "pb5", "pr5"], ["width", "15%", "valign", "top", 1, "pt5", "pb5", "pr5"], ["width", "10%", "valign", "top", "class", "pt5 pb5 pr5", 4, "ngIf"], ["width", "12%", "valign", "top", "class", "pt5 pb5 pr5", 4, "ngIf"], ["width", "4%", "valign", "top", 1, "pt5", "pb5"], [4, "ngFor", "ngForOf"], ["width", "10%", "valign", "top", 1, "pt5", "pb5", "pr5"], ["width", "12%", "valign", "top", 1, "pt5", "pb5", "pr5"], [1, "row", "col-sm-12", 3, "formGroupName"], ["type", "text", "name", "AssetName", "formControlName", "AssetName", "class", "form-control", "placeholder", "Asset Name", 4, "ngIf"], ["class", "color-maroon", 4, "ngIf"], ["class", "ml5", 4, "ngIf"], ["type", "hidden", "name", "AssetName", "formControlName", "AssetName", 4, "ngIf"], [1, "input-group", 3, "ngClass"], ["type", "text", "name", "DropGallons", "formControlName", "DropGallons", "placeholder", "Quantity", 1, "form-control", 3, "disabled", "input"], [1, "input-group-append"], ["id", "basic-addon2", 1, "input-group-text", "fs11"], ["type", "text", "name", "StartTime", "formControlName", "StartTime", "placeholder", "Start Time", "myTimePicker", "", 1, "form-control", "pr", 3, "timeSmallerThanOrEqualTo", "format", "onTimeChange", "blur"], ["type", "text", "name", "EndTime", "formControlName", "EndTime", "placeholder", "End Time", "myTimePicker", "", 1, "form-control", "pr", 3, "timeGreaterThanOrEqualTo", "format", "onTimeChange", "blur"], [4, "ngIf"], ["class", "fa fa-trash-alt ml10 color-maroon mt10", 3, "click", 4, "ngIf"], ["type", "text", "name", "AssetName", "formControlName", "AssetName", "placeholder", "Asset Name", 1, "form-control"], [1, "color-maroon"], [1, "ml5"], ["type", "hidden", "name", "AssetName", "formControlName", "AssetName"], ["type", "text", "formControlName", "PreDip", "placeholder", "Pre Dip", 1, "form-control", 3, "ngClass"], ["type", "text", "formControlName", "PostDip", "placeholder", "Post Dip", 1, "form-control", 3, "ngClass"], ["formControlName", "TankScaleMeasurement", 1, "form-control"], ["selected", "", 3, "value"], [3, "value", 4, "ngFor", "ngForOf"], [3, "value"], ["selected", "", 3, "value", 4, "ngIf"], [1, "fa", "fa-trash-alt", "ml10", "color-maroon", "mt10", 3, "click"]],
      template: function AssetListComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AssetListComponent_div_1_Template, 2, 0, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, AssetListComponent_div_4_Template, 21, 4, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.Parent);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsCalculating);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.Parent.get("Assets")["controls"].length > 0);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgClass"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_8__["TimePicker"], _directives_time_smaller_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_9__["TimeSmallerThanOrEqualToValidator"], _directives_time_greater_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_10__["TimeGreaterThanOrEqualToValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_x"]],
      styles: [".hide-dip-data-controls[_ngcontent-%COMP%] {\r\n    display: none;\r\n}\r\n.text-color-b[_ngcontent-%COMP%] {\r\n    color: #212529;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS9hc3NldC1saXN0L2Fzc2V0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvaW52b2ljZS9hc3NldC1saXN0L2Fzc2V0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uaGlkZS1kaXAtZGF0YS1jb250cm9scyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi50ZXh0LWNvbG9yLWIge1xyXG4gICAgY29sb3I6ICMyMTI1Mjk7XHJcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AssetListComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-asset-list',
          templateUrl: './asset-list.component.html',
          styleUrls: ['./asset-list.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_5__["InvoiceService"]
        }, {
          type: src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_6__["ValidationService"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Drops: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        SelectedAssets: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        UoM: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        IsSelectedMT: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/bdr-detail/bdr-detail.component.ts": function srcAppInvoiceBdrDetailBdrDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BdrDetailComponent", function () {
      return BdrDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var ng_sidebar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ng-sidebar */
    "./node_modules/ng-sidebar/__ivy_ngcc__/lib_esmodule/index.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../directives/myDateTimePicker */
    "./src/app/directives/myDateTimePicker.ts");

    function BdrDetailComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_15_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid Time Format ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BdrDetailComponent_div_15_span_1_Template, 2, 0, "span", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.BdrDetailForm.get("PumpingStartTime").errors.pattern);
      }
    }

    function BdrDetailComponent_div_22_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid Time Format ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BdrDetailComponent_div_22_span_1_Template, 2, 0, "span", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.BdrDetailForm.get("PumpingStopTime").errors.pattern);
      }
    }

    function BdrDetailComponent_div_45_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 52);
      }
    }

    function BdrDetailComponent_div_46_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_51_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 52);
      }
    }

    function BdrDetailComponent_div_52_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_57_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 52);
      }
    }

    function BdrDetailComponent_div_58_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_64_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 52);
      }
    }

    function BdrDetailComponent_div_65_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_70_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 52);
      }
    }

    function BdrDetailComponent_div_71_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_77_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_div_82_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Invalid value ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BdrDetailComponent_button_97_Template(rf, ctx) {
      if (rf & 1) {
        var _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BdrDetailComponent_button_97_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);

          var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r19.onBdrDetailAdd();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Add");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx_r15.BdrDetailForm.invalid);
      }
    }

    function BdrDetailComponent_button_98_Template(rf, ctx) {
      if (rf & 1) {
        var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BdrDetailComponent_button_98_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r22);

          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r21.onBdrDetailUpdate();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Update");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var BdrDetailComponent = /*#__PURE__*/function () {
      function BdrDetailComponent(fb, route) {
        _classCallCheck(this, BdrDetailComponent);

        this.fb = fb;
        this.route = route;
        this._opened = false;
        this._animate = true;
        this._loading = false;
        this._positionNum = 1;
        this._POSITIONS = ['left', 'right', 'top', 'bottom'];
        this.EditIndex = -1;
        this.onBdrDetailsAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBdrDetailsUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(BdrDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.BdrDetailForm = this.buildForm();
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {}
      }, {
        key: "toggleOpen",
        value: function toggleOpen(shouldOpen, event) {
          this._opened = shouldOpen;

          if (shouldOpen) {
            if (event != null) {
              this.EditIndex = event.index;
              this.BdrDetailForm.patchValue(event.bdrDetails);
            }
          } else {
            this.BdrDetailForm.reset();
            this.EditIndex = -1;
          }
        }
      }, {
        key: "onBdrDetailAdd",
        value: function onBdrDetailAdd() {
          this.BdrDetailForm.markAllAsTouched();

          if (this.BdrDetailForm.valid) {
            this.onBdrDetailsAdded.emit(this.BdrDetailForm.value);
            this.toggleOpen(false, null);
          } else {
            this.BdrDetailForm.markAllAsTouched();
          }
        }
      }, {
        key: "onBdrDetailUpdate",
        value: function onBdrDetailUpdate() {
          this.BdrDetailForm.markAllAsTouched();

          if (this.BdrDetailForm.valid) {
            var eventData = {
              bdrDetail: this.BdrDetailForm.value,
              index: this.EditIndex
            };
            this.onBdrDetailsUpdated.emit(eventData);
            this.toggleOpen(false, null);
            this.EditIndex = -1;
          } else {
            this.BdrDetailForm.markAllAsTouched();
          }
        }
      }, {
        key: "onBdrCancel",
        value: function onBdrCancel() {
          this.BdrDetailForm.reset();
          this.toggleOpen(false, null);
        }
      }, {
        key: "isInvalid",
        value: function isInvalid(name) {
          var result = this.BdrDetailForm.get(name).invalid && (this.BdrDetailForm.get(name).dirty || this.BdrDetailForm.get(name).touched);
          return result;
        }
      }, {
        key: "isRequired",
        value: function isRequired(name) {
          return this.BdrDetailForm.get(name).errors.required;
        }
      }, {
        key: "buildForm",
        value: function buildForm() {
          return this.fb.group({
            Id: this.fb.control(''),
            PumpingStartTime: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\d):(?:[0-5]\d) ?([AaPp][Mm])/)]),
            PumpingStopTime: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\d):(?:[0-5]\d) ?([AaPp][Mm])/)]),
            OpenMeterReading: this.fb.control(''),
            CloseMeterReading: this.fb.control(''),
            MarpolSampleNumbers: this.fb.control(''),
            MVMarpolSampleNumbers: this.fb.control(''),
            Viscosity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.00001)]),
            SulphurContent: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.00001)]),
            FlashPoint: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.00001)]),
            DensityInVaccum: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.00001)]),
            ObservedTemperature: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.00001)]),
            MeasuredVolume: this.fb.control(''),
            StandardVolume: this.fb.control(''),
            IsEngineerInvitedToWitnessSample: this.fb.control(''),
            IsNoticeToProtestIssued: this.fb.control('')
          });
        }
      }, {
        key: "setStandardVolume",
        value: function setStandardVolume() {
          var measuredVolume = this.BdrDetailForm.get('MeasuredVolume').value;
          this.BdrDetailForm.get('StandardVolume').setValue(measuredVolume);
        }
      }]);

      return BdrDetailComponent;
    }();

    BdrDetailComponent.ɵfac = function BdrDetailComponent_Factory(t) {
      return new (t || BdrDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]));
    };

    BdrDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: BdrDetailComponent,
      selectors: [["app-bdr-detail"]],
      outputs: {
        onBdrDetailsAdded: "onBdrDetailsAdded",
        onBdrDetailsUpdated: "onBdrDetailsUpdated"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 99,
      vars: 26,
      consts: [[1, "bdr-panel", 2, "height", "100vh", 3, "opened", "animate", "position", "openedChange"], [3, "click"], [1, "fa", "fa-close", "fs18"], ["class", "pa bg-white z-index5 loading-wrapper", 4, "ngIf"], [1, "pr30"], [1, "dib", "ml10", "mt10", "mb10"], [3, "formGroup"], [1, "row"], [1, "col-sm-4", "form-group"], ["type", "hidden", "placeholder", "Id", "formControlName", "Id"], ["for", "PumpingStartTime"], ["name", "PumpingStartTime", "formControlName", "PumpingStartTime", "myTimePicker", "", 1, "form-control", "timepicker", 3, "format", "onTimeChange"], ["class", "color-maroon", 4, "ngIf"], [1, "col-sm-8", "form-group"], ["for", "PumpingStopTime"], [1, "col-sm-8"], ["name", "PumpingStopTime", "formControlName", "PumpingStopTime", "myTimePicker", "", 1, "form-control", "timepicker", 3, "format", "onTimeChange"], ["for", "OpenMeterReading"], ["name", "OpenMeterReading", "formControlName", "OpenMeterReading", 1, "form-control"], ["for", "CloseMeterReading"], ["name", "CloseMeterReading", "formControlName", "CloseMeterReading", 1, "form-control"], ["for", "MarpolSampleNumbers"], ["name", "MarpolSampleNumbers", "formControlName", "MarpolSampleNumbers", 1, "form-control"], ["for", "MVMarpolSampleNumbers"], ["name", "MVMarpolSampleNumbers", "formControlName", "MVMarpolSampleNumbers", 1, "form-control"], ["for", "Viscosity"], ["type", "number", "name", "Viscosity", "formControlName", "Viscosity", 1, "form-control"], [4, "ngIf"], ["for", "SulphurContent"], ["type", "number", "name", "SulphurContent", "formControlName", "SulphurContent", 1, "form-control"], ["for", "FlashPoint"], ["type", "number", "name", "FlashPoint", "formControlName", "FlashPoint", 1, "form-control"], ["for", "DensityInVaccum"], ["name", "DensityInVaccum", "formControlName", "DensityInVaccum", 1, "form-control"], ["for", "ObservedTemperature"], ["type", "number", "name", "ObservedTemperature", "formControlName", "ObservedTemperature", 1, "form-control"], ["for", "MeasuredVolume"], ["name", "MeasuredVolume", "formControlName", "MeasuredVolume", 1, "form-control", 3, "input"], ["for", "StandardVolume"], ["name", "StandardVolume", "formControlName", "StandardVolume", 1, "form-control", 3, "readonly"], [1, "col-sm-12"], [1, "form-group", "form-check"], ["type", "checkbox", "id", "engineerinvite", "formControlName", "IsEngineerInvitedToWitnessSample", 1, "form-check-input", 3, "value"], ["for", "engineerinvite", 1, "form-check-label"], ["type", "checkbox", "id", "noticetoprotest", "formControlName", "IsNoticeToProtestIssued", 1, "form-check-input", 3, "value"], ["for", "noticetoprotest", 1, "form-check-label"], [1, "col-sm-12", "text-right"], ["type", "button", "value", "Cancel", 1, "btn", 3, "click"], ["type", "button", "class", "btn btn-primary btn-lg", 3, "disabled", "click", 4, "ngIf"], ["type", "button", "class", "btn btn-primary btn-lg", 3, "click", 4, "ngIf"], [1, "pa", "bg-white", "z-index5", "loading-wrapper"], [1, "spinner-dashboard", "pa"], [1, "color-maroon"], [1, "fs12", 2, "color", "red"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", 3, "disabled", "click"], ["type", "button", 1, "btn", "btn-primary", "btn-lg", 3, "click"], [1, "fa", "fa-edit"]],
      template: function BdrDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng-sidebar-container");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ng-sidebar", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("openedChange", function BdrDetailComponent_Template_ng_sidebar_openedChange_1_listener($event) {
            return ctx._opened = $event;
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BdrDetailComponent_Template_a_click_2_listener() {
            return ctx.toggleOpen(false, null);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "i", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, BdrDetailComponent_div_4_Template, 2, 0, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "content", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h3", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "BDN Details");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "input", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "label", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Delivery Pumping Start Time");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "input", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function BdrDetailComponent_Template_input_onTimeChange_14_listener($event) {
            return ctx.BdrDetailForm.get("PumpingStartTime").setValue($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, BdrDetailComponent_div_15_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "label", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "Delivery Pumping Completion Time");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "input", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function BdrDetailComponent_Template_input_onTimeChange_21_listener($event) {
            return ctx.BdrDetailForm.get("PumpingStopTime").setValue($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, BdrDetailComponent_div_22_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "label", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26, "Open Meter Reading");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](27, "input", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "label", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Close Meter Reading");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](31, "input", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "label", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, "MARPOL Sample Numbers");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](35, "input", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "label", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](38, "MV MARPOL Sample Numbers");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](39, "input", 24);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "label", 25);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](43, "Viscosity @ 50\xB0C (cST)");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](44, "input", 26);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](45, BdrDetailComponent_div_45_Template, 1, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](46, BdrDetailComponent_div_46_Template, 3, 0, "div", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](48, "label", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](49, "Sulfur Content (% m/m)");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "input", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](51, BdrDetailComponent_div_51_Template, 1, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](52, BdrDetailComponent_div_52_Template, 3, 0, "div", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](53, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](54, "label", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](55, "Flash Point (\xB0F/\xB0C)");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](56, "input", 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](57, BdrDetailComponent_div_57_Template, 1, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](58, BdrDetailComponent_div_58_Template, 3, 0, "div", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](59, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](60, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "label", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](62, "Density In Vacuum");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](63, "input", 33);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](64, BdrDetailComponent_div_64_Template, 1, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](65, BdrDetailComponent_div_65_Template, 3, 0, "div", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](66, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](67, "label", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](68, "Observed Temperature (\xB0F/\xB0C)");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](69, "input", 35);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](70, BdrDetailComponent_div_70_Template, 1, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](71, BdrDetailComponent_div_71_Template, 3, 0, "div", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](72, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](73, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](74, "label", 36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](75, "Measured Volume");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](76, "input", 37);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function BdrDetailComponent_Template_input_input_76_listener() {
            return ctx.setStandardVolume();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](77, BdrDetailComponent_div_77_Template, 3, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](78, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](79, "label", 38);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](80, "Standard Volume");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](81, "input", 39);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](82, BdrDetailComponent_div_82_Template, 3, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](83, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](84, "div", 40);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](85, "div", 41);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](86, "input", 42);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](87, "label", 43);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](88, "Chief Engineer invited to witness sample(s)?");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](89, "div", 40);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](90, "div", 41);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](91, "input", 44);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](92, "label", 45);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](93, "Notice to protest issued?");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](94, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](95, "div", 46);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](96, "input", 47);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BdrDetailComponent_Template_input_click_96_listener() {
            return ctx.onBdrCancel();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](97, BdrDetailComponent_button_97_Template, 2, 1, "button", 48);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](98, BdrDetailComponent_button_98_Template, 3, 0, "button", 49);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("opened", ctx._opened)("animate", ctx._animate)("position", ctx._POSITIONS[ctx._positionNum]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx._loading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.BdrDetailForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "hh:mm:ss A");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("PumpingStartTime"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "hh:mm:ss A");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("PumpingStopTime"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("Viscosity"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("Viscosity") && ctx.BdrDetailForm.get("Viscosity").invalid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("SulphurContent"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("SulphurContent") && ctx.BdrDetailForm.get("SulphurContent").invalid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("FlashPoint"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("FlashPoint") && ctx.BdrDetailForm.get("FlashPoint").invalid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("DensityInVaccum"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("DensityInVaccum") && ctx.BdrDetailForm.get("DensityInVaccum").invalid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("ObservedTemperature"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("ObservedTemperature") && ctx.BdrDetailForm.get("ObservedTemperature").invalid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("MeasuredVolume"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("StandardVolume"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx.IsEngineerInvitedToWitnessSample);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx.IsNoticeToProtestIssued);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex == 0 - 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex > 0 - 1);
        }
      },
      directives: [ng_sidebar__WEBPACK_IMPORTED_MODULE_3__["SidebarContainer"], ng_sidebar__WEBPACK_IMPORTED_MODULE_3__["Sidebar"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_5__["TimePicker"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NumberValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["CheckboxControlValueAccessor"]],
      styles: [".bdr-panel aside {\r\n    width: 50%\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS9iZHItZGV0YWlsL2Jkci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9pbnZvaWNlL2Jkci1kZXRhaWwvYmRyLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC5iZHItcGFuZWwgYXNpZGUge1xyXG4gICAgd2lkdGg6IDUwJVxyXG59XHJcbiJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BdrDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-bdr-detail',
          templateUrl: './bdr-detail.component.html',
          styleUrls: ['./bdr-detail.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
        }];
      }, {
        onBdrDetailsAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onBdrDetailsUpdated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/bdr-detail/show-bdr-detail.component.ts": function srcAppInvoiceBdrDetailShowBdrDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ShowBdrDetailComponent", function () {
      return ShowBdrDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function ShowBdrDetailComponent_div_0_Template(rf, ctx) {
      if (rf & 1) {
        var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "MARPOL Sample Numbers");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Viscosity");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Sulfur Content");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Flash Point");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Observed Temperature");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](33, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "a", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ShowBdrDetailComponent_div_0_Template_a_click_35_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2);

          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r1.editBdrDetail(ctx_r1.BdrDetails);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](36, "i", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "a", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ShowBdrDetailComponent_div_0_Template_a_click_37_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2);

          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r3.deleteBdr(ctx_r3.BdrDetails);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](38, "i", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](40, "input", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](41, "input", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](42, "input", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](43, "input", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](44, "input", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](45, "input", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](46, "input", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](47, "input", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](48, "input", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](49, "input", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "input", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](51, "input", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](52, "input", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](53, "input", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r0.Parent);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.BdrDetails.get("MarpolSampleNumbers").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.BdrDetails.get("Viscosity").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.BdrDetails.get("SulphurContent").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.BdrDetails.get("FlashPoint").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r0.BdrDetails.get("ObservedTemperature").value, "");
      }
    }

    var ShowBdrDetailComponent = /*#__PURE__*/function () {
      function ShowBdrDetailComponent() {
        _classCallCheck(this, ShowBdrDetailComponent);

        this.IsBDRAdded = false;
        this.OnBDREdit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnBDRDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(ShowBdrDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.BdrModel && change.BdrModel.currentValue) {
            var bdrDetails = change.BdrModel.currentValue;

            if (bdrDetails) {
              this.buildForm(bdrDetails, this.BdrDetails);
            }
          }
        }
      }, {
        key: "editBdrDetail",
        value: function editBdrDetail(event) {
          this.OnBDREdit.emit({
            bdrDetails: event.value,
            index: 1
          });
        }
      }, {
        key: "deleteBdr",
        value: function deleteBdr(bdrDetails) {
          Object.keys(bdrDetails.controls).forEach(function (field) {
            bdrDetails.removeControl(field);
          });
          this.IsBDRAdded = false;
          this.OnBDRDelete.emit();
        }
      }, {
        key: "buildForm",
        value: function buildForm(model, bdrDetailsFormGroup) {
          if (model != null && model != undefined) {
            for (var property in model) {
              bdrDetailsFormGroup.addControl(property, new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](model[property]));
            }

            this.IsBDRAdded = true;
          } else {
            this.IsBDRAdded = false;
          }
        }
      }, {
        key: "bdrDetailAdded",
        value: function bdrDetailAdded(eventData) {
          this.buildForm(eventData, this.BdrDetails);
        }
      }, {
        key: "bdrDetailUpdated",
        value: function bdrDetailUpdated(event) {
          this.BdrDetails.patchValue(event.bdrDetail);
        }
      }]);

      return ShowBdrDetailComponent;
    }();

    ShowBdrDetailComponent.ɵfac = function ShowBdrDetailComponent_Factory(t) {
      return new (t || ShowBdrDetailComponent)();
    };

    ShowBdrDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ShowBdrDetailComponent,
      selectors: [["app-show-bdr-detail"]],
      inputs: {
        Parent: "Parent",
        BdrDetails: "BdrDetails",
        BdrModel: "BdrModel"
      },
      outputs: {
        OnBDREdit: "OnBDREdit",
        OnBDRDelete: "OnBDRDelete"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 1,
      vars: 1,
      consts: [["class", "well border box-shadow mt-2", 3, "formGroup", 4, "ngIf"], [1, "well", "border", "box-shadow", "mt-2", 3, "formGroup"], [1, "row", "f-bold"], [1, "col-sm-3"], [1, "col-sm-1"], [1, "col-sm-2"], ["formGroupName", "BdrDetails"], [1, "row"], [3, "click"], [1, "fa", "fa-edit", "fs14"], [1, "fa", "fa-trash-alt", "ml10", "color-maroon"], ["type", "hidden", "formControlName", "PumpingStartTime"], ["type", "hidden", "formControlName", "PumpingStopTime"], ["type", "hidden", "formControlName", "OpenMeterReading"], ["type", "hidden", "formControlName", "CloseMeterReading"], ["type", "hidden", "formControlName", "MarpolSampleNumbers"], ["type", "hidden", "formControlName", "Viscosity"], ["type", "hidden", "formControlName", "SulphurContent"], ["type", "hidden", "formControlName", "FlashPoint"], ["type", "hidden", "formControlName", "DensityInVaccum"], ["type", "hidden", "formControlName", "ObservedTemperature"], ["type", "hidden", "formControlName", "MeasuredVolume"], ["type", "hidden", "formControlName", "StandardVolume"], ["type", "hidden", "formControlName", "IsEngineerInvitedToWitnessSample"], ["type", "hidden", "formControlName", "IsNoticeToProtestIssued"]],
      template: function ShowBdrDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, ShowBdrDetailComponent_div_0_Template, 54, 6, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsBDRAdded);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvYmRyLWRldGFpbC9zaG93LWJkci1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ShowBdrDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-show-bdr-detail',
          templateUrl: './show-bdr-detail.component.html',
          styleUrls: ['./show-bdr-detail.component.css']
        }]
      }], function () {
        return [];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        BdrDetails: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        BdrModel: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        OnBDREdit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnBDRDelete: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/bol-detail/bol-detail.component.ts": function srcAppInvoiceBolDetailBolDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BolDetailComponent", function () {
      return BolDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/declarations.module */
    "./src/app/declarations.module.ts");
    /* harmony import */


    var src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/app.enum */
    "./src/app/app.enum.ts");
    /* harmony import */


    var src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! src/app/app.constants */
    "./src/app/app.constants.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var _carrier_service_data_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../carrier/service/data.service */
    "./src/app/carrier/service/data.service.ts");
    /* harmony import */


    var src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/services/validation.service */
    "./src/app/services/validation.service.ts");
    /* harmony import */


    var ng_sidebar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ng-sidebar */
    "./node_modules/ng-sidebar/__ivy_ngcc__/lib_esmodule/index.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../../directives/myDateTimePicker */
    "./src/app/directives/myDateTimePicker.ts");
    /* harmony import */


    var _directives_numberWithDecimal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../../directives/numberWithDecimal */
    "./src/app/directives/numberWithDecimal.ts");
    /* harmony import */


    var _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../../directives/required-if-true.directive */
    "./src/app/directives/required-if-true.directive.ts");

    function BolDetailComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_div_16_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_div_16_div_1_Template, 2, 0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isRequired("BolNumber"));
      }
    }

    function BolDetailComponent_div_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_span_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_div_29_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_div_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_div_29_div_1_Template, 2, 0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r4.isRequired("BadgeNumber"));
      }
    }

    function BolDetailComponent_ng_container_33_span_18_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_18_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_ng_container_33_span_18_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, BolDetailComponent_ng_container_33_span_18_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("GrossQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("GrossQuantity").errors.pattern);
      }
    }

    function BolDetailComponent_ng_container_33_span_26_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_26_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_26_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_ng_container_33_span_26_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, BolDetailComponent_ng_container_33_span_26_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("NetQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("NetQuantity").errors.pattern);
      }
    }

    function BolDetailComponent_ng_container_33_span_34_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_34_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_34_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Quantity should not be greater than net/gross quantity. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_span_34_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_ng_container_33_span_34_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, BolDetailComponent_ng_container_33_span_34_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, BolDetailComponent_ng_container_33_span_34_span_3_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("DeliveredQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("DeliveredQuantity").errors.pattern);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("DeliveredQuantity").errors.maxQuantity);
      }
    }

    function BolDetailComponent_ng_container_33_div_36_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Terminal Price:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"]("", product_r10.get("TerminalPrice").value, " ", ctx_r16.Currency, "");
      }
    }

    function BolDetailComponent_ng_container_33_div_37_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_div_37_li_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Enter minimum 3 characters to search.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_div_37_li_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Something went wrong.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_div_37_li_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Loading...");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_div_37_li_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "No terminal found.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolDetailComponent_ng_container_33_div_37_li_11_Template(rf, ctx) {
      if (rf & 1) {
        var _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolDetailComponent_ng_container_33_div_37_li_11_Template_li_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r38);

          var terminal_r35 = ctx.$implicit;

          var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

          var ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r36.setTerminalName(product_r10, terminal_r35);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var terminal_r35 = ctx.$implicit;

        var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("selected", terminal_r35.Name == product_r10.get("TerminalName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](terminal_r35.Name);
      }
    }

    function BolDetailComponent_ng_container_33_div_37_Template(rf, ctx) {
      if (rf & 1) {
        var _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, BolDetailComponent_ng_container_33_div_37_div_1_Template, 2, 0, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Terminal:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "input", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function BolDetailComponent_ng_container_33_div_37_Template_input_input_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r41);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](6);

          var ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r40.onTerminalSearched($event, _r12.value);
        })("blur", function BolDetailComponent_ng_container_33_div_37_Template_input_blur_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r41);

          var product_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](6);

          var ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r42.validateTerminal(product_r10, $event, _r12.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "ul", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, BolDetailComponent_ng_container_33_div_37_li_7_Template, 3, 0, "li", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, BolDetailComponent_ng_container_33_div_37_li_8_Template, 3, 0, "li", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, BolDetailComponent_ng_container_33_div_37_li_9_Template, 3, 0, "li", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, BolDetailComponent_ng_container_33_div_37_li_10_Template, 3, 0, "li", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, BolDetailComponent_ng_container_33_div_37_li_11_Template, 2, 2, "li", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r17._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r17.minCharRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r17.searchError);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r17._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r17.noTerminalFound && !ctx_r17.minCharRequired && !ctx_r17.searchError && !ctx_r17._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r17.Terminals);
      }
    }

    function BolDetailComponent_ng_container_33_Template(rf, ctx) {
      if (rf & 1) {
        var _r45 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "input", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "input", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 31, 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "input", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "span", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "label", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Gross Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "input", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function BolDetailComponent_ng_container_33_Template_input_input_15_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r45);

          var product_r10 = ctx.$implicit;

          var ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r44.setDeliveredQuantValidation([$event.target.value, product_r10.get("NetQuantity").value], product_r10.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, BolDetailComponent_ng_container_33_span_18_Template, 3, 2, "span", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "label", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Net Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "input", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function BolDetailComponent_ng_container_33_Template_input_input_23_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r45);

          var product_r10 = ctx.$implicit;

          var ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r46.setDeliveredQuantValidation([product_r10.get("GrossQuantity").value, $event.target.value], product_r10.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](26, BolDetailComponent_ng_container_33_span_26_Template, 3, 2, "span", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "label", 45);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, "Delivered Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "input", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function BolDetailComponent_ng_container_33_Template_input_input_31_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r45);

          var product_r10 = ctx.$implicit;

          var ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r47.setDeliveredQuantValidation([product_r10.get("GrossQuantity").value, product_r10.get("NetQuantity").value], product_r10.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](34, BolDetailComponent_ng_container_33_span_34_Template, 4, 3, "span", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](36, BolDetailComponent_ng_container_33_div_36_Template, 5, 2, "div", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, BolDetailComponent_ng_container_33_div_37_Template, 12, 6, "div", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var product_r10 = ctx.$implicit;
        var i_r11 = ctx.index;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("id", "bolProduct_", i_r11, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r10.get("ProductName").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r10.get("NetQuantity").value > 0 || product_r10.get("DeliveredQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r10.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("GrossQuantity").errors && (product_r10.get("GrossQuantity").touched || product_r10.get("GrossQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r10.get("GrossQuantity").value > 0 || product_r10.get("DeliveredQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r10.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("NetQuantity").errors && (product_r10.get("NetQuantity").touched || product_r10.get("NetQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r10.get("NetQuantity").value > 0 || product_r10.get("GrossQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r10.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("DeliveredQuantity").errors && (product_r10.get("DeliveredQuantity").touched || product_r10.get("DeliveredQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("TerminalId").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r10.get("TerminalId").value > 0);
      }
    }

    function BolDetailComponent_button_37_Template(rf, ctx) {
      if (rf & 1) {
        var _r49 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolDetailComponent_button_37_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r49);

          var ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r48.addBolDetail();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Add");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx_r6.BolDetailForm.invalid);
      }
    }

    function BolDetailComponent_button_38_Template(rf, ctx) {
      if (rf & 1) {
        var _r51 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolDetailComponent_button_38_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r51);

          var ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r50.updatedBolDetail();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Update");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx_r7.BolDetailForm.invalid);
      }
    }

    var BolDetailComponent = /*#__PURE__*/function () {
      function BolDetailComponent(fb, route, invoiceService, dataService, validationService) {
        _classCallCheck(this, BolDetailComponent);

        this.fb = fb;
        this.route = route;
        this.invoiceService = invoiceService;
        this.dataService = dataService;
        this.validationService = validationService;
        this._opened = false;
        this._animate = true;
        this._loading = false;
        this._loadingTerminals = false;
        this._positionNum = 1;
        this._POSITIONS = ['left', 'right', 'top', 'bottom'];
        this.Terminals = [];
        this.minCharRequired = false;
        this.searchError = false;
        this.noTerminalFound = false;
        this._dropsForm = [];
        this.EditIndex = -1;
        this.bolnumberslist = [];
        this.isBadgeMandatory = false;
        this.onBolDetailAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBolDetailUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.TerminalList = {};
      }

      _createClass(BolDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);
          this.BolDetailForm = this.buildForm();

          if (this.BolDetailForm) {
            if (this.isBadgeMandatory) {
              this.BolDetailForm.controls['BadgeNumber'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]);
            } else {
              this.BolDetailForm.controls['BadgeNumber'].clearValidators();
            }
          }
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.IsBadgeMandatory && change.IsBadgeMandatory.currentValue != null) {
            this.isBadgeMandatory = change.IsBadgeMandatory.currentValue;

            if (this.BolDetailForm) {
              if (this.isBadgeMandatory) {
                this.BolDetailForm.controls['BadgeNumber'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]);
              } else {
                this.BolDetailForm.controls['BadgeNumber'].clearValidators();
              }
            }
          }
        }
      }, {
        key: "initDrops",
        value: function initDrops(_dropsForm, _drops) {
          var _this70 = this;

          this._dropsForm = _dropsForm; //this.setUoM(_drops);

          this.setCurrency(_drops); // this.setProductValidation(_drops);

          if (_drops != null && _drops != undefined) {
            _drops.forEach(function (x) {
              if (_this70.TerminalList[x.FuelTypeId] == undefined || _this70.TerminalList[x.FuelTypeId] == null) {
                _this70.TerminalList[x.FuelTypeId] = [];
              }

              _this70.loadTerminals(x.OrderId, x.FuelTypeId);
            });

            this.Drops = _drops;
            this.setProductsToFormArray();
          }
        }
      }, {
        key: "setUoM",
        value: function setUoM(uom, jobCountryId, productForm) {
          if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].MetricTons || uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Barrels) {
            if (jobCountryId == 1 || jobCountryId == 4) {
              productForm.get('UOM').setValue("Gallons");
            } else if (jobCountryId == 2) {
              productForm.get('UOM').setValue("Litres");
            }
          } else {
            if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Gallons) {
              productForm.get('UOM').setValue("Gallons");
            } else if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Litres) {
              productForm.get('UOM').setValue("Litres");
            }
          }
        } //setUoM(drops: DropDetailModel[]): void {
        //    debugger;
        //    //None =0;
        //    //Gallons = 1,
        //    //Litres = 2
        //    if (drops != null && drops != undefined) {
        //        var uom = drops.map(item => parseInt(item.UoM));
        //        if (uom[0] == UoM.Barrels || uom[0] == UoM.MetricTons) {
        //            if (drops[0].JobCountryId == 1) {
        //                this.UoM = "Gallons";
        //            }
        //            else if (drops[0].JobCountryId == 2) {
        //                this.UoM = "Litres";
        //            }
        //        }
        //        else {
        //            if (uom[0] == 1) {
        //                this.UoM = "Gallons";
        //            }
        //            else if (uom[0] == 2) {
        //                this.UoM = "Litres";
        //            }
        //        }
        //        //else if (UoM[0] == 3) {
        //        //    this.UoM = "Barrels";
        //        //}
        //        //else if (UoM[0] == 4) {
        //        //    this.UoM = "MT";
        //        //}
        //    }
        //}

      }, {
        key: "setCurrency",
        value: function setCurrency(drops) {
          if (drops != null && drops != undefined) {
            var currency = drops.map(function (item) {
              return parseInt(item.Currency);
            });
          }

          if (currency[0] == 1) {
            this.Currency = "USD";
          } else if (currency[0] == 2) {
            this.Currency = "CAD";
          }
        }
      }, {
        key: "setProductsToFormArray",
        value: function setProductsToFormArray() {
          var prodArray = this.BolDetailForm.get('Products');

          if (prodArray != undefined && prodArray != null) {
            prodArray.clear();
            var currentObj = this;
            this.Drops.forEach(function (elem, idx) {
              prodArray.push(currentObj.buildProduct(elem));

              if (idx == currentObj.Drops.length - 1) {
                currentObj.setPrice();
              }
            });
          }
        }
      }, {
        key: "setPrice",
        value: function setPrice() {
          var prodArray = this.BolDetailForm.get('Products');
          var currentObj = this;
          var date = new Date();
          prodArray.controls.forEach(function (_control, index) {
            if (_control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]) {
              if (_control.controls['TerminalId'].value > 0 && _control.controls['TerminalId'].value && _control.controls['OrderId'].value) {
                var control = _control;
                currentObj.invoiceService.getTerminalPriceById(control.controls['TerminalId'].value, control.controls['OrderId'].value, currentObj._dropsForm[index].DropDate || +date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear()).subscribe(function (data) {
                  control.controls['TerminalPrice'].setValue(data);
                });
              }
            }
          });
        }
      }, {
        key: "toggleOpen",
        value: function toggleOpen(shouldOpen, event) {
          this._opened = shouldOpen;

          if (shouldOpen) {
            if (event != null) {
              var bolFormData = this.getBolFormData(event.bolDetail);
              this.setProductsToFormArray();
              this.BolDetailForm.patchValue(bolFormData);
              this.EditIndex = event.index;
            }
          } else {
            this.BolDetailForm.reset();
            this.BolDetailForm.get('Products').clear();
            this.EditIndex = -1;
          }
        }
      }, {
        key: "getBolFormData",
        value: function getBolFormData(bolDetail) {
          var _products = [];
          bolDetail.Products.forEach(function (x) {
            _products.push({
              ProductId: x.ProductId,
              ProductName: x.ProductName,
              GrossQuantity: x.GrossQuantity,
              NetQuantity: x.NetQuantity,
              TerminalId: x.TerminalId,
              TerminalName: x.TerminalName,
              DeliveredQuantity: x.DeliveredQuantity
            });
          });
          var data = {
            BolNumber: bolDetail.BolNumber,
            BadgeNumber: bolDetail.BadgeNumber,
            LiftDate: bolDetail.LiftDate,
            Products: _products
          };
          return data;
        }
      }, {
        key: "buildForm",
        value: function buildForm() {
          return this.fb.group({
            Id: this.fb.control(''),
            BolNumber: this.fb.control('', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required),
            LiftDate: this.fb.control('', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required),
            BadgeNumber: this.fb.control(''),
            Products: this.fb.array([])
          });
        }
      }, {
        key: "buildProduct",
        value: function buildProduct(model) {
          var formG = this.fb.group({
            ProductId: this.fb.control(model.FuelTypeId),
            ProductName: this.fb.control(model.FuelTypeName),
            NetQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)]),
            GrossQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)]),
            TerminalId: this.fb.control(model.TerminalId),
            TerminalName: this.fb.control(model.TerminalName, [this.terminalConditionallyRequiredValidator.bind(this)]),
            TerminalPrice: this.fb.control(null),
            DropDate: this.fb.control(model.DropDate),
            OrderId: this.fb.control(model.OrderId),
            Image: this.fb.control(''),
            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),
            UOM: this.fb.control(''),
            DeliveredQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)])
          });
          this.setUoM(model.UoM, model.JobCountryId, formG);
          return formG;
        }
      }, {
        key: "terminalConditionallyRequiredValidator",
        value: function terminalConditionallyRequiredValidator(formControl) {
          if (!formControl.parent) {
            return null;
          }

          if (formControl.parent.get('TerminalId').value) {
            return _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required(formControl);
          }

          return null;
        }
      }, {
        key: "cancelBolDetail",
        value: function cancelBolDetail() {
          this.BolDetailForm.reset();
          this.toggleOpen(false, null);
        }
      }, {
        key: "addBolDetail",
        value: function addBolDetail() {
          this.BolDetailForm.markAllAsTouched();
          var bolnumber = this.BolDetailForm.get('BolNumber').value.trim().toLowerCase();
          var products = this.BolDetailForm.get('Products').value;
          var prodNumber = products.length;
          var count = 0;
          products.forEach(function (product) {
            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {
              count++;
            }
          });

          if (this.isBadgeMandatory && !this.BolDetailForm.get('BadgeNumber').value.trim()) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Please enter badge number", undefined, undefined);
            return;
          } //means no bol details entered


          if (prodNumber == count) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered, gross and net quantity is required for atleast one product", undefined, undefined);
            return;
          }

          var isFormValidInfo = this.validateForm();

          if (isFormValidInfo.length > 0) {
            isFormValidInfo.forEach(function (isFormValidInfo) {
              if (isFormValidInfo.isFormValid == false) {
                src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered/gross/net quantity quantity is missing for product " + isFormValidInfo.ProductName, undefined, undefined);
              }
            });
          } else if (this.BolDetailForm.valid && isFormValidInfo.length == 0 && prodNumber != count) {
            if (this.bolnumberslist.indexOf(bolnumber) != -1) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("You are trying to enter duplicate BOL Numbers", undefined, undefined);
            } else {
              this.onBolDetailAdded.emit(this.BolDetailForm.value);
              this.toggleOpen(false, null);
            }
          } else {
            this.BolDetailForm.markAllAsTouched();
          }
        }
      }, {
        key: "updatedBolDetail",
        value: function updatedBolDetail() {
          this.BolDetailForm.markAllAsTouched();
          var updatedBolnumber = this.BolDetailForm.get('BolNumber').value.trim().toLowerCase();
          var isFormValidInfo = this.validateForm();

          if (isFormValidInfo.length > 0) {
            isFormValidInfo.forEach(function (isFormValidInfo) {
              if (isFormValidInfo.isFormValid == false) {
                src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Gross or Net quantity is missing for Product " + isFormValidInfo.ProductName, undefined, undefined);
              }
            });
          }

          if (this.BolDetailForm.valid && isFormValidInfo.length == 0) {
            if (this.curBolNumber != updatedBolnumber && this.bolnumberslist.indexOf(updatedBolnumber) != -1) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("You are trying to add duplicate Bol numbers", undefined, undefined);
            } else {
              var eventData = {
                bolDetail: this.BolDetailForm.value,
                index: this.EditIndex
              };
              this.onBolDetailUpdated.emit(eventData);
              this.toggleOpen(false, null);
              this.EditIndex = -1;
              this.bolnumberslist.splice(this.bolnumberslist.indexOf(this.curBolNumber), 1);
              this.bolnumberslist.push(updatedBolnumber);
            }
          }
        }
      }, {
        key: "isInvalid",
        value: function isInvalid(name) {
          var result = this.BolDetailForm.get(name).invalid && (this.BolDetailForm.get(name).dirty || this.BolDetailForm.get(name).touched);
          return result;
        }
      }, {
        key: "isRequired",
        value: function isRequired(name) {
          return this.BolDetailForm.get(name).errors.required;
        }
      }, {
        key: "loadTerminals",
        value: function loadTerminals(_orderId, _fuelTypeId) {
          var _this71 = this;

          if (this.TerminalList[_fuelTypeId] == undefined || this.TerminalList[_fuelTypeId] == null || this.TerminalList[_fuelTypeId].length == 0) {
            this._loadingTerminals = true;
            this.invoiceService.getTerminals(_orderId).subscribe(function (data) {
              _this71._loadingTerminals = false;
              _this71.TerminalList[_fuelTypeId] = data;
            });
          }
        }
      }, {
        key: "onTerminalSearched",
        value: function onTerminalSearched(event, orderId) {
          var _this72 = this;

          var keyword = event.target.value.toLowerCase();
          var searchKeyword$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(keyword);
          searchKeyword$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(2000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (data) {
            _this72._loadingTerminals = true;

            if (data.length < 3) {
              _this72.minCharRequired = true;
            } else {
              _this72.minCharRequired = false;
            }
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (term) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["iif"])(function () {
              return term.length < 3;
            }, Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])([]), _this72.invoiceService.getTerminals(orderId, term).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () {
              _this72._loadingTerminals = false;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function () {
              _this72._loadingTerminals = false;
              _this72.searchError = true;
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])([]);
            })));
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () {
            return _this72._loadingTerminals = false;
          })).subscribe(function (data) {
            if (data.length === 0) {
              _this72.noTerminalFound = true;
            } else {
              _this72.noTerminalFound = false;
            }

            _this72.Terminals = data;
            _this72._loadingTerminals = false;
          }, function (err) {
            console.log(err);
          });
        }
      }, {
        key: "getAddedProductDetails",
        value: function getAddedProductDetails(drops) {
          if (drops != null || drops != undefined) {
            var dropdates = drops.map(function (item) {
              return item.DropDate;
            });

            if (dropdates.length > 0 && dropdates.indexOf(null) == -1 && dropdates != undefined && dropdates.indexOf("") == -1 && dropdates.indexOf(undefined) == -1) {
              this.findMinDate(dropdates);
            }
          }
        }
      }, {
        key: "findMinDate",
        value: function findMinDate(dropdates) {
          var dates = [];
          dropdates.forEach(function (dropdate) {
            var date = new Date(dropdate);
            dates.push(date);
          }); //var maximumDate = new Date(Math.max.apply(null, dates)); 

          var minimumDate = new Date(Math.min.apply(null, dates));
          var minDate = minimumDate.toDateString();
          var date = this.getFormattedDate(minDate);

          if (date != null || date != undefined) {
            this.BolDetailForm.get('LiftDate').patchValue(date);
          }
        }
      }, {
        key: "getFormattedDate",
        value: function getFormattedDate(date) {
          var dt = new Date(date);
          var year = dt.getFullYear();
          var month = (1 + dt.getMonth()).toString();
          month = month.length > 1 ? month : '0' + month;
          var day = dt.getDate().toString();
          day = day.length > 1 ? day : '0' + day;
          return month + '/' + day + '/' + year;
        }
      }, {
        key: "setTerminalName",
        value: function setTerminalName(product, terminal) {
          if (terminal.Name) {
            product.controls['TerminalName'].patchValue(terminal.Name);
            product.controls['TerminalId'].patchValue(terminal.Id);
            this.setPrice();
            this.dataService.setDropTerminalSelectedSubject(product.get('OrderId').value);
          }
        }
      }, {
        key: "validateTerminal",
        value: function validateTerminal(product, event, orderId) {
          if (this.Terminals.length && !(this.Terminals.filter(function (e) {
            return e.Name === product.controls['TerminalName'].value;
          }).length > 0) || this.noTerminalFound) {
            product.controls['TerminalName'].patchValue('');
          }
        } //getAddedLiftDetails(liftdetails: any) {
        //    var newProds = [];
        //    liftdetails.map(item => item.Products.map(prod => newProds.push(prod)));
        //    this.clearValidators(newProds);
        //}
        //clearValidators(products: any[]) {
        //    var _bols = this.BolDetailForm.get('Products') as FormArray;
        //    products.forEach(function (x) {
        //        var _group = _bols.controls.find(function (y) {
        //            return y.get('ProductId').value == x.ProductId;
        //        });
        //        if (_group != undefined && _group != null) {
        //            _group.get('NetQuantity').clearValidators();
        //            _group.get('NetQuantity').updateValueAndValidity();
        //            _group.get('GrossQuantity').clearValidators();
        //            _group.get('GrossQuantity').updateValueAndValidity();
        //        }
        //    });
        //}

      }, {
        key: "validateForm",
        value: function validateForm() {
          var isFormValid = true;
          var invalidFormInfo = [];
          var products = this.BolDetailForm.get('Products').value;
          products.forEach(function (product) {
            if ((product.NetQuantity > 0 || product.GrossQuantity > 0 || product.DeliveredQuantity > 0) && !(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {
              isFormValid = false;
              invalidFormInfo.push({
                isFormValid: isFormValid,
                ProductName: product.ProductName
              });
            }
          });
          return invalidFormInfo;
        } // bol number duplicate validation 

      }, {
        key: "getDeletedBol",
        value: function getDeletedBol(items) {
          this.bolnumberslist.length = 0;
          this.bolnumberslist = items.map(function (item) {
            return item.BolNumber.trim().toLowerCase();
          });
        }
      }, {
        key: "getEditedBol",
        value: function getEditedBol(items) {
          this.curBolNumber = items.BolNumber.trim().toLowerCase(); //this.bolnumberslist.push(this.curBolNumber);
        }
      }, {
        key: "getAddedBols",
        value: function getAddedBols(items) {
          var bolnumbers = items.map(function (item) {
            return item.BolNumber;
          });

          if (bolnumbers.length > 0 && bolnumbers[0] != null) {
            this.bolnumberslist = items.map(function (item) {
              return item.BolNumber.trim().toLowerCase();
            });
          } //this.bolnumberslist = items.map(item => item.BolNumber.trim().toLowerCase());

        }
      }, {
        key: "setDeliveredQuantValidation",
        value: function setDeliveredQuantValidation(arr, control) {
          var max = Math.max.apply(Math, _toConsumableArray(arr));
          if (control.value > max) this.validationService.addError(control, 'maxQuantity');else this.validationService.removeError(control, 'maxQuantity');
        }
      }]);

      return BolDetailComponent;
    }();

    BolDetailComponent.ɵfac = function BolDetailComponent_Factory(t) {
      return new (t || BolDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_8__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_carrier_service_data_service__WEBPACK_IMPORTED_MODULE_9__["DataService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__["ValidationService"]));
    };

    BolDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: BolDetailComponent,
      selectors: [["app-bol-detail"]],
      inputs: {
        IsBadgeMandatory: "IsBadgeMandatory"
      },
      outputs: {
        onBolDetailAdded: "onBolDetailAdded",
        onBolDetailUpdated: "onBolDetailUpdated"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 39,
      vars: 14,
      consts: [[2, "height", "100vh", 3, "opened", "animate", "position", "openedChange"], [3, "click"], [1, "fa", "fa-close", "fs18"], ["class", "pa bg-white z-index5 loading-wrapper", 4, "ngIf"], [1, "pr30"], [1, "dib", "ml10", "mt10", "mb10"], [1, "row", 3, "formGroup"], [1, "col-sm-4", "form-group"], ["type", "hidden", "placeholder", "Id", "formControlName", "Id"], ["for", "BolNumber"], [1, "color-maroon"], ["name", "BolNumber", "formControlName", "BolNumber", 1, "form-control"], ["class", "color-maroon", 4, "ngIf"], ["for", "LiftDate"], ["name", "LiftDate", "formControlName", "LiftDate", "id", "bolDate", "myDatePicker", "", 1, "form-control", 3, "format", "onDateChange"], ["for", "BadgeNumber"], ["name", "BadgeNumber", "formControlName", "BadgeNumber", 1, "form-control", 3, "required"], [1, "col-sm-12"], [1, "border-b", "mb15"], ["formArrayName", "Products", 1, "col-sm-12"], [4, "ngFor", "ngForOf"], ["id", "bol_inner_button", 1, "col-sm-12", "text-right"], [1, "btn", "btn-lg", 3, "click"], ["class", "btn btn-primary btn-lg", 3, "disabled", "click", 4, "ngIf"], [1, "pa", "bg-white", "z-index5", "loading-wrapper"], [1, "spinner-dashboard", "pa"], [4, "ngIf"], [1, "row", 3, "formGroupName", "id"], [1, "col-sm-12", "form-group"], ["type", "hidden", "formControlName", "ProductId"], ["type", "hidden", "formControlName", "ProductName"], ["type", "hidden", "formControlName", "OrderId"], ["productOrderId", ""], ["type", "hidden", "formControlName", "QuantityIndicatorTypeId"], [1, "fa", "fa-tint"], [1, "col-sm-4", "form-group", "mb10"], ["for", "GrossQuantity"], [1, "input-group"], ["name", "GrossQuantity", "formControlName", "GrossQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], [1, "input-group-addon", "fs12"], ["class", "help-block color-maroon mb0", 4, "ngIf"], ["for", "NetQuantity"], ["name", "NetQuantity", "formControlName", "NetQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], ["class", "help-block color-maroon", 4, "ngIf"], [1, "col-sm-4"], ["for", ""], ["name", "DeliveredQuantity", "formControlName", "DeliveredQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], [1, "clearboth", "col-sm-4"], ["class", "form-group", 4, "ngIf"], ["class", "col-sm-4 form-group mb10", 4, "ngIf"], [1, "help-block", "color-maroon", "mb0"], [1, "help-block", "color-maroon"], [1, "form-group"], [1, "db"], ["for", "Terminal"], ["type", "hidden", "formControlName", "TerminalId"], ["type", "text", "formControlName", "TerminalName", 1, "form-control", 3, "input", "blur"], [1, "auto-select", "border-dash"], ["class", "form-text", 4, "ngIf"], [3, "click", 4, "ngFor", "ngForOf"], [1, "form-text"], [1, "btn", "btn-primary", "btn-lg", 3, "disabled", "click"], [1, "fa", "fa-plus-circle"], [1, "fa", "fa-edit"]],
      template: function BolDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng-sidebar-container");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ng-sidebar", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("openedChange", function BolDetailComponent_Template_ng_sidebar_openedChange_1_listener($event) {
            return ctx._opened = $event;
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolDetailComponent_Template_a_click_2_listener() {
            return ctx.toggleOpen(false, null);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "i", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, BolDetailComponent_div_4_Template, 2, 0, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "content", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h3", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Add BOL Details");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "input", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "label", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "BOL #:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "span", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "*");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](15, "input", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, BolDetailComponent_div_16_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "label", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, "Lift Date:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "span", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "*");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "input", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onDateChange", function BolDetailComponent_Template_input_onDateChange_22_listener($event) {
            return ctx.BolDetailForm.get("LiftDate").setValue($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, BolDetailComponent_div_23_Template, 2, 0, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "label", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26, "Badge #:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, BolDetailComponent_span_27_Template, 2, 0, "span", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](28, "input", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](29, BolDetailComponent_div_29_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](31, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](33, BolDetailComponent_ng_container_33_Template, 38, 14, "ng-container", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "button", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolDetailComponent_Template_button_click_35_listener() {
            return ctx.cancelBolDetail();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, "Cancel");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, BolDetailComponent_button_37_Template, 3, 1, "button", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, BolDetailComponent_button_38_Template, 3, 1, "button", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("opened", ctx._opened)("animate", ctx._animate)("position", ctx._POSITIONS[ctx._positionNum]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx._loading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.BolDetailForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("BolNumber"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "MM/DD/YYYY");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("LiftDate") && ctx.isRequired("LiftDate"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isBadgeMandatory);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("required", ctx.isBadgeMandatory);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("BadgeNumber"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.BolDetailForm.get("Products")["controls"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex == 0 - 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex > 0 - 1);
        }
      },
      directives: [ng_sidebar__WEBPACK_IMPORTED_MODULE_11__["SidebarContainer"], ng_sidebar__WEBPACK_IMPORTED_MODULE_11__["Sidebar"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__["DatePicker"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["RequiredValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _directives_numberWithDecimal__WEBPACK_IMPORTED_MODULE_14__["NumberWithDecimal"], _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_15__["RequiredIfTrueValidator"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvYm9sLWRldGFpbC9ib2wtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BolDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-bol-detail',
          templateUrl: './bol-detail.component.html',
          styleUrls: ['./bol-detail.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_8__["InvoiceService"]
        }, {
          type: _carrier_service_data_service__WEBPACK_IMPORTED_MODULE_9__["DataService"]
        }, {
          type: src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__["ValidationService"]
        }];
      }, {
        IsBadgeMandatory: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onBolDetailAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onBolDetailUpdated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/bol-detail/bol-list.component.ts": function srcAppInvoiceBolDetailBolListComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BolListComponent", function () {
      return BolListComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! src/app/imageupload/imageupload.component */
    "./src/app/imageupload/imageupload.component.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../directives/required-if-true.directive */
    "./src/app/directives/required-if-true.directive.ts");

    function BolListComponent_div_0_ng_container_2_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "BOL #");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Badge #");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Product");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Terminal");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Gross");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Net");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Delivered");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "\xA0");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var boldetail_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", boldetail_r2.get("BolNumber").value, "");
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_span_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var boldetail_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", boldetail_r2.get("BadgeNumber").value, "");
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_span_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("ProductName").value, " ");
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_span_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("TerminalName").value, " ");
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_a_18_Template(rf, ctx) {
      if (rf & 1) {
        var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolListComponent_div_0_ng_container_2_ng_container_4_a_18_Template_a_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r22);

          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var boldetail_r2 = ctx_r21.$implicit;
          var i_r3 = ctx_r21.index;

          var ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r20.editBolDetail(boldetail_r2, i_r3);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_a_19_Template(rf, ctx) {
      if (rf & 1) {
        var _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function BolListComponent_div_0_ng_container_2_ng_container_4_a_19_Template_a_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r25);

          var i_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).index;

          var ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r23.deleteBolDetail(i_r3);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function BolListComponent_div_0_ng_container_2_ng_container_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, BolListComponent_div_0_ng_container_2_ng_container_4_span_3_Template, 2, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, BolListComponent_div_0_ng_container_2_ng_container_4_span_6_Template, 2, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, BolListComponent_div_0_ng_container_2_ng_container_4_span_8_Template, 3, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, BolListComponent_div_0_ng_container_2_ng_container_4_span_10_Template, 3, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, BolListComponent_div_0_ng_container_2_ng_container_4_a_18_Template, 2, 0, "a", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](19, BolListComponent_div_0_ng_container_2_ng_container_4_a_19_Template, 2, 0, "a", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var product_r7 = ctx.$implicit;
        var j_r8 = ctx.index;
        var isFirstPrd_r9 = ctx.first;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", j_r8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstPrd_r9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstPrd_r9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("NetQuantity").value && product_r7.get("GrossQuantity").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("NetQuantity").value && product_r7.get("GrossQuantity").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("GrossQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("NetQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("DeliveredQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("NetQuantity").value && product_r7.get("GrossQuantity").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("NetQuantity").value && product_r7.get("GrossQuantity").value && isFirstPrd_r9);
      }
    }

    var _c0 = function _c0() {
      return [];
    };

    function BolListComponent_div_0_ng_container_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, BolListComponent_div_0_ng_container_2_div_2_Template, 18, 0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, BolListComponent_div_0_ng_container_2_ng_container_4_Template, 20, 10, "ng-container", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "app-imageupload", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var boldetail_r2 = ctx.$implicit;
        var i_r3 = ctx.index;
        var isFirstBol_r4 = ctx.first;

        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstBol_r4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", boldetail_r2.get("Products").controls);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "bolFile")("orderId", boldetail_r2.get("BolNumber").value)("inputFile", ctx_r1.Model[i_r3] == undefined ? _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](8, _c0) : ctx_r1.Model[i_r3].ImageList)("isBol", true)("requiredIfTrue", ctx_r1.IsBolImageRequired);
      }
    }

    function BolListComponent_div_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, BolListComponent_div_0_ng_container_2_Template, 9, 9, "ng-container", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r0.Parent);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.BolDetails == null ? null : ctx_r0.BolDetails.controls);
      }
    }

    var BolListComponent = /*#__PURE__*/function () {
      function BolListComponent(fb) {
        _classCallCheck(this, BolListComponent);

        this.fb = fb;
        this.files = new Array();
        this.quantities = new Array();
        this.onBolEditRequest = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.IsBolImageRequired = false;
        this.onBolAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnBolDeleted = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBolEdit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnBolQuantitiesAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass(BolListComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          var _this73 = this;

          if (change.IsImageRequired && change.IsImageRequired.currentValue != null) {
            this.IsBolImageRequired = change.IsImageRequired.currentValue;
          }

          if (change.Model && change.Model.currentValue != null) {
            var bols = change.Model.currentValue;
            bols.forEach(function (x) {
              return _this73.bolDetailAdded(x);
            });
          }
        }
      }, {
        key: "buildForm",
        value: function buildForm(model) {
          var products = this.fb.array([]);
          var currentObj = this;
          model.Products.forEach(function (elem, idx) {
            products.push(currentObj.buildProduct(elem));
          }); //this.IsFormBuilt = true;

          return this.fb.group({
            Id: this.fb.control(model.Id),
            BolNumber: this.fb.control(model.BolNumber),
            LiftDate: this.fb.control(model.LiftDate),
            BadgeNumber: this.fb.control(model.BadgeNumber),
            Products: products,
            BolImages: this.fb.control('')
          });
        }
      }, {
        key: "buildProduct",
        value: function buildProduct(model) {
          return this.fb.group({
            ProductId: this.fb.control(model.ProductId),
            ProductName: this.fb.control(model.ProductName),
            NetQuantity: this.fb.control(model.NetQuantity),
            GrossQuantity: this.fb.control(model.GrossQuantity),
            TerminalId: this.fb.control(model.TerminalId),
            TerminalName: this.fb.control(model.TerminalName),
            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),
            DeliveredQuantity: this.fb.control(model.DeliveredQuantity)
          });
        }
      }, {
        key: "bolDetailAdded",
        value: function bolDetailAdded(item) {
          if (item.LiftDate && item.LiftDate.indexOf('/Date(') >= 0) {
            item.LiftDate = item.DisplayLiftDate || '';
          }

          this.BolDetails.push(this.buildForm(item));
          this.onBolAdded.emit(this.BolDetails.value);
          this.OnBolQuantitiesAdded.emit();
        }
      }, {
        key: "bolDetailUpdated",
        value: function bolDetailUpdated(item) {
          var formG = this.BolDetails.controls[item.index];
          formG.patchValue(item.bolDetail);
          this.OnBolQuantitiesAdded.emit();
        }
      }, {
        key: "editBolDetail",
        value: function editBolDetail(bolDetail, i) {
          this.onBolEditRequest.emit({
            bolDetail: bolDetail.value,
            index: i
          });
          this.onBolEdit.emit(bolDetail.value);
        }
      }, {
        key: "deleteBolDetail",
        value: function deleteBolDetail(i) {
          this.BolDetails.removeAt(i);
          this.OnBolDeleted.emit(this.BolDetails.value);
          this.OnBolQuantitiesAdded.emit();
        }
      }]);

      return BolListComponent;
    }();

    BolListComponent.ɵfac = function BolListComponent_Factory(t) {
      return new (t || BolListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]));
    };

    BolListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: BolListComponent,
      selectors: [["app-bol-list"]],
      viewQuery: function BolListComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_1__["ImageuploadComponent"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
        }
      },
      inputs: {
        Parent: "Parent",
        BolDetails: "BolDetails",
        Model: "Model",
        IsImageRequired: "IsImageRequired"
      },
      outputs: {
        onBolEditRequest: "onBolEditRequest",
        onBolAdded: "onBolAdded",
        OnBolDeleted: "OnBolDeleted",
        onBolEdit: "onBolEdit",
        OnBolQuantitiesAdded: "OnBolQuantitiesAdded"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 1,
      vars: 1,
      consts: [["class", "well box-shadow", 3, "formGroup", 4, "ngIf"], [1, "well", "box-shadow", 3, "formGroup"], ["formArrayName", "BolDetails"], [4, "ngFor", "ngForOf"], [3, "formGroupName"], [4, "ngIf"], ["formArrayName", "Products"], [1, "row", "mt20"], [1, "col-sm-4"], ["formControlName", "BolImages", 3, "fileType", "orderId", "inputFile", "isBol", "requiredIfTrue"], [1, "mb20", "border-b-dash"], [1, "row", "f-bold"], [1, "col-sm-2"], [1, "col-sm-1"], [1, "row", 3, "formGroupName"], [3, "click", 4, "ngIf"], [1, "fa", "fa-tint"], [3, "click"], [1, "fa", "fa-edit", "fs14"], [1, "fa", "fa-trash-alt", "ml10", "color-maroon"]],
      template: function BolListComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, BolListComponent_div_0_Template, 3, 2, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", (ctx.BolDetails == null ? null : ctx.BolDetails.controls == null ? null : ctx.BolDetails.controls.length) > 0);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupName"], src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_1__["ImageuploadComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_4__["RequiredIfTrueValidator"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvYm9sLWRldGFpbC9ib2wtbGlzdC5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BolListComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-bol-list',
          templateUrl: './bol-list.component.html',
          styleUrls: ['./bol-list.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        BolDetails: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Model: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onBolEditRequest: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        IsImageRequired: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onBolAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnBolDeleted: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onBolEdit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnBolQuantitiesAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        children: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"],
          args: [src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_1__["ImageuploadComponent"]]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/createinvoice.component.ts": function srcAppInvoiceCreateinvoiceComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CreateinvoiceComponent", function () {
      return CreateinvoiceComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DropInfo", function () {
      return DropInfo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InvalidDropDetailInfo", function () {
      return InvalidDropDetailInfo;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MissingImageInfo", function () {
      return MissingImageInfo;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var _produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./produc-detail/produc-detail.component */
    "./src/app/invoice/produc-detail/produc-detail.component.ts");
    /* harmony import */


    var _imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../imageupload/imageupload.component */
    "./src/app/imageupload/imageupload.component.ts");
    /* harmony import */


    var _bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./bol-detail/bol-list.component */
    "./src/app/invoice/bol-detail/bol-list.component.ts");
    /* harmony import */


    var _lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./lift-tickets/lift-tickets.component */
    "./src/app/invoice/lift-tickets/lift-tickets.component.ts");
    /* harmony import */


    var _taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./taxes/other-product-taxes.component */
    "./src/app/invoice/taxes/other-product-taxes.component.ts");
    /* harmony import */


    var _declarations_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../declarations.module */
    "./src/app/declarations.module.ts");
    /* harmony import */


    var _carrier_models_location__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../carrier/models/location */
    "./src/app/carrier/models/location.ts");
    /* harmony import */


    var src_app_app_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/app.enum */
    "./src/app/app.enum.ts");
    /* harmony import */


    var rxjs_internal_Subject__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! rxjs/internal/Subject */
    "./node_modules/rxjs/internal/Subject.js");
    /* harmony import */


    var rxjs_internal_Subject__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_Subject__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var _bol_detail_bol_detail_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./bol-detail/bol-detail.component */
    "./src/app/invoice/bol-detail/bol-detail.component.ts");
    /* harmony import */


    var _lift_tickets_lift_detail_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./lift-tickets/lift-detail.component */
    "./src/app/invoice/lift-tickets/lift-detail.component.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ng-multiselect-dropdown */
    "./node_modules/ng-multiselect-dropdown/__ivy_ngcc__/fesm2015/ng-multiselect-dropdown.js");
    /* harmony import */


    var _various_drop_location_various_drop_location_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./various-drop-location/various-drop-location.component */
    "./src/app/invoice/various-drop-location/various-drop-location.component.ts");
    /* harmony import */


    var _customer_detail_customer_detail_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./customer-detail/customer-detail.component */
    "./src/app/invoice/customer-detail/customer-detail.component.ts");
    /* harmony import */


    var _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ../directives/required-if-true.directive */
    "./src/app/directives/required-if-true.directive.ts");
    /* harmony import */


    var _fees_fee_list_fee_list_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ../fees/fee-list/fee-list.component */
    "./src/app/fees/fee-list/fee-list.component.ts");
    /* harmony import */


    var _payment_terms_payment_terms_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./payment-terms/payment-terms.component */
    "./src/app/invoice/payment-terms/payment-terms.component.ts");

    function CreateinvoiceComponent_app_fee_list_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-fee-list", 46);
      }

      if (rf & 2) {
        var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", ctx_r5.invoiceForm)("IsFrieghtPricingMethodAuto", ctx_r5.IsFrieghtPricingMethodAuto)("Fees", ctx_r5.InvoiceFees)("InputAccessorialFeeDetails", ctx_r5.AccessorialTableDetails)("NoOrders", ctx_r5.NoOrders)("Currency", ctx_r5.Currency);
      }
    }

    function CreateinvoiceComponent_app_other_product_taxes_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "app-other-product-taxes", 47, 48);
      }

      if (rf & 2) {
        var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", ctx_r6.invoiceForm)("Currency", ctx_r6.Currency)("Taxes", ctx_r6.OtherProductTaxes);
      }
    }

    function CreateinvoiceComponent_div_56_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "app-payment-terms", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function CreateinvoiceComponent_div_61_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "app-imageupload", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "app-imageupload", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "app-imageupload", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "app-imageupload", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "BDNImage")("orderId", ctx_r8.orderId)("inputFile", ctx_r8.BDNImages)("BDNImage", true);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "TaxAffidavit")("orderId", ctx_r8.orderId)("inputFile", ctx_r8.TaxAffidavitImages)("TaxAffidavit", true);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "CoastGuardInspection")("orderId", ctx_r8.orderId)("inputFile", ctx_r8.CoastGuardInspectionImages)("CoastGuardInspection", true);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "InspectionRequestVoucher")("orderId", ctx_r8.orderId)("inputFile", ctx_r8.InspectionRequestVoucherImages)("InspectionRequestVoucher", true);
      }
    }

    function CreateinvoiceComponent_div_62_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Submitting Invoice...");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function CreateinvoiceComponent_div_63_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Uploading images...");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var _c0 = function _c0(a0) {
      return {
        "pntr-none": a0
      };
    };

    var CreateinvoiceComponent = /*#__PURE__*/function () {
      function CreateinvoiceComponent(fb, route, invoiceService, cdr) {
        _classCallCheck(this, CreateinvoiceComponent);

        this.fb = fb;
        this.route = route;
        this.invoiceService = invoiceService;
        this.cdr = cdr;
        this.DtTrigger = new rxjs_internal_Subject__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
        this.trackableScheduleId = 0;
        this.invoiceId = 0;
        this.PoList = [];
        this.DriverList = [];
        this.PoDdlSettings = {};
        this.DriverDdlSettings = {};
        this.SingleSelectSettingsById = {};
        this.MultiSelectSettingsById = {};
        this.SelectedDriver = [];
        this.OtherProductAdded = false;
        this.IsFrieghtPricingMethodAuto = false;
        this.IsSignatureRequired = false;
        this.IsBOLImageRequired = false;
        this.IsDropImageRequired = false;
        this.IsBolDetailsRequired = false; //public IsFTL: boolean = false;

        this.IsSupressOrderPricing = false; //public InvoiceTypeId: number;

        this.BlendedScheduleDetail = [];
        this.InvalidFtlDetails = false;
        this.InvalidBOLDetails = false;
        this.IsDateInvalid = false;
        this.InValidBolImage = false;
        this.dropInfos = new Array();
        this.IsInvalidFtlDetailsnew = false; // new flag added here ccroding to change validation 

        this.IsInvalidFtlDetailsnewlift = false; // new flag added here ccroding to changes validation 

        this.InvalidDropInfos = new Array();
        this.MissingImgInfos = new Array();
        this.IsLoading = false;
        this.IsLoadingImages = false;
        this.disabled = false;
        this.InvoiceImages = [];
        this.SignatureImages = [];
        this.TaxAffidavitImages = [];
        this.BDNImages = [];
        this.CoastGuardInspectionImages = [];
        this.InspectionRequestVoucherImages = [];
        this.AdditionalImages = [];
        this.disableInputControls = false;
        this.waitingAction = 0;
        this.IsBadgeMandatory = false;
        this.exceptionId = 0;
        this.invoiceForm = this.fb.group({
          PaymentTerm: this.fb.control(''),
          Customer: this.fb.control(''),
          BolDetails: this.fb.array([]),
          TicketDetails: this.fb.array([]),
          InvoiceTypeId: this.fb.control(''),
          IsVariousOrigin: this.fb.control(''),
          InvoiceNotes: this.fb.control(''),
          InvoiceImages: this.fb.control(''),
          AdditionalImages: this.fb.control(''),
          SignatureImages: this.fb.control(''),
          TaxAffidavitImages: this.fb.control(''),
          BDNImages: this.fb.control(''),
          CoastGuardInspectionImages: this.fb.control(''),
          InspectionRequestVoucherImages: this.fb.control(''),
          FuelDropLocation: this.fb.control(''),
          OriginalInvoiceHeaderId: this.fb.control(''),
          IsRebillInvoice: this.fb.control(''),
          SupplierInvoiceNumber: this.fb.control(''),
          Driver: this.fb.control({}),
          SelectedDriver: this.fb.control({}),
          Carrier: this.fb.control(''),
          BrokerChainId: this.fb.control(''),
          ExistingHeaderId: this.fb.control(0),
          SelectedOrders: this.fb.control([])
        });
        this.OtherProductTaxes = [];
      }

      _createClass(CreateinvoiceComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this74 = this;

          this.orderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);
          if (this.route.snapshot.queryParamMap.get('existingHeaderId')) this.invoiceForm.controls.ExistingHeaderId.setValue(this.route.snapshot.queryParamMap.get('existingHeaderId'));
          this.trackableScheduleId = parseInt(this.route.snapshot.queryParamMap.get('trackableScheduleId'), 10);
          this.waitingAction = parseInt(this.route.snapshot.queryParamMap.get('waitingAction'), 10);
          this.exceptionId = parseInt(this.route.snapshot.queryParamMap.get('del-exceptionId'), 10);
          var invId = parseInt(this.route.snapshot.params.number, 10);
          this.baseDetailUrl = '/Supplier/Order/Details/' + this.orderId;

          if (this.trackableScheduleId > 0) {
            this.baseDetailUrl = '/Carrier/ScheduleBuilder';
          }

          if (invId > 0) {
            this.invoiceId = invId;

            if (this.waitingAction == src_app_app_enum__WEBPACK_IMPORTED_MODULE_10__["WaitingAction"].BolDetails) {
              this.disableInputControls = true;
            }
          }

          this.PoDdlSettings = {
            singleSelection: false,
            idField: 'OrderId',
            textField: 'DisplayPoNumber',
            enableCheckAll: false,
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 1,
            allowSearchFilter: true
          };
          this.DriverDdlSettings = {
            singleSelection: true,
            idField: 'Id',
            textField: 'Name',
            enableCheckAll: false,
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 1,
            allowSearchFilter: true
          };
          this.SingleSelectSettingsById = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'Id',
            textField: 'Name',
            enableCheckAll: false,
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 1
          };
          this.MultiSelectSettingsById = {
            singleSelection: false,
            idField: 'Id',
            textField: 'Name',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 5,
            allowSearchFilter: true
          };
          this.invoiceService.getDriverList().subscribe(function (data) {
            return _this74.DriverList = data;
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          //this.invoiceForm.addControl('Drops', this.productList.DropGroup);
          //this.productList.DropGroup.setParent(this.invoiceForm);
          this.getPoDetailsList(this.orderId);

          if (this.invoiceId > 0) {
            this.getInvoiceDetails(this.invoiceId);
          } else {
            this.getDefaultDetail(this.orderId);
          } //this.getChildProperty();  

        }
      }, {
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          this.cdr.detectChanges();
        }
      }, {
        key: "OnDriverSelect",
        value: function OnDriverSelect(driver) {
          this.invoiceForm.get('Driver').patchValue(driver);
        }
      }, {
        key: "OnDriverDeSelect",
        value: function OnDriverDeSelect(driver) {
          this.invoiceForm.get('Driver').patchValue(null);
        }
      }, {
        key: "initFormData",
        value: function initFormData(model) {
          var fuelDropLocation = null;

          if (model.FuelDropLocation != undefined && model.FuelDropLocation != null) {
            fuelDropLocation = {
              IsAddressAvailable: false,
              Address: model.FuelDropLocation.Address,
              City: model.FuelDropLocation.City,
              State: {
                Id: model.FuelDropLocation.State.Id,
                Code: model.FuelDropLocation.State.Code
              },
              Country: {
                Id: model.FuelDropLocation.Country.Id,
                Code: model.FuelDropLocation.Country.Code
              },
              Latitude: model.FuelDropLocation.Latitude,
              Longitude: model.FuelDropLocation.Longitude,
              CountyName: model.FuelDropLocation.CountyName,
              ZipCode: model.FuelDropLocation.ZipCode
            };
          }

          if (model.InvoiceImages != null && model.InvoiceImages != undefined) {
            this.InvoiceImages = model.InvoiceImages;
          }

          if (model.AdditionalImages != null && model.AdditionalImages != undefined) {
            this.AdditionalImages = model.AdditionalImages;
          }

          if (model.SignatureImages != null && model.SignatureImages != undefined) {
            this.SignatureImages = model.SignatureImages;
          }

          if (model.TaxAffidavitImages != null && model.TaxAffidavitImages != undefined) {
            this.TaxAffidavitImages = model.TaxAffidavitImages;
          }

          if (model.BDNImages != null && model.BDNImages != undefined) {
            this.BDNImages = model.BDNImages;
          }

          if (model.CoastGuardInspectionImages != null && model.CoastGuardInspectionImages != undefined) {
            this.CoastGuardInspectionImages = model.CoastGuardInspectionImages;
          }

          if (model.InspectionRequestVoucherImages != null && model.InspectionRequestVoucherImages != undefined) {
            this.InspectionRequestVoucherImages = model.InspectionRequestVoucherImages;
          }

          if (model.InvoiceNotes != null && model.InvoiceNotes != undefined) {
            this.InvoiceNotes = model.InvoiceNotes;
          }

          this.SignatureImage = model.SignatureImage;
          this.TaxAffidavitImage = model.TaxAffidavitImage;
          this.BDNImage = model.BDNImage;
          this.CoastGuardInspectionImage = model.CoastGuardInspectionImage;
          this.InspectionRequestVoucherImage = model.InspectionRequestVoucherImage;
          this.products.IsMarineLocation = model.Customer.Location.IsMarineLocation; //if (model.BolDetails != null && model.BolDetails != undefined)
          //    model.BolDetails.forEach(x => {
          //        if (x.Images != null && x.Images != undefined) {
          //            x.Images.ImageData = x.Images.AzurePath;
          //            x.ImageList = [x.Images];
          //        }
          //    });
          //if (model.TicketDetails != null && model.TicketDetails != undefined)
          //    model.TicketDetails.forEach(x => {
          //        if (x.ImageList != null && x.ImageList != undefined) {
          //            x.Images.ImageData = x.Images.AzurePath;
          //            x.ImageList = [x.Images];
          //        }
          //    });

          this.invoiceForm.patchValue({
            PaymentTerm: {
              TermId: model.PaymentTerm.TermId,
              NetDays: model.PaymentTerm.NetDays
            },
            Customer: {
              CompanyId: model.Customer.CompanyId,
              CompanyName: model.Customer.CompanyName,
              Location: {
                JobId: model.Customer.Location.JobId,
                SiteName: model.Customer.Location.SiteName,
                Address: model.Customer.Location.Address,
                City: model.Customer.Location.City,
                StateCode: model.Customer.Location.StateCode,
                ZipCode: model.Customer.Location.ZipCode,
                CountryId: model.Customer.Location.CountryId
              },
              ContactName: model.Customer.ContactName,
              ContactPhone: model.Customer.ContactPhone,
              ContactEmail: model.Customer.ContactEmail
            },
            FuelDropLocation: fuelDropLocation,
            InvoiceTypeId: model.InvoiceTypeId,
            IsVariousOrigin: model.IsVariousOrigin,
            InvoiceNotes: model.InvoiceNotes,
            OriginalInvoiceHeaderId: model.OriginalInvoiceHeaderId,
            IsRebillInvoice: model.IsRebillInvoice,
            SupplierInvoiceNumber: model.SupplierInvoiceNumber,
            Driver: model.Driver,
            SelectedDriver: [model.Driver],
            Carrier: model.Carrier,
            BrokerChainId: model.BrokerChainId,
            SelectedOrders: []
          });
        }
      }, {
        key: "recieveChildImages",
        value: function recieveChildImages(entireInvoiceModel, sas) {
          var allPromises = [];
          this.imageuploadComponents.forEach(function (imageComponent) {
            allPromises.push(imageComponent.UploadFile(entireInvoiceModel, sas));
          });
          this.BolListComponents.forEach(function (a) {
            return a.children.forEach(function (y) {
              return allPromises.push(y.UploadFile(entireInvoiceModel, sas));
            });
          });
          this.LiftTicketsComponents.forEach(function (a) {
            return a.children.forEach(function (y) {
              return allPromises.push(y.UploadFile(entireInvoiceModel, sas));
            });
          });
          return Promise.all(allPromises);
        }
      }, {
        key: "onOrderSelect",
        value: function onOrderSelect(item) {
          var trackableScheduleId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var blendedScheduleId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
          var deliveryLevelPO = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
          this.getAnotherProduct(item.OrderId, trackableScheduleId, blendedScheduleId, deliveryLevelPO);
          this.NoOrders = false;
        }
      }, {
        key: "onOrderDeSelect",
        value: function onOrderDeSelect(item) {
          var _this75 = this;

          var isAvoidBlend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          if (!isAvoidBlend) {
            var existBlendDetail = this.BlendedScheduleDetail.find(function (t) {
              return t && t.Schedules && t.Schedules.some(function (x) {
                return x.OrderId == item.OrderId;
              });
            });

            if (existBlendDetail && existBlendDetail.BlendId && existBlendDetail.BlendId != '') {
              this.RemoveBlendSchedules(existBlendDetail.BlendId, true);
            }
          }

          this.products.removeProduct(item);
          this.clearDropInfo(item);
          var dropIndex = this.InvoiceModel.Drops.findIndex(function (elem, idx) {
            return elem.OrderId == item.OrderId;
          });

          if (dropIndex >= 0) {
            this.InvoiceModel.Drops.splice(dropIndex, 1);
            this.OtherProductTaxes = this.OtherProductTaxes.filter(function (elem) {
              return elem.OrderId != item.OrderId;
            });

            if (this.otherProductTax != null) {
              this.otherProductTax.removeOrderTaxes(item.OrderId);
            }

            if (!this.InvoiceModel.Drops.some(function (t1) {
              return t1.TypeOfFuel == 10 || t1.TypeOfFuel == 26;
            }) && this.OtherProductTaxes.length == 0) {
              this.OtherProductAdded = false;
            }
          }

          if (this.IsFrieghtPricingMethodAuto) {
            var combinedIds = null;
            this.NoOrders = true;
            var items = this.invoiceForm.get('SelectedOrders').value;
            var ids = items.map(function (s) {
              return s.OrderId;
            });

            if (ids.length == 0) {
              combinedIds = this.orderId;
            } else {
              combinedIds = this.orderId + "," + ids.join(',');
            }

            this.invoiceService.GetAccessorialFeeTablesForSelectedOrder(combinedIds).subscribe(function (response) {
              _this75.AccessorialTableDetails = response;
            });
          }
        }
      }, {
        key: "getAnotherProduct",
        value: function getAnotherProduct(_orderId, _trackableScheduleId, _blendedScheduleId, deliveryLevelPO) {
          var _this76 = this;

          this.invoiceService.getAnotherProductDetail(_orderId).subscribe(function (data) {
            _this76.setImageFlags(data); // SET ANOTHER PRODUCT DETAILS IMAGE FLAGS 


            _this76.setDropInfo(data);

            if (data != null && data != undefined) {
              if (_trackableScheduleId && _trackableScheduleId > 0) {
                data.TrackableScheduleId = _trackableScheduleId;
                data.BlendedScheduleId = _blendedScheduleId;
              }

              if (data.FreightPricingMethod == src_app_app_enum__WEBPACK_IMPORTED_MODULE_10__["FreightPricingMethod"].Manual) {
                _this76.IsFrieghtPricingMethodAuto = false;
              } else {
                _this76.IsFrieghtPricingMethodAuto = true;

                var items = _this76.invoiceForm.get('SelectedOrders').value;

                if (items != null && items != undefined && items.length > 0) {
                  var ids = items.map(function (s) {
                    return s.OrderId;
                  });
                  var combinedIds = _this76.orderId + "," + ids.join(',');

                  _this76.invoiceService.GetAccessorialFeeTablesForSelectedOrder(combinedIds).subscribe(function (response) {
                    _this76.AccessorialTableDetails = response;
                  });
                }
              }

              data.DeliveryLevelPO = deliveryLevelPO;

              _this76.getAnotherDropFees(_orderId);

              _this76.InvoiceModel.Drops.push(data);

              _this76.products.addProduct(data);

              if ((data.TypeOfFuel == 10 || data.TypeOfFuel == 26) && !_this76.OtherProductAdded) {
                _this76.OtherProductAdded = true;
              }

              if (_this76.OtherProductAdded && data.OtherTaxDetails != null && data.OtherTaxDetails != undefined) {
                _this76.OtherProductTaxes = _this76.OtherProductTaxes.concat(data.OtherTaxDetails);
              }
            }
          });
        }
      }, {
        key: "setCurrency",
        value: function setCurrency(data) {
          //None = 0,
          //USD = 1,
          //CAD = 2
          var Currency = data.Currency;

          if (Currency == "1") {
            this.Currency = "USD";
          } else if (Currency == "2") {
            this.Currency = "CAD";
          }
        }
      }, {
        key: "setDropInfo",
        value: function setDropInfo(drop) {
          this.dropInfos.push({
            OrderId: drop.OrderId,
            ProductId: drop.FuelTypeId,
            PoNumber: drop.PoNumber,
            IsBOLImageRequired: drop.IsBOLImageRequired,
            IsDropImageRequired: drop.IsDropImageRequired,
            IsBolDetailsRequired: drop.IsBolDetailsRequired,
            IsSignatureRequired: drop.IsSignatureRequired
          });
        }
      }, {
        key: "clearDropInfo",
        value: function clearDropInfo(item) {
          var index = this.dropInfos.findIndex(function (element, idx) {
            return element.OrderId == item.OrderId;
          });

          if (index >= 0) {
            this.dropInfos.splice(index, 1);
          }
        }
      }, {
        key: "getDefaultDetail",
        value: function getDefaultDetail(_orderId) {
          var _this77 = this;

          this.invoiceService.getDefaultDetail(_orderId, this.trackableScheduleId).subscribe(function (data) {
            //this.InvoiceTypeId = data.InvoiceTypeId;                
            _this77.InvoiceModel = data;
            _this77.IsBadgeMandatory = _this77.InvoiceModel.IsBadgeMandatory;

            _this77.initFormData(data);

            _this77.InvoiceFees = data.Fees;

            _this77.setImageFlags(data.Drops[0]);

            _this77.setCurrency(data.Drops[0]);

            _this77.setDropInfo(data.Drops[0]);

            if (data.Drops != undefined && data.Drops != null && data.Drops.length > 0) {
              _this77.OtherProductAdded = data.Drops[0].TypeOfFuel == 10 || data.Drops[0].TypeOfFuel == 26;
            }

            if (_this77.OtherProductAdded) {
              _this77.OtherProductTaxes = data.Drops[0].OtherTaxDetails;
            }

            _this77.IsSupressOrderPricing = data.IsSupressOrderPricing;

            if (data.Drops[0].IsFreightOnlyOrder) {
              _this77.baseDetailUrl = '/Carrier/Order/Details/' + _this77.orderId;
            }

            if (data.Drops[0].FreightPricingMethod == src_app_app_enum__WEBPACK_IMPORTED_MODULE_10__["FreightPricingMethod"].Manual) {
              _this77.IsFrieghtPricingMethodAuto = false;
            } else {
              _this77.IsFrieghtPricingMethodAuto = true;
              _this77.AccessorialTableDetails = data.AccessorialFeeDetails;
            }
          });
        }
      }, {
        key: "setFTLValidators",
        value: function setFTLValidators() {
          this.invoiceForm.controls['BolDetails'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]);
          this.invoiceForm.controls['TicketDetails'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]);
        }
      }, {
        key: "setImageFlags",
        value: function setImageFlags(drop) {
          this.IsBOLImageRequired = this.IsBOLImageRequired || drop.IsBOLImageRequired;
          this.IsBolDetailsRequired = this.IsBolDetailsRequired || drop.IsBolDetailsRequired;
          this.IsDropImageRequired = this.IsDropImageRequired || drop.IsDropImageRequired;
          this.IsSignatureRequired = this.IsSignatureRequired || drop.IsSignatureRequired; //this.IsFTL = this.IsFTL || drop.IsFTL;
          //this.IsFTL || 

          if (this.IsBOLImageRequired || this.IsBolDetailsRequired) {
            this.setFTLValidators();
          } //this.IsSignatureRequired = drop.IsSignatureRequired;

        }
      }, {
        key: "getInvoiceDetails",
        value: function getInvoiceDetails(_invoiceId) {
          var _this78 = this;

          this.invoiceService.getInvoiceDetails(_invoiceId).subscribe(function (response) {
            if (response && response.BolDetails && response.BolDetails.length == 1 && response.BolDetails[0].BolNumber == null && response.BolDetails[0].LiftDate == null) {
              response.BolDetails = [];
            }

            _this78.InvoiceModel = response;
            _this78.IsBadgeMandatory = _this78.InvoiceModel.IsBadgeMandatory;

            _this78.initFormData(response);

            _this78.InvoiceFees = response.Fees;

            _this78.setCurrency(response.Drops[0]);

            var currentObj = _this78;
            response.Drops.forEach(function (elem) {
              if (elem != undefined && elem != null) {
                currentObj.OtherProductAdded = elem.TypeOfFuel == 10 || elem.TypeOfFuel == 26;
              }

              if (currentObj.OtherProductAdded) {
                currentObj.OtherProductTaxes = elem.OtherTaxDetails;
              }
            });

            if (response.Drops[0].IsFreightOnlyOrder) {
              _this78.baseDetailUrl = '/Carrier/Order/Details/' + _this78.orderId;
            }
          });
        }
      }, {
        key: "getPoDetailsList",
        value: function getPoDetailsList(_orderId) {
          var _this79 = this;

          this.invoiceService.getPoList(_orderId).subscribe(function (response) {
            _this79.PoList = response;
          });
        }
      }, {
        key: "onCancel",
        value: function onCancel() {
          window.location.href = this.baseDetailUrl;
        }
      }, {
        key: "findDuplicates",
        value: function findDuplicates() {
          var drops = this.invoiceForm.get('Drops').value;
          var fuelTypeIds = drops.map(function (item) {
            return item.FuelTypeId;
          });
          this.hasDuplicateProduct = fuelTypeIds.some(function (item, idx) {
            return fuelTypeIds.indexOf(item) != idx;
          });
        }
      }, {
        key: "validateLiftDates",
        value: function validateLiftDates() {
          var _this80 = this;

          var bolDetails = this.invoiceForm.get('BolDetails').value;
          var liftDates = bolDetails.map(function (item) {
            return item.LiftDate;
          }); //all lift dates added in bols

          var dropDetails = this.invoiceForm.get('Drops').value;
          var dropDates = dropDetails.map(function (item) {
            return item.DropDate;
          }); // all drop dates added

          var ticketdetails = this.invoiceForm.get('TicketDetails').value;
          var liftTicketDates = ticketdetails.map(function (item) {
            return item.LiftDate;
          }); // all liftdates added in lifttickets 

          if (dropDates.length != 0 || dropDates != undefined || dropDates != null) {
            var minDropdt = this.findMinDate(dropDates);
          }

          this.IsDateInvalid = false;

          if (liftDates.length != 0 || liftDates != undefined || liftDates != null) {
            liftDates.forEach(function (ltdate) {
              var liftdt = new Date(ltdate);

              if (minDropdt != "NaN/NaN/NaN") {
                if (liftdt > new Date(minDropdt)) {
                  _this80.IsDateInvalid = true;
                }
              }
            });
          }

          if (liftTicketDates.length != 0 || liftTicketDates != undefined || liftTicketDates != null) {
            liftTicketDates.forEach(function (liftktdate) {
              var liftdt = new Date(liftktdate);

              if (minDropdt != "NaN/NaN/NaN") {
                if (liftdt > new Date(minDropdt)) {
                  _this80.IsDateInvalid = true;
                }
              }
            });
          }
        }
      }, {
        key: "validateDropStartEndTime",
        value: function validateDropStartEndTime() {
          if (this.invoiceForm.invalid) {
            if (this.invoiceForm.get("Drops").value.length > 0) {
              if (this.invoiceForm.get("Drops").value[0].StartTime != null && this.invoiceForm.get("Drops").value[0].EndTime != null) {
                var strStartTime = this.invoiceForm.get("Drops").value[0].StartTime;
                var strEndTime = this.invoiceForm.get("Drops").value[0].EndTime;
                var startTime = new Date().setHours(this.GetHours(strStartTime), this.GetMinutes(strStartTime), 0);
                var endTime = new Date(startTime);
                var endTimeD = endTime.setHours(this.GetHours(strEndTime), this.GetMinutes(strEndTime), 0);

                if (startTime < endTimeD) {
                  if (this.invoiceForm.get(['Drops', 0, 'StartTime']).valid == false) {
                    this.invoiceForm.get(['Drops', 0, 'StartTime']).setErrors(null);
                  }

                  if (this.invoiceForm.get(['Drops', 0, 'EndTime']).valid == false) {
                    this.invoiceForm.get(['Drops', 0, 'EndTime']).setErrors(null);
                  }
                }
              }
            }
          }
        }
      }, {
        key: "GetHours",
        value: function GetHours(d) {
          var h = parseInt(d.split(':')[0]);

          if (d.split(':')[1].split(' ')[1] == "PM") {
            h = h + 12;
          }

          return h;
        }
      }, {
        key: "GetMinutes",
        value: function GetMinutes(d) {
          return parseInt(d.split(':')[1].split(' ')[0]);
        }
      }, {
        key: "validateBolAndLiftDetails",
        value: function validateBolAndLiftDetails() {
          var currObject = this;
          this.IsInvalidFtlDetailsnew = false;
          this.IsInvalidFtlDetailsnewlift = false;
          this.InvalidDropInfos.length = 0;
          this.MissingImgInfos.length = 0;
          var bolProducts = []; // all the products inside bol details

          var liftProducts = []; // all the products inside liftticket details 

          var missingbols = [];
          var missingLifts = [];
          bolProducts.length = 0;
          liftProducts.length = 0;
          var boldetails = this.invoiceForm.get('BolDetails').value;
          boldetails.map(function (item) {
            return item.Products.map(function (prod) {
              return bolProducts.push(prod);
            });
          }); // Group by all the added products according to product ids

          var groupBy = function groupBy(xs, key) {
            return xs.reduce(function (rv, x) {
              (rv[x[key]] = rv[x[key]] || []).push(x);
              return rv;
            }, {});
          };

          var bolgroupedProducts = groupBy(bolProducts, 'ProductId');

          for (var productId in bolgroupedProducts) {
            var key = productId;
            var productsperproductId = [];
            productsperproductId = bolgroupedProducts[key];
            var count = 0;
            var prodCount = productsperproductId.length;
            productsperproductId.forEach(function (product) {
              if (product.NetQuantity == "" && product.GrossQuantity == "") {
                count++;
              }
            }); //Means no bol details added against that product

            if (prodCount == count) {
              missingbols.push(productsperproductId[0]);
            }
          }

          var ticketDetails = this.invoiceForm.get('TicketDetails').value;
          ticketDetails.map(function (item) {
            return item.Products.map(function (prod) {
              return liftProducts.push(prod);
            });
          });
          var liftgroupedProducts = groupBy(liftProducts, 'ProductId');

          for (var _productId in liftgroupedProducts) {
            var key = _productId;
            var productsperproductId = [];
            productsperproductId = liftgroupedProducts[key];
            var count = 0;
            var prodCount = productsperproductId.length;
            productsperproductId.forEach(function (product) {
              if (product.NetQuantity == "" && product.GrossQuantity == "" && product.BulkPlantName == "") {
                count++;
              }
            }); //Means no lift details added against that product

            if (prodCount == count) {
              missingLifts.push(productsperproductId[0]);
            }
          }

          this.dropInfos.forEach(function (dropinfo) {
            if (bolProducts.length > 0) {
              missingbols.forEach(function (missingbol) {
                if (dropinfo.ProductId == missingbol.ProductId) {
                  //dropinfo.IsFTL || 
                  if (dropinfo.IsBolDetailsRequired || dropinfo.IsBOLImageRequired) {
                    if (missingbol.NetQuantity == "" && missingbol.GrossQuantity == "") {
                      var IsBolDetailsAvailable = false;
                      var IsLiftDetailsAvailble = currObject.validateLiftTicketDetails(missingbol, dropinfo.OrderId);
                      var PoNumber = dropinfo.PoNumber;

                      if (!IsBolDetailsAvailable && !IsLiftDetailsAvailble) {
                        currObject.InvalidDropInfos.push({
                          ProductId: dropinfo.ProductId,
                          PoNumber: dropinfo.PoNumber,
                          Message: "No bol or lift details provided for order with PO number " + dropinfo.PoNumber
                        });
                      }
                    }
                  }
                }
              });
            }

            if (liftProducts.length > 0) {
              missingLifts.forEach(function (missingLift) {
                if (dropinfo.ProductId == missingLift.ProductId) {
                  //dropinfo.IsFTL || 
                  if (dropinfo.IsBolDetailsRequired || dropinfo.IsBOLImageRequired) {
                    if (missingLift.NetQuantity == "" && missingLift.GrossQuantity && missingLift.BulkPlantName == "") {
                      var IsLiftDetailsAvailable = false;
                      var IsBolDetailsAvailable = currObject.validateBolDetails(missingLift, dropinfo.OrderId);
                      var PoNumber = dropinfo.PoNumber;

                      if (!IsBolDetailsAvailable && !IsLiftDetailsAvailable) {
                        currObject.InvalidDropInfos.push({
                          ProductId: dropinfo.ProductId,
                          PoNumber: dropinfo.PoNumber,
                          Message: "No bol or lift provided for order with PO number :" + dropinfo.PoNumber
                        });
                      }
                    }
                  }
                }
              });
            }
          });
        } //To check if bols are not provided then lift details exist against that order 

      }, {
        key: "validateLiftTicketDetails",
        value: function validateLiftTicketDetails(item, orderId) {
          var IsLiftDetailsAvailble = true;
          var liftProducts = [];
          var ticketDetails = this.invoiceForm.get('TicketDetails').value;
          ticketDetails.map(function (item) {
            return item.Products.map(function (prod) {
              return liftProducts.push(prod);
            });
          });

          var groupBy = function groupBy(xs, key) {
            return xs.reduce(function (rv, x) {
              (rv[x[key]] = rv[x[key]] || []).push(x);
              return rv;
            }, {});
          };

          var liftgroupedProducts = groupBy(liftProducts, 'ProductId');

          for (var productId in liftgroupedProducts) {
            var key = productId;
            var productsperproductId = [];
            productsperproductId = liftgroupedProducts[key];
            var count = 0;
            var prodCount = productsperproductId.length;
            productsperproductId.forEach(function (product) {
              if (product.NetQuantity == "" && product.GrossQuantity == "") {
                count++;
              }
            });
          }

          var prodCount = 0;
          var missingInfoCount = 0;

          if (liftProducts.length > 0) {
            liftProducts.forEach(function (liftproduct) {
              if (liftproduct.ProductId == item.ProductId) {
                prodCount++;

                if (liftproduct.NetQuantity == "" && liftproduct.GrossQuantity == "" && liftproduct.BulkPlantName == "") {
                  //IsLiftDetailsAvailble = false;
                  missingInfoCount++;
                }
              }
            });

            if (prodCount == missingInfoCount && prodCount > 0 && missingInfoCount > 0) {
              IsLiftDetailsAvailble = false;
              return IsLiftDetailsAvailble;
            }
          } else {
            IsLiftDetailsAvailble = false;
          }

          return IsLiftDetailsAvailble;
        } //To check if liftdetails are not provided then bol details exist against that order 

      }, {
        key: "validateBolDetails",
        value: function validateBolDetails(item, orderId) {
          var IsBolDetailsAvailble = true;
          var bolProducts = [];
          var boldetails = this.invoiceForm.get('BolDetails').value;
          boldetails.map(function (item) {
            return item.Products.map(function (prod) {
              return bolProducts.push(prod);
            });
          });

          var groupBy = function groupBy(xs, key) {
            return xs.reduce(function (rv, x) {
              (rv[x[key]] = rv[x[key]] || []).push(x);
              return rv;
            }, {});
          };

          var bolgroupedProducts = groupBy(bolProducts, 'ProductId');

          for (var productId in bolgroupedProducts) {
            var key = productId;
            var productsperproductId = [];
            productsperproductId = bolgroupedProducts[key];
            var count = 0;
            var prodCount = productsperproductId.length;
            productsperproductId.forEach(function (product) {
              if (product.NetQuantity == "" && product.GrossQuantity == "") {
                count++;
              }
            });
          }

          var prodCount = 0;
          var missingInfoCount = 0;

          if (bolProducts.length > 0) {
            bolProducts.forEach(function (bolproduct) {
              if (bolproduct.ProductId == item.ProductId) {
                prodCount++;

                if (bolproduct.NetQuantity == "" && bolproduct.GrossQuantity == "") {
                  //IsBolDetailsAvailble = false;
                  missingInfoCount++;
                }
              }
            });

            if (prodCount == missingInfoCount && prodCount > 0 && missingInfoCount > 0) {
              IsBolDetailsAvailble = false;
              return IsBolDetailsAvailble;
            }
          } else {
            IsBolDetailsAvailble = false;
          }

          return IsBolDetailsAvailble;
        }
      }, {
        key: "findMinDate",
        value: function findMinDate(dropdates) {
          var dates = [];
          dropdates.forEach(function (dropdate) {
            if (dropdate != null) {
              var date = new Date(dropdate);
              dates.push(date);
            }
          }); //var maximumDate = new Date(Math.max.apply(null, dates)); 

          var minimumDate = new Date(Math.min.apply(null, dates));
          var minDate = minimumDate.toDateString();
          var date = this.getFormattedDate(minDate);

          if (date != null || date != undefined) {
            return date;
          }
        }
      }, {
        key: "getFormattedDate",
        value: function getFormattedDate(date) {
          var dt = new Date(date);
          var year = dt.getFullYear();
          var month = (1 + dt.getMonth()).toString();
          month = month.length > 1 ? month : '0' + month;
          var day = dt.getDate().toString();
          day = day.length > 1 ? day : '0' + day;
          return month + '/' + day + '/' + year;
        }
      }, {
        key: "getAnotherDropFees",
        value: function getAnotherDropFees(_orderId) {
          var _this81 = this;

          this.invoiceService.getInvoiceDropFees(_orderId).subscribe(function (response) {
            //var existing = this.InvoiceFees.slice();
            //response.forEach((model, idx) => {
            //    var isExists = existing.find(function (elem) { return IsDuplicate(elem, model); });
            //    if (isExists == undefined) {
            //        existing.push(model);
            //    }
            //});
            //this.InvoiceFees = existing;
            var fees = Object(_models_DropDetail__WEBPACK_IMPORTED_MODULE_2__["DeDuplicateFees"])(_this81.InvoiceFees, response);
            _this81.InvoiceFees = fees;
          });
        }
      }, {
        key: "checkValidityforFtl",
        value: function checkValidityforFtl() {
          var isBolLiftNotProvided = false;
          var boldetails = this.invoiceForm.get('BolDetails').value;
          var ticketDetails = this.invoiceForm.get('TicketDetails').value; //this.IsFTL ||

          if (this.IsBolDetailsRequired || this.IsBOLImageRequired) {
            if (boldetails.length == 0 && ticketDetails.length == 0) {
              isBolLiftNotProvided = true;
              return isBolLiftNotProvided;
            } else {
              isBolLiftNotProvided = false;
              this.invoiceForm.controls['TicketDetails'].clearValidators();
              this.invoiceForm.get('TicketDetails').updateValueAndValidity();
              this.invoiceForm.controls['BolDetails'].clearValidators();
              this.invoiceForm.get('BolDetails').updateValueAndValidity();
              return isBolLiftNotProvided;
            }
          } else {
            this.invoiceForm.controls['TicketDetails'].clearValidators();
            this.invoiceForm.get('TicketDetails').updateValueAndValidity();
            this.invoiceForm.controls['BolDetails'].clearValidators();
            this.invoiceForm.get('BolDetails').updateValueAndValidity();
            return isBolLiftNotProvided = false;
          }
        }
      }, {
        key: "checkValidityForImages",
        value: function checkValidityForImages() {
          var isBolImagenotprovided = false;
          var isLiftImagenotProvided = false;
          this.MissingImgInfos.length = 0;
          var boldetails = this.invoiceForm.get('BolDetails').value;
          var ticketDetails = this.invoiceForm.get('TicketDetails').value;
          var signatureImages = this.invoiceForm.get('SignatureImages').value;
          var liftTicketImage = ticketDetails.map(function (item) {
            return item.LiftImages;
          });
          var bolImages = boldetails.map(function (item) {
            return item.BolImages;
          });
          var bolimgCount = 0;
          var bollength = boldetails.length;

          if (this.IsBOLImageRequired) {
            //Means boldetails are added
            if (boldetails.length > 0) {
              bolImages.forEach(function (bolimg) {
                if (bolimg == "") {
                  bolimgCount++;
                }
              });
            }
          } //Means no bolimg provided but required


          if (bolimgCount == bollength && boldetails.length > 0) {
            isBolImagenotprovided = true;
            var ImgMisingMsg = "Please Provide Bol Image";
            this.MissingImgInfos.push({
              isImageNotProvided: isBolImagenotprovided,
              imgMissingMsg: ImgMisingMsg
            });
          }

          var liftImgCount = 0;
          var liftLength = ticketDetails.length;

          if (this.IsBOLImageRequired && liftLength > 0) {
            liftTicketImage.forEach(function (liftimg) {
              if (liftimg == "") {
                liftImgCount++;
              }
            });
          } //means no liftimage provided but required


          if (liftImgCount == liftLength && liftLength > 0) {
            isLiftImagenotProvided = true;
            var liftImgMissingMsg = "Please Provide Lift ticket Image";
            this.MissingImgInfos.push({
              isImageNotProvided: isLiftImagenotProvided,
              imgMissingMsg: liftImgMissingMsg
            });
          } // check for signature image


          if (this.IsSignatureRequired) {
            if (signatureImages == "" || signatureImages == null || signatureImages == undefined) {
              //Means no signature provided but image is required
              var imgMisingMsg = "Please Provide Signature Image";
              this.MissingImgInfos.push({
                isImageNotProvided: true,
                imgMissingMsg: imgMisingMsg
              });
            }
          }
        }
      }, {
        key: "OnScheduleReceived",
        value: function OnScheduleReceived(schedules) {
          var _this82 = this;

          var prevBlendDetail = this.BlendedScheduleDetail.find(function (t) {
            return t && t.Schedules && t.Schedules.some(function (x) {
              return x.OrderId == schedules.OrderId;
            });
          });

          if (prevBlendDetail && prevBlendDetail.BlendId && prevBlendDetail.BlendId != '') {
            this.RemoveBlendSchedules(prevBlendDetail.BlendId);
          }

          if (parseInt(schedules.ScheduleId) > 0) {
            this.invoiceService.getAssignedDriverForSchedule(parseInt(schedules.ScheduleId), schedules.OrderId).subscribe(function (data) {
              if (data.Id > 0) {
                _this82.SelectedDriver = [data]; // Set NgModel for UI display

                _this82.invoiceForm.get('Driver').patchValue(data);
              }
            });

            if (schedules.BlendedScheduleId && schedules.BlendedScheduleId != '') {
              this.AddBlendSchedules(schedules.BlendedScheduleId, parseInt(schedules.ScheduleId));
            }
          } else if (schedules.ScheduleId == "null" || schedules.ScheduleId == "undefined") {
            this.invoiceForm.get('Driver').patchValue(null);
            this.SelectedDriver = [];
          }
        }
      }, {
        key: "AddBlendSchedules",
        value: function AddBlendSchedules(blendedScheduleId, trackableScheduleId) {
          var _this83 = this;

          this.products.IsLoading = true;
          this.invoiceService.getBlendedProducts(blendedScheduleId).subscribe(function (data) {
            if (data && data.length > 0) {
              _this83.BlendedScheduleDetail.push({
                BlendId: blendedScheduleId,
                Schedules: data
              });

              var formOrders = _this83.invoiceForm.get('SelectedOrders').value;

              var _drops = _this83.invoiceForm.get('Drops');

              data.forEach(function (t) {
                var poItem = _this83.PoList.find(function (x) {
                  return x.OrderId == t.OrderId;
                });

                var scheduleId = t.Id;
                var deliveryLevelPO = t.DeliveryLevelPO;
                var selOrderId = t.OrderId;

                if (poItem && !formOrders.some(function (t) {
                  return t.OrderId == selOrderId;
                })) {
                  formOrders.push(poItem);

                  _this83.onOrderSelect(poItem, scheduleId, blendedScheduleId, deliveryLevelPO);
                } else {
                  var dropIndex = _drops.controls.findIndex(function (z) {
                    return z.get('OrderId').value == selOrderId;
                  });

                  var scheduledrop = _this83.invoiceForm.get('Drops').at(dropIndex);

                  scheduledrop.get('DeliveryLevelPO').patchValue(deliveryLevelPO);
                  scheduledrop.get('TrackableScheduleId').patchValue(scheduleId, {
                    emitEvent: false
                  });
                  if (poItem) scheduledrop.get('BlendedScheduleId').patchValue(blendedScheduleId, {
                    emitEvent: false
                  });
                }
              });

              _this83.invoiceForm.get('SelectedOrders').setValue(formOrders);
            }

            _this83.products.IsLoading = false;
          });
        }
      }, {
        key: "RemoveBlendSchedules",
        value: function RemoveBlendSchedules(_prevScheduleBlendId) {
          var _this84 = this;

          var _isOrderDeselect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          var _a;

          var rmvOrders = (_a = this.BlendedScheduleDetail.find(function (t) {
            return t.BlendId == _prevScheduleBlendId;
          })) === null || _a === void 0 ? void 0 : _a.Schedules.map(function (t) {
            return t.OrderId;
          }); //Remove blended products

          this.BlendedScheduleDetail.splice(this.BlendedScheduleDetail.findIndex(function (t) {
            return t && t.BlendId == _prevScheduleBlendId;
          }), 1);
          var formOrders = this.invoiceForm.get('SelectedOrders').value; //var rmvOrders = this.InvoiceModel.Drops.filter(t => t.BlendedScheduleId == _prevScheduleBlendId).map(t => t.OrderId);

          if (rmvOrders) {
            rmvOrders.forEach(function (t) {
              var _curOrderId = t;

              var rmvPO = _this84.PoList.find(function (x) {
                return x.OrderId == _curOrderId;
              });

              if (rmvPO) {
                if (formOrders.some(function (t) {
                  return t.OrderId == rmvPO.OrderId;
                })) {
                  _this84.onOrderDeSelect(rmvPO, true);
                }
              } else if (_isOrderDeselect) {
                // set trackable schedule Id as null        
                var _drops = _this84.invoiceForm.get('Drops');

                var dropIndex = _drops.controls.findIndex(function (z) {
                  return z.get('OrderId').value == _curOrderId;
                });

                _this84.invoiceForm.get('Drops').at(dropIndex).get('TrackableScheduleId').patchValue(null);
              }
            });
            formOrders = formOrders.filter(function (t) {
              return !rmvOrders.includes(t.OrderId);
            });
          }

          this.invoiceForm.get('SelectedOrders').setValue(formOrders);
        }
      }, {
        key: "IsLiftTicketDetailsMissing",
        value: function IsLiftTicketDetailsMissing() {
          var IsLiftTicketDetailsMissing = false;
          var ticketDetails = [];
          ticketDetails = this.invoiceForm.get('TicketDetails').value;

          if (ticketDetails.length > 0) {
            var tktNumbers = ticketDetails.map(function (item) {
              return item.LiftTicketNumber;
            });

            for (var i = 0; i < tktNumbers.length; i++) {
              if (tktNumbers[i] == '' || tktNumbers[i] == null || tktNumbers[i] == undefined) {
                IsLiftTicketDetailsMissing = true;
                break;
              }
            }

            return IsLiftTicketDetailsMissing;
          } else {
            IsLiftTicketDetailsMissing = false;
            return IsLiftTicketDetailsMissing;
          }
        }
      }, {
        key: "validateBDRDetails",
        value: function validateBDRDetails() {
          var isBdrDetailsAdded = true;
          this.invoiceForm.get("Drops").value.forEach(function (drop) {
            if (drop.IsMarineLocation && (drop.BdrDetails == null || drop.BdrDetails == undefined || Object.keys(drop.BdrDetails).length === 0)) {
              isBdrDetailsAdded = false;
              return isBdrDetailsAdded;
            }
          });
          return isBdrDetailsAdded;
        }
      }, {
        key: "onSubmit",
        value: function onSubmit() {
          var _this85 = this;

          this.invoiceForm.markAllAsTouched();
          this.findDuplicates();
          var isBolLiftNotProvided = this.checkValidityforFtl();
          this.validateLiftDates();
          this.validateBolAndLiftDetails();
          this.checkValidityForImages();
          var isLiftTicketDetails = this.IsLiftTicketDetailsMissing(); //var isValidBDR = this.validateBDRDetails();
          //if (!isValidBDR) {
          //    Declarations.msgerror("BDR details are required", undefined, undefined);
          //    return;
          //}
          // validate terminal assign on order

          var invoiceViewModel = this.invoiceForm.getRawValue();
          var customer = invoiceViewModel.Customer;

          if (!this.IsSupressOrderPricing && customer.Location.CountryId != _carrier_models_location__WEBPACK_IMPORTED_MODULE_9__["Country"].CAR) {
            this.isTerminalAssignedOnOrder();
          }

          if (this.IsDateInvalid) {
            _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror("Lift date should be less than or equal to drop date", undefined, undefined);
          } else if (this.hasDuplicateProduct) {
            _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror('You are trying to add multiple drops for same product ', undefined, undefined);
          } else if (isBolLiftNotProvided) {
            _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror('Please Enter Bol or Lift ticket details', undefined, undefined);
          } else if (isLiftTicketDetails) {
            _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror('Lift Ticket Details are missing ', undefined, undefined);
          } else if (this.InvalidDropInfos.length > 0) {
            this.InvalidDropInfos.forEach(function (invaliddropinfo) {
              if (invaliddropinfo.Message != "") {
                _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror(invaliddropinfo.Message, undefined, undefined);
              }
            });
          } else if (this.MissingImgInfos.length > 0) {
            this.MissingImgInfos.forEach(function (missingimginfo) {
              if (missingimginfo.isImageNotProvided == true) {
                _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror(missingimginfo.imgMissingMsg, undefined, undefined);
              }
            });
          } else if (this.InValidBolImage) {
            _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror("Bol Image or Lift Image is required", undefined, undefined);
          } else {
            this.validateDropStartEndTime();

            if (this.invoiceForm.valid) {
              this.IsLoadingImages = true;

              if (invoiceViewModel.BolDetails && invoiceViewModel.BolDetails.length > 0 || invoiceViewModel.TicketDetails && invoiceViewModel.TicketDetails.length > 0) {
                invoiceViewModel.Drops.forEach(function (drop) {
                  drop.TerminalId = 0;
                  drop.TerminalName = "";
                });
              }

              if (invoiceViewModel.Drops && invoiceViewModel.Drops.length > 0) {
                invoiceViewModel.Drops.forEach(function (drop) {
                  drop.FuelSurchargeFreightFee.FreightPricingMethod = drop.FuelSurchargeFreightFee.FreightPricingMethod;
                  drop.FreightPricingMethod = drop.FuelSurchargeFreightFee.FreightPricingMethod;

                  if (drop.FuelSurchargeFreightFee.FreightType && drop.FuelSurchargeFreightFee.FreightType != null && drop.FuelSurchargeFreightFee.FreightType.length > 0) {
                    drop.FuelSurchargeFreightFee.FreightRateRuleType = drop.FuelSurchargeFreightFee.FreightType[0].Id;
                  }

                  if (drop.FuelSurchargeFreightFee.FreightTableType && drop.FuelSurchargeFreightFee.FreightTableType.length > 0) {
                    drop.FuelSurchargeFreightFee.FreightRateTableType = drop.FuelSurchargeFreightFee.FreightTableType[0].Id;
                  }

                  if (drop.FuelSurchargeFreightFee.FreightTableName && drop.FuelSurchargeFreightFee.FreightTableName.length > 0) {
                    drop.FuelSurchargeFreightFee.FreightRateRuleId = drop.FuelSurchargeFreightFee.FreightTableName[0].Id;
                  }

                  if (drop.FuelSurchargeFreightFee.FuelSurchargeTableType && drop.FuelSurchargeFreightFee.FuelSurchargeTableType != null && drop.FuelSurchargeFreightFee.FuelSurchargeTableType.length > 0) {
                    drop.FuelSurchargeFreightFee.FuelSurchargeTableType = drop.FuelSurchargeFreightFee.FuelSurchargeTableType[0].Id;
                  }

                  if (drop.FuelSurchargeFreightFee.FuelSurchargeTableName && drop.FuelSurchargeFreightFee.FuelSurchargeTableName.length > 0) {
                    drop.FuelSurchargeFreightFee.FuelSurchargeTableId = drop.FuelSurchargeFreightFee.FuelSurchargeTableName[0].Id;
                  }
                });
              }

              var _AccessorialFeeDetails = [];

              if (invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType && invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType.length > 0) {
                invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType = invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType[0].Id;

                if (invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId && invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId.length > 0) {
                  invoiceViewModel.AccessorialFeeDetails.AccessorialFeeId.forEach(function (_element) {
                    _AccessorialFeeDetails.push({
                      AccessorialFeeId: _element.Id,
                      AccessorialFeeTableType: invoiceViewModel.AccessorialFeeDetails.AccessorialFeeTableType
                    });
                  });
                }

                invoiceViewModel.AccessorialFeeDetails = _AccessorialFeeDetails;
              }

              if (!isNaN(this.exceptionId) && this.exceptionId > 0 && invoiceViewModel.Drops.length > 0 && invoiceViewModel.Drops[0].OrderId == this.orderId) {
                invoiceViewModel.Drops[0].ExceptionId = this.exceptionId;
              }

              this.imageuploadComponents.first.GetSasForBlob().then(function (sas) {
                return _this85.recieveChildImages(invoiceViewModel, sas).then(function () {
                  _this85.IsLoadingImages = false;
                  _this85.IsLoading = true; //console.log('start1', entireInvoiceModel);

                  _this85.invoiceService.postCreateInvoice(invoiceViewModel, _this85.invoiceId).subscribe(function (data) {
                    if (data != null && data.StatusCode == 0) {
                      _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgsuccess(data.StatusMessage, undefined, undefined);

                      _this85.IsLoading = false;

                      _this85.invoiceForm.reset();

                      window.location.href = _this85.baseDetailUrl;
                    } else {
                      _this85.IsLoading = false;

                      _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);
                    }
                  });
                });
              });
            } else {
              this.IsLoading = false;
              this.invoiceForm.markAllAsTouched();
              var invalidControls = this.findInvalidControlsRecursive(this.invoiceForm);

              if (invalidControls.indexOf("BolDetails") != -1 && invalidControls.indexOf("BolImages") != -1 || invalidControls.indexOf("TicketDetails") != -1 && invalidControls.indexOf("LiftImages") != -1) {
                _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror("Bol or Lift Image is required", undefined, undefined);
              }

              if (invalidControls.indexOf("InvoiceImages") != -1) {
                _declarations_module__WEBPACK_IMPORTED_MODULE_8__["Declarations"].msgerror("Drop/Invoice Images are required", undefined, undefined);
              }
            }
          }
        }
      }, {
        key: "findInvalidControlsRecursive",
        value: function findInvalidControlsRecursive(formToInvestigate) {
          var invalidControls = [];

          var recursiveFunc = function recursiveFunc(form) {
            Object.keys(form.controls).forEach(function (field) {
              var control = form.get(field);
              if (control.invalid) invalidControls.push(field);

              if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]) {
                recursiveFunc(control);
              } else if (control instanceof _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArray"]) {
                recursiveFunc(control);
              }
            });
          };

          recursiveFunc(formToInvestigate);
          return invalidControls;
        }
      }, {
        key: "isTerminalAssignedOnOrder",
        value: function isTerminalAssignedOnOrder() {
          var isTerminalAssigned = true;
          var currObj = this;
          this.invoiceForm.get("Drops").value.forEach(function (drop) {
            if (drop.TypeOfFuel != 10 && drop.TypeOfFuel != 26 && (drop.TerminalId == 0 || drop.TerminalId == '' || drop.TerminalId == null)) {
              currObj.InvalidDropInfos.push({
                ProductId: drop.FuelTypeId,
                PoNumber: drop.PoNumber,
                Message: "Terminal not assigned for PO# " + drop.PoNumber
              });
              isTerminalAssigned = false;
              return isTerminalAssigned;
            }
          });
          return isTerminalAssigned;
        }
      }]);

      return CreateinvoiceComponent;
    }();

    CreateinvoiceComponent.ɵfac = function CreateinvoiceComponent_Factory(t) {
      return new (t || CreateinvoiceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_12__["ActivatedRoute"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_13__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]));
    };

    CreateinvoiceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: CreateinvoiceComponent,
      selectors: [["app-createinvoice"]],
      viewQuery: function CreateinvoiceComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_7__["OtherProductTaxesComponent"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_3__["ProducDetailComponent"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_4__["ImageuploadComponent"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_5__["BolListComponent"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_6__["LiftTicketsComponent"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.otherProductTax = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.products = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.imageuploadComponents = _t);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.BolListComponents = _t);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.LiftTicketsComponents = _t);
        }
      },
      decls: 64,
      vars: 55,
      consts: [[3, "IsBadgeMandatory", "onBolDetailAdded", "onBolDetailUpdated"], ["bolDetail", ""], [3, "IsBadgeMandatory", "IsFrieghtPricingMethodAuto", "onTicketDetailAdded", "onTicketDetailUpdated"], ["liftDetail", ""], [3, "formGroup", "ngSubmit"], [1, "row"], [1, "col-sm-3"], [1, "form-group"], [3, "ngClass", "disabled"], ["formControlName", "SelectedOrders", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], [1, "col-sm-6", "text-right"], ["type", "button", "id", "bol_button", "value", "+ BOL", 1, "btn", "btn-primary", "mr5", 3, "click"], [1, "fa", "fa-plus-circle"], ["type", "button", "id", "lift_button", "value", "+ BOL", 1, "btn", "btn-warning", 3, "click"], [1, "col-sm-9"], [3, "Parent", "BolDetails", "Model", "IsImageRequired", "onBolEditRequest", "onBolAdded", "OnBolDeleted", "onBolEdit", "OnBolQuantitiesAdded"], ["bolList", ""], [3, "Parent", "TicketDetails", "Model", "IsImageRequired", "onTicketEditRequest", "onLiftTicketAdded", "OnLiftTicketDeleted", "onLiftTicketEdit", "OnLiftQuantitiesAdded"], ["ticketList", ""], [3, "Parent", "Drops", "onBulkplantUpdated", "onBulkplantPickupReceived", "OnScheduleReceived"], ["productDetail", ""], ["formControlName", "FuelDropLocation", 3, "IsVariousOrigin"], [3, "Parent", "IsFrieghtPricingMethodAuto", "Fees", "InputAccessorialFeeDetails", "NoOrders", "Currency", 4, "ngIf"], [3, "Parent", "Currency", "Taxes", 4, "ngIf"], [1, "text-right"], ["type", "button", "value", "Cancel", 1, "btn", 3, "click"], ["type", "submit", "value", "Submit", 1, "btn", "btn-success", "btn-lg", "no-disable"], ["type", "hidden", "formControlName", "InvoiceTypeId"], ["type", "hidden", "formControlName", "IsVariousOrigin"], ["type", "hidden", "formControlName", "IsRebillInvoice"], ["type", "hidden", "formControlName", "OriginalInvoiceHeaderId"], ["type", "hidden", "formControlName", "BrokerChainId"], [1, "well", "box-shadow"], ["formControlName", "Customer", 3, "IsVariousOrigin"], [1, "col-sm-12"], ["type", "text", "placeholder", "Invoice #", "formControlName", "SupplierInvoiceNumber", 1, "form-control"], ["formControlName", "SelectedDriver", 3, "ngModel", "placeholder", "settings", "data", "ngModelChange", "onSelect", "onDeSelect"], ["type", "hidden", "formControlName", "Driver"], ["type", "text", "placeholder", "Carrier Name ", "formControlName", "Carrier", 1, "form-control"], ["formControlName", "InvoiceNotes", "placeholder", "Invoice Notes", 1, "form-control"], ["class", "well box-shadow", 4, "ngIf"], ["formControlName", "InvoiceImages", 3, "fileType", "orderId", "inputFile", "invoice", "requiredIfTrue"], ["formControlName", "AdditionalImages", 3, "fileType", "orderId", "inputFile", "additional"], ["formControlName", "SignatureImages", 3, "fileType", "orderId", "inputFile", "signature", "requiredIfTrue"], [4, "ngIf"], ["class", "loader", 4, "ngIf"], [3, "Parent", "IsFrieghtPricingMethodAuto", "Fees", "InputAccessorialFeeDetails", "NoOrders", "Currency"], [3, "Parent", "Currency", "Taxes"], ["otherProductTax", ""], ["formControlName", "PaymentTerm"], ["formControlName", "BDNImages", 3, "fileType", "orderId", "inputFile", "BDNImage"], ["formControlName", "TaxAffidavitImages", 3, "fileType", "orderId", "inputFile", "TaxAffidavit"], ["formControlName", "CoastGuardInspectionImages", 3, "fileType", "orderId", "inputFile", "CoastGuardInspection"], ["formControlName", "InspectionRequestVoucherImages", 3, "fileType", "orderId", "inputFile", "InspectionRequestVoucher"], [1, "loader"], [1, "loading-content", "text-center"], [1, "spinner"], [1, "font-bold"]],
      template: function CreateinvoiceComponent_Template(rf, ctx) {
        if (rf & 1) {
          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "app-bol-detail", 0, 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onBolDetailAdded", function CreateinvoiceComponent_Template_app_bol_detail_onBolDetailAdded_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](21);

            return _r2.bolDetailAdded($event);
          })("onBolDetailUpdated", function CreateinvoiceComponent_Template_app_bol_detail_onBolDetailUpdated_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](21);

            return _r2.bolDetailUpdated($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "app-lift-detail", 2, 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTicketDetailAdded", function CreateinvoiceComponent_Template_app_lift_detail_onTicketDetailAdded_2_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](23);

            return _r3.ticketDetailAdded($event);
          })("onTicketDetailUpdated", function CreateinvoiceComponent_Template_app_lift_detail_onTicketDetailUpdated_2_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](23);

            return _r3.ticketDetailUpdated($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "form", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function CreateinvoiceComponent_Template_form_ngSubmit_4_listener() {
            return ctx.onSubmit();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "fieldset", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "ng-multiselect-dropdown", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onSelect", function CreateinvoiceComponent_Template_ng_multiselect_dropdown_onSelect_9_listener($event) {
            return ctx.onOrderSelect($event);
          })("onDeSelect", function CreateinvoiceComponent_Template_ng_multiselect_dropdown_onDeSelect_9_listener($event) {
            return ctx.onOrderDeSelect($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "button", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CreateinvoiceComponent_Template_button_click_12_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            _r0.initDrops(ctx.invoiceForm.get("Drops").value, ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

            _r0.toggleOpen(true, null);

            return _r0.getAddedProductDetails(ctx.invoiceForm.get("Drops").value);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "i", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, " BOL ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "button", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CreateinvoiceComponent_Template_button_click_15_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);

            _r1.initDrops(ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

            _r1.toggleOpen(true, null);

            return _r1.getAddedProductDetails(ctx.invoiceForm.get("Drops").value);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](16, "i", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " Lift ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "app-bol-list", 15, 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onBolEditRequest", function CreateinvoiceComponent_Template_app_bol_list_onBolEditRequest_20_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            _r0.initDrops(ctx.invoiceForm.get("Drops").value, ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

            return _r0.toggleOpen(true, $event);
          })("onBolAdded", function CreateinvoiceComponent_Template_app_bol_list_onBolAdded_20_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            return _r0.getAddedBols($event);
          })("OnBolDeleted", function CreateinvoiceComponent_Template_app_bol_list_OnBolDeleted_20_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            return _r0.getDeletedBol($event);
          })("onBolEdit", function CreateinvoiceComponent_Template_app_bol_list_onBolEdit_20_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

            return _r0.getEditedBol($event);
          })("OnBolQuantitiesAdded", function CreateinvoiceComponent_Template_app_bol_list_OnBolQuantitiesAdded_20_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](26);

            return _r4.getBolLiftQuantities();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "app-lift-tickets", 17, 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTicketEditRequest", function CreateinvoiceComponent_Template_app_lift_tickets_onTicketEditRequest_22_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);

            _r1.initDrops(ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

            _r1.initDrops(ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

            return _r1.toggleOpen(true, $event);
          })("onLiftTicketAdded", function CreateinvoiceComponent_Template_app_lift_tickets_onLiftTicketAdded_22_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);

            return _r1.getAddedLiftTickets($event);
          })("OnLiftTicketDeleted", function CreateinvoiceComponent_Template_app_lift_tickets_OnLiftTicketDeleted_22_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);

            return _r1.getDeletedLift($event);
          })("onLiftTicketEdit", function CreateinvoiceComponent_Template_app_lift_tickets_onLiftTicketEdit_22_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);

            return _r1.getEditedLiftTickets($event);
          })("OnLiftQuantitiesAdded", function CreateinvoiceComponent_Template_app_lift_tickets_OnLiftQuantitiesAdded_22_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](26);

            return _r4.getBolLiftQuantities();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "fieldset", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "app-produc-detail", 19, 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onBulkplantUpdated", function CreateinvoiceComponent_Template_app_produc_detail_onBulkplantUpdated_25_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](23);

            return _r3.updateBulkPlantDetail($event);
          })("onBulkplantPickupReceived", function CreateinvoiceComponent_Template_app_produc_detail_onBulkplantPickupReceived_25_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

            var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](23);

            return _r3.updateBulkPlantDetail($event);
          })("OnScheduleReceived", function CreateinvoiceComponent_Template_app_produc_detail_OnScheduleReceived_25_listener($event) {
            return ctx.OnScheduleReceived($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](27, "app-various-drop-location", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](28, CreateinvoiceComponent_app_fee_list_28_Template, 1, 6, "app-fee-list", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](29, CreateinvoiceComponent_app_other_product_taxes_29_Template, 2, 3, "app-other-product-taxes", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 24);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "input", 25);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CreateinvoiceComponent_Template_input_click_31_listener() {
            return ctx.onCancel();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](32, "input", 26);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](33, "input", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](34, "input", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](35, "input", 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](36, "input", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](37, "input", 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "div", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](40, "app-customer-detail", 33);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "fieldset", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "div", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "div", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](46, "input", 35);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "div", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](48, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](49, "ng-multiselect-dropdown", 36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function CreateinvoiceComponent_Template_ng_multiselect_dropdown_ngModelChange_49_listener($event) {
            return ctx.SelectedDriver = $event;
          })("onSelect", function CreateinvoiceComponent_Template_ng_multiselect_dropdown_onSelect_49_listener($event) {
            return ctx.OnDriverSelect($event);
          })("onDeSelect", function CreateinvoiceComponent_Template_ng_multiselect_dropdown_onDeSelect_49_listener($event) {
            return ctx.OnDriverDeSelect($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "input", 37);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "div", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](53, "input", 38);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](54, "div", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](55, "textarea", 39);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](56, CreateinvoiceComponent_div_56_Template, 2, 0, "div", 40);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](57, "div", 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](58, "app-imageupload", 41);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](59, "app-imageupload", 42);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](60, "app-imageupload", 43);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](61, CreateinvoiceComponent_div_61_Template, 5, 16, "div", 44);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](62, CreateinvoiceComponent_div_62_Template, 5, 0, "div", 45);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](63, CreateinvoiceComponent_div_63_Template, 5, 0, "div", 45);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("IsBadgeMandatory", ctx.IsBadgeMandatory);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("IsBadgeMandatory", ctx.IsBadgeMandatory)("IsFrieghtPricingMethodAuto", ctx.IsFrieghtPricingMethodAuto);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.invoiceForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](49, _c0, ctx.disableInputControls))("disabled", ctx.disableInputControls ? true : null);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("placeholder", "Search Another PO")("settings", ctx.PoDdlSettings)("data", ctx.PoList);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", ctx.invoiceForm)("BolDetails", ctx.invoiceForm.get("BolDetails"))("Model", ctx.InvoiceModel == null ? null : ctx.InvoiceModel.BolDetails)("IsImageRequired", ctx.IsBOLImageRequired);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", ctx.invoiceForm)("TicketDetails", ctx.invoiceForm.get("TicketDetails"))("Model", ctx.InvoiceModel == null ? null : ctx.InvoiceModel.TicketDetails)("IsImageRequired", ctx.IsBOLImageRequired);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](51, _c0, ctx.disableInputControls))("disabled", ctx.disableInputControls ? true : null);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", ctx.invoiceForm)("Drops", ctx.InvoiceModel == null ? null : ctx.InvoiceModel.Drops);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("IsVariousOrigin", ctx.InvoiceModel == null ? null : ctx.InvoiceModel.IsVariousOrigin);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.IsSupressOrderPricing);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.OtherProductAdded && !ctx.IsSupressOrderPricing);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("IsVariousOrigin", ctx.InvoiceModel == null ? null : ctx.InvoiceModel.IsVariousOrigin);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](53, _c0, ctx.disableInputControls))("disabled", ctx.disableInputControls ? true : null);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx.SelectedDriver)("placeholder", "Select Driver")("settings", ctx.DriverDdlSettings)("data", ctx.DriverList);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.IsSupressOrderPricing);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "InvFile")("orderId", ctx.orderId)("inputFile", ctx.InvoiceImages)("invoice", true)("requiredIfTrue", ctx.IsDropImageRequired);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "additionalFile")("orderId", ctx.orderId)("inputFile", ctx.AdditionalImages)("additional", true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "signatureFile")("orderId", ctx.orderId)("inputFile", ctx.SignatureImages)("signature", true)("requiredIfTrue", ctx.IsSignatureRequired);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.products == null ? null : ctx.products.IsMarineLocation);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsLoading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsLoadingImages);
        }
      },
      directives: [_bol_detail_bol_detail_component__WEBPACK_IMPORTED_MODULE_14__["BolDetailComponent"], _lift_tickets_lift_detail_component__WEBPACK_IMPORTED_MODULE_15__["LiftDetailComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_16__["NgClass"], ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_17__["MultiSelectComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_5__["BolListComponent"], _lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_6__["LiftTicketsComponent"], _produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_3__["ProducDetailComponent"], _various_drop_location_various_drop_location_component__WEBPACK_IMPORTED_MODULE_18__["VariousDropLocationComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_16__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _customer_detail_customer_detail_component__WEBPACK_IMPORTED_MODULE_19__["CustomerDetailComponent"], _imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_4__["ImageuploadComponent"], _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_20__["RequiredIfTrueValidator"], _fees_fee_list_fee_list_component__WEBPACK_IMPORTED_MODULE_21__["FeeListComponent"], _taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_7__["OtherProductTaxesComponent"], _payment_terms_payment_terms_component__WEBPACK_IMPORTED_MODULE_22__["PaymentTermsComponent"]],
      styles: [".ui-datepicker {\r\n    display: inline-block !important;\r\n}\r\n\r\n  .ui-inputtext {\r\n    font-size: 13px !important;\r\n    height: 34px !important;\r\n    background-color: #FFFFFF;\r\n    background-image: none;\r\n    border: 1px solid #e5e6e7 !important;\r\n    border-radius: 1px !important;\r\n    display: block !important;\r\n    padding: 6px 12px !important;\r\n    transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;\r\n    width: 100%;\r\n}\r\n\r\n.upload-btn-wrapper[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n}\r\n\r\n.btn-upload[_ngcontent-%COMP%] {\r\n    border: 2px solid gray;\r\n    color: gray;\r\n    background-color: white;\r\n    padding: 8px 20px;\r\n    border-radius: 8px;\r\n    font-weight: bold;\r\n}\r\n\r\n.upload-btn-wrapper[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%] {\r\n    font-size: 100px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n}\r\n\r\n  .ng-sidebar {\r\n    z-index: 3 !important;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS9jcmVhdGVpbnZvaWNlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksMEJBQTBCO0lBQzFCLHVCQUF1QjtJQUN2Qix5QkFBeUI7SUFDekIsc0JBQXNCO0lBQ3RCLG9DQUFvQztJQUNwQyw2QkFBNkI7SUFDN0IseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1Qiw4RUFBOEU7SUFDOUUsV0FBVztBQUNmOztBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsV0FBVztJQUNYLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsT0FBTztJQUNQLE1BQU07SUFDTixVQUFVO0FBQ2Q7O0FBQ0E7SUFDSSxxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9pbnZvaWNlL2NyZWF0ZWludm9pY2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG46Om5nLWRlZXAgLnVpLWRhdGVwaWNrZXIge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAudWktaW5wdXR0ZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogMTNweCAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAzNHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNWU2ZTcgIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDFweCAhaW1wb3J0YW50O1xyXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDZweCAxMnB4ICFpbXBvcnRhbnQ7XHJcbiAgICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQgMHMsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQgMHM7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG4udXBsb2FkLWJ0bi13cmFwcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5idG4tdXBsb2FkIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XHJcbiAgICBjb2xvcjogZ3JheTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogOHB4IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcclxuICAgIGZvbnQtc2l6ZTogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG46Om5nLWRlZXAgLm5nLXNpZGViYXIge1xyXG4gICAgei1pbmRleDogMyAhaW1wb3J0YW50O1xyXG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CreateinvoiceComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-createinvoice',
          templateUrl: './createinvoice.component.html',
          styleUrls: ['./createinvoice.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_12__["ActivatedRoute"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_13__["InvoiceService"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
        }];
      }, {
        imageuploadComponents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"],
          args: [_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_4__["ImageuploadComponent"]]
        }],
        BolListComponents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"],
          args: [_bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_5__["BolListComponent"]]
        }],
        LiftTicketsComponents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"],
          args: [_lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_6__["LiftTicketsComponent"]]
        }],
        otherProductTax: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_7__["OtherProductTaxesComponent"]]
        }],
        products: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_3__["ProducDetailComponent"]]
        }]
      });
    })();

    var DropInfo = function DropInfo() {
      _classCallCheck(this, DropInfo);
    };

    var InvalidDropDetailInfo = function InvalidDropDetailInfo() {
      _classCallCheck(this, InvalidDropDetailInfo);
    };

    var MissingImageInfo = function MissingImageInfo() {
      _classCallCheck(this, MissingImageInfo);
    };
    /***/

  },

  /***/
  "./src/app/invoice/customer-detail/customer-detail.component.ts": function srcAppInvoiceCustomerDetailCustomerDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CustomerDetailComponent", function () {
      return CustomerDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function CustomerDetailComponent_span_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"](" ", ctx_r0.CustomerData == null ? null : ctx_r0.CustomerData.Location == null ? null : ctx_r0.CustomerData.Location.SiteName, ", ", ctx_r0.CustomerData == null ? null : ctx_r0.CustomerData.Location == null ? null : ctx_r0.CustomerData.Location.StateCode, " ");
      }
    }

    function CustomerDetailComponent_ng_template_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "br");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"](" ", ctx_r2.CustomerData == null ? null : ctx_r2.CustomerData.Location == null ? null : ctx_r2.CustomerData.Location.SiteName, ", ", ctx_r2.CustomerData == null ? null : ctx_r2.CustomerData.Location == null ? null : ctx_r2.CustomerData.Location.Address, ", ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate3"](" ", ctx_r2.CustomerData == null ? null : ctx_r2.CustomerData.Location == null ? null : ctx_r2.CustomerData.Location.City, ", ", ctx_r2.CustomerData == null ? null : ctx_r2.CustomerData.Location == null ? null : ctx_r2.CustomerData.Location.StateCode, " ", ctx_r2.CustomerData == null ? null : ctx_r2.CustomerData.Location == null ? null : ctx_r2.CustomerData.Location.ZipCode, " ");
      }
    }

    var CustomerDetailComponent = /*#__PURE__*/function () {
      function CustomerDetailComponent(fb) {
        _classCallCheck(this, CustomerDetailComponent);

        this.fb = fb; //----------------- DO NOT MODIFY: Control Value accessor ----------------------

        this.onTouched = function () {};
      }

      _createClass(CustomerDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this86 = this;

          this.Customer = this.fb.group({
            CompanyId: this.fb.control(''),
            CompanyName: this.fb.control(''),
            Location: this.fb.group({
              JobId: this.fb.control(''),
              SiteName: this.fb.control(''),
              Address: this.fb.control(''),
              City: this.fb.control(''),
              StateCode: this.fb.control(''),
              ZipCode: this.fb.control(''),
              CountryId: this.fb.control('')
            }),
            ContactName: this.fb.control(''),
            ContactPhone: this.fb.control(''),
            ContactEmail: this.fb.control('')
          });
          this.registerOnChange(function (data) {
            _this86.CustomerData = data;

            if (_this86.IsVariousOrigin) {
              _this86.CustomerData.Location.Address = null;
              _this86.CustomerData.Location.City = null;
              _this86.CustomerData.Location.ZipCode = null;
            }
          });
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.IsVariousOrigin) {
            this.IsVariousOrigin = change.IsVariousOrigin.currentValue || false;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(val) {
          val && this.Customer.patchValue(val, {
            emitEvent: true
          });
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.Customer.valueChanges.subscribe(fn);
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(isDisabled) {
          isDisabled ? this.Customer.disable() : this.Customer.enable();
        }
      }]);

      return CustomerDetailComponent;
    }();

    CustomerDetailComponent.ɵfac = function CustomerDetailComponent_Factory(t) {
      return new (t || CustomerDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]));
    };

    CustomerDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: CustomerDetailComponent,
      selectors: [["app-customer-detail"]],
      inputs: {
        IsVariousOrigin: "IsVariousOrigin"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return CustomerDetailComponent;
        }),
        multi: true
      }]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 17,
      vars: 7,
      consts: [[3, "formGroup"], [1, "fs13", "mt0", "mb5", "f-bold"], [1, "fs13", "mb5", "mt15", "f-bold"], ["formGroupName", "Location"], [4, "ngIf", "ngIfElse"], ["notVarious", ""], [1, "fs13", "mb0", "mt15", "f-bold"]],
      template: function CustomerDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h5", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Customer");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "h5", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Location");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "span", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, CustomerDetailComponent_span_8_Template, 2, 2, "span", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, CustomerDetailComponent_ng_template_9_Template, 4, 5, "ng-template", null, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "h5", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Contact");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "span");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](15, "br");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.Customer);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.CustomerData == null ? null : ctx.CustomerData.CompanyName, " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsVariousOrigin)("ngIfElse", _r1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"](" ", ctx.CustomerData == null ? null : ctx.CustomerData.ContactName, " - ", ctx.CustomerData == null ? null : ctx.CustomerData.ContactPhone, "");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.CustomerData == null ? null : ctx.CustomerData.ContactEmail, " ");
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvY3VzdG9tZXItZGV0YWlsL2N1c3RvbWVyLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CustomerDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-customer-detail',
          templateUrl: './customer-detail.component.html',
          styleUrls: ['./customer-detail.component.css'],
          providers: [{
            provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
            useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
              return CustomerDetailComponent;
            }),
            multi: true
          }]
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }];
      }, {
        IsVariousOrigin: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/lazy-loading/invoice-routing.module.ts": function srcAppInvoiceLazyLoadingInvoiceRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InvoiceRoutingModule", function () {
      return InvoiceRoutingModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _createinvoice_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../createinvoice.component */
    "./src/app/invoice/createinvoice.component.ts");

    var routeInvoice = [{
      path: 'CreateNew',
      component: _createinvoice_component__WEBPACK_IMPORTED_MODULE_2__["CreateinvoiceComponent"],
      data: {
        title: 'Create invoice'
      }
    }, {
      path: 'CreditAndRebill/:number',
      component: _createinvoice_component__WEBPACK_IMPORTED_MODULE_2__["CreateinvoiceComponent"],
      data: {
        title: 'Rebill invoice'
      }
    }, {
      path: 'ConvertToInvoice/:number',
      component: _createinvoice_component__WEBPACK_IMPORTED_MODULE_2__["CreateinvoiceComponent"],
      data: {
        title: 'Convert to invoice'
      }
    }];

    var InvoiceRoutingModule = function InvoiceRoutingModule() {
      _classCallCheck(this, InvoiceRoutingModule);
    };

    InvoiceRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: InvoiceRoutingModule
    });
    InvoiceRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function InvoiceRoutingModule_Factory(t) {
        return new (t || InvoiceRoutingModule)();
      },
      imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routeInvoice)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](InvoiceRoutingModule, {
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](InvoiceRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routeInvoice)],
          exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/app/invoice/lazy-loading/invoice.module.ts": function srcAppInvoiceLazyLoadingInvoiceModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "InvoiceModule", function () {
      return InvoiceModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _createinvoice_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../createinvoice.component */
    "./src/app/invoice/createinvoice.component.ts");
    /* harmony import */


    var _invoice_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./invoice-routing.module */
    "./src/app/invoice/lazy-loading/invoice-routing.module.ts");
    /* harmony import */


    var _bol_detail_bol_detail_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../bol-detail/bol-detail.component */
    "./src/app/invoice/bol-detail/bol-detail.component.ts");
    /* harmony import */


    var _lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../lift-tickets/lift-tickets.component */
    "./src/app/invoice/lift-tickets/lift-tickets.component.ts");
    /* harmony import */


    var _lift_tickets_lift_detail_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../lift-tickets/lift-detail.component */
    "./src/app/invoice/lift-tickets/lift-detail.component.ts");
    /* harmony import */


    var _payment_terms_payment_terms_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../payment-terms/payment-terms.component */
    "./src/app/invoice/payment-terms/payment-terms.component.ts");
    /* harmony import */


    var _produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../produc-detail/produc-detail.component */
    "./src/app/invoice/produc-detail/produc-detail.component.ts");
    /* harmony import */


    var _bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../bol-detail/bol-list.component */
    "./src/app/invoice/bol-detail/bol-list.component.ts");
    /* harmony import */


    var _various_drop_location_various_drop_location_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../various-drop-location/various-drop-location.component */
    "./src/app/invoice/various-drop-location/various-drop-location.component.ts");
    /* harmony import */


    var _taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../taxes/other-product-taxes.component */
    "./src/app/invoice/taxes/other-product-taxes.component.ts");
    /* harmony import */


    var _customer_detail_customer_detail_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../customer-detail/customer-detail.component */
    "./src/app/invoice/customer-detail/customer-detail.component.ts");
    /* harmony import */


    var src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! src/app/imageupload/imageupload.component */
    "./src/app/imageupload/imageupload.component.ts");
    /* harmony import */


    var _produc_detail_fuel_surcharge_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../produc-detail/fuel-surcharge.component */
    "./src/app/invoice/produc-detail/fuel-surcharge.component.ts");
    /* harmony import */


    var _asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../asset-list/asset-list.component */
    "./src/app/invoice/asset-list/asset-list.component.ts");
    /* harmony import */


    var src_app_directives_on_create_directive__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! src/app/directives/on-create.directive */
    "./src/app/directives/on-create.directive.ts");
    /* harmony import */


    var src_app_modules_shared_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! src/app/modules/shared.module */
    "./src/app/modules/shared.module.ts");
    /* harmony import */


    var src_app_modules_directive_module__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! src/app/modules/directive.module */
    "./src/app/modules/directive.module.ts");
    /* harmony import */


    var src_app_fees_fees_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! src/app/fees/fees.module */
    "./src/app/fees/fees.module.ts");
    /* harmony import */


    var _bdr_detail_bdr_detail_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ../bdr-detail/bdr-detail.component */
    "./src/app/invoice/bdr-detail/bdr-detail.component.ts");
    /* harmony import */


    var _bdr_detail_show_bdr_detail_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ../bdr-detail/show-bdr-detail.component */
    "./src/app/invoice/bdr-detail/show-bdr-detail.component.ts"); //import { FeeListComponent } from '../fee-list/fee-list.component';
    //import { FeeTypeComponent } from '../fee-list/fee-type.component';
    //import { FilterPipe } from '../fee-list/filter.pipe';


    var InvoiceModule = function InvoiceModule() {
      _classCallCheck(this, InvoiceModule);
    };

    InvoiceModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: InvoiceModule
    });
    InvoiceModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function InvoiceModule_Factory(t) {
        return new (t || InvoiceModule)();
      },
      imports: [[_invoice_routing_module__WEBPACK_IMPORTED_MODULE_2__["InvoiceRoutingModule"], src_app_modules_shared_module__WEBPACK_IMPORTED_MODULE_16__["SharedModule"], src_app_modules_directive_module__WEBPACK_IMPORTED_MODULE_17__["DirectiveModule"], src_app_fees_fees_module__WEBPACK_IMPORTED_MODULE_18__["FeesModule"]]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](InvoiceModule, {
        declarations: [_createinvoice_component__WEBPACK_IMPORTED_MODULE_1__["CreateinvoiceComponent"], _bol_detail_bol_detail_component__WEBPACK_IMPORTED_MODULE_3__["BolDetailComponent"], _lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_4__["LiftTicketsComponent"], _lift_tickets_lift_detail_component__WEBPACK_IMPORTED_MODULE_5__["LiftDetailComponent"], _payment_terms_payment_terms_component__WEBPACK_IMPORTED_MODULE_6__["PaymentTermsComponent"], _produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_7__["ProducDetailComponent"], _bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_8__["BolListComponent"], _various_drop_location_various_drop_location_component__WEBPACK_IMPORTED_MODULE_9__["VariousDropLocationComponent"], _taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_10__["OtherProductTaxesComponent"], _customer_detail_customer_detail_component__WEBPACK_IMPORTED_MODULE_11__["CustomerDetailComponent"], src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_12__["ImageuploadComponent"], _produc_detail_fuel_surcharge_component__WEBPACK_IMPORTED_MODULE_13__["FuelSurchargeComponent"], _asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_14__["AssetListComponent"], src_app_directives_on_create_directive__WEBPACK_IMPORTED_MODULE_15__["OnCreateDirective"], _bdr_detail_bdr_detail_component__WEBPACK_IMPORTED_MODULE_19__["BdrDetailComponent"], _bdr_detail_show_bdr_detail_component__WEBPACK_IMPORTED_MODULE_20__["ShowBdrDetailComponent"]],
        imports: [_invoice_routing_module__WEBPACK_IMPORTED_MODULE_2__["InvoiceRoutingModule"], src_app_modules_shared_module__WEBPACK_IMPORTED_MODULE_16__["SharedModule"], src_app_modules_directive_module__WEBPACK_IMPORTED_MODULE_17__["DirectiveModule"], src_app_fees_fees_module__WEBPACK_IMPORTED_MODULE_18__["FeesModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](InvoiceModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [_createinvoice_component__WEBPACK_IMPORTED_MODULE_1__["CreateinvoiceComponent"], _bol_detail_bol_detail_component__WEBPACK_IMPORTED_MODULE_3__["BolDetailComponent"], _lift_tickets_lift_tickets_component__WEBPACK_IMPORTED_MODULE_4__["LiftTicketsComponent"], _lift_tickets_lift_detail_component__WEBPACK_IMPORTED_MODULE_5__["LiftDetailComponent"], _payment_terms_payment_terms_component__WEBPACK_IMPORTED_MODULE_6__["PaymentTermsComponent"], _produc_detail_produc_detail_component__WEBPACK_IMPORTED_MODULE_7__["ProducDetailComponent"], _bol_detail_bol_list_component__WEBPACK_IMPORTED_MODULE_8__["BolListComponent"], _various_drop_location_various_drop_location_component__WEBPACK_IMPORTED_MODULE_9__["VariousDropLocationComponent"], _taxes_other_product_taxes_component__WEBPACK_IMPORTED_MODULE_10__["OtherProductTaxesComponent"], _customer_detail_customer_detail_component__WEBPACK_IMPORTED_MODULE_11__["CustomerDetailComponent"], src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_12__["ImageuploadComponent"], _produc_detail_fuel_surcharge_component__WEBPACK_IMPORTED_MODULE_13__["FuelSurchargeComponent"], _asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_14__["AssetListComponent"], src_app_directives_on_create_directive__WEBPACK_IMPORTED_MODULE_15__["OnCreateDirective"], _bdr_detail_bdr_detail_component__WEBPACK_IMPORTED_MODULE_19__["BdrDetailComponent"], _bdr_detail_show_bdr_detail_component__WEBPACK_IMPORTED_MODULE_20__["ShowBdrDetailComponent"]],
          imports: [_invoice_routing_module__WEBPACK_IMPORTED_MODULE_2__["InvoiceRoutingModule"], src_app_modules_shared_module__WEBPACK_IMPORTED_MODULE_16__["SharedModule"], src_app_modules_directive_module__WEBPACK_IMPORTED_MODULE_17__["DirectiveModule"], src_app_fees_fees_module__WEBPACK_IMPORTED_MODULE_18__["FeesModule"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/app/invoice/lift-tickets/lift-detail.component.ts": function srcAppInvoiceLiftTicketsLiftDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LiftDetailComponent", function () {
      return LiftDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var src_app_statelist_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! src/app/statelist.service */
    "./src/app/statelist.service.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/declarations.module */
    "./src/app/declarations.module.ts");
    /* harmony import */


    var src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/app.enum */
    "./src/app/app.enum.ts");
    /* harmony import */


    var src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! src/app/app.constants */
    "./src/app/app.constants.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var src_app_address_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! src/app/address.service */
    "./src/app/address.service.ts");
    /* harmony import */


    var _invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../invoice/services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/services/validation.service */
    "./src/app/services/validation.service.ts");
    /* harmony import */


    var ng_sidebar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ng-sidebar */
    "./node_modules/ng-sidebar/__ivy_ngcc__/lib_esmodule/index.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../../directives/myDateTimePicker */
    "./src/app/directives/myDateTimePicker.ts");
    /* harmony import */


    var _directives_required_if_not_empty_directive__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../../directives/required-if-not-empty.directive */
    "./src/app/directives/required-if-not-empty.directive.ts");
    /* harmony import */


    var _directives_numberWithDecimal__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../../directives/numberWithDecimal */
    "./src/app/directives/numberWithDecimal.ts");
    /* harmony import */


    var _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ../../directives/required-if-true.directive */
    "./src/app/directives/required-if-true.directive.ts");

    function LiftDetailComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_div_16_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_div_16_div_1_Template, 2, 0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isRequired("LiftTicketNumber"));
      }
    }

    function LiftDetailComponent_div_23_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_div_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_div_23_div_1_Template, 2, 0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.isRequired("LiftDate"));
      }
    }

    function LiftDetailComponent_span_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_div_29_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_div_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_div_29_div_1_Template, 2, 0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r4.isRequired("BadgeNumber"));
      }
    }

    function LiftDetailComponent_ng_container_33_span_10_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_ng_container_33_span_10_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("BulkPlantName").errors.required);
      }
    }

    function LiftDetailComponent_ng_container_33_li_12_Template(rf, ctx) {
      if (rf & 1) {
        var _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftDetailComponent_ng_container_33_li_12_Template_li_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r27);

          var plant_r24 = ctx.$implicit;

          var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r25.onBulkPlantSelected(product_r11, plant_r24);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var plant_r24 = ctx.$implicit;

        var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("selected", plant_r24.Name == product_r11.get("BulkPlantName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](plant_r24.Name);
      }
    }

    function LiftDetailComponent_ng_container_33_span_21_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_21_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_ng_container_33_span_21_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LiftDetailComponent_ng_container_33_span_21_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("GrossQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("GrossQuantity").errors.pattern);
      }
    }

    function LiftDetailComponent_ng_container_33_span_29_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_29_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_29_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_ng_container_33_span_29_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LiftDetailComponent_ng_container_33_span_29_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("NetQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("NetQuantity").errors.pattern);
      }
    }

    function LiftDetailComponent_ng_container_33_span_37_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_37_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_37_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Quantity should not be greater than net/gross quantity. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_span_37_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, LiftDetailComponent_ng_container_33_span_37_span_1_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LiftDetailComponent_ng_container_33_span_37_span_2_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, LiftDetailComponent_ng_container_33_span_37_span_3_Template, 2, 0, "span", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("DeliveredQuantity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("DeliveredQuantity").errors.pattern);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("DeliveredQuantity").errors.maxQuantity);
      }
    }

    function LiftDetailComponent_ng_container_33_div_39_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_ng_container_33_option_54_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var st_r39 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", st_r39.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", st_r39.Name, " ");
      }
    }

    function LiftDetailComponent_ng_container_33_option_60_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ct_r40 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ct_r40.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ct_r40.Code, " ");
      }
    }

    function LiftDetailComponent_ng_container_33_div_65_option_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ct_r42 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ct_r42.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ct_r42.Name, " ");
      }
    }

    function LiftDetailComponent_ng_container_33_div_65_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "select", 65);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Select Country Group");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, LiftDetailComponent_ng_container_33_div_65_option_4_Template, 2, 2, "option", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r21.CountryGroupList);
      }
    }

    function LiftDetailComponent_ng_container_33_Template(rf, ctx) {
      if (rf & 1) {
        var _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "span", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "label", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Bulk Plant:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "input", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function LiftDetailComponent_ng_container_33_Template_input_input_9_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r43.onBulkPlantSearched($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, LiftDetailComponent_ng_container_33_span_10_Template, 2, 1, "span", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "ul", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, LiftDetailComponent_ng_container_33_li_12_Template, 2, 2, "li", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "input", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "label", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Gross Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "input", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function LiftDetailComponent_ng_container_33_Template_input_input_18_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r45.setDeliveredQuantValidation([$event.target.value, product_r11.get("NetQuantity").value], product_r11.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, LiftDetailComponent_ng_container_33_span_21_Template, 3, 2, "span", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "label", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Net Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "input", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function LiftDetailComponent_ng_container_33_Template_input_input_26_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r46.setDeliveredQuantValidation([product_r11.get("GrossQuantity").value, $event.target.value], product_r11.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](29, LiftDetailComponent_ng_container_33_span_29_Template, 3, 2, "span", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "label", 45);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, "Delivered Quantity:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "input", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function LiftDetailComponent_ng_container_33_Template_input_input_34_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r47.setDeliveredQuantValidation([product_r11.get("GrossQuantity").value, product_r11.get("NetQuantity").value], product_r11.get("DeliveredQuantity"));
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, LiftDetailComponent_ng_container_33_span_37_Template, 4, 3, "span", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "div", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](39, LiftDetailComponent_ng_container_33_div_39_Template, 2, 0, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "div", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](42, "input", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "input", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function LiftDetailComponent_ng_container_33_Template_input_input_44_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r48.getAddressByZip(product_r11, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](46, "input", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](48, "input", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](49, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "input", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "select", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function LiftDetailComponent_ng_container_33_Template_select_change_51_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r49.setStateName(product_r11, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](53, "Select State");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](54, LiftDetailComponent_ng_container_33_option_54_Template, 2, 2, "option", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](55, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](56, "input", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](57, "select", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function LiftDetailComponent_ng_container_33_Template_select_change_57_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r44);

          var product_r11 = ctx.$implicit;

          var ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r50.setCountryName(product_r11, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](58, "option", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](59, "Select Country");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](60, LiftDetailComponent_ng_container_33_option_60_Template, 2, 2, "option", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](62, "input", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](63, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](64, "input", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](65, LiftDetailComponent_ng_container_33_div_65_Template, 5, 2, "div", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var product_r11 = ctx.$implicit;
        var j_r12 = ctx.index;

        var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("id", "liftProduct_", j_r12, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", j_r12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r11.get("ProductName").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfNotEmpty", product_r11.get("GrossQuantity") && product_r11.get("NetQuantity"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("BulkPlantName").errors && (product_r11.get("BulkPlantName").touched || product_r11.get("BulkPlantName").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.BulkPlants);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r11.get("NetQuantity").value > 0 || product_r11.get("DeliveredQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r11.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("GrossQuantity").errors && (product_r11.get("GrossQuantity").touched || product_r11.get("GrossQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r11.get("DeliveredQuantity").value > 0 || product_r11.get("GrossQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r11.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("NetQuantity").errors && (product_r11.get("NetQuantity").touched || product_r11.get("NetQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("requiredIfTrue", product_r11.get("NetQuantity").value > 0 || product_r11.get("GrossQuantity").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r11.get("UOM").value, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("DeliveredQuantity").errors && (product_r11.get("DeliveredQuantity").touched || product_r11.get("DeliveredQuantity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5._loadingAddress);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.StatesListByCountry(product_r11));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.CountryList);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r11.get("Address.Country.Id").value == 4);
      }
    }

    function LiftDetailComponent_button_37_Template(rf, ctx) {
      if (rf & 1) {
        var _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftDetailComponent_button_37_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r52);

          var ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r51.addTicketDetail();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Add");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftDetailComponent_button_38_Template(rf, ctx) {
      if (rf & 1) {
        var _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftDetailComponent_button_38_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r54);

          var ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r53.updatedTicketDetail();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 68);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Update");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var LiftDetailComponent = /*#__PURE__*/function () {
      function LiftDetailComponent(fb, route, stateService, addresService, invoiceService, validationService) {
        var _this87 = this;

        _classCallCheck(this, LiftDetailComponent);

        this.fb = fb;
        this.route = route;
        this.stateService = stateService;
        this.addresService = addresService;
        this.invoiceService = invoiceService;
        this.validationService = validationService;
        this._opened = false;
        this._animate = true;
        this._loading = false;
        this._loadingAddress = false;
        this._positionNum = 1;
        this._POSITIONS = ['left', 'right', 'top', 'bottom'];
        this._searchKeyword = 'name';
        this.StateList = [];
        this.EditIndex = -1;
        this.liftticketnumberslist = [];
        this.isBadgeMandatory = false;
        this.onTicketDetailAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTicketDetailUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.StateList = [];
        this.CountryList = [];
        this.CountryGroupList = [];
        this.BulkPlants = [];
        this.BulkplantList = [];
        this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);
        this.TicketDetailForm = this.buildForm();

        if (this.TicketDetailForm) {
          if (this.isBadgeMandatory) {
            this.TicketDetailForm.controls['BadgeNumber'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
          } else {
            this.TicketDetailForm.controls['BadgeNumber'].clearValidators();
          }
        }

        this.stateService.getStates().subscribe(function (data) {
          _this87.StateList = data;
        });
        this.stateService.getCountries().subscribe(function (data) {
          _this87.CountryList = data;
        });
        this.stateService.getCountryGroup(4).subscribe(function (data) {
          _this87.CountryGroupList = data;
        });
      }

      _createClass(LiftDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.IsBadgeMandatory && change.IsBadgeMandatory.currentValue != null) {
            this.isBadgeMandatory = change.IsBadgeMandatory.currentValue;

            if (this.TicketDetailForm) {
              if (this.isBadgeMandatory) {
                this.TicketDetailForm.controls['BadgeNumber'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
              } else {
                this.TicketDetailForm.controls['BadgeNumber'].clearValidators();
              }
            }
          }

          this.showBulkPlantOnLift();
        }
      }, {
        key: "initDrops",
        value: function initDrops(_drops) {
          // this.setUoM(_drops);
          if (_drops != null && _drops != undefined) {
            this.Drops = _drops;
            this.setProductsToFormArray();
          }
        }
      }, {
        key: "getAddedProductDetails",
        value: function getAddedProductDetails(drops) {
          if (drops != null || drops != undefined) {
            var dropdates = drops.map(function (item) {
              return item.DropDate;
            });

            if (dropdates.length > 0 && dropdates.indexOf(null) == -1 && dropdates != undefined && dropdates.indexOf("") == -1 && dropdates.indexOf(undefined) == -1) {
              this.findMinDate(dropdates);
            }
          }
        }
      }, {
        key: "findMinDate",
        value: function findMinDate(dropdates) {
          var dates = [];
          dropdates.forEach(function (dropdate) {
            var date = new Date(dropdate);
            dates.push(date);
          }); //var maximumDate = new Date(Math.max.apply(null, dates)); 

          var minimumDate = new Date(Math.min.apply(null, dates));
          var minDate = minimumDate.toDateString();
          var date = this.getFormattedDate(minDate);

          if (date != null || date != undefined) {
            this.TicketDetailForm.get('LiftDate').patchValue(date);
          }
        }
      }, {
        key: "getFormattedDate",
        value: function getFormattedDate(date) {
          var dt = new Date(date);
          var year = dt.getFullYear();
          var month = (1 + dt.getMonth()).toString();
          month = month.length > 1 ? month : '0' + month;
          var day = dt.getDate().toString();
          day = day.length > 1 ? day : '0' + day;
          return month + '/' + day + '/' + year;
        } //setUoM(drops: DropDetailModel[]): void {
        //    //None =0;
        //    //Gallons = 1,
        //    //Litres = 2
        //    if (drops != null && drops != undefined) {
        //        var UoM = drops.map(item => parseInt(item.UoM));
        //        if (UoM[0] == 1) {
        //            this.UoM = "Gallons";
        //        }
        //        else if (UoM[0] == 2) {
        //            this.UoM = "Litres";
        //        }
        //        else if (UoM[0] == 3) {
        //            this.UoM = "Barrels";
        //        }
        //        else if (UoM[0] == 4) {
        //            this.UoM = "MT";
        //        }
        //    }
        //}

      }, {
        key: "showBulkPlantOnLift",
        value: function showBulkPlantOnLift() {
          var _this88 = this;

          if (this.IsFrieghtPricingMethodAuto) {
            this.addresService.getBulkPlantsForAutoFreightMethod(this.OrderId, '').subscribe(function (data) {
              _this88.BulkPlants = data.slice();
              _this88.BulkplantList = data;
            });
          } else {
            this.addresService.getBulkPlants('').subscribe(function (data) {
              _this88.BulkPlants = data.slice();
              _this88.BulkplantList = data;
            });
          }
        }
      }, {
        key: "setProductsToFormArray",
        value: function setProductsToFormArray() {
          var prodArray = this.TicketDetailForm.get('Products');

          if (prodArray != undefined && prodArray != null) {
            prodArray.clear();
            var currentObj = this;
            this.Drops.forEach(function (elem, idx) {
              prodArray.push(currentObj.buildProduct(elem));
            });
          }
        }
      }, {
        key: "toggleOpen",
        value: function toggleOpen(shouldOpen, event) {
          this._opened = shouldOpen;

          if (shouldOpen) {
            if (event != null) {
              var ticketFormData = this.getTicketFormData(event.ticketDetail);
              this.setProductsToFormArray();
              this.TicketDetailForm.patchValue(ticketFormData);
              this.EditIndex = event.index;
            }
          } else {
            this.TicketDetailForm.reset();
            this.TicketDetailForm.get('Products').clear();
          }
        }
      }, {
        key: "getTicketFormData",
        value: function getTicketFormData(ticketDetail) {
          var _products = [];
          ticketDetail.Products.forEach(function (x) {
            _products.push({
              ProductId: x.ProductId,
              ProductName: x.ProductName,
              GrossQuantity: x.GrossQuantity,
              NetQuantity: x.NetQuantity,
              DeliveredQuantity: x.DeliveredQuantity,
              BulkPlantId: x.BulkPlantId,
              BulkPlantName: x.BulkPlantName,
              Address: x.Address
            });
          });
          var data = {
            LiftTicketNumber: ticketDetail.LiftTicketNumber,
            BadgeNumber: ticketDetail.BadgeNumber,
            LiftDate: ticketDetail.LiftDate,
            Products: _products
          };
          return data;
        }
      }, {
        key: "buildForm",
        value: function buildForm() {
          return this.fb.group({
            Id: this.fb.control(''),
            LiftTicketNumber: this.fb.control('', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            LiftDate: this.fb.control('', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            BadgeNumber: this.fb.control(''),
            Products: this.fb.array([])
          });
        }
      }, {
        key: "buildProduct",
        value: function buildProduct(model) {
          var formG = this.fb.group({
            ProductId: this.fb.control(model.FuelTypeId),
            ProductName: this.fb.control(model.FuelTypeName),
            NetQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)]),
            DeliveredQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)]),
            GrossQuantity: this.fb.control('', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].Quantity)]),
            BulkPlantId: this.fb.control(''),
            BulkPlantName: this.fb.control(''),
            Address: this.buildAddress(new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["AddressModel"]()),
            Image: this.fb.control(''),
            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId),
            UOM: this.fb.control('')
          });
          this.setUoM(model.UoM, model.JobCountryId, formG);
          return formG;
        }
      }, {
        key: "buildAddress",
        value: function buildAddress(model) {
          return this.fb.group({
            Address: this.fb.control(model.Address, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            Latitude: this.fb.control(model.Latitude, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            Longitude: this.fb.control(model.Longitude, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            City: this.fb.control(model.City, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            CountyName: this.fb.control(model.CountyName, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
            State: this.fb.group({
              Id: this.fb.control(model.State.Id, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
              Code: this.fb.control(model.State.Code, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])
            }),
            Country: this.fb.group({
              Id: this.fb.control(model.Country.Id, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]),
              Code: this.fb.control(model.Country.Code, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])
            }),
            CountryGroup: this.fb.group({
              Id: this.fb.control(model.Country.Id),
              Code: this.fb.control(model.Country.Code)
            }),
            ZipCode: this.fb.control(model.ZipCode, [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required])
          });
        }
      }, {
        key: "setUoM",
        value: function setUoM(uom, jobCountryId, productForm) {
          if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].MetricTons || uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Barrels) {
            if (jobCountryId == 1 || jobCountryId == 4) {
              productForm.get('UOM').setValue("Gallons");
            } else if (jobCountryId == 2) {
              productForm.get('UOM').setValue("Litres");
            }
          } else {
            if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Gallons) {
              productForm.get('UOM').setValue("Gallons");
            } else if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_5__["UoM"].Litres) {
              productForm.get('UOM').setValue("Litres");
            }
          }
        }
      }, {
        key: "getAddressByZip",
        value: function getAddressByZip(product, event) {
          var _this89 = this;

          var zipCode = event.target.value;

          var _address = product.get('Address');

          if (src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].UsaZip.test(zipCode) || src_app_app_constants__WEBPACK_IMPORTED_MODULE_6__["RegExConstants"].CanZip.test(zipCode)) {
            this._loadingAddress = true;
            this.addresService.getAddress(zipCode).subscribe(function (data) {
              _this89._loadingAddress = false;

              if (data != null && data != undefined && data.StateCode != null) {
                data.Address = _address.get('Address').value;

                if (data.CountryCode != 'CAR') {
                  data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';
                }

                var addressModel = _this89.addressMapper(data);

                _address.patchValue(addressModel);
              }
            });
          }
        }
      }, {
        key: "addressMapper",
        value: function addressMapper(data) {
          var state = this.StateList.find(function (x) {
            return x.Code == data.StateCode;
          });
          var country = this.CountryList.find(function (x) {
            return x.Code == data.CountryCode;
          });
          var countryGroup = this.CountryGroupList.find(function (x) {
            return x.Id == data.Id;
          }) || new src_app_statelist_service__WEBPACK_IMPORTED_MODULE_1__["DropdownItem"]();

          var _address = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["AddressModel"]();

          _address.Address = data.Address;
          _address.City = data.City;
          _address.CountyName = data.CountyName;
          _address.Latitude = data.Latitude;
          _address.Longitude = data.Longitude;
          _address.ZipCode = data.ZipCode;
          _address.State = state;
          _address.Country = country;
          _address.CountryGroup = countryGroup;
          return _address;
        }
      }, {
        key: "cancelTicketDetail",
        value: function cancelTicketDetail() {
          this.TicketDetailForm.reset();
          this.toggleOpen(false, null);
        }
      }, {
        key: "addTicketDetail",
        value: function addTicketDetail() {
          this.TicketDetailForm.markAllAsTouched();
          var products = this.TicketDetailForm.get('Products').value;
          var invalidQuantityCount = 0;
          products.forEach(function (product) {
            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {
              invalidQuantityCount++;
            }
          });

          if (this.isBadgeMandatory && !this.TicketDetailForm.get('BadgeNumber').value.trim()) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Please enter badge number", undefined, undefined);
            return;
          }

          if (products.length == invalidQuantityCount) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered, gross and net quantity is required for atleast one product", undefined, undefined);
            return;
          }

          if (products.some(function (p) {
            return p.DeliveredQuantity > Math.max(p.GrossQuantity, p.NetQuantity);
          })) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered quantity should not be greater than net/gross quantity.", undefined, undefined);
            return;
          }

          var isValid = this.validateTicketDetails(); // validates Products formarray 

          var isValidQuantities = true;
          var invalidQuantities = this.validateQuantities();

          if (invalidQuantities.length > 0) {
            invalidQuantities.forEach(function (isFormValidInfo) {
              if (isFormValidInfo.isFormValid == false) {
                src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Gross/net/delivered quantity is missing for product " + isFormValidInfo.ProductName, undefined, undefined);
                isValidQuantities = false;
              }
            });
          }

          if (!isValidQuantities) {
            return;
          }

          if (isValid) {
            var liftTicketNumber = this.TicketDetailForm.get('LiftTicketNumber').value.trim().toLowerCase();

            if (this.liftticketnumberslist.indexOf(liftTicketNumber) != -1) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("You are trying to enter duplicate Lift Ticket Numbers", undefined, undefined);
            } else {
              this.onTicketDetailAdded.emit(this.TicketDetailForm.value);
              this.toggleOpen(false, null);
            }
          } else {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror('Please provide required details', undefined, undefined);
          }
        }
      }, {
        key: "validateQuantities",
        value: function validateQuantities() {
          var isFormValid = true;
          var invalidFormInfo = [];
          var products = this.TicketDetailForm.get('Products').value;
          products.forEach(function (product) {
            if ((product.NetQuantity > 0 || product.GrossQuantity > 0 || product.DeliveredQuantity > 0) && !(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {
              isFormValid = false;
              invalidFormInfo.push({
                isFormValid: isFormValid,
                ProductName: product.ProductName
              });
            }
          });
          return invalidFormInfo;
        }
      }, {
        key: "updatedTicketDetail",
        value: function updatedTicketDetail() {
          this.TicketDetailForm.markAllAsTouched();
          var products = this.TicketDetailForm.get('Products').value;
          var invalidQuantityCount = 0;
          products.forEach(function (product) {
            if (!(product.NetQuantity > 0 && product.GrossQuantity > 0 && product.DeliveredQuantity > 0)) {
              invalidQuantityCount++;
            }
          });

          if (products.length == invalidQuantityCount) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered, gross and net quantity is required for atleast one product", undefined, undefined);
            return;
          }

          if (products.some(function (p) {
            return p.DeliveredQuantity > Math.max(p.GrossQuantity, p.NetQuantity);
          })) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered quantity should not be greater than net/gross quantity.", undefined, undefined);
            return;
          }

          var isValidQuantities = true;
          var invalidQuantities = this.validateQuantities();

          if (invalidQuantities.length > 0) {
            invalidQuantities.forEach(function (isFormValidInfo) {
              if (isFormValidInfo.isFormValid == false) {
                src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Delivered/gross/net quantity is missing for product " + isFormValidInfo.ProductName, undefined, undefined);
                isValidQuantities = false;
              }
            });
          }

          if (!isValidQuantities) {
            return;
          }

          if (this.isBadgeMandatory && !this.TicketDetailForm.get('BadgeNumber').value.trim()) {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("Please enter badge number", undefined, undefined);
            return;
          }

          var isValid = this.validateTicketDetails();

          if (isValid) {
            var updatedLiftnumber = this.TicketDetailForm.get('LiftTicketNumber').value.trim().toLowerCase();

            if (this.curLiftTicketNumber != updatedLiftnumber && this.liftticketnumberslist.indexOf(updatedLiftnumber) != -1) {
              src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror("You are trying to add duplicate Lift Ticket Numbers", undefined, undefined);
            } else {
              var eventData = {
                ticketDetail: this.TicketDetailForm.value,
                index: this.EditIndex
              };
              this.onTicketDetailUpdated.emit(eventData);
              this.toggleOpen(false, null);
              this.EditIndex = -1;
              this.liftticketnumberslist.splice(this.liftticketnumberslist.indexOf(this.curLiftTicketNumber), 1);
              this.liftticketnumberslist.push(updatedLiftnumber);
            }
          } else {
            src_app_declarations_module__WEBPACK_IMPORTED_MODULE_4__["Declarations"].msgerror('Please provide required details ', undefined, undefined);
          }
        }
      }, {
        key: "validateTicketDetails",
        value: function validateTicketDetails() {
          var isValid = false;

          var _products = this.TicketDetailForm.get('Products');

          var _liftTicketNumber = this.TicketDetailForm.get('LiftTicketNumber').value;
          var _liftDate = this.TicketDetailForm.get('LiftDate').value;

          _products.controls.forEach(function (elem) {
            if (elem.get('BulkPlantName').value && elem.get('BulkPlantName').value.trim() != '' && _liftTicketNumber != "" && _liftDate != "" && _liftDate != null && _liftDate != undefined && elem.get('Address').valid) isValid = true;
          });

          return isValid;
        }
      }, {
        key: "isInvalid",
        value: function isInvalid(name) {
          var result = this.TicketDetailForm.get(name).invalid && (this.TicketDetailForm.get(name).dirty || this.TicketDetailForm.get(name).touched);
          return result;
        }
      }, {
        key: "isRequired",
        value: function isRequired(name) {
          return this.TicketDetailForm.get(name).errors.required;
        }
      }, {
        key: "isInvalidPg",
        value: function isInvalidPg(name, product) {
          var result = product.get(name).invalid && (product.get(name).dirty || product.get(name).touched);
          return result;
        }
      }, {
        key: "isRequiredPg",
        value: function isRequiredPg(name, product) {
          return product.get(name).errors.required;
        }
      }, {
        key: "onBulkPlantSelected",
        value: function onBulkPlantSelected(product, event) {
          product.controls['BulkPlantName'].setValue(event.Name);
          product.controls['BulkPlantId'].setValue(event.Id);

          var _address = product.get('Address');

          this.BulkPlants = this.BulkplantList.slice();
          this.getBulKPlantAddress(event.Name, _address);
        }
      }, {
        key: "onBulkPlantSearched",
        value: function onBulkPlantSearched(event) {
          var keyword = event.target && event.target.value ? event.target.value.toLowerCase() : '';
          this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {
            return elem.Name.toLowerCase().indexOf(keyword) >= 0;
          });
        }
      }, {
        key: "setStateName",
        value: function setStateName(product, event) {
          product.get('Address.State.Code').setValue(event.target.selectedOptions[0].text);
        }
      }, {
        key: "setCountryName",
        value: function setCountryName(product, event) {
          product.get('Address.Country.Code').setValue(event.target.selectedOptions[0].text);
        }
      }, {
        key: "StatesListByCountry",
        get: function get() {
          var _this90 = this;

          return function (product) {
            return _this90.filterStates(product.get('Address.Country.Id').value, product.get('Address.CountryGroup.Id').value);
          };
        }
      }, {
        key: "filterStates",
        value: function filterStates(countryId, countryGroupId) {
          if (countryGroupId) {
            return this.StateList.filter(function (t) {
              return t.CountryId == countryId && t.CountryGroupId == countryGroupId;
            });
          } else {
            return this.StateList.filter(function (t) {
              return t.CountryId == countryId;
            });
          }
        }
      }, {
        key: "getBulKPlantAddress",
        value: function getBulKPlantAddress(bulkPlantName, address) {
          this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(function (response) {
            if (response.CountryGroup.Id == 0) response.CountryGroup.Id = null;
            address.patchValue(response);
          });
        } //getAddedBolDetails(boldetails: any) {
        //    console.log("lift details:getAddedBolDetails");
        //    console.log(boldetails);
        //    var newProds = [];
        //    boldetails.map(item => item.Products.map(prod => newProds.push(prod)));       
        //    console.log(newProds);
        //    this.clearValidators(newProds);
        //}
        //clearValidators(products: any[]) {
        //    var _lift = this.TicketDetailForm.get('Products') as FormArray;
        //    products.forEach(function (x) {
        //        var _group = _lift.controls.find(function (y) {
        //            return y.get('ProductId').value == x.ProductId;
        //        });
        //        console.log("liftDetails: groups=>");
        //        console.log(_group.value);
        //        if (_group != undefined && _group != null) {
        //            _group.get('LiftQuantity').clearValidators();
        //            _group.get('LiftQuantity').updateValueAndValidity();
        //            _group.get('BulkPlantName').clearValidators();
        //            _group.get('BulkPlantName').updateValueAndValidity();
        //        }
        //    });
        //}
        // Duplicate lift ticket number validation methods 

      }, {
        key: "getAddedLiftTickets",
        value: function getAddedLiftTickets(items) {
          var tktnumbers = items.map(function (item) {
            return item.LiftTicketNumber;
          });

          if (tktnumbers.length > 0 && tktnumbers[0] != null) {
            this.liftticketnumberslist = items.map(function (item) {
              return item.LiftTicketNumber.trim().toLowerCase();
            });
          }
        }
      }, {
        key: "getDeletedLift",
        value: function getDeletedLift(items) {
          this.liftticketnumberslist.length = 0;
          this.liftticketnumberslist = items.map(function (item) {
            return item.LiftTicketNumber.trim().toLowerCase();
          });
        }
      }, {
        key: "getEditedLiftTickets",
        value: function getEditedLiftTickets(items) {
          //this.curLiftTicketNumber = items.LiftTicketNumber.trim().toLowerCase();
          var tktnumber = items.LiftTicketNumber;

          if (tktnumber != null) {
            this.curLiftTicketNumber = tktnumber.trim().toLowerCase();
          }
        }
      }, {
        key: "setDeliveredQuantValidation",
        value: function setDeliveredQuantValidation(arr, control) {
          var max = Math.max.apply(Math, _toConsumableArray(arr));
          if (control.value > max) this.validationService.addError(control, 'maxQuantity');else this.validationService.removeError(control, 'maxQuantity');
        }
      }]);

      return LiftDetailComponent;
    }();

    LiftDetailComponent.ɵfac = function LiftDetailComponent_Factory(t) {
      return new (t || LiftDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_statelist_service__WEBPACK_IMPORTED_MODULE_1__["StatelistService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_address_service__WEBPACK_IMPORTED_MODULE_8__["AddressService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_9__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__["ValidationService"]));
    };

    LiftDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: LiftDetailComponent,
      selectors: [["app-lift-detail"]],
      inputs: {
        IsFrieghtPricingMethodAuto: "IsFrieghtPricingMethodAuto",
        IsBadgeMandatory: "IsBadgeMandatory"
      },
      outputs: {
        onTicketDetailAdded: "onTicketDetailAdded",
        onTicketDetailUpdated: "onTicketDetailUpdated"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 39,
      vars: 13,
      consts: [[2, "height", "100vh", 3, "opened", "animate", "position", "openedChange"], [3, "click"], [1, "fa", "fa-close", "fs18"], ["class", "pa bg-white z-index5 loading-wrapper", 4, "ngIf"], [1, "pr30"], [1, "dib", "ml10", "mt10", "mb10"], [1, "row", 3, "formGroup"], [1, "col-sm-4", "form-group"], ["type", "hidden", "placeholder", "Id", "formControlName", "Id"], ["for", "LiftTicketNumber"], [1, "color-maroon"], ["name", "LiftTicketNumber", "placeholder", "Lift Ticket #", "formControlName", "LiftTicketNumber", 1, "form-control"], ["class", "color-maroon", 4, "ngIf"], ["for", "LiftDate"], ["name", "LiftDate", "placeholder", "Lift Date", "formControlName", "LiftDate", "id", "liftDate", "myDatePicker", "", 1, "form-control", 3, "format", "onDateChange"], ["for", "BadgeNumber"], ["name", "BadgeNumber", "placeholder", "Badge #", "formControlName", "BadgeNumber", 1, "form-control"], [1, "col-sm-12"], [1, "border-b", "mb15"], ["formArrayName", "Products"], [4, "ngFor", "ngForOf"], ["id", "lift_inner_button", 1, "col-sm-12", "text-right"], [1, "btn", "btn-lg", 3, "click"], ["class", "btn btn-primary btn-lg", 3, "click", 4, "ngIf"], [1, "pa", "bg-white", "z-index5", "loading-wrapper"], [1, "spinner-dashboard", "pa"], [4, "ngIf"], [1, "row", "col-sm-12", 3, "formGroupName", "id"], [1, "col-sm-12", "form-group"], [1, "fa", "fa-tint"], [1, "col-sm-6", "form-group"], ["for", "Terminal"], ["type", "text", "formControlName", "BulkPlantName", "placeholder", "Bulk Plant Name", 1, "form-control", 3, "requiredIfNotEmpty", "input"], ["class", "help-block color-maroon", 4, "ngIf"], [1, "auto-select", "border-dash"], [3, "click", 4, "ngFor", "ngForOf"], ["type", "hidden", "formControlName", "BulkPlantId"], [1, "col-sm-6", "form-group", "mb10"], ["for", "GrossQuantity"], [1, "input-group"], ["name", "GrossQuantity", "placeholder", "Gross Quantity", "formControlName", "GrossQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], [1, "input-group-addon", "fs12"], ["class", "help-block color-maroon mb0", 4, "ngIf"], ["for", "NetQuantity"], ["name", "NetQuantity", "placeholder", "Net Quantity", "formControlName", "NetQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], ["for", ""], ["name", "DeliveredQuantity", "placeholder", "Delivered Quantity", "formControlName", "DeliveredQuantity", "numberWithDecimal", "", 1, "form-control", 3, "requiredIfTrue", "input"], ["formGroupName", "Address", 1, "row"], ["name", "Address", "placeholder", "Address", "formControlName", "Address", 1, "form-control"], ["name", "ZipCode", "placeholder", "Zip Code", "formControlName", "ZipCode", 1, "form-control", 3, "input"], ["name", "City", "placeholder", "City", "formControlName", "City", 1, "form-control"], ["name", "CountyName", "placeholder", "County Name", "formControlName", "CountyName", 1, "form-control"], ["formGroupName", "State", 1, "col-sm-4", "form-group"], ["type", "hidden", "formControlName", "Code"], ["formControlName", "Id", "placeholder", "Select State", 1, "form-control", 3, "change"], [3, "value"], [3, "value", 4, "ngFor", "ngForOf"], ["formGroupName", "Country", 1, "col-sm-4", "form-group"], ["formControlName", "Id", "placeholder", "Select Country", 1, "form-control", 3, "change"], ["name", "Latitude", "placeholder", "Latitude", "formControlName", "Latitude", 1, "form-control"], ["name", "Longitude", "placeholder", "Longitude", "formControlName", "Longitude", 1, "form-control"], ["class", "col-sm-4 form-group", "formGroupName", "CountryGroup", 4, "ngIf"], [1, "help-block", "color-maroon"], [1, "help-block", "color-maroon", "mb0"], ["formGroupName", "CountryGroup", 1, "col-sm-4", "form-group"], ["formControlName", "Id", "placeholder", "Select Country Group", 1, "form-control"], [1, "btn", "btn-primary", "btn-lg", 3, "click"], [1, "fa", "fa-plus-circle"], [1, "fa", "fa-edit"]],
      template: function LiftDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng-sidebar-container");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ng-sidebar", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("openedChange", function LiftDetailComponent_Template_ng_sidebar_openedChange_1_listener($event) {
            return ctx._opened = $event;
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftDetailComponent_Template_a_click_2_listener() {
            return ctx.toggleOpen(false, null);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "i", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, LiftDetailComponent_div_4_Template, 2, 0, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "content", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h3", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Add Lift Details");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "input", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "label", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Lift Ticket #:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "span", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "*");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](15, "input", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, LiftDetailComponent_div_16_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "label", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, "Lift Date:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "span", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "*");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "input", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onDateChange", function LiftDetailComponent_Template_input_onDateChange_22_listener($event) {
            return ctx.TicketDetailForm.get("LiftDate").setValue($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, LiftDetailComponent_div_23_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "label", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26, "Badge #:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, LiftDetailComponent_span_27_Template, 2, 0, "span", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](28, "input", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](29, LiftDetailComponent_div_29_Template, 2, 1, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](31, "div", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](33, LiftDetailComponent_ng_container_33_Template, 66, 21, "ng-container", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "button", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftDetailComponent_Template_button_click_35_listener() {
            return ctx.cancelTicketDetail();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, "Cancel");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, LiftDetailComponent_button_37_Template, 3, 0, "button", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, LiftDetailComponent_button_38_Template, 3, 0, "button", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("opened", ctx._opened)("animate", ctx._animate)("position", ctx._POSITIONS[ctx._positionNum]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx._loading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.TicketDetailForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("LiftTicketNumber"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "MM/DD/YYYY");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("LiftDate"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isBadgeMandatory);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("BadgeNumber"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.TicketDetailForm.get("Products")["controls"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex == 0 - 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.EditIndex > 0 - 1);
        }
      },
      directives: [ng_sidebar__WEBPACK_IMPORTED_MODULE_11__["SidebarContainer"], ng_sidebar__WEBPACK_IMPORTED_MODULE_11__["Sidebar"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__["DatePicker"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupName"], _directives_required_if_not_empty_directive__WEBPACK_IMPORTED_MODULE_14__["RequiredIfNotEmptyValidator"], _directives_numberWithDecimal__WEBPACK_IMPORTED_MODULE_15__["NumberWithDecimal"], _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_16__["RequiredIfTrueValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_x"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvbGlmdC10aWNrZXRzL2xpZnQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LiftDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-lift-detail',
          templateUrl: './lift-detail.component.html',
          styleUrls: ['./lift-detail.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"]
        }, {
          type: src_app_statelist_service__WEBPACK_IMPORTED_MODULE_1__["StatelistService"]
        }, {
          type: src_app_address_service__WEBPACK_IMPORTED_MODULE_8__["AddressService"]
        }, {
          type: _invoice_services_invoice_service__WEBPACK_IMPORTED_MODULE_9__["InvoiceService"]
        }, {
          type: src_app_services_validation_service__WEBPACK_IMPORTED_MODULE_10__["ValidationService"]
        }];
      }, {
        IsFrieghtPricingMethodAuto: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        IsBadgeMandatory: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onTicketDetailAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onTicketDetailUpdated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/lift-tickets/lift-tickets.component.ts": function srcAppInvoiceLiftTicketsLiftTicketsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LiftTicketsComponent", function () {
      return LiftTicketsComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/imageupload/imageupload.component */
    "./src/app/imageupload/imageupload.component.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var src_app_address_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/address.service */
    "./src/app/address.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../directives/required-if-true.directive */
    "./src/app/directives/required-if-true.directive.ts");

    function LiftTicketsComponent_div_0_ng_container_2_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Ticket #");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Badge #");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Product");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Bulk Plant");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Gross");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Net");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Delivered");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "\xA0");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var liftTkt_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", liftTkt_r2.get("LiftTicketNumber").value, "");
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var liftTkt_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", liftTkt_r2.get("BadgeNumber").value, "");
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("ProductName").value, " ");
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("BulkPlantName").value, " ");
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_13_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var product_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate4"](" ", product_r7.get("Address.Address").value, ", ", product_r7.get("Address.City").value, ", ", product_r7.get("Address.State.Code").value, " ", product_r7.get("Address.ZipCode").value, " ");
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_22_Template(rf, ctx) {
      if (rf & 1) {
        var _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_22_Template_a_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r24);

          var ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var liftTkt_r2 = ctx_r23.$implicit;
          var i_r3 = ctx_r23.index;

          var ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r22.editTicketDetail(liftTkt_r2, i_r3);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_23_Template(rf, ctx) {
      if (rf & 1) {
        var _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_23_Template_a_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r27);

          var i_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).index;

          var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r25.deleteTicketDetail(i_r3);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "i", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function LiftTicketsComponent_div_0_ng_container_2_ng_container_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_3_Template, 2, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_6_Template, 2, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, " \xA0 ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_9_Template, 3, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_11_Template, 2, 1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](13, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_span_13_Template, 2, 4, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](20, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_22_Template, 2, 0, "a", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_a_23_Template, 2, 0, "a", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var product_r7 = ctx.$implicit;
        var j_r8 = ctx.index;
        var isFirstPrd_r9 = ctx.first;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", j_r8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstPrd_r9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstPrd_r9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("GrossQuantity").value && product_r7.get("NetQuantity").value || product_r7.get("BulkPlantName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("GrossQuantity").value && product_r7.get("NetQuantity").value || product_r7.get("BulkPlantName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("BulkPlantName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("GrossQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("NetQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", product_r7.get("DeliveredQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", product_r7.get("GrossQuantity").value && product_r7.get("NetQuantity").value || product_r7.get("BulkPlantName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", (product_r7.get("GrossQuantity").value && product_r7.get("NetQuantity").value || product_r7.get("BulkPlantName").value) && isFirstPrd_r9);
      }
    }

    var _c0 = function _c0() {
      return [];
    };

    function LiftTicketsComponent_div_0_ng_container_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LiftTicketsComponent_div_0_ng_container_2_div_2_Template, 18, 0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, LiftTicketsComponent_div_0_ng_container_2_ng_container_4_Template, 24, 11, "ng-container", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "app-imageupload", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var liftTkt_r2 = ctx.$implicit;
        var i_r3 = ctx.index;
        var isFirstTkt_r4 = ctx.first;

        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirstTkt_r4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", liftTkt_r2.get("Products").controls);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("fileType", "liftFile")("orderId", liftTkt_r2.get("LiftTicketNumber").value)("inputFile", ctx_r1.Model[i_r3] == undefined ? _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](8, _c0) : ctx_r1.Model[i_r3].ImageList)("requiredIfTrue", ctx_r1.IsBolImageRequired)("isLift", true);
      }
    }

    function LiftTicketsComponent_div_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, LiftTicketsComponent_div_0_ng_container_2_Template, 9, 9, "ng-container", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r0.Parent);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.TicketDetails == null ? null : ctx_r0.TicketDetails.controls);
      }
    }

    var LiftTicketsComponent = /*#__PURE__*/function () {
      function LiftTicketsComponent(fb, addressService) {
        _classCallCheck(this, LiftTicketsComponent);

        this.fb = fb;
        this.addressService = addressService;
        this.onTicketEditRequest = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](); //Liftticket number Duplicate validation methods 

        this.onLiftTicketAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnLiftTicketDeleted = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onLiftTicketEdit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnLiftQuantitiesAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.IsBolImageRequired = false;
      }

      _createClass(LiftTicketsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          var _this91 = this;

          if (change.Model && change.Model.currentValue != null) {
            var lifts = change.Model.currentValue;
            lifts.forEach(function (x) {
              return _this91.ticketDetailAdded(x);
            });
          }

          if (change.IsImageRequired && change.IsImageRequired.currentValue != null) {
            this.IsBolImageRequired = change.IsImageRequired.currentValue;
          }
        }
      }, {
        key: "buildForm",
        value: function buildForm(model) {
          var products = this.fb.array([]);
          var currentObj = this;
          model.Products.forEach(function (elem, idx) {
            products.push(currentObj.buildProduct(elem));
          });
          return this.fb.group({
            Id: this.fb.control(model.Id),
            LiftTicketNumber: this.fb.control(model.LiftTicketNumber),
            LiftDate: this.fb.control(model.LiftDate),
            Products: products,
            LiftImages: this.fb.control(''),
            BadgeNumber: this.fb.control(model.BadgeNumber)
          });
        }
      }, {
        key: "buildProduct",
        value: function buildProduct(model) {
          return this.fb.group({
            ProductId: this.fb.control(model.ProductId),
            ProductName: this.fb.control(model.ProductName),
            NetQuantity: this.fb.control(model.NetQuantity),
            DeliveredQuantity: this.fb.control(model.DeliveredQuantity),
            GrossQuantity: this.fb.control(model.GrossQuantity),
            BulkPlantId: this.fb.control(model.BulkPlantId),
            BulkPlantName: this.fb.control(model.BulkPlantName),
            Address: this.buildAddress(model.Address),
            QuantityIndicatorTypeId: this.fb.control(model.QuantityIndicatorTypeId)
          });
        }
      }, {
        key: "buildAddress",
        value: function buildAddress(model) {
          var product = this.fb.group({
            Address: this.fb.control(''),
            Latitude: this.fb.control(''),
            Longitude: this.fb.control(''),
            City: this.fb.control(''),
            CountyName: this.fb.control(''),
            State: this.fb.group({
              Id: this.fb.control(''),
              Code: this.fb.control('')
            }),
            Country: this.fb.group({
              Id: this.fb.control(''),
              Code: this.fb.control('')
            }),
            ZipCode: this.fb.control('')
          });
          product.patchValue(model);
          return product;
        }
      }, {
        key: "ticketDetailAdded",
        value: function ticketDetailAdded(item) {
          if (item.LiftDate && item.LiftDate.indexOf('/Date(') >= 0) {
            item.LiftDate = item.DisplayLiftDate || '';
          }

          this.TicketDetails.push(this.buildForm(item));
          this.onLiftTicketAdded.emit(this.TicketDetails.value);
          this.OnLiftQuantitiesAdded.emit();
        }
      }, {
        key: "ticketDetailUpdated",
        value: function ticketDetailUpdated(item) {
          var formG = this.TicketDetails.controls[item.index];
          formG.patchValue(item.ticketDetail);
          this.OnLiftQuantitiesAdded.emit();
        }
      }, {
        key: "updateBulkPlantDetail",
        value: function updateBulkPlantDetail(event) {
          var currentObj = this;
          var updated = false;
          currentObj.TicketDetails.controls.forEach(function (elem, idx) {
            var _products = elem.get('Products');

            var _matched = _products.controls.find(function (elem) {
              return elem.get('ProductId').value == event.ProductId;
            });

            if (_matched != undefined) {
              _matched.patchValue(event);

              updated = true;
            }
          });

          if (!updated) {
            var _lift = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_1__["LiftTicketDetail"]();

            _lift.Products = [event];
            currentObj.ticketDetailAdded(_lift);
          }
        }
      }, {
        key: "editTicketDetail",
        value: function editTicketDetail(ticketDetail, i) {
          this.onTicketEditRequest.emit({
            ticketDetail: ticketDetail.value,
            index: i
          });
          this.onLiftTicketEdit.emit(ticketDetail.value);
        }
      }, {
        key: "deleteTicketDetail",
        value: function deleteTicketDetail(i) {
          this.TicketDetails.removeAt(i);
          this.OnLiftTicketDeleted.emit(this.TicketDetails.value);
          this.OnLiftQuantitiesAdded.emit();
        }
      }]);

      return LiftTicketsComponent;
    }();

    LiftTicketsComponent.ɵfac = function LiftTicketsComponent_Factory(t) {
      return new (t || LiftTicketsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_address_service__WEBPACK_IMPORTED_MODULE_4__["AddressService"]));
    };

    LiftTicketsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: LiftTicketsComponent,
      selectors: [["app-lift-tickets"]],
      viewQuery: function LiftTicketsComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_2__["ImageuploadComponent"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
        }
      },
      inputs: {
        Parent: "Parent",
        TicketDetails: "TicketDetails",
        Model: "Model",
        IsImageRequired: "IsImageRequired"
      },
      outputs: {
        onTicketEditRequest: "onTicketEditRequest",
        onLiftTicketAdded: "onLiftTicketAdded",
        OnLiftTicketDeleted: "OnLiftTicketDeleted",
        onLiftTicketEdit: "onLiftTicketEdit",
        OnLiftQuantitiesAdded: "OnLiftQuantitiesAdded"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 1,
      vars: 1,
      consts: [["class", "well box-shadow", 3, "formGroup", 4, "ngIf"], [1, "well", "box-shadow", 3, "formGroup"], ["formArrayName", "TicketDetails"], [4, "ngFor", "ngForOf"], [3, "formGroupName"], [4, "ngIf"], ["formArrayName", "Products"], [1, "row"], [1, "col-sm-6"], ["formControlName", "LiftImages", 3, "fileType", "orderId", "inputFile", "requiredIfTrue", "isLift"], [1, "mb20", "border-b-dash"], [1, "row", "f-bold"], [1, "col-sm-2"], [1, "col-sm-1"], [1, "row", 3, "formGroupName"], ["formGroupName", "Address"], [3, "click", 4, "ngIf"], [1, "fa", "fa-tint"], [3, "click"], [1, "fa", "fa-edit", "fs14"], [1, "fa", "fa-trash-alt", "ml10", "color-maroon"]],
      template: function LiftTicketsComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, LiftTicketsComponent_div_0_Template, 3, 2, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", (ctx.TicketDetails == null ? null : ctx.TicketDetails.controls == null ? null : ctx.TicketDetails.controls.length) > 0);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroupName"], src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_2__["ImageuploadComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControlName"], _directives_required_if_true_directive__WEBPACK_IMPORTED_MODULE_6__["RequiredIfTrueValidator"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvbGlmdC10aWNrZXRzL2xpZnQtdGlja2V0cy5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LiftTicketsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-lift-tickets',
          templateUrl: './lift-tickets.component.html',
          styleUrls: ['./lift-tickets.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]
        }, {
          type: src_app_address_service__WEBPACK_IMPORTED_MODULE_4__["AddressService"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        TicketDetails: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Model: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onTicketEditRequest: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        children: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChildren"],
          args: [src_app_imageupload_imageupload_component__WEBPACK_IMPORTED_MODULE_2__["ImageuploadComponent"]]
        }],
        onLiftTicketAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnLiftTicketDeleted: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onLiftTicketEdit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnLiftQuantitiesAdded: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        IsImageRequired: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/payment-terms/payment-terms.component.ts": function srcAppInvoicePaymentTermsPaymentTermsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PaymentTermsComponent", function () {
      return PaymentTermsComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function PaymentTermsComponent_span_25_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Net days is required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function PaymentTermsComponent_span_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PaymentTermsComponent_span_25_span_1_Template, 2, 0, "span", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.PaymentTerm.get("NetDays").errors.required);
      }
    }

    var PaymentTermsComponent = /*#__PURE__*/function () {
      function PaymentTermsComponent(fb) {
        _classCallCheck(this, PaymentTermsComponent);

        this.fb = fb; //----------------- DO NOT MODIFY: Control Value accessor ----------------------

        this.onTouched = function () {};
      }

      _createClass(PaymentTermsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.PaymentTerm = this.fb.group({
            TermId: this.fb.control(''),
            NetDays: this.fb.control('0', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required)
          });
        }
      }, {
        key: "readonlyNetDays",
        value: function readonlyNetDays(termId) {
          var netdays = this.PaymentTerm.get('NetDays');

          if (netdays.value == '') {
            netdays.setValue('0');
          }

          if (termId == 1) {
            netdays.enable();
          } else {
            netdays.disable();
          }
        }
      }, {
        key: "isInvalid",
        value: function isInvalid(name) {
          return this.PaymentTerm.get(name).invalid && (this.PaymentTerm.get(name).dirty || this.PaymentTerm.get(name).touched);
        }
      }, {
        key: "isRequired",
        value: function isRequired(name) {
          return this.PaymentTerm.get(name).errors.required;
        }
      }, {
        key: "writeValue",
        value: function writeValue(val) {
          val && this.PaymentTerm.setValue(val, {
            emitEvent: true
          });
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.PaymentTerm.valueChanges.subscribe(fn);
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(isDisabled) {
          isDisabled ? this.PaymentTerm.disable() : this.PaymentTerm.enable();
        }
      }]);

      return PaymentTermsComponent;
    }();

    PaymentTermsComponent.ɵfac = function PaymentTermsComponent_Factory(t) {
      return new (t || PaymentTermsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]));
    };

    PaymentTermsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: PaymentTermsComponent,
      selectors: [["app-payment-terms"]],
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return PaymentTermsComponent;
        }),
        multi: true
      }])],
      decls: 26,
      vars: 11,
      consts: [[1, "pt0"], [1, "row", 3, "formGroup"], [1, "col-sm-12"], [1, "form-check", "mb5"], ["type", "radio", "id", "prepaid", "formControlName", "TermId", 1, "form-check-input", 3, "name", "value", "change"], ["for", "prepaid", 1, "form-check-label"], ["type", "radio", "id", "dueonreceipt", "formControlName", "TermId", 1, "form-check-input", "mb5", 3, "name", "value", "change"], ["for", "dueonreceipt", 1, "form-check-label"], ["type", "radio", "id", "netdays", "formControlName", "TermId", 1, "form-check-input", "mb5", 3, "name", "value", "change"], ["for", "netdays", 1, "form-check-label"], ["type", "radio", "id", "net30days", "formControlName", "TermId", 1, "form-check-input", "mb5", 3, "name", "value", "change"], ["for", "net30days", 1, "form-check-label"], [1, "col-4"], ["type", "text", "id", "netdaysnumber", "formControlName", "NetDays", "placeholder", "# Days", 1, "form-control", 2, "max-width", "70px", 3, "readonly"], [1, "col-8"], [1, "col-12"], ["class", "color-maroon", 4, "ngIf"], [1, "color-maroon"], [4, "ngIf"]],
      template: function PaymentTermsComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h4", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Payment Terms");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function PaymentTermsComponent_Template_input_change_5_listener() {
            return ctx.readonlyNetDays(3);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "label", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, " Prepaid in full ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "input", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function PaymentTermsComponent_Template_input_change_9_listener() {
            return ctx.readonlyNetDays(2);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "label", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, " Due on receipt ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "input", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function PaymentTermsComponent_Template_input_change_13_listener() {
            return ctx.readonlyNetDays(1);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "label", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, " Net ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "input", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function PaymentTermsComponent_Template_input_change_17_listener() {
            return ctx.readonlyNetDays(4);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "label", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, " 1% 15 Days, Net 30 ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](21, "input", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23, "Days of receipt - Upon credit approval");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, PaymentTermsComponent_span_25_Template, 2, 1, "span", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.PaymentTerm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", "TermId")("value", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", "TermId")("value", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", "TermId")("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("name", "TermId")("value", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", ctx.PaymentTerm.get("TermId").value != 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isInvalid("NetDays"));
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["RadioControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvcGF5bWVudC10ZXJtcy9wYXltZW50LXRlcm1zLmNvbXBvbmVudC5jc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PaymentTermsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-payment-terms',
          templateUrl: './payment-terms.component.html',
          styleUrls: ['./payment-terms.component.css'],
          providers: [{
            provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
            useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
              return PaymentTermsComponent;
            }),
            multi: true
          }]
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/invoice/produc-detail/fuel-surcharge.component.ts": function srcAppInvoiceProducDetailFuelSurchargeComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FuelSurchargeComponent", function () {
      return FuelSurchargeComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
    /* harmony import */


    var _app_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../app.enum */
    "./src/app/app.enum.ts");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ng-multiselect-dropdown */
    "./node_modules/ng-multiselect-dropdown/__ivy_ngcc__/fesm2015/ng-multiselect-dropdown.js");

    function FuelSurchargeComponent_div_1_div_8_div_2_div_9_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_div_8_div_2_div_9_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r4.SurchargeForm.get("FreightType").errors.required);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_10_div_5_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_10_div_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_div_8_div_2_div_10_div_5_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r10.SurchargeForm.get("FreightTableType").errors.required);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_10_Template(rf, ctx) {
      if (rf & 1) {
        var _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Table Type");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "ng-multiselect-dropdown", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSelect", function FuelSurchargeComponent_div_1_div_8_div_2_div_10_Template_ng_multiselect_dropdown_onSelect_4_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r13);

          var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

          return ctx_r12.OnFreightTableTypeSelect($event);
        })("onDeSelect", function FuelSurchargeComponent_div_1_div_8_div_2_div_10_Template_ng_multiselect_dropdown_onDeSelect_4_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r13);

          var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

          return ctx_r14.onTypeDeSelect($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, FuelSurchargeComponent_div_1_div_8_div_2_div_10_div_5_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("placeholder", "Table Type")("settings", ctx_r5.SingleSelectSettingsById)("data", ctx_r5.FreightTableTypeList);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r5.SurchargeForm.get("FreightTableType").invalid && ctx_r5.SurchargeForm.get("AutoFreightDistance").touched);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_16_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_div_8_div_2_div_16_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r6.SurchargeForm.get("FreightTableName").errors.required);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_17_div_5_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_17_div_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_div_8_div_2_div_17_div_5_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r16.SurchargeForm.get("AutoFreightDistance").errors.required);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Distance (Miles)");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "input", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, FuelSurchargeComponent_div_1_div_8_div_2_div_17_div_5_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r7.SurchargeForm.get("AutoFreightDistance").invalid && ctx_r7.SurchargeForm.get("AutoFreightDistance").touched);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_25_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_div_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_div_8_div_2_div_25_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r8.SurchargeForm.get("AutoSurchargeFreightCost").errors.required);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_div_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "h3");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Freight Cost");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "Freight Type");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "ng-multiselect-dropdown", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSelect", function FuelSurchargeComponent_div_1_div_8_div_2_Template_ng_multiselect_dropdown_onSelect_8_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20);

          var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r19.OnFreightTypeSelect($event);
        })("onDeSelect", function FuelSurchargeComponent_div_1_div_8_div_2_Template_ng_multiselect_dropdown_onDeSelect_8_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20);

          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r21.onTypeDeSelect($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, FuelSurchargeComponent_div_1_div_8_div_2_div_9_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, FuelSurchargeComponent_div_1_div_8_div_2_div_10_Template, 6, 4, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](13, "Freight Table Name");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "ng-multiselect-dropdown", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSelect", function FuelSurchargeComponent_div_1_div_8_div_2_Template_ng_multiselect_dropdown_onSelect_15_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20);

          var ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r22.OnFreightTableNameSelect();
        })("onDeSelect", function FuelSurchargeComponent_div_1_div_8_div_2_Template_ng_multiselect_dropdown_onDeSelect_15_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20);

          var ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r23.onTypeDeSelect($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, FuelSurchargeComponent_div_1_div_8_div_2_div_16_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](17, FuelSurchargeComponent_div_1_div_8_div_2_div_17_Template, 6, 1, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](20, "Freight Cost(Per Gallon)");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](21, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "input", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("input", function FuelSurchargeComponent_div_1_div_8_div_2_Template_input_input_22_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r20);

          var ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r24.setAutoSurchargeFreightCost($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](24, "USD");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](25, FuelSurchargeComponent_div_1_div_8_div_2_div_25_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("placeholder", "Type")("settings", ctx_r3.SingleSelectSettingsById)("data", ctx_r3.FreightTypeList);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r3.SurchargeForm.get("FreightType").invalid && ctx_r3.SurchargeForm.get("AutoFreightDistance").touched);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r3.IsFreightTableTypeVisible);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("placeholder", "Type")("settings", ctx_r3.SingleSelectSettingsById)("data", ctx_r3.FreightTableNameList);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r3.SurchargeForm.get("FreightTableName").invalid && ctx_r3.SurchargeForm.get("AutoFreightDistance").touched);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r3.IsDistanceVisible);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r3.SurchargeForm.get("AutoSurchargeFreightCost").invalid && ctx_r3.SurchargeForm.get("AutoFreightDistance").touched);
      }
    }

    function FuelSurchargeComponent_div_1_div_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, FuelSurchargeComponent_div_1_div_8_div_2_Template, 26, 11, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r2.IsFrieghtPricingMethodAuto);
      }
    }

    function FuelSurchargeComponent_div_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "input", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function FuelSurchargeComponent_div_1_Template_input_change_6_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r26);

          var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r25.OncheckBoxChange($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](7, " Apply Freight Cost ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](8, FuelSurchargeComponent_div_1_div_8_Template, 3, 1, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r0.SurchargeForm.get("IsFreightCostApplicable").value);
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_2_div_9_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_2_div_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_2_div_11_div_2_div_9_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r31.SurchargeForm.get("FuelSurchargeTableType").errors.required);
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_2_div_15_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_2_div_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_2_div_11_div_2_div_15_div_1_Template, 2, 0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r32.SurchargeForm.get("FuelSurchargeTableName").errors.required);
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "h3");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Fuel Surcharge");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "Table Type");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "ng-multiselect-dropdown", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSelect", function FuelSurchargeComponent_div_2_div_11_div_2_Template_ng_multiselect_dropdown_onSelect_8_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r36);

          var ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r35.OnFuelSurchargeTableTypeSelect($event);
        })("onDeSelect", function FuelSurchargeComponent_div_2_div_11_div_2_Template_ng_multiselect_dropdown_onDeSelect_8_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r36);

          var ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r37.onTypeDeSelect($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, FuelSurchargeComponent_div_2_div_11_div_2_div_9_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "h5");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](12, "Surcharge Table Name");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "ng-multiselect-dropdown", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onSelect", function FuelSurchargeComponent_div_2_div_11_div_2_Template_ng_multiselect_dropdown_onSelect_14_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r36);

          var ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r38.OnFuelSurchargeTableNameSelect();
        })("onDeSelect", function FuelSurchargeComponent_div_2_div_11_div_2_Template_ng_multiselect_dropdown_onDeSelect_14_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r36);

          var ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r39.onFuelSurchargeNameDeSelect();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, FuelSurchargeComponent_div_2_div_11_div_2_div_15_Template, 2, 1, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("placeholder", "Table Type")("settings", ctx_r28.SingleSelectSettingsById)("data", ctx_r28.FuelSurchargeTableTypeList);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r28.SurchargeForm.get("FuelSurchargeTableType").invalid && ctx_r28.SurchargeForm.get("AutoFreightDistance").touched);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("placeholder", "Type")("settings", ctx_r28.SingleSelectSettingsById)("data", ctx_r28.FuelSurchargeTableNameList);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r28.SurchargeForm.get("FuelSurchargeTableName").invalid && ctx_r28.SurchargeForm.get("AutoFreightDistance").touched);
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, "Freight Cost");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "input", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_2_div_11_div_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "span", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    function FuelSurchargeComponent_div_2_div_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, FuelSurchargeComponent_div_2_div_11_div_2_Template, 16, 8, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, FuelSurchargeComponent_div_2_div_11_div_4_Template, 5, 0, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](8, "Distance");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](9, "input", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, FuelSurchargeComponent_div_2_div_11_div_12_Template, 2, 0, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](14, "EIA Price");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](15, "input", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](17, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](19, "Interval Start");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](20, "input", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](21, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](24, "Interval End");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](25, "input", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](29, "Surcharge %");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](30, "input", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](31, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](32, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](34, "Total");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](35, "input", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r27.IsFrieghtPricingMethodAuto);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx_r27.IsFrieghtPricingMethodAuto);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("display", ctx_r27.SurchargeForm.get("IsFeeByDistance").value ? "block" : "none");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r27.LoadingPrice);
      }
    }

    function FuelSurchargeComponent_div_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "input", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](5, "input", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](6, "input", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "input", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function FuelSurchargeComponent_div_2_Template_input_change_9_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r41);

          var ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r40.OnChangeSurchargeApplicable($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](10, " Apply Fuel Surchage ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, FuelSurchargeComponent_div_2_div_11_Template, 36, 5, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.SurchargeForm.get("IsSurchargeApplicable").value);
      }
    } //import { FeeService } from '../services/fee.service';


    var FuelSurchargeComponent = /*#__PURE__*/function () {
      function FuelSurchargeComponent(fb, invoiceService) {
        _classCallCheck(this, FuelSurchargeComponent);

        this.fb = fb;
        this.invoiceService = invoiceService;
        this.SurchargeEnabled = false;
        this.LoadingPrice = false;
        this.dropQuantity = 0;
        this.SingleSelectSettingsById = {};
        this.IsDistanceVisible = true;
        this.IsFreightTableTypeVisible = true;
        this.IsFrieghtPricingMethodAuto = false;
        this.dateRegex = new RegExp(/^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/);
      }

      _createClass(FuelSurchargeComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this92 = this;

          this.SurchargeForm = this.buildForm();
          this.Parent.addControl('FuelSurchargeFreightFee', this.SurchargeForm);

          if (this.Model != undefined && this.Model != null) {
            this.SurchargeForm.patchValue(this.Model);
            this.setDefaultDetail();
            this.getInvoiceType();
          }

          this.Parent.controls['ActualDropQuantity'].valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["debounceTime"])(2000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["distinctUntilChanged"])()).subscribe(function (qty) {
            if (qty > 0) {
              _this92.dropQuantity = qty;

              _this92.calculateSurcharge(qty);

              _this92.ActualDropQuantity = qty;
            }

            var selectedFreightType = _this92.SurchargeForm.get('FreightTableName').value;

            if (selectedFreightType.length != 0 && selectedFreightType != null && selectedFreightType != undefined) {
              _this92.getFreightCostForAutoInvoice();
            }
          });
          this.SurchargeForm.controls['AutoFreightDistance'].valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["distinctUntilChanged"])()).subscribe(function (distance) {
            var selectedFreightType = _this92.SurchargeForm.get('FreightTableName').value;

            if (distance > 0 && selectedFreightType.length != 0 && selectedFreightType != null && selectedFreightType != undefined) {
              _this92.getFreightCostForAutoInvoice();

              _this92.calculateSurcharge(_this92.dropQuantity);
            }

            if (distance == null || distance == 0) {
              _this92.SurchargeForm.get('SurchargeFreightCost').setValue(0);

              _this92.SurchargeForm.get('AutoSurchargeFreightCost').setValue(0);
            }
          });
          this.SurchargeForm.controls['AutoSurchargeFreightCost'].valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["debounceTime"])(1000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["distinctUntilChanged"])()).subscribe(function (cost) {
            if (cost > 0) {
              _this92.SurchargeForm.get('SurchargeFreightCost').setValue(cost);

              _this92.calculateSurcharge(_this92.dropQuantity);
            }
          });
          this.Parent.controls['DropDate'].valueChanges.subscribe(function (date) {
            _this92.Startdate = date;

            if (_this92.dateRegex.test(date) && _this92.SurchargeEnabled) {
              if (_this92.IsFrieghtPricingMethodAuto == false) {
                _this92.getEiaPriceForDate(date);
              } else {
                _this92.getEiaPriceAutoInvoice(date);
              }
            }
          });
          var surchargeForm = this.Parent.get('FuelSurchargeFreightFee');

          if (surchargeForm != undefined && surchargeForm != null) {
            surchargeForm.get('Distance').valueChanges.subscribe(function (distance) {
              if (distance > 0 && _this92.SurchargeEnabled) {
                _this92.getEiaPriceForDate(distance);
              }
            });
          }

          this.SurchargeForm.get('IsSurchargeApplicable').setValue(this.Model.IsSurchargeApplicable);
          this.IsSurchargeApplicable = this.Model.IsSurchargeApplicable;
          this.CheckBoxFuelSurcharge = this.IsSurchargeApplicable;
          this.SurchargeForm.get('IsFreightCostApplicable').setValue(this.Model.IsFreightCostApplicable);
          this.IsFreightCostApplicable = this.Model.IsFreightCostApplicable;
          this.CheckBoxFreightCost = this.Model.IsFreightCostApplicable;

          if (this.SurchargeForm.get('FreightPricingMethod').value == 2 && this.SurchargeForm.get('IsFreightCostApplicable').value == false) {
            this.SurchargeForm.get('IsSurchargeApplicable').setValue(false);
          }

          this.SingleSelectSettingsById = {
            singleSelection: true,
            closeDropDownOnSelection: true,
            idField: 'Id',
            textField: 'Name',
            enableCheckAll: false,
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 1
          };
          this.GetFreightType();
          this.getTableTypes();
        }
      }, {
        key: "buildForm",
        value: function buildForm() {
          return this.fb.group({
            IsFreightCostApplicable: this.fb.control(''),
            IsSurchargeApplicable: this.fb.control(''),
            SurchargePricingType: this.fb.control(''),
            SurchargeProductType: this.fb.control(''),
            FeeSubTypeId: this.fb.control(''),
            SurchargeFreightCost: this.fb.control(''),
            SurchargePercentage: this.fb.control(''),
            SurchargeEiaPrice: this.fb.control(''),
            SurchargeTableRangeStart: this.fb.control(''),
            SurchargeTableRangeEnd: this.fb.control(''),
            IsFeeByDistance: this.fb.control(''),
            TotalFuelSurchargeFee: this.fb.control(''),
            Distance: this.fb.control(''),
            FuelSurchargeTableType: this.fb.control(''),
            FuelSurchargeTableName: this.fb.control(''),
            FreightType: this.fb.control(''),
            FreightTableType: this.fb.control(''),
            FreightTableName: this.fb.control(''),
            AutoFreightDistance: this.fb.control(''),
            AutoSurchargeFreightCost: this.fb.control(''),
            FreightPricingMethod: this.fb.control('')
          });
        }
      }, {
        key: "OncheckBoxChange",
        value: function OncheckBoxChange(event) {
          if (event.target.checked == false) {
            this.SurchargeForm.get('IsSurchargeApplicable').setValue(false);
          }

          this.validateFreight();
        }
      }, {
        key: "OnChangeSurchargeApplicable",
        value: function OnChangeSurchargeApplicable(event) {
          this.validateFuelSurcharge();
        }
      }, {
        key: "calculateSurcharge",
        value: function calculateSurcharge(quantity) {
          var percent = this.SurchargeForm.get('SurchargePercentage').value;
          var freightCost = this.SurchargeForm.get('SurchargeFreightCost').value;
          var surchargePartial = parseFloat(percent) / 100 * parseFloat(freightCost);
          var surchargeFee = parseFloat(surchargePartial.toFixed(4)) * quantity;

          if (surchargeFee > 0) {
            this.SurchargeForm.get('TotalFuelSurchargeFee').setValue(surchargeFee.toFixed(4));
          }
        }
      }, {
        key: "getEiaPriceForDate",
        value: function getEiaPriceForDate(date) {
          var _this93 = this;

          this.LoadingPrice = true;

          var _date = moment__WEBPACK_IMPORTED_MODULE_4__(date).format('MM/DD/YYYY');

          var EIAdata = {
            buyerCompanyId: this.Model.BuyerCompanyId,
            pricingType: this.SurchargeForm.get('SurchargePricingType').value,
            productType: this.SurchargeForm.get('SurchargeProductType').value,
            deliveryDate: _date
          };
          this.invoiceService.getEiaPrice(EIAdata).subscribe(function (x) {
            _this93.LoadingPrice = false;

            if (!isNaN(parseFloat(x.eiaResponse))) {
              _this93.SurchargeForm.get('SurchargeEiaPrice').setValue(x.eiaResponse);

              _this93.SurchargeForm.get('SurchargePercentage').setValue(x.percent);

              _this93.SurchargeForm.get('SurchargeTableRangeStart').setValue(x.start);

              _this93.SurchargeForm.get('SurchargeTableRangeEnd').setValue(x.end);

              _this93.calculateSurcharge(_this93.dropQuantity);
            }
          });
        }
      }, {
        key: "OnFuelSurchargeTableNameSelect",
        value: function OnFuelSurchargeTableNameSelect() {
          this.getEiaPriceAutoInvoice(this.Startdate);
          this.getFreightCostForAutoInvoice();
        }
      }, {
        key: "onFuelSurchargeNameDeSelect",
        value: function onFuelSurchargeNameDeSelect() {
          this.SurchargeForm.get('SurchargeEiaPrice').patchValue([]);
          this.SurchargeForm.get('SurchargePercentage').patchValue([]);
          this.SurchargeForm.get('SurchargeTableRangeStart').patchValue([]);
          this.SurchargeForm.get('SurchargeTableRangeEnd').patchValue([]);
        }
      }, {
        key: "OnFreightTableNameSelect",
        value: function OnFreightTableNameSelect() {
          var selectedFreightType = this.SurchargeForm.get('FreightType').value;
          var freightRateRuleTypeIds = selectedFreightType.map(function (s) {
            return s.Id;
          });
          var FreightRateRuleIds = freightRateRuleTypeIds[0];

          if (FreightRateRuleIds == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightRateRuleType"].Range) {
            var distance = this.SurchargeForm.get('AutoFreightDistance').value;

            if (distance) {
              this.getFreightCostForAutoInvoice();
              this.calculateSurcharge(this.dropQuantity);
            }
          }

          if (FreightRateRuleIds == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightRateRuleType"].Route) {
            var qty = this.Parent.controls['ActualDropQuantity'].value;

            if (qty) {
              this.getFreightCostForAutoInvoice();
              this.calculateSurcharge(this.dropQuantity);
            }
          }
        }
      }, {
        key: "onFreightTableNameDeSelect",
        value: function onFreightTableNameDeSelect() {
          this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);
        }
      }, {
        key: "getEiaPriceAutoInvoice",
        value: function getEiaPriceAutoInvoice(date) {
          var _this94 = this;

          this.LoadingPrice = true;

          var _date;

          if (date) {
            _date = moment__WEBPACK_IMPORTED_MODULE_4__(date).format('MM/DD/YYYY');
          } else {
            _date = moment__WEBPACK_IMPORTED_MODULE_4__(new Date()).format('MM/DD/YYYY');
          }

          var selectedFuelSurchargeTableName = this.SurchargeForm.get('FuelSurchargeTableName').value;

          if (selectedFuelSurchargeTableName) {
            var surchargeTableNameId = selectedFuelSurchargeTableName.map(function (s) {
              return s.Id;
            });
            var EIAdata = {
              deliveryDate: _date,
              fuelSurchargeIndexId: surchargeTableNameId[0]
            };
            this.invoiceService.getEiaPriceAutoFreightMethod(EIAdata).subscribe(function (x) {
              _this94.LoadingPrice = false;

              if (x.length != 0 && x) {
                _this94.SurchargeForm.get('SurchargeEiaPrice').setValue(x.eiaResponse);

                _this94.SurchargeForm.get('SurchargePercentage').setValue(x.percent);

                _this94.SurchargeForm.get('SurchargeTableRangeStart').setValue(x.start);

                _this94.SurchargeForm.get('SurchargeTableRangeEnd').setValue(x.end);

                _this94.calculateSurcharge(_this94.dropQuantity);
              }
            });
          }
        }
      }, {
        key: "getFreightCostForAutoInvoice",
        value: function getFreightCostForAutoInvoice() {
          var _this95 = this;

          var input = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["FreightCostInputViewModel"]();
          input.OrderId = this.Parent.get('OrderId').value;
          input.TerminalId = this.Parent.get('TerminalId').value;
          var selectedFreightTableName = this.SurchargeForm.get('FreightTableName').value;

          if (selectedFreightTableName) {
            var freightRateRuleId = selectedFreightTableName.map(function (s) {
              return s.Id;
            });
            input.FreightRateRuleId = freightRateRuleId[0];
            input.DeliveredQuantity = this.ActualDropQuantity;
            input.Distance = this.SurchargeForm.get('AutoFreightDistance').value;
            this.invoiceService.GetFreightCostForAutoInvoice(input).subscribe(function (data) {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this95, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee138() {
                var surchargeFreightCost;
                return regeneratorRuntime.wrap(function _callee138$(_context149) {
                  while (1) {
                    switch (_context149.prev = _context149.next) {
                      case 0:
                        if (!data) {
                          _context149.next = 6;
                          break;
                        }

                        _context149.next = 3;
                        return data;

                      case 3:
                        surchargeFreightCost = _context149.sent;
                        this.SurchargeForm.get('SurchargeFreightCost').setValue(surchargeFreightCost);
                        this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(surchargeFreightCost);

                      case 6:
                      case "end":
                        return _context149.stop();
                    }
                  }
                }, _callee138, this);
              }));
            });
          }
        }
      }, {
        key: "setAutoSurchargeFreightCost",
        value: function setAutoSurchargeFreightCost(event) {
          this.SurchargeForm.controls['SurchargeFreightCost'].setValue(event.target.value);
        }
      }, {
        key: "setDistanceBasedFreightCost",
        value: function setDistanceBasedFreightCost(distance) {
          if (this.SurchargeForm.get('IsFeeByDistance').value) {
            var feeByQty = this.Model.DeliveryFeeByQuantity.find(function (x) {
              return x.MinQuantity <= distance && x.MaxQuantity >= distance;
            });

            if (feeByQty == undefined && this.Model.DeliveryFeeByQuantity.length > 0) {
              feeByQty = this.Model.DeliveryFeeByQuantity[this.Model.DeliveryFeeByQuantity.length - 1];
            }

            if (feeByQty != undefined) {
              this.SurchargeForm.get('SurchargeFreightCost').setValue(feeByQty.Fee);
            } else {
              this.SurchargeForm.get('SurchargeFreightCost').setValue(0);
            }
          }
        }
      }, {
        key: "GetFreightType",
        value: function GetFreightType() {
          var _this96 = this;

          this.invoiceService.getFreightTable().subscribe(function (data) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this96, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee139() {
              return regeneratorRuntime.wrap(function _callee139$(_context150) {
                while (1) {
                  switch (_context150.prev = _context150.next) {
                    case 0:
                      if (!data) {
                        _context150.next = 4;
                        break;
                      }

                      _context150.next = 3;
                      return data;

                    case 3:
                      this.FreightTypeList = _context150.sent;

                    case 4:
                    case "end":
                      return _context150.stop();
                  }
                }
              }, _callee139, this);
            }));
          });
        }
      }, {
        key: "getTableTypes",
        value: function getTableTypes() {
          var _this97 = this;

          this.invoiceService.getTableTypes().subscribe(function (data) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this97, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee140() {
              return regeneratorRuntime.wrap(function _callee140$(_context151) {
                while (1) {
                  switch (_context151.prev = _context151.next) {
                    case 0:
                      if (!data) {
                        _context151.next = 6;
                        break;
                      }

                      _context151.next = 3;
                      return data;

                    case 3:
                      this.FuelSurchargeTableTypeList = _context151.sent;
                      this.FuelSurchargeTableTypeList = this.FuelSurchargeTableTypeList.splice(0, 2);
                      this.FreightTableTypeList = this.FuelSurchargeTableTypeList;

                    case 6:
                    case "end":
                      return _context151.stop();
                  }
                }
              }, _callee140, this);
            }));
          });
        } //FuelSurcharge

      }, {
        key: "OnFuelSurchargeTableTypeSelect",
        value: function OnFuelSurchargeTableTypeSelect(item) {
          this.SurchargeForm.get('FuelSurchargeTableName').patchValue([]);

          switch (item.Id) {
            case 1:
              //Master
              this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{
                Id: 1,
                Name: "Master"
              }]);
              break;

            case 2:
              // Customer Specific
              this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{
                Id: 2,
                Name: "CustomerSpecific"
              }]);
              break;
          }

          this.GetFuelSurchargeTableName(null);
        }
      }, {
        key: "GetFuelSurchargeTableName",
        value: function GetFuelSurchargeTableName(selectedFuelSurchargeId) {
          var _this98 = this;

          var input = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["FreightTableNameModel"]();
          var selectedFuelSurchargeTableType = this.SurchargeForm.get('FuelSurchargeTableType').value;

          if (parent) {
            input.TerminalId = this.Parent.get('TerminalId').value;
            input.OrderId = this.Parent.get('OrderId').value;
          }

          if (selectedFuelSurchargeTableType != null && selectedFuelSurchargeTableType != undefined && selectedFuelSurchargeTableType.length > 0) {
            var surchargeTableTypeIds = selectedFuelSurchargeTableType.map(function (s) {
              return s.Id;
            });
            input.TableType = surchargeTableTypeIds.join(',');
            this.invoiceService.getFuelSurchargeTableName(input).subscribe(function (data) {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this98, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee141() {
                var FuelSurchargeTableNames;
                return regeneratorRuntime.wrap(function _callee141$(_context152) {
                  while (1) {
                    switch (_context152.prev = _context152.next) {
                      case 0:
                        _context152.next = 2;
                        return data;

                      case 2:
                        this.FuelSurchargeTableNameList = _context152.sent;

                        if (selectedFuelSurchargeId && selectedFuelSurchargeId.length != 0 && data) {
                          FuelSurchargeTableNames = this.FuelSurchargeTableNameList.filter(function (t) {
                            return t.Id == selectedFuelSurchargeId;
                          });
                          this.SurchargeForm.controls['FuelSurchargeTableName'].patchValue(FuelSurchargeTableNames);
                          this.getEiaPriceAutoInvoice(this.Startdate);
                        }

                      case 4:
                      case "end":
                        return _context152.stop();
                    }
                  }
                }, _callee141, this);
              }));
            });
          }
        }
      }, {
        key: "setDefaultDetail",
        value: function setDefaultDetail() {
          if (this.Model != null) {
            //FuelSurcharge 
            if (this.Model.FuelSurchargeTableType == 0 || this.Model.FuelSurchargeTableType == undefined) {
              this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([]);
            } else {
              if (this.Model.FuelSurchargeTableType == 1) {
                this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{
                  Id: 1,
                  Name: "Master"
                }]);
              } else {
                this.SurchargeForm.controls['FuelSurchargeTableType'].patchValue([{
                  Id: 2,
                  Name: "CustomerSpecific"
                }]);
              }

              this.GetFuelSurchargeTableName(this.Model.FuelSurchargeTableId);
            } //FreightCost


            if (this.Model.FreightRateRuleType == 0 || this.Model.FreightRateRuleType == undefined || this.Model.FreightRateRuleType == null) {
              this.SurchargeForm.controls['FreightType'].patchValue([]);
              this.SurchargeForm.controls['FreightTableType'].patchValue([]);
            } else {
              if (this.Model.FreightRateRuleType == 1) {
                this.SurchargeForm.controls['FreightType'].patchValue([{
                  Id: 1,
                  Name: "P2P"
                }]);
                this.SurchargeForm.controls['FreightTableType'].patchValue([{
                  Id: 2,
                  Name: "CustomerSpecific"
                }]);
                this.GetFreightTableName(null);
                this.IsFreightTableTypeVisible = false;
                this.IsDistanceVisible = false;
              } else if (this.Model.FreightRateRuleType == 2) {
                this.SurchargeForm.controls['FreightType'].patchValue([{
                  Id: 2,
                  Name: "Range"
                }]);
                this.IsFreightTableTypeVisible = true;
                this.IsDistanceVisible = true;
              } else {
                this.SurchargeForm.controls['FreightType'].patchValue([{
                  Id: 3,
                  Name: "Route"
                }]);
                this.IsFreightTableTypeVisible = true;
                this.IsDistanceVisible = false;
              }

              if (this.Model.FreightRateTableType == 1) {
                this.SurchargeForm.controls['FreightTableType'].patchValue([{
                  Id: 1,
                  Name: "Master"
                }]);
              } else {
                this.SurchargeForm.controls['FreightTableType'].patchValue([{
                  Id: 2,
                  Name: "CustomerSpecific"
                }]);
              }

              this.GetFreightTableName(this.Model.FreightRateRuleId);
            }
          }

          this.validateFreight();
          this.validateFuelSurcharge();
        }
      }, {
        key: "validateFreight",
        value: function validateFreight() {
          if (this.SurchargeForm.get('IsFreightCostApplicable').value && this.SurchargeForm.get('FreightPricingMethod').value == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightPricingMethod"].Auto) {
            this.SurchargeForm.get('FreightType').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            this.SurchargeForm.get('FreightType').updateValueAndValidity();
            var selectedFreightType = this.SurchargeForm.get('FreightType').value;

            if (selectedFreightType != null && selectedFreightType != undefined && selectedFreightType.length > 0) {
              var freightRateType = selectedFreightType.map(function (s) {
                return s.Id;
              });
              var value = freightRateType != _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightRateRuleType"].P2P ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [];
              this.SurchargeForm.get('FreightTableType').setValidators(value);
              this.SurchargeForm.get('FreightTableType').updateValueAndValidity();
              var distance = freightRateType == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightRateRuleType"].Range ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [];
              this.SurchargeForm.get('AutoFreightDistance').setValidators(distance);
              this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();
              this.SurchargeForm.get('FreightTableName').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
              this.SurchargeForm.get('FreightTableName').updateValueAndValidity();
              this.SurchargeForm.get('AutoSurchargeFreightCost').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
              this.SurchargeForm.get('AutoSurchargeFreightCost').updateValueAndValidity();
            }
          } else {
            this.SurchargeForm.get('FreightType').setValidators([]);
            this.SurchargeForm.get('FreightType').updateValueAndValidity();
            this.SurchargeForm.get('FreightTableType').setValidators([]);
            this.SurchargeForm.get('FreightTableType').updateValueAndValidity();
            this.SurchargeForm.get('AutoFreightDistance').setValidators([]);
            this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();
            this.SurchargeForm.get('FreightTableName').setValidators([]);
            this.SurchargeForm.get('FreightTableName').updateValueAndValidity();
            this.SurchargeForm.get('AutoSurchargeFreightCost').setValidators([]);
            this.SurchargeForm.get('AutoSurchargeFreightCost').updateValueAndValidity();
            this.SurchargeForm.get('AutoFreightDistance').setValidators([]);
            this.SurchargeForm.get('AutoFreightDistance').updateValueAndValidity();
          }
        }
      }, {
        key: "validateFuelSurcharge",
        value: function validateFuelSurcharge() {
          if (this.SurchargeForm.get('IsSurchargeApplicable').value && this.SurchargeForm.get('FreightPricingMethod').value == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightPricingMethod"].Auto) {
            this.SurchargeForm.get('FuelSurchargeTableType').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            this.SurchargeForm.get('FuelSurchargeTableType').updateValueAndValidity();
            this.SurchargeForm.get('FuelSurchargeTableName').setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]);
            this.SurchargeForm.get('FuelSurchargeTableName').updateValueAndValidity();
          } else {
            this.SurchargeForm.get('FuelSurchargeTableType').setValidators([]);
            this.SurchargeForm.get('FuelSurchargeTableType').updateValueAndValidity();
            this.SurchargeForm.get('FuelSurchargeTableName').setValidators([]);
            this.SurchargeForm.get('FuelSurchargeTableName').updateValueAndValidity();
          }
        } //FrightCost

      }, {
        key: "OnFreightTypeSelect",
        value: function OnFreightTypeSelect(item) {
          this.SurchargeForm.get('FreightTableType').patchValue([]);
          this.SurchargeForm.get('FreightTableName').patchValue([]);
          this.FreightTableNameList = [];

          switch (item.Id) {
            case 1:
              //P2P
              this.SurchargeForm.controls['FreightType'].patchValue([{
                Id: 1,
                Name: "P2P"
              }]);
              this.SurchargeForm.controls['FreightTableType'].patchValue([{
                Id: 2,
                Name: "CustomerSpecific"
              }]);
              this.GetFreightTableName(null);
              this.IsFreightTableTypeVisible = false;
              this.IsDistanceVisible = false;
              break;

            case 2:
              // Range
              this.SurchargeForm.controls['FreightType'].patchValue([{
                Id: 2,
                Name: "Range"
              }]);
              this.IsFreightTableTypeVisible = true;
              this.IsDistanceVisible = true;
              break;

            case 3:
              //Route
              this.SurchargeForm.controls['FreightType'].patchValue([{
                Id: 3,
                Name: "Route"
              }]);
              this.IsFreightTableTypeVisible = true;
              this.IsDistanceVisible = false;
              break;
          }

          this.validateFreight();
        }
      }, {
        key: "OnFreightTableTypeSelect",
        value: function OnFreightTableTypeSelect(item) {
          this.SurchargeForm.get('FreightTableName').patchValue([]);

          switch (item.Id) {
            case 1:
              //Master
              this.SurchargeForm.controls['FreightTableType'].patchValue([{
                Id: 1,
                Name: "Master"
              }]);
              break;

            case 2:
              // Customer Specific
              this.SurchargeForm.controls['FreightTableType'].patchValue([{
                Id: 2,
                Name: "CustomerSpecific"
              }]);
              break;
          }

          this.GetFreightTableName(null);
        }
      }, {
        key: "GetFreightTableName",
        value: function GetFreightTableName(selectedFreightRateId) {
          var _this99 = this;

          var input = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["FreightTableNameModel"]();
          var selectedFreightType = this.SurchargeForm.get('FreightType').value;
          var selectedFreightTableType = this.SurchargeForm.get('FreightTableType').value;
          this.SurchargeForm.get('SurchargeFreightCost').setValue(0);
          this.SurchargeForm.get('AutoSurchargeFreightCost').setValue(0);

          if (this.Parent) {
            input.TerminalId = this.Parent.get('TerminalId').value;
            input.OrderId = this.Parent.get('OrderId').value;
          }

          if (selectedFreightType != null && selectedFreightType != undefined && selectedFreightType.length > 0) {
            var freightRateType = selectedFreightType.map(function (s) {
              return s.Id;
            });
            input.FreightRateRuleType = freightRateType.join(',');
          }

          if (selectedFreightTableType != null && selectedFreightTableType != undefined && selectedFreightTableType.length > 0) {
            var freightTableType = selectedFreightTableType.map(function (s) {
              return s.Id;
            });
            input.TableType = freightTableType.join(',');
          }

          if (selectedFreightTableType != null && selectedFreightTableType != undefined && selectedFreightTableType.length > 0) {
            var freightRateRuleTypeIds = selectedFreightTableType.map(function (s) {
              return s.Id;
            });
            input.TableType = freightRateRuleTypeIds.join(',');
            this.invoiceService.getFreightTableName(input).subscribe(function (data) {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this99, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee142() {
                var FreightTableNames;
                return regeneratorRuntime.wrap(function _callee142$(_context153) {
                  while (1) {
                    switch (_context153.prev = _context153.next) {
                      case 0:
                        _context153.next = 2;
                        return data;

                      case 2:
                        this.FreightTableNameList = _context153.sent;

                        if (selectedFreightRateId && selectedFreightRateId.length != 0 && data) {
                          FreightTableNames = this.FreightTableNameList.filter(function (t) {
                            return t.Id == selectedFreightRateId;
                          });
                          this.SurchargeForm.controls['FreightTableName'].patchValue(FreightTableNames);
                        }

                      case 4:
                      case "end":
                        return _context153.stop();
                    }
                  }
                }, _callee142, this);
              }));
            });
          }
        }
      }, {
        key: "onTypeDeSelect",
        value: function onTypeDeSelect(item) {
          var selectedType = this.SurchargeForm.get('FreightType').value;
          var selectedFreightTableType = this.SurchargeForm.get('FreightTableType').value;
          var selectedFreightTableName = this.SurchargeForm.get('FreightTableName').value;
          var selectedFuelTableType = this.SurchargeForm.get('FuelSurchargeTableType').value;

          if (selectedType.length == 0) {
            this.IsFreightTableTypeVisible = true;
            this.SurchargeForm.get('FreightType').patchValue([]);
            this.SurchargeForm.get('FreightTableType').patchValue([]);
            this.SurchargeForm.get('FreightTableName').patchValue([]);
            this.FreightTableNameList = [];
            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);
          }

          if (selectedFreightTableType.length == 0) {
            this.SurchargeForm.get('FreightTableName').patchValue([]);
            this.FreightTableNameList = [];
            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);
          }

          if (selectedFreightTableName.length == 0) {
            this.SurchargeForm.controls['AutoSurchargeFreightCost'].setValue(0);
          }

          if (selectedFuelTableType.length == 0) {
            this.SurchargeForm.get('FuelSurchargeTableName').patchValue([]);
            this.FuelSurchargeTableNameList = [];
          }
        }
      }, {
        key: "getInvoiceType",
        value: function getInvoiceType() {
          if (this.Model != null) {
            if (this.Model.FreightPricingMethod == _app_enum__WEBPACK_IMPORTED_MODULE_5__["FreightPricingMethod"].Manual) {
              this.IsFrieghtPricingMethodAuto = false;
              this.SurchargeForm.get('FreightPricingMethod').setValue(1);
            } else {
              this.IsFrieghtPricingMethodAuto = true;
              this.SurchargeForm.get('FreightPricingMethod').setValue(2);
            }
          }
        }
      }]);

      return FuelSurchargeComponent;
    }();

    FuelSurchargeComponent.ɵfac = function FuelSurchargeComponent_Factory(t) {
      return new (t || FuelSurchargeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_7__["InvoiceService"]));
    };

    FuelSurchargeComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: FuelSurchargeComponent,
      selectors: [["app-fuel-surcharge"]],
      inputs: {
        Parent: "Parent",
        Model: "Model",
        SurchargeEnabled: "SurchargeEnabled"
      },
      decls: 3,
      vars: 3,
      consts: [[3, "formGroup"], [4, "ngIf"], ["class", "row", 4, "ngIf"], [1, "row"], [1, "col-sm-12"], [1, "form-group"], [1, "checkbox"], ["type", "checkbox", "formControlName", "IsFreightCostApplicable", 3, "change"], ["class", "col-sm-12", 4, "ngIf"], [1, "col-sm-2"], ["formControlName", "FreightType", 1, "single-select", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], ["class", "color-maroon", 4, "ngIf"], ["class", "col-sm-3", 4, "ngIf"], [1, "col-sm-3"], ["formControlName", "FreightTableName", 1, "single-select", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], ["class", "col-sm-2", 4, "ngIf"], [1, "input-group"], ["type", "number", "formControlName", "AutoSurchargeFreightCost", "placeholder", "Fee", 1, "form-control", 3, "input"], [1, "input-group-addon", "fs12"], [1, "color-maroon"], ["formControlName", "FreightTableType", 1, "single-select", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], ["type", "number", "formControlName", "AutoFreightDistance", "min", "0", "oninput", "this.value = Math.abs(this.value)", "placeholder", "Distance", 1, "form-control"], [1, "row", "ml-1"], ["type", "hidden", "formControlName", "SurchargePricingType"], ["type", "hidden", "formControlName", "SurchargeProductType"], ["type", "hidden", "formControlName", "FeeSubTypeId"], ["type", "checkbox", "formControlName", "IsSurchargeApplicable", 3, "change"], ["type", "text", "formControlName", "Distance", 1, "form-control"], ["class", "pa bg-white subSectionOpacity top0 left0 z-index5 loading-wrapper", 4, "ngIf"], ["type", "text", "formControlName", "SurchargeEiaPrice", "readonly", "readonly", 1, "form-control"], ["type", "text", "formControlName", "SurchargeTableRangeStart", "readonly", "readonly", 1, "form-control"], ["type", "text", "formControlName", "SurchargeTableRangeEnd", "readonly", "readonly", 1, "form-control"], ["type", "text", "formControlName", "SurchargePercentage", 1, "form-control"], ["type", "text", "formControlName", "TotalFuelSurchargeFee", 1, "form-control"], ["formControlName", "FuelSurchargeTableType", 1, "single-select", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], ["formControlName", "FuelSurchargeTableName", 1, "single-select", 3, "placeholder", "settings", "data", "onSelect", "onDeSelect"], ["type", "text", "formControlName", "SurchargeFreightCost", "readonly", "readonly", 1, "form-control"], [1, "pa", "bg-white", "subSectionOpacity", "top0", "left0", "z-index5", "loading-wrapper"], [1, "spinner-dashboard", "pa"]],
      template: function FuelSurchargeComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, FuelSurchargeComponent_div_1_Template, 9, 1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, FuelSurchargeComponent_div_2_Template, 12, 1, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.SurchargeForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.SurchargeForm.get("FreightPricingMethod").value != 1 && ctx.CheckBoxFreightCost);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.SurchargeForm.get("FreightPricingMethod").value == 1 && ctx.CheckBoxFuelSurcharge || ctx.SurchargeForm.get("FreightPricingMethod").value == 2 && ctx.SurchargeForm.get("IsFreightCostApplicable").value == true && ctx.CheckBoxFuelSurcharge);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["CheckboxControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_9__["MultiSelectComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NumberValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvcHJvZHVjLWRldGFpbC9mdWVsLXN1cmNoYXJnZS5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FuelSurchargeComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-fuel-surcharge',
          templateUrl: './fuel-surcharge.component.html',
          styleUrls: ['./fuel-surcharge.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_7__["InvoiceService"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        Model: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        SurchargeEnabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/produc-detail/produc-detail.component.ts": function srcAppInvoiceProducDetailProducDetailComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProducDetailComponent", function () {
      return ProducDetailComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
    /* harmony import */


    var _asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../asset-list/asset-list.component */
    "./src/app/invoice/asset-list/asset-list.component.ts");
    /* harmony import */


    var src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! src/app/app.enum */
    "./src/app/app.enum.ts");
    /* harmony import */


    var src_app_app_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! src/app/app.constants */
    "./src/app/app.constants.ts");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var src_app_address_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/address.service */
    "./src/app/address.service.ts");
    /* harmony import */


    var _carrier_service_data_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../../carrier/service/data.service */
    "./src/app/carrier/service/data.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../../directives/myDateTimePicker */
    "./src/app/directives/myDateTimePicker.ts");
    /* harmony import */


    var _directives_time_smaller_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../../directives/time-smaller-than-or-equal-to-validator */
    "./src/app/directives/time-smaller-than-or-equal-to-validator.ts");
    /* harmony import */


    var _directives_time_greater_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../../directives/time-greater-than-or-equal-to-validator */
    "./src/app/directives/time-greater-than-or-equal-to-validator.ts");
    /* harmony import */


    var _fuel_surcharge_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./fuel-surcharge.component */
    "./src/app/invoice/produc-detail/fuel-surcharge.component.ts");
    /* harmony import */


    var _bdr_detail_show_bdr_detail_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ../bdr-detail/show-bdr-detail.component */
    "./src/app/invoice/bdr-detail/show-bdr-detail.component.ts");
    /* harmony import */


    var _bdr_detail_bdr_detail_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ../bdr-detail/bdr-detail.component */
    "./src/app/invoice/bdr-detail/bdr-detail.component.ts");
    /* harmony import */


    var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ng-multiselect-dropdown */
    "./node_modules/ng-multiselect-dropdown/__ivy_ngcc__/fesm2015/ng-multiselect-dropdown.js");

    var _c0 = ["actualDropQty"];

    function ProducDetailComponent_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r7.UoM, "");
      }
    }

    function ProducDetailComponent_ng_container_3_div_25_Template(rf, ctx) {
      if (rf & 1) {
        var _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "select", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function ProducDetailComponent_ng_container_3_div_25_Template_select_change_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r26);

          var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r25.OnUomChange($event.target.value, drop_r2);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "option", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "option", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "MT");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r8.UoM);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r8.UoM);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", "MT");
      }
    }

    function ProducDetailComponent_ng_container_3_span_26_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_26_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_26_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_span_26_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProducDetailComponent_ng_container_3_span_26_span_2_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r9.isRequired(drop_r2, "ActualDropQuantity") || ctx_r9.isMin(drop_r2, "ActualDropQuantity"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r9.isRequired(drop_r2, "ActualDropQuantity") && ctx_r9.isInvalid(drop_r2, "ActualDropQuantity"));
      }
    }

    function ProducDetailComponent_ng_container_3_span_27_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "MT");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_27_span_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "B");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProducDetailComponent_ng_container_3_span_27_span_3_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, ProducDetailComponent_ng_container_3_span_27_span_4_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        var drop_r2 = ctx_r33.$implicit;
        var i_r3 = ctx_r33.index;

        var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", drop_r2.get("ConvertedQuantity").value, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r10.Drops != null && ctx_r10.Drops[i_r3].UoM == "4");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r10.Drops != null && ctx_r10.Drops[i_r3].UoM == "3");
      }
    }

    function ProducDetailComponent_ng_container_3_span_33_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_33_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_span_33_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r11.isRequired(drop_r2, "DropDate"));
      }
    }

    function ProducDetailComponent_ng_container_3_span_39_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_39_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_39_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid Time Format ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_39_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_span_39_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProducDetailComponent_ng_container_3_span_39_span_2_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProducDetailComponent_ng_container_3_span_39_span_3_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r12.isRequired(drop_r2, "StartTime"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("StartTime").errors.timeSmallerThanOrEqualTo);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("StartTime").errors.pattern);
      }
    }

    function ProducDetailComponent_ng_container_3_span_45_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_50_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_50_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_50_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid Time Format ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_span_50_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_span_50_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProducDetailComponent_ng_container_3_span_50_span_2_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProducDetailComponent_ng_container_3_span_50_span_3_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r14.isRequired(drop_r2, "EndTime"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("EndTime").errors.timeGreaterThanOrEqualTo);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("EndTime").errors.pattern);
      }
    }

    function ProducDetailComponent_ng_container_3_option_57_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ft_r44 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ft_r44.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ft_r44.Name);
      }
    }

    function ProducDetailComponent_ng_container_3_div_58_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Delivery-Level PO#");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "input", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_59_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Supplier Allowance");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "input", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r17.Currency);
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_div_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_span_5_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid API Gravity ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_span_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_div_60_span_5_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("Gravity").errors.invalidGravity);
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_span_6_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_span_6_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_60_span_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_div_60_span_6_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProducDetailComponent_ng_container_3_div_60_span_6_span_2_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("Gravity").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("Gravity").errors.pattern);
      }
    }

    var _c1 = function _c1(a0) {
      return {
        "hidden": a0
      };
    };

    function ProducDetailComponent_ng_container_3_div_60_Template(rf, ctx) {
      if (rf & 1) {
        var _r55 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "API Gravity");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProducDetailComponent_ng_container_3_div_60_div_3_Template, 2, 0, "div", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "input", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProducDetailComponent_ng_container_3_div_60_Template_input_input_4_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r55);

          var ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var drop_r2 = ctx_r54.$implicit;
          var i_r3 = ctx_r54.index;

          var ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r53.ValidateGravityAndConvertForMFN(drop_r2, ctx_r53.Drops[i_r3]);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, ProducDetailComponent_ng_container_3_div_60_span_5_Template, 2, 1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ProducDetailComponent_ng_container_3_div_60_span_6_Template, 3, 2, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c1, drop_r2.controls.Gravity.disabled));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r18.IsConvertingGravity);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("Gravity").errors && (drop_r2.get("Gravity").touched || drop_r2.get("Gravity").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("Gravity").errors && (drop_r2.get("Gravity").touched || drop_r2.get("Gravity").dirty));
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_span_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 48);
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_span_7_span_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_span_7_span_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_span_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_div_61_span_7_span_1_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProducDetailComponent_ng_container_3_div_61_span_7_span_2_Template, 2, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("ConversionFactor").errors.required);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("ConversionFactor").errors.pattern);
      }
    }

    function ProducDetailComponent_ng_container_3_div_61_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Conversion Factor ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "i", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, ProducDetailComponent_ng_container_3_div_61_div_4_Template, 2, 0, "div", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ProducDetailComponent_ng_container_3_div_61_span_6_Template, 1, 0, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, ProducDetailComponent_ng_container_3_div_61_span_7_Template, 3, 2, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c1, drop_r2.controls.ConversionFactor.disabled));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r19.IsConvertingGravity);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("ConversionFactor").errors && (drop_r2.get("ConversionFactor").touched || drop_r2.get("ConversionFactor").dirty));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("ConversionFactor").errors && (drop_r2.get("ConversionFactor").touched || drop_r2.get("ConversionFactor").dirty));
      }
    }

    function ProducDetailComponent_ng_container_3_div_62_Template(rf, ctx) {
      if (rf & 1) {
        var _r65 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "\xA0");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "button", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProducDetailComponent_ng_container_3_div_62_Template_button_click_4_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r65);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](67);

          return _r22.toggleOpen(true, null);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "i", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "Add BDN Details");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var i_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;

        var ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx_r20.Drops[i_r3] == null ? null : ctx_r20.Drops[i_r3].IsBdrDetailsAdded);
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_li_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Enter minimum 3 characters to search.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_li_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Something went wrong.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_li_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Loading...");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_li_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "small");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "No terminal found.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_li_11_Template(rf, ctx) {
      if (rf & 1) {
        var _r81 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 80);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProducDetailComponent_ng_container_3_div_70_div_6_li_11_Template_li_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r81);

          var terminal_r78 = ctx.$implicit;

          var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3).$implicit;

          var ctx_r79 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r79.setTerminalName(drop_r2, terminal_r78);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var terminal_r78 = ctx.$implicit;

        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3).$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("selected", terminal_r78.Name == drop_r2.get("TerminalName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](terminal_r78.Name);
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_6_Template(rf, ctx) {
      if (rf & 1) {
        var _r84 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_ng_container_3_div_70_div_6_div_1_Template, 2, 0, "div", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label", 73);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Terminal");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "input", 74);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 75);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProducDetailComponent_ng_container_3_div_70_div_6_Template_input_input_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r84);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](15);

          var ctx_r83 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r83.onTerminalSearched($event, _r5.value);
        })("blur", function ProducDetailComponent_ng_container_3_div_70_div_6_Template_input_blur_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r84);

          var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](15);

          var ctx_r85 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r85.validateTerminal(drop_r2, $event, _r5.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "ul", 76);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, ProducDetailComponent_ng_container_3_div_70_div_6_li_7_Template, 3, 0, "li", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ProducDetailComponent_ng_container_3_div_70_div_6_li_8_Template, 3, 0, "li", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, ProducDetailComponent_ng_container_3_div_70_div_6_li_9_Template, 3, 0, "li", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, ProducDetailComponent_ng_container_3_div_70_div_6_li_10_Template, 3, 0, "li", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ProducDetailComponent_ng_container_3_div_70_div_6_li_11_Template, 2, 2, "li", 78);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r67._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r67.minCharRequired);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r67.searchError);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r67._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r67.noTerminalFound && !ctx_r67.minCharRequired && !ctx_r67.searchError && !ctx_r67._loadingTerminals);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r67.Terminals);
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 81);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Terminal Price");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 82);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

        var ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"]("", drop_r2.get("TerminalPrice").value, " ", ctx_r68.Currency, "");
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_span_12_Template(rf, ctx) {
      if (rf & 1) {
        var _r89 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "button", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProducDetailComponent_ng_container_3_div_70_span_12_Template_button_click_1_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r89);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          return _r69.CalculateDropQuantitiesFromPrePostDip();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " Calculate ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 83);
      }
    }

    function ProducDetailComponent_ng_container_3_div_70_Template(rf, ctx) {
      if (rf & 1) {
        var _r91 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Asset/Tank");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "ng-multiselect-dropdown", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ProducDetailComponent_ng_container_3_div_70_Template_ng_multiselect_dropdown_ngModelChange_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](15);

          var ctx_r90 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r90.SelectedAssets[_r5.value] = $event;
        })("onSelect", function ProducDetailComponent_ng_container_3_div_70_Template_ng_multiselect_dropdown_onSelect_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          return _r69.showSelectedAsset($event);
        })("onDeSelect", function ProducDetailComponent_ng_container_3_div_70_Template_ng_multiselect_dropdown_onDeSelect_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          return _r69.removeUnselected($event);
        })("onSelectAll", function ProducDetailComponent_ng_container_3_div_70_Template_ng_multiselect_dropdown_onSelectAll_5_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          var i_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;

          var ctx_r94 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return _r69.showSelectedAssets(ctx_r94.Drops[i_r3].Assets);
        })("onDeSelectAll", function ProducDetailComponent_ng_container_3_div_70_Template_ng_multiselect_dropdown_onDeSelectAll_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          return _r69.removeAllUnselected($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ProducDetailComponent_ng_container_3_div_70_div_6_Template, 12, 6, "div", 65);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, ProducDetailComponent_ng_container_3_div_70_div_7_Template, 5, 2, "div", 65);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "app-asset-list", 66, 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 68);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 69);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ProducDetailComponent_ng_container_3_div_70_span_12_Template, 3, 0, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "button", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProducDetailComponent_ng_container_3_div_70_Template_button_click_13_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r91);

          var _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);

          return _r69.addNewAsset();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "i", 71);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, " New Asset");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, ProducDetailComponent_ng_container_3_div_70_div_16_Template, 1, 0, "div", 72);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r98 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        var i_r3 = ctx_r98.index;
        var drop_r2 = ctx_r98.$implicit;
        var isLast_r4 = ctx_r98.last;

        var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](15);

        var ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        var tmp_4_0 = null;
        var currVal_4 = ((tmp_4_0 = ctx_r24.Parent.get("BolDetails")) == null ? null : tmp_4_0.length) == 0 && drop_r2.get("TerminalId").value > 0 && drop_r2.get("JobCountryId").value != 4;
        var tmp_5_0 = null;
        var currVal_5 = ((tmp_5_0 = ctx_r24.Parent.get("BolDetails")) == null ? null : tmp_5_0.length) == 0 && drop_r2.get("TerminalId").value > 0 && drop_r2.get("JobCountryId").value != 4;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx_r24.SelectedAssets[_r5.value])("placeholder", "Select Assets/Tanks")("settings", ctx_r24.settings)("data", ctx_r24.Drops[i_r3].Assets);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", currVal_4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", currVal_5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", drop_r2)("Drops", ctx_r24.Drops)("UoM", ctx_r24.UoM)("IsSelectedMT", drop_r2.controls.ConversionFactor.enabled && drop_r2.controls.Gravity.disabled)("SelectedAssets", ctx_r24.SelectedAssets[_r5.value]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("IsDipDataRequired").value == true && drop_r2.get("Assets")["controls"].length > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !isLast_r4);
      }
    }

    var _c2 = function _c2() {
      return [];
    };

    function ProducDetailComponent_ng_container_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r100 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "i", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "strong");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "i", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "span", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "input", 15, 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Delivered");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "input", 21, 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProducDetailComponent_ng_container_3_Template_input_input_22_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;
          var i_r3 = ctx.index;

          var ctx_r99 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          ctx_r99.ValidateGravityAndConvertForMFN(drop_r2, ctx_r99.Drops[i_r3]);
          return ctx_r99.actualDropQuantityChanged();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, ProducDetailComponent_ng_container_3_div_24_Template, 2, 1, "div", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, ProducDetailComponent_ng_container_3_div_25_Template, 6, 3, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](26, ProducDetailComponent_ng_container_3_span_26_Template, 3, 2, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, ProducDetailComponent_ng_container_3_span_27_Template, 5, 3, "span", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](31, "Drop Date");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "input", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onDateChange", function ProducDetailComponent_ng_container_3_Template_input_onDateChange_32_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;

          var ctx_r101 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          drop_r2.get("DropDate").setValue($event);
          ctx_r101.setPrice(drop_r2, $event);
          return ctx_r101.setEndDate(drop_r2, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](33, ProducDetailComponent_ng_container_3_span_33_Template, 2, 1, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](37, "Start Time");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "input", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function ProducDetailComponent_ng_container_3_Template_input_onTimeChange_38_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;
          return drop_r2.get("StartTime").setValue($event);
        })("blur", function ProducDetailComponent_ng_container_3_Template_input_blur_38_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;
          var i_r3 = ctx.index;

          var ctx_r103 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          ctx_r103.ValidateTime(drop_r2.get("StartTime").value, i_r3, "StartTime");
          return ctx_r103.ValidateAssetTime(drop_r2);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](39, ProducDetailComponent_ng_container_3_span_39_Template, 4, 3, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](43, "Drop End Date");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "input", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onDateChange", function ProducDetailComponent_ng_container_3_Template_input_onDateChange_44_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;

          var ctx_r104 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r104.setDropEndDate(drop_r2, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](45, ProducDetailComponent_ng_container_3_span_45_Template, 2, 0, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](46, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](48, "End Time");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](49, "input", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onTimeChange", function ProducDetailComponent_ng_container_3_Template_input_onTimeChange_49_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;
          return drop_r2.get("EndTime").setValue($event);
        })("blur", function ProducDetailComponent_ng_container_3_Template_input_blur_49_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;
          var i_r3 = ctx.index;

          var ctx_r106 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          ctx_r106.ValidateTime(drop_r2.get("EndTime").value, i_r3, "EndTime");
          return ctx_r106.ValidateAssetTime(drop_r2);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](50, ProducDetailComponent_ng_container_3_span_50_Template, 4, 3, "span", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](53, "Delivery Schedule");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](54, "select", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function ProducDetailComponent_ng_container_3_Template_select_change_54_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var drop_r2 = ctx.$implicit;

          var ctx_r107 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r107.onScheduleChange($event, drop_r2.get("OrderId").value, drop_r2.get("FuelTypeId").value, drop_r2.get("FuelTypeName").value, drop_r2);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](55, "option", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](56, "Select Schedule");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](57, ProducDetailComponent_ng_container_3_option_57_Template, 2, 2, "option", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](58, ProducDetailComponent_ng_container_3_div_58_Template, 5, 0, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](59, ProducDetailComponent_ng_container_3_div_59_Template, 7, 1, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](60, ProducDetailComponent_ng_container_3_div_60_Template, 7, 6, "div", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](61, ProducDetailComponent_ng_container_3_div_61_Template, 8, 6, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](62, ProducDetailComponent_ng_container_3_div_62_Template, 7, 1, "div", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](63, "app-fuel-surcharge", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "app-show-bdr-detail", 40, 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("OnBDREdit", function ProducDetailComponent_ng_container_3_Template_app_show_bdr_detail_OnBDREdit_64_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](67);

          return _r22.toggleOpen(true, $event);
        })("OnBDRDelete", function ProducDetailComponent_ng_container_3_Template_app_show_bdr_detail_OnBDRDelete_64_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var i_r3 = ctx.index;

          var ctx_r109 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r109.toggleAddBdrButton(i_r3, false);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](66, "app-bdr-detail", 42, 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onBdrDetailsAdded", function ProducDetailComponent_ng_container_3_Template_app_bdr_detail_onBdrDetailsAdded_66_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var i_r3 = ctx.index;

          var _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](65);

          var ctx_r110 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _r21.bdrDetailAdded($event);

          return ctx_r110.toggleAddBdrButton(i_r3, true);
        })("onBdrDetailsUpdated", function ProducDetailComponent_ng_container_3_Template_app_bdr_detail_onBdrDetailsUpdated_66_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r100);

          var i_r3 = ctx.index;

          var _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](65);

          var ctx_r111 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _r21.bdrDetailUpdated($event);

          return ctx_r111.toggleAddBdrButton(i_r3, true);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](68, "input", 44, 45);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](70, ProducDetailComponent_ng_container_3_div_70_Template, 17, 13, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
      }

      if (rf & 2) {
        var drop_r2 = ctx.$implicit;
        var i_r3 = ctx.index;

        var _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](69);

        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](i_r3 + 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](drop_r2.get("FuelTypeName").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](drop_r2.get("PoNumber").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", drop_r2 && drop_r2.get("ActualQuantityUOM").value != "MT" && ctx_r1.IsBolOrTicketExistForProduct(drop_r2.get("FuelTypeId").value));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r1.IsDisplayGravity(ctx_r1.Drops[i_r3]));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDisplayGravity(ctx_r1.Drops[i_r3]));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isInvalid(drop_r2, "ActualDropQuantity"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("ConvertedQuantity").value != "" && drop_r2.get("ConvertedQuantity").value != null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "MM/DD/YYYY")("minDate", ctx_r1.MinDropDate);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isInvalid(drop_r2, "DropDate"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("timeSmallerThanOrEqualTo", drop_r2.get("EndTime"))("startDate", drop_r2.get("DropDate"))("endDate", drop_r2.get("DropEndDate"))("format", "hh:mm:ss A");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isInvalid(drop_r2, "StartTime"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("format", "MM/DD/YYYY");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isInvalid(drop_r2, "DropEndDate"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("timeGreaterThanOrEqualTo", drop_r2.get("StartTime"))("startDate", drop_r2.get("DropDate"))("endDate", drop_r2.get("DropEndDate"))("format", "hh:mm:ss A");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isInvalid(drop_r2, "EndTime"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("readonly", drop_r2.get("BlendedScheduleId").value && drop_r2.get("BlendedScheduleId").value != "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r1.Schedules[drop_r2.get("OrderId").value] || _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](39, _c2));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", drop_r2.get("TrackableScheduleId").value > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !(ctx_r1.Drops[i_r3] == null ? null : ctx_r1.Drops[i_r3].IsFreightOnlyOrder) && !(ctx_r1.Drops[i_r3] == null ? null : ctx_r1.Drops[i_r3].IsSupressOrderPricing));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDisplayGravity(ctx_r1.Drops[i_r3]));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsDisplayGravity(ctx_r1.Drops[i_r3]));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.IsMarineLocation);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", drop_r2)("Model", ctx_r1.Drops[i_r3] == null ? null : ctx_r1.Drops[i_r3].FuelSurchargeFreightFee)("SurchargeEnabled", ctx_r1.Drops[i_r3].FuelSurchargeFreightFee == null ? null : ctx_r1.Drops[i_r3].FuelSurchargeFreightFee.IsSurchargeApplicable);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("Parent", drop_r2)("BdrDetails", drop_r2.get("BdrDetails"))("BdrModel", ctx_r1.Drops[i_r3] == null ? null : ctx_r1.Drops[i_r3].BdrDetails);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r23.value);
      }
    }

    var ProducDetailComponent = /*#__PURE__*/function () {
      function ProducDetailComponent(fb, invoiceService, addressService, dataService) {
        _classCallCheck(this, ProducDetailComponent);

        this.fb = fb;
        this.invoiceService = invoiceService;
        this.addressService = addressService;
        this.dataService = dataService; //@Input() public AssetDrops: AssetDropModel[];

        this.onBulkplantUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBulkplantPickupReceived = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnScheduleReceived = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.OnBdrDeleted = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBdrEdit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.settings = {};
        this.MinDropDate = new Date();
        this.DefaultDate = new Date();
        this.IsLoading = true;
        this.Terminals = [];
        this.minCharRequired = false;
        this.searchError = false;
        this.noTerminalFound = false;
        this._loadingTerminals = false;
        this.SelectedAssets = {};
        this.quantities = new Array();
        this.IsConvertingGravity = false;
        this.CalculatedQty = '';
        this.IsMarineLocation = false;
        this.IsBdrAdded = false;
        this.TerminalList = {};
      }

      _createClass(ProducDetailComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this100 = this;

          this.Parent.addControl('Drops', this.fb.array([]));
          this.settings = {
            singleSelection: false,
            idField: 'JobXAssetId',
            textField: 'AssetName',
            selectAllText: 'Select All',
            unSelectAllText: 'UnSelect All',
            itemsShowLimit: 1,
            allowSearchFilter: true
          };
          this.Schedules = {};
          this.dataService.DropTerminalSelectedSubject.subscribe(function (orderId) {
            _this100.bolTerminalChange(orderId);
          });
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          var _this101 = this;

          if (change.Drops && change.Drops.currentValue) {
            var currValues = change.Drops.currentValue;
            var UoM = currValues.map(function (item) {
              return item.UoM;
            });
            this.setUoM(UoM[0]);
            var currency = currValues.map(function (item) {
              return item.Currency;
            });
            this.setCurrency(currency[0]);

            var _drops = this.Parent.get('Drops');

            var _selectedAssets = {};
            currValues.forEach(function (x, idx) {
              _selectedAssets[x.OrderId] = x.Assets.filter(function (y) {
                return y.InvoiceId > 0 && y.OrderId > 0 && y.OrderId == x.OrderId;
              });

              _drops.push(_this101.getForm(x, _selectedAssets[x.OrderId], UoM[0]));

              _this101.getSchedules(x.OrderId, x.TrackableScheduleId);

              _this101.sendBulkplantUpdate(x, x.PickUpAddress);
            });
            this.SelectedAssets = _selectedAssets;
          }
        }
      }, {
        key: "sendBulkplantUpdate",
        value: function sendBulkplantUpdate(x, address) {
          if (x.PickupLocationType == 2) {
            var bulkplantInfo = this.bulkPlantMapper(address, x.FuelTypeId, x.FuelTypeName);
            this.onBulkplantPickupReceived.emit(bulkplantInfo);
          }
        }
      }, {
        key: "getForm",
        value: function getForm(model, selectedAssets, uom) {
          this.loadTerminals(model.OrderId, model.FuelTypeId);
          this.MinDropDate = moment__WEBPACK_IMPORTED_MODULE_5__(model.MinDropDate).toDate();
          var dropDate = model.DisplayDropDate == '01/01/0001' ? '' : model.DisplayDropDate;
          var quantity = model.ActualDropQuantity > 0 ? model.ActualDropQuantity : null;
          var group = this.fb.group({
            OrderId: this.fb.control(model.OrderId),
            PoNumber: this.fb.control(model.PoNumber),
            FuelTypeId: this.fb.control(model.FuelTypeId),
            FuelTypeName: this.fb.control(model.FuelTypeName),
            ActualDropQuantity: this.fb.control(quantity, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].min(0.1), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_8__["RegExConstants"].Quantity)]),
            DropDate: this.fb.control(dropDate, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            StartTime: this.fb.control(model.StartTime, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\d):(?:[0-5]\d) ?([AaPp][Mm])/)]),
            EndTime: this.fb.control(model.EndTime, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\d):(?:[0-5]\d) ?([AaPp][Mm])/)]),
            Allowance: this.fb.control(model.Allowance),
            MinDropDate: this.fb.control(model.MinDropDate),
            //DisplayMinDropDate: elem.,
            TrackableScheduleId: this.fb.control(model.TrackableScheduleId),
            JobCountryId: this.fb.control(model.JobCountryId),
            TerminalId: this.fb.control(model.TerminalId),
            TerminalName: this.fb.control(model.TerminalName, [this.terminalConditionallyRequiredValidator.bind(this)]),
            PickupLocationType: this.fb.control(model.PickupLocationType),
            IsAssetTracked: this.fb.control(model.IsAssetTracked),
            TerminalPrice: this.fb.control({
              value: null,
              disabled: true
            }),
            SelectedAssets: selectedAssets,
            Assets: this.fb.array([]),
            Index: this.fb.control(model.Index + 1),
            BrokerChainId: this.fb.control(model.BrokerChainId),
            IsDipDataRequired: this.fb.control(model.IsDipDataRequired),
            DropEndDate: this.fb.control(dropDate, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            Gravity: this.fb.control(model.Gravity),
            ConversionFactor: this.fb.control(model.ConversionFactor),
            ConvertedQuantity: this.fb.control(model.ConvertedQuantity),
            TypeOfFuel: this.fb.control(model.TypeOfFuel),
            BdrDetails: this.fb.group({}),
            IsMarineLocation: this.fb.control(model.IsMarineLocation),
            BlendedScheduleId: this.fb.control(model.BlendedScheduleId),
            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO),
            ActualQuantityUOM: this.fb.control(null)
          });
          this.IsLoading = false;
          this.setPrice(group, null);

          if (uom != null && uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons || uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].Barrels) {
            this.setGravityValidatorForMFN(uom, group);
            this.setUoM(this.getUoMFromCountry(model.JobCountryId));
            group.get('ActualQuantityUOM').setValue(this.UoM);
          }

          return group;
        }
      }, {
        key: "terminalConditionallyRequiredValidator",
        value: function terminalConditionallyRequiredValidator(formControl) {
          if (!formControl.parent) {
            return null;
          }

          if (formControl.parent.get('TerminalId').value) {
            return _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required(formControl);
          }

          return null;
        }
      }, {
        key: "loadTerminals",
        value: function loadTerminals(_orderId, _fuelTypeId) {
          var _this102 = this;

          if (this.TerminalList[_fuelTypeId] == undefined || this.TerminalList[_fuelTypeId] == null || this.TerminalList[_fuelTypeId].length == 0) {
            this._loadingTerminals = true;
            this.invoiceService.getTerminals(_orderId).subscribe(function (data) {
              _this102._loadingTerminals = false;
              _this102.TerminalList[_fuelTypeId] = data;
            });
          }
        }
      }, {
        key: "setTerminalName",
        value: function setTerminalName(drop, terminal) {
          drop.controls['TerminalName'].patchValue(terminal.Name);
          drop.controls['TerminalId'].patchValue(terminal.Id);
          this.setPrice(drop, null);

          if (drop.get('FuelSurchargeFreightFee.FreightPricingMethod').value == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["FreightPricingMethod"].Auto) {
            this.removeFreightFuelSurchargeForm(drop);
          }
        }
      }, {
        key: "bolTerminalChange",
        value: function bolTerminalChange(orderId) {
          var _this103 = this;

          var _drops = this.Parent.get('Drops');

          _drops.controls.forEach(function (drop) {
            if (drop.get('OrderId').value == orderId) {
              if (drop.get('FuelSurchargeFreightFee.FreightPricingMethod').value == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["FreightPricingMethod"].Auto) {
                _this103.removeFreightFuelSurchargeForm(drop);
              }
            }
          });
        }
      }, {
        key: "removeFreightFuelSurchargeForm",
        value: function removeFreightFuelSurchargeForm(x) {
          x.get('FuelSurchargeFreightFee.FreightType').patchValue([]);
          x.get('FuelSurchargeFreightFee.FreightTableType').patchValue([]);
          x.get('FuelSurchargeFreightFee.FreightTableName').patchValue([]);
          x.get('FuelSurchargeFreightFee.Distance').patchValue([]);
          x.get('FuelSurchargeFreightFee.AutoSurchargeFreightCost').patchValue([]);
          x.get('FuelSurchargeFreightFee.SurchargeFreightCost').patchValue([]);
          x.get('FuelSurchargeFreightFee.FuelSurchargeTableType').patchValue([]);
          x.get('FuelSurchargeFreightFee.FuelSurchargeTableName').patchValue([]);
          x.get('FuelSurchargeFreightFee.SurchargeEiaPrice').patchValue([]);
          x.get('FuelSurchargeFreightFee.SurchargePercentage').patchValue([]);
          x.get('FuelSurchargeFreightFee.SurchargeTableRangeStart').patchValue([]);
          x.get('FuelSurchargeFreightFee.SurchargeTableRangeEnd').patchValue([]);
        }
      }, {
        key: "onTerminalSearched",
        value: function onTerminalSearched(event, orderId) {
          var _this104 = this;

          var keyword = event.target.value.toLowerCase();
          var searchKeyword$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(keyword);
          searchKeyword$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(2000), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (data) {
            _this104._loadingTerminals = true;

            if (data.length < 3) {
              _this104.minCharRequired = true;
            } else {
              _this104.minCharRequired = false;
            }
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (term) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["iif"])(function () {
              return term.length < 3;
            }, Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])([]), _this104.invoiceService.getTerminals(orderId, term).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () {
              _this104._loadingTerminals = false;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function () {
              _this104._loadingTerminals = false;
              _this104.searchError = true;
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])([]);
            })));
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function () {
            return _this104._loadingTerminals = false;
          })).subscribe(function (data) {
            if (data.length === 0) {
              _this104.noTerminalFound = true;
            } else {
              _this104.noTerminalFound = false;
            }

            _this104.Terminals = data;
            _this104._loadingTerminals = false;
          }, function (err) {
            console.log(err);
          });
        }
      }, {
        key: "setPrice",
        value: function setPrice(drop, event) {
          var date = new Date();

          if (drop.controls['TerminalId'].value > 0) {
            this.invoiceService.getTerminalPriceById(drop.controls['TerminalId'].value, drop.controls['OrderId'].value, drop.controls['DropDate'].value || +date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear()).subscribe(function (data) {
              drop.controls['TerminalPrice'].setValue(data);
            });
          }
        }
      }, {
        key: "setEndDate",
        value: function setEndDate(drop, event) {
          var dropDate = drop.controls['DropDate'].value;

          if (dropDate != '' && dropDate != null) {
            drop.controls['DropEndDate'].setValue(dropDate);
            drop.controls['EndTime'].setValue(null);
          }
        }
      }, {
        key: "setDropEndDate",
        value: function setDropEndDate(drop, $event) {
          drop.controls['DropEndDate'].setValue($event);
          drop.controls['EndTime'].setValue(null); //  drop.controls['StartTime'].setValue(null);
        }
      }, {
        key: "validateTerminal",
        value: function validateTerminal(drop, event, orderId) {
          if (this.Terminals.length && !(this.Terminals.filter(function (e) {
            return e.Name === drop.controls['TerminalName'].value;
          }).length > 0) || this.noTerminalFound) {
            drop.controls['TerminalName'].patchValue('');
          }
        }
      }, {
        key: "addProduct",
        value: function addProduct(model) {
          var _drops = this.Parent.get('Drops');

          this.setUoM(src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"]);
          this.setCurrency(model.Currency);

          _drops.push(this.getForm(model, [], model.UoM));

          this.getSchedules(model.OrderId, 0);
        }
      }, {
        key: "ValidateTime",
        value: function ValidateTime(time, index, controlName) {
          var timeRegex = new RegExp(/(?:[0][1-9]|[1][0-2]):(?:[0-5]\d):(?:[0-5]\d) ?([AaPp][Mm])/);

          if (timeRegex.test(time)) {} else {
            this.DisplayInvalidTime(time, index, controlName);
          }
        }
      }, {
        key: "DisplayInvalidTime",
        value: function DisplayInvalidTime(time, index, controlName) {
          var _drops = this.Parent.get('Drops');

          var formControlName = controlName;

          _drops.controls[index].get(formControlName).setValue(time);
        }
      }, {
        key: "removeProduct",
        value: function removeProduct(model) {
          var removedProductIndex;

          var _drops = this.Parent.get('Drops');

          var _currentObj = this;

          _drops.controls.forEach(function (control, idx) {
            if (control.get('OrderId').value == model.OrderId) {
              removedProductIndex = idx;
              delete _currentObj.Schedules[model.OrderId];
            }
          });

          if (removedProductIndex >= 0) {
            _drops.removeAt(removedProductIndex);
          }
        }
      }, {
        key: "onScheduleChange",
        value: function onScheduleChange(event, orderId, productId, productName, drop) {
          var _this105 = this;

          var scheduleId = event.target.selectedOptions[0].value;
          this.scheduleChangeEvent(orderId, scheduleId, drop);
          if (scheduleId == undefined || scheduleId == null || scheduleId == "null") return;
          this.addressService.getBulkplantAddress(scheduleId, orderId).subscribe(function (data) {
            if (data && data.IsAddressAvailable) {
              var bulkplantInfo = _this105.bulkPlantMapper(data, productId, productName);

              _this105.onBulkplantUpdated.emit(bulkplantInfo);
            }
          });
        }
      }, {
        key: "scheduleChangeEvent",
        value: function scheduleChangeEvent(orderId, scheduleId, drop) {
          var selectedSchedule = this.Schedules[orderId].find(function (t) {
            return t.Id == scheduleId;
          });
          var blendedScheduleId = selectedSchedule && selectedSchedule.Code ? selectedSchedule.Code : '';
          var deliveryLevelPO = selectedSchedule && selectedSchedule.DeliveryLevelPO ? selectedSchedule.DeliveryLevelPO : '';

          if (drop) {
            if (selectedSchedule) {
              drop.controls['DeliveryLevelPO'].setValue(deliveryLevelPO);
            } else {
              drop.controls['DeliveryLevelPO'].setValue('');
            }
          }

          this.OnScheduleReceived.emit({
            ScheduleId: scheduleId,
            OrderId: orderId,
            BlendedScheduleId: blendedScheduleId
          });
        }
      }, {
        key: "bulkPlantMapper",
        value: function bulkPlantMapper(data, productId, productName) {
          data.Country.Code == 'US' || data.Country.Code == 'USA' ? data.Country.Code = 'USA' : data.Country.Code = 'CAN';
          return {
            ProductId: productId,
            ProductName: productName,
            BulkPlantId: data.SiteId,
            BulkPlantName: data.SiteName,
            Address: {
              Address: data.Address,
              City: data.City,
              CountyName: data.CountyName,
              State: {
                Id: data.State.Id,
                Code: data.State.Code
              },
              Country: {
                Id: data.Country.Id,
                Code: data.Country.Code
              },
              ZipCode: data.ZipCode,
              Latitude: data.Latitude,
              Longitude: data.Longitude
            }
          };
        }
      }, {
        key: "getSchedules",
        value: function getSchedules(_orderId, _trackableScheduleId) {
          var _this106 = this;

          if (this.Schedules['' + _orderId] == undefined) {
            this.invoiceService.getSchedules(_orderId).subscribe(function (data) {
              _this106.Schedules['' + _orderId] = data;

              if (_trackableScheduleId && _trackableScheduleId > 0) {
                _this106.scheduleChangeEvent(_orderId, _trackableScheduleId, null);
              }
            });
          }
        }
      }, {
        key: "getUoMFromCountry",
        value: function getUoMFromCountry(countryId) {
          if (countryId == 2) {
            return countryId;
          } else {
            return 1;
          }
        }
      }, {
        key: "setUoM",
        value: function setUoM(UoM) {
          //None =0;
          //Gallons = 1,
          //Litres = 2
          if (UoM == 1) {
            this.UoM = "Gallons";
          } else if (UoM == 2) {
            this.UoM = "Litres";
          } //else if (UoM == 3) {
          //    this.UoM = "Barrels";
          //}
          //else if (UoM == 4) {
          //    this.UoM = "MT";
          //}

        }
      }, {
        key: "setCurrency",
        value: function setCurrency(Currency) {
          //None = 0,
          //USD = 1,
          //CAD = 2
          if (Currency == 1) {
            this.Currency = "USD";
          } else if (Currency == 2) {
            this.Currency = "CAD";
          }
        }
      }, {
        key: "setGravityValidatorForMFN",
        value: function setGravityValidatorForMFN(uom, dropFg) {
          if (uom == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons && dropFg != null && dropFg != undefined) {
            if (dropFg.controls.ConversionFactor.value) {
              this.OnUomChange('MT', dropFg);
            } else {
              this.OnUomChange(this.UoM, dropFg);
            } // dropFg.controls['Gravity'].setValidators([Validators.required, Validators.pattern(RegexPatterns.QuantityPattern)]);
            //     dropFg.controls['Gravity'].updateValueAndValidity();

          }
        }
      }, {
        key: "IsDisplayGravity",
        value: function IsDisplayGravity(drop) {
          if (drop != null && drop.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons) {
            return true;
          }

          return false;
        }
      }, {
        key: "ValidateGravityAndConvertForMFN",
        value: function ValidateGravityAndConvertForMFN(drop, dropModel) {
          if (dropModel != null && (dropModel.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons || dropModel.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].Barrels)) {
            if (dropModel.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons) {
              if (drop.get('Gravity').valid) {
                var inputGravity = drop.get('Gravity').value;
                var actualDropQty = drop.get('ActualDropQuantity').value; // serverside api to validate gravity 

                if (inputGravity != "" && inputGravity != null && inputGravity != undefined && actualDropQty != '' && actualDropQty != null && actualDropQty != undefined) {
                  var gravity = Number(inputGravity);
                  var dropQty = Number(actualDropQty);

                  if (!isNaN(gravity) && !isNaN(dropQty)) {
                    if (dropQty > 0) {
                      var conversionRequest = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_4__["MFNConversionRequestViewModel"]();
                      conversionRequest.ConversionFactor = gravity;
                      conversionRequest.DroppedGallons = dropQty;
                      conversionRequest.JobCountryId = dropModel.JobCountryId;
                      conversionRequest.UoM = src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons;
                      this.invoiceService.ValidateGravityAndConvertForMFN(conversionRequest).subscribe(function (response) {
                        if (response.IsValidGravity && response.ConvertedQty > 0 && response.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].MetricTons) {
                          drop.controls['Gravity'].setErrors(null);
                          drop.get('ConvertedQuantity').setValue(response.ConvertedQty.toFixed(2));
                        } else if (!response.IsValidGravity) {
                          drop.controls['Gravity'].setErrors({
                            invalidGravity: true
                          });
                          drop.get('Gravity').markAsTouched();
                          drop.get('ConvertedQuantity').setValue('');
                        }
                      });
                    } else {
                      drop.get('ConvertedQuantity').setValue('');
                    }
                  } else {
                    drop.get('ConvertedQuantity').setValue('');
                  }
                } else {
                  drop.get('ConvertedQuantity').setValue('');
                }
              } else {
                drop.get('ConvertedQuantity').setValue('');
                drop.get('Gravity').markAsTouched();
              }
            } else if (dropModel.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].Barrels) {
              var _actualDropQty = Number(drop.get('ActualDropQuantity').value);

              if (!isNaN(_actualDropQty)) {
                if (_actualDropQty > 0) {
                  var _conversionRequest = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_4__["MFNConversionRequestViewModel"]();

                  _conversionRequest.ConversionFactor = 42;
                  _conversionRequest.DroppedGallons = _actualDropQty;
                  _conversionRequest.JobCountryId = dropModel.JobCountryId;
                  _conversionRequest.UoM = src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].Barrels;
                  this.invoiceService.ValidateGravityAndConvertForMFN(_conversionRequest).subscribe(function (response) {
                    if (response.ConvertedQty > 0 && response.UoM == src_app_app_enum__WEBPACK_IMPORTED_MODULE_7__["UoM"].Barrels) {
                      drop.get('ConvertedQuantity').setValue(response.ConvertedQty.toFixed(2));
                    } else {
                      drop.get('ConvertedQuantity').setValue('');
                    }
                  });
                } else {
                  drop.get('ConvertedQuantity').setValue('');
                }
              } else {
                drop.get('ConvertedQuantity').setValue('');
              }
            }
          }
        } //gets called after bol or lift ticket are added

      }, {
        key: "getBolLiftQuantities",
        value: function getBolLiftQuantities() {
          this.calculateQuantities();
          this.assetListComp.validateSumOfAssetQuantity();
        }
      }, {
        key: "calculateQuantities",
        value: function calculateQuantities() {
          var newProds = [];
          var boldetails = this.Parent.get('BolDetails').value;
          var ticketdetails = this.Parent.get('TicketDetails').value;

          if (boldetails) {
            boldetails.map(function (item) {
              return item.Products.map(function (prod) {
                return newProds.push(prod);
              });
            });
          }

          if (ticketdetails) {
            ticketdetails.map(function (item) {
              return item.Products.map(function (prod) {
                return newProds.push(prod);
              });
            });
          }

          var _drops = this.Parent.get('Drops');

          this.quantities.length = 0; //Empty the array 

          var products = [];

          for (var i = 0; i < newProds.length; i++) {
            var newprod = newProds[i];
            products.push({
              ProductId: newprod.ProductId,
              Quantity: newprod.DeliveredQuantity
            });
          }

          var groupBy = function groupBy(xs, key) {
            return xs.reduce(function (rv, x) {
              (rv[x[key]] = rv[x[key]] || []).push(x);
              return rv;
            }, {});
          };

          var groupedProducts = groupBy(products, 'ProductId'); // collection returned by groupby() is [key :value] as array of [{key: prodId value:quantity}]

          for (var productId in groupedProducts) {
            var totaldroppedquantity = [];
            var key = productId;
            var values = [];
            values = groupedProducts[key];
            values.forEach(function (value) {
              totaldroppedquantity.push(parseFloat(value.Quantity));
            });
            var Totalsumperproduct = totaldroppedquantity.reduce(function (a, b) {
              return a + b;
            }, 0);
            this.quantities.push({
              ProductId: parseInt(key, 10),
              TotalDroppedQuantity: parseFloat(Number(Totalsumperproduct).toFixed(6))
            });
          }

          var currObj = this;
          this.quantities.forEach(function (x) {
            var _group = _drops.controls.find(function (y) {
              return y.get("FuelTypeId").value == x.ProductId;
            });

            if (_group != undefined && _group != null) {
              if (!isNaN(x.TotalDroppedQuantity)) {
                _group.get('ActualDropQuantity').setValue(x.TotalDroppedQuantity);

                currObj.actualDropQty.nativeElement.dispatchEvent(new Event('input'));
              }
            }
          }); //Implies no bol details are added so reset the actualdropquantity form control

          if (this.quantities.length == 0) {
            var _drops = this.Parent.get('Drops');

            var _dropQuantityFormControls = _drops.controls;

            if (_dropQuantityFormControls != undefined && _dropQuantityFormControls != null) {
              _dropQuantityFormControls.forEach(function (formControl) {
                formControl.get('ActualDropQuantity').reset();
                currObj.actualDropQty.nativeElement.dispatchEvent(new Event('input'));
              });
            }
          }
        }
      }, {
        key: "IsBolOrTicketExistForProduct",
        value: function IsBolOrTicketExistForProduct(ProductId) {
          if (this.Parent.get('BolDetails').value.some(function (b) {
            return b.Products.some(function (p) {
              return p.ProductId == ProductId && p.DeliveredQuantity > 0;
            });
          })) return true;else if (this.Parent.get('TicketDetails').value.some(function (b) {
            return b.Products.some(function (p) {
              return p.ProductId == ProductId && p.DeliveredQuantity > 0;
            });
          })) return true;
          return false;
        } // called from child compo - asset-list
        // updateConvertedQty(updatedQty: any) {
        //     if (updatedQty != null && updatedQty != undefined && updatedQty != '') {
        //         this.actualDropQty.nativeElement.dispatchEvent(new Event('input'));
        //     }
        // }

      }, {
        key: "actualDropQuantityChanged",
        value: function actualDropQuantityChanged() {
          this.assetListComp.validateSumOfAssetQuantity();
        }
      }, {
        key: "ValidateAssetTime",
        value: function ValidateAssetTime(dropForm) {
          this.assetListComp.ValidateAssetTime(null, 'productDetail', dropForm);
        }
      }, {
        key: "toggleAddBdrButton",
        value: function toggleAddBdrButton(dropIndex, isAdded) {
          if (dropIndex != null && dropIndex != undefined && dropIndex >= 0) {
            this.Drops[dropIndex].IsBdrDetailsAdded = isAdded;
          }
        } //--------------------------------------------------------------

      }, {
        key: "isInvalid",
        value: function isInvalid(drop, name) {
          return drop.get(name).invalid && (drop.get(name).dirty || drop.get(name).touched);
        }
      }, {
        key: "isRequired",
        value: function isRequired(drop, name) {
          return drop.get(name).errors.required;
        }
      }, {
        key: "isMin",
        value: function isMin(drop, name) {
          return drop.get(name).errors.min;
        } //isPattern(drop: FormGroup, name: string): boolean {
        //    return drop.get(name).errors.pattern;
        //}

      }, {
        key: "OnUomChange",
        value: function OnUomChange(uom, drop) {
          if (uom == 'MT') {
            drop.controls['ConversionFactor'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_8__["RegExConstants"].Quantity)]);
            drop.controls['ConversionFactor'].updateValueAndValidity();
            drop.controls['Gravity'].clearValidators();
            drop.controls['Gravity'].updateValueAndValidity();
            drop.get('ConvertedQuantity').setValue('');
            if (!drop.controls['ConversionFactor'].value) drop.get('ConversionFactor').setValue(318);
            drop.get('Gravity').setValue('');
            drop.controls.Gravity.disable();
            drop.controls.ConversionFactor.enable();
          } else {
            drop.controls['Gravity'].setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(src_app_app_constants__WEBPACK_IMPORTED_MODULE_8__["RegExConstants"].Quantity)]);
            drop.controls['Gravity'].updateValueAndValidity();
            drop.controls['ConversionFactor'].clearValidators();
            drop.controls['ConversionFactor'].updateValueAndValidity();
            drop.get('ConversionFactor').setValue('');
            drop.controls.ConversionFactor.disable();
            drop.controls.Gravity.enable();
            this.calculateQuantities();
          }
        }
      }]);

      return ProducDetailComponent;
    }();

    ProducDetailComponent.ɵfac = function ProducDetailComponent_Factory(t) {
      return new (t || ProducDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_9__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_address_service__WEBPACK_IMPORTED_MODULE_10__["AddressService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_carrier_service_data_service__WEBPACK_IMPORTED_MODULE_11__["DataService"]));
    };

    ProducDetailComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ProducDetailComponent,
      selectors: [["app-produc-detail"]],
      viewQuery: function ProducDetailComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_6__["AssetListComponent"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.assetListComp = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.actualDropQty = _t.first);
        }
      },
      inputs: {
        Parent: "Parent",
        Drops: "Drops"
      },
      outputs: {
        onBulkplantUpdated: "onBulkplantUpdated",
        onBulkplantPickupReceived: "onBulkplantPickupReceived",
        OnScheduleReceived: "OnScheduleReceived",
        OnBdrDeleted: "OnBdrDeleted",
        onBdrEdit: "onBdrEdit"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 4,
      vars: 3,
      consts: [[1, "well", "shadow-b", "pr", 3, "formGroup"], ["class", "pa bg-white z-index5 loading-wrapper left0 top0", 4, "ngIf"], ["formArrayName", "Drops"], [4, "ngFor", "ngForOf"], [1, "pa", "bg-white", "z-index5", "loading-wrapper", "left0", "top0"], [1, "spinner-dashboard", "pa"], [3, "formGroupName"], [1, "row", "mb10"], [1, "col-sm-8"], [1, "dib", "pull-left", "ordernumber", "text-center", "pt5", "f-bold", "mt3"], [1, "pull-left", "ml10"], [1, "fas", "fa-tint", "mr5"], [1, "mt3"], [1, "far", "fa-file-alt", "mr5"], [1, "fs10"], ["type", "hidden", "formControlName", "OrderId"], ["OrderId", ""], [1, "row", "mt15"], [1, "col-sm-3"], [1, "form-group"], [1, "input-group"], ["type", "text", "formControlName", "ActualDropQuantity", 1, "form-control", 3, "readonly", "input"], ["actualDropQty", ""], ["class", "input-group-addon fs12", 4, "ngIf"], [4, "ngIf"], ["class", "color-maroon", 4, "ngIf"], [1, "col-sm-2"], ["type", "text", "formControlName", "DropDate", "myDatePicker", "", 1, "form-control", "datepicker", 3, "format", "minDate", "onDateChange"], ["type", "text", "formControlName", "StartTime", "myTimePicker", "", 1, "form-control", "timepicker", 3, "timeSmallerThanOrEqualTo", "startDate", "endDate", "format", "onTimeChange", "blur"], ["type", "text", "formControlName", "DropEndDate", "myDatePicker", "", 1, "form-control", "datepicker", 3, "format", "onDateChange"], ["type", "text", "formControlName", "EndTime", "myTimePicker", "", 1, "form-control", "timepicker", 3, "timeGreaterThanOrEqualTo", "startDate", "endDate", "format", "onTimeChange", "blur"], [1, "col-sm-3", "form-group"], ["formControlName", "TrackableScheduleId", 1, "form-control", 3, "change"], [3, "value"], [3, "value", 4, "ngFor", "ngForOf"], ["class", "col-sm-2 form-group", 4, "ngIf"], ["class", "col-sm-2 form-group", 3, "ngClass", 4, "ngIf"], ["class", "col-sm-3 form-group", 3, "ngClass", 4, "ngIf"], ["class", "col-sm-3", 4, "ngIf"], [3, "Parent", "Model", "SurchargeEnabled"], [3, "Parent", "BdrDetails", "BdrModel", "OnBDREdit", "OnBDRDelete"], ["showBdrDetail", ""], [3, "onBdrDetailsAdded", "onBdrDetailsUpdated"], ["bdrDetail", ""], ["type", "hidden", "formControlName", "IsAssetTracked"], ["IsAssetTracked", ""], [1, "input-group-addon", "fs12"], ["name", "UoM", "formControlName", "ActualQuantityUOM", 1, "input-group-addon", "fs12", 3, "change"], [1, "color-maroon"], [1, "col-sm-2", "form-group"], ["type", "text", "formControlName", "DeliveryLevelPO", 1, "form-control"], ["type", "text", "formControlName", "Allowance", 1, "form-control"], [1, "col-sm-2", "form-group", 3, "ngClass"], ["class", "pa bg-white z-index5 loading-wrapper", 4, "ngIf"], ["type", "text", "formControlName", "Gravity", 1, "form-control", 3, "input"], [1, "pa", "bg-white", "z-index5", "loading-wrapper"], [1, "col-sm-3", "form-group", 3, "ngClass"], ["data-toggle", "tooltip", "data-placement", "top", "title", "#gals which 1M/T", "data-original-title", "#gals which 1M/T", 1, "fa", "fa-info-circle", "ml5"], ["type", "text", "formControlName", "ConversionFactor", 1, "form-control"], ["type", "button", "id", "btnBdrDetailPopup", 1, "btn", "btn-default", 3, "disabled", "click"], [1, "fas", "fa-plus", "mr5"], [1, "row"], [1, "col-sm-4"], ["for", "Asset"], ["formControlName", "SelectedAssets", 3, "ngModel", "placeholder", "settings", "data", "ngModelChange", "onSelect", "onDeSelect", "onSelectAll", "onDeSelectAll"], ["class", "col-sm-4", 4, "ngIf"], [3, "Parent", "Drops", "UoM", "IsSelectedMT", "SelectedAssets"], ["assetList", ""], [1, "row", "form-group"], [1, "col-sm-12", "text-right"], ["type", "button", 1, "btn", "btn-default", "mt10", 3, "click"], [1, "fas", "fa-truck", "mr5"], ["class", "border-b mt15 mb15", 4, "ngIf"], ["for", "Terminal"], ["type", "hidden", "formControlName", "TerminalId"], ["type", "text", "formControlName", "TerminalName", "placeholder", "Terminal Name", 1, "form-control", 3, "input", "blur"], [1, "auto-select", "border-dash"], ["class", "form-text", 4, "ngIf"], [3, "click", 4, "ngFor", "ngForOf"], [1, "form-text"], [3, "click"], ["for", "TerminalPrice"], [1, "db", "mt5"], [1, "border-b", "mt15", "mb15"]],
      template: function ProducDetailComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProducDetailComponent_div_1_Template, 2, 0, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProducDetailComponent_ng_container_3_Template, 71, 40, "ng-container", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.Parent);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsLoading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.Parent.get("Drops")["controls"]);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__["DatePicker"], _directives_myDateTimePicker__WEBPACK_IMPORTED_MODULE_13__["TimePicker"], _directives_time_smaller_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_14__["TimeSmallerThanOrEqualToValidator"], _directives_time_greater_than_or_equal_to_validator__WEBPACK_IMPORTED_MODULE_15__["TimeGreaterThanOrEqualToValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_x"], _fuel_surcharge_component__WEBPACK_IMPORTED_MODULE_16__["FuelSurchargeComponent"], _bdr_detail_show_bdr_detail_component__WEBPACK_IMPORTED_MODULE_17__["ShowBdrDetailComponent"], _bdr_detail_bdr_detail_component__WEBPACK_IMPORTED_MODULE_18__["BdrDetailComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_12__["NgClass"], ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_19__["MultiSelectComponent"], _asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_6__["AssetListComponent"]],
      styles: [".hidden[_ngcontent-%COMP%] {display:none;}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZS9wcm9kdWMtZGV0YWlsL3Byb2R1Yy1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxTQUFTLFlBQVksQ0FBQyIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvcHJvZHVjLWRldGFpbC9wcm9kdWMtZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlkZGVuIHtkaXNwbGF5Om5vbmU7fSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProducDetailComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-produc-detail',
          templateUrl: './produc-detail.component.html',
          styleUrls: ['./produc-detail.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_9__["InvoiceService"]
        }, {
          type: src_app_address_service__WEBPACK_IMPORTED_MODULE_10__["AddressService"]
        }, {
          type: _carrier_service_data_service__WEBPACK_IMPORTED_MODULE_11__["DataService"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Drops: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onBulkplantUpdated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onBulkplantPickupReceived: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnScheduleReceived: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        OnBdrDeleted: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onBdrEdit: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        assetListComp: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_asset_list_asset_list_component__WEBPACK_IMPORTED_MODULE_6__["AssetListComponent"]]
        }],
        actualDropQty: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['actualDropQty']
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/services/imageservice.service.ts": function srcAppInvoiceServicesImageserviceServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ImageserviceService", function () {
      return ImageserviceService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _azure_storage_blob__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @azure/storage-blob */
    "./node_modules/@azure/storage-blob/dist-esm/storage-blob/src/index.browser.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");

    var ImageserviceService = /*#__PURE__*/function () {
      function ImageserviceService() {
        _classCallCheck(this, ImageserviceService);
      }

      _createClass(ImageserviceService, [{
        key: "uploadImageToBlob",
        value: function uploadImageToBlob(sasToken, files, image, fileType, prefixId, entireInvoiceModel, containerName) {
          var fileUrls = "";
          var anonymouscredentials = new _azure_storage_blob__WEBPACK_IMPORTED_MODULE_1__["AnonymousCredential"]();
          var fileNames = [];
          var promises = [];

          for (var i = 0; i < files.length; i++) {
            var file = files[i];

            if (file.IsNewFile) {
              var ftype = fileType;
              var fileName = fileType + "_" + prefixId + "_" + this.GenerateRandomNumber(10000) + moment__WEBPACK_IMPORTED_MODULE_2__(moment__WEBPACK_IMPORTED_MODULE_2__["now"]()).format("MMDDYYhhmmss.") + file.Extension;
              file.Name = fileName;
              fileNames.push(fileName); // Container name is also going as folder inside container
              // file.url =  fileName;

              file.url = containerName + "/" + fileName;

              if (fileUrls == "") {
                fileUrls = file.url;
              } else fileUrls = fileUrls + "||" + file.url;
            } else {
              if (fileUrls == "") {
                fileUrls = file.FilePath;
              } else {
                fileUrls = fileUrls + file.FilePath;
              }
            }
          }

          if (fileUrls != "") {
            if (fileType == "InvFile") {
              entireInvoiceModel.InvoiceImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.InvoiceImage.FilePath = fileUrls;
            }

            if (fileType == "additionalFile") {
              entireInvoiceModel.AdditionalImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.AdditionalImage.FilePath = fileUrls;
            }

            if (fileType == "bolFile") {
              var bolDetail = entireInvoiceModel.BolDetails.find(function (x) {
                return x.BolNumber == prefixId;
              });

              if (bolDetail != undefined) {
                bolDetail.Images = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
                bolDetail.Images.FilePath = fileUrls;
              }
            }

            if (fileType == "liftFile") {
              var liftDetail = entireInvoiceModel.TicketDetails.find(function (x) {
                return x.LiftTicketNumber == prefixId;
              });

              if (liftDetail != undefined) {
                liftDetail.Images = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
                liftDetail.Images.FilePath = fileUrls;
              }
            }

            if (fileType == "signatureFile") {
              entireInvoiceModel.SignatureImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.SignatureImage.FilePath = fileUrls;
            }

            if (fileType == "TaxAffidavit") {
              entireInvoiceModel.TaxAffidavitImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.TaxAffidavitImage.FilePath = fileUrls;
            }

            if (fileType == "BDNImage") {
              entireInvoiceModel.BDNImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.BDNImage.FilePath = fileUrls;
            }

            if (fileType == "CoastGuardInspection") {
              entireInvoiceModel.CoastGuardInspectionImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.CoastGuardInspectionImage.FilePath = fileUrls;
            }

            if (fileType == "InspectionRequestVoucher") {
              entireInvoiceModel.InspectionRequestVoucherImage = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_3__["ImageModel"]();
              entireInvoiceModel.InspectionRequestVoucherImage.FilePath = fileUrls;
            }
          }

          files.forEach(function (f) {
            if (f.Image != undefined) {
              var blobserviceclient = new _azure_storage_blob__WEBPACK_IMPORTED_MODULE_1__["BlobServiceClient"](sasToken, anonymouscredentials);
              var containerClient = blobserviceclient.getContainerClient(containerName);
              var blockBlobClient = containerClient.getBlockBlobClient(f.Name); // Split the url string to get img src 

              var uploadBlobResponse = blockBlobClient.upload(f.Image, f.Image.size);
              promises.push(uploadBlobResponse);
            }
          });
          return Promise.all(promises); // return this.imageurl;
        }
      }, {
        key: "GenerateRandomNumber",
        value: function GenerateRandomNumber(maxNumber) {
          return Math.floor(Math.random() * maxNumber + 1);
        }
      }]);

      return ImageserviceService;
    }();

    ImageserviceService.ɵfac = function ImageserviceService_Factory(t) {
      return new (t || ImageserviceService)();
    };

    ImageserviceService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
      token: ImageserviceService,
      factory: ImageserviceService.ɵfac,
      providedIn: 'root'
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ImageserviceService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }], function () {
        return [];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/invoice/taxes/other-product-taxes.component.ts": function srcAppInvoiceTaxesOtherProductTaxesComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OtherProductTaxesComponent", function () {
      return OtherProductTaxesComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var _services_invoice_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../services/invoice.service */
    "./src/app/invoice/services/invoice.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function OtherProductTaxesComponent_div_4_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Type");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Tax Amount");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "span", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Description");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "span", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function OtherProductTaxesComponent_div_4_option_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var taxtype_r10 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", taxtype_r10.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](taxtype_r10.Name);
      }
    }

    function OtherProductTaxesComponent_div_4_div_11_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function OtherProductTaxesComponent_div_4_div_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, OtherProductTaxesComponent_div_4_div_11_div_1_Template, 2, 0, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tax_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r6.isRequired(tax_r1, "TaxPricingTypeId"));
      }
    }

    function OtherProductTaxesComponent_div_4_div_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tax_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](tax_r1.get("TaxAmountSymbol").value);
      }
    }

    function OtherProductTaxesComponent_div_4_div_16_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function OtherProductTaxesComponent_div_4_div_16_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Invalid. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function OtherProductTaxesComponent_div_4_div_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, OtherProductTaxesComponent_div_4_div_16_div_1_Template, 2, 0, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, OtherProductTaxesComponent_div_4_div_16_div_2_Template, 2, 0, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tax_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r8.isRequired(tax_r1, "TaxAmount"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r8.isPattern(tax_r1, "TaxAmount"));
      }
    }

    function OtherProductTaxesComponent_div_4_div_19_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Required. ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function OtherProductTaxesComponent_div_4_div_19_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, OtherProductTaxesComponent_div_4_div_19_div_1_Template, 2, 0, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tax_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r9.isRequired(tax_r1, "TaxDescription"));
      }
    }

    function OtherProductTaxesComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        var _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, OtherProductTaxesComponent_div_4_div_2_Template, 16, 0, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "input", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "select", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function OtherProductTaxesComponent_div_4_Template_select_change_7_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);

          var tax_r1 = ctx.$implicit;

          var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r19.onTaxTypeSelect($event, tax_r1);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "option", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Select Tax Type");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, OtherProductTaxesComponent_div_4_option_10_Template, 2, 2, "option", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, OtherProductTaxesComponent_div_4_div_11_Template, 2, 1, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "input", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, OtherProductTaxesComponent_div_4_div_15_Template, 2, 1, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, OtherProductTaxesComponent_div_4_div_16_Template, 3, 2, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "input", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](19, OtherProductTaxesComponent_div_4_div_19_Template, 2, 1, "div", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "a", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function OtherProductTaxesComponent_div_4_Template_a_click_21_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r20);

          var i_r2 = ctx.index;

          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r21.removeTax(i_r2);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tax_r1 = ctx.$implicit;
        var i_r2 = ctx.index;
        var isFirst_r3 = ctx.first;

        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroupName", i_r2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", isFirst_r3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.TaxPricingTypes);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.isInvalid(tax_r1, "TaxPricingTypeId"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", tax_r1.get("TaxAmountSymbol").value);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.isInvalid(tax_r1, "TaxAmount"));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.isInvalid(tax_r1, "TaxDescription"));
      }
    }

    var OtherProductTaxesComponent = /*#__PURE__*/function () {
      function OtherProductTaxesComponent(fb, invoiceService, route) {
        _classCallCheck(this, OtherProductTaxesComponent);

        this.fb = fb;
        this.invoiceService = invoiceService;
        this.route = route;
        this.Taxes = [];
        this.TaxPricingTypes = [];
      }

      _createClass(OtherProductTaxesComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this107 = this;

          this.OrderId = parseInt(this.route.snapshot.queryParamMap.get('orderId'), 10);
          this.Parent.addControl('OtherProductTaxes', this.fb.array([]));
          this.invoiceService.getTaxePricingTypes(this.OrderId).subscribe(function (data) {
            _this107.TaxPricingTypes = data;
          });
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          var _this108 = this;

          if (change.Taxes && change.Taxes.currentValue != null) {
            var currValues = change.Taxes.currentValue;
            var prevValues = change.Taxes.previousValue;
            var newTaxes = prevValues == undefined || prevValues == null ? currValues : currValues.filter(function (item) {
              return prevValues.indexOf(item) < 0;
            });
            newTaxes.forEach(function (x) {
              _this108.addTax(x);
            });
          }

          if (change.Currency && change.Currency.currentValue) {
            var currency = change.Currency.currentValue;
            this.DisplayCurrency = currency;
          }
        }
      }, {
        key: "getForm",
        value: function getForm(model) {
          var group = this.fb.group({
            OrderId: this.fb.control(model.OrderId),
            TaxId: this.fb.control(model.TaxId),
            TaxPricingTypeId: this.fb.control(model.TaxPricingTypeId, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            TaxAmountSymbol: this.fb.control(""),
            TaxDescription: this.fb.control(model.TaxDescription, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            TaxAmount: this.fb.control(model.TaxAmount, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern(/^[0-9]\d*(\.\d+)?$/)])
          });
          return group;
        }
      }, {
        key: "addTax",
        value: function addTax(taxObj) {
          if (taxObj == null) {
            taxObj = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__["OtherProductTaxModel"]();
          }

          var taxGroup = this.getForm(taxObj);
          var taxArray = this.Parent.get('OtherProductTaxes');

          if (taxArray == null || taxArray == undefined) {
            this.Parent.addControl('OtherProductTaxes', this.fb.array([]));
            taxArray = this.Parent.get('OtherProductTaxes');
          }

          taxArray.push(taxGroup);
        }
      }, {
        key: "removeTax",
        value: function removeTax(i) {
          var taxArray = this.Parent.get('OtherProductTaxes');
          taxArray.removeAt(i);
        }
      }, {
        key: "removeOrderTaxes",
        value: function removeOrderTaxes(_orderId) {
          var taxArray = this.Parent.get('OtherProductTaxes');
          var removedTaxIndexes = [];
          taxArray.controls.forEach(function (elem, idx) {
            if (elem.get('OrderId').value == _orderId) {
              removedTaxIndexes.push(idx);
            }
          });
          removedTaxIndexes.forEach(function (index) {
            taxArray.removeAt(index);
          });
        }
      }, {
        key: "isInvalid",
        value: function isInvalid(tax, name) {
          var result = tax.get(name).invalid && (tax.get(name).dirty || tax.get(name).touched);
          return result;
        }
      }, {
        key: "isRequired",
        value: function isRequired(tax, name) {
          return tax.get(name).errors.required;
        }
      }, {
        key: "isPattern",
        value: function isPattern(tax, name) {
          return tax.get(name).errors.pattern;
        }
      }, {
        key: "onTaxTypeSelect",
        value: function onTaxTypeSelect(event, tax) {
          var currentObj = this;

          if (event.target.value > 0) {
            var selectedTaxType = currentObj.TaxPricingTypes[event.target.value - 1].Name;
            var displaySymbol = selectedTaxType[0];

            if (displaySymbol === '$') {
              tax.controls['TaxAmountSymbol'].setValue(this.DisplayCurrency);
            } else {
              tax.controls['TaxAmountSymbol'].setValue(displaySymbol);
            }
          } else {
            tax.controls['TaxAmountSymbol'].setValue("");
          }
        }
      }]);

      return OtherProductTaxesComponent;
    }();

    OtherProductTaxesComponent.ɵfac = function OtherProductTaxesComponent_Factory(t) {
      return new (t || OtherProductTaxesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_invoice_service__WEBPACK_IMPORTED_MODULE_3__["InvoiceService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]));
    };

    OtherProductTaxesComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: OtherProductTaxesComponent,
      selectors: [["app-other-product-taxes"]],
      inputs: {
        Parent: "Parent",
        Taxes: "Taxes",
        Currency: "Currency"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 8,
      vars: 2,
      consts: [[1, "well", "box-shadow", 3, "formGroup"], ["formArrayName", "OtherProductTaxes"], ["class", "form-group", 4, "ngFor", "ngForOf"], [3, "click"], [1, "fa", "fa-plus-circle"], [1, "form-group"], [3, "formGroupName"], ["class", "row", 4, "ngIf"], [1, "row"], [1, "col-sm-3"], ["type", "hidden", "formControlName", "OrderId"], ["type", "hidden", "formControlName", "TaxId"], ["formControlName", "TaxPricingTypeId", 1, "form-control", 3, "change"], [3, "value"], [3, "value", 4, "ngFor", "ngForOf"], ["class", "color-maroon", 4, "ngIf"], [1, "input-group"], ["type", "text", "formControlName", "TaxAmount", "placeholder", "Tax Amount", 1, "form-control"], ["class", "input-group-addon fs12", 4, "ngIf"], ["type", "text", "formControlName", "TaxDescription", "placeholder", "Description", 1, "form-control"], [1, "fa", "fa-trash-alt", "color-maroon", "mt10", 3, "click"], [1, "color-maroon"], [4, "ngIf"], [1, "input-group-addon", "fs12"]],
      template: function OtherProductTaxesComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "h4");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Taxes");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, OtherProductTaxesComponent_div_4_Template, 22, 8, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "a", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function OtherProductTaxesComponent_Template_a_click_5_listener() {
            return ctx.addTax(null);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "i", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, " Add Tax");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.Parent);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.Parent.get("OtherProductTaxes")["controls"]);
        }
      },
      directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArrayName"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_x"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvdGF4ZXMvb3RoZXItcHJvZHVjdC10YXhlcy5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](OtherProductTaxesComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-other-product-taxes',
          templateUrl: './other-product-taxes.component.html',
          styleUrls: ['./other-product-taxes.component.css']
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _services_invoice_service__WEBPACK_IMPORTED_MODULE_3__["InvoiceService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
        }];
      }, {
        Parent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Taxes: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        Currency: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/invoice/various-drop-location/various-drop-location.component.ts": function srcAppInvoiceVariousDropLocationVariousDropLocationComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "VariousDropLocationComponent", function () {
      return VariousDropLocationComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../models/DropDetail */
    "./src/app/invoice/models/DropDetail.ts");
    /* harmony import */


    var src_app_app_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/app.constants */
    "./src/app/app.constants.ts");
    /* harmony import */


    var src_app_statelist_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/statelist.service */
    "./src/app/statelist.service.ts");
    /* harmony import */


    var src_app_address_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/address.service */
    "./src/app/address.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");

    function VariousDropLocationComponent_div_0_div_10_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Address");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function VariousDropLocationComponent_div_0_div_11_Template(rf, ctx) {
      if (rf & 1) {
        var _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Zip Code");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function VariousDropLocationComponent_div_0_div_11_Template_input_input_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r7);

          var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r6.getAddressByZip(ctx_r6.FuelDropLocation, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function VariousDropLocationComponent_div_0_div_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "City");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function VariousDropLocationComponent_div_0_option_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var st_r8 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", st_r8.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", st_r8.Code, " ");
      }
    }

    function VariousDropLocationComponent_div_0_div_23_option_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ct_r10 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ct_r10.Id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ct_r10.Code, " ");
      }
    }

    function VariousDropLocationComponent_div_0_div_23_Template(rf, ctx) {
      if (rf & 1) {
        var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "input", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Country");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "select", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function VariousDropLocationComponent_div_0_div_23_Template_select_change_6_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);

          var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r11.setCountryName(ctx_r11.FuelDropLocation, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "option", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Select Country");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, VariousDropLocationComponent_div_0_div_23_option_9_Template, 2, 2, "option", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.CountryList);
      }
    }

    function VariousDropLocationComponent_div_0_Template(rf, ctx) {
      if (rf & 1) {
        var _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h4");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Drop Location");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "input", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function VariousDropLocationComponent_div_0_Template_input_click_8_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r14);

          var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r13.updateAddressFlag(ctx_r13.FuelDropLocation);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, " We have drop address ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, VariousDropLocationComponent_div_0_div_10_Template, 6, 0, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, VariousDropLocationComponent_div_0_div_11_Template, 6, 0, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, VariousDropLocationComponent_div_0_div_12_Template, 6, 0, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "input", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "State");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "span", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, "*");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "select", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function VariousDropLocationComponent_div_0_Template_select_change_19_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r14);

          var ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r15.setStateName(ctx_r15.FuelDropLocation, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "option", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Select State");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, VariousDropLocationComponent_div_0_option_22_Template, 2, 2, "option", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, VariousDropLocationComponent_div_0_div_23_Template, 10, 2, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r0.FuelDropLocation);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.IsAddressAvailable);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.IsAddressAvailable);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.IsAddressAvailable);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", null);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.StateList);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.IsAddressAvailable);
      }
    }

    var VariousDropLocationComponent = /*#__PURE__*/function () {
      function VariousDropLocationComponent(fb, stateService, addresService) {
        var _this109 = this;

        _classCallCheck(this, VariousDropLocationComponent);

        this.fb = fb;
        this.stateService = stateService;
        this.addresService = addresService;
        this.IsAddressAvailable = false; //----------------- DO NOT MODIFY: Control Value accessor ----------------------

        this.onTouched = function () {};

        this.StateList = [];
        this.CountryList = [];
        this.stateService.getStates().subscribe(function (data) {
          return _this109.StateList = data;
        });
        this.stateService.getCountries().subscribe(function (data) {
          return _this109.CountryList = data;
        });
      }

      _createClass(VariousDropLocationComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.FuelDropLocation = this.buildAddress(new _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__["AddressModel"]()); //this.registerOnChange((data: AddressModel) => {
          //    this.DropLocationData = data;
          //    if (this.IsVariousOrigin) {
          //        this.DropLocationData.Address = null;
          //        this.DropLocationData.City = null;
          //        this.DropLocationData.ZipCode = null;
          //    }
          //});
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(change) {
          if (change.IsVariousOrigin) {
            this.IsVariousOrigin = change.IsVariousOrigin.currentValue || false;
          }
        }
      }, {
        key: "buildAddress",
        value: function buildAddress(model) {
          return this.fb.group({
            IsAddressAvailable: this.fb.control(false),
            Address: this.fb.control(model.Address),
            Latitude: this.fb.control(model.Latitude),
            Longitude: this.fb.control(model.Longitude),
            City: this.fb.control(model.City),
            CountyName: this.fb.control(model.CountyName),
            State: this.fb.group({
              Id: this.fb.control(model.State.Id),
              Code: this.fb.control(model.State.Code)
            }),
            Country: this.fb.group({
              Id: this.fb.control(model.Country.Id),
              Code: this.fb.control(model.Country.Code)
            }),
            ZipCode: this.fb.control(model.ZipCode)
          });
        }
      }, {
        key: "updateAddressFlag",
        value: function updateAddressFlag(address) {
          this.IsAddressAvailable = !this.IsAddressAvailable;

          if (!this.IsAddressAvailable) {
            var empty = {
              Address: '',
              City: '',
              CountyName: '',
              ZipCode: '',
              Latitude: '',
              Longitude: ''
            };
            this.FuelDropLocation.patchValue(empty);
          }

          address.get('IsAddressAvailable').setValue(this.IsAddressAvailable);
        }
      }, {
        key: "getAddressByZip",
        value: function getAddressByZip(address, event) {
          var _this110 = this;

          var zipCode = event.target.value;

          if (src_app_app_constants__WEBPACK_IMPORTED_MODULE_3__["RegExConstants"].UsaZip.test(zipCode) || src_app_app_constants__WEBPACK_IMPORTED_MODULE_3__["RegExConstants"].CanZip.test(zipCode)) {
            this._loadingAddress = true;
            this.addresService.getAddress(zipCode).subscribe(function (data) {
              _this110._loadingAddress = false;

              if (data != null && data != undefined && data.StateCode != null) {
                data.Address = address.controls['Address'].value;
                data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';

                var addressModel = _this110.addressMapper(data);

                address.patchValue(addressModel);

                _this110.setStateAndCountry(address, data.StateCode, data.CountryCode);
              }
            });
          }
        }
      }, {
        key: "addressMapper",
        value: function addressMapper(data) {
          var _address = new _models_DropDetail__WEBPACK_IMPORTED_MODULE_2__["AddressModel"]();

          _address.Address = data.Address;
          _address.City = data.City;
          _address.CountyName = data.CountyName;
          _address.Latitude = data.Latitude;
          _address.Longitude = data.Longitude;
          _address.ZipCode = data.ZipCode;
          _address.State.Code = data.StateCode;
          _address.Country.Code = data.CountryCode;
          return _address;
        }
      }, {
        key: "setStateName",
        value: function setStateName(address, event) {
          address.get('State.Code').setValue(event.target.selectedOptions[0].text);
        }
      }, {
        key: "setCountryName",
        value: function setCountryName(address, event) {
          address.get('Country.Code').setValue(event.target.selectedOptions[0].text);
        }
      }, {
        key: "setStateAndCountry",
        value: function setStateAndCountry(address, stateCode, countryCode) {
          var state = this.StateList.find(function (t) {
            return t.Code == stateCode;
          });
          var country = this.CountryList.find(function (t) {
            return t.Code == countryCode;
          });

          if (state != null) {
            address.get('State.Id').setValue(state.Id);
          }

          if (country != null) {
            address.get('Country.Id').setValue(country.Id);
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(val) {
          val && this.FuelDropLocation.setValue(val, {
            emitEvent: true
          });
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.FuelDropLocation.valueChanges.subscribe(fn);
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(isDisabled) {
          isDisabled ? this.FuelDropLocation.disable() : this.FuelDropLocation.enable();
        }
      }]);

      return VariousDropLocationComponent;
    }();

    VariousDropLocationComponent.ɵfac = function VariousDropLocationComponent_Factory(t) {
      return new (t || VariousDropLocationComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_statelist_service__WEBPACK_IMPORTED_MODULE_4__["StatelistService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_address_service__WEBPACK_IMPORTED_MODULE_5__["AddressService"]));
    };

    VariousDropLocationComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: VariousDropLocationComponent,
      selectors: [["app-various-drop-location"]],
      inputs: {
        IsVariousOrigin: "IsVariousOrigin"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return VariousDropLocationComponent;
        }),
        multi: true
      }]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
      decls: 1,
      vars: 1,
      consts: [["class", "well box-shadow", 4, "ngIf"], [1, "well", "box-shadow"], [1, "row", 3, "formGroup"], [1, "col-sm-12"], [1, "checkbox", "mt0"], ["type", "checkbox", "name", "IsAddressAvailable", 3, "click"], ["class", "col-sm-2 form-group", 4, "ngIf"], ["formGroupName", "State", 1, "col-sm-2", "form-group"], ["type", "hidden", "formControlName", "Code"], [1, "color-maroon"], ["formControlName", "Id", "placeholder", "Select State", 1, "form-control", 3, "change"], [3, "value"], [3, "value", 4, "ngFor", "ngForOf"], ["class", "col-sm-2 form-group", "formGroupName", "Country", 4, "ngIf"], [1, "col-sm-2", "form-group"], ["name", "Address", "placeholder", "Address", "formControlName", "Address", 1, "form-control"], ["name", "ZipCode", "placeholder", "Zip Code", "formControlName", "ZipCode", 1, "form-control", 3, "input"], ["name", "City", "placeholder", "City", "formControlName", "City", 1, "form-control"], ["formGroupName", "Country", 1, "col-sm-2", "form-group"], ["formControlName", "Id", "placeholder", "Select Country", 1, "form-control", 3, "change"]],
      template: function VariousDropLocationComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, VariousDropLocationComponent_div_0_Template, 24, 7, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.IsVariousOrigin);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_x"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgForOf"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2UvdmFyaW91cy1kcm9wLWxvY2F0aW9uL3ZhcmlvdXMtZHJvcC1sb2NhdGlvbi5jb21wb25lbnQuY3NzIn0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](VariousDropLocationComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-various-drop-location',
          templateUrl: './various-drop-location.component.html',
          styleUrls: ['./various-drop-location.component.css'],
          providers: [{
            provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NG_VALUE_ACCESSOR"],
            useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
              return VariousDropLocationComponent;
            }),
            multi: true
          }]
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: src_app_statelist_service__WEBPACK_IMPORTED_MODULE_4__["StatelistService"]
        }, {
          type: src_app_address_service__WEBPACK_IMPORTED_MODULE_5__["AddressService"]
        }];
      }, {
        IsVariousOrigin: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/services/validation.service.ts": function srcAppServicesValidationServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ValidationService", function () {
      return ValidationService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");

    var ValidationService = /*#__PURE__*/function () {
      function ValidationService(fb) {
        _classCallCheck(this, ValidationService);

        this.fb = fb;
      }

      _createClass(ValidationService, [{
        key: "removeError",
        value: function removeError(control, error) {
          var existingErrors = control.errors;

          if (existingErrors) {
            delete existingErrors[error];

            if (!Object.keys(existingErrors).length) {
              control.setErrors(null);
            } else {
              control.setErrors(existingErrors);
            }
          }
        }
      }, {
        key: "addError",
        value: function addError(control, error) {
          var errorToSet = {};
          errorToSet[error] = true;
          control.setErrors(Object.assign(Object.assign({}, control.errors), errorToSet));
        }
      }]);

      return ValidationService;
    }();

    ValidationService.ɵfac = function ValidationService_Factory(t) {
      return new (t || ValidationService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]));
    };

    ValidationService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
      token: ValidationService,
      factory: ValidationService.ɵfac,
      providedIn: 'root'
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ValidationService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }], function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  4: function _(module, exports) {
    /* (ignored) */

    /***/
  }
}]);
//# sourceMappingURL=invoice-lazy-loading-invoice-module-es5.js.map