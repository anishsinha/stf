{"version":3,"sources":["webpack:///src/app/carrier-companies/carrier-companies.component.ts","webpack:///src/app/carrier-companies/carrier-companies.component.html","webpack:///src/app/carrier-companies/lazy-loading/carrier-companies-routing.module.ts","webpack:///src/app/carrier-companies/lazy-loading/carrier-companies.module.ts"],"names":["CarrierCompaniesComponent","fb","assigncarrierService","carrierEmails","_opened","_animate","_positionNum","_POSITIONS","isUpdate","IsLoading","IsEmpty","IsSuccess","assignedCarrierList","assignedCarriers","carrierList","jobs","jobs2","availableJobs","assignedJobs","query","list1Search","list2Search","popoverTitle","popoverMessage","confirmClicked","cancelClicked","CarrierUsers","dtTrigger","dtOptions","IsDisplayLoader","SelectedJobs","IsCreateFreightOrder","IsJobDeselect","removedJobs","WarningMessage","editCarrierId","existingJobs","selectCarrierModel","assginedJobSelectAll","availableJobSelectAll","getAssignedCarriers","getCarriers","multiDropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","dropdownSettings","exportColumns","columns","pagingType","pageLength","lengthMenu","searching","destroy","dom","buttons","extend","exportOptions","title","orientation","subscribe","carriers","length","getAssignedCarrierUsers","refreshDatatable","dtElements","forEach","dtElement","dtInstance","then","next","carrier","deleteAssignedCarrier","response","serviceResponse","StatusCode","push","Carrier","closeAssignedOrdersforCarrier","undefined","existingCarriers","map","item","Id","filter","indexOf","getJobs","element","assignedLocations","getAssignedJobs","Jobs","Job","allJobs","m","IsSelected","job","index","findIndex","t","splice","locations","Name","slice","join","_carrier","SelectedCarrier","selectedJobs","_toggleOpened","GetCarrierUserEmails","_com","find","x","CompanyId","CarrierEmails","companyId","msgerror","Validate","updateAssignedCarrier","assignCarriers","selectedJob","editEmailJobId","Emails","editEmailDetails","Code","DisplayFreightOrderConfirmationModal","updatedJobIds","ValidateIfNewJobAdded","InsertedJobs","EditFreightOnlyOrders","btnCloseModal","nativeElement","click","shouldOpen","clearForm","selectedCarrierItem","name","i","carrierControls","getCarriersFormArray","result","controls","get","invalid","dirty","touched","rcForm","email","a","IsEmailEdit","availableJob","SelectedCount","Object","keys","data","isChecked","toLowerCase","ls","f","concat","selectedFile","event","file","target","files","btnCloseBulkModal","upload","StatusMessage","msgsuccess","btnOpenModal","IsCreateOrder","createFreightOrder","UpdatedJobIds","prevAssignedJobIds","newlyAssignedJobIds","keys1","keys2","inserted","deleted","DeletedJobs","InsertedJobIds","DeletedJobIds","editfreightOrder","newJobsIds","removedJobsIds","CarrierCompanyId","editFreightOnlyOrders","toogleSelectAll","$event","checked","moveToLeft","moveToRight","SaveCarrier","assignNewForm","bulkUpload","IscreateFreightOrders","onFileChange","onFileUpload","SaveJobEmail","selector","templateUrl","styleUrls","encapsulation","None","routeCarrierCompanies","path","component","children","CarrierCompaniesRoutingModule","forChild","imports","exports","CarrierCompaniesModule","declarations"],"mappings":"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","file":"carrier-companies-lazy-loading-carrier-companies-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, ViewEncapsulation, ViewChildren, QueryList } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { startsWithPipe, startsWithJobPipe } from './search-filter';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { AssigncarrierService, DropdownItem, Carrier, CarrierJob, CarrierJobDetails, EditFreightOnlyOrder, JobWithEmails } from './service/assigncarrier.service';\r\nimport { Declarations } from '../declarations.module';\r\nimport { Subject } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-carrier-companies',\r\n    templateUrl: './carrier-companies.component.html',\r\n    styleUrls: ['./carrier-companies.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\n\r\nexport class CarrierCompaniesComponent implements OnInit {\r\n\r\n    public carrierEmails = [];\r\n    public _opened: boolean = false;\r\n    public _animate: boolean = true;\r\n    public _positionNum: number = 1;\r\n    public _POSITIONS: Array<string> = ['left', 'right', 'top', 'bottom'];\r\n    public serviceResponse: any;\r\n    public isUpdate: boolean = false;\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public dropdownSettings: IDropdownSettings;\r\n    public IsLoading: boolean = false;\r\n    public IsEmpty: boolean = false;\r\n    public IsSuccess: boolean = false;\r\n    public carrier: Carrier;\r\n    public assignedCarrierList: Carrier[] = [];\r\n    public assignedCarriers: Carrier[] = [];\r\n    public rcForm: FormGroup;\r\n    public carrierList: DropdownItem[] = [];\r\n    public jobs: DropdownItem[] = [];\r\n    public jobs2: DropdownItem[] = [];\r\n    public availableJobs: CarrierJob[] = [];\r\n    public assignedJobs: CarrierJob[] = [];\r\n    query: string = '';\r\n    list1Search: string = '';\r\n    list2Search: string = '';\r\n    public popoverTitle: string = 'Delete Confirmation';\r\n    public popoverMessage: string = 'Do you really want to delete? Deleting a location assignment will result in closure of all the existing orders for the carrier';\r\n\r\n    public SelectedCount: number;\r\n    public confirmClicked: boolean = false;\r\n    public cancelClicked: boolean = false;\r\n\r\n    public CarrierUsers: CarrierJobDetails[] = [];\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public dtOptions: any = {};\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n\r\n\r\n    @ViewChild('btnOpenModal') btnOpenModal: ElementRef<HTMLElement>;\r\n    @ViewChild('btnCloseModal') btnCloseModal: ElementRef<HTMLElement>;\r\n    @ViewChild('btnCloseBulkModal') btnCloseBulkModal: ElementRef<HTMLElement>;\r\n    @ViewChild('confirmationBox') confirmationBox: ElementRef;\r\n    public IsDisplayLoader: boolean = false;\r\n    public SelectedJobs: DropdownItem[] = [];\r\n    public IsCreateFreightOrder: boolean = null;\r\n    public UpdatedJobIds: any[];\r\n\r\n    public IsJobDeselect: boolean = false;\r\n    public removedJobs: DropdownItem[] = [];\r\n    public WarningMessage: string = \"Note: Removing a location assignment will result in closure of all the existing orders for the carrier\";\r\n    file: any;\r\n    editCarrierId: string = null;\r\n    existingJobs: any = [];\r\n    SelectedCarrier: DropdownItem;\r\n    selectedCarrierItem: DropdownItem;\r\n    allJobs: CarrierJob[];\r\n    selectCarrierModel: any = [];\r\n    assginedJobSelectAll = false;\r\n    availableJobSelectAll = false;\r\n    editEmailJobId: number;\r\n    editEmailDetails: DropdownItem[];\r\n    selectedFile: any;\r\n    constructor(private fb: FormBuilder, private assigncarrierService: AssigncarrierService) { }\r\n\r\n    ngOnInit() {\r\n        this.getAssignedCarriers();\r\n        this.getCarriers();\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.dropdownSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        //this.getAssignedCarrierUsers();\r\n        let exportColumns = { columns: [0, 1, 2] };\r\n        this.dtOptions = {\r\n            pagingType: 'simple_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n            searching: true,\r\n            destroy: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Assigned Carriers', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Assigned Carriers', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n        };\r\n    }\r\n\r\n    getCarriers() {\r\n        this.assigncarrierService.getCarriers()\r\n            .subscribe((carriers: DropdownItem[]) => {\r\n                this.carrierList = carriers;\r\n                this.carrierList.length\r\n            });\r\n    }\r\n    getAssignedCarrierUsers() {\r\n        this.assigncarrierService.getAssignedCarrierUsers()\r\n            .subscribe((carriers: CarrierJobDetails[]) => {\r\n                this.CarrierUsers = carriers;\r\n                this.refreshDatatable();\r\n            });\r\n    }\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n            }\r\n        });\r\n        this.dtTrigger.next();\r\n    }\r\n    removeAssignedCarrier(carrier: Carrier) {\r\n        this.IsSuccess = true;\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.deleteAssignedCarrier(carrier)\r\n            .subscribe((response: any) => {\r\n                this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    this.carrierList.push(carrier.Carrier);\r\n                    this.closeAssignedOrdersforCarrier(carrier);\r\n                } else {\r\n                    this.IsLoading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    getAssignedCarriers() {\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.getAssignedCarriers()\r\n            .subscribe((response: Carrier[]) => {\r\n                if (response != null && response != undefined) {\r\n                    this.assignedCarrierList = response;\r\n                    var existingCarriers = response.map(function (item) { return item.Carrier.Id; });\r\n                    this.carrierList = this.carrierList.filter(function (item) { return existingCarriers.indexOf(item.Id) == -1; });\r\n                    this.getJobs();\r\n                    this.IsLoading = false;\r\n                    this.refreshDatatable();\r\n                }\r\n            });\r\n    }\r\n    getJobs() {\r\n        this.assignedCarrierList.forEach(element => {\r\n            if (element) {\r\n                element.assignedLocations = this.getAssignedJobs(element);\r\n                if (element.Jobs) {\r\n                    this.existingJobs.push(element.Jobs.map(function (item) { return item.Job; }));\r\n                }\r\n            }\r\n        })\r\n        //this.existingJobs = this.assignedCarrierList.map(function (item) { return item.Jobs;});\r\n        this.assigncarrierService.getJobs()\r\n            .subscribe((response: CarrierJob[]) => {\r\n                this.availableJobs = response;\r\n                this.allJobs = response;\r\n                this.availableJobs && this.availableJobs.map(m => m.Job.IsSelected = false);\r\n                if (this.existingJobs) {\r\n                    this.existingJobs.forEach(element => {\r\n                        if (element) {\r\n                            element.forEach(job => {\r\n                                let index = this.availableJobs.findIndex(t => t.Job.Id == job.Id);\r\n                                if (index != -1) { this.availableJobs.splice(index, 1); };\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n    }\r\n    getAssignedJobs(assignedJobs: Carrier) {\r\n        var locations = '-';\r\n        if (assignedJobs) {\r\n            var jobs = assignedJobs.Jobs.map(function (item) { return item.Job.Name; });\r\n            if (jobs.length > 4) {\r\n                locations = jobs.slice(0, 4).join(\", \") + \"...\";\r\n            } else {\r\n                locations = jobs.join(\", \");\r\n            }\r\n        }\r\n        return locations;\r\n    }\r\n\r\n    editForm(_carrier: Carrier) {\r\n        this.SelectedCarrier = _carrier.Carrier;\r\n        this.editCarrierId = _carrier.Id;\r\n        var selectedJobs = _carrier.Jobs.map(function (item) { return item.Job; });\r\n        this.SelectedJobs = [];\r\n        this.SelectedJobs = selectedJobs;\r\n        this.assignedJobs = _carrier.Jobs;\r\n        this.assignedJobs && this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n        this._toggleOpened(true);\r\n        this.GetCarrierUserEmails(_carrier.Carrier.Id);\r\n        this.isUpdate = true;\r\n    }\r\n    public getCarrierEmailsById() {\r\n        if (this.SelectedCarrier && this.SelectedCarrier.Id > 0) {\r\n            var _com = this.carrierEmails.find(x => x.CompanyId == this.SelectedCarrier.Id);\r\n            return _com ? _com.CarrierEmails : [];\r\n        }\r\n        else { return []; }\r\n    }\r\n\r\n    public GetCarrierUserEmails(companyId: number) {\r\n        var _com = this.carrierEmails.find(x => x.CompanyId == companyId);\r\n        if (!_com) {\r\n            this.IsLoading = true;\r\n            this.assigncarrierService.GetCarrierUserEmails(companyId)\r\n                .subscribe((response: DropdownItem[]) => {\r\n                    if (response) {\r\n                        this.carrierEmails.push({ CompanyId: companyId, CarrierEmails: response });\r\n                    }\r\n                    this.IsLoading = false;\r\n                });\r\n        }\r\n    }\r\n    Validate() {\r\n        if (!this.SelectedCarrier || this.SelectedCarrier.Id <= 0) {\r\n            Declarations.msgerror(\"Atleast one carrier must be assigned\", undefined, undefined);\r\n            return false;\r\n        }\r\n        if (!this.assignedJobs || this.assignedJobs.length <= 0) {\r\n            Declarations.msgerror(\"Atleast one job must be selected\", undefined, undefined);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public SaveCarrier() {\r\n        if (this.Validate()) {\r\n            this.assignedCarriers = [];\r\n            this.assignedCarriers.push({ Id: \"\", Carrier: null, Jobs: [], assignedLocations: null });\r\n            if (this.SelectedCarrier) {\r\n                this.assignedCarriers[0].Carrier = this.SelectedCarrier;\r\n                this.assignedCarriers[0].Jobs = this.assignedJobs;\r\n                this.assignedCarriers[0].Id = this.editCarrierId;\r\n                if (this.isUpdate) {\r\n                    this.updateAssignedCarrier();\r\n                } else {\r\n                    this.assignCarriers();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public SaveJobEmail() {\r\n        var selectedJob = this.assignedJobs.find(t => t.Job.Id == this.editEmailJobId);\r\n        if (selectedJob) {\r\n            selectedJob.Job.Emails = [];\r\n            if (this.editEmailDetails) {\r\n                this.editEmailDetails.forEach(element => {\r\n                    if (!selectedJob.Job.Emails) {\r\n                        selectedJob.Job.Emails = [];\r\n                    }\r\n                    if (!selectedJob.Job.Emails.find(t => t.Id == element.Id)) {\r\n                        selectedJob.Job.Emails.push({ Id: element.Id, Name: element.Name, Code: element.Code, IsSelected: element.IsSelected });\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                selectedJob.Job.Emails = [];\r\n            }\r\n        }\r\n    }\r\n    assignNewForm() {\r\n        this._toggleOpened(true);\r\n        this.isUpdate = false;\r\n    }\r\n\r\n    assignCarriers() {\r\n        this.DisplayFreightOrderConfirmationModal();\r\n    }\r\n\r\n    updateAssignedCarrier() {\r\n        var updatedJobIds = this.ValidateIfNewJobAdded();\r\n        if (updatedJobIds.length > 0) {\r\n            if (updatedJobIds[0].InsertedJobs.length > 0) {\r\n                //show modal as new jobs are added when editing;FO will be created only for newly assigned jobs\r\n                this.DisplayFreightOrderConfirmationModal();\r\n            }\r\n            else {\r\n                this.IsSuccess = true;\r\n                this.assigncarrierService.updateAssignedCarrier(this.assignedCarriers[0])// First Update Existing carrier assignment\r\n                    .subscribe((response: any) => {\r\n                        this.serviceResponse = response;\r\n                        if (response.StatusCode == 0) {\r\n                            this.IsSuccess = false;\r\n                            this.EditFreightOnlyOrders(false);// Edit FO according to new job assignment\r\n                        }\r\n                        else {\r\n                            this.IsSuccess = false;\r\n                            Declarations.msgerror(\"Carrier Assignment Failed\", undefined, undefined);\r\n                            this.getAssignedCarriers();\r\n                            this.IsDisplayLoader = false;\r\n                            let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                            element.click();\r\n                            this._toggleOpened(false);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    _toggleOpened(shouldOpen: boolean) {\r\n        if (shouldOpen) {\r\n            this._opened = true;\r\n        }\r\n        else {\r\n            this._opened = !this._opened;\r\n            this.clearForm();\r\n            this.isUpdate = false;\r\n        }\r\n    }\r\n    clearForm() {\r\n        this.availableJobs = this.allJobs\r\n        this.availableJobs && this.availableJobs.map(m => m.Job.IsSelected = false);\r\n        this.assignedJobs = [];\r\n        this.SelectedCarrier = null;\r\n        this.selectCarrierModel = [];\r\n        this.list1Search = '';\r\n        this.list2Search = '';\r\n        this.assginedJobSelectAll = false;\r\n        this.availableJobSelectAll = false;\r\n        this.assignedCarriers.push({ Id: \"\", Carrier: null, Jobs: [], assignedLocations: null });\r\n        this.editEmailDetails = [];\r\n        this.selectedCarrierItem = null;\r\n        this.existingJobs = [];\r\n    }\r\n    isInvalid(name: string, i: number): boolean {\r\n        var carrierControls = this.getCarriersFormArray();\r\n        var result = carrierControls.controls[i].get(name).invalid\r\n            &&\r\n            (\r\n                carrierControls.controls[i].get(name).dirty\r\n                ||\r\n                carrierControls.controls[i].get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    getCarriersFormArray(): FormArray {\r\n        return this.rcForm.get('Carriers') as FormArray;\r\n    }\r\n\r\n    public OnCarrierSelect(carrier: any) {\r\n        this.SelectedCarrier = carrier;\r\n        this.GetCarrierUserEmails(carrier.Id);\r\n    }\r\n\r\n    public OnCarrierDeSelect(carrier: any) {\r\n        this.SelectedCarrier = null;\r\n    }\r\n    public OnEmailSelect(email: any, job: CarrierJob) {\r\n        if (!job.Job.Emails) {\r\n            job.Job.Emails = [];\r\n        }\r\n        job.Job.Emails.push({ Id: email.Id, Name: email.Name, Code: null, IsSelected: true });\r\n    }\r\n    public OnEmailDeSelect(email: any, job: CarrierJob) {\r\n        let index = job.Job.Emails.findIndex(a => a.Id == email.Id);\r\n        if (index != -1) { job.Job.Emails.splice(index, 1); }\r\n    }\r\n    public editEmail(email: any, job: CarrierJob) {\r\n        job.Job.IsEmailEdit = true;\r\n        this.editEmailJobId = job.Job.Id;\r\n        this.editEmailDetails = job.Job.Emails;\r\n    }\r\n    public toggleSelect(availableJob) {\r\n        if (availableJob.Job.IsSelected) {\r\n            availableJob.Job.IsSelected = false;\r\n        } else {\r\n            availableJob.Job.IsSelected = true;\r\n        }\r\n        if (this.availableJobs.find(t => !t.Job.IsSelected)) {\r\n            this.availableJobSelectAll = false;\r\n        }\r\n        if (this.assignedJobs.find(t => !t.Job.IsSelected)) {\r\n            this.assginedJobSelectAll = false;\r\n        }\r\n        this.SelectedCount = Object.keys(this.availableJobs.filter((data) => data.Job.IsSelected === true)).length;\r\n    }\r\n    public toogleSelectAll(name: string, isChecked: boolean) {\r\n        if (isChecked) {\r\n            (name == 'availableJob') ? this.availableJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list1Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = true) : this.assignedJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list2Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = true);\r\n        } else {\r\n            (name == 'availableJob') ? this.availableJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list1Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = false) : this.assignedJobs.filter(t => t.Job.Name.toLowerCase().indexOf(this.list2Search.toLowerCase()) >= 0).map(m => m.Job.IsSelected = false);\r\n        }\r\n        this.SelectedCount = Object.keys(this.availableJobs.filter((data) => data.Job.IsSelected === true)).length;\r\n    }\r\n\r\n    public moveToLeft() {\r\n        this.availableJobs.map(m => m.Job.IsSelected = false);\r\n        var ls = this.assignedJobs.filter(f => f.Job.IsSelected == true);\r\n       // this.availableJobs = this.availableJobs.concat(ls);\r\n        this.availableJobs = ls.concat(this.availableJobs);\r\n        this.assignedJobs = this.assignedJobs.filter(f => f.Job.IsSelected == false);\r\n        this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n    }\r\n    public moveToRight() {\r\n        this.assignedJobs.map(m => m.Job.IsSelected = false);\r\n        var ls = this.availableJobs.filter(f => f.Job.IsSelected == true);\r\n       // this.assignedJobs = this.assignedJobs.concat(ls);\r\n       this.assignedJobs=ls.concat(this.assignedJobs);\r\n        this.availableJobs = this.availableJobs.filter(f => f.Job.IsSelected == false);\r\n       \r\n    }\r\n\r\n\r\n    bulkUpload() {\r\n        this.IsCreateFreightOrder = null;\r\n        this.selectedFile = null;\r\n    }\r\n    onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n    }\r\n    onFileUpload() {\r\n        if (!this.file) {\r\n            Declarations.msgerror(\"Please select file\", undefined, undefined);\r\n            return;\r\n        }\r\n        let element: HTMLElement = this.btnCloseBulkModal.nativeElement;\r\n        element.click();\r\n        this.IsLoading = true;\r\n        this.assigncarrierService.upload(this.file, this.IsCreateFreightOrder).subscribe(\r\n            (response: any) => {\r\n                if (response.StatusCode == 1) {\r\n                    Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                } else {\r\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\r\n                    this.getAssignedCarriers();\r\n                }\r\n                this.file = null;\r\n\r\n            }\r\n        );\r\n    }\r\n    public DisplayFreightOrderConfirmationModal() {\r\n        this.IsDisplayLoader = false;\r\n        let element: HTMLElement = this.btnOpenModal.nativeElement;\r\n        element.click();\r\n    }\r\n    public IscreateFreightOrders(IsCreateOrder: boolean) {\r\n        if (!this.isUpdate) {\r\n            this.IsDisplayLoader = true;\r\n            this.assigncarrierService.assignCarriers(this.assignedCarriers)\r\n                .subscribe((response: any) => {\r\n                    if (response.StatusCode == 0) {\r\n                        this.IsSuccess = false;\r\n                        if (IsCreateOrder) {\r\n                            this.assigncarrierService.createFreightOrder(this.assignedCarriers)\r\n                                .subscribe((response: any) => {\r\n                                    if (response.StatusCode == 0) {\r\n                                        Declarations.msgsuccess(\"Order(s) Assigned Successfully to Carrier\", undefined, undefined);\r\n                                    } else if (response.StatusCode == 1) {\r\n                                        Declarations.msgerror(response.StatusMessage, undefined, undefined);\r\n                                    }\r\n\r\n                                    this.IsDisplayLoader = false;\r\n                                    let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                                    element.click();\r\n                                    this._toggleOpened(false);\r\n                                    this.getAssignedCarriers();\r\n                                });\r\n                        } else {\r\n                            let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                            element.click();\r\n                            this._toggleOpened(false);\r\n                            this.getAssignedCarriers();\r\n                            this.IsDisplayLoader = false;\r\n                        }\r\n                    } else if (response.StatusCode == 1) {\r\n                        Declarations.msgerror(response == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n        else if (this.isUpdate) {\r\n            this.IsDisplayLoader = true;\r\n            this.assigncarrierService.updateAssignedCarrier(this.assignedCarriers[0])// First Update Existing carrier assignment\r\n                .subscribe((response: any) => {\r\n                    this.serviceResponse = response;\r\n                    if (response.StatusCode == 0) {\r\n                        this.IsSuccess = false;\r\n                        this.IsDisplayLoader = false;\r\n                        this.EditFreightOnlyOrders(IsCreateOrder);// Edit FO according to new job assignment\r\n                    }\r\n                    else {\r\n                        this.IsDisplayLoader = false;\r\n                        let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                        element.click();\r\n                        this._toggleOpened(false);\r\n                        Declarations.msgerror(\"Carrier Assignment Failed\", undefined, undefined);\r\n                    }\r\n                    //this.IsDisplayLoader = false;\r\n                });\r\n        }\r\n    }\r\n    public ValidateIfNewJobAdded(): any[] {\r\n        this.UpdatedJobIds = [];\r\n        var prevAssignedJobIds = this.SelectedJobs.map(function (item) { return item.Id });\r\n        var newlyAssignedJobIds = this.assignedCarriers[0].Jobs.map(function (item) { return item.Job.Id });\r\n        var keys1 = {};\r\n        var keys2 = {};\r\n        var inserted = [];\r\n        var deleted = [];\r\n        prevAssignedJobIds.forEach(function (item) {\r\n            keys1[item] = item;\r\n        });\r\n        newlyAssignedJobIds.forEach(function (item) {\r\n            keys2[item] = item;\r\n        });\r\n        prevAssignedJobIds.forEach(function (item) {\r\n            if (!keys2[item]) {\r\n                deleted.push(item);\r\n            }\r\n        });\r\n        newlyAssignedJobIds.forEach(function (item) {\r\n            if (!keys1[item]) {\r\n                inserted.push(item);\r\n            }\r\n        });\r\n        this.UpdatedJobIds.push({\r\n            InsertedJobs: inserted,\r\n            DeletedJobs: deleted\r\n        });\r\n        return this.UpdatedJobIds;\r\n    }\r\n\r\n    public EditFreightOnlyOrders(IsCreateOrder: boolean) {\r\n        this.IsDisplayLoader = true;\r\n        var InsertedJobIds: number[] = [];\r\n        var DeletedJobIds: number[] = [];\r\n\r\n        InsertedJobIds = this.UpdatedJobIds[0].InsertedJobs;\r\n        DeletedJobIds = this.UpdatedJobIds[0].DeletedJobs;\r\n        let editfreightOrder = new EditFreightOnlyOrder();\r\n        editfreightOrder.newJobsIds = InsertedJobIds;\r\n        editfreightOrder.removedJobsIds = DeletedJobIds;\r\n        editfreightOrder.CarrierCompanyId = this.assignedCarriers[0].Carrier.Id;\r\n        editfreightOrder.IsCreateOrder = IsCreateOrder;\r\n        this.assigncarrierService.editFreightOnlyOrders(editfreightOrder)\r\n            .subscribe((response: any) => {\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess(\"Carrier - Location assignment made successfully\", undefined, undefined);\r\n                    this.getAssignedCarriers();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Failed\", undefined, undefined);\r\n                }\r\n                this.IsDisplayLoader = false;\r\n                let element: HTMLElement = this.btnCloseModal.nativeElement;\r\n                element.click();\r\n                this._toggleOpened(false);\r\n            });\r\n    }\r\n\r\n    public closeAssignedOrdersforCarrier(carrier: Carrier) {\r\n        this.IsSuccess = true;\r\n        var removedJobsIds = carrier.Jobs.map(function (item) { return item.Job.Id });\r\n        let editfreightOrder = new EditFreightOnlyOrder();\r\n        editfreightOrder.newJobsIds = [];\r\n        editfreightOrder.removedJobsIds = removedJobsIds;\r\n        editfreightOrder.CarrierCompanyId = carrier.Carrier.Id;\r\n        editfreightOrder.IsCreateOrder = false;\r\n        this.assigncarrierService.closeAssignedOrdersforCarrier(editfreightOrder)\r\n            .subscribe((response: any) => {\r\n                this.serviceResponse = response;\r\n                if (response.StatusCode == 0) {\r\n                    this.IsSuccess = false;\r\n                } else {\r\n\r\n                }\r\n                this.IsLoading = false;\r\n                this._opened = false;\r\n                this.getAssignedCarriers();\r\n            });\r\n    }\r\n\r\n}\r\n","<div id=\"CarrierToggleId\" class=\"mt10\">\r\n    <ng-sidebar-container>\r\n        <ng-sidebar [(opened)]=\"_opened\" [animate]=\"_animate\" [position]=\"_POSITIONS[_positionNum]\" style=\"height: 100vh\">\r\n            <a (click)=\"_toggleOpened(false)\"><i class=\"fa fa-close fs18\"></i></a>\r\n            <h3 *ngIf=\"isUpdate; else editTitle\" class=\"dib ml10 mt10 mb0\">Edit Carrier</h3>\r\n            <ng-template #editTitle>\r\n                <h3 class=\"dib ml10 mt10 mb0\">Assign Carrier</h3>\r\n                <div class=\"alert alert-warning fs11 pt5 pl10 pr10 pb5 mb5\">Order(s)/DR(s) created for those locations will be sent to respective email(s)</div>\r\n            </ng-template>\r\n            <div *ngIf=\"isUpdate && IsJobDeselect\">\r\n                <div class=\"alert alert-warning fs11 pt5 pl10 pr10 pb5 mb5\">{{ WarningMessage }}</div>\r\n            </div>\r\n            <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsSuccess\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <!--<content class=\"pr30\">\r\n            <form [formGroup]=\"rcForm\" (ngSubmit)=\"onSubmit()\" id=\"assignCarrier\">\r\n                <div class=\"carrier-assignment\" formArrayName=\"Carriers\">\r\n                    <ng-container *ngFor=\"let carrier of rcForm.get('Carriers')['controls']; let i = index;\">\r\n                        <div class=\"row\" [formGroupName]=\"i\">\r\n                            <div class=\"col-sm-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"pa15 border radius-5 bg-lightgrey\">\r\n                                                <div class=\"row\">\r\n                                                    <input type=\"hidden\" formControlName=\"Id\">\r\n                                                    <div class=\"col-sm-5\">\r\n                                                        <ng-multiselect-dropdown formControlName=\"SelectedCarrier\"\r\n                                                                                 [placeholder]=\"'Select Carrier'\" *ngIf=\"!isUpdate\" [data]=\"carrierList\"\r\n                                                                                 [settings]=\"dropdownSettings\" (onSelect)=\"OnCarrierSelect($event, i)\"\r\n                                                                                 (onDeSelect)=\"OnCarrierDeSelect($event, i)\">\r\n                                                        </ng-multiselect-dropdown>\r\n                                                        <label *ngIf=\"isUpdate\" class=\"db\"><b>Carrier :</b></label>\r\n                                                        <label *ngIf=\"isUpdate\">{{carrier.get('SelectedCarrier').value[0].Name}}</label>\r\n                                                        <div *ngIf=\"carrier.get('SelectedCarrier').invalid && (carrier.get('SelectedCarrier').touched)\"\r\n                                                             class=\"color-maroon\">\r\n                                                            <div *ngIf=\"isRequired('SelectedCarrier', i)\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div *ngIf=\"carrier.get('IsValid').value==false\" class=\"color-maroon\">\r\n                                                            Carrier already Assigned.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-6\">\r\n                                                        <label *ngIf=\"isUpdate\"> <b>Locations :</b></label>\r\n                                                        <ng-multiselect-dropdown id=\"location-confirm\" formControlName=\"SelectedJobs\"\r\n                                                                                 [placeholder]=\"'Select Jobs'\" data-toggle=\"popover\" [data]=\"jobs\"\r\n                                                                                 [settings]=\"multiDropdownSettings\" (onSelect)=\"OnJobSelect($event, i)\"\r\n                                                                                 (onSelectAll)=\"OnJobSelectAll($event, i)\"\r\n                                                                                 (onDeSelectAll)=\"OnJobDeSelectAll($event, i)\"\r\n                                                                                 (onDeSelect)=\"OnJobDeSelect($event ,i)\">\r\n                                                        </ng-multiselect-dropdown>\r\n                                                        <div *ngIf=\"carrier.get('SelectedJobs').invalid && (carrier.get('SelectedJobs').touched)\"\r\n                                                             class=\"color-maroon\">\r\n                                                            <div *ngIf=\"isRequired('SelectedJobs', i)\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-sm-1\" *ngIf=\"!isUpdate\">\r\n                                                        <a class=\"fa fa-trash-alt color-maroon mt10\" (click)=\"removeCarrier(carrier,i)\"></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\" *ngIf=\"carrier.get('JobWithEmails').controls?.length>0\" formArrayName=\"JobWithEmails\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-12\">\r\n                                                    <div class=\"pa15\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-5\"><label class=\"mb0\"><b>Location</b></label></div>\r\n                                                            <div class=\"col-6\"><label class=\"mb0\"><b>Email id</b></label></div>\r\n                                                        </div>\r\n                                                        <div *ngFor=\"let job of carrier.get('JobWithEmails').controls; let j = index;\">\r\n                                                            <div class=\"row mb5 mt10\" *ngIf=\"job.get('Job').value\" [formGroupName]=\"j\">\r\n                                                                <div class=\"col-5\">\r\n                                                                    <label class=\"mt10\">{{job.get('Job').value.Name}}</label>\r\n                                                                </div>\r\n                                                                <div class=\"col-6\">\r\n                                                                    <ng-multiselect-dropdown [placeholder]=\"'Select Email'\"\r\n                                                                                             [settings]=\"   \" [data]=\"getCarrierEmailsById(carrier.get('SelectedCarrier'))\"\r\n                                                                                             formControlName=\"Email\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                </div>\r\n                                                                <div class=\"col-1\">\r\n                                                                    <a class=\"fa fa-trash-alt color-maroon mt10\" (click)=\"OnRemoveEmail(job.get('Job').value, i)\"></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class=\"row mt15\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div *ngIf=\"!isUpdate\" class=\"mt10\">\r\n                                <a (click)=\"assignNewCarrier()\"><i class=\"fa fa-plus-circle\"></i> Assign New</a>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 text-right\">\r\n                            <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                            <button class=\"ml15 btn btn-primary btn-lg\" type=\"submit\">Save</button>\r\n                            <button #btnOpenModal id=\"openfreightOrderModel\" type=\"button\" [hidden]=\"true\" data-toggle=\"modal\"\r\n                                    data-target=\"#createFreightOrderModel\"></button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </content>-->\r\n            <div class=\"row mt10\">\r\n                <div class=\"col-sm-4 text-left\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"fs16 font-weight-500\" *ngIf=\"!isUpdate\" for=\"formGroupExampleInput\">Carrier</label>\r\n                        <ng-multiselect-dropdown *ngIf=\"!isUpdate\" class=\"single-select\" id=\"formGroupExampleInput\" [(ngModel)]=\"selectedCarrierItem\"\r\n                                                 [placeholder]=\"'Select Carrier'\" \r\n                                                 [settings]=\"dropdownSettings\" [data]=\"carrierList\" (onSelect)=\"OnCarrierSelect($event)\"\r\n                                                 (onDeSelect)=\"OnCarrierDeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div class=\"fs16 font-weight-500\" *ngIf=\"isUpdate\">{{SelectedCarrier.Name}}</div>\r\n                        <!--<div *ngIf=\"carrier.get('SelectedCarrier').invalid && (carrier.get('SelectedCarrier').touched)\"\r\n                             class=\"color-maroon\">\r\n                            <div *ngIf=\"isRequired('SelectedCarrier', i)\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"carrier.get('IsValid').value==false\" class=\"color-maroon\">\r\n                            Carrier already Assigned.\r\n                        </div>-->\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"dual-list list-left col-4\">\r\n                    <div class=\"well text-right\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-left\">\r\n                                <h4>Available Location(s)</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" name=\"searchAvailableJob\" [(ngModel)]=\"list1Search\" class=\"form-control\" placeholder=\"search\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <h5>Count</h5>\r\n                                <div class=\"text-center\">\r\n                                    {{SelectedCount}}\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                                <div class=\"btn-group float-left form-control chk-custom-all\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Select All\">\r\n                                    <!-- <a class=\"btn btn-default selector\" title=\"select all\"><i class=\"glyphicon glyphicon-unchecked\"></i></a>-->\r\n                                    <div class=\"form-check form-check-inline mt4\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"availableJobSelectAll\" name=\"availableJobSelectAll\" id=\"ckb-list1-SelectAll\" value=\"selectAll\" (change)=\"toogleSelectAll('availableJob', $event.target.checked)\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item\" [ngClass]=\"{'active':availableJob.Job.IsSelected}\" *ngFor=\"let availableJob of availableJobs | startsWithJob : list1Search\" (click)=\"toggleSelect(availableJob);\"> {{availableJob.Job.Name}}</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"list-arrows col-sm-1 text-center\">\r\n                    <button class=\"btn btn-default btn-sm move-left\"  title=\"Shift to Left\" (click)=\"moveToLeft()\">\r\n                        <span class=\"glyphicon glyphicon-chevron-left\"></span>\r\n                    </button>\r\n                    \r\n                    <button class=\"btn btn-default btn-sm move-right\" title=\"Shift to Right\" (click)=\"moveToRight()\" >\r\n                        <span class=\"glyphicon glyphicon-chevron-right\"></span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"dual-list list-right col-7\">\r\n                    <div class=\"well\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 text-left\">\r\n                                <h4>Assigned Location(s)</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-9\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fa fa-search\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" name=\"searchAvailableJob\" [(ngModel)]=\"list2Search\" class=\"form-control\" placeholder=\"search\" />                                  <!--<input type=\"text\" name=\"searchAssignedJob\" [(ngModel)]=\"list2Search\" class=\"form-control\" placeholder=\"search\" />-->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"btn-group float-left form-control chk-custom-all\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Select All\">\r\n                                    <!-- <a class=\"btn btn-default selector\" title=\"select all\" (click)=\"toogleSelectAll('jobs2')\"><i class=\"glyphicon glyphicon-unchecked\"></i></a>-->\r\n                                    <div class=\"form-check form-check-inline mt4\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"assginedJobSelectAll\" name=\"assginedJobSelectAll\" id=\"ckb-list2-SelectAll\" value=\"selectAll\" (change)=\"toogleSelectAll('assignedJob', $event.target.checked)\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul class=\"list-group\">\r\n                            <li class=\"list-group-item\" [ngClass]=\"{'active':assignedJob.Job.IsSelected}\" *ngFor=\"let assignedJob of assignedJobs | startsWithJob : list2Search \">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-4\" (click)=\"toggleSelect(assignedJob);\">\r\n                                        <span>{{assignedJob.Job.Name}}</span>\r\n                                    </div>\r\n                                    <div class=\"col-7  trncate-text text-right\">\r\n                                        <span *ngIf=\"assignedJob.Job.Emails\">\r\n                                            <ng-container *ngFor=\"let item of assignedJob.Job.Emails; let isLast=last\">\r\n                                                {{item.Name}}{{isLast ? '' : ', '}}\r\n                                            </ng-container>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"col-1 text-right\">\r\n                                        <a href=\"javascript:void(0);\" id=\"edit-email\" data-toggle=\"modal\" data-target=\"#add-edit-email\" (click)=\"editEmail($event,assignedJob);\"><i class=\"fa fa-edit ml10\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Email\"></i> </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt15\">\r\n                <div class=\"col-sm-12 text-right\">\r\n                    <button (click)=\"_toggleOpened(false)\" class=\"btn btn-lg\" type=\"reset\">Cancel</button>\r\n                    <button class=\"ml15 btn btn-primary btn-lg\" (click)=\"SaveCarrier()\" type=\"submit\">Save</button>\r\n                    <button #btnOpenModal id=\"openfreightOrderModel\" type=\"button\" [hidden]=\"true\" data-toggle=\"modal\"\r\n                            data-target=\"#createFreightOrderModel\"></button>\r\n                </div>\r\n            </div>\r\n        </ng-sidebar>\r\n    </ng-sidebar-container>\r\n\r\n    <!--sidebar for region creation-->\r\n    <div class=\"row mt5 mb10\">\r\n        <div class=\"col-sm-9\">\r\n            <h4 class=\"pt0 pull-left\">Assigned Carriers</h4>\r\n            <a id=\"assignNewCarrier\" (click)=\"assignNewForm();\" class=\"fs18 pull-left ml20\">\r\n                <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Assign New</span>\r\n            </a>\r\n        </div>\r\n        <!--<div class=\"col-sm-3\">\r\n            <input type=\"text\" id=\"searchCarrier\" class=\"form-control input\" placeholder=\"Search Carriers\" [(ngModel)]=\"query\">\r\n        </div>-->\r\n        <div class=\"col-sm-3 text-right\">\r\n            <a id=\"BulkUpload\" data-toggle=\"modal\" (click)=\"bulkUpload()\" data-target=\"#upload-carrier-csv\" class=\"fs18 float-right ml20\">\r\n                <i class=\"fa fa-download fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Bulk Upload</span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row pr\" id=\"assignCarrierDetails\">\r\n        <div class=\"pa bg-white z-index5 loading-wrapper left0 top0\" *ngIf=\"IsLoading\">\r\n            <span class=\"spinner-dashboard pa\"></span>\r\n        </div>\r\n        <!--<div class=\"col-sm-12 text-center\" *ngIf=\"!carriers||carriers?.length == 0\">\r\n            <i class=\"fa fas fa-exclamation-triangle opacity8\"></i>\r\n            <label class=\"fs15 color-maroon\">No carriers assigned </label>\r\n        </div>-->\r\n\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div id=\"carrierjobassignment-grid\" class=\"table-responsive\">\r\n                            <table id=\"carrier-datatable\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Carrier Name</th>\r\n                                        <th>Locations</th>\r\n                                        <th>No. of Locations Assigned</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let carrier of assignedCarrierList\">\r\n                                        <!--<td>{{carrier.CarrierCompanyName}}</td>\r\n                                        <td>{{carrier.AssignedLocations}}</td>\r\n                                        <td>{{carrier.LocationCount}}</td>-->\r\n                                        <td>{{carrier.Carrier.Name}}</td>\r\n                                        <td>{{carrier.assignedLocations}}</td>\r\n                                        <td>{{carrier.Jobs.length}}</td>\r\n                                        <td class=\"text-center\">\r\n                                            <button (click)=\"editForm(carrier)\" type=\"button\" class=\"btn btn-link\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                            <a class=\"fa fa-trash-alt color-maroon ml10 mr15\" mwlConfirmationPopover\r\n                                               [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                               (cancel)=\"cancelClicked = true\" (confirm)=\"removeAssignedCarrier(carrier)\"></a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--freight order confimation modal-->\r\n    <div class=\"modal fade\" id=\"createFreightOrderModel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsDisplayLoader\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Pass Order</h4>\r\n                        <button #btnCloseModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\"\r\n                                aria-label=\"Close\">\r\n                            <i class=\"fa fa-close fs21\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12 mt10\">\r\n                            Do you want to pass the existing Order(s) to the assigned carrier?\r\n                        </div>\r\n                    </div>\r\n                    <div class=row>\r\n                        <div class=\"col-sm-12 text-right mt10\">\r\n                            <button type=\"button\" id=\"btnDismissCreateFreightOrder\" class=\"btn btn-lg\"\r\n                                    (click)=\"IscreateFreightOrders(false)\">\r\n                                No\r\n                            </button>\r\n                            <button type=\"button\" id=\"btnCreateFreightOrder\" class=\"btn btn-lg btn-primary\"\r\n                                    (click)=\"IscreateFreightOrders(true)\">\r\n                                Yes\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal fade\" id=\"upload-carrier-csv\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog \" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Carrier CSV</h4>\r\n                        <button  #btnCloseBulkModal type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\" style=\"font-size:35px\">&times;</span></button>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <span class=\"fa fa-download mr10 mt10\"></span>\r\n                            <a href=\"/Content/Bulk_upload_template_Carrier_Assignment.csv\" class=\"mb5 btn-download\">Download Template</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt10\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <h2>\r\n                                <label for=\"csvFile\" class=\"btn btn-primary ml0\">\r\n                                    <input id=\"csvFile\" name=\"csvFile\" [(ngModel)]=\"selectedFile\" (change)=\"onFileChange($event)\" class=\"bulkElements full-width\" type=\"file\" accept=\".csv\" />\r\n                                </label>\r\n                            </h2>\r\n                            <div class=\"alert alert-warning fs12\">\r\n                                Note : Please use the .csv template for uploading your Carrier details. Follow the required and optional field guidelines.\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"selectInputEmail1\" class=\"d-block\">\r\n                                            *\r\n                                            Do you want to pass the existing Order(s) to the assigned carrier?\r\n                                        </label>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" [(ngModel)]=\"IsCreateFreightOrder\" id=\"inlineRadio1\" value=\"1\">\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio1\">Yes</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" [(ngModel)]=\"IsCreateFreightOrder\" id=\"inlineRadio2\" value=\"0\">\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio2\">No</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 text-right pb0 fs12\">\r\n                                    <input type=\"submit\" [disabled]=\"IsCreateFreightOrder == null\" value=\"Upload\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"add-edit-email\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header modal-header pt5 pb0\">\r\n                    <h4 class=\"float-left\">Add/Edit Email</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 b-dashed\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"selectInputEmail1\">Select Email </label>\r\n                                <ng-multiselect-dropdown id=\"selectInputEmail1\" [placeholder]=\"'Select Email'\" [(ngModel)]=\"editEmailDetails\" [settings]=\"multiDropdownSettings\" [data]=\"getCarrierEmailsById()\"> </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <!-- <input type=\"submit\" value=\"Save\" class=\"btn btn-primary bulkElements\" (click)=\"onFileUpload()\" id=\"uploadBulkCarrier\" />-->\r\n                    <button type=\"button\" (click)=\"SaveJobEmail()\" data-dismiss=\"modal\" class=\"btn btn-primary\">Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CarrierCompaniesComponent } from '../carrier-companies.component';\r\n\r\n\r\n\r\nconst routeCarrierCompanies: Routes = [\r\n    {\r\n        path: '', component: CarrierCompaniesComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: CarrierCompaniesComponent,\r\n                data: {\r\n                    title: 'Carrier Companies'\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeCarrierCompanies)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class CarrierCompaniesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CarrierCompaniesRoutingModule } from './carrier-companies-routing.module';\r\nimport { CarrierCompaniesComponent } from '../carrier-companies.component';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        CarrierCompaniesComponent,\r\n    ],\r\n    imports: [\r\n        CarrierCompaniesRoutingModule,\r\n        SharedModule,\r\n        DataTablesModule,\r\n        DirectiveModule\r\n    ]\r\n})\r\nexport class CarrierCompaniesModule { }\r\n"]}