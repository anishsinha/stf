{"version":3,"sources":["webpack:///src/app/carrier/delivery-request-report/delivery-request-report.component.ts","webpack:///src/app/carrier/delivery-request-report/delivery-request-report.component.html","webpack:///src/app/carrier/delivery-request-report/delivery-request-report.module.ts"],"names":["DeliveryRequestReportComponent","carrierServ","LocationDdlSettings","RegionDdlSettings","Regions","Locations","SelectedRegions","SelectedLocations","DRReportsData","unchangedDRReportsData","IsLoading","SelectedRegionsForFilter","SelectedLocationsForFilter","dtDRGridOptions","dtDRReportTrigger","exportColumns","columns","DRcolumnsDetails","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","title","name","data","pagingType","pageLength","lengthMenu","dom","autoWidth","fixedHeader","search","destroy","order","buttons","extend","exportOptions","orientation","getDRReportFilters","subscribe","undefined","regionsIds","locationIds","SelectedRegionId","forEach","res","push","Id","join","SelectedLocationId","getDRReportGridData","next","unsubscribe","event","filterType","filterDRReportData","datatableElement","dtInstance","then","inputData","RegionIds","LocationIds","FromDate","ToDate","datatableRerender","selectedRegions","selectedLocations","filteredData","filteredDataByRegions","filteredDataByLocations","length","i","RegionId","TfxJobId","OnFilterSelect","onFilterDeselect","onFilterSelectAll","onFilterDeselectAll","selector","templateUrl","styleUrls","routesDrReport","path","component","DeliveryRequestReportModule","forChild","declarations","imports"],"mappings":";;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0D4C;;AAA6C;;AAAyD;;;;;;AACtG;;AAAkC;;AAAwD;;;;;;;;;;;;;;;AAftG;;AACI;;AAKI;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAe;;AACnB;;AAAK;;AAAiB;;AACtB;;AAAK;;AAAoB;;AACzB;;AAAI;;AAAwF;;AAC5F;;AAAK;;AAAe;;AACpB;;AAAI;;AAAkB;;AACtB;;AAAK;;AACD;;AACA;;AACJ;;AACJ;;AACJ;;;;;;AAjBQ;;AAAA;;AAKI;;AAAA;;AACA;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;AACK;;AAAA;;AACA;;AAAA;;;;;;AAhBtB;;AACI;;AAmBJ;;;;;;AAnBkB;;AAAA;;;;;;AAiC9C;;AACI;;AACJ;;;;QDnEaA,8B;AA+BT,8CAAoBC,WAApB,EAAiD;AAAA;;AAA7B,aAAAA,WAAA,GAAAA,WAAA,CAA6B,CA7BjD;;AACO,aAAAC,mBAAA,GAA2B,EAA3B;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,OAAA,GAA6B,EAA7B;AACA,aAAAC,SAAA,GAA6B,EAA7B;AACA,aAAAC,eAAA,GAAkB,EAAlB;AACA,aAAAC,iBAAA,GAAoB,EAApB,CAuB0C,CArBjD;;AACO,aAAAC,aAAA,GAAkD,EAAlD;AACA,aAAAC,sBAAA,GAA2D,EAA3D;AAKA,aAAAC,SAAA,GAAqB,KAArB,CAc0C,CAZjD;;AACO,aAAAC,wBAAA,GAA8C,EAA9C;AACA,aAAAC,0BAAA,GAAgD,EAAhD;AAMA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAkC,IAAI,4CAAJ,EAAlC;AAG6C;;;;eAEpD,oBAAW;AAAA;;AAEP;AACA;AAEA;AACA;AACA,cAAIC,aAAa,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAApB;AACA,cAAIC,gBAAgB,GAAG,EAAvB;AAEA,eAAKf,mBAAL,GAA2B;AACvBgB,2BAAe,EAAE,KADM;AAEvBC,mBAAO,EAAE,IAFc;AAGvBC,qBAAS,EAAE,MAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAUA,eAAKtB,iBAAL,GAAyB;AACrBe,2BAAe,EAAE,KADI;AAErBC,mBAAO,EAAE,IAFY;AAGrBC,qBAAS,EAAE,MAHU;AAIrBC,yBAAa,EAAE,YAJM;AAKrBC,2BAAe,EAAE,cALI;AAMrBC,0BAAc,EAAE,CANK;AAOrBC,6BAAiB,EAAE,IAPE;AAQrBC,0BAAc,EAAE;AARK,WAAzB;AAUAR,0BAAgB,GAAG,CACf;AAAES,iBAAK,EAAE,UAAT;AAAqBC,gBAAI,EAAE,UAA3B;AAAuCC,gBAAI,EAAE,UAA7C;AAAyD,yBAAa;AAAtE,WADe,EAEf;AAAEF,iBAAK,EAAE,QAAT;AAAmBC,gBAAI,EAAE,YAAzB;AAAuCC,gBAAI,EAAE,YAA7C;AAA2D,yBAAa;AAAxE,WAFe,EAGf;AAAEF,iBAAK,EAAE,UAAT;AAAqBC,gBAAI,EAAE,cAA3B;AAA2CC,gBAAI,EAAE,cAAjD;AAAiE,yBAAa;AAA9E,WAHe,EAIf;AAAEF,iBAAK,EAAE,kBAAT;AAA6BC,gBAAI,EAAE,iBAAnC;AAAsDC,gBAAI,EAAE,kBAA5D;AAAgF,yBAAa;AAA7F,WAJe,EAKf;AAAEF,iBAAK,EAAE,SAAT;AAAoBC,gBAAI,EAAE,aAA1B;AAAyCC,gBAAI,EAAE,aAA/C;AAA8D,yBAAa;AAA3E,WALe,EAMf;AAAEF,iBAAK,EAAE,eAAT;AAA0BC,gBAAI,EAAE,cAAhC;AAAgDC,gBAAI,EAAE,mBAAtD;AAA2E,yBAAa;AAAxF,WANe,EAOf;AAAEF,iBAAK,EAAE,YAAT;AAAuBC,gBAAI,EAAE,YAA7B;AAA2CC,gBAAI,EAAE,YAAjD;AAA+D,yBAAa;AAA5E,WAPe,EAQf;AAAEF,iBAAK,EAAE,OAAT;AAAkBC,gBAAI,EAAE,OAAxB;AAAiCC,gBAAI,EAAE,UAAvC;AAAmD,yBAAa;AAAhE,WARe,CAAnB;AAWA,eAAKf,eAAL,GAAuB;AACnBgB,sBAAU,EAAE,oBADO;AAEnBC,sBAAU,EAAE,EAFO;AAGnBC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB,CAHO;AAInB;AACAC,eAAG,EAAE,0BALc;AAMnBC,qBAAS,EAAE,IANQ;AAOnBC,uBAAW,EAAE,IAPM;AAQnB;AACAC,kBAAM,EAAE,IATW;AAUnBC,mBAAO,EAAE,IAVU;AAWnBC,iBAAK,EAAE,EAXY;AAYnBC,mBAAO,EAAE,CACL;AAAEC,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkBC,2BAAa,EAAEzB;AAAjC,aAFK,EAGL;AAAEwB,oBAAM,EAAE,KAAV;AAAiBb,mBAAK,EAAE,yBAAxB;AAAmDc,2BAAa,EAAEzB;AAAlE,aAHK,EAIL;AAAEwB,oBAAM,EAAE,KAAV;AAAiBb,mBAAK,EAAE,yBAAxB;AAAmDe,yBAAW,EAAE,WAAhE;AAA6ED,2BAAa,EAAEzB;AAA5F,aAJK,EAKL;AAAEwB,oBAAM,EAAE,OAAV;AAAmBC,2BAAa,EAAEzB;AAAlC,aALK;AAZU,WAAvB;AAqBA,eAAKL,SAAL,GAAiB,IAAjB;AACA,eAAKT,WAAL,CAAiByC,kBAAjB,GAAsCC,SAAtC,CAAgD,UAACf,IAAD,EAAmC;AAC/E,gBAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAIgB,SAA5B,EAAuC;AAEnC,kBAAIC,UAAU,GAAG,EAAjB;AACA,kBAAIC,WAAW,GAAG,EAAlB;AACA,mBAAI,CAAC1C,OAAL,GAAewB,IAAI,CAACxB,OAApB;AACA,mBAAI,CAACC,SAAL,GAAiBuB,IAAI,CAACvB,SAAtB;AAEA,mBAAI,CAAC0C,gBAAL,GAAwB,EAAxB;;AACA,mBAAI,CAAC3C,OAAL,CAAa4C,OAAb,CAAqB,UAAAC,GAAG,EAAI;AAAEJ,0BAAU,CAACK,IAAX,CAAgBD,GAAG,CAACE,EAApB;AAAyB,eAAvD;;AACA,mBAAI,CAACJ,gBAAL,GAAwBF,UAAU,CAACO,IAAX,EAAxB;AAEA,mBAAI,CAACC,kBAAL,GAA0B,EAA1B;;AACA,mBAAI,CAAChD,SAAL,CAAe2C,OAAf,CAAuB,UAAAC,GAAG,EAAI;AAAEH,2BAAW,CAACI,IAAZ,CAAiBD,GAAG,CAACE,EAArB;AAA0B,eAA1D;;AACA,mBAAI,CAACE,kBAAL,GAA0BP,WAAW,CAACM,IAAZ,EAA1B;;AACA,mBAAI,CAACE,mBAAL;AAEH;AACJ,WAlBD;AAmBA,eAAK5C,SAAL,GAAiB,KAAjB;AAEH;;;eAGD,2BAAe;AACX,eAAKI,iBAAL,CAAuByC,IAAvB;AAEH;;;eAED,uBAAW;AACP,eAAKzC,iBAAL,CAAuB0C,WAAvB;AACH;;;eAEM,wBAAeC,KAAf,EAA2BC,UAA3B,EAA+C;AAClD,cAAIb,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,EAAlB;;AACA,cAAIY,UAAU,KAAK,QAAnB,EAA6B;AAEzB,iBAAKX,gBAAL,GAAwB,EAAxB;AACA,iBAAKzC,eAAL,CAAqB0C,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAAEJ,wBAAU,CAACK,IAAX,CAAgBD,GAAG,CAACE,EAApB;AAAyB,aAA/D;AACA,iBAAKJ,gBAAL,GAAwBF,UAAU,CAACO,IAAX,EAAxB;AACH;;AACD,cAAIM,UAAU,KAAK,UAAnB,EAA+B;AAE3B,iBAAKL,kBAAL,GAA0B,EAA1B;AACA,iBAAK9C,iBAAL,CAAuByC,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AAAEH,yBAAW,CAACI,IAAZ,CAAiBD,GAAG,CAACE,EAArB;AAA0B,aAAlE;AACA,iBAAKE,kBAAL,GAA0BP,WAAW,CAACM,IAAZ,EAA1B;AACH;;AACD,eAAKO,kBAAL,CAAwB,KAAKrD,eAA7B,EAA8C,KAAKC,iBAAnD;AAGH;;;eAEM,2BAAkBkD,KAAlB,EAA8BC,UAA9B,EAAkD;AACrD,cAAIb,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,EAAlB;;AACA,cAAIY,UAAU,KAAK,QAAnB,EAA6B;AACzB,iBAAKX,gBAAL,GAAwB,EAAxB;AACA,iBAAKzC,eAAL,GAAuB,KAAKF,OAA5B;AACA,iBAAKE,eAAL,CAAqB0C,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAAEJ,wBAAU,CAACK,IAAX,CAAgBD,GAAG,CAACE,EAApB;AAAyB,aAA/D;AACA,iBAAKJ,gBAAL,GAAwBF,UAAU,CAACO,IAAX,EAAxB;AACH;;AACD,cAAIM,UAAU,KAAK,UAAnB,EAA+B;AAC3B,iBAAKL,kBAAL,GAA0B,EAA1B;AACA,iBAAK9C,iBAAL,GAAyB,KAAKF,SAA9B;AACA,iBAAKE,iBAAL,CAAuByC,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AAAEH,yBAAW,CAACI,IAAZ,CAAiBD,GAAG,CAACE,EAArB;AAA0B,aAAlE;AACA,iBAAKE,kBAAL,GAA0BP,WAAW,CAACM,IAAZ,EAA1B;AACH;;AACD,eAAKO,kBAAL,CAAwB,KAAKrD,eAA7B,EAA8C,KAAKC,iBAAnD;AACH;;;eAEM,0BAAiBkD,KAAjB,EAA6BC,UAA7B,EAAiD;AACpD,cAAIb,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,EAAlB;;AACA,cAAIY,UAAU,KAAK,QAAnB,EAA6B;AACzB,iBAAKX,gBAAL,GAAwB,EAAxB;AACA,iBAAKzC,eAAL,CAAqB0C,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAAEJ,wBAAU,CAACK,IAAX,CAAgBD,GAAG,CAACE,EAApB;AAAyB,aAA/D;AACA,iBAAKJ,gBAAL,GAAwBF,UAAU,CAACO,IAAX,EAAxB;AACH;;AACD,cAAIM,UAAU,KAAK,UAAnB,EAA+B;AAC3B,iBAAKL,kBAAL,GAA0B,EAA1B;AACA,iBAAK9C,iBAAL,CAAuByC,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AAAEH,yBAAW,CAACI,IAAZ,CAAiBD,GAAG,CAACE,EAArB;AAA0B,aAAlE;AACA,iBAAKE,kBAAL,GAA0BP,WAAW,CAACM,IAAZ,EAA1B;AACH;;AACD,eAAKO,kBAAL,CAAwB,KAAKrD,eAA7B,EAA8C,KAAKC,iBAAnD;AACH;;;eAEM,6BAAoBkD,KAApB,EAAgCC,UAAhC,EAAoD;AACvD,cAAIb,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,EAAlB;;AACA,cAAIY,UAAU,KAAK,QAAnB,EAA6B;AACzB,iBAAKX,gBAAL,GAAwB,EAAxB;AACA,iBAAKzC,eAAL,GAAuB,KAAKF,OAA5B;AACA,iBAAKE,eAAL,CAAqB0C,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAAEJ,wBAAU,CAACK,IAAX,CAAgBD,GAAG,CAACE,EAApB;AAAyB,aAA/D;AACA,iBAAKJ,gBAAL,GAAwBF,UAAU,CAACO,IAAX,EAAxB;AACH;;AACD,cAAIM,UAAU,KAAK,UAAnB,EAA+B;AAE3B,iBAAKL,kBAAL,GAA0B,EAA1B;AACA,iBAAK9C,iBAAL,GAAyB,KAAKF,SAA9B;AACA,iBAAKE,iBAAL,CAAuByC,OAAvB,CAA+B,UAAAC,GAAG,EAAI;AAAEH,yBAAW,CAACI,IAAZ,CAAiBD,GAAG,CAACE,EAArB;AAA0B,aAAlE;AACA,iBAAKE,kBAAL,GAA0BP,WAAW,CAACM,IAAZ,EAA1B;AACH;;AACD,eAAKO,kBAAL,CAAwB,KAAKrD,eAA7B,EAA8C,KAAKC,iBAAnD;AACH;;;eAGO,6BAAiB;AAAA;;AACrB,cAAI,KAAKqD,gBAAL,CAAsBC,UAA1B,EAAsC;AAClC,iBAAKD,gBAAL,CAAsBC,UAAtB,CAAiCC,IAAjC,CAAsC,UAACD,UAAD,EAAgC;AAClEA,wBAAU,CAACzB,OAAX;;AACA,oBAAI,CAACtB,iBAAL,CAAuByC,IAAvB;AACH,aAHD;AAIH;AACJ;;;eAGM,+BAAsB;AAAA;;AACzB,eAAK7C,SAAL,GAAiB,IAAjB;AACA,cAAIqD,SAAS,GAAG,IAAI,2GAAJ,EAAhB;AACAA,mBAAS,CAACC,SAAV,GAAsB,KAAKjB,gBAA3B;AACAgB,mBAAS,CAACE,WAAV,GAAwB,KAAKZ,kBAA7B;AACAU,mBAAS,CAACG,QAAV,GAAqB,EAArB;AACAH,mBAAS,CAACI,MAAV,GAAmB,EAAnB;AACA,eAAKlE,WAAL,CAAiBqD,mBAAjB,CAAqCS,SAArC,EAAgDpB,SAAhD,CAA0D,UAACf,IAAD,EAA4C;AAClG,kBAAI,CAACnB,sBAAL,GAA8BmB,IAA9B;AACA,kBAAI,CAACpB,aAAL,GAAqBoB,IAArB;AACA,kBAAI,CAAClB,SAAL,GAAiB,KAAjB;;AACA,kBAAI,CAAC0D,iBAAL;AACH,WALD;AAMH;;;eAEM,4BAAmBC,eAAnB,EAA2CC,iBAA3C,EAAqE;AACxE,eAAK5D,SAAL,GAAiB,IAAjB;AACA,cAAI6D,YAAY,GAAG,EAAnB;AACA,cAAIC,qBAAqB,GAAG,EAA5B;AACC,cAAIC,uBAAuB,GAAG,EAA9B;;AACD,cAAIJ,eAAe,IAAI,IAAnB,IAA2BA,eAAe,IAAIzB,SAA9C,IAA2DyB,eAAe,CAACK,MAAhB,IAA0B,CAAzF,EAA4F;AACxFL,2BAAe,GAAG,KAAKjE,OAAvB;AACH;;AACD,cAAIkE,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,IAAI1B,SAAlD,IAA+D0B,iBAAiB,CAACI,MAAlB,IAA4B,CAA/F,EAAkG;AAC9FJ,6BAAiB,GAAG,KAAKjE,SAAzB;AACH;;AAED,eAAKI,sBAAL,CAA4BuC,OAA5B,CAAoC,UAAUpB,IAAV,EAAgB;AAChD,gBAAIyC,eAAe,IAAI,IAAnB,IAA2BA,eAAe,IAAIzB,SAA9C,IAA2DyB,eAAe,CAACK,MAAhB,GAAyB,CAAxF,EAA2F;AACvF,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,eAAe,CAACK,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC7C,oBAAIN,eAAe,CAACM,CAAD,CAAf,CAAmBxB,EAAnB,IAAyBvB,IAAI,CAACgD,QAAlC,EAA4C;AACxCJ,uCAAqB,CAACtB,IAAtB,CAA2BtB,IAA3B;AAEH;AACJ;AACJ;AACJ,WATD;;AAWA,cAAI4C,qBAAqB,IAAI,IAAzB,IAAiCA,qBAAqB,IAAI5B,SAA1D,IAAuE4B,qBAAqB,CAACE,MAAtB,GAA+B,CAA1G,EAA6G;AAEzGF,iCAAqB,CAACxB,OAAtB,CAA8B,UAAUpB,IAAV,EAAgB;AACzC,kBAAI0C,iBAAiB,IAAI,IAArB,IAA6BA,iBAAiB,IAAI1B,SAAlD,IAA+D0B,iBAAiB,CAACI,MAAlB,GAA2B,CAA9F,EAAiG;AAC7F,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,iBAAiB,CAACI,MAAtC,EAA8CC,CAAC,EAA/C,EAAmD;AAC/C,sBAAIL,iBAAiB,CAACK,CAAD,CAAjB,CAAqBxB,EAArB,IAA2BvB,IAAI,CAACiD,QAApC,EAA8C;AAC1CJ,2CAAuB,CAACvB,IAAxB,CAA6BtB,IAA7B;AACH;AACJ;AAEJ;AACL,aATD;AAUA,iBAAKpB,aAAL,GAAqBiE,uBAArB;AAEH,WAdD,MAeK;AACD,iBAAKjE,aAAL,GAAqBgE,qBAArB;AACH;;AAED,eAAKJ,iBAAL;AACA,eAAK1D,SAAL,GAAiB,KAAjB;AACH;;;;;;;uBAhRQV,8B,EAA8B,uJ;AAAA,K;;;YAA9BA,8B;AAA8B,kD;AAAA;AAAA;oEA0B5B,qE,EAAkB,I;;;;;;;;;;;;;;ACtCjC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAyB;AAAA;AAAA,aAA6B,UAA7B,EAA6B;AAAA,mBAEjB,IAAA8E,cAAA,SAAsB,QAAtB,CAFiB;AAEc,WAF3C,EAA6B,YAA7B,EAA6B;AAAA,mBAE8B,IAAAC,gBAAA,SAAwB,QAAxB,CAF9B;AAE+D,WAF5F,EAA6B,aAA7B,EAA6B;AAAA,mBAEgF,IAAAC,iBAAA,SAAyB,QAAzB,CAFhF;AAEkH,WAF/I,EAA6B,eAA7B,EAA6B;AAAA,mBAEqI,IAAAC,mBAAA,SAA2B,QAA3B,CAFrI;AAEyK,WAFtM;;AAGzB;;AACJ;;AACA;;AACI;;AAAyB;AAAA;AAAA,aAA+B,UAA/B,EAA+B;AAAA,mBAEnB,IAAAH,cAAA,SAAsB,UAAtB,CAFmB;AAEc,WAF7C,EAA+B,YAA/B,EAA+B;AAAA,mBAE8B,IAAAC,gBAAA,SAAwB,UAAxB,CAF9B;AAEiE,WAFhG,EAA+B,aAA/B,EAA+B;AAAA,mBAEkF,IAAAC,iBAAA,SAAyB,UAAzB,CAFlF;AAEsH,WAFrJ,EAA+B,eAA/B,EAA+B;AAAA,mBAEyI,IAAAC,mBAAA,SAA2B,UAA3B,CAFzI;AAE+K,WAF9M;;AAGzB;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAGA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA0B;;AAAM;;AAChC;;AAAwB;;AAAQ;;AAChC;;AAAqB;;AAAU;;AAC/B;;AAA4B;;AAAQ;;AACpC;;AAA+B;;AAAgB;;AAC/C;;AAAoB;;AAAK;;AACzB;;AAA2B;;AAAO;;AAClC;;AAA4B;;AAAa;;AAG7C;;AACJ;;AACA;;AA0BJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;;;AAxE6C;;AAAA,mGAA6B,UAA7B,EAA6B,qBAA7B,EAA6B,aAA7B,EAA6B,eAA7B,EAA6B,MAA7B,EAA6B,WAA7B;;AAMA;;AAAA,qGAA+B,UAA/B,EAA+B,uBAA/B,EAA+B,aAA/B,EAA+B,iBAA/B,EAA+B,MAA/B,EAA+B,aAA/B;;AAiByB;;AAAA,qGAA6B,WAA7B,EAA6B,qBAA7B;;AAenC;;AAAA;;AAkCe;;AAAA;;;;;;;;;sEDjErCjF,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTkF,kBAAQ,EAAE,6BADD;AAETC,qBAAW,EAAE,0CAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAKgC,Q;;;;;;gBA0BtC,uD;iBAAU,qE;;;;;;;;;;;;AEtCf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,cAAc,GAAW,CAC3B;AACIC,UAAI,EAAE,EADV;AAEIC,eAAS,EAAE;AAFf,KAD2B,CAA/B;;QAiBaC,2B;;;;;YAAAA;;;;yBAAAA,2B;AAA2B,O;AAAA,gBAR7B,CACL,4DADK,EAEL,0EAFK,EAGL,gFAHK,EAIL,mEAJK,EAKL,6DAAaC,QAAb,CAAsBJ,cAAtB,CALK,CAQ6B;;;;0HAA3BG,2B,EAA2B;AAAA,uBATvB,iGASuB;AATO,kBAEzC,4DAFyC,EAGzC,0EAHyC,EAIzC,gFAJyC,EAKzC,mEALyC,EAKzB,4DALyB;AASP,O;AAJlB,K;;;;;sEAITA,2B,EAA2B;cAVvC,sDAUuC;eAV9B;AACRE,sBAAY,EAAE,CAAC,iGAAD,CADN;AAERC,iBAAO,EAAE,CACL,4DADK,EAEL,0EAFK,EAGL,gFAHK,EAIL,mEAJK,EAKL,6DAAaF,QAAb,CAAsBJ,cAAtB,CALK;AAFD,S;AAU8B,Q","file":"carrier-delivery-request-report-delivery-request-report-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChildren, QueryList, ViewChild } from '@angular/core';\r\nimport { DistatcherRegionModel, DRReportFilterViewModel, DeliveryRequestReportGridModel, DRReportFilterInputViewModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { CarrierService} from 'src/app/carrier/service/carrier.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { DataTablesResponse } from 'src/app/shared/models/DataTable-models';\r\nimport { Subject } from 'rxjs';\r\n@Component({\r\n  selector: 'app-delivery-request-report',\r\n  templateUrl: './delivery-request-report.component.html',\r\n  styleUrls: ['./delivery-request-report.component.css']\r\n})\r\nexport class DeliveryRequestReportComponent implements OnInit {\r\n\r\n    //filter and dropdown variables\r\n    public LocationDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public Regions: DropdownItemExt[] = [];\r\n    public Locations:  DropdownItem[] = [];\r\n    public SelectedRegions = [];\r\n    public SelectedLocations = [];\r\n\r\n    // data binding variables\r\n    public DRReportsData: DeliveryRequestReportGridModel[] = [];\r\n    public unchangedDRReportsData: DeliveryRequestReportGridModel[] = [];\r\n\r\n    public SelectedRegionId: string;\r\n    public SelectedLocationId: string;\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    // using these two values in deselect as ngModel not updating after deselect event\r\n    public SelectedRegionsForFilter: DropdownItemExt[] = []; \r\n    public SelectedLocationsForFilter: DropdownItemExt[] = [];\r\n\r\n\r\n  \r\n    //grid config varibales \r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public dtDRGridOptions: any = {};\r\n    public dtDRReportTrigger: Subject<any> = new Subject();\r\n    \r\n\r\n    constructor(private carrierServ: CarrierService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        // this.ToDate = this.TodaysDate;\r\n        // this.FromDate = moment(this.TodaysDate).add('day', -1).format('MM/DD/YYYY');\r\n\r\n        //this.ToDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        //this.FromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : moment(this.TodaysDate).add('day', -1).format('MM/DD/YYYY');\r\n        let exportColumns = { columns: ':visible' };\r\n        let DRcolumnsDetails = [];\r\n\r\n        this.LocationDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.RegionDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        DRcolumnsDetails = [\r\n            { title: 'Location', name: 'Location', data: 'Location', \"autoWidth\": true },\r\n            { title: 'Region', name: 'RegionName', data: 'RegionName', \"autoWidth\": true },\r\n            { title: 'Customer', name: 'CustomerName', data: 'CustomerName', \"autoWidth\": true },\r\n            { title: 'Customer BrandID', name: 'CustomerBrandID', data: 'Customer BrandID', \"autoWidth\": true },\r\n            { title: 'Product', name: 'ProductType', data: 'ProductType', \"autoWidth\": true },\r\n            { title: 'Requested Qty', name: 'RequestedQty', data: 'RequestedQuantity', \"autoWidth\": true },\r\n            { title: 'LocationId', name: 'LocationId', data: 'LocationId', \"autoWidth\": true },\r\n            { title: 'Order', name: 'Order', data: 'PoNumber', \"autoWidth\": true }\r\n        ];\r\n\r\n        this.dtDRGridOptions = {\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\r\n            //searching: true,\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            autoWidth: true,\r\n            fixedHeader: true,\r\n            //ordering: false,\r\n            search: true,\r\n            destroy: true,\r\n            order: [],\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Delivery Request Report', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Delivery Request Report', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ]\r\n        };\r\n\r\n        this.IsLoading = true;\r\n        this.carrierServ.getDRReportFilters().subscribe((data: DRReportFilterViewModel) => {\r\n            if (data != null && data != undefined) {\r\n                \r\n                let regionsIds = [];\r\n                let locationIds = [];\r\n                this.Regions = data.Regions;\r\n                this.Locations = data.Locations;\r\n\r\n                this.SelectedRegionId = '';\r\n                this.Regions.forEach(res => { regionsIds.push(res.Id) });\r\n                this.SelectedRegionId = regionsIds.join();\r\n                \r\n                this.SelectedLocationId = '';\r\n                this.Locations.forEach(res => { locationIds.push(res.Id) });\r\n                this.SelectedLocationId = locationIds.join();\r\n                this.getDRReportGridData();\r\n                \r\n            }\r\n        });\r\n        this.IsLoading = false;\r\n        \r\n    }\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dtDRReportTrigger.next();\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dtDRReportTrigger.unsubscribe();\r\n    }\r\n\r\n    public OnFilterSelect(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();           \r\n        }\r\n        if (filterType === 'location') {\r\n\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n        \r\n\r\n    }\r\n\r\n    public onFilterSelectAll(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions = this.Regions;\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations = this.Locations;\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n    public onFilterDeselect(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n    public onFilterDeselectAll(event: any, filterType: string) {\r\n        let regionsIds = [];\r\n        let locationIds = [];\r\n        if (filterType === 'region') {\r\n            this.SelectedRegionId = '';\r\n            this.SelectedRegions = this.Regions;\r\n            this.SelectedRegions.forEach(res => { regionsIds.push(res.Id) });\r\n            this.SelectedRegionId = regionsIds.join();\r\n        }\r\n        if (filterType === 'location') {\r\n\r\n            this.SelectedLocationId = '';\r\n            this.SelectedLocations = this.Locations;\r\n            this.SelectedLocations.forEach(res => { locationIds.push(res.Id) });\r\n            this.SelectedLocationId = locationIds.join();\r\n        }\r\n        this.filterDRReportData(this.SelectedRegions, this.SelectedLocations);\r\n    }\r\n\r\n\r\n    private datatableRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtDRReportTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public getDRReportGridData() {\r\n        this.IsLoading = true;\r\n        let inputData = new DRReportFilterInputViewModel;\r\n        inputData.RegionIds = this.SelectedRegionId;\r\n        inputData.LocationIds = this.SelectedLocationId;\r\n        inputData.FromDate = '';\r\n        inputData.ToDate = '';\r\n        this.carrierServ.getDRReportGridData(inputData).subscribe((data: DeliveryRequestReportGridModel[]) => {\r\n            this.unchangedDRReportsData = data;\r\n            this.DRReportsData = data;\r\n            this.IsLoading = false;\r\n            this.datatableRerender();\r\n        });\r\n    }\r\n\r\n    public filterDRReportData(selectedRegions: any[], selectedLocations: any[]) {\r\n        this.IsLoading = true;\r\n        let filteredData = [] as DeliveryRequestReportGridModel[];\r\n        let filteredDataByRegions = [] as DeliveryRequestReportGridModel[];\r\n         let filteredDataByLocations = [] as DeliveryRequestReportGridModel[];\r\n        if (selectedRegions == null || selectedRegions == undefined || selectedRegions.length == 0) {\r\n            selectedRegions = this.Regions;\r\n        }\r\n        if (selectedLocations == null || selectedLocations == undefined || selectedLocations.length == 0) {\r\n            selectedLocations = this.Locations;\r\n        }\r\n\r\n        this.unchangedDRReportsData.forEach(function (data) {\r\n            if (selectedRegions != null && selectedRegions != undefined && selectedRegions.length > 0) {\r\n                for (var i = 0; i < selectedRegions.length; i++) {\r\n                    if (selectedRegions[i].Id == data.RegionId) {\r\n                        filteredDataByRegions.push(data);\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (filteredDataByRegions != null && filteredDataByRegions != undefined && filteredDataByRegions.length > 0) {\r\n           \r\n            filteredDataByRegions.forEach(function (data) {\r\n                 if (selectedLocations != null && selectedLocations != undefined && selectedLocations.length > 0) {\r\n                     for (var i = 0; i < selectedLocations.length; i++) {\r\n                         if (selectedLocations[i].Id == data.TfxJobId) {\r\n                             filteredDataByLocations.push(data);\r\n                         }\r\n                     }\r\n                     \r\n                 }               \r\n            });\r\n            this.DRReportsData = filteredDataByLocations;\r\n            \r\n        }\r\n        else {\r\n            this.DRReportsData = filteredDataByRegions;\r\n        }\r\n\r\n        this.datatableRerender();\r\n        this.IsLoading = false;      \r\n    }\r\n    \r\n}\r\n","<div class=\"col-sm-8 sticky-header-wmd\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\"\r\n                                             [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Region'\" [data]=\"Regions\"\r\n                                             (onSelect)=\"OnFilterSelect($event,'region')\" (onDeSelect)=\"onFilterDeselect($event,'region')\" (onSelectAll)=\"onFilterSelectAll($event,'region')\" (onDeSelectAll)=\"onFilterDeselectAll($event,'region')\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedLocations\"\r\n                                             [settings]=\"LocationDdlSettings\" [placeholder]=\"'Select Location'\" [data]=\"Locations\"\r\n                                             (onSelect)=\"OnFilterSelect($event,'location')\" (onDeSelect)=\"onFilterDeselect($event,'location')\" (onSelectAll)=\"onFilterSelectAll($event,'location')\" (onDeSelectAll)=\"onFilterDeselectAll($event,'location')\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div id=\"div-terminal-item-code\" class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" datatable [dtOptions]=\"dtDRGridOptions\" [dtTrigger]=\"dtDRReportTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"RegionName\">Region</th>\r\n                                    <th data-key=\"Location\">Location</th>\r\n                                    <th data-key=\"LocId\">LocationId</th>\r\n                                    <th data-key=\"CustomerName\">Customer</th>\r\n                                    <th data-key=\"CustomerBrandID\">Customer BrandId</th>\r\n                                    <th data-ke=\"Order\">Order</th>\r\n                                    <th data-key=\"ProductType\">Product</th>\r\n                                    <th data-key=\"RequestedQty\">Requested Qty</th>\r\n\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"DRReportsData?.length > 0\">\r\n                                <ng-container *ngFor=\"let dr of DRReportsData\">\r\n                                    <tr [ngClass]=\"{\r\n                                           'bg_must_go':dr.Priority===1,\r\n                                           'bg_should_go':dr.Priority===2,\r\n                                           'bg_could_go':dr.Priority===3,\r\n                                           'bg_noDlr_go':dr.Priority===4}\">\r\n                                        <td>{{dr.RegionName}}</td>\r\n                                        <td>{{dr.Location}}</td>\r\n                                        <td> {{dr.LocationId}}</td>\r\n                                        <td> {{dr.CustomerName}} </td>\r\n                                        <td>{{((dr.CustomerBrandID == null) || (dr.CustomerBrandID == ''))?'--':dr.CustomerBrandID}}</td>\r\n                                        <td> {{dr.PoNumber}}</td>\r\n                                        <td>{{dr.ProductType}}</td>\r\n                                        <td> {{dr.RequestedQuantity+dr.UoM}}\r\n                                            <span *ngIf=\"dr.IsRecurringSchedule == true\"><i class=\"fas fa-sync color-black\" title=\"Recurring\"></i></span>\r\n                                            <span *ngIf=\"dr.IsAutoDR == true\"><i class=\"fas fa-magic ml10\" title=\"Auto-Generated\"></i></span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </tbody>\r\n                            <!--<tr *ngIf=\"DRReportsData == null || DRReportsData?.length == 0\">\r\n                                <td colspan=\"8\" class=\"text-center\">\r\n                                    No Data available\r\n                                </td>\r\n                            </tr>-->\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"IsLoading\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from 'src/app/modules/shared.module';\r\nimport { DirectiveModule } from 'src/app/modules/directive.module';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { DeliveryRequestReportComponent } from './delivery-request-report.component';\r\nconst routesDrReport: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: DeliveryRequestReportComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [DeliveryRequestReportComponent],\r\n  imports: [\r\n      CommonModule,\r\n      SharedModule,\r\n      DirectiveModule,\r\n      DataTablesModule,\r\n      RouterModule.forChild(routesDrReport)\r\n  ]\r\n})\r\nexport class DeliveryRequestReportModule { }\r\n"]}