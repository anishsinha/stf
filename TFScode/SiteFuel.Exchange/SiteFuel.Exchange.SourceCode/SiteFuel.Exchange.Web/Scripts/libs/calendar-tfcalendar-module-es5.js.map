{"version":3,"sources":["webpack:///src/app/calendar/dsb-calendar/dsb-calendar.component.ts","webpack:///src/app/calendar/dsb-calendar/dsb-calendar.component.html","webpack:///src/app/calendar/model.ts","webpack:///src/app/calendar/tfcalendar.module.ts"],"names":["DsbCalendarComponent","carrierService","dispatcherService","fb","deliveryReqService","utilService","cdRef","allLocationList","allVesselList","locationList","customerList","vesselList","scheduleData","shifts","columns","loads","priorityList","selectedPriorityIds","SelectedlocationList","SelectedCustomerList","SelectedVesselList","SelectedPriorityList","count","FromDate","ToDate","locationType","IsFilterLoaded","MinDate","Date","MaxDate","isFromDate","isValidDate","ScheduleQuantityTypes","CalendarView","Events","DayEvents","requestToUpdate","blendRequestsToUpdate","blendTotalQuantity","blendAddRequestToUpdate","blendedProducts","_loadingDrRequests","_loadingScheduleData","colors","primary","secondary","tertiary","refresh","allDeliveryLocations","view","Month","viewDate","event","period","start","getTime","end","setlocalFilterVals","ApplyFilters","JSON","parse","localStorage","getItem","shift","shiftIndexes","find","x","Id","cArray","Indexes","map","ColumnIndex","Driver","Map","item","values","y","cName","Name","MoveToDsbForm","get","patchValue","col","value","filter","LoadIndex","LoadTime","reduce","a","b","concat","Day","setDayViewEvents","setMonthViewEvents","next","detectChanges","regionId","drDate","resetLoadFilter","getSheduleCalendarData","subscribe","data","forEach","z","seldate","DeliveryRequests","z1","includes","SelectedDate","push","eventDate","edata","title","CustomerCompany","JobName","Customer","JobId","allDay","color","Priority","allDrs","c","length","selectedDate","format","filterDrs","t","groupByTimeDrs","groupDrsBySelectedTime","eventStartDate","StartTime","eventEndDate","EndTime","jobDrs","groupDrsByJob","timeLimit","drs","DrForm","group","getDeliveryRequestFormArray","Shift","control","Column","Load","ScheduleData","IsScheduleForToday","getScheduleQuantityType","getAllCustomers","multiselectSettingsById","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","CustomerDdlSettings","SingleDdlSettings","closeDropDownOnSelection","getFullYear","getMonth","getDate","setFullYear","inputModel","getFilterData","getCalendarDeliveryRequests","GetEventData","Customers","BuyerName","LocationType","Locations","Priorities","Vessels","jobId","date","location","toString","startdate","enddate","startHour","startEve","endHour","endEve","ScheduleStartTime","startsWith","indexOf","ScheduleEndTime","delReqs","_drArray","array","_form","getDeliveryRequestFormNew","RequiredQuantity","todaysDate","getCalendarLoadData","CreatedByRegionId","deliveryReq","LoadDeliveryRequestToUpdate","ScheduleQuantityType","element","document","getElementById","click","selectedShift","selectedLoad","selectedColumn","IsBlendedRequest","IsCalendarView","schedule","getScheduleDate","RegionId","ShiftId","DriverRowIndex","DriverColIndex","saveDriverView","StatusCode","msgsuccess","undefined","msgerror","StatusMessage","refreshCalendar","drToupdate","Object","assign","tempBlendDrs","BlendedGroupId","ProductType","join","IsAdditive","getTotalBlendQuantity","IsDeleted","$","each","QuantityInPercent","status","tnkRequiredQuantity","TankMaxFill","IsMaxFillAllowed","jQuery","updateRequests","drNotes","Notes","drPriority","drSelectedDate","drScheduleStartTime","drScheduleEndTime","deliveryLevelPO","DeliveryLevelPO","updateDeliveryRequest","msgwarning","getFutureDrs","req","isPercent","toggleBlendQuantity","getFilterDataForDsbCalenderView","CustomerList","IsTrue","isPort","toggleLocationType","msg","Customerids","res","CompanyId","Locationids","vesselsids","Prioritiesids","msginfo","setFilterValues","some","BuyerCompanyId","CodeId","el","onLocationChange","setItem","stringify","fromDate","validateDateMessage","validDate","GetScheduleQtyType","SQT","setNextMonthEvents","setView","toggleScheduleData","onShiftSelect","onShiftDeSelect","onColumnSelect","onColumnDeSelect","onConfirmMoveToDSB","onDeliveryReqUpdate","selector","templateUrl","styleUrls","encapsulation","None","changeDetection","OnPush","CalendarFilterModel","ShiftModel","IndexModel","cal_route","path","component","TfcalendarModule","forRoot","forChild","provide","useFactory","declarations","imports"],"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","file":"calendar-tfcalendar-module-es5.js","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { addHours } from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { CalendarView, CalendarViewPeriod } from 'angular-calendar';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { DispatcherService} from '../../carrier/service/dispatcher.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { sortBy } from '../../my.functions';\r\nimport { CalendarScheduleModel, DeliveryRequestViewModel, DelRequestsByJobModel, ScheduleBuilderModel } from '../../carrier/models/DispatchSchedulerModels';\r\nimport { DeliveryrequestService } from '../../carrier/service/deliveryrequest.service';\r\nimport { UtilService } from '../../carrier/service/util.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Priority } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CalendarFilterModel, IndexModel, ShiftModel } from '../model';\r\nimport * as moment from 'moment';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-dsb-calendar',\r\n    templateUrl: './dsb-calendar.component.html',\r\n    styleUrls: ['./dsb-calendar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DsbCalendarComponent implements OnInit {\r\n    //filter\r\n    public allLocationList = [];\r\n    public allVesselList = [];\r\n    public locationList = [];\r\n    public customerList = [];\r\n    public vesselList = [];\r\n    public scheduleData: ShiftModel[] = [];\r\n    public shifts = [];\r\n    public columns = [];\r\n    public loads = [];\r\n    public priorityList: Priority[] = [];\r\n    selectedPriorityIds: string = '';\r\n\r\n    SelectedlocationList = [];\r\n    SelectedCustomerList = [];\r\n    SelectedVesselList = [];\r\n    SelectedPriorityList = [];\r\n\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public CustomerDdlSettings: IDropdownSettings;\r\n    public SingleDdlSettings: IDropdownSettings;\r\n\r\n    public count: number = 0;\r\n    FromDate: string = '';\r\n    ToDate: string = '';\r\n\r\n    public locationType: boolean = false;\r\n    public IsFilterLoaded: boolean = false;\r\n\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n\r\n    public isFromDate: boolean = true;\r\n    public isValidDate: boolean = true;\r\n\r\n    //schedule quantity type\r\n    public ScheduleQuantityTypes: any = [];\r\n\r\n    //@Filter\r\n\r\n    CalendarView = CalendarView;\r\n    public DrForm: FormGroup;\r\n    public MoveToDsbForm: FormGroup;\r\n    Events: any = [];\r\n    DayEvents: any = [];\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public blendRequestsToUpdate: DeliveryRequestViewModel[] = [];\r\n    public blendTotalQuantity: number = 0;\r\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\r\n    public blendedProducts = \"\";\r\n    public _loadingDrRequests = false;\r\n    public _loadingScheduleData = false;\r\n    public SelectedDay; // for viewMoreData\r\n    public SelectedDayEvent; // for dayView data\r\n    colors: any = {\r\n        1: {\r\n            primary: '#FDD6D6',\r\n            secondary: '#BB4141',\r\n            tertiary: '#fadadd'\r\n        },\r\n        2: {\r\n            primary: '#FFDDB5',\r\n            secondary: '#E89330',\r\n        },\r\n        3: {\r\n            primary: '#DCDCDC',\r\n            secondary: '#696969',\r\n        },\r\n    };\r\n    period: CalendarViewPeriod;\r\n    beforeViewRender(event) {\r\n        if (!this.period || this.period.start.getTime() !== event.period.start.getTime() || this.period.end.getTime() !== event.period.end.getTime()) {\r\n            this.period = event.period;\r\n            this.setlocalFilterVals();\r\n            this.ApplyFilters();\r\n        }\r\n    }\r\n    public setlocalFilterVals() {\r\n        this.SelectedCustomerList = JSON.parse(localStorage.getItem(\"calenderCustomers\")) as [] || [];\r\n        this.SelectedlocationList = JSON.parse(localStorage.getItem(\"calenderLocations\")) as [] || [];\r\n        this.SelectedVesselList = JSON.parse(localStorage.getItem(\"calenderVessels\")) as [] || [];\r\n        this.SelectedPriorityList = JSON.parse(localStorage.getItem(\"calenderPriority\")) as [] || [];\r\n        this.FromDate = localStorage.getItem(\"calenderFromDate\");\r\n        this.ToDate = localStorage.getItem(\"calenderToDate\");\r\n    }\r\n    refresh: Subject<any> = new Subject();\r\n    allDeliveryLocations: DelRequestsByJobModel[] = [];\r\n    onShiftSelect(shift) {\r\n        const shiftIndexes = this.scheduleData.find(x => x.Id == shift.Id);\r\n        if (shiftIndexes) {\r\n            let cArray = shiftIndexes.Indexes.map(x => ({ ColumnIndex: x.ColumnIndex, Driver: x.Driver }));\r\n            this.columns = [...new Map(cArray.map(item =>\r\n                [item['ColumnIndex'], item])).values()]\r\n                .map(y => {\r\n                    var cName = \"C\" + (y.ColumnIndex + 1);\r\n                    if (y.Driver && y.Driver != \"\") {\r\n                        cName += \" : \" + y.Driver;\r\n                    }\r\n                    return {\r\n                        Id: y.ColumnIndex, Name: cName\r\n                    };\r\n                });\r\n            this.loads = [];\r\n            this.MoveToDsbForm.get('Load').patchValue(null);\r\n            this.MoveToDsbForm.get('Column').patchValue(null);\r\n        }\r\n    }\r\n    onShiftDeSelect() {\r\n        this.columns = [];\r\n        this.loads = [];\r\n        this.MoveToDsbForm.get('Column').patchValue(null);\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    onColumnSelect(col) {\r\n        //filter loads\r\n        let shifts = this.MoveToDsbForm.get(\"Shift\").value;\r\n        if (shifts) {\r\n            const shiftIndexes = this.scheduleData.find(x => x.Id == shifts[0].Id);\r\n            if (shiftIndexes && col) {\r\n                this.MoveToDsbForm.get('Load').patchValue(null);\r\n                this.loads = shiftIndexes.Indexes.filter(x => x.ColumnIndex == col.Id)\r\n                    .map(x => ({ LoadIndex: x.LoadIndex, LoadTime: x.LoadTime }))\r\n                    .reduce(function (a, b) { return a.concat(b); }, []).map(y => { return { Id: y.LoadIndex, Name: \"Load \" + (y.LoadIndex + 1) + \" : \" + y.LoadTime } });\r\n            }\r\n        }\r\n    }\r\n    onColumnDeSelect() {\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    public GetEventData() {\r\n        this.Events = [];\r\n        if (this.view == CalendarView.Day) {\r\n            this.setDayViewEvents();\r\n        } else {\r\n            this.setMonthViewEvents();\r\n        }\r\n        this.refresh.next();\r\n        this._loadingDrRequests = false;\r\n        this.cdRef.detectChanges();\r\n    }\r\n    public resetLoadFilter() {\r\n        this.shifts = [];\r\n        this.loads = [];\r\n        this.columns = [];\r\n        this.MoveToDsbForm.get('Shift').patchValue(null);\r\n        this.MoveToDsbForm.get('Column').patchValue(null);\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    public getCalendarLoadData(regionId: string, drDate: string) {\r\n        this.resetLoadFilter();\r\n        this._loadingScheduleData = true;\r\n        this.carrierService.getSheduleCalendarData(regionId, drDate).subscribe(data => {\r\n            this.scheduleData = data;\r\n            this.shifts = this.scheduleData.map(x => { return { Id: x.Id, Name: x.Name }; });\r\n            this._loadingScheduleData = false;\r\n            this.cdRef.detectChanges();\r\n        });\r\n    }\r\n    public setMonthViewEvents() {\r\n        this.allDeliveryLocations.forEach(z => {\r\n            // group by date\r\n            var seldate = [];\r\n            z.DeliveryRequests.forEach(z1 => {\r\n                if (!seldate.includes(z1.SelectedDate)) {\r\n                    seldate.push(z1.SelectedDate);\r\n                    let eventDate = new Date(z1.SelectedDate);\r\n                    let edata = {\r\n                        title: z.CustomerCompany + \" - \" + z.JobName, Customer: z.CustomerCompany, JobName: z.JobName, JobId: z.JobId, start: eventDate, end: eventDate, allDay: true, color: this.colors[z1.Priority]\r\n                    };\r\n                    this.Events.push(edata);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public setDayViewEvents() {\r\n        this.DayEvents = [];\r\n        let allDrs = this.allDeliveryLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\r\n        if (allDrs && allDrs.length > 0) {\r\n            let selectedDate = moment(this.viewDate).format('MM/DD/YYYY');\r\n            var filterDrs = allDrs.filter(t => t.SelectedDate == selectedDate);\r\n            if (filterDrs && filterDrs.length) {\r\n                var groupByTimeDrs = this.deliveryReqService.groupDrsBySelectedTime(filterDrs);\r\n                groupByTimeDrs.forEach(x => {\r\n                    const eventStartDate = addHours(new Date(selectedDate), x.StartTime);\r\n                    const eventEndDate = addHours(new Date(selectedDate), x.EndTime);\r\n                    let jobDrs = this.deliveryReqService.groupDrsByJob(x.DeliveryRequests);\r\n                    let timeLimit = x.EndTime - x.StartTime;\r\n                    let edata = {\r\n                        start: eventStartDate, end: eventEndDate, drs: jobDrs, timeLimit: timeLimit\r\n                    };\r\n                    this.DayEvents.push(edata);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    constructor(private carrierService: CarrierService, private dispatcherService: DispatcherService, private fb: FormBuilder, private deliveryReqService: DeliveryrequestService,\r\n        private utilService: UtilService, private cdRef: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this.DrForm = this.fb.group({\r\n            DeliveryRequests: this.getDeliveryRequestFormArray([])\r\n        });\r\n        this.MoveToDsbForm = this.fb.group({\r\n            Shift: this.fb.control(null),\r\n            Column: this.fb.control(null),\r\n            Load: this.fb.control(null),\r\n            ScheduleData: this.fb.control(null),\r\n            IsScheduleForToday: this.fb.control(false)\r\n        });\r\n        this.getScheduleQuantityType();\r\n        //filter\r\n        this.getAllCustomers();\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.CustomerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'BuyerCompanyId',\r\n            textField: 'BuyerName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.SingleDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false,\r\n            closeDropDownOnSelection: true\r\n        };\r\n\r\n        this.priorityList = LoadPriorities;\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n    }\r\n    view: CalendarView = CalendarView.Month;\r\n    viewDate: Date = new Date();\r\n\r\n    getFutureDrs() {\r\n        this._loadingDrRequests = true;\r\n        this.cdRef.detectChanges();\r\n        this.allDeliveryLocations = [];\r\n        var inputModel = this.getFilterData();\r\n        this.carrierService.getCalendarDeliveryRequests(inputModel).subscribe((drs: DeliveryRequestViewModel[]) => {\r\n            this.allDeliveryLocations = [];\r\n            if (drs != null && drs.length > 0) {\r\n                this.allDeliveryLocations = this.deliveryReqService.groupDrsByJob(drs);\r\n            }\r\n            this.GetEventData();\r\n        })\r\n    }\r\n    public getFilterData(): CalendarFilterModel {\r\n        var inputModel: CalendarFilterModel = new CalendarFilterModel();\r\n        inputModel.Customers = this.SelectedCustomerList.map(t => t.BuyerName);\r\n        inputModel.LocationType = this.locationType;\r\n        inputModel.Locations = this.SelectedlocationList.map(t => t.Id);\r\n        inputModel.Priorities = this.SelectedPriorityList.map(t => t.Id);\r\n        inputModel.Vessels = this.SelectedVesselList.map(t => t.Name);\r\n        inputModel.FromDate = this.FromDate && this.FromDate != \"null\" ? new Date(this.FromDate) : this.period.start;\r\n        inputModel.ToDate = this.ToDate && this.ToDate != \"null\" ? new Date(this.ToDate) : this.period.end;\r\n        if (this.view == CalendarView.Day) {\r\n            inputModel.FromDate = this.period.start;\r\n            inputModel.ToDate = this.period.end;\r\n        }\r\n        return inputModel;\r\n    }\r\n\r\n    bindDeliveryRequests(jobId: number, date) {\r\n        let location = this.allDeliveryLocations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            //var drs = location.DeliveryRequests;\r\n            //if (location.DeliveryRequests.some(x => x.IsBlendedRequest === true)){\r\n            //    drs = groupDrsByBlendGroupId(location.DeliveryRequests);\r\n            //}\r\n            var drs = location.DeliveryRequests.filter(t => new Date(t.SelectedDate).toString() == date.toString());\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(drs)\r\n            });\r\n        }\r\n    }\r\n    bindDayDeliveryRequests(jobId: number, startdate: Date, enddate: Date) {\r\n        let location = this.allDeliveryLocations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            let startHour = moment(startdate).format(\"h\");\r\n            let startEve = moment(startdate).format(\"A\");\r\n            let endHour = moment(enddate).format(\"h\");\r\n            let endEve = moment(enddate).format(\"A\");\r\n            var drs = location.DeliveryRequests.filter(t =>\r\n                (t.ScheduleStartTime.toString().startsWith(startHour) && t.ScheduleStartTime.toString().indexOf(startEve) > -1)\r\n                && (t.ScheduleEndTime.toString().startsWith(endHour) && t.ScheduleEndTime.toString().indexOf(endEve) > -1)\r\n            );\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(drs)\r\n            });\r\n        }\r\n    }\r\n\r\n    getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[]): FormArray {\r\n        delReqs = sortBy(delReqs, 'ProductType');\r\n        let _drArray = this.fb.array([]);\r\n        delReqs && delReqs.forEach(x => {\r\n            var _form = this.utilService.getDeliveryRequestFormNew(x);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    setNextMonthEvents(date, event) {\r\n        //this.getFutureDrs();\r\n    }\r\n\r\n    setView(view: CalendarView) {\r\n        this.view = view;\r\n    };\r\n\r\n    getTotalBlendQuantity(): number {\r\n        return this.blendRequestsToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0);\r\n    }\r\n    toggleScheduleData() {\r\n        if (this.MoveToDsbForm.get(\"IsScheduleForToday\").value) {\r\n            let todaysDate = moment(new Date()).format('MM/DD/YYYY');\r\n            this.getCalendarLoadData(this.requestToUpdate.CreatedByRegionId, todaysDate);\r\n        } else {\r\n            this.getCalendarLoadData(this.requestToUpdate.CreatedByRegionId, this.requestToUpdate.SelectedDate);\r\n        }\r\n    }\r\n    getScheduleDate() {\r\n        if (this.MoveToDsbForm.get(\"IsScheduleForToday\").value) {\r\n            let todaysDate = moment(new Date()).format('MM/DD/YYYY');\r\n            return todaysDate;\r\n        } else {\r\n            return this.requestToUpdate.SelectedDate;\r\n        }\r\n    }\r\n    MoveToDSB(deliveryReq) {\r\n        this.MoveToDsbForm.get('IsScheduleForToday').patchValue(false);\r\n        this.getCalendarLoadData(deliveryReq.value.CreatedByRegionId, deliveryReq.value.SelectedDate);\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        // temp data need to remove\r\n        if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1; }\r\n\r\n        let element = document.getElementById(\"switchDSBModal\");\r\n        element ? element.click() : null;\r\n    }\r\n    onConfirmMoveToDSB() {\r\n        const selectedShift = this.MoveToDsbForm.get(\"Shift\").value[0].Id;\r\n        const selectedLoad = this.MoveToDsbForm.get(\"Load\").value[0].Id;\r\n        const selectedColumn = this.MoveToDsbForm.get(\"Column\").value[0].Id;\r\n        this._loadingScheduleData = true;\r\n        let drs: DeliveryRequestViewModel[] = [];\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            drs.push(...this.blendRequestsToUpdate);\r\n            if (this.blendAddRequestToUpdate && this.blendAddRequestToUpdate.length > 0) {\r\n                drs.push(...this.blendAddRequestToUpdate);\r\n            }\r\n        } else {\r\n            drs.push(this.requestToUpdate);\r\n        }\r\n        drs.forEach(t => t.IsCalendarView = false);\r\n        let schedule: CalendarScheduleModel = new CalendarScheduleModel();\r\n        schedule.DeliveryRequests = drs;\r\n        schedule.Date = this.getScheduleDate();\r\n        schedule.RegionId = this.requestToUpdate.CreatedByRegionId;\r\n        schedule.ShiftId= selectedShift;\r\n        schedule.DriverRowIndex = selectedColumn;\r\n        schedule.DriverColIndex = selectedLoad;\r\n        this.carrierService.saveDriverView(schedule).subscribe((data) => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess('Delivery request saved successfully.', undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this._loadingScheduleData = false;\r\n            let element = document.getElementById(\"modal-cancel\");\r\n            element ? element.click() : null;\r\n            this.refreshCalendar();\r\n        });\r\n    }\r\n    \r\n    LoadDeliveryRequestToUpdate(deliveryReq: any) {\r\n        let allDrs = this.allDeliveryLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\r\n        var drToupdate = allDrs.find(t => t.Id == deliveryReq.value.Id);\r\n        this.blendRequestsToUpdate = [];\r\n        this.blendTotalQuantity = 0;\r\n        this.blendAddRequestToUpdate = [];\r\n        this.requestToUpdate = Object.assign({}, drToupdate);\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            var tempBlendDrs = allDrs.filter(t => t.BlendedGroupId == deliveryReq.value.BlendedGroupId);\r\n            this.blendedProducts = tempBlendDrs.map(t => t.ProductType).join(\", \");\r\n            this.blendRequestsToUpdate = tempBlendDrs.filter(t => !t.IsAdditive);\r\n            this.blendAddRequestToUpdate = tempBlendDrs.filter(t => t.IsAdditive);\r\n            this.blendTotalQuantity = this.getTotalBlendQuantity();\r\n        }\r\n    }\r\n    EditDeliveryRequest(deliveryReq: any) {\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1; }\r\n        let element = document.getElementById(\"openUpdateDrModal\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    DeleteDeliveryRequest(deliveryReq: any) {\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        this.requestToUpdate.IsDeleted = true;\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            $.each(this.blendRequestsToUpdate, function () { this.IsDeleted = true; });\r\n            if (this.blendAddRequestToUpdate)\r\n                $.each(this.blendAddRequestToUpdate, function () { this.IsDeleted = true; });\r\n        }\r\n        let element = document.getElementById(\"openDeleteDeliveryRequestModal\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    IsValidBlendQuantity(): boolean {\r\n        return this.blendRequestsToUpdate.map(t => t.QuantityInPercent).reduce((a, b) => a + b, 0) == 100;\r\n    }\r\n    onDeliveryReqUpdate(status: number) {\r\n        //VALIDATION\r\n        if (status == 1) {\r\n            var tnkRequiredQuantity: number = this.requestToUpdate.RequiredQuantity;\r\n            if (this.requestToUpdate.IsBlendedRequest) {\r\n                tnkRequiredQuantity = this.getTotalBlendQuantity();\r\n                if (this.blendAddRequestToUpdate)\r\n                    tnkRequiredQuantity = (+tnkRequiredQuantity) + (+this.blendAddRequestToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0));\r\n            }\r\n            if (this.requestToUpdate.ScheduleQuantityType == 1 && (!(tnkRequiredQuantity > 0) || tnkRequiredQuantity < 0.00001)) {\r\n                Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined); return;\r\n            }\r\n            else if (this.requestToUpdate.ScheduleQuantityType == 1 && this.requestToUpdate.TankMaxFill && this.requestToUpdate.TankMaxFill > 0 && !this.requestToUpdate.IsMaxFillAllowed) {\r\n                if (tnkRequiredQuantity > this.requestToUpdate.TankMaxFill) {\r\n                    Declarations.msgerror(\"Should not exceed max fill. (\" + this.requestToUpdate.TankMaxFill + \")\", undefined, undefined); return;\r\n                }\r\n            }\r\n        }\r\n        this._loadingDrRequests = true;\r\n        jQuery('#closeEditDrPanel').click();\r\n        if (this.requestToUpdate.ScheduleQuantityType > 1) { this.requestToUpdate.RequiredQuantity = 0; }\r\n        let updateRequests = [this.requestToUpdate];\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            if (status == 1) {\r\n                let drNotes = this.requestToUpdate.Notes;\r\n                let drPriority = this.requestToUpdate.Priority;\r\n                let drSelectedDate = this.requestToUpdate.SelectedDate;\r\n                let drScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\r\n                let drScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\r\n                let deliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\r\n                $.each(this.blendRequestsToUpdate, function () {\r\n                    this.Notes = drNotes; this.Priority = drPriority;\r\n                    this.SelectedDate = drSelectedDate;\r\n                    this.ScheduleStartTime = drScheduleStartTime;\r\n                    this.ScheduleEndTime = drScheduleEndTime;\r\n                    this.DeliveryLevelPO = deliveryLevelPO;\r\n                });\r\n            }\r\n            updateRequests = this.blendRequestsToUpdate;\r\n            if (this.blendAddRequestToUpdate) {\r\n                this.blendAddRequestToUpdate.forEach(t => {\r\n                    t.Notes = this.requestToUpdate.Notes; t.Priority = this.requestToUpdate.Priority;\r\n                    t.SelectedDate = this.requestToUpdate.SelectedDate;\r\n                    t.ScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\r\n                    t.ScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\r\n                    t.DeliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\r\n                    if (t.RequiredQuantity > 0 || t.ScheduleQuantityType != 1)\r\n                        updateRequests.push(t);\r\n                })\r\n            }\r\n        }\r\n        this.carrierService.updateDeliveryRequest(updateRequests)\r\n            .subscribe((data: any) => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    /*this.refreshDeliveryRequests(status);*/\r\n\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                    /*this.refreshDeliveryRequests(status);*/\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n                this.refreshCalendar();\r\n            });\r\n    }\r\n\r\n    refreshCalendar() {\r\n        this.getFutureDrs();\r\n    }\r\n\r\n    toggleBlendQuantity(req: DeliveryRequestViewModel, isPercent: boolean) {\r\n        if (isPercent) {\r\n            req.RequiredQuantity = (this.blendTotalQuantity * req.QuantityInPercent) / 100;\r\n        } else {\r\n            req.QuantityInPercent = (req.RequiredQuantity / this.blendTotalQuantity) * 100;\r\n        }\r\n    }\r\n    toggleBlendTotalQuantity() {\r\n        this.blendRequestsToUpdate.forEach(t => {\r\n            this.toggleBlendQuantity(t, true);\r\n        });\r\n    }\r\n    getAllCustomers() {\r\n        this.carrierService.getFilterDataForDsbCalenderView().subscribe((data) => {\r\n            if (data != null) {\r\n                this.customerList = data.CustomerList;\r\n                this.vesselList = data.Vessels;\r\n                this.allLocationList = data.Locations;\r\n                this.allVesselList = data.Vessels;\r\n                this.locationList = this.allLocationList.filter(x => this.locationType == x.IsTrue);\r\n            }\r\n        });\r\n    }\r\n\r\n    public toggleLocationType(isPort) {\r\n        this.locationList = this.allLocationList.filter(x => isPort == x.IsTrue);\r\n    }\r\n\r\n    public ResetFilters() {\r\n        this.SelectedCustomerList = [];\r\n        this.SelectedlocationList = [];\r\n        this.SelectedPriorityList = [];\r\n        this.SelectedVesselList = [];\r\n        this.locationType = false;\r\n        this.FromDate = '';\r\n        this.ToDate = '';\r\n        this.isValidDate = true;\r\n        this.ApplyFilters(\"reset\");\r\n        this.toggleLocationType(false);\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        this.count = 0;\r\n        var Customerids = [];\r\n        this.SelectedCustomerList.forEach(res => {\r\n            this.count++;\r\n            Customerids.push(res.CompanyId)\r\n        });\r\n        var Locationids = [];\r\n        this.SelectedlocationList.forEach(res => {\r\n            this.count++;\r\n            Locationids.push(res.Id)\r\n        });\r\n        var vesselsids = [];\r\n        this.SelectedVesselList.forEach(res => {\r\n            this.count++;\r\n            vesselsids.push(res.Id)\r\n        });\r\n        var Prioritiesids = [];\r\n        this.SelectedPriorityList.forEach(res => {\r\n            this.count++;\r\n            Prioritiesids.push(res.Id)\r\n        });\r\n        if ((this.FromDate && this.FromDate != 'null') || (this.ToDate && this.ToDate != 'null')) {\r\n            this.count++;\r\n        }\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n        this.setFilterValues();\r\n        this.getFutureDrs();\r\n    }\r\n\r\n    public onCustomerChanged() {\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.locationList = this.allLocationList.filter(t => this.SelectedCustomerList.some(c => c.BuyerCompanyId == t.CodeId) && t.IsTrue == this.locationType);\r\n            if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n                this.SelectedlocationList = this.SelectedlocationList.filter(t => this.locationList.some(el => el.Id == t.Id));\r\n                this.onLocationChange();\r\n            }\r\n        }\r\n        else {\r\n            this.locationList = this.allLocationList.filter(x => this.locationType == x.IsTrue);\r\n        }\r\n    }\r\n    public onLocationChange() {\r\n        if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n            this.vesselList = this.allVesselList.filter(t => this.SelectedlocationList.some(c => c.Id == t.CodeId));\r\n            if (this.SelectedVesselList && this.SelectedVesselList.length > 0) {\r\n                this.SelectedVesselList = this.vesselList.filter(x => this.SelectedVesselList.some(t => t.Id == x.Id));\r\n            }\r\n        }\r\n        else {\r\n            this.vesselList = this.allVesselList;\r\n        }\r\n    }\r\n    public setFilterValues() {\r\n        localStorage.setItem(\"calenderCustomers\", JSON.stringify(this.SelectedCustomerList));\r\n        localStorage.setItem(\"calenderLocations\", JSON.stringify(this.SelectedlocationList));\r\n        localStorage.setItem(\"calenderVessels\", JSON.stringify(this.SelectedVesselList));\r\n        localStorage.setItem(\"calenderPriority\", JSON.stringify(this.SelectedPriorityList));\r\n        localStorage.setItem(\"calenderFromDate\", this.FromDate);\r\n        localStorage.setItem(\"calenderToDate\", this.ToDate);\r\n    }\r\n    public validateDate(date: any, fromDate: boolean) {\r\n        if (date != '' && this.ToDate != '' && fromDate) {\r\n            this.isValidDate = this.ToDate >= date;\r\n            this.validateDateMessage(this.isValidDate);\r\n            \r\n        }\r\n        else if (date != '' && this.FromDate != '' && !fromDate) {\r\n            this.isValidDate = date >= this.FromDate\r\n            this.validateDateMessage(this.isValidDate);\r\n        }\r\n    }\r\n    public validateDateMessage(validDate: boolean) {\r\n        if (!validDate) {\r\n            Declarations.msgerror(\"Select valid filter dates\", undefined, undefined);\r\n        }\r\n    }\r\n    getScheduleQuantityType() {\r\n        if (this.ScheduleQuantityTypes.length == 0) {\r\n            this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\r\n                this.ScheduleQuantityTypes = SQT || [];\r\n            });\r\n        }\r\n    }\r\n}","\r\n<ng-template #filterPopContent>\r\n    <div class=\"form-check form-check-inline\">\r\n        <input class=\"form-check-input\" name=\"locationType\" [(ngModel)]=\"locationType\" (click)=\"toggleLocationType(false)\"\r\n               id=\"radio-location\" type=\"radio\" [value]=\"false\">\r\n        <label class=\"form-check-label\" for=\"radio-location\">Land</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline mr-3 mt-2\">\r\n        <input class=\"form-check-input\" name=\"locationType\" [(ngModel)]=\"locationType\" (click)=\"toggleLocationType(true)\"\r\n               id=\"radio-port\" type=\"radio\" [value]=\"true\">\r\n        <label class=\"form-check-label\" for=\"radio-port\">Marine</label>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt-3\">\r\n        <div class=\"col-6 pr-0\">\r\n\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Customer</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" [settings]=\"CustomerDdlSettings\"\r\n                                         [placeholder]=\"'Select Customer'\" [data]=\"customerList\"\r\n                                         (onSelect)=\"onCustomerChanged()\" (onDeSelect)=\"onCustomerChanged()\">\r\n\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\" *ngIf=\"locationType\">Port</label>\r\n                <label class=\"font-bold\" *ngIf=\"!locationType\">Location</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\" [settings]=\"multiselectSettingsById\"\r\n                                         [placeholder]=\"locationType ? 'Select Port' : 'Select Location'\" [data]=\"locationList\"\r\n                                         (onSelect)=\"onLocationChange()\" (onDeSelect)=\"onLocationChange()\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt10\">\r\n        <div class=\"col-6 pr-0\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Priority</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Select Priority'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"priorityList\" #selectedPriority>\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6 mt-2\" *ngIf=\"locationType\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Vessel</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedVesselList\" [placeholder]=\"'Select Vessel'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"vesselList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt10\">\r\n        <div class=\"col-6 pr-0\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold mr-3\">From</label>\r\n                <input name=\"date\" [(ngModel)]=\"FromDate\" type=\"date\" class=\"form-control datepicker ng-pristine ng-valid ng-touched\" (change)=\"validateDate(FromDate,isFromDate)\" required>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold mr-3\">To</label>\r\n                <input name=\"date\" [(ngModel)]=\"ToDate\" type=\"date\" class=\"form-control datepicker ng-pristine ng-valid ng-touched\" (change)=\"validateDate(ToDate,!isFromDate)\" required>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt10\">\r\n        <div class=\"col-12 text-right\">\r\n            <button type=\"button\" (click)=\"ResetFilters(); p.close();\" class=\"btn btn-default\">\r\n                Reset\r\n            </button>\r\n            <button type=\"button\" [disabled]=\"!isValidDate\" (click)=\"ApplyFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                Save\r\n            </button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"row ibox-content no-padding no-border\">\r\n                    <div class=\"col-md-4 text-left\">\r\n                        <div>\r\n                            <div class=\"btn btn-default btn-xs\" mwlCalendarPreviousView [view]=\"view\"\r\n                                 [(viewDate)]=\"viewDate\"\r\n                                 (click)=\"setNextMonthEvents(viewDate,'Previous')\">\r\n                                <i class=\"fas fa-arrow-left\"></i>\r\n                            </div>\r\n                            <div class=\"btn\tbtn-default btn-xs\" id=\"idToday\" mwlCalendarToday\r\n                                 [(viewDate)]=\"viewDate\" (click)=\"setNextMonthEvents(viewDate,'Today')\">\r\n                                Today\r\n                            </div>\r\n                            <div class=\"btn\tbtn-default btn-xs\" mwlCalendarNextView [view]=\"view\"\r\n                                 [(viewDate)]=\"viewDate\"\r\n                                 (click)=\"setNextMonthEvents(viewDate,'Next')\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 text-center\">\r\n                        <h3 class=\"mt5\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n                    </div>\r\n                    <div class=\"col-2 pl0 text-right pt8 pr-0\">\r\n                        <a class=\"fs14 mr10\" [ngbPopover]=\"filterPopContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n                           popoverClass=\"master-filter popoverWidth-500 pb-2\"><i class=\"fas fa-filter pr-0\"><span class=\"circle-badge\" *ngIf=\"count > 0\">{{count}}</span></i> Filters</a>\r\n                    </div>\r\n                    <div class=\"col-md-2 text-left pl-0\">\r\n                        <div class=\"view-btn\">\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\" id=\"idMonth\">Month</a>\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Week)\" [class.active]=\"view === CalendarView.Week\" id=\"idWeek\">Week</a>\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\" id=\"idDay\">Day</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div [ngSwitch]=\"view\">\r\n                    <div *ngIf=\"_loadingDrRequests\" class=\"pa bg-white z-index10 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                             [events]=\"Events\" [cellTemplate]=\"customCellTemplate\" [refresh]=\"refresh\">\r\n                    </mwl-calendar-month-view>\r\n                    <mwl-calendar-week-view class=\"my-week-view\" *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [hourSegments]=\"0\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                            [events]=\"Events\" [refresh]=\"refresh\" [eventTemplate]=\"customEventTemplate\">\r\n                    </mwl-calendar-week-view>\r\n                    <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"DayEvents\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                           [refresh]=\"refresh\" [eventTemplate]=\"customDayEventTemplate\">\r\n                    </mwl-calendar-day-view>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<ng-template #customEventTemplate let-day=\"weekEvent\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <div class=\"label calender-grid mnth-events\">\r\n            <span [ngStyle]=\"{'background-color': day.event.color.primary}\" style=\"color:black\">\r\n                <a class=\"row py-2\" (click)=\"bindDeliveryRequests(day.event.JobId, day.event.start)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                    <strong class=\"text-dark col-10\">{{day.event.title }} </strong><i class=\"fas fa-arrow-right col-1 mt-2\"></i>\r\n                </a>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #customDayEventTemplate let-day=\"weekEvent\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <table class=\"table table-hover\">\r\n            <tr *ngFor=\"let item of day.event.drs; let i = index;\">\r\n                <td *ngIf=\"i < day.event.timeLimit\" style=\"color: black\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" class=\"label calender-grid mnth-events\">\r\n                    <!---->\r\n                    <span>\r\n                        <a class=\"row py\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" style=\"color:black;border-radius:10px\" id=\"d-dr-{{i}}\" (click)=\"bindDayDeliveryRequests(item.JobId,day.event.start, day.event.end)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                            <div class=\"col-sm-12\">\r\n                                <strong class=\"font-weight-bold text-dark float-left\">{{item.CustomerCompany + \" - \" + item.JobName }} </strong> <i class=\"fas fa-arrow-right float-right\"></i>\r\n                            </div>\r\n                            <!--<div class=\"col-1 align-self-center\">\r\n                                <i class=\"fas fa-arrow-right float-right\"></i>\r\n                            </div>-->\r\n                        </a>\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n        <div *ngIf=\"day.event.drs.length > day.event.timeLimit\">\r\n            <a class=\"col-sm-11\" type=\"button\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"top\" data-content=\"Top popover\" (click)=\"SelectedDayEvent=day.event\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"dayViewMoreContent\" container=\"body\" popoverClass=\"dr-popover view-more-popover-day\">View more <i class=\"ml-2 fas fa-chevron-circle-down\"></i></a>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <div>\r\n            <table class=\"table table-hover\">\r\n                <tr *ngFor=\"let item of day.events let i = index;\">\r\n                    <td [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                        class=\"label  calender-grid mnth-events\" *ngIf=\"i<3\">\r\n                        <span>\r\n                            <a class=\"row\" id=\"dr-{{i}}\" (click)=\"bindDeliveryRequests(item.JobId,day.date)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <strong class=\"font-weight-bold text-dark float-left col-sm-10\">{{item.title }} </strong><i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <div>\r\n                <a class=\"col-sm-11\" type=\"button\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"top\" data-content=\"Top popover\" *ngIf=\"day.events.length>3\" (click)=\"SelectedDay=day\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"requestPopContent\" container=\"body\" popoverClass=\"dr-popover view-more-popover-month\">View more <i class=\"ml-2 fas fa-chevron-circle-down\"></i></a>\r\n                <span class=\"col-sm-1 cal-day-number mt-0\"><strong class=\"ml-1\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</strong> </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #requestPopContent>\r\n    <table class=\"table table-hover\">\r\n        <tr *ngFor=\"let item of SelectedDay.events ; let i = index;\">\r\n            <td *ngIf=\"i>=3\" [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                class=\"label  calender-grid mnth-events\">\r\n                <span>\r\n                    <a class=\"row\" id=\"dr-{{i}}\" (click)=\"bindDeliveryRequests(item.JobId,SelectedDay.date)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                        <strong class=\"small font-weight-bold text-dark float-left col-sm-10\">{{item.title }} </strong> <i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                    </a>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n\r\n    </table>\r\n</ng-template>\r\n<ng-template #dayViewMoreContent>\r\n    <table class=\"table table-hover\">\r\n        <tr *ngFor=\"let item of SelectedDayEvent.drs; let i = index;\">\r\n            <td *ngIf=\"i >= SelectedDayEvent.timeLimit\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" style=\"color:black\" class=\"label  calender-grid mnth-events\">\r\n                <!---->\r\n                <span>\r\n                    <a class=\"row\" id=\"d-dr-{{i}}\" (click)=\"bindDayDeliveryRequests(item.JobId,SelectedDayEvent.start, SelectedDayEvent.end)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                        <strong class=\"small font-weight-bold text-dark float-left col-sm-10\">{{item.CustomerCompany + \" - \" + item.JobName }} </strong><i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                    </a>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</ng-template>\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row\">\r\n            <ng-container *ngFor=\"let dr of DrForm.controls['DeliveryRequests']['controls']; let i = index;\">\r\n                <div *ngIf=\"dr.controls['IsBlendedRequest'].value==false || dr.controls['IsBlendedDrParent'].value==true\" class=\"col-12 product-details\" [ngClass]=\"{'mustgo-status': (dr.controls['Priority'].value==1) , 'shouldgo-status': (dr.controls['Priority'].value==2) ,'couldgo-status': (dr.controls['Priority'].value==3)}\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <div class=\"product-name\">\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value === true\">{{dr.controls['AdditiveProductName'].value}} {{dr.controls['BlendedProductName'].value}}</span>\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value != true\">{{dr.controls['ProductType'].value}}</span>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['DeliveryDateStartTime'].value}}</p>\r\n                                <p class=\"recurring_dr\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['Vessel'].value}}-{{dr.controls['Berth'].value}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==false\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['TotalBlendedQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==true\">{{dr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value == 0\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\" style=\"font-size:11px;\">\r\n                            <label *ngIf=\"dr.controls['ScheduleStartTime'].value && dr.controls['ScheduleEndTime'].value\">\r\n                                {{dr.controls['ScheduleStartTime'].value}} - {{ dr.controls['ScheduleEndTime'].value}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"icon-tray col-md-6 pull-right\">\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Edit\">\r\n                                <a (click)=\"EditDeliveryRequest(dr)\"><i class=\"fa fa-edit fs13\"></i></a>\r\n                            </div>\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Delete\">\r\n                                <a (click)=\"DeleteDeliveryRequest(dr)\"><i class=\"fas fa-trash-alt fs13\"></i></a>\r\n                            </div>\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Move Load to DSB\">\r\n                                <a (click)=\"MoveToDSB(dr)\"><i class=\"fas fa-hand-point-right fs13\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"dr.controls['IsBlendedRequest']?.value\">\r\n                        <span class=\"fs12 pull-right font-weight-bold\">Blend</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"switchDSBModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#switchToDSBModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"switchToDSBModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div *ngIf=\"_loadingScheduleData\" class=\"pa bg-white z-index10 loading-wrapper\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form novalidate>\r\n                    <div [formGroup]=\"MoveToDsbForm\" class=\"form-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <h2 class=\"fs18 f-bold mt0\">Move Load to DSB?</h2>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"pull-right form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsScheduleForToday\" id=\"chk-IsScheduleForToday\" (change)=\"toggleScheduleData()\">\r\n                                    <label class=\"form-check-label\" for=\"chk-IsScheduleForToday\">Schedule for current date</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-3\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Shift</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"shifts\"\r\n                                                             formControlName=\"Shift\"\r\n                                                             (onSelect)=\"onShiftSelect($event)\"\r\n                                                             (onDeSelect)=\"onShiftDeSelect()\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Column</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"columns\"\r\n                                                             formControlName=\"Column\"\r\n                                                             (onSelect)=\"onColumnSelect($event)\"\r\n                                                             (onDeSelect)=\"onColumnDeSelect()\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Load</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"loads\"\r\n                                                             formControlName=\"Load\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button id=\"modal-cancel\" type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onConfirmMoveToDSB()\" class=\"btn btn-primary btn-lg\">Confirm</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div id=\"openDeleteDeliveryRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#deleteDeliveryRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"deleteDeliveryRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Delete Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                    <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                </div>\r\n                                <ng-template #quantity>\r\n                                    <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                    <ng-template #litres>(L)</ng-template>\r\n                                    <div>{{requestToUpdate?.IsBlendedRequest ? requestToUpdate?.TotalBlendedQuantity: requestToUpdate?.RequiredQuantity}}</div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onDeliveryReqUpdate(2)\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\">Delete</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openUpdateDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#updateDeliveryRequestModal\"></div>\r\n<div id=\"updateDeliveryRequestModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Update Delivery Request</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!-- #blended Dr to update -->\r\n                    <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularDRToUpdate\">\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{blendedProducts}} Tank, Location: {{blendRequestsToUpdate[0]?.JobName}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Total Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"blendTotalQuantity\" [(ngModel)]=\"blendTotalQuantity\" (input)=\"toggleBlendTotalQuantity()\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngFor=\"let blendUpdateRequest of blendRequestsToUpdate; index as j\" [ngModelGroup]=\"j\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div>{{blendUpdateRequest.ProductType}} - {{blendUpdateRequest.FuelType}}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"text\" numberWithDecimal class=\"form-control\" (input)=\"toggleBlendQuantity(blendUpdateRequest,false)\" name=\"RequiredQuantity\" [(ngModel)]=\"blendUpdateRequest.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                            <div class=\"input-group-addon\">\r\n                                                <span *ngIf=\"blendUpdateRequest?.UoM==1; else litres\">G</span>\r\n                                                <ng-template #litres>L</ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"number\" name=\"QuantityInPercent\" [(ngModel)]=\"blendUpdateRequest.QuantityInPercent\" #QuantityInPercent=\"ngModel\"\r\n                                                   numberWithDecimal class=\"form-control\"\r\n                                                   placeholder=\"Quantity In Percent\" (input)=\"toggleBlendQuantity(blendUpdateRequest,true)\" />\r\n                                            <div class=\"input-group-addon\">%</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- additive fuel -->\r\n                        <div *ngIf=\"blendAddRequestToUpdate\">\r\n                            <div *ngFor=\"let additiveReq of blendAddRequestToUpdate; index as k\" [ngModelGroup]=\"k\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div>{{additiveReq.ProductType}} - {{additiveReq.FuelType}}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" name=\"AdRequiredQuantity\" numberWithDecimal [(ngModel)]=\"additiveReq.RequiredQuantity\" #AdRequiredQuantity=\"ngModel\" required>\r\n                                                <div class=\"input-group-addon\">\r\n                                                    <span *ngIf=\"additiveReq?.UoM==1; else litres\">G</span>\r\n                                                    <ng-template #litres>L</ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"name\" class=\"mr5\">\r\n                                                <span>Delivery Level PO#</span>\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- #blended Dr to update end-->\r\n                    <!-- #Regular Dr to update -->\r\n                    <ng-template #regularDRToUpdate>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal text-muted\">{{requestToUpdate?.ProductType}} Tank, Location: {{requestToUpdate?.JobName}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ScheduleQuantityType\">\r\n                                        <span>Quantity Type</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"requestToUpdate.ScheduleQuantityType\" name=\"ScheduleQuantityType\" #ScheduleQuantityType=\"ngModel\">\r\n                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                            {{sqType.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\" *ngIf=\"requestToUpdate.ScheduleQuantityType==1 || requestToUpdate.ScheduleQuantityType==0\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">\r\n                                        <span>Required Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"RequiredQuantity\" [(ngModel)]=\"requestToUpdate.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <!-- #Regular Dr to update end-->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Schedule Date</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Select Date\" class=\"form-control datepicker\" name=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" [(ngModel)]=\"requestToUpdate.SelectedDate\" #SelectedDate=\"ngModel\" (onDateChange)=\"requestToUpdate.SelectedDate = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">Start Time</label>\r\n                                <input type=\"text\" placeholder=\"Start Time\" name=\"ScheduleStartTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleStartTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleStartTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">End Time</label>\r\n                                <input type=\"text\" placeholder=\"End Time\" name=\"ScheduleEndTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleEndTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleEndTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Delivery-Level PO#</span>\r\n                                </label>\r\n                                <input type=\"text\"  class=\"form-control\" name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"1\" name=\"Priority\" id=\"mustgo\">\r\n                                <label class=\"form-check-label\" for=\"mustgo\"> Must Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"2\" name=\"Priority\" id=\"shouldgo\">\r\n                                <label class=\"form-check-label\" for=\"shouldgo\">Should Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"3\" name=\"Priority\" id=\"couldgo\">\r\n                                <label class=\"form-check-label\" for=\"couldgo\">Could Go</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group mt10\">\r\n                                <textarea name=\"Notes\" [(ngModel)]=\"requestToUpdate.Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"text-right \">\r\n                        <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularUpdate\">\r\n                            <div *ngIf=\"blendTotalQuantity > 0 && !IsValidBlendQuantity()\" class=\"color-maroon mb15\">Sum of entered quantity should match with {{blendTotalQuantity}}.</div>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button [disabled]=\"!IsValidBlendQuantity()\" type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </div>\r\n                        <ng-template #regularUpdate>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </ng-template>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class CalendarFilterModel {\r\n    constructor() {\r\n        this.Customers = [];\r\n        this.Locations = [];\r\n        this.Vessels = [];\r\n        this.Priorities = [];\r\n        this.FromDate = new Date();\r\n        this.ToDate = new Date();\r\n    }\r\n    public Customers: any[];\r\n    public Locations: any[];\r\n    public Vessels: any[];\r\n    public LocationType: boolean;\r\n    public Priorities: any[];\r\n    public FromDate: Date;\r\n    public ToDate: Date;\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public Indexes: IndexModel[];\r\n}\r\n\r\nexport class IndexModel {\r\n    public LoadIndex: number;\r\n    public ColumnIndex: number;\r\n    public LoadTime: string;\r\n    public Driver: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DsbCalendarComponent } from './dsb-calendar/dsb-calendar.component';\nimport { RouterModule, Routes } from '@angular/router';\r\n/*import { FullCalendarModule } from '@fullcalendar/angular'; // must go before plugins*/\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\n\n//FullCalendarModule.registerPlugins([\r\n//    dayGridPlugin,\r\n//    interactionPlugin\r\n//]);\n\nconst cal_route: Routes = [\n    {\n        path: '',\n        component: DsbCalendarComponent\n    }, {\n        path: 'Index',\n        component: DsbCalendarComponent\n    }];\n\n\n@NgModule({\n    declarations: [DsbCalendarComponent],\n  imports: [\n      CommonModule,\r\n      SharedModule,\r\n      DirectiveModule,\r\n      NgDragDropModule.forRoot(),\r\n      RouterModule.forChild(cal_route),\n      FlatpickrModule.forRoot(),\n      CalendarModule.forRoot({\r\n          provide: DateAdapter,\r\n          useFactory: adapterFactory,\r\n      }),\n  ]\n})\nexport class TfcalendarModule { }\n"]}