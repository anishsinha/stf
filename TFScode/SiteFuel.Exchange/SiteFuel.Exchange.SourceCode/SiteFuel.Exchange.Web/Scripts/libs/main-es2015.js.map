{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/address.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constants.ts","./src/app/app.enum.ts","./src/app/app.module.ts","./src/app/carrier-companies/search-filter.ts","./src/app/carrier/model.ts","./src/app/carrier/models/DispatchSchedulerModels.ts","./src/app/carrier/models/location.ts","./src/app/carrier/service/carrier.service.ts","./src/app/carrier/service/data.service.ts","./src/app/carrier/service/dispatcher.service.ts","./src/app/carrier/service/schedule-builder.service.ts","./src/app/carrier/service/util.service.ts","./src/app/carrier/service/wally-utility.service.ts","./src/app/declarations.module.ts","./src/app/directives/click-outside.directive.ts","./src/app/directives/copy.directive.ts","./src/app/directives/disable-control.directive.ts","./src/app/directives/myDateTimePicker.ts","./src/app/directives/numberWithDecimal.ts","./src/app/directives/numbersAlphaOnly.ts","./src/app/directives/numbersOnly.ts","./src/app/directives/required-if-not-empty.directive.ts","./src/app/directives/required-if-true.directive.ts","./src/app/directives/sorting.pipe.ts","./src/app/directives/time-greater-than-or-equal-to-validator.ts","./src/app/directives/time-smaller-than-or-equal-to-validator.ts","./src/app/dispatcher/dispatcher.model.ts","./src/app/errors/HandleError.ts","./src/app/http-generic.service.ts","./src/app/invoice/models/DropDetail.ts","./src/app/marine-ports-vessels/marine-ports-vessels.module.ts","./src/app/marine-ports-vessels/marine-ports/marine-ports-map/marine-ports-map.component.ts","./src/app/marine-ports-vessels/marine-ports/marine-ports-map/marine-ports-map.component.html","./src/app/marine-ports-vessels/marine-ports/marineports.component.ts","./src/app/marine-ports-vessels/marine-ports/marineports.component.html","./src/app/marine-ports-vessels/marine-portsandvessels.service.ts","./src/app/marine-ports-vessels/marine-vessels/marinevessels.component.ts","./src/app/marine-ports-vessels/marine-vessels/marinevessels.component.html","./src/app/marine-ports-vessels/master/master.component.ts","./src/app/marine-ports-vessels/master/master.component.html","./src/app/marine-ports-vessels/models.ts","./src/app/modules/directive.module.ts","./src/app/modules/global.module.ts","./src/app/modules/shared.module.ts","./src/app/my.functions.ts","./src/app/sales-user/sales-user.service.ts","./src/app/self-service-alias/models/location.ts","./src/app/shared-components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared-components/confirmation-dialog/confirmation-dialog.component.html","./src/app/shared-components/confirmation-dialog/confirmation-dialog.service.ts","./src/app/shared-components/create-trailer/create-trailer.component.ts","./src/app/shared-components/create-trailer/create-trailer.component.html","./src/app/shared-components/demand-capture-chart/demand-capture-chart.component.ts","./src/app/shared-components/demand-capture-chart/demand-capture-chart.component.html","./src/app/shared-components/dip-test/dip-test.component.ts","./src/app/shared-components/dip-test/dip-test.component.html","./src/app/shared-components/forcasting/tank-view-component.ts","./src/app/shared-components/forcasting/tank-view-component.html","./src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component.ts","./src/app/shared-components/sendbird/buyer-sendbird/buyer-sendbird.component.html","./src/app/shared-components/sendbird/common/sendbird.common.component.ts","./src/app/shared-components/sendbird/sendbird.component.ts","./src/app/shared-components/sendbird/sendbird.component.html","./src/app/shared-components/sendbird/sendbirdCommon.ts","./src/app/shared-components/sendbird/services/sendbird.service.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/statelist.service.ts","./src/app/tank-chart/forcasting/tank-chart.component.ts","./src/app/tank-chart/forcasting/tank-chart.component.html","./src/app/tank-chart/tank-chart.component.ts","./src/app/tank-chart/tank-chart.component.html","./src/app/tank-chart/tank-chart.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddressService extends HandleError {\r\n\r\n    private getAddressUrl = '/Validation/GetAddressByZip?zipCode=';\r\n    private getBulkPlantsUrl = '/Supplier/SupplierBase/GetBulkPlants?Prefix=';\r\n    private getBulkPlantsForAutoFreightMethodUrl: string = 'Supplier/Invoice/GetBulkPlantsForAutoFreightMethod?orderId=';\r\n    private getBulkPlantDetailsUrl = '/Supplier/SupplierBase/GetBulkPlantDetails?name=';\r\n    private getBulkplantAddressUrl = '/Supplier/Invoice/GetBulkplantAddress?trackableScheduleId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAddress(zipCode: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAddressUrl + zipCode)\r\n            .pipe(catchError(this.handleError<any>('getAddress', null)));\r\n    }\r\n\r\n    getBulkPlants(prfix: string, orderId: number = 0): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getBulkPlantsUrl + prfix + '&orderId=' + orderId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getBulkPlants', null)));\r\n    }\r\n    getBulkPlantsForAutoFreightMethod(_orderId: number, _bulkPlant?: string): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getBulkPlantsForAutoFreightMethodUrl + _orderId + '&bulkPlant=' + _bulkPlant)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getBulkPlantsForAutoInvoice', null)));\r\n    }\r\n    GetBulkPlantDetails(name: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getBulkPlantDetailsUrl + name)\r\n            .pipe(catchError(this.handleError<any>('GetBulkPlantDetails', null)));\r\n    }\r\n\r\n    getBulkplantAddress(scheduleId: number, orderId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getBulkplantAddressUrl + scheduleId + '&orderId=' + orderId)\r\n            .pipe(catchError(this.handleError<any>('getBulkplantAddress', null)));\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"Settings/Profile\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Region\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin\",\r\n        loadChildren: () => import('./company-addresses/lazy-loading/company-addresses.module').then(mod => mod.CompanyAddressesModule)\r\n    },\r\n    {\r\n        path: 'Supplier/Invoice',\r\n        loadChildren: () => import('./invoice/lazy-loading/invoice.module').then(mod => mod.InvoiceModule)\r\n    },\r\n    {\r\n        path: \"Supplier/OrderGroup/View\",\r\n        loadChildren: () => import('./order/lazy-loading/order.module').then(mod => mod.OrderModule)\r\n    },\r\n    {\r\n        path: \"Buyer/OrderGroup/View\",\r\n        loadChildren: () => import('./order/lazy-loading/order.module').then(mod => mod.OrderModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Dashboard\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/Index\",\r\n        loadChildren: () => import('./carrier/carrier.module').then(mod => mod.CarrierModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/DeliveryRequests\",\r\n        loadChildren: () => import('./delivery-request-display/delivery-request-display.module').then(mod => mod.DeliveryRequestDisplayModule)\r\n    },\r\n    {\r\n        path: \"Carrier/SelfServiceAlias/View\",\r\n        loadChildren: () => import('./self-service-alias/self-service-alias.module').then(mod => mod.SelfServiceAliasModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Tractor/View\",\r\n        loadChildren: () => import('./tractor/tractor.module').then(mod => mod.TractorModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Freight/View\",\r\n        loadChildren: () => import('./trailer/trailer.module').then(mod => mod.TrailerModule)\r\n    },\r\n    {\r\n        path: \"Dispatcher\",\r\n        loadChildren: () => import('./dispatcher/dispatcher.module').then(mod => mod.DispatcherModule)\r\n    },\r\n    {\r\n        path: \"Settings/Profile/CarrierCompanies\",\r\n        loadChildren: () => import('./carrier-companies/lazy-loading/carrier-companies.module').then(mod => mod.CarrierCompaniesModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Job/View\",\r\n        loadChildren: () => import('./carrier-companies/lazy-loading/carrier-companies.module').then(mod => mod.CarrierCompaniesModule)\r\n    },\r\n    //driver Schedule  \r\n    {\r\n        path: \"Settings/Profile/DriverManagement\",\r\n        loadChildren: () => import('./driver/driver.module').then(mod => mod.DriverModule)\r\n    },\r\n    {\r\n        path: \"Home/TPDAPIDashboard\",\r\n        loadChildren: () => import('./tpd-api-dashboard/tpd-api-dashboard.module').then(mod => mod.TpdApiDashboardModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Location\",\r\n        loadChildren: () => import('./location/lazy-loading/location.module').then(mod => mod.LocationModule)\r\n    },\r\n    {\r\n        path: \"Buyer/Job/BuyerWallyBoard\",\r\n        loadChildren: () => import('./buyer-wally-board/buyer-wally-board.module').then(mod => mod.BuyerWallyBoardModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/GetTerminalSupplier\",\r\n        loadChildren: () => import('./terminalSupplierMaster/terminal-supplier-master.module').then(mod => mod.TerminalSupplierMasterModule)\r\n    },\r\n    {\r\n        path: \"Buyer/Dashboard\",\r\n        loadChildren: () => import('./buyer-dashboard/buyer-dashboard.module').then(mod => mod.BuyerDashboardModule)\r\n    },\r\n    {\r\n        path: \"Carrier/ScheduleBuilder/DeliveryRequestsReport\",\r\n        loadChildren: () => import('./carrier/delivery-request-report/delivery-request-report.module').then(mod => mod.DeliveryRequestReportModule)\r\n    },\r\n    {\r\n        path: \"Supplier/LiftFile\",\r\n        loadChildren: () => import('./lfv-dashboard/lfv-dashboard.module').then(mod => mod.LfvDashboardModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FuelSurcharge\",\r\n        loadChildren: () => import('./fuelsurcharge/fuelsurcharge.module').then(mod => mod.FuelsurchargeModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FreightRate\",\r\n        loadChildren: () => import('./freightRates/freight.rate.module').then(mod => mod.FreightRateRulesModule)\r\n    },\r\n    {\r\n        path: \"SalesUser\",\r\n        loadChildren: () => import('./sales-user/sales-user.module').then(mod => mod.SalesUserModule)\r\n    },   \r\n    {\r\n        path: \"Supplier/AccessorialFees\",\r\n        loadChildren: () => import('./accessorial-fees/accessorial-fees.module').then(mod => mod.AccessorialFeesModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/MarinePortsAndVessels\",\r\n        loadChildren: () => import('./marine-ports-vessels/marine-ports-vessels.module').then(m => m.MarinePortsVesselsModule)\r\n    },\r\n    {\r\n        path: \"Supplier/Job/MarinePortsAndVessels\",\r\n        loadChildren: () => import('./marine-ports-vessels/marine-ports-vessels.module').then(m => m.MarinePortsVesselsModule)\r\n    },\r\n    {\r\n        path: \"Invitation\",\r\n        loadChildren: () => import('./invitation/invitation.module').then(mod => mod.InvitationModule)\r\n    },\r\n    {\r\n        path: \"Supplier/ThirdPartyNetwork\",\r\n        loadChildren: () => import('./third-party-network/third-party-network.module').then(mod => mod.ThirdPartyNetworkModule)\r\n    },\r\n    {\r\n        path: \"Carrier/Calendar\",\r\n        loadChildren: () => import('./calendar/tfcalendar.module').then(mod => mod.TfcalendarModule)\r\n    },\r\n    {\r\n        path: \"SuperAdmin/SuperAdmin/CreateTerminals\",\r\n        loadChildren: () => import('./superadmin-create-terminals/superadmin-create-terminal.module').then(m => m.SuperadminCreateTerminalModule)\r\n    },\r\n    {\r\n        path: \"Supplier/FuelGroup/Create\",\r\n        loadChildren: () => import('./create-fuel-group/create-fuel-group.module').then(mod => mod.CreateFuelGroupModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes, { enableTracing: false })\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TrueFill';\n}\n","<router-outlet>\r\n   \r\n</router-outlet>","import { DropdownItem } from \"src/app/statelist.service\";\r\nimport { DropDownItem } from \"./buyer-wally-board/Models/BuyerWallyBoard\";\r\n\r\n//REGULAR EXPRESSION CONSTANTS\r\nexport const RegExConstants = {\r\n    UsaZip: /^\\d{5}(?:[-\\s]\\d{4})?$/,\r\n    CanZip: /^[A-Za-z]\\d[A-Za-z][ ]\\d[A-Za-z]\\d$/,\r\n    Phone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\r\n    Email: /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i,\r\n    DateFormat: new RegExp(\"^((0?[1-9]|1[012])[-/.](0?[1-9]|[12][0-9]|3[01])[-/.](20)?[0-9]{4})*$\"),\r\n    Integer: /^\\d+$/,\r\n    Float: /^((\\d+(\\.\\d *)?)|((\\d*\\.)?\\d+))$/,\r\n    Quantity: \"^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$\",// Use for Net, Gross, lift quantity\r\n    MinMaxQuantity: \"/^([0-9]\\d*(\\.\\d+)?)$/\",\r\n    Fee : \"/^[0-9]\\d*(\\.\\d+)?$/\",\r\n    Date: new RegExp(/^(0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])[\\/\\-]\\d{4}$/),\r\n}\r\n\r\n//CONSTANTS FOR SCHEDULE BUILDER MODULE\r\nexport const SBConstants = {\r\n    CompletedScheduleStatuses: [7, 8, 9, 10, 24],\r\n    OnTheWayScheduleStatuses: [1, 3, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20],\r\n    DraggableScheduleStatuses: [0, 1, 2, 3, 4, 6, 14, 15, 16, 17, 18, 19, 23],\r\n    CancelledScheduleStatuses: [5],\r\n    SubDrOtherThanCancellStatus: [3, 23, 17, 11, 20, 15, 14, 1, 16, 6, 12],\r\n    CancelCompletedDraftStatus: [7, 8, 5, 0]\r\n}\r\n\r\n//RACK AVG TYPE\r\nexport const RackAvgTypes: DropdownItem[] = [\r\n    { Id: 1, Name: '+$', Code: '' },\r\n    { Id: 2, Name: '-$', Code: '' },\r\n    { Id: 3, Name: '+%', Code: '' },\r\n    { Id: 4, Name: '-%', Code: '' }\r\n]\r\n\r\nexport interface DropDown {\r\n    id: string;\r\n    text: string;\r\n    disabled?: boolean;\r\n    children?: Array<DropDown>;\r\n    additional?: any;\r\n}\r\n\r\nexport const NumberConstants = {\r\n    MinQuantity: 0.00001,\r\n    MaxQuantity: 9999999999,\r\n\r\n    MinPercent: 0.00001,\r\n    MaxPercent: 100,\r\n}\r\n\r\nexport const allowedFileSizeInMB: number = 5; //MB\r\n\r\nexport const additiveProductTypeId: number = 26;\r\n\r\nexport const loginURL: string = \"/Account/Login\";\r\n\r\nexport function IsValidFileSize(sizeInBytes: number) {\r\n    if (sizeInBytes) {\r\n        return (Math.round(sizeInBytes / 1024) / 1024) <= allowedFileSizeInMB;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const ColorConstants = ['HotPink', 'CornflowerBlue', 'Olive', 'SteelBlue', 'Gray', 'Tomato', 'Orange', 'Gold', 'DarkCyan', 'ForestGreen', 'FireBrick', 'YellowGreen', 'SkyBlue', 'Orchid', 'Wheat', 'DarkTurquoise', 'Crimson', 'Chocolate', 'LightBlue', 'Lime', 'Maroon', 'Teal',];\r\n\r\n\r\nexport const LoadPriorities: DropDownItem[] =\r\n    [\r\n        { Id: 1, Name: 'Must Go' },\r\n        { Id: 2, Name: 'Should Go' },\r\n        { Id: 3, Name: 'Could Go' }\r\n    ];\r\n\r\nexport const InventoryDataCaptureList: DropDownItem[] =\r\n    [\r\n        { Id: 0, Name: 'Not specified' },\r\n        { Id: 1, Name: 'Connected' },\r\n        { Id: 2, Name: 'Manual' },\r\n        { Id: 3, Name: 'Call-In' },\r\n        { Id: 4, Name: 'Mixed' }\r\n    ];\r\n\r\nexport const ScheduleTypes : DropDownItem[] = [\r\n    { Id: 1, Name: \"Weekly\" },\r\n    { Id: 2, Name: \"Bi-Weekly\" },\r\n    { Id: 3, Name: \"Monthly\" },\r\n    { Id: 4, Name: \"Specific Date(s)\" },\r\n]\r\n\r\nexport const ScheduleDays = [\r\n    { id: \"1\", text: \"Mon\" },\r\n    { id: \"2\", text: \"Tue\" },\r\n    { id: \"3\", text: \"Wed\" },\r\n    { id: \"4\", text: \"Thu\" },\r\n    { id: \"5\", text: \"Fri\" },\r\n    { id: \"6\", text: \"Sat\" },\r\n    { id: \"7\", text: \"Sun\" }\r\n]\r\n\r\nexport const ScheduleQuantityType = [\r\n    {\r\n        Id: 1, Code: \"1\", Name: \"Quantity\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 2, Code: \"2\", Name: \"Balance\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 3, Code: \"3\", Name: \"Full Load\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 4, Code: \"4\", Name: \"Small Compartment\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    },\r\n    {\r\n        Id: 5, Code: \"5\", Name: \"Not Specified\", DisplayName: null, DRNote: null, DeliveryLevelPO: null\r\n    }\r\n]\r\n","\r\nexport enum SelectedTabEnum {\r\n    Priority = 1,\r\n    Tanks = 2,\r\n    Location = 3\r\n}\r\n\r\nexport enum DeliveryReqPriority {\r\n    None = 0,\r\n    MustGo = 1,\r\n    ShouldGo = 2,\r\n    CouldGo = 3,\r\n}\r\n\r\nexport enum DeliveryReqStatus {\r\n    None = 0,\r\n    Pending = 1,\r\n    Assigned = 2,\r\n    ScheduleCreated = 3,\r\n    Deleted = 4,\r\n    Draft = 5,\r\n    InUse = 6\r\n}\r\n\r\nexport enum DeliveryGroupStatus {\r\n    None = 0,\r\n    Draft = 1,\r\n    Published = 2,\r\n    Deleted = 3\r\n}\r\n\r\nexport enum DeliveryRequestTypes {\r\n    None = 0,\r\n    MustGo = 1,\r\n    ShouldGo = 2,\r\n    CouldGo = 3,\r\n    Missed = 4,\r\n    AssignedToMe = 5,\r\n    AssignedByMe = 6,\r\n}\r\n\r\nexport enum DSBMethodd {\r\n    None = 0,\r\n    Save = 1,\r\n    DriverAssignment = 2,\r\n    Publish = 3,\r\n    Delete = 4,\r\n    DragDrop = 5\r\n}\r\n\r\nexport enum TripStatus {\r\n    None = 0,\r\n    Added = 1,\r\n    Modified = 2,\r\n    Deleted = 3\r\n}\r\n\r\nexport enum ObjectFilter {\r\n    None = 0,\r\n    Driver = 1,\r\n    Trailer = 2\r\n}\r\nexport enum WindowModeFilter {\r\n    None = 0,\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\nexport enum QueueFilter {\r\n    DRs = 1,\r\n    Queued = 2\r\n}\r\nexport enum RegionFilter {\r\n    None = 0,\r\n    MyRegion = 1,\r\n    OtherRegion = 2\r\n}\r\n\r\nexport enum DateFilter {\r\n    None = 0,\r\n    Today = 1,\r\n    Tomorrow = 2,\r\n    Date = 3,\r\n    YesterDay = 4\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2,\r\n    Barrels = 3,\r\n    MetricTons = 4\r\n}\r\n\r\nexport enum DeliveryRequestFor {\r\n    UnKnown = 0,\r\n    Tank = 1,\r\n    Order = 2,\r\n    ProductType = 3\r\n}\r\n\r\nexport enum PickupLocationType {\r\n    None = 0,\r\n    Terminal = 1,\r\n    BulkPlant = 2\r\n}\r\n\r\nexport enum BrokeredDrCarrierStatus {\r\n    None = 0,\r\n    Pending = 1,\r\n    Accepted = 2,\r\n    Rejected = 3,\r\n    Recalled = 4\r\n}\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests\r\n}\r\n\r\nexport enum TruckStatus {\r\n    Active = 1,\r\n    InActive = 2,\r\n    UnderMaintenance = 3\r\n}\r\n\r\nexport enum TrailerType {\r\n    Lead = 1,\r\n    Pup = 2,\r\n    Quad = 3,\r\n    Tandem = 4,\r\n    Tridem = 5\r\n}\r\n\r\nexport enum LicenceRequirement {\r\n    Class1 = 1,\r\n    Class3 = 2,\r\n}\r\n\r\nexport enum SelectedMapLabelEnum {\r\n    OnTheWayToTerminal = 11,\r\n    ArrivedAtTerminal = 12,\r\n    OnTheWayToLocation = 1,\r\n    ArrivedAtLocation = 18\r\n}\r\n\r\nexport enum TrailerTypeEnum {\r\n    Lead = 1,\r\n    Pup = 2,\r\n    Quad = 3,\r\n    Tandem = 4,\r\n    Tridem = 5\r\n}\r\n\r\nexport enum DeliveryShiftEnum {\r\n    None = 0,\r\n    Morning = 1,\r\n    Evening = 2\r\n}\r\n\r\nexport class DrFilterPreferencesModel {\r\n    Id: string;\r\n    UserId: number;\r\n    CompanyId: number;\r\n    Date: Date;\r\n    FilterData: string;\r\n    StatusCode: number;\r\n    StatusMessage: string;\r\n    RegionId: string;\r\n}\r\n\r\nexport enum OrderType {\r\n    ALL = 0,\r\n    FTL = 1,\r\n    LTL = 2,\r\n}\r\n\r\nexport enum CumulationType {\r\n    Unknown = 0,\r\n    Weekly = 1,\r\n    BiWeekly = 2,\r\n    Monthly = 3,\r\n    SpecificDates = 4\r\n}\r\n\r\nexport enum WeekDay {\r\n    Monday = 1,\r\n    Tuesday = 2,\r\n    Wednesday = 3,\r\n    Thursday = 4,\r\n    Friday = 5,\r\n    Saturday = 6,\r\n    Sunday = 7\r\n}\r\n\r\nexport enum TierPricingType {\r\n    Unknown = 0,\r\n    VolumeBased = 1,\r\n    DeliveryQuantityBased = 2\r\n}\r\n\r\nexport enum PricingType {\r\n    RackAverage = 1,\r\n    PricePerGallon = 2,\r\n    Tier = 3,\r\n    Suppliercost = 4,\r\n    RackLow = 5,\r\n    RackHigh = 6\r\n}\r\n\r\nexport enum ColumnStatusEnum {\r\n    None = 0,\r\n    Completed = 1,\r\n    Partial = 2,\r\n    Empty = 3,\r\n    Published = 4,\r\n}\r\n\r\nexport enum DSBLoadQueueStatus {\r\n    New = 0,\r\n    InProgress,\r\n    Success,\r\n    Failed\r\n}\r\n\r\nexport enum PanelStatus {\r\n    ShowRouteList = 1,\r\n    ShowForm = 2\r\n}\r\n\r\nexport enum Exception {\r\n    UnKnowDelivery = 4,\r\n    MissingDelivery = 5\r\n}\r\n\r\nexport enum WeekDays {\r\n    SUN = 0,\r\n    MON = 1,\r\n    TUE = 2,\r\n    WED = 3,\r\n    THU = 4,\r\n    FRI = 5,\r\n    SAT = 6\r\n}\r\n\r\nexport enum Status {\r\n    InActive = 0,\r\n    Active = 1\r\n}\r\n\r\nexport enum DeleteDriverSchedule {\r\n    Single = 1,\r\n    Range = 2,\r\n    Whole = 3\r\n}\r\n\r\nexport enum FreightRateRuleType {\r\n    Unknown = 0,\r\n    P2P = 1,\r\n    Range = 2,\r\n    Route = 3\r\n}\r\n\r\nexport enum FuelGroupType {\r\n    Unknown = 0,\r\n    Standard = 1,\r\n    Custom = 2\r\n}\r\n\r\nexport enum FreightPricingMethod {\r\n        Manual = 1,\r\n        Auto = 2,\r\n}\r\n\r\nexport enum FreightRateCalcPreferenceType {\r\n    Unknown = 0,\r\n    Round = 1,\r\n    Proportion = 2\r\n}\r\n\r\nexport enum TableType {\r\n    Unknown = 0,\r\n    Master = 1,\r\n    Customer = 2,\r\n    Carrier = 3\r\n}\r\n\r\nexport enum PeriodEnum {\r\n    WEEKLY = \"WEEKLY\",\r\n    MONTHLY = \"MONTHLY\",\r\n    ANNUALY = \"ANNUALY\"\r\n}\r\n\r\nexport enum WeekDays {\r\n    Sun = 0,\r\n    Mon = 1,\r\n    Tue = 2,\r\n    Wed = 3,\r\n    Thu = 4,\r\n    Fri = 5,\r\n    Sat = 6\r\n}\r\n\r\nexport enum WeekEnum {\r\n    Same_Week = \"Same Week\",\r\n    Week_Later_1 = \"1 Week Later\",\r\n    Week_Later_2 = \"2 Weeks Later\",\r\n    Week_Later_3 = \"3 Weeks Later\"\r\n}\r\n\r\nexport enum MonthEnum {\r\n    Month_Later_1 = \"1 Month Later\",\r\n    Month_Later_2 = \"2 Months Later\",\r\n    Month_Later_3 = \"3 Months Later\"\r\n}\r\n\r\nexport enum AnnualyEnum {\r\n    Year_Later_1 = \"1 Year Later\",\r\n    Year_Later_2 = \"2 Years Later\",\r\n    Year_Later_3 = \"3 Years Later\"\r\n}\r\n\r\nexport class SourceRegionInputModel {\r\n    TableType: string;\r\n    CustomerId: number[] = [];\r\n    CarrierId: number[] = [];\r\n}\r\n\r\nexport enum FreightTableStatus {\r\n    Draft = 1,\r\n    Published = 2,\r\n    Archived = 3\r\n}\r\n\r\nexport enum ServiceOfferingType {\r\n    FTL = 1,\r\n    LTL,\r\n    LTLWetHosing,\r\n    DEF,\r\n    DEFWetHosing\r\n}\r\n\r\nexport enum WizardTabEnum {\r\n    None = 0,\r\n    ContactInfo,\r\n    CompanyInfo,\r\n    FleetInfo,\r\n    ServiceOfferings\r\n}\r\n\r\nexport enum WaitingAction {\r\n    Nothing = 0,\r\n    UpdatedPrice = 1,\r\n    AvalaraTax = 2,\r\n    CustomerApproval = 3,\r\n    BolDetails = 4,\r\n    ExceptionApproval = 5,\r\n    Images = 6,\r\n    PrePostDipData = 7\r\n}\r\n\r\nexport enum LFVRecordStatus {\r\n    None = 0,\r\n    Clean, //Matched Records\r\n    PendingMatch,\r\n    NoMatch,\r\n    IgnoreMatch,\r\n    UnMatched,\r\n    ActiveExceptions,\r\n    ReprocessSubmitted,\r\n    Duplicate,\r\n    PartialMatch,\r\n    ForcedIgnore\r\n}\r\n\r\nexport enum OrderGroupType {\r\n    MultiProducts = 1,\r\n    Tier = 2,\r\n    Blend = 3\r\n}\r\n\r\nexport enum SourcingRequestStatus {\r\n    Submitted = 1,\r\n    Modified = 2,\r\n    Accepted = 3,\r\n    AcceptedAndModified = 4,\r\n    OrderCreated = 5,\r\n    Lost = 6\r\n}\r\n\r\nexport enum TractorStatus {\r\n    Active = 1,\r\n    InActive = 2,\r\n    UnderMaintenance = 3\r\n}\r\n\r\nexport enum ApiResultType {\r\n    Total = 3,\r\n    Success = 0,\r\n    Exception = 1,\r\n}\r\n\r\nexport enum ReqResType {\r\n    Response = 1,\r\n    Request = 2,\r\n}\r\n\r\nexport enum DefTrailerAssetType {\r\n    \"Box Truck\" = 1,\r\n    \"Tank Wagon\" = 2,\r\n    \"Stake Bed\" = 3,\r\n    \"Transport\" = 4,\r\n}\r\n\r\nexport enum FuelTrailerAssetType {\r\n    FTL = 1,\r\n    LTL = 2\r\n}\r\n\r\nexport enum Country {\r\n    All = 0,\r\n    USA = 1,\r\n    CAN = 2,\r\n    CAR = 4\r\n}\r\nexport enum SourcingRequestDisplayStatus {\r\n    All = 1,\r\n    New = 2,\r\n    WIP = 3,\r\n    Sourced = 4,\r\n    Lost = 5\r\n}\r\nexport enum SalesTabViewType {\r\n    PriorityTab = 1,\r\n    TanksTab = 2,\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { GlobalModule } from './modules/global.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MarinePortsVesselsModule } from './marine-ports-vessels/marine-ports-vessels.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        SidebarComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        //modules for lazy loading\r\n        GlobalModule,\r\n        NgbModule,\r\n        MarinePortsVesselsModule\r\n    ],\r\n\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({ name: 'startsWith' })\r\nexport class startsWithPipe implements PipeTransform {\r\n    transform(value: any[], term: string): any[] {\r\n        return value.filter((x: any) => x.Carrier != null && x.Carrier != undefined && x.Carrier.Name.toLowerCase().indexOf(term.toLowerCase()) >= 0)\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'startsWithJob' })\r\nexport class startsWithJobPipe implements PipeTransform {\r\n    transform(value: any[], term: string): any[] {\r\n        return value.filter((x: any) => x.Job.Name != null && x.Job.Name != undefined && x.Job.Name.toLowerCase().indexOf(term.toLowerCase()) >= 0)\r\n    }\r\n}\r\n","import { LicenceRequirement, TrailerType, TruckStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from '../carrier-companies/service/assigncarrier.service';\r\n\r\nexport class Compartment {\r\n    public CompartmentId: string;\r\n    public FuelType: number;\r\n    public Capacity: number;\r\n    public PumpId: string;\r\n}\r\n\r\nexport class TruckDetailsModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public TruckId: string;\r\n    public Owner: string;\r\n    public FuelCapacity: number;\r\n    public ContractNumber: string;\r\n    public Compartments: Compartment[];\r\n    public CreatedBy: number;\r\n    public CompanyId: number;\r\n    public CreatedDate: Date;\r\n    public Status: TruckStatus;\r\n    public TrailerType: TrailerType;\r\n    public LicenceRequirement: LicenceRequirement;\r\n    public LicencePlate: string;\r\n    public ExpirationDate: string;\r\n    public IsDeleted: boolean;\r\n    public Drivers: DropdownItem[];\r\n    public IsPump: string;\r\n    public IsFilldCompatible: boolean;\r\n}\r\n\r\n","import * as moment from 'moment';\r\nimport { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, DeliveryRequestFor, DeliveryRequestTypes, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus, WindowModeFilter } from 'src/app/app.enum';\r\nimport { TfxCarrierDropdownDisplayItem } from 'src/app/company-addresses/region/model/region';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { JobRegionModel, RouteInfoDetails } from './location';\r\n\r\n\r\nexport class BlendedRequest {\r\n    public Berth: string;\r\n    public Id: string;\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public ProductType: string;\r\n    public ProductTypeId: number;\r\n    public RequiredQuantity: number;\r\n    public QuantityInPercent: number;\r\n    public PickupLocationType: number;\r\n    public StatusClassId: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsAdditive: boolean;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public UoM: number;\r\n    public JobId: number;\r\n    public CarrierStatus: number;\r\n    public IsBlendedRequest: boolean;\r\n    public IsCommonPickupForBlend: boolean;\r\n    public BlendedGroupId: string;\r\n    public BlendedProductName: string;\r\n    public AdditiveProductName: string;\r\n    public IsBlendedDrParent: boolean;\r\n    public TotalBlendedQuantity: number;\r\n    public BlendParentProductTypeId: number;\r\n    public SelectedDate: string;\r\n    public IsFutureDR: boolean;\r\n    public IsCalendarView: boolean\r\n    public IsDispatcherDragDrop: boolean = false;\r\n    public DispatcherDragDropSequence: number;\r\n    public DeliveryLevelPO: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n    public IndicativePrice: number;\r\n\r\n    constructor(isAdditive: boolean) {\r\n        this.IsBlendedRequest = false;\r\n        this.IsCommonPickupForBlend = false;\r\n        this.BlendedGroupId = null;\r\n        this.PickupLocationType = 1;\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.IsAdditive = isAdditive;\r\n        this.SelectedDate =  moment(new Date()).format('DD/MM/YYYY')\r\n    }\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    //public SiteName: string;\r\n    //public CompanyName: string;\r\n    //public AssetId: number;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    //public Level: number;\r\n    public Ullage: number;\r\n    public ScheduleQuantityType: number;\r\n    //public GrossVolume: number;\r\n    public NetVolume: number;\r\n    //public WaterNetLevel: number;\r\n    //public WaterGrossLevel: number;\r\n    //public CaptureTime: string;\r\n    public FuelTypeId: number;\r\n    public ProductName: string;\r\n    public ProductTypeId: number;\r\n    //public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    //public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public IsReAssignToCarrier: boolean = false;\r\n    public IsTankAndAssetAvailableForJob: boolean;\r\n    public CurrentThreshold: number;\r\n    //public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n    public RecurringDRScheduleDetails: RecurringDRSchedule[] = [];\r\n    public isRecurringSchedule: boolean;\r\n    public PoNumber: string;\r\n    public DisplayCaptureTime: string;\r\n    public SupplierCompanyId: number;\r\n    public SupplierCompanies: DropdownItem[];\r\n    public DispactherNote: string;\r\n    public IsCommonBadge: string;\r\n    public Badge1: string;\r\n    public Badge2: string;\r\n    public Badge3: string;\r\n    //public FuelTypeId: string;\r\n    public OrderPickupDetails: OrderPickupDetailModel[];\r\n    public BlendOrderPickupDetails: OrderPickupDetailModel[];\r\n    public Tanks: TankDipTestViewModel[];\r\n    // BLENDED DR\r\n    // public IsBlendedRequest: boolean;\r\n    // public BlendedRequests: BlendedRequest[] = [];\r\n    // public IsCommonPickupForBlend: boolean;\r\n    // public BlendedGroupId: string;\r\n    public SelectedDate: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class CompatibleProductModel {\r\n    public ProductTypeId: number;\r\n    public MappedToProductTypeIds: number[];\r\n}\r\n\r\nexport class TankDipTestViewModel {\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    // public Level: number;\r\n    public Ullage: number;\r\n    //public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterLevel: number;\r\n    // public WaterGrossLevel: number;\r\n    // public CaptureTime: string;\r\n    // public DataSourceTypeId: number;\r\n    public TankCapacity: number;\r\n    //public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    // public FillType: number;\r\n    public ReorderPercent: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n    public DisplayCaptureTime: string;\r\n    // for UI dropdown\r\n    public IsShowMore: boolean = false;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    RegionIds: string[];\r\n    Jobs: JobRegionModel[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n    public ScheduleQuantityType: number;\r\n    public ScheduleQuantityTypeName: string;\r\n    public IsMissedDr: boolean;\r\n}\r\n\r\nexport class DelRequestByTimeModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n    }\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: number;\r\n    public EndTime: number;\r\n}\r\n\r\nexport class DelRequestsByJobModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.IsBlendedRequest = false;\r\n        this.IsCommonPickupForBlend = false;\r\n        this.BlendedGroupId = null;\r\n    }\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobName: string;\r\n    public CustomerCompany: string;\r\n    public TrailerCompatibility: string;\r\n    public HoursToCoverDistance: string;\r\n    public _HoursToCoverDistance: number;\r\n    public IsOnlyNightDelivery: boolean;\r\n    public DeliveryRequestType: DeliveryRequestTypes;\r\n    public Priority: DeliveryReqPriority;\r\n    public CarrierStatus: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public DeliveryWindow: any\r\n    public JobCity: string;\r\n    public CustomerBrandId: string;\r\n    public IsTBD: boolean;\r\n    public TBDGroupId: string;\r\n    public ProductType: string;\r\n    public ProductTypeId: number;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public ScheduleQuantityTypeText: string;\r\n    public DeliveryDateStartTime: string;\r\n    public Vessel: string;\r\n    public Berth: string;\r\n    public IsMarine: boolean;\r\n    //BLENDED DR\r\n    public IsBlendedRequest: boolean;\r\n    public IsCommonPickupForBlend: boolean;\r\n    public BlendedGroupId: string;\r\n}\r\n\r\nexport class SplitBlendDRModel {\r\n    public OrderId: number;\r\n    public RequiredQuantity: number;\r\n    public ParentDrId: string;\r\n    public ProductType: string;\r\n    public FuelType: string;\r\n    public UoM: number;\r\n}\r\n\r\nexport class DeliveryRequestViewModel extends BlendedRequest {\r\n    constructor(isAdditive: boolean) {\r\n        super(isAdditive);\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n        this.Compartments = [];\r\n        this.IsRetainFuelLoaded = false;\r\n    };\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public SiteId: string;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public isRecurringSchedule: boolean;\r\n    public RecurringScheduleId: string;\r\n    public ScheduleQuantityType: number;\r\n    public RecurringScheduleInfo: string;\r\n    public ScheduleQuantityTypeText: string;\r\n    public RouteInfo: RouteInfoDetails;\r\n    public Compartments: CompartmentInfo[];\r\n    public DeliveryRequestFor: DeliveryRequestFor\r\n    public IsFilldInvoke: boolean;\r\n    public Notes: string;\r\n    public IsRetainFuelLoaded: boolean;\r\n    public DeliveryWindow: string;\r\n    public DelReqSource: number;\r\n    public IsPreloadDisable: boolean;\r\n    public IsSpiltDRIconVisible: boolean;\r\n    public GroupParentDRId: string;\r\n    public BlendParentProductTypeId: number;\r\n    public GroupChildDRs: string[];\r\n    public ProductSequence: number;\r\n    public IsBrokered: boolean;\r\n    public TrailerTypes: DropdownItem[];\r\n    public IsAcceptNightDeliveries: boolean = false;\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public HoursToCoverDistance: string;\r\n    public CustomerBrandId: string;\r\n    public IsJobFilter: boolean = false;\r\n    public IsMaxFillAllowed: boolean = false;\r\n    public CarrierRejected: string;\r\n    public CurrentCarrier: string;\r\n    public UpcomingCarrier: string;\r\n    public IsBrokeredCarrierDR: boolean = false;\r\n    public CurrentInventory: string;\r\n    public Ullage: string;\r\n    public AssignedOn: Date;\r\n    public StringAssignedOn: string;\r\n    public IsTBD: boolean;\r\n    public TBDGroupId: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TBDLocations: any[] = [];\r\n    public IsSpiltDRAdded: boolean = false;\r\n    public SpiltDRs: SpiltDRsModel[] = [];\r\n    public OrderType: number = 0;\r\n    public DeliveryDateStartTime: string;\r\n    public Vessel: string;\r\n    public IsMarine: boolean = false;\r\n    public BlendDrScheduleStatus: number;\r\n    public SelectedDate: string;\r\n    public IsFutureDR: boolean = false;\r\n    public IsCalendarView: boolean = false;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n    public Sap_OrderNo: string;\r\n    public UniqueOrderNo: string;\r\n}\r\n\r\nexport class CompartmentModel {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Quantity: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DriverAdditionalDetailModel[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public DSBFilter: number;\r\n    public IsNoDriverShiftFound: number;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n    public IsDsbDriverSchedule: boolean;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\nexport class CalendarScheduleModel {\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ShiftId: string;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n}\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public FuelCapacity: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n    public IsFilldCompatible: boolean;\r\n    public RetainFuel: any[];\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n    public IsVisible: boolean = true;\r\n    public OrderNo: number;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class FiltersData {\r\n    constructor() { }\r\n    public IsShowCarrierManaged: boolean;\r\n    public SelectedTab: number;\r\n    public SelectedCarrierId: string;\r\n    public SelectedRegionId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public AllowDriverChange: boolean;\r\n    public Trips: TripModel[];\r\n    public Drivers: DriverAdditionalDetailModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public LoadQueueId: string;//mongo object id\r\n    public IsLoadQueueCollapsed: boolean;//is moved to load queue\r\n    public IsColumnSelected: boolean;//in load queue panel\r\n    public IsLoadQueueColumnBlocked: boolean;\r\n    public IsIncludeAllRegionDriver: boolean;\r\n    public LoadQueueColumnStatus: boolean;\r\n    public IsDriverScheduleExists: boolean;\r\n    public DriverRowIndex: number;\r\n}\r\n\r\nexport class DriverAdditionalDetailModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public IsFilldCompatible: boolean;\r\n    public Shifts: string;\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n    public isRecurringSchedule: boolean;\r\n    public RecurringScheduleId: string;\r\n    public ScheduleQuantityType: number;\r\n    public ScheduleQuantityTypeText: string;\r\n    public IsTrailerExists: boolean;\r\n    public IsPreLoadInfo: boolean = false;\r\n    public IsPreloadDisable: boolean = false;\r\n    public IsDriverScheduleExists: boolean;\r\n    public IsIncludeAllRegionDriver: boolean;\r\n    public IsDispatcherDragDropSequence: boolean = false;\r\n    public IsDispatcherDragDropSequenceModified: boolean = false;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n        this.CountryGroup = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public CountryGroup: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public OrderName: string;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public SiteId: number;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n    public TruckLoadType: number;\r\n    public DRNote: string;\r\n    public UoM: string;\r\n    public Badge1: string;\r\n    public Badge2: string;\r\n    public Badge3: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            CountryGroup: { Id: 0, Code: \"\", Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n    public TrailerDisplayId: string;\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n    public AllowCustomerDriverChat: boolean;\r\n    InventoryDataCaptureTypeName?: string;\r\n    public FuelRetainCount: number;\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface vessel {\r\n    Name: string;\r\n    Id: number;\r\n}\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n    'fuelType': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MinFill: number;\r\n    MaxFillPercent: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n    CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string;\r\n    RegionId: string;\r\n    CarrierDetails: DropdownItem[];\r\n}\r\n\r\n\r\nexport interface JobDetailsWithOrders {\r\n    OrderId: number;\r\n    JobId: number;\r\n    FuelTypeId: number;\r\n    PoNumber: string;\r\n    DisplayJobID: string;\r\n    JobName: string;\r\n    Address: string;\r\n    City: string;\r\n    UoM: number;\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    BadgeNo1: string;\r\n    BadgeNo2: string;\r\n    BadgeNo3: string;\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DriverAdditionalDetailModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DriverAdditionalDetailModel[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    DefaultUOM: number;\r\n    IsDeleted: boolean;\r\n    TrailerFuelRetains: TrailerFuelRetainViewModel[];\r\n    OngoingData: WhereIsMyDriverModel[];\r\n}\r\n\r\nexport class TrailerFuelRetainViewModel {\r\n    public Id: string\r\n    public TrailerId: string\r\n    public CompartmentId: string\r\n    public CompartmentCapacity: number;\r\n    public Quantity: number;\r\n    public UOM: number;\r\n    public DeliveryRequestId: string\r\n    public ProductType: string\r\n    public ProductId: number;\r\n    public OrderId: string\r\n    public CreatedDate: string\r\n    public UpdatedOn: string\r\n    public TfxDriverId: number;\r\n\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    IsMaxFillAllowed: boolean = false;\r\n    //IsReAssignToCarrier: boolean = false;\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    BuyerCompanyName: string;\r\n    ExistingDR: PartialDRDetail[];\r\n    RecurringDRSchedule: RecurringDRSchedule[];\r\n    isRecurringSchedule: boolean = false;\r\n    ScheduleQuantityType: number = 0;\r\n    ScheduleQuantityTypeText: string;\r\n    DeliveryReqId: string;\r\n    CarrierStatus: number;\r\n    DeliveryRequestFor: DeliveryRequestFor;\r\n    IsEndSupplier: boolean = false;\r\n    IsDispatchRetained: boolean = false;\r\n    Notes: string;\r\n    GroupParentDRId: string;\r\n    ProductSequence: number;\r\n    CurrentThreshold: number;\r\n    BadgeNo1: string;\r\n    BadgeNo2: string;\r\n    BadgeNo3: string;\r\n    DispatcherNote: string;\r\n    Terminal: DropdownItem;\r\n    BulkPlant: DropAddressModel;\r\n    PickupLocationType: number;\r\n    public TrailerTypes: DropdownItem[];\r\n    public IsAcceptNightDeliveries: boolean = false;\r\n    public LoadQueueAttributes: LoadQueueAttributes;\r\n    public DRQueueAttributes: DRQueueAttributes;\r\n    public HoursToCoverDistance: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n    Id: string;\r\n    IsRecurringSchedule: boolean;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrivers: DropdownItem[];\r\n    public IsTrailerExists: boolean;\r\n    public PreloadDrs: any[];\r\n    public SbDsbView: number;\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\nexport class RecurringDRSchedule {\r\n    public Id: string;\r\n    public ScheduleType: number;\r\n    public WeekDayId: string[];\r\n    public MonthDayId: number;\r\n    public Date: string;\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n    public OrderId: number;\r\n    public SiteId: number;\r\n    public JobId: number;\r\n    public TfxSupplierCompanyId: number;\r\n    public TfxCompanyName: string;\r\n    public TfxUserId: number;\r\n    public AssignedToCompanyId: number;\r\n}\r\n\r\nexport class UnAssignDriverFromShiftModel {\r\n    public sbId: string;\r\n    public DriverRowIdx: number;\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public shiftIdx: number;\r\n\r\n}\r\n\r\nexport class SalesDataModel {\r\n    public CompanyId?: number;\r\n    public CompanyName?: string;\r\n    public SiteId?: string;\r\n    public TankId?: string;\r\n    public StorageId?: string;\r\n    public TankName?: string;\r\n    public AvgSale?: string;\r\n    public PrevSale?: string;\r\n    public WeekAgoSale?: string;\r\n    public Inventory?: string;\r\n    public Ullage?: string;\r\n    public LastDeliveryDate?: string;\r\n    public LastDeliveredQuantity?: string;\r\n    public DaysRemaining?: string;\r\n    public Status?: string;\r\n    public Priority: DeliveryReqPriority;\r\n    public TfxJobId: number;\r\n    public ProductTypeId: number;\r\n    public MaxFillQuantity?: number;\r\n    public IsUnknownOrMissing?: boolean;\r\n    public RegionId: string;\r\n    public LastReadingTime: string;\r\n    public LocationManagedType: number;\r\n    public UOM: number;\r\n}\r\n\r\nexport class DeliveryDetailsModel {\r\n    public TrackableScheduleId: number;\r\n    public ScheduleDate: string;\r\n    public ScheduleTime: string;\r\n    public Driver: string;\r\n    public Carrier: string;\r\n    public Quantity: number;\r\n    public QuantityTypeId: number;\r\n    public QuantityTypeName: string;\r\n}\r\n\r\nexport class DeliveryRequestBrokerInfoViewModel {\r\n    //single DR\r\n    public OrderId: number;\r\n    public CarrierCompanyId: number;\r\n    public DispatcherNote: string;\r\n    public CarrierRegionId: string;\r\n    public DeliveryRequest: DeliveryRequestViewModel;\r\n    public IsDispatchRetainedByCustomer: boolean;\r\n    //multiple dr\r\n    public BrokerDrModel: BrokerDrModel[];\r\n    public ScheduleBuilderId: string;\r\n    //carriers\r\n    public CarrierInfo: TfxCarrierDropdownDisplayItem[];\r\n    public CarrierInfoJson: string;\r\n    public BlendedGroupId: string;\r\n}\r\n\r\nexport class BrokerDrModel {\r\n    public OrderId: number;\r\n    public CarrierCompanyId: number;\r\n    public CarrierRegionId: string;\r\n    public DeliveryRequest: DeliveryRequestViewModel;\r\n    public IsDispatchRetainedByCustomer: boolean;\r\n    public BlendedGroupId: string;\r\n    public IsBlendedGroupProduct: boolean = false;\r\n}\r\n\r\nexport class CompartmentInfo {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Quantity: number;\r\n    public RetainInfo: RetainInfo\r\n}\r\n\r\nexport class TrailerCompartment {\r\n    constructor() {\r\n        this.Compartments = [];\r\n    }\r\n    public TrailerId: string;\r\n    public IsFuelRetain: boolean;\r\n    public IsCompartmentAvailable: boolean;\r\n    public Compartments: CompartmentInfo[];\r\n}\r\n\r\nexport class RetainInfo {\r\n    public OrderId: number;\r\n    public ProductId: number;\r\n    public DeliveryReqId: string;\r\n    public TfxTerminal: DropdownItem;\r\n    public TfxBulkPlant: DropAddressModel;\r\n    public PickupLocationType: PickupLocationType;\r\n    public Quantity: number;\r\n}\r\n\r\nexport class TrailerRetainCompartment {\r\n    public TrailerId: string;\r\n    public CompartmentId: string;\r\n    public Qty: number;\r\n}\r\n\r\nexport class ForecastingTankViewModel {\r\n    public TankName: string;\r\n    public TankFill: number;\r\n    public TankFillRemaining: number;\r\n    public LastInventoryReading: string;\r\n    public UllageSinceLastReading: string;\r\n    public LastReadingTime: string;\r\n    public EstimatedCurrentInventory: string;\r\n    public DeliverySinceLastReading: string;\r\n    public DaysLeft: number;\r\n    public ProductType: string;\r\n    public RegionId: string;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    TankInventoryDiffinHrs?: number;\r\n    public TfxProductTypeId: number;\r\n    public Status: string;\r\n    public MaxFillQuantity: string;\r\n    public AvgSale: string;\r\n    public PrevSale: string;\r\n    public WeekAgoSale: string;\r\n    public SiteInstructions: string;\r\n    public LocationManagedType: number;\r\n}\r\n\r\nexport class ForecastingInventoryViewModel {\r\n    public TankName: string;\r\n    public InventoryLevel: number;\r\n    public InventoryLevelQty: string;\r\n    public Ullage: string;\r\n    public PrevInventoryReading: string;\r\n    public SafetyStockQty: string;\r\n    public SafetyStock: number;\r\n    public RunOutLevel: number;\r\n    public RunOutLevelQty: string;\r\n    public PhysicalPumpStop: number;\r\n    public PhysicalPumpStopQty: string;\r\n}\r\n\r\nexport class ForecastingEstimatedUsageViewModel {\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public TankName: string;\r\n    public UsagePeriod: string;\r\n    public AverageBusinessDayUsage: string;\r\n    public TotalExceptedUsage: string;\r\n    public MaximumBusinessdayUsage: string;\r\n}\r\n\r\nexport class ForecastingDeliveryViewModel {\r\n    public TankName: string;\r\n    public NoOfDeliveries: number;\r\n    public LastDeliveredQty: string;\r\n    public LastDeliveredDate: string;\r\n}\r\n\r\nexport class ForecastingExistingScheduleViewModel {\r\n    public TankName: string;\r\n    public ExistingDeliverySchedule: number;\r\n    public DeliveryRequest: number;\r\n}\r\n\r\nexport class ForecastingTankChartViewModel {\r\n    public XAxisTimeSpan: string[];\r\n    public TankDetailsForChart: TankDetailsForChartModel[];\r\n    public TankLevels: TankLevelModel[];\r\n}\r\n\r\nexport class TankDetailsForChartModel {\r\n    public TankName: string;\r\n    public Data: number[];\r\n}\r\n\r\nexport class TankLevelModel {\r\n    public Time: string;\r\n    public Quantity: number;\r\n    public Type: number;\r\n}\r\n\r\nexport class OttoDeliveryRequests {\r\n    public Date: string;\r\n    public ShiftTime: string;\r\n    public Priority: number;\r\n    public CustomerName: string;\r\n    public ProductName: string;\r\n    public Quantity: string;\r\n    public QuantityUOM: string;\r\n    public TankName: string;\r\n    public LocationName: string;\r\n    public TankCapacity: string;\r\n}\r\n\r\nexport class OttoScheduleDetails {\r\n    public ShiftId: string;\r\n    public ShiftName: string;\r\n    public OttoDeliveryRequests: OttoDeliveryRequests[];\r\n}\r\n\r\nexport class OttoBuilder {\r\n    constructor() {\r\n        this.Loads = [];\r\n    }\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ShiftId: string;\r\n    public Loads: OttoTripModel[];\r\n}\r\n\r\nexport class OttoTripModel {\r\n    public StartTime: string;\r\n    public EndTime: string\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n}\r\n\r\nexport class ShiftViewModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public RegionId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public RegionName: string;\r\n    public ShiftInfo: string;\r\n    public StartTimespan: number;\r\n}\r\n\r\nexport class OttoNotifications {\r\n    public Id: string;\r\n    public TfxJobId: number;\r\n    public Message: string;\r\n    public ScheduleBuilderId: string;\r\n    public Status: string;\r\n}\r\nexport class SplitDeliveryRequestModel {\r\n    public ParentDRId: string;\r\n    public RequiredQtyDetails: [];\r\n}\r\nexport class RequiredQtyDetails {\r\n    public RequiredQty: number;\r\n}\r\nexport class BlendDRDetails {\r\n    //Marine Nomination\r\n    public DeliveryDateStartTime: string;\r\n    public TrackScheduleStatusName: string;\r\n    public Vessel: string;\r\n    public Berth: string;\r\n    //added for dr carrier assignment\r\n    public Id: string;\r\n    public ProductName: string;\r\n    public RequiredQuantity: number;\r\n    public PickupLocationType: number;\r\n    public Address: string;\r\n    public City: string;\r\n    public Code: string;\r\n    public ZipCode: string;\r\n    public PickupLocationName: string;\r\n    public IsAdditive: boolean;\r\n    public IsBlendedRequest: boolean;\r\n    public Priority: number;\r\n    public StatusClassId: number;\r\n    public IsBlinkDR: boolean;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n\r\n\r\n}\r\nexport class ProductDeliveryScheduleInfo  {\r\n    public LocationName: string;\r\n    public CustomerName: string;\r\n    public Status: number;\r\n    public StatusClassId: number;\r\n    public Priority: number;\r\n    public IsBlinkDR: boolean;\r\n    public BlendGroupId: string;\r\n    public ScheduleQuantityType: number;\r\n    public UoM: number;\r\n    public IsAutoCreatedDR: boolean;\r\n    public DelReqSource: number;\r\n    public isRecurringSchedule: boolean;\r\n    public IsCommonPickup: boolean;\r\n    public CommonPickupLocationType: number;\r\n    public IsFilldInvoke: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public BadgeNoInfo: string;\r\n    public TankMaxFill: number;\r\n    public RouteName: string;\r\n    public isPreload: boolean = false;\r\n    public isPostload: boolean = false;\r\n    public TripIndex: number;\r\n    public IsSelectedForAssignment: boolean;\r\n    public ScheduleQuantityTypeText: string;\r\n    public IsMarine: boolean = false;\r\n    public DrInfo: BlendDRDetails[] = [];\r\n    public Address: string;\r\n    public City: string;\r\n    public Code: string;\r\n    public ZipCode: string;\r\n    public PickupLocationName: string;\r\n    public ScheduleStartTime: Date;\r\n    public ScheduleEndTime: Date;\r\n}\r\n\r\nexport class ShiftColumnInfo {\r\n    public ColIndex: number;\r\n    public ColIndexName: string;\r\n}\r\nexport class ShiftLoadInfo {\r\n    public LoadIndex: number;\r\n    public LoadName: string;\r\n}\r\nexport class TransferDSInfo {\r\n    public dragData: DragDSInfo;\r\n}\r\nexport class DragDSInfo {\r\n    public Data: any;\r\n    public TripFrom: any;\r\n    public DrIndex: any;\r\n    public ShiftIndex: any;\r\n    public RowIndex: any;\r\n    public ColIndex: any;\r\n    public Schedule: any;\r\n    public DropTrip: any;\r\n    public DropSchedule: any;\r\n}\r\nexport class DRQueueAttributes {\r\n    public CustomerName: boolean;\r\n    public DeliveryShift: boolean;\r\n    public TrailerCompatibility: boolean;\r\n    public HoursToCoverDistance: boolean\r\n}\r\nexport class LoadQueueAttributes {\r\n    public LocationName: boolean;\r\n    public CustomerName: boolean\r\n    public Driver: boolean\r\n    public TrailerName: boolean;\r\n}\r\nexport class SbGridViewFilterModel {\r\n    public SearchLocation: string = \"\";\r\n}\r\n\r\nexport class DRReportFilterViewModel {\r\n    public Regions: DropdownItemExt[] = [];\r\n    public Locations: DropdownItem[] = [];\r\n}\r\n\r\nexport class DeliveryRequestReportGridModel {\r\n\r\n    public Location: string;\r\n    public RegionName: string;\r\n    public CustomerName: string;\r\n    public CustomerBrandID: string;\r\n    public ProductType: string;\r\n    public RequestedQuantity: number;\r\n    public LocationId: string;\r\n    public PoNumber: string;\r\n    public DrId: string;\r\n    public TfxJobId: number;\r\n    public Priority: number;\r\n    public RegionId: string;\r\n    public IsRecurringSchedule: boolean;\r\n    public IsAutoDR: boolean;\r\n    public UoM: string;\r\n\r\n}\r\n\r\nexport class DRReportFilterInputViewModel {\r\n    RegionIds: string;\r\n    LocationIds: string;\r\n    FromDate: string;\r\n    ToDate: string;\r\n}\r\n\r\nexport class OrderPartialDetailModel {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    FuelTypeId: number;\r\n    JobId: number;\r\n    DRNote: string;\r\n}\r\nexport class OptionalPickupDetailModel {\r\n    public incId: number;\r\n    public Id: string;\r\n    public RegionId: string;\r\n    public ScheduleBuilderId: string;\r\n    public ShiftId: string;\r\n    public ShiftIndex: number;\r\n    public ShiftOrderNumber: number;\r\n    public DriverColIndex: number;\r\n    public TfxFuelTypeId: number;\r\n    public TfxFuelTypeName: string;\r\n    public isAdded: number;\r\n    public DriverId: number = 0;\r\n    public DSBPickupLocationInfo: OptionalPickupLocationInfo = new OptionalPickupLocationInfo();\r\n\r\n}\r\nexport class OrderFuelInfo {\r\n    public StatusCode: number;\r\n    public OrderFuelDetails: OrderFuelDetails[] = [];\r\n}\r\nexport class OrderFuelDetails {\r\n    public OrderId: number;\r\n    public FuelTypeDetails: DropdownItem[] = [];\r\n}\r\nexport class OptionalPickupLocationInfo {\r\n    public PickupLocationType: number;\r\n    public TfxTerminal: DropdownItem = new DropdownItem();\r\n    public TfxBulkPlant: DropAddressModel = new DropAddressModel();\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public BadgeNoInfo: string;\r\n}\r\nexport class RaiseTBDDeliveryRequest {\r\n    public DeliveryRequests: TBDRaiseDRDeliveryRequests[] = [];\r\n}\r\nexport class TBDRaiseDRDeliveryRequests {\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public Priority: number;\r\n    public DelReqSource: number = 1;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public DispactherNote: string;\r\n    public Notes: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public Bulkplant: DropAddressModel;\r\n    public IsTBD: boolean = true;\r\n    public TBDGroupId: string;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public ProductTypeId: number;\r\n    public ProductType: string;\r\n    public UoM: number;\r\n    public DeliveryLevelPO: string;\r\n}\r\nexport class RegionDSBModel {\r\n    RegionId: string;\r\n    DSBShiftInfo: ShiftViewModel[];\r\n}\r\nexport class SpiltDRsModel {\r\n    public ScheduleQuantityType: number;\r\n    public RequiredQuantity: number;\r\n}\r\nexport class CancelDeliverySchedule {\r\n    ScheduleBuilderId: string;\r\n    DriverId: number;\r\n    ShiftIndex: number;\r\n    ShiftId: string;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    DeliveryReqId: string;\r\n    TrackableScheduleId: number;\r\n    ScheduleStatus: number;\r\n    TrackScheduleStatus: number;\r\n    TrackScheduleStatusName: string;\r\n    StatusClassId: number;\r\n}\r\nexport class CancelDSDeliveryScheduleInfo {\r\n    TfxCompanyId: number;\r\n    RegionId: string;\r\n    CancelDSDeliverySchedules: CancelDSDeliverySchedule[] = [];\r\n}\r\nexport class CancelDSDeliverySchedule {\r\n    DeliveryReqId: string;\r\n    IsSubDR: boolean = false;\r\n    IsPreLoadDR: boolean = false;\r\n}\r\nexport class CancelDSDeliveryScheduleViewModel {\r\n    IsChecked: boolean = false;\r\n    ScheduleBuilderDate: string;\r\n    ScheduleBuilderId: string;\r\n    DriverId: number;\r\n    DriverName: string;\r\n    Quantity: string;\r\n    FuelType: string;\r\n    CurrentState: string;\r\n    ShiftId: string;\r\n    ShiftIndex: number;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    DeliveryReqId: string;\r\n    TrackableScheduleId: number;\r\n    IsPreLoadDS: boolean = false;\r\n}\r\n\r\nexport class SubDRStatus {\r\n    GroupParentDRId: string;\r\n    DeliveryScheduleStatusId: number\r\n}\r\nexport class ResetDeliveryGroupScheduleModel {\r\n    public ScheduleBuilderId: string;\r\n    public DeliveryRequestIds: string[];\r\n}\r\nexport class DispatcherMapSeq {\r\n    JobId: number;\r\n    IsTBD: boolean = false;\r\n    TBDGroupId: string;\r\n}\r\n","import { DropdownItem, LocationDropdownItem } from 'src/app/statelist.service';\r\nimport { DropDownItem } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\r\n\r\nexport class LocationDetailsModel {\r\n    public Id: number;\r\n    public ControlNumber: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public AssignedTerminalId: string;\r\n    public CreatedByCompanyId: number;\r\n    public IsBulkPlant: boolean;\r\n    public TerminalSupplierId: number;\r\n    public TerminalSupplierName: string;\r\n}\r\n\r\nexport enum Country {\r\n    \"USA\" = 1,\r\n    \"CAN\" = 2,\r\n    \"CAR\" = 4\r\n}\r\n\r\n\r\n\r\n\r\nexport class TerminalMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class TerminalMappingGridModel {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n\r\nexport class RouteInformationModel {\r\n    Id: string;\r\n    Name: string;\r\n    TfxJobs: RouteTfxJobsList[];\r\n    RegionId: string;\r\n    TfxCompanyId: number;\r\n    CreatedBy: number;\r\n    ShiftInfoDetails: string;\r\n}\r\nexport class RouteInfoDetails {\r\n    Id: string;\r\n    Name: string;\r\n    LocationSeqNo: number;\r\n}\r\nexport class ShiftInfoViewModel {\r\n    Id: string;\r\n    TripId: string;\r\n    DriverRowIndex: number;\r\n    DriverColIndex: number;\r\n    ShiftIndex: number;\r\n}\r\nexport class RouteTfxJobsList {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    SequenceNo: number;\r\n}\r\nexport class JobWithSequence {\r\n    JobDetails: DropDownItem;\r\n    SequenceNo: number;\r\n}\r\nexport class JobRegionModel extends LocationDropdownItem{\r\n    RegionId: string;\r\n    LocationManagedType: number;\r\n}","import { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { DipTestViewModel, DeliveryRequestViewModel, CustomerJobsForCarrier, SplitDeliveryRequestModel, DRReportFilterViewModel, DRReportFilterInputViewModel, DeliveryRequestReportGridModel, SplitBlendDRModel, ScheduleBuilderModel } from '../models/DispatchSchedulerModels';\r\nimport { CustomerDetailsViewModel } from '../models/CustomerDetailsViewModel';\r\nimport { LocationDetailsModel } from '../models/location';\r\nimport { AdditiveOrderViewModel, DropdownItem } from 'src/app/statelist.service';\r\nimport { TruckDetailsModel } from '../model';\r\nimport { ProductMappingGridModel } from 'src/app/self-service-alias/models/ProductMappingModel';\r\nimport { CarrierDetailsViewModel } from '../models/CarrierDetailsViewModel';\r\nimport { ShiftModel } from '../../calendar/model';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CarrierService extends HandleError {\r\n    private GetTerminalsUrl = '/Location/GetTerminals';\r\n    private postTruckData = '/Carrier/Freight/Create';\r\n    private urlGetAllCustomerData = '/Carrier/Order/GetAllCustomerData';\r\n    private urlSaveAndUpdateCustomerMapping = '/Carrier/Order/SaveCarrierCustomerMapping';\r\n    private urlCustomerIdNotTaken = '/Carrier/Order/CheckDuplicateCustomerId';\r\n    private postCheckDuplicateTerminalId = 'Carrier/SelfServiceAlias/CheckDuplicateTerminalId';\r\n    private urlGetBlendCompatibleProductTypes = 'Carrier/ScheduleBuilder/GetBlendProductTypeMapping';\r\n\r\n    private urlGetHeldDrCount = '/Carrier/Freight/GetHeldDeliveryRequestCount';\r\n    private urlCheckAndLockDr = 'Carrier/ScheduleBuilder/CheckAndLockDRs';\r\n    private urlCheckAndReleaseDr = 'Carrier/ScheduleBuilder/CheckAndReleaseDRs';\r\n    private urlDeleteTruckData = '/Carrier/Freight/DeleteTruck';\r\n    private getDipTestData = '/Freight/GetDipTestData?jobId=';\r\n    private urlIsTankNotAvailableForOrderProducts = '/Freight/IsTankNotAvailableForOrderProducts?jobId=';\r\n    private getSiteList = '/Freight/GetSiteList?regionId=';\r\n    private getJobListForCarrierUrl = '/Freight/GetJobListForCarrier?regionId=';\r\n    private urlGetTrucks = '/Carrier/Freight/GetAllTruckDetails';\r\n    private postRaiseRequestData = '/Freight/RaiseRequests';\r\n    private postSingleRaiseRequestData = '/Freight/RaiseRequest';\r\n    private updateDeliveryRequestData = '/Freight/UpdateDeliveryRequest';\r\n    private addSubDeliveryRequestUrl = '/Freight/AddSubDrs';\r\n    private changeBrokeredDrStatusUrl = '/Freight/ChangeBrokeredDrStatus?drId=';\r\n    private getDeliveryRequestsUrl = '/Freight/GetDeliveryRequests?regionId=';\r\n    private getBrokeredDrAssignedToMeUrl = '/Freight/GetBrokeredDrRequestedToMe?regionId=';\r\n    private getBrokeredDrAssignedByMeUrl = '/Freight/GetBrokeredDrRequestedByMe?regionId=';\r\n    private getDeliveryRequestByIdUrl = '/Freight/GetDeliveryRequestById?deliveryRequestId=';\r\n    private getCalendarDeliveryRequestsUrl = '/Freight/GetCalendarDeliveryRequests';\r\n    private urlGetCompantDrivers = '/Freight/GetCompantDrivers';\r\n    private urlGetFuelTypes = '/Freight/GetFuelTypes';\r\n    private getDemandCaptureChartdata = '/Driver/Dashboard/GetDemandCaptureChartdata?SiteId='; // to use in both buyer and supplier side\r\n    private getOrdersForJobUrl = '/Carrier/ScheduleBuilder/GetOrdersForJobOfCustomerAndSupplier?jobId=';\r\n    private urlGetStates = '/Carrier/SelfServiceAlias/GetStates?countryId=';\r\n    public urlGetCities = '/Carrier/SelfServiceAlias/GetCities';\r\n    public urlGetTerminals = '/Carrier/SelfServiceAlias/GetTerminals';\r\n    private urlGetBulkPlants = '/Carrier/SelfServiceAlias/GetBulkPlants';\r\n    private urlGetTerminalsForMapping = '/Carrier/SelfServiceAlias/GetTerminalsForMapping';\r\n    private urlDeleteTerminalMappingById = '/Carrier/SelfServiceAlias/DeleteTerminalMappingById';\r\n    private urlTerminalMappingGrid = '/Carrier/SelfServiceAlias/GetTerminalMappingGrid?SelectedCountryId=';\r\n\r\n    private urlGetServingFuelTypesByCompany = '/Carrier/SelfServiceAlias/GetServingFuelTypesByCompany?companyId=';\r\n    private postSaveProductMapping = 'Carrier/SelfServiceAlias/SaveProductMapping';\r\n    private postSaveTerminalMapping = 'Carrier/SelfServiceAlias/SaveTerminalMapping';\r\n    private urlGetProductMappingDetails = '/Carrier/SelfServiceAlias/GetProductMappingDetails';\r\n    private urlDownloadProductMappingTemplate = '/Carrier/SelfServiceAlias/DownloadProductMappingTemplate?id=';\r\n    private urlBulkUploadTemplate = '/Carrier/SelfServiceAlias/UploadProductMappingTemplate';\r\n    private urlDefaultCountry = '/Carrier/SelfServiceAlias/GetCountries?companyId=';\r\n    private urlDefaultServingCountry = '/Carrier/SelfServiceAlias/GetDefaultServingCountry?companyId=';\r\n    private urlDeleteProductMappingById = '/Carrier/SelfServiceAlias/DeleteProductMappingById';\r\n    private urlUpdateProductNames = '/Carrier/SelfServiceAlias/UpdateProductNames';\r\n    private urlUpdateTerminalId = '/Carrier/SelfServiceAlias/UpdateTerminalId';\r\n    private urlCheckLocationAssignedToCarrier = '/Freight/CheckLocationAssignedToCarrier?jobId=';\r\n    //private urlGetCarrierData = '/Carrier/Order/GetCarrierData';\r\n    private urlCheckDuplicateCarrierId = '/Carrier/Order/CheckDuplicateCarrierId';\r\n    private urlSaveAndUpdateCarrierMapping = '/Carrier/Order/SaveAndUpdateCarrierMapping';\r\n    private deleteRecurringSchedule = '/Freight/DeleteRecurringSchedule';\r\n    private urlgetDefaultScheduleData = '/ScheduleBuilder/GetDefaultScheduleData';\r\n    private getRecurringScheduleDetailsUrl = '/Carrier/ScheduleBuilder/GetRecurringScheduleDetails';\r\n    private getCreateLoadJobListForCarrierUrl = '/Freight/GetCreateLoadJobListForCarrier?regionId=';\r\n    private getGetBrokerJobOrderDetails = '/Freight/GetBrokerJobOrderDetails';\r\n    private urlDownloadTerminalItemCodeMappingTemplate = '/Carrier/SelfServiceAlias/DownloadTerminalItemCodeMappingTemplate?id=';\r\n    private urlBulkUploadTerminalItemCodeMappingFile = '/Carrier/SelfServiceAlias/BulkUploadTerminalItemCodeMappingFile';\r\n    private urlsplitDeliveryRequestData = '/Freight/CreateSplitDeliveryRequests';\r\n    private urlsplitBlendDeliveryRequestData = '/Freight/CreateSplitBlendDeliveryRequests';\r\n    private urlGetDRReportDropDownFilters = '/Freight/GetDRReportDropDownFilters'; // API is in base controller\r\n    private urlGetDRReportFilteredData = '/Freight/GetDRReportData';\r\n\r\n    private urlGetTerminalSuppliers = 'Carrier/SelfServiceAlias/GetTerminalSuppliers?countryId=';\r\n\r\n    private urlGetDefaultUOM = 'Carrier/Tractor/GetDefaultUOM';\r\n\r\n    private urlgetDefaultTBDScheduleData = '/ScheduleBuilder/GetDefaultTBDScheduleData';\r\n\r\n    //CarrierId mapping Urls \r\n    private urlGetAssignedTerminalIdsForMapping = '/Carrier/SelfServiceAlias/GetAssignedTerminalIdsForMapping';\r\n    private urlSaveCarrierMapping = '/Carrier/SelfServiceAlias/SaveCarrierMapping';\r\n    private urlGetCarrierData = '/Carrier/SelfServiceAlias/GetCarrierIDMappings';\r\n    private urlDeleteCarrierIDMappings = '/Carrier/SelfServiceAlias/DeleteCarrierIDMapping?mappingId=';\r\n    private urlGetCreateDrSetting = '/ScheduleBuilder/GetCreateDrSetting';\r\n    private urlGetAdditiveOrders = '/ScheduleBuilder/GetAdditiveOrders?regionId=';\r\n    //calendar sb data\r\n    private getGetSheduleBuilderUrl = '/Carrier/ScheduleBuilder/GetSheduleBuilder?regionId=';\r\n    private getSheduleCalendarDataUrl = '/Carrier/ScheduleBuilder/GetSheduleCalendarData?regionId=';\r\n    private saveDriverViewUrl = '/Carrier/ScheduleBuilder/SaveCalendarDeliveryRequest';\r\n\r\n    //Filter\r\n    private urlFilterDataForDsbCalenderView = '/Carrier/Order/GetFilterDataForCalenderView';\r\n\r\n    constructor(private httpClient: HttpClient) { super(); }\r\n\r\n    getAllTrucks(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetTrucks)\r\n            .pipe(catchError(this.handleError<any>('getAllTrucks', null)));\r\n    }\r\n\r\n    updateHeldDrCount(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetHeldDrCount)\r\n            .pipe(catchError(this.handleError<any>('updateHeldDrCount', null)));\r\n    }\r\n\r\n\r\n    CustomerIdNotTaken(customerDetail: CustomerDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCustomerIdNotTaken, customerDetail)\r\n            .pipe(catchError(this.handleError<any>('CustomerIdNotTaken', null)));\r\n    }\r\n\r\n    checkDuplicateTerminalId(TerminalMappingViewModel: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.postCheckDuplicateTerminalId, TerminalMappingViewModel)\r\n            .pipe(catchError(this.handleError<any>('checkDuplicateTerminalId', null)));\r\n    }\r\n    getSheduleCalendarData(regionId: string, date: string): Observable<ShiftModel[]> {\r\n        return this.httpClient.get<ShiftModel[]>(this.getSheduleCalendarDataUrl + regionId + '&date=' + date)\r\n            .pipe(catchError(this.handleError<ShiftModel[]>('getSheduleCalendarData', null)));\r\n    }\r\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number): Observable<ScheduleBuilderModel> {\r\n        return this.httpClient.get<ScheduleBuilderModel>(this.getGetSheduleBuilderUrl + regionId + '&date=' + date + '&sbView=' + sbViewId + '&sbDsbView=' + sbDsbView)\r\n            .pipe(catchError(this.handleError<ScheduleBuilderModel>('getScheduleBuilder', null)));\r\n    }\r\n    saveDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveDriverView', null)));\r\n    }\r\n\r\n    getCompatibleProductTypes(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetBlendCompatibleProductTypes)\r\n            .pipe(catchError(this.handleError<any>('getCompatibleProductTypes', null)));\r\n    }\r\n\r\n    getAllCustomerData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetAllCustomerData)\r\n            .pipe(catchError(this.handleError<any>('getAllCustomerData', null)));\r\n    }\r\n\r\n    saveAndUpdateCustomerMapping(customerMapping: CustomerDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlSaveAndUpdateCustomerMapping, customerMapping)\r\n            .pipe(catchError(this.handleError<any>('saveAndUpdateCustomerMapping', null)));\r\n    }\r\n\r\n    checkAndLockDr(drIds: string[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckAndLockDr, drIds)\r\n            .pipe(catchError(this.handleError<any>('checkAndLockDr', null)));\r\n    }\r\n\r\n    checkAndReleaseDr(drIds: string[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckAndReleaseDr, drIds)\r\n            .pipe(catchError(this.handleError<any>('checkAndReleaseDr', null)));\r\n    }\r\n\r\n    getCompanyDrivers(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCompantDrivers)\r\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\r\n    }\r\n\r\n    postCreateTruck(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postTruckData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postCreateTruck', null)));\r\n    }\r\n    postDeleteTruck(inputData: TruckDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteTruckData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postDeleteTruck', null)));\r\n    }\r\n\r\n    getDipTests(_jobId: string, regionId: string, buyerCompanyId: number, requestFromBuyerWallyBoard: boolean, isShowForm: boolean): Observable<DipTestViewModel[]> {\r\n        return this.httpClient.get<DipTestViewModel[]>(this.getDipTestData + _jobId + \"&regionId=\" + regionId + \"&buyerCompanyId=\" + buyerCompanyId + \"&requestFromBuyerWallyBoard=\" + requestFromBuyerWallyBoard + \"&isCreateDR=\" + isShowForm)\r\n            .pipe(catchError(this.handleError<DipTestViewModel[]>('getDipTests', null)));\r\n    }\r\n\r\n    isTankNotAvailableForOrderProducts(jobId: number, customerId: number, regionId: any, productTypeIds: number[], endSupplier: number = 0): Observable<any> {\r\n        if (endSupplier == 1) {\r\n            return this.httpClient.get<any>(this.urlIsTankNotAvailableForOrderProducts + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + endSupplier + \"&skipMarineConversion=\" + productTypeIds)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n        else {\r\n            return this.httpClient.get<any>(this.urlIsTankNotAvailableForOrderProducts + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&productTypeIds=\" + productTypeIds)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n    }\r\n\r\n    getSites(regionId: string): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getSiteList + regionId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getSites', null)));\r\n    }\r\n\r\n    getJobListForCarrier(regionId: string, isShowCarrierManaged?: boolean, SelectedCarrierId?: string): Observable<CustomerJobsForCarrier[]> {\r\n        if (isShowCarrierManaged == undefined || isShowCarrierManaged == null) {\r\n            isShowCarrierManaged = false;\r\n        }\r\n        if (SelectedCarrierId == undefined) {\r\n            SelectedCarrierId = \"\";\r\n        }\r\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getJobListForCarrierUrl + regionId + \"&isShowCarrierManaged=\" + isShowCarrierManaged + \"&carriers=\" + SelectedCarrierId)\r\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\r\n    }\r\n    getCreateLoadJobListForCarrier(regionId: string): Observable<CustomerJobsForCarrier[]> {\r\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getCreateLoadJobListForCarrierUrl + regionId)\r\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\r\n    }\r\n    getOrdersForJob(jobId: number, customerId: number, regionId: any, skipMarineConversion: boolean, endSupplier: number = 0, productsToExclude: number[] = []): Observable<any> {\r\n        let products = '';\r\n        if (productsToExclude && productsToExclude.length > 0) {\r\n            products = productsToExclude.join(',');\r\n        }\r\n\r\n        if (endSupplier == 1) {\r\n            return this.httpClient.get<any>(this.getOrdersForJobUrl + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + endSupplier + \"&skipMarineConversion=\" + skipMarineConversion + \"&productsToExclude=\" + products)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n        else {\r\n            return this.httpClient.get<any>(this.getOrdersForJobUrl + jobId + \"&customerId=\" + customerId + \"&regionId=\" + regionId + \"&endSupplier=\" + 0 + \"&skipMarineConversion=\" + skipMarineConversion + \"&productsToExclude=\" + products)\r\n                .pipe(catchError(this.handleError<any>('getOrdersForJob', null)));\r\n        }\r\n    }\r\n\r\n    postRaiseRequests(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postRaiseRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postRaiseRequests', null)));\r\n    }\r\n\r\n    postRaiseRequest(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSingleRaiseRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('postRaiseRequest', null)));\r\n    }\r\n\r\n    getDeliveryRequests(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getDeliveryRequestsUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getDeliveryRequests', null)));\r\n    }\r\n\r\n    getBrokeredDrAssignedToMe(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        if (regionId != null && !regionId.match(/^[0-9a-fA-F]{24}$/)) { regionId = null; }\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getBrokeredDrAssignedToMeUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getBrokeredDrAssignedToMe', null)));\r\n    }\r\n\r\n    getBrokeredDrAssignedByMe(regionId: string, selectedDate?: string): Observable<DeliveryRequestViewModel[]> {\r\n        if (regionId != null && !regionId.match(/^[0-9a-fA-F]{24}$/)) { regionId = null; }\r\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getBrokeredDrAssignedByMeUrl + regionId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getBrokeredDrAssignedByMe', null)));\r\n    }\r\n    getDeliveryRequestById(deliveryRequestId: string): Observable<DeliveryRequestViewModel> {\r\n        return this.httpClient.get<DeliveryRequestViewModel>(this.getDeliveryRequestByIdUrl + deliveryRequestId)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel>('getDeliveryRequestById', null)));\r\n    }\r\n    getCalendarDeliveryRequests(inputModel): Observable<DeliveryRequestViewModel[]> {\r\n        return this.httpClient.post<DeliveryRequestViewModel[]>(this.getCalendarDeliveryRequestsUrl, inputModel)\r\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getCalendarDeliveryRequests', null)));\r\n    }\r\n    updateDeliveryRequest(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.updateDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('updateDeliveryRequest', null)));\r\n    }\r\n    addSubDrs(inputData: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addSubDeliveryRequestUrl, inputData)\r\n            .pipe(catchError(this.handleError<any>('addSubDrs', null)));\r\n    }\r\n\r\n    getFuelTypes(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetFuelTypes)\r\n            .pipe(catchError(this.handleError<any>('getFuelTypes', null)));\r\n    }\r\n\r\n    public getDemandCapChartData(SiteId, days, tfxJobId): Observable<any> {\r\n        return this.httpClient.get<any>(`${this.getDemandCaptureChartdata}${SiteId}&noOfDays=${days}&tfxJobId=${tfxJobId}`)\r\n            .pipe(catchError(this.handleError<any>('getDemandCapChartData', null)));\r\n    }\r\n\r\n    GetCountries(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlDefaultCountry + companyId)\r\n            .pipe(catchError(this.handleError<any>('GetCountries', null)));\r\n    }\r\n\r\n    getDefaultServingCountry(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlDefaultServingCountry + companyId)\r\n            .pipe(catchError(this.handleError<any>('getDefaultServingCountry', null)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetStates + countryId)\r\n            .pipe(catchError(this.handleError<any>('getStates', null)));\r\n    }\r\n\r\n    getCities(stateIds: number[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetCities, stateIds)\r\n            .pipe(catchError(this.handleError<any>('getCities', null)));\r\n    }\r\n\r\n    getTerminals(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTerminals, filter)\r\n            .pipe(catchError(this.handleError<any>('getTerminals', null)));\r\n    }\r\n\r\n    getBulkPlants(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetBulkPlants, filter)\r\n            .pipe(catchError(this.handleError<any>('getBulkPlants', null)));\r\n    }\r\n\r\n    getTerminalMappingGrid(SelectedCountryId: number): Observable<any> {\r\n        return this.httpClient.get(this.urlTerminalMappingGrid + SelectedCountryId)\r\n            .pipe(catchError(this.handleError<any>('getTerminalsForMapping', null)));\r\n    }\r\n    getTerminalsForMapping(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetTerminalsForMapping, filter)\r\n            .pipe(catchError(this.handleError<any>('getTerminalsForMapping', null)));\r\n    }\r\n\r\n    getServingFuelTypesByCompany(companyId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetServingFuelTypesByCompany + companyId)\r\n            .pipe(catchError(this.handleError<any>('getServingFuelTypesByCompany', null)));\r\n    }\r\n\r\n    saveProductMapping(productMapping: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSaveProductMapping, productMapping)\r\n            .pipe(catchError(this.handleError<any>('saveProductMapping', null)));\r\n    }\r\n    saveTerminalMapping(productMapping: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.postSaveTerminalMapping, productMapping)\r\n            .pipe(catchError(this.handleError<any>('saveTerminalMapping', null)));\r\n    }\r\n\r\n    getProductMappingGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetProductMappingDetails, filter)\r\n            .pipe(catchError(this.handleError<any>('getProductMappingGridDetails', null)));\r\n    }\r\n\r\n    downloadProductMappingTemplate(timestamp: number): Observable<Blob> {\r\n        return this.httpClient.get(this.urlDownloadProductMappingTemplate + timestamp, {\r\n            responseType: 'blob'\r\n        }).pipe(catchError(this.handleError<any>('downloadProductMappingTemplate', null)));\r\n    }\r\n\r\n    postBulkUploadTemplate(files: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlBulkUploadTemplate, files)\r\n            .pipe(catchError(this.handleError<any>('postBulkUploadTemplate', null)));\r\n    }\r\n\r\n    postDeleteProductMapping(model: ProductMappingGridModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteProductMappingById, model)\r\n            .pipe(catchError(this.handleError<any>('postDeleteProductMapping', null)));\r\n    }\r\n\r\n    postDeleteTerminalMappingById(model: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlDeleteTerminalMappingById, model)\r\n            .pipe(catchError(this.handleError<any>('postDeleteProductMapping', null)));\r\n    }\r\n\r\n\r\n    updateProductNames(model: ProductMappingGridModel[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlUpdateProductNames, model)\r\n            .pipe(catchError(this.handleError<any>('updateProductNames', null)));\r\n    }\r\n\r\n    updateTerminalId(model: LocationDetailsModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlUpdateTerminalId, model)\r\n            .pipe(catchError(this.handleError<any>('updateProductNames', null)));\r\n    }\r\n\r\n\r\n    checkLocationAssignedToCarrier(jobId: number): Observable<any> {\r\n        return this.httpClient.get(this.urlCheckLocationAssignedToCarrier + jobId)\r\n            .pipe(catchError(this.handleError<any>('checkLocationAssignedToCarrier', null)));\r\n    }\r\n\r\n    getCarrierData(countryId): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCarrierData + \"?countryId=\" + countryId)\r\n            .pipe(catchError(this.handleError<any>('getCarrierData', null)));\r\n    }\r\n\r\n    checkDuplicateCarrierId(carrierDetail: CarrierDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlCheckDuplicateCarrierId, carrierDetail)\r\n            .pipe(catchError(this.handleError<any>('CheckDuplicateCarrierId', null)));\r\n    }\r\n\r\n    saveAndUpdateCarrierMapping(carrierMapping: CarrierDetailsViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlSaveAndUpdateCarrierMapping, carrierMapping)\r\n            .pipe(catchError(this.handleError<any>('saveAndUpdateCarrierMapping', null)));\r\n    }\r\n\r\n    deleteRecurringScheduleDetails(recurringId: string): Observable<any> {\r\n        var data = { Id: recurringId };\r\n        return this.httpClient.post<any>(this.deleteRecurringSchedule, data)\r\n            .pipe(catchError(this.handleError<any>('deleteRecurringScheduleDetails', null)));\r\n    }\r\n\r\n    getDefaultScheduleData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlgetDefaultScheduleData)\r\n            .pipe(catchError(this.handleError<any>('getDefaultScheduleData', null)));\r\n    }\r\n\r\n    getRecurringScheduleDetails(JobId: number, PoNumb: string, JOBSiteId: string, productTypeId: number): Observable<any> {\r\n        var data = { jobId: JobId, PoNumber: PoNumb, JobSiteId: JOBSiteId, productTypeId: productTypeId };\r\n        return this.httpClient.post<any>(this.getRecurringScheduleDetailsUrl, data)\r\n            .pipe(catchError(this.handleError<any>('getRecurringScheduleDetails', null)));\r\n    }\r\n\r\n    changeBrokeredDrStatus(drId: string, blendedGroupId: string, status: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.changeBrokeredDrStatusUrl + drId + '&blendedGroupId=' + blendedGroupId + '&status=' + status, {})\r\n            .pipe(catchError(this.handleError<any>('changeBrokeredDrStatus', null)));\r\n    }\r\n\r\n    downloadTerminalItemCodeMappingTemplate(timestamp: number): Observable<Blob> {\r\n        return this.httpClient.get(this.urlDownloadTerminalItemCodeMappingTemplate + timestamp, {\r\n            responseType: 'blob'\r\n        }).pipe(catchError(this.handleError<any>('downloadTerminalItemCodeMappingTemplate', null)));\r\n    }\r\n\r\n    postBulkUploadTerminalItemCodeMappingTemplate(files: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlBulkUploadTerminalItemCodeMappingFile, files)\r\n            .pipe(catchError(this.handleError<any>('postBulkUploadTerminalItemCodeMappingTemplate', null)));\r\n    }\r\n    splitDeliveryRequests(inputData: SplitDeliveryRequestModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlsplitDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('splitDeliveryRequests', null)));\r\n    }\r\n    splitBlendDeliveryRequests(inputData: SplitBlendDRModel[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlsplitBlendDeliveryRequestData, inputData)\r\n            .pipe(catchError(this.handleError<any>('splitBlendDeliveryRequests', null)));\r\n    }\r\n    getDRReportFilters(): Observable<DRReportFilterViewModel> {\r\n        return this.httpClient.get<DRReportFilterViewModel>(this.urlGetDRReportDropDownFilters)\r\n            .pipe(catchError(this.handleError<DRReportFilterViewModel>('getDRReportFilterData', null)));\r\n    }\r\n\r\n    getDRReportGridData(inputData: DRReportFilterInputViewModel): Observable<any> {\r\n        return this.httpClient.post<any>(this.urlGetDRReportFilteredData, inputData)\r\n            .pipe(catchError(this.handleError<DeliveryRequestReportGridModel>('getDRReportGridData', null)));\r\n    }\r\n    getTerminalSupplier(selectedCountryId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetTerminalSuppliers + selectedCountryId)\r\n            .pipe(catchError(this.handleError<DropdownItem>('getTerminalSupplier', null)));\r\n    }\r\n    getDefaultUOM(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetDefaultUOM)\r\n            .pipe(catchError(this.handleError<any>('getDefaultUOM', null)));\r\n    }\r\n    getDefaultTBDScheduleData(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlgetDefaultTBDScheduleData)\r\n            .pipe(catchError(this.handleError<any>('getDefaultTBDScheduleData', null)));\r\n    }\r\n    getAssignedTerminalIdsForMapping(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetAssignedTerminalIdsForMapping)\r\n            .pipe(catchError(this.handleError<any>('getAssignedTerminalIdsForMapping', null)));\r\n    }\r\n    SaveCarrierMapping(carrierMapping: CarrierDetailsViewModel) {\r\n        return this.httpClient.post(this.urlSaveCarrierMapping, carrierMapping).\r\n            pipe(catchError(this.handleError<any>('SaveCarrierMapping', null)))\r\n    }\r\n    deleteCarrierMapping(mappingId: number) {\r\n        return this.httpClient.get<any>(this.urlDeleteCarrierIDMappings + mappingId)\r\n            .pipe(catchError(this.handleError<any>('deleteCarrierMapping', null)));\r\n    }\r\n    getCreateDrSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlGetCreateDrSetting)\r\n            .pipe(catchError(this.handleError<any>('getCreateDrSetting', null)));\r\n    }\r\n    getAdditiveOrders(regionId?: string): Observable<AdditiveOrderViewModel[]> {\r\n        return this.httpClient.get<any>(this.urlGetAdditiveOrders + regionId)\r\n            .pipe(catchError(this.handleError<AdditiveOrderViewModel[]>('getAdditiveOrders', null)));\r\n    }\r\n    getFilterDataForDsbCalenderView(): Observable<any> {\r\n        return this.httpClient.get<any>(this.urlFilterDataForDsbCalenderView)\r\n            .pipe(catchError(this.handleError<any>('getFilterDataForDsbCalenderView', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n    public ShowDeliveryGroupSubject: Subject<boolean>;\r\n    public ShowOpenedDeliveryGroupSubject: Subject<boolean>;\r\n    public EditDeliveryGroupSubject: Subject<any>;\r\n    public DraftDeliveryGroupSubject: Subject<any>;\r\n    public SaveModifiedLoadsSubject: Subject<any>;\r\n    public PublishDeliveryGroupSubject: Subject<any>;\r\n    public CancelDeliveryGroupSubject: Subject<any>;\r\n    public DeleteDeliveryGroupSubject: Subject<any>;\r\n    public AcceptRejectDRSubject: Subject<any>;\r\n\r\n    public RestoreDeletedRequestSubject: Subject<any>;\r\n    public DrUpdatedSubject: Subject<any>;\r\n    public RemoveDroppedRequestSubject: Subject<any>;\r\n    public UnsavedChangesSubject: Subject<any>;\r\n    public SavedChangesSubject: Subject<any>;\r\n    public EmptyUnsavedChangesSubject: Subject<any>;\r\n    public TrailerShiftsSubject: BehaviorSubject<any>;\r\n    public IsLoadingButtonSubject: BehaviorSubject<boolean>;\r\n    public FormChangeSubscription: Subscription[] = [];\r\n    public DeleteDRRequestSubject: Subject<any>;\r\n    public DisableDSBControlsSubject: BehaviorSubject<boolean>;\r\n    public EditDriverTrailerSubject: Subject<any>;\r\n    public UpdateDriverTrailerSubject: Subject<any>;\r\n    public SaveDriverAssignmentSubject: Subject<any>;\r\n\r\n    public AllShiftsSubject: BehaviorSubject<any>;\r\n    public AllTrailersSubject: BehaviorSubject<any>;\r\n    public AllDeliveryRequestsSubject: BehaviorSubject<any>;\r\n\r\n    public PublishEntireRowSubject: Subject<any>;\r\n    public GroupChangeDetectSubject: Subject<any>;\r\n    public ScheduleChangeDetectSubject: Subject<any>;\r\n    public DragDropItemSubject: Subject<any>;\r\n\r\n    public CreateLoadChangeSubject: Subject<any>;\r\n    public CreateLoadCancelSubject: BehaviorSubject<any>;\r\n    public CreateLoadSuccessSubject: Subject<any>;\r\n\r\n    public CreatePreloadSubject: Subject<any>;\r\n    public UpdatePostloadSubject: Subject<any>;\r\n    public DeletePostloadSubject: Subject<any>;\r\n    public DeliveryPreloadOption: Subject<any>;\r\n    public ResetDrByRoutesSubject: Subject<any>;\r\n\r\n    public EditCompartmentAssigmentSubject: Subject<any>;\r\n    public SaveEditCompartmentAssigmentSubject: Subject<any>;\r\n    public OpenDsbOttoBuilderSubject: Subject<any>;\r\n    public OpenDsbOttoNotificationSubject: Subject<any>;\r\n    public DsbOttoNotificationCountSubject: Subject<any>;\r\n    public SplitDrsInfoSubject: Subject<any>;\r\n    public TransferDSInfoSubject: Subject<any>;\r\n    public TrailerDSInfoSubject: Subject<any>;\r\n    public UnAssignTrailerFromShift: Subject<any>;\r\n    public RouteDetailsSubject: Subject<any>;\r\n    public DeleteRouteDetailsSubject: Subject<any>;\r\n    public HideDeliveryGroupSubject: Subject<any>;\r\n    public GridViewSearchGroupSubject: Subject<any>;\r\n    public RemoveTrailerGroupSubject: Subject<any>;\r\n    public ShiftVisibility: Subject<any>;\r\n    public RouteResetGroupSubject: Subject<any>;\r\n    public RouteDeleteDeliveryGroupSubject: Subject<any>;\r\n    public drQueueChangesForFilter: Subject<boolean> = new Subject<boolean>();\r\n    public DsbQueueChangesForNotification: Subject<boolean> = new Subject<boolean>();\r\n    public DriverColumnChangeDetect: Subject<boolean> = new Subject<boolean>();\r\n    public OptionalPickupSubject: Subject<any>;\r\n    public IsScheduleBuilderSubject: BehaviorSubject<boolean>;\r\n    public OpenOnTheFlyLocationFormSubject: Subject<any> = new Subject<any>();\r\n    public getOnTheFlyLocationDetailsSubject: Subject<any> = new Subject<any>();\r\n    public OnTheFlyDetectSubject: Subject<any> = new Subject<any>();\r\n    public CancelEntireRowSubject: Subject<any>;\r\n    public CancelDSDeliveryGroupSubject: Subject<any>;\r\n    public CancelDSDeliveryGroupNormalGroupDSSubject: Subject<any>;\r\n    public CancelDSLocationSubject: Subject<any>;\r\n    public DeliveryScheduleRemoveSubject: Subject<any>;\r\n    public DispatcherLoadDragDropSubject: Subject<any>;\r\n    public DispatcherLoadDragDropMapSubject: Subject<any>;\r\n    public LoadLocationSequenceSubject: Subject<FormGroup> = new Subject<FormGroup>();\r\n    public RefreshDsbOttoBuilderSubject: Subject<any>;\r\n    public DropTerminalSelectedSubject: Subject<number> = new Subject<number>();\r\n    public RemoveFeesSubject: Subject<boolean> = new Subject<boolean>();\r\n    constructor() {\r\n        this.ShowDeliveryGroupSubject = new Subject<boolean>();\r\n        this.ShowOpenedDeliveryGroupSubject = new Subject<boolean>();\r\n        this.EditDeliveryGroupSubject = new Subject<any>();\r\n        this.DraftDeliveryGroupSubject = new Subject<any>();\r\n        this.SaveModifiedLoadsSubject = new Subject<any>();\r\n        this.PublishDeliveryGroupSubject = new Subject<any>();\r\n        this.CancelDeliveryGroupSubject = new Subject<any>();\r\n        this.RestoreDeletedRequestSubject = new Subject<any>();\r\n        this.DrUpdatedSubject = new Subject<any>();\r\n        this.RemoveDroppedRequestSubject = new Subject<any>();\r\n        this.DeleteDeliveryGroupSubject = new Subject<any>();\r\n        this.AcceptRejectDRSubject = new Subject<any>();\r\n        this.UnsavedChangesSubject = new Subject<any>();\r\n        this.SavedChangesSubject = new Subject<any>();\r\n        this.EmptyUnsavedChangesSubject = new Subject<any>();\r\n        this.TrailerShiftsSubject = new BehaviorSubject<any>(null);\r\n        this.IsLoadingButtonSubject = new BehaviorSubject<any>(false);\r\n        this.DeleteDRRequestSubject = new Subject<any>();\r\n        this.DisableDSBControlsSubject = new BehaviorSubject<any>(false);\r\n        this.EditDriverTrailerSubject = new Subject<any>();\r\n        this.UpdateDriverTrailerSubject = new Subject<any>();\r\n        this.SaveDriverAssignmentSubject = new Subject<any>();\r\n        this.AllShiftsSubject = new BehaviorSubject<any>([]);\r\n        this.AllTrailersSubject = new BehaviorSubject<any>([]);\r\n        this.AllDeliveryRequestsSubject = new BehaviorSubject<any>([]);\r\n        this.PublishEntireRowSubject = new Subject<any>();\r\n        this.GroupChangeDetectSubject = new Subject<any>();\r\n        this.ScheduleChangeDetectSubject = new Subject<any>();\r\n        this.DragDropItemSubject = new Subject<any>();\r\n        this.CreateLoadChangeSubject = new Subject<any>();\r\n        this.CreateLoadCancelSubject = new BehaviorSubject<any>({});\r\n        this.CreateLoadSuccessSubject = new Subject<any>();\r\n        this.CreatePreloadSubject = new Subject<any>();\r\n        this.UpdatePostloadSubject = new Subject<any>();\r\n        this.DeletePostloadSubject = new Subject<any>();\r\n        this.DeliveryPreloadOption = new Subject<any>();\r\n        this.ResetDrByRoutesSubject = new Subject<any>();\r\n        this.EditCompartmentAssigmentSubject = new Subject<any>();\r\n        this.SaveEditCompartmentAssigmentSubject = new Subject<any>();\r\n        this.OpenDsbOttoBuilderSubject = new Subject<any>();\r\n        this.OpenDsbOttoNotificationSubject = new Subject<any>();\r\n        this.DsbOttoNotificationCountSubject = new Subject<any>();\r\n        this.SplitDrsInfoSubject = new Subject<any>();\r\n        this.TransferDSInfoSubject = new Subject<any>();\r\n        this.TrailerDSInfoSubject = new Subject<any>();\r\n        this.UnAssignTrailerFromShift = new Subject<any>();\r\n        this.RouteDetailsSubject = new Subject<any>();\r\n        this.DeleteRouteDetailsSubject = new Subject<any>();\r\n        this.HideDeliveryGroupSubject = new Subject<any>();\r\n        this.GridViewSearchGroupSubject = new Subject<any>();\r\n        this.RemoveTrailerGroupSubject = new Subject<any>();\r\n        this.ShiftVisibility = new Subject<any>();\r\n        this.RouteResetGroupSubject = new Subject<any>();\r\n        this.RouteDeleteDeliveryGroupSubject = new Subject<any>();\r\n        this.DsbQueueChangesForNotification = new Subject<boolean>();\r\n        this.OptionalPickupSubject = new Subject<any>();\r\n        this.IsScheduleBuilderSubject = new BehaviorSubject<any>(false);\r\n        this.CancelEntireRowSubject = new Subject<any>();\r\n        this.CancelDSDeliveryGroupSubject = new Subject<any>();\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject = new Subject<any>();\r\n        this.CancelDSLocationSubject = new Subject<any>();\r\n        this.DeliveryScheduleRemoveSubject = new Subject<any>();\r\n        this.DispatcherLoadDragDropSubject = new Subject<any>();\r\n        this.DispatcherLoadDragDropMapSubject = new Subject<any>();\r\n        this.RefreshDsbOttoBuilderSubject = new Subject<any>();\r\n    }\r\n\r\n    public setShowDeliveryGroupSubject(data: boolean): void {\r\n        this.ShowDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setShowOpenedDeliveryGroupSubject(data: boolean) {\r\n        this.ShowOpenedDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setEditDeliveryGroupSubject(data: any): void {\r\n        this.EditDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setDraftDeliveryGroupSubject(data: any): void {\r\n        this.DraftDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setSaveModifiedLoadsSubject(data: any): void {\r\n        this.SaveModifiedLoadsSubject.next(data);\r\n    }\r\n\r\n    public setPublishDeliveryGroupSubject(data: any): void {\r\n        this.PublishDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setCancelDeliveryGroupSubject(data: any): void {\r\n        this.CancelDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setDeleteDeliveryGroupSubject(data: any): void {\r\n        this.DeleteDeliveryGroupSubject.next(data);\r\n    }\r\n\r\n    public setAcceptRejectDRSubject(data: any): void {\r\n        this.AcceptRejectDRSubject.next(data);\r\n    }\r\n     \r\n    public setRestoreDeletedRequestSubject(data: any): void {\r\n        this.RestoreDeletedRequestSubject.next(data);\r\n    }\r\n\r\n    public setDrUpdatedSubject(data: any): void {\r\n        this.DrUpdatedSubject.next(data);\r\n    }\r\n\r\n    public setRemoveDroppedRequestSubject(data: any): void {\r\n        this.RemoveDroppedRequestSubject.next(data);\r\n    }\r\n\r\n    public setUnsavedChangesSubject(data: any): void {\r\n        this.UnsavedChangesSubject.next(data);\r\n    }\r\n\r\n    public setSavedChangesSubject(data: any): void {\r\n        this.SavedChangesSubject.next(data);\r\n    }\r\n\r\n    public setUnsavedChangesAsEmptySubject(): void {\r\n        this.EmptyUnsavedChangesSubject.next();\r\n    }\r\n\r\n    public setTrailerShiftsSubject(data: any): void {\r\n        this.TrailerShiftsSubject.next(data);\r\n    }\r\n\r\n    public setDeleteDRRequestSubject(data: any): void {\r\n        this.DeleteDRRequestSubject.next(data);\r\n    }\r\n    public setDisableDSBControls(data: any): void {\r\n        this.DisableDSBControlsSubject.next(data);\r\n    }\r\n\r\n    public setEditDriverTrailerSubject(data: any): void {\r\n        this.EditDriverTrailerSubject.next(data);\r\n    }\r\n\r\n    public setUpdateDriverTrailerSubject(data: any): void {\r\n        this.UpdateDriverTrailerSubject.next(data);\r\n    }\r\n\r\n    public setAllShiftsSubject(data: any): void {\r\n        this.AllShiftsSubject.next(data);\r\n    }\r\n\r\n    public setAllTrailersSubject(data: any): void {\r\n        this.AllTrailersSubject.next(data);\r\n    }\r\n\r\n    public setAllDeliveryRequestsSubject(data: any): void {\r\n        data = this.removeDuplicates(data);\r\n        this.AllDeliveryRequestsSubject.next(data);\r\n    }\r\n\r\n    private removeDuplicates(data: any): any {\r\n        data = data.filter((item, index, array) =>\r\n            index === array.findIndex((find) =>\r\n                find.Id === item.Id\r\n            )\r\n        );\r\n        return data;\r\n    }\r\n\r\n    public setSaveDriverAssignmentSubject(data: any): void {\r\n        this.SaveDriverAssignmentSubject.next(data);\r\n    }\r\n\r\n    public setPublishEntireRowSubject(data: any): void {\r\n        this.PublishEntireRowSubject.next(data);\r\n    }\r\n\r\n    public setGroupChangeDetectSubject(data: any): void {\r\n        this.GroupChangeDetectSubject.next(data);\r\n    }\r\n\r\n    public setScheduleChangeDetectSubject(data: any): void {\r\n        this.ScheduleChangeDetectSubject.next(data);\r\n    }\r\n\r\n    public setDragDropItemSubject(data: any): void {\r\n        this.DragDropItemSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadChangeSubject(data: any): void {\r\n        this.CreateLoadChangeSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadCancelSubject(data: any): void {\r\n        this.CreateLoadCancelSubject.next(data);\r\n    }\r\n\r\n    public setCreateLoadSuccessSubject(data: any): void {\r\n        this.CreateLoadSuccessSubject.next(data);\r\n    }\r\n\r\n    public setCreatePreloadSubject(data: any): void {\r\n        this.CreatePreloadSubject.next(data);\r\n    }\r\n\r\n    public setUpdatePostloadSubject(data: any): void {\r\n        this.UpdatePostloadSubject.next(data);\r\n    }\r\n\r\n    public setDeletePostloadSubject(data: any): void {\r\n        this.DeletePostloadSubject.next(data);\r\n    }\r\n\r\n    public setDeliveryPreloadOption(data: any): void {\r\n        this.DeliveryPreloadOption.next(data);\r\n    }\r\n\r\n    public setResetDrByRoutesSubject(data: any): void {\r\n        this.ResetDrByRoutesSubject.next(data);\r\n    }\r\n\r\n    public setEditCompartmentAssigmentSubject(data: any): void {\r\n        this.EditCompartmentAssigmentSubject.next(data);\r\n    }\r\n\r\n    public setSaveEditCompartmentAssigmentSubject(data: any): void {\r\n        this.SaveEditCompartmentAssigmentSubject.next(data);\r\n    }\r\n\r\n    public setOpenDsbOttoBuilderSubject(isOpen: boolean): void {\r\n        this.OpenDsbOttoBuilderSubject.next(isOpen);\r\n    }\r\n    public setOpenDsbOttoNotificationSubject(isOpen: boolean): void {\r\n        this.OpenDsbOttoNotificationSubject.next(isOpen);\r\n    }\r\n    public setDsbOttoNotificationCountSubject(isOpen: number): void {\r\n        this.DsbOttoNotificationCountSubject.next(isOpen);\r\n    }\r\n    public setSplitDRsInfoSubject(inputData: any): void {\r\n        this.SplitDrsInfoSubject.next(inputData);\r\n    }\r\n    public setTransferDSSubject(data: any): void {\r\n        this.TransferDSInfoSubject.next(data);\r\n    }\r\n    public setTrailerInformationSubject(data: any): void {\r\n        this.TrailerDSInfoSubject.next(data);\r\n    }\r\n    public unassignTrailerInformationSubject(data: any): void {\r\n        this.UnAssignTrailerFromShift.next(data);\r\n    }\r\n    public setRouteDetailsSubject(data: any): void {\r\n        this.RouteDetailsSubject.next(data);\r\n    }\r\n    public setDeleteRouteDetailsSubject(data: any): void {\r\n        this.DeleteRouteDetailsSubject.next(data);\r\n    }\r\n    public setHideDeliveryGroupSubject(data: any): void {\r\n        this.HideDeliveryGroupSubject.next(data);\r\n    }\r\n    public setGridViewSearch(data: any): void {\r\n        this.GridViewSearchGroupSubject.next(data);\r\n    }\r\n    public setRemoveTrailer(data: any): void {\r\n        this.RemoveTrailerGroupSubject.next(data);\r\n    }\r\n    public setShiftVisibility(data: any): void {\r\n        this.ShiftVisibility.next(data);\r\n    }\r\n    public setRouteResetGroupSubject(data: any): void {\r\n        this.RouteResetGroupSubject.next(data);\r\n    }\r\n    public setRouteDeleteDeliveryGroupSubject(data: any): void {\r\n        this.RouteDeleteDeliveryGroupSubject.next(data);\r\n    }\r\n    public setDrQueueChangesForFilter(data: boolean): void {\r\n        this.drQueueChangesForFilter.next(data);\r\n    }\r\n    public setDsbQueueChangesForNotification(data: boolean): void {\r\n        this.DsbQueueChangesForNotification.next(data);\r\n    }\r\n    public setDriverColumnChangeDetect(data: boolean): void {\r\n        this.DriverColumnChangeDetect.next(data);\r\n    }\r\n    public setOptionalPickupInfo(data: any): void {\r\n        this.OptionalPickupSubject.next(data);\r\n    }\r\n    public setScheduleLoaderSubject(data: any): void {\r\n        this.IsScheduleBuilderSubject.next(data);\r\n    }\r\n    public setOpenOnTheFlyLocationFormSubject(data: any): void {\r\n        this.OpenOnTheFlyLocationFormSubject.next(data);\r\n    }\r\n    public setGetOnTheFlyLocationDetailsSubject(data: any): void {\r\n        this.getOnTheFlyLocationDetailsSubject.next(data);\r\n    }\r\n    public setOnTheFlyDetectSubject(data: boolean): void {\r\n        this.OnTheFlyDetectSubject.next(data);\r\n    }\r\n    public setCancelEntireRowSubject(data: any): void {\r\n        this.CancelEntireRowSubject.next(data);\r\n    }\r\n    public setCancelDSDeliveryGroupSubject(data: any): void {\r\n        this.CancelDSDeliveryGroupSubject.next(data);\r\n    }\r\n    public setCancelDSGroupNormalSubDSSubject(data: any): void {\r\n        this.CancelDSDeliveryGroupNormalGroupDSSubject.next(data);\r\n    }\r\n    public setCancelDSLocationDSSubject(data: any): void {\r\n        this.CancelDSLocationSubject.next(data);\r\n    }\r\n    public setDeliveryScheduleRemoveSubject(data: any): void {\r\n        this.DeliveryScheduleRemoveSubject.next(data);\r\n    }\r\n    public setDispatcherLoadDragDropSubject(data: any): void {\r\n        this.DispatcherLoadDragDropSubject.next(data);\r\n    }\r\n    public setDispatcherLoadDragDropMapSubject(data: any): void {\r\n        this.DispatcherLoadDragDropMapSubject.next(data);\r\n    }\r\n    public setLoadLocationSequenceSubject(data: FormGroup): void {\r\n        this.LoadLocationSequenceSubject.next(data);\r\n    }\r\n    public refreshDsbOttoBuilderSubject(isRefresh: boolean): void {\r\n        this.RefreshDsbOttoBuilderSubject.next(isRefresh);\r\n    }\r\n    public setDropTerminalSelectedSubject(data: number): void {\r\n        this.DropTerminalSelectedSubject.next(data);\r\n    }\r\n    public removeFeesOnCreateNewSubject(): void {\r\n        this.RemoveFeesSubject.next();\r\n    }\r\n}\r\n","import { HandleError } from 'src/app/errors/HandleError';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, timer, BehaviorSubject } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { DipTestViewModel, DeliveryRequestViewModel, CustomerJobsForCarrier, ForecastingTankViewModel, ForecastingInventoryViewModel, ForecastingEstimatedUsageViewModel, ForecastingDeliveryViewModel, ForecastingExistingScheduleViewModel, ForecastingTankChartViewModel } from '../models/DispatchSchedulerModels';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { TruckDetailsModel } from '../model';\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\nimport { Exception } from 'src/app/app.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DispatcherService extends HandleError {\n    private postTruckData = '/Carrier/Freight/Create';\n    private urlDeleteTruckData = '/Carrier/Freight/DeleteTruck';\n    private getDipTestData = '/Freight/GetDipTestData?jobId=';\n    private getSiteList = '/Freight/GetSiteList?regionId=';\n    private getJobListForCarrierUrl = '/Freight/GetJobListForCarrier?regionId=';\n    private urlGetTrucks = '/Carrier/Freight/GetAllTruckDetails';\n    private postRaiseRequestData = '/Freight/RaiseRequests';\n    private postSingleRaiseRequestData = '/Freight/RaiseRequest';\n    private updateDeliveryRequestData = '/Freight/UpdateDeliveryRequest';\n    private getDeliveryRequestsUrl = '/Freight/GetDeliveryRequests?regionId=';\n    private urlGetCompantDrivers = '/Freight/GetCompantDrivers';\n    private urlGetFuelTypes = '/Freight/GetFuelTypes';\n    private getDemandCaptureChartdata = '/Freight/GetDemandCaptureChartdata?SiteId=';\n    private getDispatcherLoadsUrl = '/Dispatcher/Dashboard/GetDispatcherLoads';\n    private getOnGoingLoadsUrl = '/Dispatcher/Dashboard/GetOnGoingLoads';\n    private getDispatcherCountryUrl = '/Dispatcher/Dashboard/GetUserCountry';\n    private getDispatcherRegionUrl = '/Dispatcher/Dashboard/GetRegions';\n    private getStatesUrl = '/Dispatcher/Dashboard/GetStateDetails/?countryId=';\n    private getCountryUrl = '/Dispatcher/Dashboard/GetCountryDetails';\n    private getCityUrl = '/Dispatcher/Dashboard/GetCities/?stateId=';\n    private getProductTypeUrl = '/Dispatcher/Dashboard/GetProductTypes';\n    private getJobLocationDetailsUrl = '/Dispatcher/Dashboard/GetJobLocationDetails';\n    private getDipTestDetailsUrl = '/Dispatcher/Dashboard/GetDipTestDetails?';\n    private getDriverAdditionalDetailsUrl = '/Dispatcher/Dashboard/GetDriverAdditionalDetails?driverId=';\n    private getDropTicketDetailsUrl = '/Dispatcher/Dashboard/DDTInvoiceDetails?invoiceHeaderId=';\n    public SingleMultiWindowSubject: BehaviorSubject<number>;\n    private getSalesDataUrl = '/Supplier/Sales/GetSalesData?regionId=';\n    private getBuyerSalesDataUrl = '/Buyer/Sales/GetSalesData?jobId=';\n    private getDeliveryDetailsUrl = '/Supplier/Sales/GetExistingSchedules?jobId=';\n    private getScheduleQtyTypeUrl = '/Supplier/DeliveryGroup/GetScheduleQtyType';\n    private getBuyerScheduleQtyTypeUrl = '/Buyer/Sales/GetBuyerScheduleQtyType';\n    private postRaiseDeliveryRequestUrl = '/Supplier/Sales/RaiseDeliveryRequest';\n\n    private getBuyerDeliveryDetailsUrl = '/Buyer/Sales/GetExistingSchedules?jobId=';\n    private postBuyerRaiseDeliveryRequestUrl = '/Buyer/Sales/RaiseDeliveryRequest';\n    private getRaisedExceptionsUrl = 'Supplier/Sales/getRaisedExceptions?ExceptionTypes='\n    private getRaisedExceptionsBuyerUrl = 'Buyer/Sales/getRaisedExceptions?ExceptionTypes='\n    private getBuyerForcastingSettingUrl = '/Buyer/Sales/GetForecastingSetting';\n    private getForcastingSettingUrl = '/Supplier/Sales/GetForecastingSetting';\n    //private getBuyerForcastingLocationDetailsUrl = '/Buyer/Sales/GetFilteredLocations?regionId=';\n    //private getForcastingLocationDetailsUrl = '/Supplier/Sales/GetFilteredLocations?regionId=';\n    private getBuyerForcastingTankDetailsUrl = '/Buyer/Sales/GetForecastingTankDetails';\n    private getForcastingTankDetailsUrl = '/Supplier/Sales/GetForecastingTankDetails';\n    private getBuyerForcastingTankInventoryDetailsUrl = '/Buyer/Sales/GetForecastingTankInventoryDetails';\n    private getForcastingTankInventoryDetailsUrl = '/Supplier/Sales/GetForecastingTankInventoryDetails';\n    private getBuyerForcastingTankEstimatedUsageDetailsUrl = '/Buyer/Sales/GetForecastingTankEstimatedUsageDetails';\n    private getForcastingTankEstimatedUsageDetailsUrl = '/Supplier/Sales/GetForecastingTankEstimatedUsageDetails';\n    private getBuyerForcastingTankDeliveryDetailsUrl = '/Buyer/Sales/GetForecastingTankDeliveryDetails';\n    private getForcastingTankDeliveryDetailsUrl = '/Supplier/Sales/GetForecastingTankDeliveryDetails';\n    private getBuyerForcastingTankScheduleUrl = '/Buyer/Sales/GetForecastingTankScheduleDetails';\n    private getForcastingTankScheduleUrl = '/Supplier/Sales/GetForecastingTankScheduleDetails';\n    private getBuyerForcastingTankChartDetailsUrl = '/Buyer/Sales/GetForecastingTankDataForChart';\n    private getForcastingTankChartDetailsUrl = '/Supplier/Sales/GetForecastingTankDataForChart';\n    private postForcastingCalculateTankRetainWindowInfoUrl = '/Supplier/Sales/CalculateTankRetainWindowInfo';\n    private postForcastingCalculateTankDetailsRetainWindowInfoUrl = '/Supplier/Sales/CalculateTankDetailsRetainWindowInfo';\n    private postForcastingBuyerCalculateTankRetainWindowInfoUrl = '/Buyer/Dashboard/CalculateTankRetainWindowInfo';\n    private postForcastingBuyerCalculateTankDetailsRetainWindowInfoUrl = '/Buyer/Dashboard/CalculateTankDetailsRetainWindowInfo';\n    private getCarriersForSupplierUrl = '/Dispatcher/Dashboard/GetCarriersForSupplierDashboard';\n    private postSupplierFilters = '/Dispatcher/Dashboard/SaveFilters';\n    private getFiltersUrl = '/Dispatcher/Dashboard/GetFilters?moduleId=';\n    private getDSBShiftFiltersUrl = '/Dispatcher/Dashboard/GetDSBShiftFilters?moduleId=';\n    private getSupplierLocationTanksInfoUrl = \"/Supplier/Sales/GetLocationTanksInfo\";\n    private getBuyerLocationTanksInfoUrl = \"/Buyer/Sales/GetLocationTanksInfo\";\n    private postForcastingCalculateProductRetainWindowInfoUrl = '/Supplier/Sales/CalculateProductRetainWindowInfo';\n\n    constructor(private httpClient: HttpClient) {\n        super();\n        this.SingleMultiWindowSubject = new BehaviorSubject<any>(1); //singlemulti window screen 1\n    }\n\n    getAllTrucks(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetTrucks)\n            .pipe(catchError(this.handleError<any>('getAllTrucks', null)));\n    }\n\n    getCompanyDrivers(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetCompantDrivers)\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\n    }\n\n    postCreateTruck(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postTruckData, inputData)\n            .pipe(catchError(this.handleError<any>('postCreateTruck', null)));\n    }\n    postDeleteTruck(inputData: TruckDetailsModel): Observable<any> {\n        return this.httpClient.post<any>(this.urlDeleteTruckData, inputData)\n            .pipe(catchError(this.handleError<any>('postDeleteTruck', null)));\n    }\n\n    getDipTests(_jobId: string, regionId: string): Observable<DipTestViewModel[]> {\n        return this.httpClient.get<DipTestViewModel[]>(this.getDipTestData + _jobId + \"&regionId=\" + regionId)\n            .pipe(catchError(this.handleError<DipTestViewModel[]>('getDipTests', null)));\n    }\n\n    getSites(regionId: string): Observable<DropdownItem[]> {\n        return this.httpClient.get<DropdownItem[]>(this.getSiteList + regionId)\n            .pipe(catchError(this.handleError<DropdownItem[]>('getSites', null)));\n    }\n\n    getJobListForCarrier(regionId: string): Observable<CustomerJobsForCarrier[]> {\n        return this.httpClient.get<CustomerJobsForCarrier[]>(this.getJobListForCarrierUrl + regionId)\n            .pipe(catchError(this.handleError<CustomerJobsForCarrier[]>('getJobListForCarrier', null)));\n    }\n\n    postRaiseRequests(inputData: any[]): Observable<any> {\n        return this.httpClient.post<any>(this.postRaiseRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('postRaiseRequests', null)));\n    }\n\n    postRaiseRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postSingleRaiseRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('postRaiseRequest', null)));\n    }\n\n    getDeliveryRequests(regionId: string): Observable<DeliveryRequestViewModel[]> {\n        return this.httpClient.get<DeliveryRequestViewModel[]>(this.getDeliveryRequestsUrl + regionId)\n            .pipe(catchError(this.handleError<DeliveryRequestViewModel[]>('getDeliveryRequests', null)));\n    }\n\n    updateDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.updateDeliveryRequestData, inputData)\n            .pipe(catchError(this.handleError<any>('updateDeliveryRequest', null)));\n    }\n\n    getFuelTypes(): Observable<any> {\n        return this.httpClient.get<any>(this.urlGetFuelTypes)\n            .pipe(catchError(this.handleError<any>('getFuelTypes', null)));\n    }\n\n    public getDemandCapChartData(SiteId, days): Observable<any> {\n        return this.httpClient.get<any>(`${this.getDemandCaptureChartdata}${SiteId}&noOfDays=${days}`)\n            .pipe(catchError(this.handleError<any>('getDemandCapChartData', null)));\n    }\n\n    public GetDispatcherRegions(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatcherRegionUrl)\n            .pipe(catchError(this.handleError<any>('GetDispatcherRegions', null)));\n    }\n\n    public getDispatcherLoads(inputs: any): Observable<any> {\n        return this.httpClient.post<any>(this.getDispatcherLoadsUrl, inputs)\n            .pipe(catchError(this.handleError<any>('getDispatcherLoads', null)));\n    }\n\n    public getOnGoingLoads(inputs: any): Observable<any> {\n        return this.httpClient.post<any>(this.getOnGoingLoadsUrl, inputs)\n            .pipe(catchError(this.handleError<any>('getOnGoingLoads', null)));\n    }\n\n    public getDispatcherCountry(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatcherCountryUrl)\n            .pipe(catchError(this.handleError<any>('getDispatcherCountry', null)));\n    }\n\n    public getJobLocationDetails(jobIds, selectedLocAttributeId): Observable<any> {\n        var data = { jobList: jobIds, inventoryCaptureTypeIds: selectedLocAttributeId };\n        return timer(0, 60 * 60 * 1000).pipe(\n            switchMap(() => {\n                return this.httpClient.post<any>(this.getJobLocationDetailsUrl, data)\n            })).pipe(catchError(this.handleError<any>('getJobLocationDetails', null)));\n    }\n\n    public getStateList(countryId = '1,2,3'): Observable<any> {\n        return this.httpClient.get<any>(this.getStatesUrl + countryId)\n            .pipe(catchError(this.handleError<any>('getStateList', null)));\n    }\n\n    public getCountryList(): Observable<any> {\n        return this.httpClient.get<any>(this.getCountryUrl)\n            .pipe(catchError(this.handleError<any>('getCountryList', null)));\n    }\n\n    public getCityList(stateId = '1'): Observable<any> {\n        return this.httpClient.get<any>(this.getCityUrl + stateId)\n            .pipe(catchError(this.handleError<any>('getCityList', null)));\n    }\n\n    public getProductTypeList(): Observable<any> {\n        return this.httpClient.get<any>(this.getProductTypeUrl)\n            .pipe(catchError(this.handleError<any>('getProductTypeList', null)));\n    }\n    public getDipTestDetails(siteId, tankId, noOfDays): Observable<any> {\n        return this.httpClient.get<any>(this.getDipTestDetailsUrl + 'siteId=' + siteId + '&' + 'tankId=' + tankId + '&' + 'noOfDays=' + noOfDays)\n            .pipe(catchError(this.handleError<any>('getDipTestDetails', null)));\n    }\n    public getDriverAdditionalDetails(driverId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDriverAdditionalDetailsUrl + driverId)\n            .pipe(catchError(this.handleError<any>('getDriverAdditionalDetails', null)));\n    }\n    public GetDropTicketDetails(invoiceHeaderId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDropTicketDetailsUrl + invoiceHeaderId)\n            .pipe(catchError(this.handleError<any>('GetDropTicketDetails', null)));\n    }\n\n    public getSalesData(inputs: any): Observable<any> {\n        !inputs.RegionId ? inputs.RegionId = '' : '';\n        !inputs.CustomerId ? inputs.CustomerId = '' : '';\n        !inputs.LocationId ? inputs.LocationId = '' : '';\n        !inputs.SelectedTab ? inputs.SelectedTab = '' : 0;\n        !inputs.Carriers ? inputs.Carriers = '' : '';\n        !inputs.InventoryCaptureType ? inputs.InventoryCaptureType = '' : '';\n        return this.httpClient.get<any>(`${this.getSalesDataUrl}${inputs.RegionId}&customerId=${inputs.CustomerId}&jobId=${inputs.LocationId}&priority=${inputs.Priority}&SelectedTab=${inputs.SelectedTab}&isShowCarrierManaged=${inputs.IsShowCarrierManaged}&carriers=${inputs.Carriers}&isRetailJob=${inputs.IsShowRetailJobs}&inventoryCaptureType=${inputs.InventoryCaptureType}`)\n            .pipe(catchError(this.handleError<any>('getSalesData', null)));\n    }\n\n    public getBuyerSalesData(inputs: any): Observable<any> {\n        !inputs.LocationId ? inputs.LocationId = '' : '';\n        !inputs.Carriers ? inputs.Carriers = '' : '';\n        !inputs.Suppliers ? inputs.Suppliers = '' : '';\n        return this.httpClient.get<any>(`${this.getBuyerSalesDataUrl}${inputs.LocationId}&priority=${inputs.Priority}&SelectedTab=${inputs.SelectedTab}&isShowCarrierManaged=${inputs.IsShowCarrierManaged}&carriers=${inputs.Carriers}&isRetailJob=${inputs.IsShowRetailJobs}&supplierIds=${inputs.Suppliers}&InventoryCaptureTypeIds=${inputs.InventoryCaptureTypeIds}`)\n            .pipe(catchError(this.handleError<any>('getBuyerSalesDataUrl', null)));\n    }\n    public GetDeliveryDetails(jobId: number, productTypeId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getDeliveryDetailsUrl + jobId + \"&productTypeId=\" + productTypeId)\n            .pipe(catchError(this.handleError<any>('GetDeliveryDetails', null)));\n    }\n\n    public GetScheduleQtyType(): Observable<any> {\n        return this.httpClient.get<any>(this.getScheduleQtyTypeUrl)\n            .pipe(catchError(this.handleError<any>('GetScheduleQtyType', null)));\n    }\n    public PostRaiseDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postRaiseDeliveryRequestUrl, inputData)\n            .pipe(catchError(this.handleError<any>('PostRaiseDeliveryRequest', null)));\n    }\n    public GetBuyerDeliveryDetails(jobId: number, productTypeId: number): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerDeliveryDetailsUrl + jobId + \"&productTypeId=\" + productTypeId)\n            .pipe(catchError(this.handleError<any>('GetBuyerDeliveryDetails', null)));\n    }\n\n    public PostBuyerRaiseDeliveryRequest(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postBuyerRaiseDeliveryRequestUrl, inputData)\n            .pipe(catchError(this.handleError<any>('PostBuyerRaiseDeliveryRequest', null)));\n    }\n\n\n    public GetRaisedExceptions(): Observable<any> {\n\n        return this.httpClient.get<any>(`${this.getRaisedExceptionsUrl}${Exception.UnKnowDelivery},${Exception.MissingDelivery}`)\n            .pipe(catchError(this.handleError<any>('getRaisedExceptionsUrl', null)));\n    }\n\n    public GetRaisedBuyerExceptions(): Observable<any> {\n        return this.httpClient.get<any>(`${this.getRaisedExceptionsBuyerUrl}${Exception.UnKnowDelivery},${Exception.MissingDelivery}`)\n            .pipe(catchError(this.handleError<any>('getRaisedExceptionsBuyerUrl', null)));\n    }\n    public GetBuyerScheduleQtyType(): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerScheduleQtyTypeUrl)\n            .pipe(catchError(this.handleError<any>('GetScheduleQtyType', null)));\n    }\n    public getForcastingSetting(): Observable<any> {\n        return this.httpClient.get<any>(this.getForcastingSettingUrl)\n            .pipe(catchError(this.handleError<any>('getForcastingSetting', null)));\n    }\n    public getBuyerForcastingSetting(): Observable<any> {\n        return this.httpClient.get<any>(this.getBuyerForcastingSettingUrl)\n            .pipe(catchError(this.handleError<any>('getBuyerForcastingSetting', null)));\n    }\n    // public getForcastingLocationDetails(regionId, customerIds, IsShowCarrierManaged?, Carriers?,selectedLocAttributeIds?): Observable<any> {\n    //     return this.httpClient.get<any>(this.getForcastingLocationDetailsUrl + regionId + \"&customerIds=\" + customerIds + \"&isShowCarrierManaged=\" + IsShowCarrierManaged + \"&carriers=\" + Carriers+\"&inventoryCaptureType=\"+selectedLocAttributeIds)\n    //         .pipe(catchError(this.handleError<any>('getForcastingLocationDetails', null)));\n    // }\n    // public getBuyerForcastingLocationDetails(regionId, customerIds,selectedLocAttributeIds): Observable<ForecastingTankViewModel[]> {\n    //     return this.httpClient.get<any>(this.getBuyerForcastingLocationDetailsUrl + regionId + \"&customerIds=\" + customerIds+\"&inventoryCaptureType=\"+selectedLocAttributeIds)\n    //         .pipe(catchError(this.handleError<any>('getBuyerForcastingLocationDetails', null)));\n    // }\n    public getForcastingTankDetails(JobIds, TankIds, StorageIds): Observable<ForecastingTankViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingTankViewModel[]>(this.getForcastingTankDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankViewModel[]>('getForcastingTankDetails', null)));\n    }\n    public getBuyerForcastingTankDetails(JobIds, TankIds, StorageIds): Observable<ForecastingTankViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingTankViewModel[]>(this.getBuyerForcastingTankDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankViewModel[]>('getBuyerForcastingTankDetails', null)));\n    }\n    public getForcastingTankInventoryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingInventoryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingInventoryViewModel[]>(this.getForcastingTankInventoryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingInventoryViewModel[]>('getForcastingTankInventoryDetails', null)));\n    }\n    public getBuyerForcastingTankInventoryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingInventoryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingInventoryViewModel[]>(this.getBuyerForcastingTankInventoryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingInventoryViewModel[]>('getBuyerForcastingTankInventoryDetails', null)));\n    }\n    public getForcastingTankEstimatedUsageDetails(JobIds, TankIds, StorageIds, StartDate, EndDate): Observable<ForecastingEstimatedUsageViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, startDate: StartDate, endDate: EndDate, };\n        return this.httpClient.post<ForecastingEstimatedUsageViewModel[]>(this.getForcastingTankEstimatedUsageDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingEstimatedUsageViewModel[]>('getForcastingTankEstimatedUsageDetails', null)));\n    }\n    public getBuyerForcastingTankEstimatedUsageDetails(JobIds, TankIds, StorageIds, StartDate, EndDate): Observable<ForecastingEstimatedUsageViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, startDate: StartDate, endDate: EndDate };\n        return this.httpClient.post<ForecastingEstimatedUsageViewModel[]>(this.getBuyerForcastingTankEstimatedUsageDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingEstimatedUsageViewModel[]>('getBuyerForcastingTankEstimatedUsageDetails', null)));\n    }\n    public getForcastingTankDeliveryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingDeliveryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingDeliveryViewModel[]>(this.getForcastingTankDeliveryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingDeliveryViewModel[]>('getForcastingTankDeliveryDetails', null)));\n    }\n    public getBuyerForcastingTankDeliveryDetails(JobIds, TankIds, StorageIds): Observable<ForecastingDeliveryViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingDeliveryViewModel[]>(this.getBuyerForcastingTankDeliveryDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingDeliveryViewModel[]>('getBuyerForcastingTankDeliveryDetails', null)));\n    }\n    public getForcastingTankScheduleDetails(JobIds, TankIds, StorageIds): Observable<ForecastingExistingScheduleViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingExistingScheduleViewModel[]>(this.getForcastingTankScheduleUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingExistingScheduleViewModel[]>('getForcastingTankScheduleDetails', null)));\n    }\n    public getBuyerForcastingTankScheduleDetails(JobIds, TankIds, StorageIds): Observable<ForecastingExistingScheduleViewModel[]> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds };\n        return this.httpClient.post<ForecastingExistingScheduleViewModel[]>(this.getBuyerForcastingTankScheduleUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingExistingScheduleViewModel[]>('getBuyerForcastingTankScheduleDetails', null)));\n    }\n    public getForcastingTankChartDetails(JobIds, TankIds, StorageIds, currentDateTime): Observable<ForecastingTankChartViewModel> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, currentDate: currentDateTime };\n        return this.httpClient.post<ForecastingTankChartViewModel>(this.getForcastingTankChartDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankChartViewModel>('getForcastingTankChartDetails', null)));\n    }\n    public getBuyerForcastingTankChartDetails(JobIds, TankIds, StorageIds, currentDateTime): Observable<ForecastingTankChartViewModel> {\n        var inputData = { JobId: JobIds, TankId: TankIds, StorageId: StorageIds, currentDate: currentDateTime };\n        return this.httpClient.post<ForecastingTankChartViewModel>(this.getBuyerForcastingTankChartDetailsUrl, inputData)\n            .pipe(catchError(this.handleError<ForecastingTankChartViewModel>('getBuyerForcastingTankChartDetails', null)));\n    }\n    public calculateTankRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateTankRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('CalculateTankRetainWindowInfo', null)));\n    }\n    public calculateBuyerTankRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingBuyerCalculateTankRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateBuyerTankRetainWindowInfo', null)));\n    }\n    public calculateBuyerTankDetailsRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingBuyerCalculateTankDetailsRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateBuyerTankRetainWindowInfo', null)));\n    }\n    public calculateTankDetailsRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateTankDetailsRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('calculateTankDetailsRetainWindowInfo', null)));\n    }\n    public GetCarriersForSupplier(): Observable<any> {\n        return this.httpClient.get<any>(this.getCarriersForSupplierUrl)\n            .pipe(catchError(this.handleError<any>('getCarriersForSupplier', null)));\n    }\n\n    public postFiltersData(moduleId: any, inputData: any): Observable<any> {\n        var data = { moduleId: moduleId, filterInput: inputData };\n        return this.httpClient.post<any>(this.postSupplierFilters, data)\n            .pipe(catchError(this.handleError<any>('postFiltersData', null)));\n    }\n    public getFilters(moduleId: any): Observable<any> {\n        return this.httpClient.get<any>(this.getFiltersUrl + moduleId)\n            .pipe(catchError(this.handleError<any>('getFilters', null)));\n    }\n    public getDSBShiftFilters(moduleId: any, regionId): Observable<any> {\n        return this.httpClient.get<any>(this.getDSBShiftFiltersUrl + moduleId + '&' + 'regionId=' + regionId)\n            .pipe(catchError(this.handleError<any>('getFilters', null)));\n    }\n    public getSupplierLocationTanks(filter: ForecastingLocationFilter): Observable<any> {\n        return this.httpClient.post<any>(this.getSupplierLocationTanksInfoUrl, filter)\n            .pipe(catchError(this.handleError<any>('getSupplierLocationTanks', null)));\n    }\n    public getBuyerLocationTanks(filter: ForecastingLocationFilter): Observable<any> {\n        return this.httpClient.post<any>(this.getBuyerLocationTanksInfoUrl, filter)\n            .pipe(catchError(this.handleError<any>('getBuyerLocationTanks', null)));\n    }\n    public getInventoryDataCaptureList() {\n        return [{ Id: 0, Name: 'Not specified' }, { Id: 1, Name: 'Connected' }, { Id: 2, Name: 'Manual' }, { Id: 3, Name: 'Call-In' }, { Id: 4, Name: 'Mixed' }];\n    }\n\n    public calculateProductRetainWindowInfo(inputData: any): Observable<any> {\n        return this.httpClient.post<any>(this.postForcastingCalculateProductRetainWindowInfoUrl, inputData)\n            .pipe(catchError(this.handleError<any>('CalculateProductRetainWindowInfo', null)));\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { DropdownItemExt } from 'src/app/statelist.service';\r\nimport { RegionDetailModel, ScheduleBuilderModel, OrderPickupDetailModel, CompanyUsers, DemandModel, PreLoadDrViewModel, PreLoadDrResponseViewModel, UnAssignDriverFromShiftModel, DeliveryRequestBrokerInfoViewModel, TrailerCompartment, ShiftViewModel, OttoTripModel, OttoNotifications, OttoBuilder, OrderFuelInfo, OptionalPickupDetailModel, JobDetailsWithOrders, SubDRStatus } from '../models/DispatchSchedulerModels';\r\nimport { DeliveryRequestViewModel } from '../../buyer-wally-board/Models/BuyerWallyBoard';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ScheduleBuilderService extends HandleError {\r\n\r\n    private getRegionListUrl = '/Carrier/ScheduleBuilder/GetRegions';\r\n    private getRegionDetailsUrl = '/Carrier/ScheduleBuilder/GetRegionDetails?regionId=';\r\n    private getGetSheduleBuilderUrl = '/Carrier/ScheduleBuilder/GetSheduleBuilder?regionId=';\r\n    private getOrdersUrl = '/Carrier/ScheduleBuilder/GetOrderDetailsForEditDeliveryGroup?jobId=';\r\n    private getPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTerminalsForOrders';\r\n    private getOrderBadgesByTerminalUrl = '/Carrier/ScheduleBuilder/GetOrderBadgesByTerminal';\r\n    private saveDriverViewUrl = '/Carrier/ScheduleBuilder/SaveDriverView';\r\n    private getDeliveryReqDemandsUrl = '/Carrier/ScheduleBuilder/GetDeliveryReqDemands';\r\n    private publishDriverViewUrl = '/Carrier/ScheduleBuilder/PublishDriverView';\r\n    private saveTrailerViewUrl = '/Carrier/ScheduleBuilder/SaveTrailerView';\r\n    private publishTrailerViewUrl = '/Carrier/ScheduleBuilder/PublishTrailerView';\r\n    private deleteGroupUrl = '/Carrier/ScheduleBuilder/DeleteLoadDriverView';\r\n    private deleteGroupTrailerViewUrl = '/Carrier/ScheduleBuilder/DeleteLoadTrailerView';\r\n    private urlGetCompanyDrivers = 'Carrier/ScheduleBuilder/GetCompanyDrivers';\r\n    private urlAssignDriverAndTrailer = 'Carrier/ScheduleBuilder/AssignDriverAndTrailer';\r\n    private checkDelReqStatusUrl = 'Carrier/ScheduleBuilder/CheckDelReqStatus?delReqId=';\r\n    private getScheduleStatusUrl = 'Carrier/ScheduleBuilder/GetScheduleStatus';\r\n    private getRegionDispatcherDetails = '/Carrier/ScheduleBuilder/GetRegionDispactherDetails?regionId=';\r\n    private getSelectedDateDriverScheduleByDriverIdUrl = '/Carrier/ScheduleBuilder/getSelectedDateDriverScheduleByDriverId?driverId=';\r\n    private getSelectedDateDriverScheduleByDriverIdGridViewUrl = '/Carrier/ScheduleBuilder/getSelectedDateDriverScheduleByDriverIdGridView?driverId=';\r\n    private validateTrailerJobCompatibilityUrl = '/Carrier/ScheduleBuilder/ValidateTrailerJobCompatibility';\r\n    private validateFilldOrderCompatibilityUrl = '/Carrier/ScheduleBuilder/IsFilldCompatibleOrder?orderId=';\r\n    private getCustomerLocationProductUrl = '/Carrier/ScheduleBuilder/GetCustomerLocationProducts?jobId=';\r\n    private reCreateDeliveryRequestsUrl = '/Carrier/ScheduleBuilder/ReCreateDeliveryRequests';\r\n    private cloneDrsForPreloadUrl = '/Carrier/ScheduleBuilder/CloneDrsForPreload';\r\n    private CreatePreloadForAcrossTheDateUrl = '/Carrier/ScheduleBuilder/CreatePreloadForAcrossTheDate';\r\n    private postUrlUnAssignDriverFromShift = '/Carrier/ScheduleBuilder/UnAssignDriverFromShift';\r\n    private getAssignCarrierDetailsUrl = '/Carrier/ScheduleBuilder/GetAssignCarrierDetails?regionId=';\r\n    private getOrdersByDeliveryRequestsUrl = '/Carrier/ScheduleBuilder/GetOrdersByDeliveryRequests';\r\n    private BrokerDeliveryRequestToCarrierUrl = '/Carrier/ScheduleBuilder/BrokerDeliveryRequestToCarrier';\r\n    private BrokerDeliveryRequestsToCarriersUrl = '/Carrier/ScheduleBuilder/BrokerDeliveryRequestsToCarriers';\r\n    private getGetRegionsOfCompanyUrl = '/Carrier/ScheduleBuilder/GetRegionsOfCompany?companyId=';\r\n    private recallDrFromCarrierUrl = '/Carrier/ScheduleBuilder/RecallDrFromCarrier';\r\n    private getChildOrdersURL = '/Carrier/ScheduleBuilder/GetSupplierChildOrders?OrderId=';\r\n    private getTrailerComaprtmentsURL = '/Carrier/ScheduleBuilder/GetTrailerCompartmentDetails';\r\n    private getTrailerFuelRetainURL = '/Carrier/ScheduleBuilder/GetTrailerFuelRetainDetails';\r\n    private getOttoSettingURL = '/Carrier/ScheduleBuilder/GetOttoSetting';\r\n    private getOttoScheduleDetailsURL = '/Carrier/ScheduleBuilder/GetOttoScheduleDetails?regionId=';\r\n    private GetShiftsURL = '/Carrier/ScheduleBuilder/GetShifts?regionId=';\r\n    private getOttoNotificationURL = '/Carrier/ScheduleBuilder/GetOttoNotifications?regionId=';\r\n    private getOttoNotificationCountURL = '/Carrier/ScheduleBuilder/GetDsbNotificationCount?regionId=';\r\n    private updateOttoNotificationStatusURL = '/Carrier/ScheduleBuilder/UpdateDsbNotificationStatus';\r\n    private scheduleOttoDRsURL = '/Carrier/ScheduleBuilder/ScheduleOttoDRs';\r\n    private urlGetShiftCompanyDrivers = 'Carrier/ScheduleBuilder/GetShiftCompanyDrivers';\r\n    private urlGetDriversShiftsURL = '/Carrier/ScheduleBuilder/GetDriversShiftsURL?regionId=';\r\n    private getOptionalPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTerminalsForOptionalPickup';\r\n    private getOrderFuelTypeUrl = '/Carrier/ScheduleBuilder/GetOrderFuelType';\r\n    private postUrladdOptionalPickup = '/Carrier/ScheduleBuilder/AddOptionalPickup';\r\n    private postUrlgetOptionalPickupDetails = '/Carrier/ScheduleBuilder/GetOptionalPickupDetails';\r\n    private postUrlDeleteOptionalPickupDetails = '/Carrier/ScheduleBuilder/DeleteOptionalPickupDetails';\r\n    private getTBDPickupTerminalsUrl = '/Carrier/ScheduleBuilder/GetTBDTerminals';\r\n    private getJobWithOrdersUrl = '/Carrier/ScheduleBuilder/GetJobWithOrders?regionId='\r\n    private cancelDriverViewUrl = '/Carrier/ScheduleBuilder/CancelDriverSchedule';\r\n    private cancelDeliveryGroupSchedule = '/Carrier/ScheduleBuilder/CancelDeliverySchedule';\r\n    private getSubDRInfoCancelDS = '/Carrier/ScheduleBuilder/GetSubDRInfoCancelDS';\r\n    private getSubDRsStatus = '/Carrier/ScheduleBuilder/getSubDrsStatus';\r\n    private deleteRemoveDeliveryScheduleUrl = '/Carrier/ScheduleBuilder/RemoveDeliverySchedule';\r\n    private urlGetJobCoordinates = '/Carrier/ScheduleBuilder/GetJobCoordinates';\r\n    private urlPostValidateDRMaxFill = '/Carrier/ScheduleBuilder/ValidateTankMaxFill';\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getRegions(): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getRegionListUrl)\r\n            .pipe(catchError(this.handleError<any>('getRegions', null)));\r\n    }\r\n\r\n    getRegionsOfCompany(companyId: any): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getGetRegionsOfCompanyUrl + companyId)\r\n            .pipe(catchError(this.handleError<any>('getRegionsOfCompany', null)));\r\n    }\r\n\r\n    getRegionDetails(regionId: string): Observable<RegionDetailModel> {\r\n        return this.httpClient.get<RegionDetailModel>(this.getRegionDetailsUrl + regionId)\r\n            .pipe(catchError(this.handleError<RegionDetailModel>('getRegionDetails', null)));\r\n    }\r\n\r\n    getScheduleBuilder(regionId: string, date: string, sbViewId: number, sbDsbView: number): Observable<ScheduleBuilderModel> {\r\n        return this.httpClient.get<ScheduleBuilderModel>(this.getGetSheduleBuilderUrl + regionId + '&date=' + date + '&sbView=' + sbViewId + '&sbDsbView=' + sbDsbView)\r\n            .pipe(catchError(this.handleError<ScheduleBuilderModel>('getScheduleBuilder', null)));\r\n    }\r\n\r\n    getOrders(jobId: number, productTypeId: string, startDate: string, carrierStatus: number = -1, isBlendReq: boolean = false): Observable<OrderPickupDetailModel[]> {\r\n        var url = this.getOrdersUrl + jobId + '&productTypeId=' + productTypeId + '&carrierStatus=' + carrierStatus + '&isBlendReq=' + isBlendReq;\r\n        if (startDate != null) {\r\n            url = url + '&startDate=' + startDate;\r\n        }\r\n        return this.httpClient.get<OrderPickupDetailModel[]>(url)\r\n            .pipe(catchError(this.handleError<OrderPickupDetailModel[]>('getOrders', null)));\r\n    }\r\n\r\n    getJobDetailsWithOrders(selectedRegionId: string, tfxProductId: number, productTypeId: number, terminalId: number, bulkplantId: number, startDate: string): Observable<JobDetailsWithOrders[]> {\r\n        var url = this.getJobWithOrdersUrl + selectedRegionId + '&tfxProductId=' + tfxProductId + '&productTypeId=' + productTypeId + '&terminalId=' + terminalId + '&bulkplantId=' + bulkplantId;\r\n        if (startDate != null) {\r\n            url = url + '&startDate=' + startDate;\r\n        }\r\n        return this.httpClient.get<JobDetailsWithOrders[]>(url)\r\n            .pipe(catchError(this.handleError<JobDetailsWithOrders[]>('getJobDetailsWithOrders', null)));\r\n    }\r\n\r\n    getPickupTerminals(orders: number[], terminalName = ''): Observable<any> {\r\n        var data = { OrderList: orders, Terminal: terminalName };\r\n        return this.httpClient.post(this.getPickupTerminalsUrl, data);\r\n    }\r\n\r\n    getOrderBadgesByTerminal(_orderIds, _pickupLocationType, _pickupLocationId): Observable<any> {\r\n        var model = { OrderIds: _orderIds, PickupLocationType: _pickupLocationType, PickupLocationId: _pickupLocationId };\r\n        return this.httpClient.post(this.getOrderBadgesByTerminalUrl, model).pipe(catchError(this.handleError<any>('getOrderBadgesByTerminal', null)));\r\n    }\r\n\r\n    saveDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveDriverView', null)));\r\n    }\r\n\r\n    getDeliveryReqDemands(input: any): Observable<any> {\r\n        return this.httpClient.post(this.getDeliveryReqDemandsUrl, input).pipe(catchError(this.handleError<any>('getDeliveryReqDemands', null)));\r\n    }\r\n\r\n    publishDriverView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.publishDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('publishDriverView', null)));\r\n    }\r\n\r\n    saveTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.saveTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('saveTrailerView', null)));\r\n    }\r\n\r\n    publishTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.publishTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('publishTrailerView', null)));\r\n    }\r\n\r\n    assignDriverAndTrailer(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.urlAssignDriverAndTrailer, sbModel);\r\n    }\r\n\r\n    deleteGroup(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteGroupUrl, sbModel).pipe(catchError(this.handleError<any>('deleteGroup', null)));\r\n    }\r\n\r\n    deleteGroupTrailerView(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteGroupTrailerViewUrl, sbModel).pipe(catchError(this.handleError<any>('deleteGroupTrailerView', null)));\r\n    }\r\n\r\n    checkDelReqStatus(selectedDate: string, selectedRegionId: string, currentTimeStamp: any, delReqId: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.checkDelReqStatusUrl + delReqId + '&selectedDate=' + selectedDate + '&selectedRegionId=' + selectedRegionId + '&currentTimeStamp=' + currentTimeStamp)\r\n            .pipe(catchError(this.handleError<any>('checkDelReqStatus', null)));\r\n    }\r\n\r\n    getSubDRStatus(groupDRParentIds: SubDRStatus[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getSubDRsStatus, groupDRParentIds).pipe(catchError(this.handleError<any>('getSubDRStatus', null)));\r\n    }\r\n\r\n    getScheduleStatus(trackableScheduleIds: number[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getScheduleStatusUrl, trackableScheduleIds).pipe(catchError(this.handleError<any>('getScheduleStatus', null)));\r\n    }\r\n\r\n    getCompanyDrivers(trailerIds, regionIds, selectedDate): Observable<any> {\r\n        var data = { trailerId: trailerIds, regionId: regionIds, selectedDate: selectedDate };\r\n        return this.httpClient.post<any>(this.urlGetCompanyDrivers, data)\r\n            .pipe(catchError(this.handleError<any>('getCompanyDrivers', null)));\r\n    }\r\n\r\n    setConfirmationHeadingForDeleteGroup(enrouteStatus: number) {\r\n        switch (enrouteStatus) {\r\n            case 1:\r\n            case 3:\r\n            case 9:\r\n                jQuery('#deleteDrHeading').html('Driver has started to fuel drop location for one or more schedule(s).');\r\n                break;\r\n            case 11:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 12:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 17:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel pickup location for one or more schedule(s).');\r\n                break;\r\n            case 15:\r\n                jQuery('#deleteDrHeading').html('Driver has started picking up fuel for one or more schedule(s).');\r\n                break;\r\n            case 16:\r\n                jQuery('#deleteDrHeading').html('Driver has already picked fuel for one or more schedule(s).');\r\n                break;\r\n            case 13:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel drop location for one or more schedule(s).');\r\n                break;\r\n            case 18:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel drop location for one or more schedule(s).');\r\n                break;\r\n            default:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel drop location for one or more schedule(s).');\r\n                break;\r\n        }\r\n    }\r\n\r\n    setConfirmationHeadingForDR(enrouteStatus: number) {\r\n        switch (enrouteStatus) {\r\n            case 1:\r\n            case 3:\r\n            case 9:\r\n                jQuery('#deleteDrHeading').html('Driver has started to fuel drop location.');\r\n                break;\r\n            case 11:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel pickup location.');\r\n                break;\r\n            case 12:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel pickup location.');\r\n                break;\r\n            case 17:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel pickup location.');\r\n                break;\r\n            case 15:\r\n                jQuery('#deleteDrHeading').html('Driver has started picking up fuel.');\r\n                break;\r\n            case 16:\r\n                jQuery('#deleteDrHeading').html('Driver has already picked fuel.');\r\n                break;\r\n            case 13:\r\n                jQuery('#deleteDrHeading').html('Driver is waiting before fuel drop location.');\r\n                break;\r\n            case 18:\r\n                jQuery('#deleteDrHeading').html('Driver has arrived at fuel drop location.');\r\n                break;\r\n            default:\r\n                jQuery('#deleteDrHeading').html('Driver is on the way to fuel drop location.');\r\n                break;\r\n        }\r\n    }\r\n\r\n    returnCommonElements(array1, list: any, isScheduleStatus: boolean) {\r\n        if (isScheduleStatus) {\r\n            return list.filter(i =>\r\n                array1.indexOf(i.ScheduleStatusId) != -1\r\n            ).map(t => t.ScheduleStatusId);\r\n        }\r\n        else {\r\n            return list.filter(i =>\r\n                array1.indexOf(i.ScheduleEnrouteStatusId) != -1).map(t => t.ScheduleEnrouteStatusId);\r\n        }\r\n    }\r\n\r\n    returnCommonTracableElements(StatusArray, list: any, isTrackableStatus: boolean) {\r\n        if (isTrackableStatus) {\r\n            return list.filter(i =>\r\n                StatusArray.indexOf(i.TrackScheduleStatus) != -1\r\n            ).map(t => t.TrackScheduleStatus);\r\n        }\r\n        else {\r\n            return list.filter(i =>\r\n                StatusArray.indexOf(i.TrackScheduleStatus) != -1).map(t => t.TrackScheduleStatus);\r\n        }\r\n    }\r\n\r\n    returnSubDrStatusOtherthaCancel(StatusArray: any, list: any) {\r\n        return list.filter(i =>\r\n            StatusArray.indexOf(i.DeliveryScheduleStatusId) != -1\r\n        ).map(t => t.DeliveryScheduleStatusId);\r\n\r\n    }\r\n\r\n    getRegionDispacther(regionId, driverId): Observable<CompanyUsers[]> {\r\n        return this.httpClient.get<CompanyUsers[]>(this.getRegionDispatcherDetails + regionId + '&driverId=' + driverId)\r\n            .pipe(catchError(this.handleError<any>('getCompanyUsersDetails', null)));\r\n    }\r\n\r\n    getSelectedDateDriverScheduleByDriverId(driverId, selectedDate): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSelectedDateDriverScheduleByDriverIdUrl + driverId + \"&selectedDate=\" + selectedDate)\r\n            .pipe(catchError(this.handleError<any>('getSelectedDateDriverScheduleByDriverId', null)));\r\n    }\r\n\r\n    validateTrailerJobCompatibility(trailers: any, deliveryRequests: any): Observable<any> {\r\n        var data = { trailers: trailers, deliveryRequests: deliveryRequests };\r\n        return this.httpClient.post(this.validateTrailerJobCompatibilityUrl, data).pipe(catchError(this.handleError<any>('validateTrailerJobCompatibility', null)));\r\n    }\r\n\r\n    validateFilldOrderCompatibility(orderIds: any): Observable<any> {\r\n        var data = { orderIds: orderIds };\r\n        return this.httpClient.post(this.validateFilldOrderCompatibilityUrl, data).pipe(catchError(this.handleError<any>('validateFilldOrderCompatibility', null)));\r\n    }\r\n\r\n    getCustomerLocationDemands(jobId: number, regionId: string): Observable<DemandModel[]> {\r\n        return this.httpClient.get<any>(this.getCustomerLocationProductUrl + jobId + \"&regionId=\" + regionId)\r\n            .pipe(catchError(this.handleError<any>('getCustomerLocationProducts', null)));\r\n    }\r\n\r\n    reCreateDeliveryRequests(inputData: any): Observable<any> {\r\n        return this.httpClient.post(this.reCreateDeliveryRequestsUrl, inputData)\r\n            .pipe(catchError(this.handleError<any>('reCreateDeliveryRequests', null)));\r\n    }\r\n\r\n    cloneDrsForPreload(drIds: any): Observable<any> {\r\n        return this.httpClient.post(this.cloneDrsForPreloadUrl, drIds)\r\n            .pipe(catchError(this.handleError<any>('cloneDrsForPreload', null)));\r\n    }\r\n\r\n    createPreloadForAcrossTheDate(data: PreLoadDrViewModel): Observable<PreLoadDrResponseViewModel> {\r\n        return this.httpClient.post(this.CreatePreloadForAcrossTheDateUrl, data)\r\n            .pipe(catchError(this.handleError<any>('CreatePreloadForAcrossTheDate', null)));\r\n    }\r\n\r\n    UnAssignDriverTrailerFromShift(_data: UnAssignDriverFromShiftModel): Observable<any> {\r\n        return this.httpClient.post(this.postUrlUnAssignDriverFromShift, _data).pipe(catchError(this.handleError<any>('UnAssignDriverFromShift', null)));\r\n    }\r\n    getAssignCarrierDetails(regionId: string, JobId: number, FuelTypeId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getAssignCarrierDetailsUrl + regionId + \"&jobId=\" + JobId + \"&fuelTypeId=\" + FuelTypeId)\r\n            .pipe(catchError(this.handleError<any>('getAssignCarrierDetails', null)));\r\n    }\r\n\r\n    getOrdersByDeliveryRequests(data: any[]): Observable<any> {\r\n        return this.httpClient.post<any>(this.getOrdersByDeliveryRequestsUrl, data)\r\n            .pipe(catchError(this.handleError<any>('getOrdersByDeliveryRequests', null)));\r\n    }\r\n\r\n    BrokerDeliveryRequestToCarrier(_data: DeliveryRequestBrokerInfoViewModel): Observable<any> {\r\n        return this.httpClient.post(this.BrokerDeliveryRequestToCarrierUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('BrokerDeliveryRequestToCarrier', null)));\r\n    }\r\n\r\n    BrokerDeliveryRequestsToCarriers(_data: DeliveryRequestBrokerInfoViewModel): Observable<any> {\r\n        return this.httpClient.post(this.BrokerDeliveryRequestsToCarriersUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('BrokerDeliveryRequestsToCarriers', null)));\r\n    }\r\n\r\n    recallDrFromCarrier(_data: any): Observable<any> {\r\n        return this.httpClient.post(this.recallDrFromCarrierUrl, _data)\r\n            .pipe(catchError(this.handleError<any>('recallDrFromCarrier', null)));\r\n    }\r\n\r\n    getChildOrderDetails(OrderId: any): Observable<DropdownItemExt[]> {\r\n        return this.httpClient.get<DropdownItemExt[]>(this.getChildOrdersURL + OrderId)\r\n            .pipe(catchError(this.handleError<any>('getChildOrderDetails', null)));\r\n    }\r\n\r\n    getTrailerCompartments(data: any[]): Observable<TrailerCompartment[]> {\r\n        return this.httpClient.post(this.getTrailerComaprtmentsURL, data)\r\n            .pipe(catchError(this.handleError<any>('getTrailerCompartments', null)));\r\n    }\r\n    getTrailerFuelRetain(data: any[]): Observable<any> {\r\n        return this.httpClient.post(this.getTrailerFuelRetainURL, data)\r\n            .pipe(catchError(this.handleError<any>('getTrailerFuelRetain', null)));\r\n    }\r\n    getOttoSetting(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOttoSettingURL)\r\n            .pipe(catchError(this.handleError<any>('getOttoSetting', null)));\r\n    }\r\n    getOttoScheduleDetails(regionId: string, shiftStartTime: string, shiftEndTime: string, date: string): Observable<OttoTripModel[]> {\r\n        return this.httpClient.get<OttoTripModel[]>(this.getOttoScheduleDetailsURL + regionId + '&shiftStartTime=' + shiftStartTime + '&shiftEndTime=' + shiftEndTime + '&date=' + date)\r\n            .pipe(catchError(this.handleError<OttoTripModel[]>('getOttoScheduleDetails', null)));\r\n    }\r\n    getShifts(regionid): Observable<ShiftViewModel[]> {\r\n        return this.httpClient.get<ShiftViewModel[]>(this.GetShiftsURL + regionid)\r\n            .pipe(catchError(this.handleError<ShiftViewModel[]>('getShifts', null)));\r\n    }\r\n    getOttoNotificationDetails(regionId: string): Observable<OttoNotifications[]> {\r\n        return this.httpClient.get<OttoNotifications[]>(this.getOttoNotificationURL + regionId)\r\n            .pipe(catchError(this.handleError<OttoNotifications[]>('getOttoNotificationDetails', null)));\r\n    }\r\n    getOttoNotificationCount(regionId: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.getOttoNotificationCountURL + regionId)\r\n            .pipe(catchError(this.handleError<any>('getOttoNotificationCount', null)));\r\n    }\r\n    updateNotificationStatus(data: any): Observable<any> {\r\n        var response = { Id: data };\r\n        return this.httpClient.post(this.updateOttoNotificationStatusURL, response)\r\n            .pipe(catchError(this.handleError<any>('updateNotificationStatus', null)));\r\n    }\r\n    scheduleOttoDRs(ottoBuilder: OttoBuilder): Observable<any> {\r\n        return this.httpClient.post(this.scheduleOttoDRsURL, ottoBuilder)\r\n            .pipe(catchError(this.handleError<any>('scheduleOttoDRs', null)));\r\n    }\r\n    getShiftCompanyDrivers(regionIds, otherRegion, selectedDate, shiftId): Observable<any> {\r\n        var data = { regionId: regionIds, otherRegion: otherRegion, selectedDate: selectedDate, shiftId: shiftId };\r\n        return this.httpClient.post<any>(this.urlGetShiftCompanyDrivers, data)\r\n            .pipe(catchError(this.handleError<any>('getShiftCompanyDrivers', null)));\r\n    }\r\n    getDriversShifts(regionid, date: string): Observable<ShiftViewModel[]> {\r\n        return this.httpClient.get<ShiftViewModel[]>(this.urlGetDriversShiftsURL + regionid + '&SelectedDate=' + date)\r\n            .pipe(catchError(this.handleError<ShiftViewModel[]>('getDriversShifts', null)));\r\n    }\r\n    getSelectedDateDriverScheduleByDriverIdGridView(driverId, selectedDate, shiftId): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSelectedDateDriverScheduleByDriverIdGridViewUrl + driverId + \"&selectedDate=\" + selectedDate + \"&shiftId=\" + shiftId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedDateDriverScheduleByDriverId', null)));\r\n    }\r\n    getOptioanlPickupTerminals(orders: number[], fuelType: number[], terminalName = ''): Observable<any> {\r\n        var data = { OrderList: orders, FuelTypeId: fuelType, Terminal: terminalName };\r\n        return this.httpClient.post(this.getOptionalPickupTerminalsUrl, data);\r\n    }\r\n    getOrderFuelTypes(orders: number[]): Observable<OrderFuelInfo> {\r\n        var data = { OrderList: orders };\r\n        return this.httpClient.post<OrderFuelInfo>(this.getOrderFuelTypeUrl, data);\r\n    }\r\n    addOptionalPickup(OptionalPickupDetails: OptionalPickupDetailModel[]) {\r\n        var data = { OptionalPickupDetails };\r\n        return this.httpClient.post<any>(this.postUrladdOptionalPickup, data);\r\n    }\r\n\r\n    getOptionalPickup(OptionalPickupDetails: OptionalPickupDetailModel) {\r\n        var data = { OptionalPickupDetails };\r\n        return this.httpClient.post<OptionalPickupDetailModel[]>(this.postUrlgetOptionalPickupDetails, data);\r\n    }\r\n    deleteOptionalPickup(opId: string, DriverId: number) {\r\n        var data = { Id: opId, driverId: DriverId };\r\n        return this.httpClient.post<any>(this.postUrlDeleteOptionalPickupDetails, data);\r\n    }\r\n    getTBDPickupTerminals(terminalName = ''): Observable<any> {\r\n        var data = { Terminal: terminalName };\r\n        return this.httpClient.post(this.getTBDPickupTerminalsUrl, data);\r\n    }\r\n    CancelDriverSchedule(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.cancelDriverViewUrl, sbModel).pipe(catchError(this.handleError<any>('cancelDriverSchedule', null)));\r\n    }\r\n    CancelDeliveryGroupSchedule(CancelDeliverySchedule: any): Observable<any> {\r\n        return this.httpClient.post(this.cancelDeliveryGroupSchedule, CancelDeliverySchedule).pipe(catchError(this.handleError<any>('CancelDeliveryGroupSchedule', null)));\r\n    }\r\n    GetSubDRInfoCancelDS(inputModel: any): Observable<any> {\r\n        return this.httpClient.post(this.getSubDRInfoCancelDS, inputModel).pipe(catchError(this.handleError<any>('GetSubDRInfoCancelDS', null)));\r\n    }\r\n    deleteDeliverySchedule(sbModel: any): Observable<any> {\r\n        return this.httpClient.post(this.deleteRemoveDeliveryScheduleUrl, sbModel).pipe(catchError(this.handleError<any>('deleteDeliverySchedule', null)));\r\n    }\r\n    getJobCoordinates(jobIds: number[]): Observable<any[]> {\r\n        return this.httpClient.post<any[]>(this.urlGetJobCoordinates, { jobIds: jobIds }).pipe(catchError(this.handleError<any>('getJobCoordinates', null)));\r\n    }\r\n    postValidateDRMaxFill(sbModel: DeliveryRequestViewModel[]): Observable<any> {\r\n        return this.httpClient.post(this.urlPostValidateDRMaxFill, sbModel).pipe(catchError(this.handleError<any>('postValidateDRMaxFill', null)));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, Validators, FormGroup, FormArray } from '@angular/forms';\r\nimport { TrailerViewModel, TrailerShiftModel, TripModel, DeliveryRequestViewModel, DropAddressModel, DemandModel, LoadInfo, CompartmentModel, CompartmentInfo, DriverAdditionalDetailModel, BlendedRequest } from '../models/DispatchSchedulerModels';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport * as moment from 'moment';\r\nimport { min } from 'rxjs/operators';\r\nimport { sortArrayTwice, sortByKeyAsc } from 'src/app/my.functions';\r\nimport { NumberConstants } from 'src/app/app.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UtilService {\r\n\r\n    constructor(private readonly fb: FormBuilder) { }\r\n\r\n    public getTrailerForm(trailer: TrailerViewModel, selectedShifts: []): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(trailer.Id),\r\n            TrailerId: this.fb.control(trailer.TrailerId), // Rows in the shift \r\n            StartTime: this.fb.control(trailer.StartTime),\r\n            EndTime: this.fb.control(trailer.EndTime),\r\n            Compartments: this.fb.control(trailer.Compartments),\r\n            TrailerType: this.fb.control(trailer.TrailerType),\r\n            Shifts: this.fb.array([]), //this.getShiftsFormArray(trailer.Shifts || []),\r\n            SelectedShifts: this.fb.control(selectedShifts),\r\n            IsCollapsed: this.fb.control(trailer.IsCollapsed)\r\n        });\r\n    }\r\n\r\n    public getShiftsFormArray(shifts: TrailerShiftModel[]): FormArray {\r\n        var _sArray = this.fb.array([]);\r\n        shifts.forEach(x => {\r\n            _sArray.push(this.getShiftFormGroup(x));\r\n        });\r\n        return _sArray;\r\n    }\r\n\r\n    public getShiftFormGroup(x: TrailerShiftModel): FormGroup {\r\n        let _sForm = this.fb.group({\r\n            ShiftId: this.fb.control(x.ShiftId),\r\n            StartTime: this.fb.control(x.StartTime),\r\n            EndTime: this.fb.control(x.EndTime),\r\n            SlotPeriod: this.fb.control(x.SlotPeriod),\r\n            Trips: this.getTripsFormArray(x.Trips)\r\n        });\r\n        return _sForm;\r\n    }\r\n\r\n    public getTripsFormArray(trips: TripModel[]): FormArray {\r\n        var _tArray = this.fb.array([]);\r\n        trips.forEach(x => {\r\n            _tArray.push(this.getTripFormGroup(x));\r\n        });\r\n        return _tArray;\r\n    }\r\n\r\n    public getTripFormGroup(x: TripModel): FormGroup {\r\n        var _tForm = this.fb.group({\r\n            TripId: this.fb.control(x.TripId),\r\n            GroupId: this.fb.control(x.GroupId),\r\n            DeliveryRequests: this.getDeliveryRequestFormArray(x.DeliveryRequests, x.IsCommonPickup, x.IsDispatcherDragDropSequence, 0),\r\n            StartDate: this.fb.control(x.StartDate, Validators.required),\r\n            StartTime: this.fb.control(x.StartTime, Validators.required),\r\n            EndTime: this.fb.control(x.EndTime, Validators.required),\r\n            LoadCode: this.fb.control(x.LoadCode),\r\n            RouteInfo: this.fb.control(x.RouteInfo),\r\n            SupplierSource: this.fb.control(x.SupplierSource),\r\n            Carrier: this.fb.control(x.Carrier),\r\n            TripStatus: this.fb.control(x.TripStatus),\r\n            TripPrevStatus: this.fb.control(x.TripPrevStatus),\r\n            DeliveryGroupStatus: this.fb.control(x.DeliveryGroupStatus),\r\n            DeliveryGroupPrevStatus: this.fb.control(x.DeliveryGroupPrevStatus),\r\n            PickupLocationType: this.fb.control(x.PickupLocationType),\r\n            IsCommonPickup: this.fb.control(x.IsCommonPickup),\r\n            Terminal: this.getTerminalForm(x.Terminal, x.IsCommonPickup && x.PickupLocationType != 2),\r\n            BulkPlant: this.getBulkPlantForm(x.BulkPlant, x.IsCommonPickup && x.PickupLocationType == 2),\r\n            ShiftIndex: this.fb.control(x.ShiftIndex),\r\n            DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            DriverColIndex: this.fb.control(x.DriverColIndex),\r\n            TrailerRowIndex: this.fb.control(x.TrailerRowIndex),\r\n            TrailerColIndex: this.fb.control(x.TrailerColIndex),\r\n            IsEditable: this.fb.control(x.IsEditable),\r\n            TimeStamp: this.fb.control(x.TimeStamp),\r\n            ShiftId: this.fb.control(x.ShiftId),\r\n            ShiftStartTime: this.fb.control(x.ShiftStartTime),\r\n            ShiftEndTime: this.fb.control(x.ShiftEndTime),\r\n            SlotPeriod: this.fb.control(x.SlotPeriod),\r\n            DriverScheduleMappingId: this.fb.control(x.DriverScheduleMappingId),\r\n            BadgeNo1: this.fb.control(x.BadgeNo1),\r\n            BadgeNo2: this.fb.control(x.BadgeNo2),\r\n            BadgeNo3: this.fb.control(x.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(x.IsCommonBadge),\r\n            isRecurringSchedule: this.fb.control(x.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(x.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(x.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(x.ScheduleQuantityTypeText),\r\n            IsTrailerExists: this.fb.control(x.IsTrailerExists),\r\n            IsPreLoadInfo: this.fb.control(x.IsPreLoadInfo),\r\n            IsPreloadDisable: x.DeliveryRequests.filter(x => x.IsPreloadDisable == true).length > 0 ? this.fb.control(true) : this.fb.control(false),\r\n            IsDriverScheduleExists: (x.IsDriverScheduleExists),\r\n            IsDispatcherDragDropSequence: (x.IsDispatcherDragDropSequence),\r\n            IsDispatcherDragDropSequenceModified: (x.IsDispatcherDragDropSequenceModified),\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    public getDriversFormArray(drivers: DriverAdditionalDetailModel[]): FormArray {\r\n        var _dArray = this.fb.array([]);\r\n        drivers.forEach(x => {\r\n            _dArray.push(this.fb.group({\r\n                Id: this.fb.control(x.Id),\r\n                Shifts: this.fb.control(x.Shifts),\r\n                Name: this.fb.control(x.Name),\r\n                IsFilldCompatible: this.fb.control(x.IsFilldCompatible)\r\n            }));\r\n        });\r\n        return _dArray;\r\n    }\r\n\r\n    public getTrailersFormArray(Trailers: TrailerViewModel[]): FormArray {\r\n        var _tArray = this.fb.array([]);\r\n        Trailers.forEach(x => {\r\n            _tArray.push(this.fb.group({\r\n                Id: this.fb.control(x.Id || ''),\r\n                TrailerId: this.fb.control(x.TrailerId || ''),\r\n                StartTime: this.fb.control(x.StartTime || ''),\r\n                EndTime: this.fb.control(x.EndTime || ''),\r\n                Compartments: this.fb.control(x.Compartments || ''),\r\n                TrailerType: this.fb.control(x.TrailerType)\r\n            }));\r\n        });\r\n        return _tArray;\r\n    }\r\n\r\n    public getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, IsDispatcherDragDropSequence: boolean = false, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormArray {\r\n        delReqs = sortArrayTwice(delReqs, 'JobId', 'ProductSequence');\r\n        if (IsDispatcherDragDropSequence) {\r\n            delReqs = sortByKeyAsc(delReqs, 'DispatcherDragDropSequence');\r\n        }\r\n        let drs = [] as DeliveryRequestViewModel[];\r\n        delReqs.forEach(x => {\r\n            if (!x.IsBlendedRequest) {\r\n                drs.push(x);\r\n            }\r\n            else if (!drs.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                var blendDrs = delReqs.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n            }\r\n        });\r\n        var _drArray = this.fb.array([], Validators.required);\r\n        drs.forEach(x => {\r\n            var _form = this.getDeliveryRequestForm(x, isCommonPickup, isShiftTrailerChange, sourceTrip);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n    public getDispatcherDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormArray {\r\n\r\n        let drs = [] as DeliveryRequestViewModel[];\r\n        delReqs.forEach(x => {\r\n            if (!x.IsBlendedRequest) {\r\n                drs.push(x);\r\n            }\r\n            else if (!drs.some(g => g.BlendedGroupId == x.BlendedGroupId)) {\r\n                var blendDrs = delReqs.filter(b => b.BlendedGroupId == x.BlendedGroupId);\r\n                blendDrs.filter(b => !b.IsAdditive && b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => !b.IsAdditive && !b.IsBlendedDrParent).forEach(p => { drs.push(p); });\r\n                blendDrs.filter(b => b.IsAdditive).forEach(p => { drs.push(p); });\r\n            }\r\n        });\r\n        var _drArray = this.fb.array([], Validators.required);\r\n        drs.forEach(x => {\r\n            var _form = this.getDispatcherDeliveryRequestForm(x, isCommonPickup, isShiftTrailerChange, sourceTrip);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n    GetAllLoadsDR(trips: FormArray) {\r\n        var _deliveryRequests = [];\r\n        if (trips) {\r\n            for (var i = 0; i < trips.length; i++) {\r\n                var trip = trips.controls[i] as FormGroup;\r\n                var deliveryRequests = trip.controls[\"DeliveryRequests\"].value;\r\n                if (deliveryRequests) {\r\n                    for (var j = 0; j < deliveryRequests.length; j++) {\r\n                        var deliveryRequest = deliveryRequests[j];\r\n                        if (deliveryRequest) {\r\n                            _deliveryRequests.push(deliveryRequest);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return _deliveryRequests;\r\n    }\r\n\r\n    public getDeliveryRequestForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormGroup {\r\n        var isTerminalPickup = false;\r\n        var isBulkplantPickup = false;\r\n        //dragged from left panel\r\n        if (!sourceTrip) {\r\n            isTerminalPickup = !isCommonPickup && delReq.PickupLocationType != 2;\r\n            isBulkplantPickup = !isCommonPickup && delReq.PickupLocationType == 2;\r\n        }\r\n        else { //dragged from a load\r\n            var tripFromPickupLocationType, pickupLocation;\r\n            if (sourceTrip.controls['IsCommonPickup'].value == true) {\r\n                tripFromPickupLocationType = sourceTrip.controls['PickupLocationType'].value;\r\n                if (tripFromPickupLocationType == 2) {\r\n                    isBulkplantPickup = true;\r\n                    pickupLocation = sourceTrip.controls['BulkPlant'].value;\r\n                    delReq.BulkPlant = pickupLocation;\r\n                    delReq.PickupLocationType = 2;\r\n                }\r\n                else {\r\n                    isTerminalPickup = true;\r\n                    pickupLocation = sourceTrip.controls['Terminal'].value;\r\n                    delReq.Terminal = pickupLocation;\r\n                    delReq.PickupLocationType = 1;\r\n                }\r\n            }\r\n            else {\r\n                isBulkplantPickup = delReq.PickupLocationType == 2;\r\n                isTerminalPickup = delReq.PickupLocationType != 2;\r\n            }\r\n        }\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType == 1 || delReq.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            if (delReq.TankMaxFill > 0 && !delReq.IsMaxFillAllowed) {\r\n                quantityValidators.push(Validators.max(delReq.TankMaxFill));\r\n            }\r\n        }\r\n        let orderIdValidators = [];\r\n        if (!delReq.IsTBD) {\r\n            orderIdValidators.push(Validators.required);\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            JobId: this.fb.control(''),\r\n            JobAddress: this.fb.control(''),\r\n            JobCity: this.fb.control(''),\r\n            JobName: this.fb.control(''),\r\n            ProductType: this.fb.control(''),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(''),\r\n            RequiredQuantity: this.fb.control('', quantityValidators),\r\n            Priority: this.fb.control(''),\r\n            TankId: this.fb.control(''),\r\n            TankMaxFill: this.fb.control(0),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(delReq.IsReAssignToCarrier),\r\n            StorageId: this.fb.control(''),\r\n            AssignedToCompanyId: this.fb.control(null),\r\n            CreatedByCompanyId: this.fb.control(null),\r\n            SupplierCompanyId: this.fb.control(null),\r\n            Status: this.fb.control(0),\r\n            PreviousStatus: this.fb.control(0),\r\n            ScheduleStatus: this.fb.control(0),\r\n            SchedulePreviousStatus: this.fb.control(0),\r\n            OrderId: this.fb.control('', orderIdValidators),\r\n            CreatedByRegionId: this.fb.control(''),\r\n            AssignedToRegionId: this.fb.control(''),\r\n            PickupLocationType: this.fb.control(0),\r\n            Sap_OrderNo: this.fb.control(delReq.Sap_OrderNo),\r\n            UniqueOrderNo: this.fb.control(delReq.UniqueOrderNo),\r\n            Terminal: this.getTerminalForm(delReq.Terminal, isTerminalPickup),\r\n            BulkPlant: this.getBulkPlantForm(delReq.BulkPlant, isBulkplantPickup),\r\n            UoM: this.fb.control(''),\r\n            ParentId: this.fb.control(null),\r\n            DeliveryGroupId: this.fb.control(null),\r\n            DeliveryScheduleId: this.fb.control(null),\r\n            TrackableScheduleId: this.fb.control(null),\r\n            CustomerCompany: this.fb.control(''),\r\n            TrackScheduleEnrouteStatus: this.fb.control(null),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            TrackScheduleStatus: this.fb.control(null),\r\n            TrackScheduleStatusName: this.fb.control(null),\r\n            StatusClassId: this.fb.control(null),\r\n            IsNotCompatible: this.fb.control(false),\r\n            IsBlinkDR: this.fb.control(false),\r\n            IsAutoCreatedDR: this.fb.control(false),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control(''),\r\n            IsCommonBadge: this.fb.control(true),\r\n            SourceTripId: this.fb.control(null),\r\n            DispactherNote: this.fb.control(''),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(null),\r\n            CarrierStatus: this.fb.control(0),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            Compartments: isShiftTrailerChange == 0 ? this.getCompartments(delReq.Compartments) : this.fb.array([]),\r\n            IsFilldInvoke: this.fb.control(false),\r\n            TruckLoadType: this.fb.control(''),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsPreloadDisable: this.fb.control(delReq.IsPreloadDisable),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            GroupChildDRs: this.fb.control(delReq.GroupChildDRs),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsJobFilter: this.fb.control(true),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            TBDLocations: this.fb.control(delReq.TBDLocations),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            IsAdditive: this.fb.control(delReq.IsAdditive),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n        });\r\n        if (delReq != null && delReq != undefined) {\r\n            if (delReq.PreLoadedFor) {\r\n                _drForm.addControl('PreLoadedFor', this.fb.control(delReq.PreLoadedFor));\r\n            }\r\n            if (delReq.PostLoadedFor) {\r\n                _drForm.addControl('PostLoadedFor', this.fb.control(delReq.PostLoadedFor));\r\n            }\r\n            if (delReq.PreLoadInfo) {\r\n                _drForm.addControl('PreLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PreLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PreLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PreLoadInfo.TripIndex,\r\n                    DrId: delReq.PreLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.PostLoadInfo) {\r\n                _drForm.addControl('PostLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PostLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PostLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PostLoadInfo.TripIndex,\r\n                    DrId: delReq.PostLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.BulkPlant == null) {\r\n                delReq.BulkPlant = new DropAddressModel();\r\n            }\r\n            if (delReq.Terminal == null) {\r\n                delReq.Terminal = new DropdownItem();\r\n            }\r\n            _drForm.patchValue(delReq);\r\n        }\r\n        return _drForm;\r\n    }\r\n    public getDispatcherDeliveryRequestForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, isShiftTrailerChange: number = 0, sourceTrip: any = null): FormGroup {\r\n        var isTerminalPickup = false;\r\n        var isBulkplantPickup = false;\r\n        //dragged from left panel\r\n        if (!sourceTrip) {\r\n            isTerminalPickup = !isCommonPickup && delReq.PickupLocationType != 2;\r\n            isBulkplantPickup = !isCommonPickup && delReq.PickupLocationType == 2;\r\n        }\r\n        else { //dragged from a load\r\n            var tripFromPickupLocationType, pickupLocation;\r\n            if (sourceTrip.controls['IsCommonPickup'].value == true) {\r\n                tripFromPickupLocationType = sourceTrip.controls['PickupLocationType'].value;\r\n                if (tripFromPickupLocationType == 2) {\r\n                    isBulkplantPickup = true;\r\n                    pickupLocation = sourceTrip.controls['BulkPlant'].value;\r\n                    delReq.BulkPlant = pickupLocation;\r\n                    delReq.PickupLocationType = 2;\r\n                }\r\n                else {\r\n                    isTerminalPickup = true;\r\n                    pickupLocation = sourceTrip.controls['Terminal'].value;\r\n                    delReq.Terminal = pickupLocation;\r\n                    delReq.PickupLocationType = 1;\r\n                }\r\n            }\r\n            else {\r\n                isBulkplantPickup = delReq.PickupLocationType == 2;\r\n                isTerminalPickup = delReq.PickupLocationType != 2;\r\n            }\r\n        }\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType == 1 || delReq.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            if (delReq.TankMaxFill > 0 && !delReq.IsMaxFillAllowed) {\r\n                quantityValidators.push(Validators.max(delReq.TankMaxFill));\r\n            }\r\n        }\r\n        let orderIdValidators = [];\r\n        if (!delReq.IsTBD) {\r\n            orderIdValidators.push(Validators.required);\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            JobId: this.fb.control(delReq.JobId),\r\n            JobAddress: this.fb.control(delReq.JobAddress),\r\n            JobCity: this.fb.control(delReq.JobCity),\r\n            JobName: this.fb.control(delReq.JobName),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(delReq.SiteId),\r\n            RequiredQuantity: this.fb.control('', quantityValidators),\r\n            Priority: this.fb.control(delReq.Priority),\r\n            TankId: this.fb.control(delReq.TankId),\r\n            TankMaxFill: this.fb.control(delReq.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(delReq.IsReAssignToCarrier),\r\n            StorageId: this.fb.control(delReq.StorageId),\r\n            AssignedToCompanyId: this.fb.control(delReq.AssignedToCompanyId),\r\n            CreatedByCompanyId: this.fb.control(delReq.CreatedByCompanyId),\r\n            SupplierCompanyId: this.fb.control(delReq.SupplierCompanyId),\r\n            Status: this.fb.control(delReq.Status),\r\n            PreviousStatus: this.fb.control(delReq.PreviousStatus),\r\n            ScheduleStatus: this.fb.control(delReq.ScheduleStatus),\r\n            SchedulePreviousStatus: this.fb.control(delReq.SchedulePreviousStatus),\r\n            OrderId: this.fb.control(delReq.OrderId, orderIdValidators),\r\n            CreatedByRegionId: this.fb.control(delReq.CreatedByRegionId),\r\n            AssignedToRegionId: this.fb.control(delReq.AssignedToRegionId),\r\n            PickupLocationType: this.fb.control(delReq.PickupLocationType),\r\n            Terminal: this.getTerminalForm(delReq.Terminal, isTerminalPickup),\r\n            BulkPlant: this.getBulkPlantForm(delReq.BulkPlant, isBulkplantPickup),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            ParentId: this.fb.control(delReq.ParentId),\r\n            DeliveryGroupId: this.fb.control(delReq.DeliveryGroupId),\r\n            DeliveryScheduleId: this.fb.control(delReq.DeliveryScheduleId),\r\n            TrackableScheduleId: this.fb.control(delReq.TrackableScheduleId),\r\n            CustomerCompany: this.fb.control(delReq.CustomerCompany),\r\n            TrackScheduleEnrouteStatus: this.fb.control(delReq.TrackScheduleEnrouteStatus),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            TrackScheduleStatus: this.fb.control(delReq.TrackScheduleStatus),\r\n            TrackScheduleStatusName: this.fb.control(delReq.TrackScheduleStatusName),\r\n            StatusClassId: this.fb.control(delReq.StatusClassId),\r\n            IsNotCompatible: this.fb.control(delReq.IsNotCompatible),\r\n            IsBlinkDR: this.fb.control(false),\r\n            IsAutoCreatedDR: this.fb.control(delReq.IsAutoCreatedDR),\r\n            BadgeNo1: this.fb.control(delReq.BadgeNo1),\r\n            BadgeNo2: this.fb.control(delReq.BadgeNo2),\r\n            BadgeNo3: this.fb.control(delReq.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(delReq.IsCommonBadge),\r\n            SourceTripId: this.fb.control(delReq.SourceTripId),\r\n            DispactherNote: this.fb.control(delReq.DispactherNote),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(null),\r\n            CarrierStatus: this.fb.control(delReq.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            Compartments: isShiftTrailerChange == 0 ? this.getCompartments(delReq.Compartments) : this.fb.array([]),\r\n            IsFilldInvoke: this.fb.control(false),\r\n            TruckLoadType: this.fb.control(''),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsPreloadDisable: this.fb.control(delReq.IsPreloadDisable),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            GroupChildDRs: this.fb.control(delReq.GroupChildDRs),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsJobFilter: this.fb.control(true),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            TBDLocations: this.fb.control(delReq.TBDLocations),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            IsAdditive: this.fb.control(delReq.IsAdditive),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n        });\r\n        if (delReq != null && delReq != undefined) {\r\n            if (delReq.PreLoadedFor) {\r\n                _drForm.addControl('PreLoadedFor', this.fb.control(delReq.PreLoadedFor));\r\n            }\r\n            if (delReq.PostLoadedFor) {\r\n                _drForm.addControl('PostLoadedFor', this.fb.control(delReq.PostLoadedFor));\r\n            }\r\n            if (delReq.PreLoadInfo) {\r\n                _drForm.addControl('PreLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PreLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PreLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PreLoadInfo.TripIndex,\r\n                    DrId: delReq.PreLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.PostLoadInfo) {\r\n                _drForm.addControl('PostLoadInfo', this.fb.group({\r\n                    ShiftId: delReq.PostLoadInfo.ShiftId,\r\n                    ScheduleIndex: delReq.PostLoadInfo.ScheduleIndex,\r\n                    TripIndex: delReq.PostLoadInfo.TripIndex,\r\n                    DrId: delReq.PostLoadInfo.DrId\r\n                }));\r\n            }\r\n            if (delReq.BulkPlant == null) {\r\n                delReq.BulkPlant = new DropAddressModel();\r\n            }\r\n            if (delReq.Terminal == null) {\r\n                delReq.Terminal = new DropdownItem();\r\n            }\r\n            _drForm.patchValue(delReq);\r\n        }\r\n        return _drForm;\r\n    }\r\n    getDeliveryRequestFormNew(delReq: DeliveryRequestViewModel): FormGroup {\r\n        let _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            JobId: this.fb.control(delReq.JobId),\r\n            JobAddress: this.fb.control(delReq.JobAddress),\r\n            JobCity: this.fb.control(delReq.JobCity),\r\n            JobName: this.fb.control(delReq.JobName),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            SiteId: this.fb.control(delReq.SiteId),\r\n            RequiredQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            Priority: this.fb.control(delReq.Priority),\r\n            AssignedToCompanyId: this.fb.control(delReq.AssignedToCompanyId),\r\n            CreatedByCompanyId: this.fb.control(delReq.CreatedByCompanyId),\r\n            SupplierCompanyId: this.fb.control(delReq.SupplierCompanyId),\r\n            Status: this.fb.control(delReq.Status),\r\n            CreatedByRegionId: this.fb.control(delReq.CreatedByRegionId),\r\n            AssignedToRegionId: this.fb.control(delReq.AssignedToRegionId),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            OrderId: this.fb.control(delReq.OrderId),\r\n            ParentId: this.fb.control(delReq.ParentId),\r\n            CustomerCompany: this.fb.control(delReq.CustomerCompany),\r\n            TankId: this.fb.control(delReq.TankId),\r\n            StorageId: this.fb.control(delReq.StorageId),\r\n            TankMaxFill: this.fb.control(delReq.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(delReq.IsMaxFillAllowed),\r\n            IsAutoCreatedDR: this.fb.control(delReq.IsAutoCreatedDR),\r\n            BadgeNo1: this.fb.control(delReq.BadgeNo1),\r\n            BadgeNo2: this.fb.control(delReq.BadgeNo2),\r\n            BadgeNo3: this.fb.control(delReq.BadgeNo3),\r\n            IsCommonBadge: this.fb.control(delReq.IsCommonBadge),\r\n            Notes: this.fb.control(delReq.Notes),\r\n            DispactherNote: this.fb.control(delReq.DispactherNote),\r\n            isRecurringSchedule: this.fb.control(delReq.isRecurringSchedule),\r\n            RecurringScheduleId: this.fb.control(delReq.RecurringScheduleId),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            RecurringScheduleInfo: this.fb.control(delReq.RecurringScheduleInfo),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            RouteInfo: this.fb.control(delReq.RouteInfo),\r\n            CarrierStatus: this.fb.control(delReq.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(delReq.DeliveryRequestFor),\r\n            DeliveryWindow: this.fb.control(delReq.DeliveryWindow),\r\n            DelReqSource: this.fb.control(delReq.DelReqSource),\r\n            IsSpiltDRIconVisible: this.fb.control(delReq.IsSpiltDRIconVisible),\r\n            GroupParentDRId: this.fb.control(delReq.GroupParentDRId),\r\n            ProductSequence: this.fb.control(delReq.ProductSequence),\r\n            Terminal: this.getTerminalFormNew(delReq.Terminal),\r\n            Bulkplant: this.getBulkPlantNew(delReq.BulkPlant),\r\n            IsBrokered: this.fb.control(delReq.IsBrokered),\r\n            IsAcceptNightDeliveries: this.fb.control(delReq.IsAcceptNightDeliveries),\r\n            TrailerTypes: this.fb.control(delReq.TrailerTypes),\r\n            HoursToCoverDistance: this.fb.control(delReq.HoursToCoverDistance),\r\n            LoadQueueAttributes: this.fb.control(delReq.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(delReq.DRQueueAttributes),\r\n            CustomerBrandId: this.fb.control(delReq.CustomerBrandId),\r\n            IsSelectedForAssignment: this.fb.control(false),\r\n            IsTBD: this.fb.control(delReq.IsTBD),\r\n            TBDGroupId: this.fb.control(delReq.TBDGroupId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            FuelType: this.fb.control(delReq.FuelType),\r\n            OrderType: this.fb.control(delReq.OrderType),\r\n            DeliveryDateStartTime: this.fb.control(delReq.DeliveryDateStartTime),\r\n            Vessel: this.fb.control(delReq.Vessel),\r\n            Berth: this.fb.control(delReq.Berth),\r\n            IsMarine: this.fb.control(delReq.IsMarine),\r\n            //BLENDED DR\r\n            IsAdditive: this.fb.control(delReq.IsAdditive || false),\r\n            IsBlendedRequest: this.fb.control(delReq.IsBlendedRequest || false),\r\n            IsCommonPickupForBlend: this.fb.control(delReq.IsCommonPickupForBlend || false),\r\n            BlendedGroupId: this.fb.control(delReq.BlendedGroupId || null),\r\n            BlendParentProductTypeId: this.fb.control(delReq.BlendParentProductTypeId),\r\n            BlendDrScheduleStatus: this.fb.control(delReq.BlendDrScheduleStatus),\r\n            BlendedProductName: this.fb.control(delReq.BlendedProductName || null),\r\n            AdditiveProductName: this.fb.control(delReq.AdditiveProductName || null),\r\n            IsBlendedDrParent: this.fb.control(delReq.IsBlendedDrParent || false),\r\n            TotalBlendedQuantity: this.fb.control(delReq.TotalBlendedQuantity),\r\n            SelectedDate: this.fb.control(delReq.SelectedDate),\r\n            IsFutureDR: this.fb.control(delReq.IsFutureDR),\r\n            IsCalendarView: this.fb.control(delReq.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(delReq.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(delReq.DispatcherDragDropSequence),\r\n            DeliveryLevelPO: this.fb.control(delReq.DeliveryLevelPO),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime : this.fb.control(delReq.ScheduleEndTime),\r\n            IndicativePrice: this.fb.control(delReq.IndicativePrice),\r\n        });\r\n        return _drForm;\r\n    }\r\n\r\n    private getCompartments(compartments: CompartmentInfo[]): FormArray {\r\n        let _cArray = this.fb.array([]);\r\n        compartments.forEach(x => {\r\n            _cArray.push(this.getCompartmentsFormGroupForDR(x));\r\n        });\r\n        return _cArray;\r\n    }\r\n\r\n    public getCompTerminalForm(terminal: DropdownItem): FormGroup {\r\n        var _tform = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            Name: this.fb.control('')\r\n        });\r\n        if (terminal) {\r\n            _tform.patchValue(terminal);\r\n        }\r\n        return _tform;\r\n    }\r\n\r\n    public getTerminalForm(terminal: DropdownItem, isTerminalPickup: boolean, isDemandForm: boolean = false): FormGroup {\r\n        var _tform = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            // Name: this.fb.control('', (isTerminalPickup && !isDemandForm ? Validators.required : null))\r\n            Name: this.fb.control('')\r\n        });\r\n        // SelectedTerminal : this.fb.control('')\r\n        if (isTerminalPickup && terminal) {\r\n            _tform.patchValue(terminal);\r\n        }\r\n        return _tform;\r\n    }\r\n\r\n    public getDriverForm(driver: any): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(driver.Id),\r\n            Name: this.fb.control(driver.Name),\r\n            Shifts: this.fb.control(driver.Shifts),\r\n            IsFilldCompatible: this.fb.control(driver.IsFilldCompatible)\r\n        });\r\n    }\r\n\r\n    public getAssignedTrailerForm(x: TrailerViewModel): FormGroup {\r\n        return this.fb.group({\r\n            Id: this.fb.control(x.Id),\r\n            TrailerId: this.fb.control(x.TrailerId),\r\n            StartTime: this.fb.control(x.StartTime),\r\n            EndTime: this.fb.control(x.EndTime),\r\n            Compartments: this.fb.control(x.Compartments),\r\n            TrailerType: this.fb.control(x.TrailerType),\r\n            IsFilldCompatible: this.fb.control(x.IsFilldCompatible)\r\n        });\r\n    }\r\n\r\n    public getDriverTrailerForm() {\r\n        var _dtForm = this.fb.group({\r\n            Driver: this.fb.control(null, [Validators.required]),\r\n            Trailers: this.fb.control([]),\r\n            Index1: this.fb.control(0),\r\n            Index2: this.fb.control(0),\r\n            StartTime: this.fb.control(''),\r\n            EndTime: this.fb.control(''),\r\n            Compartments: this.fb.control(''),\r\n            TrailerType: this.fb.control(''),\r\n            IsFilldCompatible: this.fb.control(false),\r\n            IsIncludeAllRegionDriver: this.fb.control(false)\r\n        });\r\n        return _dtForm;\r\n    }\r\n\r\n    public getCompBulkPlantForm(bulkPlant: DropAddressModel) {\r\n        var _bform = this.fb.group({\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n        if (bulkPlant) {\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n\r\n    public getBulkPlantForm(bulkPlant: DropAddressModel, isLocationPickup: boolean, isDemandForm: boolean = false) {\r\n        var _bform = this.fb.group({\r\n\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n        if (isLocationPickup && bulkPlant) {\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n\r\n    public getTrailerTrip(startTime: Date, slotPeriod: number): TripModel {\r\n        if (slotPeriod <= 0) { slotPeriod = 3; }\r\n        let trip = new TripModel();\r\n        trip.StartDate = moment(startTime).format('MM/DD/YYYY');\r\n        trip.StartTime = moment(startTime).format('hh:mm A');\r\n        let endTime = moment(startTime).add(slotPeriod, 'hours').toDate();\r\n        trip.EndTime = moment(endTime).format('hh:mm A');\r\n        trip.IsEditable = true;\r\n        trip.IsPreloadDisable = false;\r\n        return trip;\r\n    }\r\n\r\n    public getLoadForm(): FormGroup {\r\n        return this.fb.group({\r\n            JobId: this.fb.control(null),\r\n            RegionId: this.fb.control(null),\r\n            OrderList: this.fb.control([]),\r\n            Demands: this.fb.array([])\r\n        });\r\n    }\r\n\r\n    public initCreateLoadFormArray(formArray: FormArray, demandModels: DemandModel[], regionId: string): void {\r\n        formArray.clear();\r\n        demandModels.forEach(x => {\r\n            formArray.push(this.getDemandForm(x, regionId));\r\n        });\r\n    }\r\n\r\n    private getDemandForm(demandModel: DemandModel, regionId: string): FormGroup {\r\n        let quantityValidators = [];\r\n        if (demandModel.ScheduleQuantityType == 1 || demandModel.ScheduleQuantityType == 0) {\r\n            quantityValidators = [Validators.required, Validators.min(0.00001), Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/)];\r\n            //if (demandModel.TankMaxFill > 0) {\r\n            //    quantityValidators.push(Validators.max(demandModel.TankMaxFill));\r\n            //}\r\n        }\r\n        return this.fb.group({\r\n            Id: this.fb.control(demandModel.Id),\r\n            SiteId: this.fb.control(demandModel.SiteId),\r\n            JobId: this.fb.control(demandModel.JobId),\r\n            JobName: this.fb.control(demandModel.JobName),\r\n            OrderId: this.fb.control(demandModel.OrderId),\r\n            TankId: this.fb.control(demandModel.TankId),\r\n            StorageId: this.fb.control(demandModel.StorageId),\r\n            RequiredQuantity: this.fb.control(demandModel.RequiredQuantity || '', quantityValidators),\r\n            Priority: this.fb.control(demandModel.Priority),\r\n            CreatedByRegionId: this.fb.control(regionId),\r\n            CustomerCompany: this.fb.control(demandModel.BuyerCompanyName),\r\n            //CurrentThreshold: this.fb.control(demandModel.cu),\r\n            TankMaxFill: this.fb.control(demandModel.TankMaxFill),\r\n            IsMaxFillAllowed: this.fb.control(demandModel.IsMaxFillAllowed),\r\n            //IsReAssignToCarrier: this.fb.control(demandModel.IsReAssignToCarrier),\r\n            TankMinFill: this.fb.control(demandModel.TankMinFill),\r\n            TankCapacity: this.fb.control(demandModel.TankCapacity),\r\n            TankName: this.fb.control(demandModel.TankName),\r\n            ProductName: this.fb.control(demandModel.ProductName),\r\n            ProductType: this.fb.control(demandModel.ProductType),\r\n            Level: this.fb.control(demandModel.Level),\r\n            NetVolume: this.fb.control(demandModel.NetVolume),\r\n            Ullage: this.fb.control(demandModel.Ullage),\r\n            UoM: this.fb.control(demandModel.UoM),\r\n            IsDRExists: this.fb.control(demandModel.IsDRExists),\r\n            IsDRMissed: this.fb.control(demandModel.IsDRMissed),\r\n            isRecurringSchedule: this.fb.control(demandModel.isRecurringSchedule),\r\n            ScheduleQuantityType: this.fb.control(demandModel.ScheduleQuantityType || 1),\r\n            ScheduleQuantityTypeText: this.fb.control(demandModel.ScheduleQuantityTypeText || 'Quantity'),\r\n            DeliveryReqId: this.fb.control(demandModel.DeliveryReqId),\r\n            CarrierStatus: this.fb.control(demandModel.CarrierStatus),\r\n            DeliveryRequestFor: this.fb.control(demandModel.DeliveryRequestFor),\r\n            IsEndSupplier: this.fb.control(demandModel.IsEndSupplier),\r\n            IsDispatchRetained: this.fb.control(demandModel.IsDispatchRetained),\r\n            Notes: this.fb.control(demandModel.Notes),\r\n            IsRetainFuelLoaded: this.fb.control(false),\r\n            GroupParentDRId: this.fb.control(demandModel.GroupParentDRId),\r\n            ProductSequence: this.fb.control(demandModel.ProductSequence),\r\n            BadgeNo1: this.fb.control(demandModel.BadgeNo1 ? demandModel.BadgeNo1 : null),\r\n            BadgeNo2: this.fb.control(demandModel.BadgeNo2 ? demandModel.BadgeNo2 : null),\r\n            BadgeNo3: this.fb.control(demandModel.BadgeNo3 ? demandModel.BadgeNo3 : null),\r\n            PickupLocationType: this.fb.control(demandModel.PickupLocationType),\r\n            Terminal: this.getTerminalForm(demandModel.Terminal, demandModel.PickupLocationType != 2, true),\r\n            BulkPlant: this.getBulkPlantForm(demandModel.BulkPlant, demandModel.PickupLocationType == 2, true),\r\n            IsAcceptNightDeliveries: this.fb.control(demandModel.IsAcceptNightDeliveries),\r\n            LoadQueueAttributes: this.fb.control(demandModel.LoadQueueAttributes),\r\n            DRQueueAttributes: this.fb.control(demandModel.DRQueueAttributes),\r\n            TrailerTypes: this.fb.control(demandModel.TrailerTypes),\r\n            HoursToCoverDistance: this.fb.control(demandModel.HoursToCoverDistance),\r\n            IsJobFilter: this.fb.control(true),\r\n            ScheduleStartTime: this.fb.control(demandModel.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(demandModel.ScheduleEndTime),\r\n        });\r\n    }\r\n\r\n    public getLoadInfoForm(data: LoadInfo): FormGroup {\r\n        return this.fb.group({\r\n            ShiftId: this.fb.control(data.ShiftId),\r\n            ScheduleIndex: this.fb.control(data.ScheduleIndex),\r\n            TripIndex: this.fb.control(data.TripIndex),\r\n            DrId: this.fb.control(data.DrId)\r\n        });\r\n    }\r\n\r\n    public getCompartmentViewForm(trips: TripModel[], firstTrailerId: string): FormGroup {\r\n        let tripsArray = this.fb.array([]);\r\n        for (var idx = 0; idx < trips.length; idx++) {\r\n            tripsArray.push(this.getCompartmentViewLoadFormGroup(trips[idx], firstTrailerId));\r\n        }\r\n        var _tForm = this.fb.group({\r\n            Trips: tripsArray\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    private getCompartmentViewLoadFormGroup(x: TripModel, firstTrailerId: string): FormGroup {\r\n        let commonPickupName = x.IsCommonPickup ? (x.PickupLocationType == 2 ? x.BulkPlant.SiteName : x.Terminal.Name) : null;\r\n        var _tForm = this.fb.group({\r\n            DeliveryRequests: this.getCompartmentViewDRArray(x.DeliveryRequests, x.IsCommonPickup, commonPickupName, firstTrailerId),\r\n            ShiftIndex: this.fb.control(x.ShiftIndex),\r\n            DriverRowIndex: this.fb.control(x.DriverRowIndex),\r\n            DriverColIndex: this.fb.control(x.DriverColIndex),\r\n            IsEditable: this.fb.control(x.IsEditable),\r\n            StartTime: this.fb.control(x.StartTime)\r\n        });\r\n        return _tForm;\r\n    }\r\n\r\n    private getCompartmentViewDRArray(delReqs: DeliveryRequestViewModel[], isCommonPickup: boolean, commonPickupName: string, firstTrailerId: string): FormArray {\r\n        var _drArray = this.fb.array([]);\r\n        delReqs.forEach(x => {\r\n            var _form = this.getCompartmentViewDRForm(x, isCommonPickup, commonPickupName, firstTrailerId);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    private getCompartmentViewDRForm(delReq: DeliveryRequestViewModel, isCommonPickup: boolean, commonPickupName: string, firstTrailerId: string): FormGroup {\r\n        let pickupName = isCommonPickup ? commonPickupName : (delReq.PickupLocationType == 2 ? delReq.BulkPlant.SiteName : delReq.Terminal.Name);\r\n        let disabledControl = false;\r\n        if (delReq.TrackScheduleEnrouteStatus == 16 || delReq.TrackScheduleStatus == 7 || delReq.TrackScheduleStatus == 8 || delReq.TrackScheduleStatus == 9 || delReq.TrackScheduleEnrouteStatus == 21 || delReq.TrackScheduleStatus == 25) {\r\n            disabledControl = true;\r\n        }\r\n        else if (delReq.PreLoadInfo != null) {\r\n            disabledControl = true;\r\n        }\r\n        var _drForm = this.fb.group({\r\n            Id: this.fb.control(delReq.Id),\r\n            UoM: this.fb.control(delReq.UoM),\r\n            ProductType: this.fb.control(delReq.ProductType),\r\n            PickupName: this.fb.control(pickupName),\r\n            RequiredQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            DrQuantity: this.fb.control(delReq.RequiredQuantity),\r\n            ScheduleQuantityType: this.fb.control(delReq.ScheduleQuantityType),\r\n            ScheduleQuantityTypeText: this.fb.control(delReq.ScheduleQuantityTypeText),\r\n            disabledControl: this.fb.control(disabledControl),\r\n            Compartments: this.getCompartmentsFormArray(delReq, delReq.Compartments, firstTrailerId, disabledControl),\r\n            PickupLocationType: this.fb.control(0),\r\n            Terminal: this.getCompTerminalForm(delReq.Terminal),\r\n            BulkPlant: this.getCompBulkPlantForm(delReq.BulkPlant),\r\n            IsRetainFuelLoaded: this.fb.control(delReq.IsRetainFuelLoaded),\r\n            OrderId: this.fb.control(delReq.OrderId),\r\n            ProductTypeId: this.fb.control(delReq.ProductTypeId),\r\n            FuelTypeId: this.fb.control(delReq.FuelTypeId),\r\n            ScheduleStartTime: this.fb.control(delReq.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(delReq.ScheduleEndTime),\r\n            FuelType: this.fb.control(delReq.FuelType)\r\n        });\r\n        return _drForm;\r\n    }\r\n\r\n    private getCompartmentsFormArray(delReq: DeliveryRequestViewModel, compartments: CompartmentModel[], firstTrailerId: string, disabledControl: boolean): FormArray {\r\n        var _drArray = this.fb.array([]);\r\n        if (compartments.length == 0 && !disabledControl) {\r\n            let comp = new CompartmentInfo();\r\n            comp.TrailerId = firstTrailerId;\r\n            compartments.push(comp);\r\n        }\r\n        compartments.forEach(x => {\r\n            _drArray.push(this.getCompartmentsFormGroup(delReq, x, disabledControl));\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    public getCompartmentsFormGroup(delReq: DeliveryRequestViewModel, comp: CompartmentModel, disabledControl: boolean): FormGroup {\r\n        let quantityValidators = [];\r\n        if (delReq.ScheduleQuantityType <= 1) {\r\n            quantityValidators = [Validators.required, Validators.pattern(/^([0-9]\\d*(\\.\\d+)?)$/), Validators.min(0.00000001), Validators.max(delReq.RequiredQuantity)];\r\n        }\r\n        if (disabledControl) {\r\n            return this.fb.group({\r\n                TrailerId: this.fb.control({ value: comp.TrailerId, disabled: disabledControl }),\r\n                CompartmentId: this.fb.control({ value: comp.CompartmentId, disabled: disabledControl }),\r\n                Quantity: this.fb.control(comp.Quantity)\r\n            });\r\n        }\r\n        else {\r\n            return this.fb.group({\r\n                TrailerId: this.fb.control(comp.TrailerId, [Validators.required]),\r\n                CompartmentId: this.fb.control(comp.CompartmentId, [Validators.required]),\r\n                Quantity: this.fb.control(comp.Quantity, quantityValidators)\r\n            });\r\n        }\r\n    }\r\n\r\n    public getCompartmentsFormGroupForDR(comp: CompartmentModel): FormGroup {\r\n        return this.fb.group({\r\n            TrailerId: this.fb.control(comp.TrailerId),\r\n            CompartmentId: this.fb.control(comp.CompartmentId),\r\n            Quantity: this.fb.control(comp.Quantity)\r\n        });\r\n    }\r\n\r\n    getBlendRequestFormArray(models?: BlendedRequest[]): FormArray {\r\n\r\n        var _blendedDrArray = this.fb.array([]);\r\n\r\n        if (models && models.length > 0) {\r\n            models.forEach(model => {\r\n                _blendedDrArray.push(this.getBlendRequestFormGroup(model));\r\n            });\r\n        }\r\n\r\n        return _blendedDrArray;\r\n    }\r\n\r\n    getBlendRequestFormGroup(model: BlendedRequest): FormGroup {\r\n\r\n        return this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            OrderId: this.fb.control(model.OrderId, [Validators.required]),\r\n            PoNumber: this.fb.control(model.PoNumber),\r\n            ProductType: this.fb.control(model.ProductType),\r\n            ProductTypeId: this.fb.control(model.ProductTypeId),\r\n            RequiredQuantity: this.fb.control(model.RequiredQuantity, [Validators.required, Validators.min(NumberConstants.MinQuantity)]),\r\n            QuantityInPercent: this.fb.control(model.QuantityInPercent, model.IsAdditive ? [] : [Validators.required, Validators.min(NumberConstants.MinPercent), Validators.max(NumberConstants.MaxPercent)]),\r\n            PickupLocationType: this.fb.control(model.PickupLocationType),\r\n            Terminal: this.getTerminalFormNew(model.Terminal),\r\n            BulkPlant: this.getBulkPlantNew(model.BulkPlant),\r\n            IsAdditive: this.fb.control(model.IsAdditive),\r\n            UoM: this.fb.control(model.UoM),\r\n            JobId: this.fb.control(model.JobId),\r\n            CarrierStatus: this.fb.control(model.CarrierStatus),\r\n            IsBlendedRequest: this.fb.control(model.IsBlendedRequest),\r\n            IsCommonPickupForBlend: this.fb.control(model.IsCommonPickupForBlend),\r\n            BlendedGroupId: this.fb.control(model.BlendedGroupId),\r\n            BlendParentProductTypeId: this.fb.control(model.BlendParentProductTypeId),\r\n            BlendedProductName: this.fb.control(model.BlendedProductName),\r\n            AdditiveProductName: this.fb.control(model.AdditiveProductName),\r\n            IsBlendedDrParent: this.fb.control(model.IsBlendedDrParent),\r\n            TotalBlendedQuantity: this.fb.control(model.TotalBlendedQuantity),\r\n            SchedulePreviousStatus: this.fb.control(model.SchedulePreviousStatus),\r\n            ScheduleStatus: this.fb.control(model.ScheduleStatus),\r\n            TrackScheduleStatus: this.fb.control(model.TrackScheduleStatus),\r\n            TrackableScheduleId: this.fb.control(model.TrackableScheduleId),\r\n            SelectedDate: this.fb.control(model.SelectedDate),\r\n            IsFutureDR: this.fb.control(model.IsFutureDR),\r\n            IsCalendarView: this.fb.control(model.IsCalendarView),\r\n            IsDispatcherDragDrop: this.fb.control(model.IsDispatcherDragDrop),\r\n            DispatcherDragDropSequence: this.fb.control(model.DispatcherDragDropSequence),\r\n            ScheduleStartTime: this.fb.control(model.ScheduleStartTime),\r\n            ScheduleEndTime: this.fb.control(model.ScheduleEndTime),\r\n            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO)\r\n        });\r\n    }\r\n\r\n    public getTerminalFormNew(terminal: DropdownItem): FormGroup {\r\n        let _tform = this.fb.group({ Id: this.fb.control(''), Name: this.fb.control('') });\r\n        if (terminal) { _tform.patchValue(terminal); }\r\n        return _tform;\r\n    }\r\n\r\n    public getBulkPlantNew(bulkPlant: DropAddressModel) {\r\n\r\n        let _bform = this.fb.group({\r\n            Address: this.fb.control(''),\r\n            City: this.fb.control(''),\r\n            State: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            Country: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            CountryGroup: this.fb.group({ Id: this.fb.control(''), Code: this.fb.control('') }),\r\n            ZipCode: this.fb.control(''),\r\n            CountyName: this.fb.control(''),\r\n            Latitude: this.fb.control(''),\r\n            Longitude: this.fb.control(''),\r\n            SiteName: this.fb.control(''),\r\n            SiteId: this.fb.control('')\r\n        });\r\n\r\n        if (bulkPlant) {\r\n            if (!bulkPlant.CountryGroup) {\r\n                bulkPlant.CountryGroup = new DropdownItem();\r\n            }\r\n            _bform.patchValue(bulkPlant);\r\n        }\r\n        return _bform;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WallyUtilService {\r\n\r\n    constructor(private readonly fb: FormBuilder) { }\r\n\r\n    getSalesTabFilterForm() {\r\n        return this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            RateOfConsumption: this.fb.control(false),\r\n            SalesViewType: this.fb.control(1),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedRegions: this.fb.control([]),\r\n            SelectedCustomerList: this.fb.control([]),\r\n            SelectedlocationList: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            SelectedLocAttributeList: this.fb.control([]),\r\n            //to triger apply filter \r\n            IsApplyFilter: this.fb.control(false),\r\n            IsApplyFilterOnPageLoad: this.fb.control(false),\r\n        })\r\n    }\r\n\r\n    getIdsByList(array: any[]) {\r\n        let responseString = '';\r\n        if (array && array.length > 0) {\r\n            let ids = [];\r\n            array.forEach(res => { ids.push(res.Id) });\r\n            if (ids && ids.length > 0) {\r\n                responseString = ids.join();\r\n            }\r\n        }\r\n        return responseString;\r\n    }\r\n    getCompanyIdsByList(array: any[]) {\r\n        let responseString = '';\r\n        if (array && array.length > 0) {\r\n            let ids = [];\r\n            array.forEach(res => { ids.push(res.CompanyId) });\r\n            if (ids && ids.length > 0) {\r\n                responseString = ids.join();\r\n            }\r\n        }\r\n        return responseString;\r\n    }\r\n}\r\n\r\nexport class LocationTankDetailsModel {\r\n    JobId?: number;\r\n    SiteId?: string;\r\n    SiteIdDetails?: string;\r\n    Tanks?: TankDetailModel[];\r\n    LocationName?: string;\r\n    Status: string;\r\n    DaysRemaining: number;\r\n    CustomerInfo?: string;\r\n}\r\n\r\nexport class TankDetailModel {\r\n    TankId?: string;\r\n    StorageId?: string;\r\n    Name?: string;\r\n    IsUnknowDeliveryOrMissDelivery?: boolean;\r\n    TankInventoryDiffinHrs?: number;\r\n    DaysRemaining: number\r\n    Status: string\r\n}\r\n","\r\ndeclare function msgsuccess(msgText, msgHeader, msgDuration): any;\r\ndeclare function msgerror(msgText, msgHeader, msgDuration, msgPosition?): any;\r\ndeclare function msgwarning(msgText, msgHeader, msgDuration): any;\r\ndeclare function msginfo(msgText, msgHeader, msgDuration): any;\r\n\r\ndeclare function closeDG(): any;\r\ndeclare function showDG(): any;\r\ndeclare function showOpenDG(): any;\r\n\r\ndeclare function hideModal(selector): any;\r\ndeclare function showModal(selector): any;\r\ndeclare function showSliderPanel(): any;\r\ndeclare function hideSliderLoader(): any;\r\ndeclare function appendHTMLSliderContent(htmlContent): any;\r\ndeclare function slidePanel(PanelId, PanelWidth): any;\r\ndeclare function closeSlidePanel(): any;\r\n\r\nexport class Declarations {\r\n    public static msgsuccess = msgsuccess;\r\n    public static msgerror = msgerror;\r\n    public static msgwarning = msgwarning;\r\n    public static msginfo = msginfo;\r\n    public static closeDG = closeDG;\r\n    public static showDG = showDG;\r\n    public static showOpenDG = showOpenDG;\r\n\r\n    public static hideModal = hideModal;\r\n    public static showModal = showModal;\r\n    public static showSliderPanel = showSliderPanel;\r\n    public static hideSliderLoader = hideSliderLoader;\r\n    public static appendHTMLSliderContent = appendHTMLSliderContent;\r\n    public static slidePanel = slidePanel;\r\n    public static closeSlidePanel = closeSlidePanel;\r\n    public static ShiftVisibleRows: number = 10;\r\n}\r\n","import { Directive, Input, Output, EventEmitter, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n\n    @Output() clickOutside = new EventEmitter<void>();\n\n    constructor(private elementRef: ElementRef) { }\n\n    @HostListener('document:click', ['$event.target'])\n    public onClick(target) {\n        const clickedInside = this.elementRef.nativeElement.contains(target);\n        if (!clickedInside) {\n            this.clickOutside.emit();\n        }\n    }\n\n}\n","import {\r\n    Directive,\r\n    HostListener,\r\n    HostBinding,\r\n    ElementRef,\r\n    Renderer2,\r\n    OnInit\r\n  } from \"@angular/core\";\r\nimport { Declarations } from \"../declarations.module\";\r\n  \r\n  @Directive({\r\n    selector: \"[appCopy]\"\r\n  })\r\n  export class CopyDirective implements OnInit {\r\n    constructor(private _el: ElementRef, private _renderer: Renderer2) {}\r\n  \r\n    ngOnInit() {\r\n      let copy_icon = this._renderer.createElement(\"i\");\r\n      this._renderer.addClass(copy_icon, \"fa\");\r\n      this._renderer.addClass(copy_icon, \"fa-copy\");\r\n      this._renderer.addClass(copy_icon, \"angular-copy-icon\");\r\n      this._renderer.setStyle(copy_icon, \"margin-left\", \"5px\");\r\n      let simple = this._renderer.listen(copy_icon, \"click\", evt => {\r\n        this.copy(this._el.nativeElement);\r\n      });\r\n  \r\n      this._renderer.appendChild(this._el.nativeElement.parentNode, copy_icon);\r\n    }\r\n  \r\n    copy(event) {\r\n      let input = event;\r\n      input.select();\r\n      document.execCommand(\"copy\");\r\n      input.setSelectionRange(-1, -1);\r\n      Declarations.msgsuccess(\"Text Copied.\", undefined, undefined);\r\n    }\r\n  }\r\n  ","import { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[disableControl]'\r\n})\r\nexport class DisableControlDirective {\r\n\r\n  @Input() set disableControl(condition: boolean) {\r\n\r\n    if (this.ngControl.control) {\r\n      const action = condition ? 'disable' : 'enable';\r\n      this.ngControl.control[action]();\r\n    }\r\n\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) { }\r\n\r\n}","import { Input, Output, EventEmitter, ElementRef, Directive, Renderer2, SimpleChanges } from \"@angular/core\";\r\nimport * as moment from \"moment\";\r\nimport { WeekDays } from \"src/app/app.enum\";\r\n\r\ndeclare var jQuery: any;\r\n@Directive({\r\n    selector: \"[myDatePicker]\"\r\n})\r\nexport class DatePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"MM/DD/YYYY\";\r\n    @Input() public minDate: Date;\r\n    @Input() public maxDate: Date = new Date();\r\n    @Output() public onDateChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n        var currentObject = this;\r\n        if (this.minDate == undefined || this.minDate == null || this.minDate.toString() == \"\") {\r\n            var todayDate = new Date().getDate();\r\n            this.minDate = new Date(new Date().setDate(todayDate - 365 * 10));\r\n        }\r\n\r\n        \r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n            minDate: currentObject.minDate.setHours(0, 0, 0),\r\n            maxDate: currentObject.maxDate.setHours(23, 59, 59),\r\n            useCurrent: false\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                currentObject.onDateChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.show\", function (e) {\r\n         \r\n            let dateTimePicker = jQuery(currentObject.el.nativeElement).data(\"DateTimePicker\");\r\n            try {\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n            } catch (e) {\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n            }\r\n            dateTimePicker.date(null);\r\n            currentObject.onDateChange.emit('');\r\n        });\r\n    }\r\n\r\n\r\n    //ngOnChanges(change: SimpleChanges): void {\r\n    //    if (change.minDate && change.minDate.currentValue) {\r\n    //        this.minDate.setHours(0, 0, 0);\r\n    //        let cal = jQuery(this.el.nativeElement).data(\"DateTimePicker\");\r\n    //        if (cal) { cal.minDate(this.minDate); }\r\n    //    }\r\n    //    if (change.maxDate && change.maxDate.currentValue) {\r\n    //        this.maxDate.setHours(23, 59, 59);\r\n    //        let cal = jQuery(this.el.nativeElement).data(\"DateTimePicker\");\r\n    //        if (cal) { cal.maxDate(this.maxDate); }\r\n    //    }\r\n    //}\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: \"[CustomDatePicker]\"\r\n})\r\nexport class CustomDatePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"MM/DD/YYYY\";\r\n    @Input() public minDate: Date;\r\n    @Input() public maxDate: Date = new Date();\r\n    @Input() public mode: string = \"\";\r\n    @Input() public daysOfWeekEnable: string = \"\";\r\n    @Input() public dateOfMonthEnable: string = \"\";\r\n    @Input() public dateOfYearEnable: string = \"\";\r\n    @Output() public onDateChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n\r\n        var currentObject = this;\r\n        if (this.minDate == undefined || this.minDate == null || this.minDate.toString() == \"\") {\r\n            var todayDate = new Date().getDate();\r\n            this.minDate = new Date(new Date().setDate(todayDate - 365 * 10));\r\n        }\r\n        let daysOfWeekDisabled = [];\r\n        let enabledDates = [];\r\n        if (this.mode != null && this.mode != \"\") {\r\n\r\n            if (this.mode.toUpperCase() == \"WEEKLY\") {\r\n                const source = [0, 1, 2, 3, 4, 5, 6];\r\n                let input = [];\r\n                currentObject.daysOfWeekEnable.split(',').forEach(res => { input.push(WeekDays[res]) });\r\n                const filterArray = (source, input) => {\r\n                    const filtered = source.filter(el => {\r\n                        return input.indexOf(el) === -1;\r\n                    });\r\n                    return filtered;\r\n                };\r\n                daysOfWeekDisabled = filterArray(source, input);\r\n            }\r\n            else if (this.mode.toUpperCase() == \"MONTHLY\") {\r\n\r\n                let start = moment().startOf('month').subtract(new Date().getFullYear() - this.minDate.getFullYear(), 'years');\r\n                let end = moment().startOf('month').add(this.maxDate.getFullYear() - new Date().getFullYear(), 'years');\r\n                while (start.isBefore(end)) {\r\n                    enabledDates.push(start.clone());\r\n                    start.add(1, 'month');\r\n                }\r\n            }\r\n\r\n            else if (this.mode.toUpperCase() == \"ANNUALY\") {\r\n                let start = moment().startOf('year').subtract(new Date().getFullYear() - this.minDate.getFullYear(), 'years');\r\n                let end = moment().startOf('year').add(this.maxDate.getFullYear() - new Date().getFullYear(), 'years');\r\n                while (start.isBefore(end)) {\r\n                    enabledDates.push(start.clone());\r\n                    start.add(1, 'year');\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n            minDate: currentObject.minDate.setHours(0, 0, 0),\r\n            maxDate: currentObject.maxDate.setHours(23, 59, 59),\r\n            daysOfWeekDisabled: daysOfWeekDisabled,\r\n            keepInvalid: true,\r\n            enabledDates: enabledDates\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                //console.log(\"current value: \" + currentObject.value);\r\n                currentObject.onDateChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.show\", function (e) {\r\n\r\n            let dateTimePicker = jQuery(currentObject.el.nativeElement).data(\"DateTimePicker\");\r\n            try {\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n\r\n            } catch (e) {\r\n                if (currentObject.minDate) { dateTimePicker.minDate(currentObject.minDate); }\r\n                if (currentObject.maxDate) { dateTimePicker.maxDate(currentObject.maxDate); }\r\n            }\r\n            dateTimePicker.date(null);\r\n            currentObject.onDateChange.emit('');\r\n        });\r\n    }\r\n   \r\n}\r\n\r\n@Directive({\r\n    selector: \"[myTimePicker]\"\r\n})\r\nexport class TimePicker {\r\n    @Input() public value: string = \"\";\r\n    @Input() public format: string = \"hh:mm:ss A\";\r\n    @Output() public onTimeChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(public el: ElementRef, public renderer: Renderer2) { }\r\n    ngOnInit() {\r\n        var currentObject = this;\r\n        // jQuery(this.el.nativeElement).keydown(function (e) {\r\n        //     return false;\r\n        // })\r\n        jQuery(this.el.nativeElement).datetimepicker({\r\n            format: currentObject.format,\r\n        });\r\n        jQuery(this.el.nativeElement).on(\"dp.change\", function (e) {\r\n            if (e.date != false) {\r\n                currentObject.value = e.date.format(currentObject.format);\r\n                currentObject.onTimeChange.emit(e.date.format(currentObject.format));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Input, Output, EventEmitter, ElementRef, Directive, HostListener } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: \"[numberWithDecimal]\"\r\n})\r\nexport class NumberWithDecimal {\r\n\r\n    private regex: RegExp = new RegExp(/^[0-9]+(\\.[0-9]*){0,1}$/g);\r\n    private specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', 'Delete', 'ArrowRight', 'ArrowLeft', 'Control', 'KeyC', 'KeyV', 'KeyZ', 'KeyX','Enter'];\r\n\r\n    constructor(public el: ElementRef, public formControl: NgControl) { }\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        //Allow copy event\r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 67)) {\r\n            return;\r\n        }\r\n        //Allow Cut event {\r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 88)) {\r\n            return;\r\n        }\r\n        //Allow paste event \r\n        if ((event.ctrlKey || event.metaKey) && (event.keyCode == 86)) {\r\n            return;\r\n        }\r\n        if (next && !String(next).match(this.regex)) {\r\n            this.formControl.control.setErrors({ invalidinput: true });\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: '[numbersAlphaOnly]'\r\n})\r\nexport class OnlynumberAlphaDirective {\r\n    private regex: RegExp = new RegExp(/^[a-zA-Z0-9]*$/);\r\n    private specialKeys: Array<string> = ['Backspace', 'End', 'Home', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\r\n    private specialCopyKeys: Array<string> = ['KeyC', 'KeyV','Tab'];\r\n    constructor(public el: ElementRef, public formControl: NgControl) { }\r\n    @HostListener('keydown', ['$event'])\r\n    onKeyDown(event: KeyboardEvent) {\r\n        let current: string = this.el.nativeElement.value;\r\n        let next: string = current.concat(event.key);\r\n        if (this.specialKeys.indexOf(event.key) !== -1) {\r\n            return;\r\n        }\r\n        if (next && !String(next).match(this.regex)) {\r\n            if (this.specialCopyKeys.indexOf(event.key) !== -1) {\r\n                this.el.nativeElement.value = '';\r\n                this.formControl.control.setValue('');\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n}","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\r\nimport { NgControl } from '@angular/forms';\r\n@Directive({\r\n    selector: '[numbersOnly]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n    constructor(private _el: ElementRef) { }\r\n\r\n    @HostListener('input', ['$event']) onInputChange(event) {\r\n        const initalValue = this._el.nativeElement.value;\r\n\r\n        this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n        if (initalValue !== this._el.nativeElement.value) {\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[requiredIfNotEmpty]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: RequiredIfNotEmptyValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class RequiredIfNotEmptyValidator {\r\n\r\n    @Input('requiredIfNotEmpty') public requiredIfNotEmpty: AbstractControl = null;\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        let secondControl = this.requiredIfNotEmpty;\r\n        let baseControl = control;\r\n        //both controls has values or both controls are empty\r\n        if ((secondControl.value && baseControl.value) || (!secondControl.value && !baseControl.value)) {\r\n            //if already required validation ==> remove required validation\r\n            if (baseControl.errors && baseControl.errors.required) {\r\n                baseControl.setErrors({ required: null });\r\n                baseControl.updateValueAndValidity();\r\n            }\r\n            //if already required validation ==> remove required validation\r\n            if (secondControl.errors && secondControl.errors.required) {\r\n                secondControl.setErrors({ required: null });\r\n                secondControl.updateValueAndValidity();\r\n            }\r\n        }\r\n        //value && empty\r\n        else if (secondControl.value && !baseControl.value) {\r\n            //if already required validation ==> no need to set required validation\r\n            if (baseControl.errors && baseControl.errors.required) { return; }\r\n            else {\r\n                //set required validation\r\n                baseControl.setErrors({ required: true });\r\n                return { required: true };\r\n            }\r\n        }\r\n        //empty && value\r\n        else if (!secondControl.value && baseControl.value) {\r\n            //if already required ==> no need to set required\r\n            if (secondControl.errors && secondControl.errors.required) { return; }\r\n            else {\r\n                //set validation\r\n                secondControl.setErrors({ required: true });\r\n            }\r\n        }\r\n    }\r\n}","import { Directive, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, Validators } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[requiredIfTrue]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: RequiredIfTrueValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class RequiredIfTrueValidator implements OnChanges {\r\n\r\n    pastControl: AbstractControl;\r\n\r\n    @Input('requiredIfTrue') public requiredIfTrue: boolean;\r\n\r\n    constructor(private cdr: ChangeDetectorRef) { }\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n\r\n        this.pastControl = control;\r\n        if (this.requiredIfTrue && (control.value == '' || control.value == undefined || control.value == null)) {\r\n            return { required: true };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //not first change of requiredIfTrue\r\n        if (!change.requiredIfTrue.firstChange) {\r\n            if (change.requiredIfTrue && !change.requiredIfTrue.currentValue) {\r\n                this.pastControl.setErrors(null);\r\n                this.pastControl.updateValueAndValidity();\r\n                this.cdr.detectChanges();\r\n            }\r\n        }\r\n        //chnage in requiredIfTrue\r\n        if (change.requiredIfTrue && change.requiredIfTrue.currentValue) {\r\n            if (this.pastControl != undefined || this.pastControl != null) {\r\n                this.pastControl.updateValueAndValidity();\r\n                this.cdr.detectChanges();\r\n            }          \r\n        }\r\n    }\r\n}","import { Injectable, Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: 'sortingPipe' })\r\n\r\nexport class SortingPipe implements PipeTransform {\r\n\r\n    transform(array: any[], filterArgs: any) {\r\n\r\n        if (filterArgs) {\r\n\r\n            return array.sort((t1, t2) => {\r\n\r\n                const a = t1[filterArgs.key];\r\n                const b = t2[filterArgs.key];\r\n\r\n                if (a === b)\r\n                    return 0;\r\n                // nulls sort after anything else\r\n                else if (a === null)\r\n                    return 1;\r\n                else if (b === null)\r\n                    return -1;\r\n                // otherwise, if we're ascending, lowest sorts first\r\n                else if (filterArgs.asc)\r\n                    return a < b ? -1 : 1;\r\n                // if descending, highest sorts first\r\n                else\r\n                    return a < b ? 1 : -1;\r\n            });\r\n        }\r\n        else\r\n            return array;\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class DatatableCustomSortingService {\r\n\r\n    configColumnDefsNullToBottom(){\r\n        jQuery.extend(jQuery.fn.dataTable.ext.oSort, {\r\n\r\n            // \"null-at-bottom-pre\": function (_a) {\r\n            //     _a = _a.replace(/\\,/g,'');\r\n            //     let _value = (_a == '' || _a == null || _a == '--' || _a == 'NA')? null: Number.parseFloat(_a);\r\n            //     return _value;\r\n            //     ////parseString(a);\r\n            // },\r\n\r\n            \"null-at-bottom-asc\": function(_a: any, _b: any) {\r\n\r\n                _a = _a.replace(/\\,/g,''); _b = _b.replace(/\\,/g,'');\r\n\r\n                const a = (_a == '' || _a == null || _a == '--'  || _a == 'NA')? null: Number.parseFloat(_a);\r\n                const b = (_b == '' || _b == null || _b == '--' || _b == 'NA')? null: Number.parseFloat(_b);\r\n                \r\n                if (a === b)\r\n                    return 0;\r\n                if (a === null)\r\n                    return 1;\r\n                if (b === null)\r\n                    return -1;\r\n                return a < b ? -1 : 1;\r\n            },\r\n\r\n            \"null-at-bottom-desc\": function(_a: any, _b: any) {\r\n\r\n                _a = _a.replace(/\\,/g,''); _b = _b.replace(/\\,/g,'');\r\n\r\n                const a = (_a == '' || _a == null || _a == '--'  || _a == 'NA')? null: Number.parseFloat(_a);\r\n                const b = (_b == '' || _b == null || _b == '--' || _b == 'NA')? null: Number.parseFloat(_b);\r\n\r\n                if (a === b)\r\n                    return 0;\r\n                if (a === null)\r\n                    return 1;\r\n                if (b === null)\r\n                    return -1;\r\n                return a < b ? 1 : -1;\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n    selector: '[timeGreaterThanOrEqualTo]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: TimeGreaterThanOrEqualToValidator,\n        multi: true\n    }]\n})\nexport class TimeGreaterThanOrEqualToValidator {\n\n    @Input(\"timeGreaterThanOrEqualTo\") public startTimeControl: AbstractControl = null;\n    @Input(\"startDate\") public startDate: AbstractControl = null;\n    @Input(\"endDate\") public endDate: AbstractControl = null;\n\n    validate(endTimeControl: AbstractControl): { [key: string]: any } | null {\n        //if end time is null, required validation already there\n        if (endTimeControl.value) {\n            //if start time is null, then no need to set validation\n            if (this.startTimeControl && this.startTimeControl.value) {\n                //convert 12 hrs time to 24 hrs integer\n                let _startTime = ConvertTime12to24(this.startTimeControl.value);\n                let _endTime = ConvertTime12to24(endTimeControl.value);\n                //if end time greater than start time, set error\n            \n                if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) > new Date(this.endDate.value)) {\n                    //if start time has already error, them remove it\n                    if (this.startTimeControl.errors && this.startTimeControl.errors.timeSmallerThanOrEqualTo) {\n                        this.startTimeControl.setErrors({ timeSmallerThanOrEqualTo: null });\n                    };\n                    //set error\n                    endTimeControl.setErrors({ timeGreaterThanOrEqualTo: true });\n                    return { timeGreaterThanOrEqualTo: true };\n                } else if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) < new Date(this.endDate.value)) {\n                    return;\n                }\n                else if (_startTime > _endTime) {\n                    //if start time has already error, them remove it\n                    if (this.startTimeControl.errors && this.startTimeControl.errors.timeSmallerThanOrEqualTo) {\n                        this.startTimeControl.setErrors({ timeSmallerThanOrEqualTo: null });\n                    };\n                    //set error\n                    endTimeControl.setErrors({ timeGreaterThanOrEqualTo: true });\n                    return { timeGreaterThanOrEqualTo: true };\n                }\n            }\n        }\n        return;\n    }\n}\n//convert 12 hrs time to 24 hrs integer\nfunction ConvertTime12to24(time12h: any) {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes, seconds] = time.split(':');\n    if (hours === '12') { hours = '00'; }\n    if (modifier === 'PM') { hours = parseInt(hours, 10) + 12; }\n    return `${hours || '00'}${minutes || '00'}${seconds || '00'}`;\n}\n","import { Directive, Input, ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\n@Directive({\r\n    selector: '[timeSmallerThanOrEqualTo]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: TimeSmallerThanOrEqualToValidator,\r\n        multi: true\r\n    }]\r\n})\r\nexport class TimeSmallerThanOrEqualToValidator {\r\n\r\n    @Input(\"timeSmallerThanOrEqualTo\") public endTimeControl: AbstractControl = null;\r\n    @Input(\"startDate\") public startDate: AbstractControl = null;\r\n    @Input(\"endDate\") public endDate: AbstractControl = null;\r\n\r\n    validate(startTimeControl: AbstractControl): { [key: string]: any } | null {\r\n        //if start time is null, required validation already there\r\n        if (startTimeControl.value) {                \r\n            //if end time is null, then no need to set validation\r\n            if (this.endTimeControl && this.endTimeControl.value) {\r\n                //convert 12 hrs time to 24 hrs integer\r\n                let _startTime = ConvertTime12to24(startTimeControl.value);\r\n                let _endTime = ConvertTime12to24(this.endTimeControl.value);\r\n                //if start time greater tha end time, set error\r\n                if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) > new Date(this.endDate.value)) {\r\n                    if (this.endTimeControl.errors && this.endTimeControl.errors.timeGreaterThanOrEqualTo) {\r\n                        this.endTimeControl.setErrors({ timeGreaterThanOrEqualTo: null });\r\n                    };\r\n                    //set error\r\n                    startTimeControl.setErrors({ timeSmallerThanOrEqualTo: true });\r\n                    return { timeSmallerThanOrEqualTo: true };\r\n                } else if (this.startDate !=null && this.endDate !=null && new Date(this.startDate.value) < new Date(this.endDate.value)) {\r\n                    return;\r\n                }\r\n                else if (_startTime > _endTime) {\r\n                    //if end time has already error, them remove it\r\n                    if (this.endTimeControl.errors && this.endTimeControl.errors.timeGreaterThanOrEqualTo) {\r\n                        this.endTimeControl.setErrors({ timeGreaterThanOrEqualTo: null });\r\n                    };\r\n                    //set error\r\n                    startTimeControl.setErrors({ timeSmallerThanOrEqualTo: true });\r\n                    return { timeSmallerThanOrEqualTo: true };\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n}\r\n//convert 12 hrs time to 24 hrs integer\r\nfunction ConvertTime12to24(time12h: any) {\r\n    const [time, modifier] = time12h.split(' ');\r\n    let [hours, minutes, seconds] = time.split(':');\r\n    if (hours === '12') { hours = '00'; }\r\n    if (modifier === 'PM') { hours = parseInt(hours, 10) + 12; }\r\n    return `${hours || '00'}${minutes || '00'}${seconds || '00'}`;\r\n}\r\n","export class ForecastingLocationFilter {\r\n    RegionId: string;\r\n    CustomerIds: string;\r\n    IsShowCarrierManaged: boolean;\r\n    Carriers: string;\r\n    InventoryCaptureType: string;\r\n    IsRateOfConsumption: boolean;\r\n}\r\n\r\nexport class LocationFilterModal {\r\n    public SelectedRegionId: string;\r\n    public SelectedStatusId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedRegionId: string;\r\n    public SelectedStatusId: string;\r\n    public SelectedCustomerId: string;\r\n    public SelectedLocationId: string;\r\n    public SelectedPrioritiesId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public SelectedRegionsData: any = [];\r\n    public SelectedCustomerListData:any = [];\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { loginURL } from '../app.constants';\r\n\r\nexport class HandleError {\r\n    /**\r\n     * Handle Http operation that failed.\r\n     * Let the app continue.\r\n     * @param operation - name of the operation that failed\r\n     * @param result - optional value to return as the observable result\r\n     */\r\n    public handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            if (error && error.url && error.url.includes(loginURL)) { //&& error.message && error.message.includes(loginURL) \r\n                window.location.href = loginURL\r\n            }\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpGenericService extends HandleError {\n\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    fetchAll(resourceName: string) {\n        return this.http.get<any[]>(resourceName)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    fetchSingle(resourceName: string) {\n        return this.http.get<any>(resourceName)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    postData(resourceName: string, data: any) {\n        // data = JSON.stringify(data);\n        return this.http.post(resourceName, data)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    updateData(resourceName: string, data: any) {\n        data = JSON.stringify(data);\n        return this.http.put(resourceName, data)\n            .pipe(catchError(this.handleError<any>(resourceName, null)));\n    }\n\n    private objectToQueryString(obj: any): string {\n        var str = [];\n        for (var p in obj)\n            if (obj.hasOwnProperty(p)) {\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n            }\n        return str.join(\"&\");\n    }\n}\n","import { DropdownItem } from 'src/app/statelist.service';\r\nimport { FreightPricingMethod, FreightRateRuleType, TableType, WaitingAction } from 'src/app/app.enum';\r\n\r\nexport class InvoiceDetailModel {\r\n    constructor() {\r\n        this.FuelDropLocation = new AddressModel();\r\n        this.AccessorialFeeDetails = [];\r\n    }\r\n    public PaymentTerm: PaymentTermModel;\r\n    public Customer: CustomerModel;\r\n    public BolDetails: BolDetail[] = [];\r\n    public TicketDetails: LiftTicketDetail[] = [];\r\n    public Drops: DropDetailModel[];\r\n    public FuelDropLocation: AddressModel;\r\n    public Carrier: string;\r\n    public Driver: DropdownItem;\r\n    public SupplierInvoiceNumber: string;\r\n    public IsAssetTracked: boolean;\r\n    public InvoiceTypeId: number;\r\n    public IsVariousOrigin: boolean;\r\n    public InvoiceNotes: string;\r\n    public Fees: FeeModel[];\r\n    public InvoiceImage: ImageModel;\r\n    public InvoiceImages: ImageModel[] = [];\r\n    public AdditionalImage: ImageModel;\r\n    public AdditionalImages: ImageModel[] = [];\r\n    public SignatureImage: ImageModel;\r\n    public SignatureImages: ImageModel[] = [];\r\n    public TaxAffidavitImage:ImageModel;\r\n    public TaxAffidavitImages:ImageModel[] = [];\r\n    public BDNImage : ImageModel;\r\n    public BDNImages :ImageModel[] = [];\r\n    public CoastGuardInspectionImage:ImageModel;\r\n    public CoastGuardInspectionImages:ImageModel[] = [];\r\n    public InspectionRequestVoucherImage:ImageModel;\r\n    public InspectionRequestVoucherImages:ImageModel[] = [];\r\n    public OriginalInvoiceHeaderId: number;\r\n    public IsRebillInvoice: boolean;\r\n    public WaitingFor: WaitingAction;\r\n    public BrokerChainId: string;\r\n    public PreferencesSettingId: number;\r\n    public IsSupressOrderPricing: boolean;\r\n    public IsBadgeMandatory: boolean;\r\n    public ExistingHeaderId: number;\r\n    public AccessorialFeeDetails: AccessorialFeeTableDetailViewModel[];\r\n}\r\nexport class BlendedScheduleDetail {\r\n    public BlendId: string;\r\n    public Schedules: BlendedSchedules[] = [];\r\n}\r\nexport class BlendedSchedules {\r\n    public Id: number;\r\n    public OrderId: number;\r\n    public DeliveryLevelPO: string;\r\n}\r\n\r\nexport class ImageModel {\r\n    public Name: string;\r\n    public IsPdf: boolean;\r\n    public FilePath: string = \"\";\r\n    public Data: string = \"0x20\"\r\n    public ImageData: any\r\n    public AzurePath: string;\r\n\r\n}\r\n\r\nexport class DropDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TypeOfFuel: number;\r\n    public FuelTypeId: number;\r\n    public FuelTypeName: string;\r\n    public ActualDropQuantity: number;\r\n    public DropDate: string;\r\n    public DisplayDropDate: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Allowance: number;\r\n    public MinDropDate: string;\r\n    public DisplayMinDropDate: string;\r\n    public MaxDropDate: string;\r\n    public TrackableScheduleId: number;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public IsAssetTracked: boolean;\r\n    public Assets: AssetDropModel[];\r\n    public PickupLocationType: number;\r\n    public PickUpAddress: BulkPlantAddress;\r\n    public Currency: string;\r\n    public UoM: string;\r\n    public Index: number;\r\n    public OtherTaxDetails: OtherProductTaxModel[];\r\n    public FuelSurchargeFreightFee: SurchargeModel;\r\n    public IsSignatureRequired: boolean;\r\n    public IsBOLImageRequired: boolean;\r\n    public IsDropImageRequired: boolean;\r\n    public IsBolDetailsRequired: boolean;\r\n    public IsFTL: boolean;\r\n    public QuantityIndicatorTypeId: number;\r\n    public BrokerChainId: string;\r\n    public IsDipDataRequired: boolean;\r\n    public IsFreightOnlyOrder: boolean;\r\n    public ExceptionId: number;\r\n    public DropEndDate: string;\r\n    public Gravity: number;\r\n    public ConversionFactor: number;\r\n    public ConvertedQuantity: number;\r\n    public JobCountryId: number;\r\n    public IsSupressOrderPricing: boolean;\r\n    public BdrDetails: BDRModel;\r\n    public IsMarineLocation: boolean;\r\n    public BlendedScheduleId: string;\r\n    public IsBdrDetailsAdded: boolean;// Used only for UI purpose\r\n    public FreightPricingMethod: FreightPricingMethod;\r\n    public DeliveryLevelPO: string;\r\n}\r\n\r\nexport class FreightTableNameModel {\r\n    public FreightRateRuleType: string;\r\n    public TableType: string;\r\n    public TerminalId: number;\r\n    public OrderId: number;\r\n}\r\n\r\nexport class AccessorialFeeInvoiceInputViewModel {\r\n    public OrderIds: number;\r\n    public TerminalId: number;\r\n    public BulkPlantId: number;\r\n    public SupplierId: number;\r\n    public CustomerId: number;\r\n}\r\n\r\nexport class AssetDropModel {\r\n    public Id: number;\r\n    public OrderId: number;\r\n    public InvoiceId: number;\r\n    public AssetName: string;\r\n    public JobXAssetId: number;\r\n    public DropGallons: number;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public IsNewAsset: boolean = false;\r\n    public PreDip: number;\r\n    public PostDip: number;\r\n    public TankMakeModel: string;\r\n    // public UoMType: number;\r\n    public TankScaleMeasurement: number;\r\n    public AssetType: number;\r\n\r\n}\r\n\r\nexport class PaymentTermModel {\r\n    public TermId: string;\r\n    public NetDays: number;\r\n}\r\n\r\nexport class CustomerModel {\r\n    public CompanyId: number;\r\n    public CompanyName: string;\r\n    public Location: LocationModel;\r\n    public ContactName: string;\r\n    public ContactPhone: string;\r\n    public ContactEmail: string;\r\n}\r\n\r\nexport class LocationModel {\r\n    public JobId: number;\r\n    public SiteName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public ZipCode: string;\r\n    public CountryId: number;\r\n    public IsMarineLocation: boolean = false;\r\n}\r\n\r\nexport class BolDetail {\r\n    public Id: number;\r\n    public BolNumber: string;\r\n    public LiftDate: string;\r\n    public BadgeNumber: string;\r\n    public DisplayLiftDate: string;\r\n    public Products: BolProductModel[];\r\n    public Images: ImageModel;\r\n    public ImageList: ImageModel[] = [];\r\n}\r\n\r\nexport class BolProductModel {\r\n    public ProductId: number;\r\n    public ProductName: string;\r\n    public NetQuantity: number;\r\n    public GrossQuantity: number;\r\n    public Terminal: DropdownItem;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public QuantityIndicatorTypeId: number;\r\n    public DeliveredQuantity: number;\r\n\r\n}\r\n\r\nexport class LiftTicketDetail {\r\n    constructor() {\r\n        this.Products = [];\r\n    }\r\n    public Id: number;\r\n    public LiftTicketNumber: string;\r\n    public LiftDate: string;\r\n    public BadgeNumber: string;\r\n    public DisplayLiftDate: string;\r\n    public Products: LiftProductModel[];\r\n    public Images: ImageModel;\r\n    public ImageList: ImageModel[] = [];\r\n}\r\n\r\nexport class LiftProductModel {\r\n    public ProductId: number;\r\n    public ProductName: string;\r\n    public NetQuantity: number;\r\n    public GrossQuantity: number;\r\n    public BulkPlantId: number;\r\n    public BulkPlantName: string;\r\n    public Address: AddressModel;\r\n    public QuantityIndicatorTypeId: number;\r\n    public DeliveredQuantity: number;\r\n}\r\n\r\nexport class FeeModel {\r\n    public OrderId: number;\r\n    public Currency: number;\r\n    public TruckLoadType: number;\r\n    public TruckLoadCategoryId: number;\r\n    public CommonFee: boolean;\r\n    public FeeConstraintTypeId: number;\r\n    public SpecialDate: string;\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public OtherFeeDescription: string;\r\n    public MinimumGallons: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public Fee: number;\r\n    public IncludeInPPG: boolean;\r\n}\r\n\r\nexport class ByQuantityModel {\r\n    Currency: number;\r\n    MinQuantity: number = 0;\r\n    MaxQuantity: number;\r\n    Fee: number;\r\n}\r\n\r\nexport class AddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n        this.CountryGroup = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public State: DropdownItem;\r\n    public City: string;\r\n    public Country: DropdownItem;\r\n    public CountryGroup: DropdownItem;\r\n    public ZipCode: string;\r\n}\r\n\r\nexport class BulkPlantAddress extends AddressModel {\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OtherProductTaxModel {\r\n    public OrderId: number;\r\n    public TaxId: number;\r\n    public TaxPricingTypeId: number;\r\n    public TaxDescription: string;\r\n    public TaxAmount: number;\r\n}\r\n\r\nexport class SurchargeModel {\r\n    public IsSurchargeApplicable: boolean;\r\n    public IsFreightCostApplicable: boolean;\r\n    public SurchargePricingType: number;\r\n    public SurchargeProductType: number;\r\n    public SurchargeFreightCost: number;\r\n    public SurchargePercentage: number;\r\n    public SurchargeEiaPrice: number;\r\n    public SurchargeTableRangeStart: number;\r\n    public SurchargeTableRangeEnd: number;\r\n    public IsFeeByDistance: boolean = false;\r\n    public Distance: number;\r\n    public TotalFuelSurchargeFee: number;\r\n    public DeliveryFeeByQuantity: ByQuantityModel[];\r\n    public BuyerCompanyId: number;\r\n    public FreightRateRuleType: FreightRateRuleType;\r\n    public FreightRateTableType: TableType;\r\n    public FreightRateRuleId: number;\r\n    public FuelSurchargeTableType: TableType;\r\n    public FuelSurchargeTableId: number;\r\n    public FreightPricingMethod: FreightPricingMethod;\r\n    public AutoSurchargeFreightCost: number;\r\n}\r\n\r\nexport class FreightCostInputViewModel {\r\n    public FreightRateRuleId: number;\r\n    public OrderId: number;\r\n    public TerminalId: number;\r\n    public BulkPlantId: number;\r\n    public SupplierId: number;       \r\n    public DeliveredQuantity: number;\r\n    public Distance: number;\r\n}\r\n\r\nexport class AccessorialFeeTableDetailViewModel {\r\n    public AccessorialFeeTableType: TableType;\r\n    public AccessorialFeeId: number;\r\n}\r\n\r\nexport class BDRModel {\r\n    //public Id: number;\r\n    public BDRNumber: string;\r\n    public PumpingStartTime: string;\r\n    public PumpingStopTime: string;\r\n    public OpenMeterReading: string;\r\n    public CloseMeterReading: string;\r\n    public Viscosity: string;\r\n    public SulphurContent: string;\r\n    public FlashPoint: string;\r\n    public DensityInVaccum: string;\r\n    public ObservedTemperature: string;\r\n    public MeasuredVolume: string;\r\n    public StandardVolume: string;\r\n    public MarpolSampleNumbers: string;\r\n    public IsEngineerInvitedToWitnessSample: boolean = false;\r\n    public IsNoticeToProtestIssued: boolean = false;\r\n}\r\n\r\nexport function IsDuplicate(x: FeeModel, y: FeeModel) {\r\n    return y.FeeTypeId == x.FeeTypeId\r\n        && y.FeeSubTypeId == x.FeeSubTypeId\r\n        && y.CommonFee == x.CommonFee\r\n        && y.FeeConstraintTypeId == x.FeeConstraintTypeId;\r\n};\r\n\r\nexport function DeDuplicateFees(existingFees: FeeModel[], newFees: FeeModel[]): FeeModel[] {\r\n    if ((existingFees == undefined || existingFees == null)\r\n        && (newFees == undefined || newFees == null)) {\r\n        return [];\r\n    }\r\n    if (existingFees == undefined || existingFees == null) {\r\n        return newFees;\r\n    }\r\n    if (newFees == undefined || newFees == null) {\r\n        return existingFees;\r\n    }\r\n    var _combined: FeeModel[] = [];\r\n    //1. Get higher from existing\r\n    var f1 = getHigherFromFirst(existingFees, newFees);\r\n    _combined = _combined.concat(f1);\r\n\r\n    //2. Get unmatched from existing\r\n    var f2 = getUnmatchedFromFirst(existingFees, newFees);\r\n    _combined = _combined.concat(f2);\r\n\r\n    //3. Take higher from new fees\r\n    var f3 = getHigherFromFirst(newFees, _combined);\r\n    _combined = _combined.concat(f3);\r\n\r\n    //4. Take unmatched from new fees\r\n    var f4 = getUnmatchedFromFirst(newFees, _combined);\r\n    _combined = _combined.concat(f4);\r\n\r\n    return _combined.sort(function (x, y) { return compare(x, y); });\r\n}\r\n\r\nexport function IsMatched(x: FeeModel, y: FeeModel) {\r\n    return y.FeeTypeId == x.FeeTypeId\r\n        && y.FeeSubTypeId == x.FeeSubTypeId\r\n        && y.CommonFee == x.CommonFee\r\n        && y.FeeConstraintTypeId == x.FeeConstraintTypeId;\r\n};\r\n\r\nfunction getHigherFromFirst(array1: FeeModel[], array2: FeeModel[]): FeeModel[] {\r\n    var _highers = [];\r\n    array1.forEach(function (first) {\r\n        var _higher = array2.find(function (second) {\r\n            //1. Flat Fee: Remove if duplicate or take higher fee\r\n            //2. Per Hour: Remove if duplicate or take higher fee\r\n            //3. Percent: Always take higher fee\r\n            //4. Per Asset: Don't allow duplicate, take higher fee\r\n            //5. Per Gallon: Apply product-wise : No need to check for duplicates\r\n            return IsMatched(first, second) && (\r\n                (isFlatFee(first, second) && first.Fee > second.Fee) ||\r\n                (isPerHourFee(first, second) /*&& first.Fee > second.Fee*/) ||\r\n                (isPercentFee(first, second) && first.Fee > second.Fee) ||\r\n                (isPerAssetFee(first, second) /*&& first.Fee > second.Fee*/) ||\r\n                isPerGallonFee(first, second));\r\n        });\r\n        if (_higher != undefined && _higher != null) {\r\n            _highers.push(first);\r\n        }\r\n    });\r\n    return _highers;\r\n}\r\n\r\nfunction getUnmatchedFromFirst(array1: FeeModel[], array2: FeeModel[]): FeeModel[] {\r\n    var _unmatched = [];\r\n    array1.forEach(function (first) {\r\n        var _unmatch = array2.find(function (second) {\r\n            return IsMatched(first, second);\r\n        });\r\n        if (_unmatch == undefined && _unmatch == null) {\r\n            _unmatched.push(first);\r\n        }\r\n    });\r\n    return _unmatched;\r\n}\r\n\r\nfunction isFlatFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 2 && y.FeeSubTypeId == 2;\r\n}\r\n\r\nfunction isPerAssetFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 4 && y.FeeSubTypeId == 4;\r\n}\r\n\r\nfunction isPerHourFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 5 && y.FeeSubTypeId == 5;\r\n}\r\n\r\nfunction isPerGallonFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 17 && y.FeeSubTypeId == 17;\r\n}\r\n\r\nfunction isPercentFee(x: FeeModel, y: FeeModel): boolean {\r\n    return x.FeeSubTypeId == 18 && y.FeeSubTypeId == 18;\r\n}\r\n\r\nfunction compare(a: FeeModel, b: FeeModel) {\r\n    if (a.FeeTypeId > b.FeeTypeId) return 1;\r\n    if (b.FeeTypeId > a.FeeTypeId) return -1;\r\n    return 0;\r\n}\r\n\r\nexport class QuantityInfo {\r\n    ProductId: number;\r\n    TotalDroppedQuantity: number;\r\n}\r\n\r\nexport class DropQuantityByPrePostDipRequestModel\r\n{\r\n    public TankId: number;\r\n    public ScaleMeasurement: number;\r\n    public PreDipValue: number;\r\n    public PostDipValue: number;\r\n    public JobId: number;\r\n    public JobxAssetId: number;\r\n}\r\nexport class  DropQuantityByPrePostDipResponseModel\r\n{       \r\n        public DropQuantity: number;\r\n    public JobxAssetId: number;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class MFNConversionResponseViewModel {\r\n    public IsValidGravity: boolean;\r\n    public ConvertedQty: number;\r\n    public UoM: any;\r\n    }\r\n\r\nexport class MFNConversionRequestViewModel {\r\n    public DroppedGallons: number;\r\n    public UoM: any;\r\n    //Could be gravity or hardcoded 42 for barrel conversion\r\n    public ConversionFactor: number;\r\n    public JobCountryId: number;\r\n}\r\n//[Validators.pattern(/^(\\0*[1-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]*\\.[0-9]*[1-9][0-9]*)$/)]),\r\n//ActualDropQuantity: this.fb.control(quantity, [Validators.required, Validators.min(0.00000001), Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MasterComponent } from './master/master.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MarineportsComponent } from './marine-ports/marineports.component';\nimport { MarinevesselsComponent } from './marine-vessels/marinevessels.component';\nimport { SharedModule } from '../modules/shared.module';\nimport { MarinePortsMapComponent } from './marine-ports/marine-ports-map/marine-ports-map.component';\nimport { DataTablesModule } from 'angular-datatables';\nconst route: Routes = [\n    { path: '', component: MasterComponent }\n]\n\n\n@NgModule({\n  declarations: [MasterComponent, MarineportsComponent, MarinevesselsComponent, MarinePortsMapComponent],\n  imports: [\n      CommonModule,\n      SharedModule,\n       DataTablesModule,\n      RouterModule.forChild(route),\n  ]\n})\nexport class MarinePortsVesselsModule { }\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, AfterViewInit } from '@angular/core';\r\nimport { MarinePortsandvesselsService } from '../../marine-portsandvessels.service'\r\nimport { MarinePortModel } from '../../models'\r\n@Component({\r\n  selector: 'app-marine-ports-map',\r\n  templateUrl: './marine-ports-map.component.html',\r\n  styleUrls: ['./marine-ports-map.component.css']\r\n})\r\nexport class MarinePortsMapComponent implements OnInit, OnChanges, AfterViewInit{\r\n    @Input() SelectedCountryId: any;\r\n    public IsLoading: boolean = false;\r\n    public marinePortsData: MarinePortModel[] = [];\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n    public Map: any;\r\n    public zoomLevel = 5;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes.SelectedCountryId && changes.SelectedCountryId.currentValue){\r\n        //get call for location data based on selected country id\r\n        this.getMarinePortsData(changes.SelectedCountryId.currentValue);\r\n    }\r\n    }\r\n    getMarinePortsData(countryId: number) {\r\n        //let countryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.marineService.getMarinePorts(countryId).subscribe((data) => {\r\n            if (data) {\r\n                this.IsLoading = false;\r\n                this.marinePortsData = data;\r\n                if (this.marinePortsData && this.marinePortsData.length == 0) {\r\n                    if (this.SelectedCountryId == 2) { //canada\r\n                        this.mapConstants.CenterLat = 56.14;\r\n                        this.mapConstants.CenterLon = -106.34;\r\n                    }        \r\n                }\r\n                \r\n            }\r\n        });\r\n    }\r\n    setMapCenter(countryId: number) {\r\n        if (countryId == 2) {\r\n            this.mapConstants.CenterLat = 56.14;\r\n            this.mapConstants.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 4) {\r\n            this.mapConstants.CenterLat = 13.193887;\r\n            this.mapConstants.CenterLon = -59.543198;\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = 38;\r\n            this.mapConstants.CenterLon = -98.35;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.subscribeReloadMapSubject();\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        if (this.SelectedCountryId == 2) {\r\n            this.mapConstants.CenterLat = 57.88251631;\r\n            this.mapConstants.CenterLon = -98.54842922;\r\n        }\r\n    }\r\n    private subscribeReloadMapSubject(): void {\r\n        let subs = this.marineService.reloadPortMapsSubject.subscribe(countryId=> {\r\n            if (countryId) {\r\n                this.getMarinePortsData(countryId);\r\n            }\r\n        });       \r\n    }\r\n\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}","<div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n<agm-map [zoom]=\"zoomLevel\" style=\"height: 60vh;\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\r\n    <ng-container *ngFor=\"let port of marinePortsData\">\r\n        <agm-marker [latitude]=\"port.Latitude\" [longitude]=\"port.Longitude\" [iconUrl]=\"mapConstants.IconUrl\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\">\r\n            <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                <div>\r\n                    <p><strong>{{ port.JobName}}</strong></p>\r\n                </div>\r\n            </agm-info-window>\r\n        </agm-marker>\r\n    </ng-container>\r\n</agm-map>\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport { MarinePortModel, Geocode } from '../models';\r\nimport { SalesUserService } from '../../sales-user/sales-user.service'\r\nimport { ConfirmationDialogService } from '../../shared-components/confirmation-dialog/confirmation-dialog.service';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Country } from 'src/app/self-service-alias/models/location';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport {  DropdownItem } from 'src/app/statelist.service';\r\n\r\n@Component({\r\n  selector: 'app-marineports',\r\n  templateUrl: './marineports.component.html',\r\n  styleUrls: ['./marineports.component.css']\r\n})\r\nexport class MarineportsComponent implements OnInit ,OnChanges,OnDestroy{\r\n    @Input() SelectedCountryId: any;\r\n\r\n  public ModalText: string;\r\n\r\n   public MarinePortsData: MarinePortModel[] = [];\r\n    public MarinePort: MarinePortModel = new MarinePortModel();\r\n  dtOptions: any = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n\r\n  public popoverTitle: string = 'Are you sure?';\r\n  public confirmButtonText: string = 'Yes';\r\n  public cancelButtonText: string = 'No';\r\n\r\n    portCreateForm: FormGroup;\r\n\r\n    mapConstants: MapConstants = new MapConstants();\r\n\r\n  public countryList = [];\r\n  public currucyList = [];\r\n  public statesList = [];\r\n  public filteredStatesList = [];\r\n  public countryGroupList = [];\r\n    public currentCountryId: any;\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n   // public defaultCountryGroupDDLValue: DropdownItem = new DropdownItem;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService, private fb: FormBuilder,\r\n        private salesService: SalesUserService, private confirmationdialogueservice: ConfirmationDialogService) { }\r\n  ngOnInit(): void {\r\n    this.ModalText = 'Create Port';\r\n    var exportColumns = { columns: [0, 1, 2, 3, 4, 5, 6, 7] };\r\n    this.dtOptions = {\r\n      dom: '<\"html5buttons\"B>lTfgitp',\r\n      buttons: [\r\n          { extend: 'colvis' },\r\n          { extend: 'copy', exportOptions: exportColumns },\r\n          { extend: 'csv', title: 'Port Details', exportOptions: exportColumns },\r\n          { extend: 'pdf', title: 'Port Details', orientation: 'landscape', exportOptions: exportColumns },\r\n          { extend: 'print', exportOptions: exportColumns }\r\n      ],\r\n      pagingType: 'first_last_numbers',\r\n      pageLength: 10,\r\n      ordering: true,\r\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n    };\r\n      //this.getUoMList();\r\n      //this.getCurrecyList();\r\n      this.getCountryList();\r\n      this.getcountryGroupList();\r\n      this.getStatesOfAllCountries();\r\n      this.MarinePort.CountryId = this.SelectedCountryId;\r\n      if (this.SelectedCountryId == 2) { //canada\r\n          this.mapConstants.CenterLat = 56.14;\r\n          this.mapConstants.CenterLon = -106.34;\r\n      }\r\n      this.initializePortCreationForm(this.MarinePort);\r\n      //this.filterStateList(this.MarinePort.CountryId);\r\n     // this.defaultCountryGroupDDLValue.Id = 0;\r\n      jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(changes.SelectedCountryId && changes.SelectedCountryId.currentValue){\r\n       // get call for grid data\r\n        this.getMarinePortsData();\r\n        this.MarinePort.CountryId = this.SelectedCountryId;       \r\n        this.setMapCenter(this.SelectedCountryId);\r\n        this.setAddressValidators(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n    }\r\n  }\r\n    createPort(header: string) {     \r\n        this.ModalText = header;\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n        this.portCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n        this.portCreateForm.get('IsGeocodeUsed').setValue(false);\r\n        this.setLatLongValidator(false);\r\n        this.setMapCenter(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n    }\r\n    setMapCenter(countryId: number) {\r\n        if (countryId == 2) { \r\n            this.mapConstants.CenterLat = 56.14;\r\n            this.mapConstants.CenterLon = -106.34;\r\n        }\r\n        else if (countryId == 4) {\r\n            this.mapConstants.CenterLat = 13.193887;\r\n            this.mapConstants.CenterLon = -59.543198;\r\n        }\r\n        else {\r\n            this.mapConstants.CenterLat = 38;\r\n            this.mapConstants.CenterLon = -98.35;\r\n        }\r\n    }\r\n\r\n  getMarinePortsData(){\r\n      let countryId = this.SelectedCountryId;\r\n      this.IsLoading = true;\r\n    this.marineService.getMarinePorts(countryId).subscribe((data)=>{\r\n        if (data) {\r\n            jQuery(\"#port-datatable\").DataTable().clear().destroy();\r\n            this.MarinePortsData = data;\r\n            this.dtTrigger.next();\r\n            this.IsLoading = false;\r\n        }\r\n        \r\n    });\r\n  }\r\n    initializePortCreationForm(port: MarinePortModel): FormGroup {        \r\n         this.portCreateForm = this.fb.group({\r\n            JobID: this.fb.control(port.JobID),\r\n            JobName: this.fb.control(port.JobName, [Validators.required] ),       \r\n            Address: this.fb.control(port.Address),\r\n            City: this.fb.control(port.City),\r\n            CountyName: this.fb.control(port.CountyName),\r\n            StateId: this.fb.control(port.StateID, [Validators.required]),\r\n            CountryId: this.fb.control(port.CountryId, [Validators.required]),                       \r\n            StateName: this.fb.control(port.State),\r\n            ZipCode: this.fb.control(port.ZipCode),\r\n            IsGeocodeUsed: this.fb.control(port.IsGeoCoded),\r\n            Latitude: this.fb.control(port.Latitude, Validators.pattern('^[0-9.-]*$')),\r\n            Longitude: this.fb.control(port.Longitude, Validators.pattern('^[0-9.-]*$')), \r\n        })\r\n        this.setAddressValidators(port.CountryId);\r\n        return this.portCreateForm;\r\n        \r\n    }\r\n    editPort(port) {\r\n        if (port) {\r\n            this.portCreateForm.get('JobID').setValue(port.JobID);\r\n            this.portCreateForm.get('JobName').setValue(port.JobName);\r\n            this.portCreateForm.get('Address').setValue(port.Address);\r\n            this.portCreateForm.get('City').setValue(port.City);\r\n            this.portCreateForm.get('CountyName').setValue(port.CountyName);\r\n            this.portCreateForm.get('StateId').setValue(port.StateID);\r\n            this.portCreateForm.get('CountryId').setValue(port.CountryId);\r\n            this.portCreateForm.get('StateName').setValue(port.State);\r\n            this.portCreateForm.get('ZipCode').setValue(port.ZipCode);\r\n            this.portCreateForm.get('IsGeocodeUsed').setValue(port.IsGeocodeUsed);\r\n            this.portCreateForm.get('Latitude').setValue(port.Latitude);\r\n            this.portCreateForm.get('Longitude').setValue(port.Longitude);\r\n            if (port.Latitude) {\r\n                this.mapConstants.CenterLat = parseFloat(port.Latitude);\r\n                this.mapConstants.CenterLon = parseFloat(port.Longitude);\r\n            }\r\n            let countryId = this.portCreateForm.get('CountryId').value;\r\n            this.setAddressValidators(countryId);\r\n            jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n        }\r\n  }\r\n    deletePort(port) {\r\n        if (port && port.JobID) {\r\n            this.marineService.deletePort(port.JobID).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);                   \r\n                    this.getMarinePortsData();\r\n                    this.marineService.setReloadMapSubject(port.CountryId);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n         });\r\n        }\r\n    }\r\n    filterStateList(countryId: number) {\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n    }\r\n\r\n    clearPanelData() {\r\n        this.portCreateForm.reset();\r\n        this.portCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n        this.portCreateForm.get('StateId').setValue(null);\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.SelectedCountryId) || [];\r\n        this.setMapCenter(this.SelectedCountryId);\r\n        jQuery(\"#AddressDetails_Country_Id\").val(\"0\").change();\r\n        this.setLatLongValidator(false);\r\n\r\n  }\r\n    //public getUoMList() {\r\n    //  this.salesUserService.GetUoMList().subscribe(data => {\r\n    //        if (data && data.length > 0) {\r\n    //            this.UomList = data;\r\n    //        }\r\n    //    });\r\n    //}\r\n    //public getCurrecyList() {\r\n    //    this.salesUserService.GetCurrenyList().subscribe(data => {\r\n    //        if (data && data.length > 0) {\r\n    //            this.currucyList = data;\r\n    //        }\r\n    //    });\r\n    //}\r\n    public getCountryList() {\r\n        this.marineService.getCountryList().subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.countryList = data;\r\n            }\r\n        });\r\n    }\r\n    public getcountryGroupList() {\r\n        this.marineService.getCountryGroupList(4).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.countryGroupList = data;\r\n            }\r\n        });\r\n    }\r\n    countryChanged() {\r\n        this.portCreateForm.get('StateId').setValue(null)\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.portCreateForm.get('CountryId').value) || [];\r\n        let countryId = this.portCreateForm.get('CountryId').value;\r\n        this.setAddressValidators(countryId);\r\n        this.setMapCenter(countryId);\r\n    }\r\n\r\n    countryGroupChanged(selectedCountryGroupId: any) {\r\n        if (selectedCountryGroupId) {\r\n            var countryGroup = selectedCountryGroupId.target.value;\r\n            if (countryGroup === '0') {\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryId == this.portCreateForm.get('CountryId').value) || [];\r\n                this.portCreateForm.get('StateId').setValue(null)\r\n            }\r\n            else {\r\n                this.filteredStatesList = this.statesList.filter(s => s.CountryGroupId == countryGroup) || [];\r\n                this.portCreateForm.get('StateId').setValue(null)\r\n            }\r\n        }\r\n    }\r\n    public getStatesOfAllCountries(countryId?: number) {\r\n        this.marineService.GetStatesOfAllCountries(countryId).subscribe(data => {\r\n            if (data && data.length > 0) {\r\n                this.statesList = data;\r\n                this.filteredStatesList = this.statesList;\r\n            }\r\n        });\r\n    }\r\n    public getAddressByZip() {\r\n        var zipCode = this.portCreateForm.get('ZipCode').value;\r\n        if (zipCode) {\r\n            this.marineService.GetAddressByZip(zipCode).subscribe(data => {\r\n                if (data) {\r\n                    var country = this.countryList.find(t => t.Code.includes(data.CountryCode));\r\n                    if (country) {\r\n                        var countryId = country.Id;\r\n                        this.portCreateForm.get('CountryId').patchValue(countryId);\r\n                        //Commented below line for Impediment 30459-P2-Parkland US/MFN - Ports Address Misbehaves\r\n                        //this.portCreateForm.get('Address').patchValue(data.Address);\r\n                        this.portCreateForm.get('CountyName').patchValue(data.CountyName);\r\n                        this.portCreateForm.get('City').patchValue(data.City);\r\n                        var stateId = this.statesList.find(x => x.StateCode == data.StateCode).StateId;\r\n                        this.portCreateForm.get('StateId').patchValue(stateId);                       \r\n                        this.portCreateForm.get('Latitude').patchValue(data.Latitude);\r\n                        this.portCreateForm.get('Longitude').patchValue(data.Longitude);\r\n                        this.mapConstants.CenterLat = data.Latitude;\r\n                        this.mapConstants.CenterLon = data.Longitude;\r\n                        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    markerDragEnd(event) {\r\n        this.confirmationdialogueservice.confirm('Map update', 'Geo Codes shifted to a new location!')\r\n            .then((confirmed) => (confirmed == true) ? this.updateGeoCode(event.coords.lat, event.coords.lng) : this.previousLatLon())\r\n            .catch(() => this.previousLatLon());\r\n    }\r\n    updateGeoCode(lat, lng) {\r\n        this.salesService.GetAddressByLongLat(lat, lng).subscribe(data => {\r\n            if (data) {\r\n                data.Latitude = parseFloat(lat);\r\n                data.Longitude = parseFloat(lng);\r\n                this.updateAddressData(data);\r\n            }\r\n            else { // if no address fetched for lat-long then set only map marker on UI\r\n                this.mapConstants.CenterLat = lat;\r\n                this.mapConstants.CenterLon = lng;\r\n            }\r\n           \r\n        })\r\n    }\r\n    public previousLatLon() {\r\n        this.mapConstants.CenterLat = this.portCreateForm.get('Latitude').value;\r\n        this.mapConstants.CenterLon = this.portCreateForm.get('Longitude').value;\r\n    }\r\n\r\n    updateAddressData(address: Geocode) {\r\n        let countryId = (address.CountryCode == 'US' || address.CountryCode == 'USA') ? 1 : (address.CountryCode == 'CA' || address.CountryCode == 'CAN') ? 2 : this.portCreateForm.get('CountryId').value;\r\n        let stateName = (address.StateName != null && address.StateName != '' && address.StateName != undefined) ? address.StateName : address.CountryName;\r\n\r\n        if (stateName) {\r\n            let state = this.statesList.find(st => st.StateName.toLowerCase() == stateName.toLowerCase());\r\n            let stateId = (state && state.StateId) ? state.StateId : this.portCreateForm.get('StateId').value;\r\n            this.portCreateForm.get('StateId').patchValue(stateId);\r\n        }\r\n        else //set first state after filtering by countryID\r\n        {\r\n            let states = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n            if (states && states.length > 0) {\r\n                let stateId = states[0].StateId;\r\n                if (stateId) {\r\n                    this.portCreateForm.get('StateId').patchValue(stateId);\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.portCreateForm.get('Address').patchValue(address.Address);\r\n        this.portCreateForm.get('City').patchValue(address.City);\r\n        this.portCreateForm.get('ZipCode').patchValue(address.ZipCode);\r\n       \r\n        this.portCreateForm.get('CountryId').patchValue(countryId);\r\n\r\n        this.portCreateForm.get('CountyName').patchValue(address.CountyName);\r\n        //this.portCreateForm.get('CountryCode').patchValue(address.CountryCode);     \r\n        //this.portCreateForm.get('StateName').patchValue(address.StateName);\r\n        \r\n\r\n        if (address.Latitude) {\r\n            this.portCreateForm.get('Latitude').patchValue(address.Latitude);\r\n            this.portCreateForm.get('Longitude').patchValue(address.Longitude);\r\n            this.mapConstants.CenterLat = address.Latitude;\r\n            this.mapConstants.CenterLon = address.Longitude;\r\n        }\r\n\r\n        this.filteredStatesList = this.statesList.filter(s => s.CountryId == countryId) || [];\r\n\r\n    }\r\n    setLatLongValidator(isGeoCoded: any) {\r\n        if (isGeoCoded) {\r\n            let val = [Validators.required];\r\n            this.portCreateForm.get('Latitude').setValidators(val);\r\n            this.portCreateForm.get('Longitude').setValidators(val);\r\n            this.portCreateForm.get('Latitude').updateValueAndValidity();\r\n            this.portCreateForm.get('Longitude').updateValueAndValidity();\r\n        }\r\n        else {\r\n            this.portCreateForm.get('Latitude').clearValidators();\r\n            this.portCreateForm.get('Latitude').updateValueAndValidity();\r\n            this.portCreateForm.get('Longitude').clearValidators();\r\n            this.portCreateForm.get('Longitude').updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    getAddressByLatLong(lat: number, long: number) {\r\n        let isGeoCoded = this.portCreateForm.get('IsGeocodeUsed').value;\r\n        if (isGeoCoded && lat && long) {\r\n            this.updateGeoCode(lat, long);\r\n        }\r\n    }\r\n  ngOnDestroy(): void {\r\n    this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.portCreateForm.get(name).invalid\r\n            &&\r\n            (\r\n            this.portCreateForm.get(name).dirty\r\n                ||\r\n            this.portCreateForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.portCreateForm.get(name).errors.required;\r\n    }\r\n    setAddressValidators(countryId: number) {\r\n        if (countryId && this.portCreateForm)\r\n        {\r\n            let validator: any;\r\n            if (countryId && (countryId == 1 || countryId == 2)) {\r\n                validator = [Validators.required];\r\n            }\r\n            else {\r\n                validator = [];\r\n            }\r\n            this.portCreateForm.get('Address').setValidators(validator);\r\n            this.portCreateForm.get('Address').updateValueAndValidity();\r\n            this.portCreateForm.get('City').setValidators(validator);\r\n            this.portCreateForm.get('City').updateValueAndValidity();\r\n            //this.portCreateForm.get('CountyName').setValidators(validator);\r\n            //this.portCreateForm.get('CountyName').updateValueAndValidity();\r\n            this.portCreateForm.get('ZipCode').setValidators(validator);\r\n            this.portCreateForm.get('ZipCode').updateValueAndValidity();\r\n        }        \r\n    }\r\n\r\n    onSubmit() {      \r\n        this.portCreateForm.markAllAsTouched();\r\n        if (this.portCreateForm.valid) {\r\n            this.IsLoading = true;\r\n            // serverside api to save port\r\n            let port = this.portCreateForm.value;\r\n            this.marineService.saveMarinePort(port).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.portCreateForm.reset();\r\n                    this.clearPanelData();\r\n                    let dismissSlider = document.getElementById('btnCancel') as HTMLElement;\r\n                    dismissSlider.click();\r\n                    this.getMarinePortsData();\r\n                    this.marineService.setReloadMapSubject(port.CountryId);\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    //updateGeoCode(lat: any, lng: any) {\r\n    //    this.addLocationService.GetAddressByLongLat(lat, lng).subscribe(response => {\r\n    //        if (response) {\r\n    //            this.updateAddress(response, true);\r\n    //            this.f.AddressDetails.get('Latitude').patchValue(lat.toFixed(8));\r\n    //            this.f.AddressDetails.get('Longitude').patchValue(lng.toFixed(8));\r\n    //            this.getTimeZoneUsingLatLng(lat, lng);\r\n    //        }\r\n    //    });\r\n    //}\r\n\r\n    \r\n  \r\n}\r\n\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\n","<div class=\"section-marine-ports-map mb-3\">\r\n    <app-marine-ports-map [SelectedCountryId]=\"SelectedCountryId\"></app-marine-ports-map>\r\n</div>\r\n<div class=\"section-marine-ports-grid\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h4 class=\"pt0 pull-left\">Marine Ports</h4>\r\n                <a (click)=\"createPort('Create Port')\" onclick=\"slidePanel('#create-port','70%')\" class=\"fs18 pull-left ml10\">\r\n                    <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Add New</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"well bg-white shadowb-b\">\r\n                    <div class=\"ibox mb0\">\r\n                        <div class=\"ibox-content no-padding no-border\">\r\n                            <div id=\"port-details-grid\" class=\"table-responsive\">\r\n                                <table id=\"port-datatable\" data-gridname=\"35\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>Address</th>\r\n                                            <th>City</th>\r\n                                            <th>State</th>\r\n                                            <th>Zip/Postal Code</th>\r\n                                            <th>Country</th>\r\n                                            <th>Latitude</th>\r\n                                            <th>Longitude</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let port of MarinePortsData\">\r\n                                            <td>{{port.JobName}}</td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Address != null\">{{port.Address}}</span>\r\n                                                <span *ngIf=\"port.Address == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.City != null\">{{port.City}}</span>\r\n                                                <span *ngIf=\"port.City == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.State != null\">{{port.State}}</span>\r\n                                                <span *ngIf=\"port.State == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.ZipCode != null\">{{port.ZipCode}}</span>\r\n                                                <span *ngIf=\"port.ZipCode == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.CountryCode != null\">{{port.CountryCode}}</span>\r\n                                                <span *ngIf=\"port.CountryCode == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Latitude !=null\">{{port.Latitude}}</span>\r\n                                                <span *ngIf=\"port.Latitude ==null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"port.Longitude !=null\">{{port.Longitude}}</span>\r\n                                                <span *ngIf=\"port.Longitude == null\">--</span>\r\n                                            </td>\r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" (click)=\"createPort('Edit Port');editPort(port);\" class=\"btn btn-link\" onclick=\"slidePanel('#create-port','70%')\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link ml10\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deletePort(port)\"><i class=\"fas fa-trash-alt color-maroon\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"create-port\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" (click)=\"clearPanelData()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">{{ModalText}}</h3>\r\n            </div>\r\n            <div class=\"mx-3\">\r\n                    <form [formGroup]=\"portCreateForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"create-marineports\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-4 form-group\">\r\n                                            <div class=\"new-job\">\r\n                                                <label class=\"port-info\">\r\n                                                    Name <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                </label>\r\n                                                <input class=\"form-control\" formControlName=\"JobName\" type=\"text\" value=\"\">\r\n                                                <div *ngIf=\"isInvalid('JobName')\" class=\"color-maroon\">\r\n                                                    <div *ngIf=\"isRequired('JobName')\">\r\n                                                        Required.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 form-group\">\r\n                                            <label>Country/Group</label>\r\n                                            <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            <select class=\"form-control country addressInput\"\r\n                                                    formControlName=\"CountryId\" (change)=\"countryChanged()\">\r\n                                                <option id=\"{{item.Id}}\" [value]=\"item.Id\"\r\n                                                        *ngFor=\"let item of countryList\"\r\n                                                        [selected]=\"item.Id== portCreateForm.get('CountryId').value\">\r\n                                                    {{item.Code}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <div *ngIf=\"isInvalid('CountryId')\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"isRequired('CountryId')\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-sm-4\" *ngIf=\"portCreateForm.get('CountryId').value == '4'\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Country</label>\r\n                                                <select class=\"form-control country-group\"\r\n                                                        id=\"AddressDetails_Country_Id\" (change)=\"countryGroupChanged($event)\">\r\n                                                    <option id=\"0\" [value]=\"0\">Select</option>\r\n                                                    <option id=\"{{item.Id}}\" [value]=\"item.Id\"\r\n                                                            *ngFor=\"let item of countryGroupList\">\r\n                                                        {{item.Name}}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row mt20\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-7\">\r\n                                                    <div class=\"wrapper-location\" style=\"display: block;\">\r\n                                                        <div class=\"address-wrapper\"\r\n                                                             [ngClass]=\"{'pntr-none subSectionOpacity': portCreateForm.controls['IsGeocodeUsed'].value == true && portCreateForm.get('CountryId').value != '4'}\">\r\n                                                            <div class=\"address-controls\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-8\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>Address</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control address addressInput\"\r\n                                                                                   formControlName=\"Address\" value=\"\">\r\n                                                                            <div *ngIf=\"isInvalid('Address')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('Address')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label for=\"AddressDetails_ZipCode\">Zip</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control\"\r\n                                                                                   formControlName=\"ZipCode\" type=\"text\" value=\"\"\r\n                                                                                   (change)=\"getAddressByZip()\">\r\n                                                                            <div *ngIf=\"isInvalid('ZipCode')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('ZipCode')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>City</label>\r\n                                                                            <span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>\r\n                                                                            <input class=\"form-control city addressInput\"\r\n                                                                                   id=\"AddressDetails_City\" formControlName=\"City\"\r\n                                                                                   type=\"text\" value=\"\">\r\n                                                                            <div *ngIf=\"isInvalid('City')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('City')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label>County Name</label>\r\n                                                                            <!--<span class=\"required pl4\" aria-required=\"true\" *ngIf=\"portCreateForm.get('CountryId').value != '4'\">*</span>-->\r\n                                                                            <i class=\"fa fa-info-circle ml5\" data-toggle=\"tooltip\"\r\n                                                                               data-placement=\"top\"\r\n                                                                               title=\"Correct County name is required by our Tax service to calculate taxes accurately.\"></i>\r\n                                                                            <input class=\"form-control county addressInput\"\r\n                                                                                   id=\"AddressDetails_CountyName\"\r\n                                                                                   formControlName=\"CountyName\" type=\"text\" value=\"\"\r\n                                                                                   autocomplete=\"off\">\r\n                                                                            <!--<div *ngIf=\"isInvalid('CountyName')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('CountyName')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>-->\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-sm-4\">\r\n                                                                        <div class=\"form-group\">\r\n                                                                            <label for=\"AddressDetails_State_Id\">\r\n                                                                                State<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                                                            </label>\r\n                                                                            <select class=\"form-control state addressInput triggerTerminalChange\"\r\n                                                                                    id=\"AddressDetails_State_Id\"\r\n                                                                                    name=\"AddressDetails.State.Id\"\r\n                                                                                    formControlName=\"StateId\">\r\n                                                                                <option value=\"\">Select State</option>\r\n                                                                                <option id=\"{{item.StateId}}\" [value]=\"item.StateId\"\r\n                                                                                        *ngFor=\"let item of filteredStatesList\" [selected]=\"item.StateId== portCreateForm.get('StateId').value\">\r\n                                                                                    {{item.StateName}}\r\n                                                                                </option>\r\n                                                                            </select>\r\n                                                                            <div *ngIf=\"isInvalid('StateId')\" class=\"color-maroon\">\r\n                                                                                <div *ngIf=\"isRequired('StateId')\">\r\n                                                                                    Required.\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-md-12\">\r\n                                                                <div class=\"form-check form-group form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" id=\"checkbox-geocodes\"\r\n                                                                           formControlName=\"IsGeocodeUsed\" type=\"checkbox\"\r\n                                                                           [value]=\"false\" (change)=\"setLatLongValidator(portCreateForm.get('IsGeocodeUsed').value)\">\r\n                                                                    <label class=\"form-check-label\"\r\n                                                                           for=\"checkbox-geocodes\">Geo Codes</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-xs-6 col-md-4 combineDiv\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"AddressDetails_Latitude\">Latitude</label>\r\n                                                                    <input class=\"form-control latitude geoInput defaultDisabled\"\r\n                                                                           id=\"AddressDetails_Latitude\"\r\n                                                                           name=\"AddressDetails.Latitude\"\r\n                                                                           formControlName=\"Latitude\" type=\"text\" value=\"0\"\r\n                                                                           [readonly]=\"portCreateForm.get('IsGeocodeUsed').value == false\"\r\n                                                                           (change)=\"getAddressByLatLong(portCreateForm.get('Latitude').value,portCreateForm.get('Longitude').value)\">\r\n                                                                    <div *ngIf=\"isInvalid('Latitude')\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"isRequired('Latitude')\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-xs-6 col-md-4 combineDiv\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <label for=\"AddressDetails_Longitude\">Longitude</label>\r\n                                                                    <input class=\"form-control longitude geoInput defaultDisabled\"\r\n                                                                           id=\"AddressDetails_Longitude\"\r\n                                                                           formControlName=\"Longitude\" type=\"text\" value=\"0\"\r\n                                                                           [readonly]=\"portCreateForm.get('IsGeocodeUsed').value == false\"\r\n                                                                           (change)=\"getAddressByLatLong(portCreateForm.get('Latitude').value,portCreateForm.get('Longitude').value)\">\r\n                                                                    <div *ngIf=\"isInvalid('Longitude')\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"isRequired('Longitude')\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!--<div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"AddressDetails_TimeZoneName\">\r\n                                                Time\r\n                                                Zone\r\n                                            </label>\r\n                                            <input class=\"form-control timeZoneName defaultDisabled\"\r\n                                                   id=\"AddressDetails_TimeZoneName\"\r\n                                                   formControlName=\"TimeZoneName\" readonly=\"true\"\r\n                                                   type=\"text\" value=\"\"\r\n                                                   [disableControl]=\" portCreateForm.controls['IsGeocodeUsed'].value == false\">\r\n                                        </div>\r\n                                    </div>-->\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-5\">\r\n                                                <agm-map [zoom]=\"mapConstants.ZoomArea\" [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\">\r\n                                                    <agm-marker [latitude]=\"mapConstants.CenterLat\" [longitude]=\"mapConstants.CenterLon\" [markerDraggable]=\"true\"\r\n                                                                (dragEnd)=\"markerDragEnd($event)\"\r\n                                                                [iconUrl]=\"mapConstants.IconUrl\"></agm-marker>\r\n                                                </agm-map>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12 text-right form-buttons\">\r\n                                            <input type=\"button\" id=\"btnCancel\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearPanelData()\">\r\n                                            <input class=\"btn btn-primary btn-lg no-disable\" type=\"submit\" value=\"Submit\" />\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>        \r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { HandleError } from '../errors/HandleError';\nimport { DropdownCustomItem, DropdownItem } from '../statelist.service';\nimport { Observable, Subject } from 'rxjs';\r\nimport { Geocode } from './models';\r\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarinePortsandvesselsService extends HandleError {\n\n  private urlGetAllCountries = '/Settings/Profile/GetCountriesEx';\n    private urlGetMarinePorts = '/SuperAdmin/SuperAdmin/GetMarinePortsForSuperAdmin';\n    private urlGetCountryList = '/SuperAdmin/SuperAdmin/GetCountryList';\n    private urlGetCountryGroupList = '/SuperAdmin/SuperAdmin/GetCountryGroupList';\n    private urlGetStatesOfAllCountrieslist = \"/SuperAdmin/SuperAdmin/GetStatesOfAllCountries\";\n    private urlGetAddressByZip = \"Validation/GetAddressByZip\";\n    private urlGetaddressbyLatLong = \"/SuperAdmin/SuperAdmin/GetAddressByLongLat\";\n    private urlSaveMarinePort = '/SuperAdmin/SuperAdmin/SaveMarinePort'\n    private urlDeletePort = 'SuperAdmin/SuperAdmin/DeletePort';\n\n    private urlGetMarineVessels = '/SuperAdmin/SuperAdmin/GetMarineVesselsForSuperAdmin';\n    private urlDeleteVessel = 'SuperAdmin/SuperAdmin/DeleteVessel';\n    private urlSaveMarineVessel = '/SuperAdmin/SuperAdmin/SaveMarineVessel'\n\n    public reloadPortMapsSubject: Subject<any>;\n\n  constructor(private httpClient: HttpClient) {\n      super();\n      this.reloadPortMapsSubject = new Subject<any>();\n   }\n\n  public GetAllCountries(){\n    return this.httpClient.get<DropdownItem[]>(this.urlGetAllCountries)\n    .pipe(catchError(this.handleError<DropdownItem[]>('GetAllCountries', [])));\n    \n  }\n\n  public getMarinePorts(countryId:number){\n    return this.httpClient.get<any[]>(this.urlGetMarinePorts+'?countryId='+countryId)\n    .pipe(catchError(this.handleError<any[]>('getMarinePorts', [])));\n    }\n    public getCountryList() {\n        return this.httpClient.get<any[]>(this.urlGetCountryList)\r\n            .pipe(catchError(this.handleError<any[]>('getCountryList', [])));\r\n    }\n    public getCountryGroupList(countryId: number) {\n        return this.httpClient.get<any[]>(this.urlGetCountryGroupList + '?countryId=' + countryId)\r\n            .pipe(catchError(this.handleError<any[]>('getCountryGroupList', [])));\r\n    }\n    public GetStatesOfAllCountries(countryId?: number): Observable<any> {\n        return this.httpClient.get<any>(`${this.urlGetStatesOfAllCountrieslist}?countryId=${countryId}`)\n            .pipe(catchError(this.handleError<any>('GetStatesOfAllCountries', null)));\n    }\n\n    public GetAddressByZip(zipCode: string) {\n        return this.httpClient.get<any>(`${this.urlGetAddressByZip}?zipCode=${zipCode}`)\n            .pipe(catchError(this.handleError<any>('GetAddressByZip', null)));\n    }\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\n        return this.httpClient.get<any>(`${this.urlGetaddressbyLatLong}?latitude=${latitude}&longitude=${longitude}`)\n            .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\n    }\n    saveMarinePort(port: any) {\n        return this.httpClient.post<any>(this.urlSaveMarinePort, port)\r\n            .pipe(catchError(this.handleError<any>('saveMarinePort', null)));\r\n    }\n    deletePort(id: number) {\n        return this.httpClient.get<any>(`${this.urlDeletePort}?id=${id}`)\r\n            .pipe(catchError(this.handleError<any>('deletePort', null)));\r\n    }\n    public setReloadMapSubject(countryId: any): void {\r\n        this.reloadPortMapsSubject.next(countryId);\r\n    }\n    public getMarineVessels(countryId: number) {\n        return this.httpClient.get<any[]>(this.urlGetMarineVessels + '?countryId=' + countryId)\n            .pipe(catchError(this.handleError<any[]>('getMarineVessels', [])));\n    }\n\n    public deleteVessel(id: number) {\n        return this.httpClient.get<any>(`${this.urlDeleteVessel}?id=${id}`)\r\n            .pipe(catchError(this.handleError<any>('deleteVessel', null)));\r\n    }\n    saveMarineVessel(vessel: any) {\n        return this.httpClient.post<any>(this.urlSaveMarineVessel, vessel)\r\n            .pipe(catchError(this.handleError<any>('saveMarineVessel', null)));\r\n    }\n\n}\n","import { Component, OnInit ,Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport { MarineVesselsModel, MarinePortModel } from '../models';\r\nimport { Subject } from 'rxjs';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { ConfirmationDialogService } from 'src/app/shared-components/confirmation-dialog/confirmation-dialog.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\n\r\n@Component({\r\n  selector: 'app-marinevessels',\r\n  templateUrl: './marinevessels.component.html',\r\n  styleUrls: ['./marinevessels.component.css']\r\n})\r\nexport class MarinevesselsComponent implements OnInit, OnChanges{\r\n    @Input() SelectedCountryId: any;\r\n\r\n    public ModalText: string;\r\n\r\n    public MarineVesselsData: MarineVesselsModel[] = [];\r\n    public MarineVessel: MarineVesselsModel = new MarineVesselsModel();\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n\r\n    public popoverTitle: string = 'Are you sure?';\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n\r\n    vesselCreateForm: FormGroup;\r\n\r\n\r\n    public IsLoading: boolean = false;\r\n\r\n    constructor(private marineService: MarinePortsandvesselsService, private fb: FormBuilder,\r\n        private confirmationdialogueservice: ConfirmationDialogService) { }\r\n    ngOnInit(): void {\r\n        this.ModalText = 'Create Vessel';\r\n        var exportColumns = { columns: [0, 1, 2] };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Vessel Details', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Vessel Details', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            ordering: true,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n        this.MarineVessel.CountryId = this.SelectedCountryId;\r\n\r\n        this.initializeVesselCreationForm(this.MarineVessel);\r\n        this.getMarineVesselsData();\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\r\n            // get call for grid data\r\n           // this.getMarineVesselsData();            \r\n        }\r\n    }\r\n    createVessel(header: string) {\r\n        this.ModalText = header;\r\n        this.vesselCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n    }\r\n\r\n    getMarineVesselsData() {\r\n        let countryId = this.SelectedCountryId;\r\n        this.IsLoading = true;\r\n        this.marineService.getMarineVessels(countryId).subscribe((data) => {\r\n            if (data) {\r\n                jQuery(\"#vessels-datatable\").DataTable().clear().destroy();\r\n                console.log(data);\r\n                this.MarineVesselsData = data;\r\n                this.dtTrigger.next();\r\n                this.IsLoading = false;\r\n            }\r\n\r\n        });\r\n    }\r\n    initializeVesselCreationForm(vessel: MarineVesselsModel): FormGroup {\r\n        this.vesselCreateForm = this.fb.group({\r\n            Id: this.fb.control(vessel.Id),\r\n            Name: this.fb.control(vessel.Name, [Validators.required]),\r\n            IMONumber: this.fb.control(vessel.IMONumber),\r\n            Flag: this.fb.control(vessel.Flag),\r\n            CountryId: this.fb.control(vessel.CountryId)\r\n            //Customers: this.fb.control(vessel.Customers),            \r\n        })\r\n        return this.vesselCreateForm;\r\n    }\r\n    editVessel(vessel: MarineVesselsModel) {\r\n        if (vessel && vessel.Id > 0) {\r\n            this.vesselCreateForm.get('Name').setValue(vessel.Name);\r\n            this.vesselCreateForm.get('Id').setValue(vessel.Id);\r\n            this.vesselCreateForm.get('CountryId').setValue(vessel.CountryId);\r\n            this.vesselCreateForm.get('IMONumber').setValue(vessel.IMONumber);\r\n            this.vesselCreateForm.get('Flag').setValue(vessel.Flag);\r\n            //this.vesselCreateForm.get('Customers').setValue(vessel.Customers);          \r\n        }\r\n    }\r\n    deleteVessel(vessel) {\r\n        if (vessel) {\r\n            this.marineService.deleteVessel(vessel.Id).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.getMarineVesselsData();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    clearPanelData() {\r\n        this.vesselCreateForm.reset();\r\n        this.vesselCreateForm.get('CountryId').setValue(this.SelectedCountryId);\r\n    }\r\n   \r\n    \r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n    }\r\n\r\n    isInvalid(name: string): boolean {\r\n        var result = this.vesselCreateForm.get(name).invalid\r\n            &&\r\n            (\r\n            this.vesselCreateForm.get(name).dirty\r\n                ||\r\n            this.vesselCreateForm.get(name).touched\r\n            )\r\n        return result;\r\n    }\r\n\r\n    isRequired(name: string): boolean {\r\n        return this.vesselCreateForm.get(name).errors.required;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.vesselCreateForm.markAllAsTouched();\r\n        if (this.vesselCreateForm.valid) {\r\n            this.IsLoading = true;\r\n            // serverside api to save port\r\n            let port = this.vesselCreateForm.value;\r\n            this.marineService.saveMarineVessel(port).subscribe(data => {\r\n                if (data != null && data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.IsLoading = false;\r\n                    this.vesselCreateForm.reset();\r\n                    this.clearPanelData();\r\n                    let dismissSlider = document.getElementById('btnCancel') as HTMLElement;\r\n                    dismissSlider.click();\r\n                    this.getMarineVesselsData();\r\n                } else {\r\n                    this.IsLoading = false;\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n}\r\n","<div class=\"section-marine-vessels-grid\">\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h4 class=\"pt0 pull-left\">Create Vessel</h4>\r\n                <a (click)=\"createVessel('Create Vessel')\" onclick=\"slidePanel('#create-vessels','70%')\" class=\"fs18 pull-left ml10\">\r\n                    <i class=\"fa fa-plus-circle fs18 mt4 pull-left\"></i><span class=\"fs14 mt2 pull-left\">Add New</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"well bg-white shadowb-b\">\r\n                    <div class=\"ibox mb0\">\r\n                        <div class=\"ibox-content no-padding no-border\">\r\n                            <div id=\"vessel-details-grid\" class=\"table-responsive\">\r\n                                <table id=\"vessels-datatable\" data-gridname=\"36\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>IMONumber</th>\r\n                                            <th>Flag</th>\r\n                                            <!--<th>Customers</th>-->                                          \r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let vessel of MarineVesselsData\">\r\n                                            <td>{{vessel.Name}}</td>\r\n                                            <td>\r\n                                                <span *ngIf=\"vessel.IMONumber != null\">{{vessel.IMONumber}}</span>\r\n                                                <span *ngIf=\"vessel.IMONumber == null\">--</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span *ngIf=\"vessel.Flag != null\">{{vessel.Flag}}</span>\r\n                                                <span *ngIf=\"vessel.Flag == null\">--</span>\r\n                                            </td>\r\n                                            <!--<td>\r\n                                                <span *NgFor=\" let customer of vessel.Customers; let isLast = last\">\r\n                                                    {{ customer.Name}} <span *ngIf=\"!isLast\">,</span>\r\n                                                </span>\r\n                                            </td>-->                                                                                         \r\n                                            <td class=\"text-center\">\r\n                                                <button type=\"button\" (click)=\"createVessel('Edit Vessel');editVessel(vessel);\" class=\"btn btn-link\" onclick=\"slidePanel('#create-vessels','70%')\"><i class=\"fas fa-edit fs16\"></i></button>\r\n                                                <button type=\"button\" class=\"btn btn-link ml10\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\" [confirmText]=\"confirmButtonText\" [cancelText]=\"cancelButtonText\" placement=\"bottom\" (confirm)=\"deleteVessel(vessel)\"><i class=\"fas fa-trash-alt color-maroon\"></i></button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"create-vessels\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" (click)=\"clearPanelData()\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">{{ModalText}}</h3>\r\n            </div>\r\n            <div class=\"mx-3\">\r\n                <form [formGroup]=\"vesselCreateForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"create-marinevessels\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <div class=\"new-vessel\">\r\n                                            <label class=\"port-info\">\r\n                                                Name <span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                            </label>\r\n                                            <input class=\"form-control\" formControlName=\"Name\" type=\"text\" value=\"\">\r\n                                            <div *ngIf=\"isInvalid('Name')\" class=\"color-maroon\">\r\n                                                <div *ngIf=\"isRequired('Name')\">\r\n                                                    Required.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4 form-group\">\r\n                                        <label>IMO Number</label>\r\n                                        <input class=\"form-control\" formControlName=\"IMONumber\" type=\"text\" value=\"\">\r\n                                        <!--<span class=\"required pl4\" aria-required=\"true\">*</span>\r\n                                        <div *ngIf=\"isInvalid('IMONumber')\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"isRequired('IMONumber')\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>-->\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Flag</label>\r\n                                            <input class=\"form-control\" formControlName=\"Flag\" type=\"text\" value=\"\">\r\n                                        </div>\r\n                                        <!--div *ngIf=\"isInvalid('Flag')\" class=\"color-maroon\">\r\n                                            <div *ngIf=\"isRequired('Flag')\">\r\n                                                Required.\r\n                                            </div>\r\n                                        </div>-->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div class=\"row mt-3\">\r\n                                    <div class=\"col-sm-12 text-right form-buttons\">\r\n                                        <input type=\"button\" id=\"btnCancel\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearPanelData()\">\r\n                                        <input class=\"btn btn-primary btn-lg no-disable\" type=\"submit\" value=\"Submit\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MarinePortsandvesselsService } from '../marine-portsandvessels.service';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { Country } from 'src/app/self-service-alias/models/location';\r\ndeclare var currentCompanyId: any;\r\ndeclare var defaultCountryId :any;\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styleUrls: ['./master.component.css']\r\n})\r\nexport class MasterComponent implements OnInit {\r\n    viewType = 1;\r\n    //country selection related variables\r\n    CountryList: DropdownItem[] = [];\r\n    public SelectedCountryId: number;\r\n\r\n    IsLoading = false;\r\n    constructor(private marineService: MarinePortsandvesselsService) { }\r\n\r\n   ngOnInit(): void {\r\n        this.getCountries();\r\n        this.SelectedCountryId = Country.USA;\r\n   }\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n    }\r\n    private getCountries() {\r\n        this.marineService.GetAllCountries().subscribe((data)=>{\r\n         this.CountryList = data;\r\n        });\r\n    }\r\n\r\n    public onCountryChange(event) {\r\n      this.SelectedCountryId = event.target.value;\r\n    }\r\n\r\n}\r\n","<div class=\"row mb-3\">\r\n    <div class=\"col-sm-11\">\r\n        <div class=\"dib border pa5 radius-capsule shadow-b bg-white\">\r\n            <div class=\"btn-group btn-filter\">\r\n                <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\"\r\n                       [checked]=\"viewType==1\">\r\n                <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Ports</label>\r\n                <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\"\r\n                       [checked]=\"viewType==2\">\r\n                <label class=\"btn\" (click)=\"changeViewType(2)\">Vessels</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-1\">\r\n        <select class=\"form-control mt-1\" (change)=\"onCountryChange($event)\">\r\n            <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\"\r\n                    [selected]=\"SelectedCountryId==country.Id\">\r\n                <i class=\"fa fa-airbnb fa-2x\"></i> {{country.Code}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <app-marineports *ngIf=\"viewType==1\" [SelectedCountryId]=\"SelectedCountryId\"></app-marineports>\r\n        <app-marinevessels *ngIf=\"viewType==2\" [SelectedCountryId]=\"SelectedCountryId\"></app-marinevessels>\r\n    </div>\r\n</div>\r\n\r\n","\r\n\r\nexport class MarinePortModel {\r\n    constructor() {\r\n        this.IsGeoCoded = false;\r\n        this.Latitude = null;\r\n        this.Longitude = null;\r\n    }\r\n    CustomerName?: string;\r\n    CustomerId?: number;\r\n    CountryId?: number;\r\n    CountryCode?: string;\r\n    JobID?: number;\r\n    JobName?: string;\r\n    Latitude?: number;\r\n    Longitude?: number;\r\n    Address?: string;\r\n    City?: string;\r\n    CityId?: number;\r\n    State?: string;\r\n    StateID?: number;\r\n    ZipCode?: string;\r\n    ContactPersonName?: string;\r\n    ContactPhoneNumber?: string;\r\n    IsGeoCoded: boolean;\r\n    CountyName?: string;\r\n}\r\n\r\nexport class Geocode {\r\n    Address: string;\r\n    Latitude: number;\r\n    Longitude: number;\r\n    CountyName: string;\r\n    StateCode: string;\r\n    StateName: string;\r\n    City: string;\r\n    CountryCode: string;\r\n    CountryName: string;\r\n    ZipCode: string;\r\n}\r\nexport class MapIconUrl {\r\n    url: string;\r\n    scaledSize: MapIconSize;\r\n}\r\nexport class MapIconSize {\r\n    width: number;\r\n    height: number\r\n}\r\nexport class MapConstants {\r\n    CenterLat: number;\r\n    CenterLon: number;\r\n    ZoomArea: number;\r\n    IconUrl: MapIconUrl;\r\n\r\n    constructor() {\r\n        this.CenterLat = 38;\r\n        this.CenterLon = -98.35;\r\n        this.ZoomArea = 15;\r\n        this.IconUrl = { url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png', scaledSize: { width: 40, height: 40 } }\r\n    }\r\n}\r\n\r\nexport class MarineVesselsModel {\r\n    Id: number;\r\n    Name: string;\r\n    IMONumber: string;\r\n    Flag: string;\r\n    //Customers: DropdownItem[];\r\n    CountryId: number;\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { DatePicker, CustomDatePicker, TimePicker } from '../directives/myDateTimePicker';\r\nimport { startsWithPipe, startsWithJobPipe } from '../carrier-companies/search-filter';\r\nimport { RequiredIfTrueValidator } from '../directives/required-if-true.directive';\r\nimport { RequiredIfNotEmptyValidator } from '../directives/required-if-not-empty.directive';\r\nimport { TimeSmallerThanOrEqualToValidator } from '../directives/time-smaller-than-or-equal-to-validator';\r\nimport { TimeGreaterThanOrEqualToValidator } from '../directives/time-greater-than-or-equal-to-validator';\r\nimport { NumberWithDecimal } from '../directives/numberWithDecimal';\r\nimport { OnlynumberDirective } from '../directives/numbersOnly';\r\nimport { OnlynumberAlphaDirective } from '../directives/numbersAlphaOnly';\r\nimport { ClickOutsideDirective } from '../directives/click-outside.directive';\r\nimport { DisableControlDirective } from '../directives/disable-control.directive';\r\nimport { CopyDirective } from '../directives/copy.directive';\r\nimport { SortingPipe } from '../directives/sorting.pipe';\r\n\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        DatePicker,\r\n        CustomDatePicker,\r\n        TimePicker,\r\n        startsWithPipe,\r\n        startsWithJobPipe,\r\n        RequiredIfTrueValidator,\r\n        RequiredIfNotEmptyValidator,\r\n        TimeSmallerThanOrEqualToValidator,\r\n        TimeGreaterThanOrEqualToValidator,\r\n        NumberWithDecimal,\r\n        ClickOutsideDirective,\r\n        DisableControlDirective,\r\n        CopyDirective,\r\n        SortingPipe,\r\n        OnlynumberDirective,\r\n        OnlynumberAlphaDirective\r\n    ],\r\n\r\n    imports: [\r\n\r\n    ],\r\n\r\n    exports: [\r\n        DatePicker,\r\n        CustomDatePicker,\r\n        TimePicker,\r\n        startsWithPipe,\r\n        startsWithJobPipe,\r\n        RequiredIfTrueValidator,\r\n        RequiredIfNotEmptyValidator,\r\n        TimeSmallerThanOrEqualToValidator,\r\n        TimeGreaterThanOrEqualToValidator,\r\n        NumberWithDecimal,\r\n        ClickOutsideDirective,\r\n        DisableControlDirective,\r\n        CopyDirective,\r\n        SortingPipe,\r\n        OnlynumberDirective,\r\n        OnlynumberAlphaDirective\r\n    ]\r\n})\r\n\r\nexport class DirectiveModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SidebarModule } from 'ng-sidebar';\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\r\n        HttpClientModule,\r\n        SidebarModule.forRoot()\r\n    ],\r\n    exports: [\r\n\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        SidebarModule,\r\n    ]\r\n})\r\n\r\nexport class GlobalModule { }\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { environment } from '../../environments/environment'\r\nimport { GlobalModule } from './global.module';\r\nimport { DirectiveModule } from './directive.module';\r\nimport { CreateTrailerComponent } from '../shared-components/create-trailer/create-trailer.component';\r\nimport { DemandCaptureChartComponent } from '../shared-components/demand-capture-chart/demand-capture-chart.component';\r\nimport { DipTestComponent } from '../shared-components/dip-test/dip-test.component';\r\nimport { SendbirdComponent } from '../shared-components/sendbird/sendbird.component';\r\nimport { BuyerSendbirdComponent } from '../shared-components/sendbird/buyer-sendbird/buyer-sendbird.component';\r\nimport { ForcastingTankViewComponent } from '../shared-components/forcasting/tank-view-component';\r\nimport { ConfirmationDialogComponent } from '../shared-components/confirmation-dialog/confirmation-dialog.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { ConfirmationDialogService } from '../shared-components/confirmation-dialog/confirmation-dialog.service';\r\n\r\nconst googleMapAPIKey = environment.googleMapApiKey;\r\n\r\n@NgModule({\r\n\r\n    declarations: [\r\n        DemandCaptureChartComponent,\r\n        SendbirdComponent,\r\n        CreateTrailerComponent,\r\n        DipTestComponent,\r\n        BuyerSendbirdComponent,\r\n        ForcastingTankViewComponent,\r\n        ConfirmationDialogComponent\r\n    ],\r\n\r\n    imports: [\r\n        GlobalModule,\r\n        NgbModule,\r\n        AgmCoreModule.forRoot({\r\n            apiKey: googleMapAPIKey\r\n        }),\r\n        NgMultiSelectDropDownModule.forRoot(),\r\n        ConfirmationPopoverModule.forRoot({\r\n            confirmButtonType: 'danger' // set defaults here\r\n        }),\r\n        DirectiveModule,\r\n        DataTablesModule,\r\n        TankChartModule,\r\n        AutocompleteLibModule,\r\n\r\n    ],\r\n\r\n    exports: [\r\n        GlobalModule,\r\n        NgbModule,\r\n        DemandCaptureChartComponent,\r\n        SendbirdComponent,\r\n        CreateTrailerComponent,\r\n        BuyerSendbirdComponent,\r\n        ForcastingTankViewComponent,\r\n        AgmCoreModule,\r\n        NgMultiSelectDropDownModule,\r\n        ConfirmationPopoverModule,\r\n        DipTestComponent,\r\n        AutocompleteLibModule,\r\n    ],\r\n    providers: [ ConfirmationDialogService ],\r\n    entryComponents: [ConfirmationDialogComponent],\r\n})\r\n\r\nexport class SharedModule { }\r\n","export const sum = (array: any, key: string) => {\r\n    return array.reduce((sum, thisObject) => {\r\n        return (thisObject['ScheduleQuantityType'] > 1) ? sum : sum + (thisObject[key] as number);\r\n    }, 0);\r\n}\r\n\r\nexport const min = (array: any, key: string) => {\r\n    return array.reduce((min, thisObject) => {\r\n        let thisNumber = thisObject[key] as number;\r\n        min = min > thisNumber ? thisNumber : min;\r\n        return min;\r\n    }, Number.MAX_VALUE);\r\n}\r\n\r\nexport const max = (array: any, key: string) => {\r\n    return array.reduce((max, thisObject) => {\r\n        let thisNumber = thisObject[key] as number;\r\n        max = max > thisNumber ? max : thisNumber;\r\n        return min;\r\n    }, Number.MIN_VALUE);\r\n}\r\n\r\n// Accepts the array and key\r\nexport const groupBy = (array: any, key: string) => {\r\n    // Return the end result\r\n    let index = 0;\r\n    return array.reduce((result, currentValue) => {\r\n        // If an array already present for key, push it to the array. Else create an array and push the object\r\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(currentValue);\r\n        // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n        return result;\r\n    }, {}); // empty object is the initial value for result object\r\n};\r\n\r\n// Accepts the array and key\r\nexport const sortBy = (array: any, key: string) => {\r\n    // Return the end result\r\n    return array.sort((t1, t2) => {\r\n        const value1 = t1[key];\r\n        const value2 = t2[key];\r\n        if (value1 > value2) { return 1; }\r\n        if (value1 < value2) { return -1; }\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport const sortByDesc = (array: any, key: string) => {\r\n    // Return the end result\r\n    return array.sort((t1, t2) => {\r\n        const value1 = t1[key];\r\n        const value2 = t2[key];\r\n        if (value1 < value2) { return 1; }\r\n        if (value1 > value2) { return -1; }\r\n        return 0;\r\n    });\r\n}\r\n\r\nexport const sortArrayTwice = (array: any, key1: string, key2: string) => {\r\n    try {\r\n        array.sort((a, b) => a[key1].toString().localeCompare(b[key1].toString()) || a[key2] - b[key2]);\r\n        \r\n    }\r\n    catch (Error) {\r\n        console.log(Error);\r\n       \r\n    }\r\n    return array;\r\n}\r\nexport const sortByKeyAsc = (array, key) => {\r\n    return array.sort(function (a, b) {\r\n        var x = a[key]; var y = b[key];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n    });\r\n}\r\nexport const groupDrsByProduct = (drs: any): any => {\r\n    let groupedDrs = groupBy(drs, 'ProductType');\r\n    let keys = Object.keys(groupedDrs)\r\n    let productWiseDrs = [];\r\n    keys.forEach(key => {\r\n        let groupItems = groupedDrs[key];\r\n        if (groupItems && groupItems.length > 0) {\r\n            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n            productDr.IsDRMissed = groupItems.findIndex(t => t.ParentId != null) != -1;\r\n            productDr.IsDRExists = true;\r\n            productDr.SelectedDate = groupItems[0].SelectedDate;\r\n            productDr.ScheduleStartTime = groupItems[0].ScheduleStartTime;\r\n            productDr.ScheduleEndTime = groupItems[0].ScheduleEndTime;\r\n            productDr.Priority = min(groupItems, 'Priority');\r\n            productDr.Notes = getExistingValue(groupItems, 'Notes');\r\n            productWiseDrs.push(productDr);\r\n        }\r\n    });\r\n    return productWiseDrs;\r\n}\r\nexport const groupDrsByMultipleKey = (array, f): any => {\r\n    let groups = {};\r\n    array.forEach(function (o) {\r\n        var group = JSON.stringify(f(o));\r\n        groups[group] = groups[group] || [];\r\n        groups[group].push(o);\r\n    });\r\n    var keys = Object.keys(groups);\r\n    let productWiseDrs = [];\r\n    keys.forEach(key => {\r\n        let groupItems = groups[key];\r\n        if (groupItems && groupItems.length > 0) {\r\n            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n            productDr.IsDRMissed = groupItems.findIndex(t => t.ParentId != null) != -1;\r\n            productDr.IsDRExists = true;\r\n            productDr.Priority = min(groupItems, 'Priority');\r\n            productDr.Notes = getExistingValue(groupItems, 'Notes');\r\n            productWiseDrs.push(productDr);\r\n        }\r\n    });\r\n    return productWiseDrs;\r\n}\r\n//export const groupDrsByBlendGroupId = (drs: any): any => {\r\n//    let groupedDrs = groupBy(drs, 'BlendedGroupId');\r\n//    let keys = Object.keys(groupedDrs)\r\n//    let productWiseDrs = [];\r\n//    keys.forEach(key => {\r\n//        let groupItems = groupedDrs[key];\r\n//        if (groupItems && groupItems.length > 0) {\r\n//            let productDr = JSON.parse(JSON.stringify(groupItems[0]));\r\n//            productDr.RequiredQuantity = sum(groupItems, 'RequiredQuantity');\r\n//            productDr.BlendedProductName = getBlendProductName(groupItems);\r\n//            productDr.AdditiveProductName = getAdditiveProductName(groupItems);\r\n//            productWiseDrs.push(productDr);\r\n//        }\r\n//    });\r\n//    return productWiseDrs;\r\n//}\r\n\r\n//export const getBlendProductName = (drs: any): any => {\r\n//    return drs.filter(t => !t.IsAdditive).map(function (item) {\r\n//        return item.ProductType;\r\n//    }).filter((v, i, a) => a.indexOf(v) === i).join(\", \");\r\n//}\r\n\r\n//export const getAdditiveProductName = (drs: any): any => {\r\n//    return drs.filter(t => t.IsAdditive).map(function (item) {\r\n//        return item.FuelType;\r\n//    }).join(\", \");\r\n//}\r\n\r\nexport const getExistingValue = (array: any, key: string) => {\r\n    return array.reduce((val, thisObject) => {\r\n        let thisValue = thisObject[key] as string;\r\n        if (thisValue != undefined && thisValue != null && thisValue != \"\") {\r\n            val = val + thisValue + \" \";\r\n        }\r\n        return val;\r\n    }, \"\");\r\n}\r\n\r\nexport const getUniqueId = (): string => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n}\r\nexport const getRecurringUniqueId = (): string => {\r\n    return \"recurring\" + Math.random().toString(16).slice(2);\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { HandleError } from '../../app/errors/HandleError';\nimport { CustomersModel, DeliveryRequestInputModel, Geocode, ValidateDREntryResponse } from './sales-user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesUserService extends HandleError{\n  private getTruckLoadTypeUrl = \"/SalesUser/SourcingRequest/TruckLoadType\";\n  private getFreightOnBoardTypesUrl = \"/SalesUser/SourcingRequest/FreightOnBoardType\";\n  private getJoblistUrl = \"/SalesUser/SourcingRequest/GetJobLists\";\n  private isSourcingCompanyExistUrl = \"/SalesUser/SourcingRequest/IsSourcingCompanyExist\";\n  private getJobDetailsUrl = \"/SalesUser/SourcingRequest/GetJobDetails\";\n  private getCountrylistUrl = \"/SalesUser/SourcingRequest/GetCountryList\";\n  private getCurrancylistUrl = \"/SalesUser/SourcingRequest/GetCurrenyList\";\n  private getUOMlistUrl = \"/SalesUser/SourcingRequest/GetUoMList\";\n  private getStatesOfAllCountrieslistUrl = \"/SalesUser/SourcingRequest/GetStatesOfAllCountries\";\n  private getFuelProductslistUrl = \"/SalesUser/SourcingRequest/GetFuelProducts\";\n  private getFuelProductsByZiplistUrl = \"/SalesUser/SourcingRequest/GetProductListByZip\";\n  private getQuantityIndicatorTypeslistUrl = \"/SalesUser/SourcingRequest/QuantityIndicatorTypes\";\n  private getRackAvgPricingTypelistUrl = \"/SalesUser/SourcingRequest/GetRackAvgPricingTypes\";\n  private getAllFeeTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeTypes\";\n  private getAllFeeSubTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeSubTypes\";\n  private getAllFeeConstraintTypeslistUrl = \"/SalesUser/SourcingRequest/GetAllFeeConstraintTypes\";\n  private getPaymentMethodslistUrl = \"/SalesUser/SourcingRequest/PaymentMethods\";\n  private getSourcingRequestsUrl = \"/SalesUser/SourcingRequest/GetSourcingRequestGrid\";\n  private getAllBuyerCompaniesUrl = \"/SalesUser/SourcingRequest/GetAllBuyerCompanies\";\n  private getGetSourcingCompanyContactPersonsUrl = \"/SalesUser/SourcingRequest/GetSourcingCompanyContactPersons\";\n  private getGetSourcingContactPersonDetailsUrl = \"/SalesUser/SourcingRequest/GetSourcingContactPersonDetails\";\n  private postSourcingRequestUrl = \"/SalesUser/SourcingRequest/Create\";\n  private postSourcingRequestEditUrl = \"/SalesUser/SourcingRequest/Edit\";\n  private getSourcingRequestUrl = \"/SalesUser/SourcingRequest/GetRequestDetails\";\n  private getPreferencesSettingsUrl = \"/SalesUser/SourcingRequest/GetPreferencesSettings\";\n  private postCreateOrderFromSourcingRequestUrl = \"/SalesUser/SourcingRequest/CreateOrderFromSourcingRequest\";\n  private ChangesSourcingRequestStatusUrl = \"/SalesUser/SourcingRequest/ChangesSourcingRequestStatus\";\n  private getSourcingCityGroupTerminalsUrl=\"SalesUser/SourcingRequest/GetSourcingCityGroupTerminals\";\n  private getIsCitySourcingGroupTerminalPriceAvailableUrl=\"SalesUser/SourcingRequest/IsCitySourcingGroupTerminalPriceAvailable\";\n  private getClosedTerminalUrl=\"SalesUser/SourcingRequest/GetClosedTerminal\";\n  private getOpisTerminalslUrl=\"SalesUser/SourcingRequest/GetOpisTerminals\";\n  private getaddressByZipUrl=\"Validation/GetAddressByZip\";\n\n  /*Sales Form DR*/\n  private UrlGetJobDetailsFrom = \"/Order/GetJobDetails\";\n  private UrlGetCreateDREntryForm = \"/SalesUser/Dashboard/CreateSalesDR\";\n  private UrlGetValidateDREntryFormUrl = \"/SalesUser/Dashboard/ValidateSalesDR\";\n  private UrlGetAllBuyersForAllRegions = \"/SalesUser/Dashboard/GetCustomersJobsForSalesDR\";\n  private UrlGetProductsForSalesDR = \"/SalesUser/Dashboard/GetProductsForSalesDR\";\n  /*END Sales Form DR*/\n    \n\n  private GetPricingCodesUrl = \"/SalesUser/SourcingRequest/GetPricingCodes\";\n  private GetUserContextUrl = \"/SalesUser/SourcingRequest/GetUserContext\";\n  private GetSalesUserOrdersUrl = \"/SalesUser/Dashboard/GetSalesUserOrders\";\n  private IsPhoneNumberValidUrl = \"/Validation/IsPhoneNumberValid\";\n  private UpdateViewedStatusUrl = \"/SalesUser/SourcingRequest/UpdateViewedStatus\";\n  // private GetaddressbyLatLongUrl = \"https://maps.googleapis.com/maps/api/geocode/json\";\n    private GetaddressbyLatLongUrl = \"/Supplier/Order/GetAddressByLongLat\";\n\n    private urlGetCountryGroupList = \"/SalesUser/SourcingRequest/GetCountryGroupList\"; \n\n\n  constructor(private httpClient: HttpClient) { super(); }\n\n  public GetAllTPOCompanies(): Observable<any> {\n      return this.httpClient.get<any>(this.getAllBuyerCompaniesUrl)\n      .pipe(catchError(this.handleError<any>('GetAllTPOCompanies', null)));\n  }\n  public GetSourcingCompanyContactPersons(companyId:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getGetSourcingCompanyContactPersonsUrl}?companyId=${companyId}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingCompanyContactPersons', null)));\n  }\n  public GetSourcingContactPersonDetails(userId:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getGetSourcingContactPersonDetailsUrl}?userId=${userId}`)\n      .pipe(catchError(this.handleError<any>('GetAllTPGetSourcingContactPersonDetailsOCompanies', null)));\n  }\n\n  public GetTruckLoadType(): Observable<any> {\n    return this.httpClient.get<any>(this.getTruckLoadTypeUrl)\n      .pipe(catchError(this.handleError<any>('GetTruckLoadType', null)));\n  }\n  public GetFreightOnBoardTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getFreightOnBoardTypesUrl)\n      .pipe(catchError(this.handleError<any>('GetFreightOnBoardTypes', null)));\n  }\n  public GetJobLists(companyName:string ,  isFtl:boolean, foAsTerminal:boolean): Observable<any> {\n    return this.httpClient.get<any>( `${this.getJoblistUrl}?companyName=${companyName}&isFtl=${isFtl}&foAsTerminal=${foAsTerminal}`)\n      .pipe(catchError(this.handleError<any>('GetJobLists', null)));\n  }\n\n  public GetJobDetails(jobName:string,companyName:string ): Observable<any> {\n    return this.httpClient.get<any>( `${this.getJobDetailsUrl}?jobName=${jobName}&companyName=${companyName}`)\n      .pipe(catchError(this.handleError<any>('GetJobDetails', null)));\n  }\n  public GetCountryList(): Observable<any> {\n    return this.httpClient.get<any>(this.getCountrylistUrl)\n      .pipe(catchError(this.handleError<any>('GetCountryList', null)));\n  }\n  public GetCurrenyList(): Observable<any> {\n    return this.httpClient.get<any>(this.getCurrancylistUrl)\n      .pipe(catchError(this.handleError<any>('getCurrancylistUrl', null)));\n  }\n\n    public GetCountryGroupList(countryId: number): Observable<any>{\n        return this.httpClient.get<any>(this.urlGetCountryGroupList + '?countryId=' + countryId)\n            .pipe(catchError(this.handleError<any>('GetCountryGroupList', null)));\n    }\n  \n  public GetUoMList(): Observable<any> {\n    return this.httpClient.get<any>(this.getUOMlistUrl)\n      .pipe(catchError(this.handleError<any>('GetUoMList', null)));\n  }\n  public GetStatesOfAllCountries(countryId?:number): Observable<any> {\n    return this.httpClient.get<any>(`${this.getStatesOfAllCountrieslistUrl}?countryId=${countryId}`)\n      .pipe(catchError(this.handleError<any>('GetStatesOfAllCountries', null)));\n  }\n  public GetFuelProducts(productDisplayGroupId:any, companyId:any, jobId:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.getFuelProductslistUrl}?productDisplayGroupId=${productDisplayGroupId}&companyId=${companyId}&jobId=${jobId}`)\n      .pipe(catchError(this.handleError<any>('GetFuelProducts', null)));\n  }\n  public GetProductListByZip(zipCode:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.getFuelProductsByZiplistUrl}?zipCode=${zipCode}`)\n      .pipe(catchError(this.handleError<any>('GetProductListByZip', null)));\n  }\n  public QuantityIndicatorTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getQuantityIndicatorTypeslistUrl)\n      .pipe(catchError(this.handleError<any>('QuantityIndicatorTypes', null)));\n  }\n  public GetRackAvgPricingTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getRackAvgPricingTypelistUrl)\n      .pipe(catchError(this.handleError<any>('GetRackAvgPricingTypes', null)));\n  }\n  public GetAllFeeTypes( companyId:any, Currency:any , truckLoadType:any ): Observable<any> {\n    return this.httpClient.get<any>(`${this.getAllFeeTypeslistUrl}?companyId=${companyId}&Currency=${Currency}&truckLoadType=${truckLoadType}`)\n      .pipe(catchError(this.handleError<any>('GetAllFeeTypes', null)));\n  }\n  public GetAllFeeSubTypes(feeTypeId:any, Currency:any): Observable<any> {\n    return this.httpClient.get<any>( `${this.getAllFeeSubTypeslistUrl}?feeTypeId=${feeTypeId}&Currency=${Currency}`)\n      .pipe(catchError(this.handleError<any>('GetAllFeeSubTypes', null)));\n  }\n  public GetAllFeeConstraintTypes(): Observable<any> {\n    return this.httpClient.get<any>(this.getAllFeeConstraintTypeslistUrl)\n      .pipe(catchError(this.handleError<any>('GetAllFeeConstraintTypes', null)));\n  }\n  public PaymentMethods(): Observable<any> {\n    return this.httpClient.get<any>(this.getPaymentMethodslistUrl)\n      .pipe(catchError(this.handleError<any>('PaymentMethods', null)));\n  }\n    public GetSourcingRequests(RequestStatus: any, isFromDashboard:any= false): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingRequestsUrl}?RequestStatus=${RequestStatus}&isFromDashboard=${isFromDashboard}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingRequestsUrl', null)));\n  }\n\n  CreateSourcingRequest(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postSourcingRequestUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('CreateSourcingRequest', null)));\n  }\n  public GetPreferencesSettings(): Observable<any> {\n    return this.httpClient.get<any>(this.getPreferencesSettingsUrl)\n      .pipe(catchError(this.handleError<any>('GetPreferencesSettings', null)));\n  }\n\n  public GetSourcingDetailsById(id): Observable<any> {\n    return this.httpClient.get<any>(`${this.getSourcingRequestUrl}?id=${id}`)\n      .pipe(catchError(this.handleError<any>('GetSourcingDetailsById', null)));\n  }\n  CreateOrderFromSourcingRequest(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postCreateOrderFromSourcingRequestUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('CreateOrderFromSourcingRequest', null)));\n  }\n\n\n  public SaveEditSourcingDetails(sourcingRequestModel: any): Observable<any> {\n    return this.httpClient.post<any>(this.postSourcingRequestEditUrl, sourcingRequestModel)\n        .pipe(catchError(this.handleError<any>('SaveEditSourcingDetails', null)));\n  }\n  public ChangesSourcingRequestStatus(requestStatus: any,Id: any): Observable<any> {\n    var input = {sourcingRequestStatus: requestStatus,Id:Id}\n    return this.httpClient.post<any>(this.ChangesSourcingRequestStatusUrl, input)\n        .pipe(catchError(this.handleError<any>('ChangesSourcingRequestStatus', null)));\n  }\n\n  public IsSourcingCompanyExist(IsNewCompany:any,CompanyName:any): Observable<any> {\n    return this.httpClient.get<any>(`${this.isSourcingCompanyExistUrl}?IsNewCompany=${IsNewCompany}&CompanyName=${CompanyName}`)\n      .pipe(catchError(this.handleError<any>('IsSourcingCompanyExist', null)));\n  }\n    public GetSourcingCityGroupTerminals(stateId: any,sourceId: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingCityGroupTerminalsUrl}?stateId=${stateId}&sourceId=${sourceId}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingCityGroupTerminals', null)));\n    }\n    public IsCitySourcingGroupTerminalPriceAvailable(jobId: any, fueltypeId: any, selectedCityRackId: any, lattitude?: any, longitude?: any, countryCode?: string, sourceId?: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getIsCitySourcingGroupTerminalPriceAvailableUrl}?jobId=${jobId}&fueltypeId=${fueltypeId}&fueltypeId=${selectedCityRackId}&lattitude=${lattitude}&countryCode=${countryCode}&sourceId=${sourceId}`)\n            .pipe(catchError(this.handleError<any>('IsCitySourcingGroupTerminalPriceAvailable', null)));\n    }\n    public GetClosedTerminal(fuelTypeId: any, latitude: any, longitude: any, countryId: any, pricingCodeId: any, terminal: string, pricingSourceId: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getClosedTerminalUrl}?fuelTypeId=${fuelTypeId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&pricingCodeId=${pricingCodeId}&terminal=${terminal}&pricingSourceId=${pricingSourceId}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingCityGroupTerminals', null)));\n    }\n    public GetOpisTerminals(cityRackId: any, latitude: any, longitude: any, countryId: any, terminal: string, source: any): Observable<any> {\n        return this.httpClient.get<any>(`${this.getOpisTerminalslUrl}?cityRackId=${cityRackId}&latitude=${latitude}&longitude=${longitude}&countryId=${countryId}&terminal=${terminal}&source=${source}`)\n            .pipe(catchError(this.handleError<any>('GetOpisTerminals', null)));\n    }\n    public GetPricingCodes(filterModel:any)\n    {\n      return this.httpClient.get<any>(`${this.GetPricingCodesUrl}?PricingTypeId=${filterModel.PricingTypeId}&PricingSourceId=${filterModel.PricingSourceId}&feedTypeId=${filterModel.feedTypeId}&fuelClassTypeId=${filterModel.fuelClassTypeId}&tfxProdId=${filterModel.tfxProdId}&Prefix=${filterModel.Prefix}`)\n      .pipe(catchError(this.handleError<any>('GetPricingCodes', null)));\n    }\n\n    public GetAddressByZip(zipCode:string){\n      return this.httpClient.get<any>(`${this.getaddressByZipUrl}?zipCode=${zipCode}`)\n      .pipe(catchError(this.handleError<any>('GetAddressByZip', null)));\n    }\n    public GetUserContext()\n    {\n      return this.httpClient.get<any>(`${this.GetUserContextUrl}`)\n      .pipe(catchError(this.handleError<any>('GetUserContext', null)));\n    }\n    public GetOrdersForDashboard(): Observable<any> {\n      return this.httpClient.get<any>(`${this.GetSalesUserOrdersUrl}`)\n        .pipe(catchError(this.handleError<any>('GetOrdersForDashboard', null)));\n    }\n    public IsPhoneNumberValid(phoneNumber: string): Observable<any> {\n      return this.httpClient.get<any>(`${this.IsPhoneNumberValidUrl}?phoneNumber='${phoneNumber}`)\n        .pipe(catchError(this.handleError<any>('IsPhoneNumberValid', null)));\n    }\n\n    public UpdateViewedStatus(isViewed: any,Id: any): Observable<any> {\n      var input = {Id:Id,IsViewed:isViewed}\n    return this.httpClient.post<any>(this.UpdateViewedStatusUrl, input)\n        .pipe(catchError(this.handleError<any>('UpdateViewedStatus', null)));\n    }\n\n    GetAddressByLongLat(latitude: string, longitude: string): Observable<Geocode> {\n      return this.httpClient.get<any>(`${this.GetaddressbyLatLongUrl}?latitude=${latitude}&longitude=${longitude}`)\n          .pipe(catchError(this.handleError<any>('GetAddressByLongLat', null)));\n    }\n\n    private GetAddressUrl = \"/Validation/GetAddress?address=\";\n    GetAddress(address: string): Observable<Geocode> {\n      return this.httpClient.get<any>(this.GetAddressUrl + address)\n          .pipe(catchError(this.handleError<any>('GetaddressbyAddress', null)));\n    }\n\n    private getDispatchRegionsUrl = \"/SalesUser/SourcingRequest/GetDispatchRegions\";\n    public GetDispatchRegions(): Observable<any> {\n        return this.httpClient.get<any>(this.getDispatchRegionsUrl)\n            .pipe(catchError(this.handleError<any>('GetDispatchRegions', null)));\n    }\n    private getSourcingDetailUrl = \"/SalesUser/SourcingRequest/GetSourcingDetails\";\n    public GetSourcingrequestDetailsById(id): Observable<any> {\n        return this.httpClient.get<any>(`${this.getSourcingDetailUrl}?id=${id}`)\n            .pipe(catchError(this.handleError<any>('GetSourcingrequestDetailsById', null)));\n    }\n    private GetSalesUserInvoiceUrl = \"/SalesUser/Dashboard/GetSalesInvoiceDashboard\";\n    public GetInvoicesForDashboard(type: number): Observable<any> {\n        return this.httpClient.get<any>(`${this.GetSalesUserInvoiceUrl}?InvoiceTypeId=${type}`)\n            .pipe(catchError(this.handleError<any>('GetInvoicesForDashboard', null)));\n    }\n    private GetValidTPOCompanyUrl = \"Validation/IsValidTpoCompany\";\n    public GetValidTPOCompany(companyId : number): Observable<any> {\n        return this.httpClient.get<any>(`${this.GetValidTPOCompanyUrl}?companyId=${companyId}`)\n            .pipe(catchError(this.handleError<any>('GetValidTPOCompany', null)));\n    }\n\n    \n    //Sales ORder DR\n    public ValidateDREntryForm(data: any): Observable<ValidateDREntryResponse> {\n      return this.httpClient.post<any>(this.UrlGetValidateDREntryFormUrl, data)\n        .pipe(catchError(this.handleError<any>('ValidateDREntryForm', null)));\n    }\n\n    public CreateDREntryForm(data: DeliveryRequestInputModel[]): Observable<any> {\n      return this.httpClient.post<any>(this.UrlGetCreateDREntryForm, data)\n        .pipe(catchError(this.handleError<any>('CreateDREntryForm', null)));\n    }\n\n    public GetJobDetails2(jobName:string,companyName:string ): Observable<any> {\n      return this.httpClient.get<any>( `${this.UrlGetJobDetailsFrom}?jobName=${jobName}&companyName=${companyName}`)\n        .pipe(catchError(this.handleError<any>('GetJobDetails2', null)));\n    }\n\n    public GetCustomersAndLocations(): Observable<CustomersModel> {\n      return this.httpClient.get<CustomersModel>( `${this.UrlGetAllBuyersForAllRegions}`)\n      .pipe(catchError(this.handleError<CustomersModel>('GetCustomersAndLocations', null)));\n    }\n\n    \n  public GetProducts(CompanyId:number,jobId:number): Observable<any> {\n    return this.httpClient.get<any>( `${this.UrlGetProductsForSalesDR}?CompanyId=${CompanyId}&JobId=${jobId}`)\n      .pipe(catchError(this.handleError<any>('GetJobDetails', null)));\n  }\n    //Sales ORder DR End\n    \n}\n","import { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LocationDetailsModel {\r\n    public Id: number;\r\n    public ControlNumber: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public AssignedTerminalId: string;\r\n    public CreatedByCompanyId: number;\r\n}\r\n\r\nexport enum Country {\r\n    \"USA\" = 1,\r\n    \"CAN\" = 2\r\n}\r\n\r\n\r\n\r\n\r\nexport class TerminalMappingModel {\r\n    constructor() {\r\n        this.StateList = [];\r\n        this.CityList = [];\r\n        this.TerminalList = [];\r\n        this.FuelType = new DropdownItem();\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public CountryId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n    public StateList: DropdownItem[];\r\n    public CityList: DropdownItem[];\r\n    public TerminalList: DropdownItem[];\r\n    public FuelType: DropdownItem;\r\n    public StateIds: string;\r\n    public CityIds: string;\r\n    public TerminalIds: string;\r\n    public FuelTypeIds: string;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class TerminalMappingGridModel {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public Id: number;\r\n    public CompanyId: number;\r\n    public MyProductId: string;\r\n    public BackOfficeProductId: string;\r\n    public DriverProductId: string;\r\n    public TerminalItemCode: string;\r\n\r\n    public StateId: number;\r\n    public StateCode: string;\r\n    public CityId: number;\r\n    public City: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public TerminalId: number;\r\n    public TerminalName: string;\r\n    public TerminalAddress: string;\r\n    public CountryCode: string;\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() message: string;\n  @Input() btnOkText: string;\n  @Input() btnCancelText: string;\n\n  constructor(private activeModal: NgbActiveModal) { }\n\n  ngOnInit() {\n  }\n\n  public decline() {\n    this.activeModal.close(false);\n  }\n\n  public accept() {\n    this.activeModal.close(true);\n  }\n\n  public dismiss() {\n    this.activeModal.dismiss();\n  }\n\n\n}\n","<!-- <div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{ title }}</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div> -->\n    <div class=\"modal-body\">\n      {{ message }}\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-sm btn-warning\" (click)=\"decline()\">{{ btnCancelText }}</button>\n      <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\n    </div>\n","import { Injectable } from '@angular/core';\n\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\n\n@Injectable()\nexport class ConfirmationDialogService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public confirm(\n    title: string,\n    message: string,\n    btnOkText: string = 'Update new Address',\n    btnCancelText: string = 'Keep existing Address',\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, { size: dialogSize });\n    modalRef.componentInstance.title = title;\n    modalRef.componentInstance.message = message;\n    modalRef.componentInstance.btnOkText = btnOkText;\n    modalRef.componentInstance.btnCancelText = btnCancelText;\n\n    return modalRef.result;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { DropdownItem } from '../../statelist.service';\r\nimport { Compartment, TruckDetailsModel } from 'src/app/carrier/model';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { LicenceRequirement, TrailerType, TruckStatus } from 'src/app/app.enum';\r\ndeclare function closeSlidePanel(): any;\r\ndeclare var defaultUoM: any;\r\n\r\n@Component({\r\n    selector: 'app-create-trailer',\r\n    templateUrl: './create-trailer.component.html',\r\n    styleUrls: ['./create-trailer.component.css']\r\n})\r\n\r\n\r\nexport class CreateTrailerComponent implements OnInit {\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    public IsLoading: boolean;\r\n    public IsCompartments: boolean = false;\r\n    public StatusEnum: typeof TruckStatus = TruckStatus;\r\n    public TrailerTypeStatusEnum: typeof TrailerType = TrailerType;\r\n    public LicenceRequirementEnum: typeof LicenceRequirement = LicenceRequirement;\r\n    public Statuses = [];\r\n    public TrailerTypes = [];\r\n    public FuelTypes = [];\r\n    public LicenceRequirements = [];\r\n    public FreightForm: FormGroup;\r\n    public DdlSettings = {};\r\n    public DefaultUoM;\r\n    @Output() onSubmitGroupData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService) {\r\n        this.FreightForm = this.fb.group({\r\n            Id: this.fb.control(''),\r\n            Name: this.fb.control(''),\r\n            Owner: this.fb.control(''),\r\n            LicencePlate: this.fb.control('', [Validators.required]),\r\n            TruckId: this.fb.control('', [Validators.required]),\r\n            FuelCapacity: this.fb.control('', [Validators.pattern(/^((\\d|[1-9]\\d+)(\\.\\d{1,8})?|\\.\\d{1,8})$/)]),\r\n            ContractNumber: this.fb.control(''),\r\n            Status: this.fb.control(TruckStatus.Active),\r\n            TrailerType: this.fb.control(TrailerType.Lead),\r\n            LicenceRequirement: this.fb.control(null, Validators.required),\r\n            Compartments: this.fb.array([]),\r\n            ExpirationDate: this.fb.control('', [Validators.required]),\r\n            IsPump: this.fb.control(\"1\"),\r\n            IsFilldCompatible: this.fb.control(false),\r\n            SmartDeviceId: this.fb.control('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.DdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        //if (typeof defaultUoM !== 'undefined' && defaultUoM) {\r\n        //    this.DefaultUoM = (defaultUoM == '' || defaultUoM == undefined) ? null : defaultUoM;\r\n        //}\r\n        this.IsLoading = false;\r\n        this.Statuses = (Object.keys(this.StatusEnum).filter(k => typeof this.StatusEnum[k] === \"number\") as string[]).map(x => {\r\n            return {\r\n                Id: this.StatusEnum[x], Name: x == \"InActive\" ? \"In-Active\" : x == \"UnderMaintenance\" ? \"Under-Maintenance\" : x, Code: \"\"\r\n            } as DropdownItem\r\n        });\r\n        this.TrailerTypes = (Object.keys(this.TrailerTypeStatusEnum).filter(k => typeof this.TrailerTypeStatusEnum[k] === \"number\") as string[]).map(x => { return { Id: this.TrailerTypeStatusEnum[x], Name: x, Code: \"\" } as DropdownItem });\r\n        this.LicenceRequirements = (Object.keys(this.LicenceRequirementEnum).filter(k => typeof this.LicenceRequirementEnum[k] === \"number\") as string[]).map(x => { return { Id: this.LicenceRequirementEnum[x], Name: x == \"Class1\" ? \"Class 1\" : x == \"Class3\" ? \"Class 3\" : x, Code: \"\" } as DropdownItem });\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n        this.IsCompartments = false;\r\n        this.getDefaultUOM();\r\n        this.getFuelType();\r\n        \r\n    }\r\n\r\n    get Compartments(): FormArray {\r\n        return this.FreightForm.get(\"Compartments\") as FormArray\r\n    }\r\n\r\n    buildCompartment(model: Compartment): FormGroup {\r\n        return this.fb.group({\r\n            CompartmentId: this.fb.control(model.CompartmentId, [Validators.required]),\r\n            Capacity: this.fb.control(model.Capacity, [Validators.pattern(/^[0-9]\\d*(\\.\\d+)?$/)]),\r\n            FuelType: this.fb.control(model.FuelType != null ? model.FuelType : this.FuelTypes[0].Id),\r\n            PumpId: this.fb.control(model.PumpId, [Validators.required]),\r\n        });\r\n    }\r\n    getFuelType() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getFuelTypes().subscribe(t => {\r\n            this.IsLoading = false;\r\n            this.FuelTypes = t as DropdownItem[];\r\n        });\r\n    }\r\n    getDefaultUOM() {\r\n        this.IsLoading = true;\r\n        this.carrierService.getDefaultUOM().subscribe(response => {\r\n            this.IsLoading = false;\r\n            this.DefaultUoM = response;\r\n        });\r\n    }\r\n    AddCompartment() {\r\n        this.Compartments.push(this.buildCompartment(new Compartment()));\r\n    }\r\n\r\n    RemoveCompartment(i: number) {\r\n        this.Compartments.removeAt(i);\r\n    }\r\n\r\n    toggleCompartment(event: any): void {\r\n        if (event.isTrusted) {\r\n            this.IsCompartments = !this.IsCompartments;\r\n            if (!this.IsCompartments) {\r\n                this.Compartments.clear();\r\n            } else if (this.Compartments.length == 0) {\r\n                this.AddCompartment();\r\n            }\r\n        }\r\n    }\r\n\r\n    setValidationForIsValidFilldCompatible(isFilldCompatible: boolean) {\r\n        let val = isFilldCompatible ? [Validators.required] : [];\r\n        this.FreightForm.controls['SmartDeviceId'].setValidators(val);\r\n        this.FreightForm.controls['SmartDeviceId'].updateValueAndValidity();\r\n\r\n        let groupItems: any = (this.FreightForm.get(\"Compartments\") as FormArray).controls;\r\n\r\n        for (let item of groupItems) {\r\n            item.controls[\"PumpId\"].setValidators(val);\r\n            item.controls[\"PumpId\"].updateValueAndValidity();\r\n        }\r\n        if (isFilldCompatible) {\r\n            this.FreightForm.get(\"IsPump\").setValue(\"1\");\r\n        }\r\n    }\r\n    loadTruckDetail(truck: TruckDetailsModel) {\r\n        this.clearTrailerForm();\r\n        let zero = 0;\r\n        if (truck.LicenceRequirement == zero) {\r\n            truck.LicenceRequirement = null;\r\n        }\r\n        this.FreightForm.patchValue(truck);\r\n        this.IsCompartments = false;\r\n        if (truck.Compartments != null && truck.Compartments.length > 0) {\r\n            this.IsCompartments = true;\r\n            truck.Compartments.forEach(x => this.Compartments.push(this.buildCompartment(x)));\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        this.setValidationForIsValidFilldCompatible(this.FreightForm.controls['IsFilldCompatible'].value);\r\n\r\n        var totalCapacity = this.FreightForm.get('FuelCapacity').value as number;\r\n        if (this.FreightForm.valid && this.Compartments.length > 0 && totalCapacity > 0) {\r\n            var sumCompartmentCapacity: number = 0;\r\n            this.Compartments.controls.forEach(t => sumCompartmentCapacity += parseFloat(t.get('Capacity').value));\r\n            if (!(totalCapacity == sumCompartmentCapacity)) {\r\n                Declarations.msgerror('Total compartment capacity should match Trailer capacity.', undefined, undefined);\r\n                this.FreightForm.setErrors({ 'invalid': true });\r\n                return false;\r\n            }\r\n        }\r\n        if (this.FreightForm.valid) {\r\n            this.IsLoading = true;\r\n            this.carrierService.postCreateTruck(this.FreightForm.value).subscribe(data => {\r\n                this.IsLoading = false;\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    closeSlidePanel();\r\n                    this.clearTrailerForm();\r\n                    this.onSubmitGroupData.emit();\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.FreightForm.markAllAsTouched();\r\n        }\r\n    }\r\n    setSelectedDate(date: string) {\r\n        var _date = this.FreightForm.get('ExpirationDate');\r\n        if (_date.value != date) {\r\n            _date.setValue(date);\r\n        }\r\n    }\r\n    clearTrailerForm() {\r\n        this.FreightForm.reset();\r\n        this.Compartments.clear();\r\n        this.IsCompartments = false;\r\n        this.setDefaultValue();\r\n    }\r\n\r\n    setDefaultValue() {\r\n        this.FreightForm.get(\"Status\").setValue(TruckStatus.Active);\r\n        this.FreightForm.get(\"TrailerType\").setValue(TrailerType.Lead);\r\n        this.FreightForm.get(\"LicenceRequirement\").setValue(LicenceRequirement.Class1);\r\n        this.FreightForm.get(\"IsFilldCompatible\").setValue(false);\r\n    }\r\n}\r\n","<form [formGroup]=\"FreightForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"col-sm-12\" id=\"add-trailerDetails\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Trailer ID<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Trailer ID\" formControlName=\"TruckId\" tabindex=\"1\" />\r\n                            <div *ngIf=\"FreightForm.get('TruckId').invalid && FreightForm.get('TruckId').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('TruckId').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"Name\" tabindex=\"2\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Owner</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Owner\" formControlName=\"Owner\" tabindex=\"3\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Licence Requirement<span class=\"color-maroon\">*</span></label>\r\n                            <select class=\"form-control\" formControlName=\"LicenceRequirement\" tabindex=\"4\">\r\n                                <option [value]=\"null\">Select</option>\r\n                                <option *ngFor=\"let key of LicenceRequirements\" [value]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                            <div *ngIf=\"FreightForm.get('LicenceRequirement').invalid && FreightForm.get('LicenceRequirement').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('LicenceRequirement').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Licence Plate<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Licence Plate\" formControlName=\"LicencePlate\" tabindex=\"5\" />\r\n                            <div *ngIf=\"FreightForm.get('LicencePlate').invalid && FreightForm.get('LicencePlate').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('LicencePlate').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Expiration Date<span class=\"color-maroon\">*</span></label>\r\n                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"ExpirationDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" (onDateChange)=\"setSelectedDate($event);\" tabindex=\"6\" />\r\n                            <div *ngIf=\"FreightForm.get('ExpirationDate').invalid && FreightForm.get('ExpirationDate').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"FreightForm.get('ExpirationDate').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Total Capacity</label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Capacity\" formControlName=\"FuelCapacity\" tabindex=\"7\" />\r\n                                <span class=\"input-group-addon\">{{DefaultUoM | slice:0:1}}</span>\r\n                            </div>\r\n                            <div *ngIf=\"FreightForm.get('FuelCapacity').invalid && FreightForm.get('FuelCapacity').touched\" class=\"color-maroon\">\r\n                                <span *ngIf=\"FreightForm.get('FuelCapacity').errors.pattern\">\r\n                                    Invalid.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Trailer Type</label>\r\n                            <select class=\"form-control\" formControlName=\"TrailerType\" tabindex=\"8\">\r\n                                <option *ngFor=\"let key of TrailerTypes\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label>Status</label>\r\n                            <select class=\"form-control\" formControlName=\"Status\" tabindex=\"9\">\r\n                                <option *ngFor=\"let key of Statuses\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"d-block mb-rem-5\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"IsFilldCompatible\" (click)=\"setValidationForIsValidFilldCompatible($event.target.checked)\" formControlName=\"IsFilldCompatible\">\r\n                            <label class=\"form-check-label\" for=\"IsFilldCompatible\">TrueFill Inc. Compatible</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-block\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" (click)=\"toggleCompartment($event)\" name=\"IsCompartments\" [(ngModel)]=\"IsCompartments\" [ngModelOptions]=\"{standalone: true}\">\r\n                            <label class=\"form-check-label\" for=\"inlineCheckbox1\">Compartments</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group\">\r\n                    <div [class]=\"FreightForm.get('IsFilldCompatible').value? 'pntr-none subSectionOpacity' : ''\">\r\n                        <label class=\"db\">Does your trailer have pump?</label>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"IsPumpRadio1\" value=\"1\" name=\"IsPump\" formControlName=\"IsPump\">\r\n                            <label class=\"form-check-label\" for=\"IsPumpRadio1\">Yes</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"IsPumpRadio2\" value=\"0\" name=\"IsPump\" formControlName=\"IsPump\">\r\n                            <label class=\"form-check-label\" for=\"IsPumpRadio2\">No</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-4\" *ngIf=\"FreightForm.get('IsFilldCompatible').value\">\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Smart Device ID\" formControlName=\"SmartDeviceId\" tabindex=\"2\" />\r\n                    <div *ngIf=\"FreightForm.get('SmartDeviceId').invalid && FreightForm.get('SmartDeviceId').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"FreightForm.get('SmartDeviceId').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"IsCompartments\">\r\n            <div class=\"col-sm-12\">\r\n                <div formArrayName=\"Compartments\">\r\n                    <div class=\"row mb10\" *ngFor=\"let compartment of FreightForm.get('Compartments')['controls']; let i = index; let first = first;\">\r\n                        <div class=\"row col-sm-12\" [formGroupName]=\"i\">\r\n                            <div class=\"col-sm-3\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Compartment Id\" formControlName=\"CompartmentId\" />\r\n                                <div *ngIf=\"compartment.get('CompartmentId').invalid && compartment.get('CompartmentId').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"compartment.get('CompartmentId').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <select class=\"form-control\" formControlName=\"FuelType\">\r\n                                    <option *ngFor=\"let key of FuelTypes\" [ngValue]=\"key.Id\">{{key.Name}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Capacity\" formControlName=\"Capacity\" />\r\n                                    <span class=\"input-group-addon fs12\">{{DefaultUoM | slice:0:1}}</span>\r\n                                </div>\r\n                                <div *ngIf=\"compartment.get('Capacity').invalid && compartment.get('Capacity').touched\" class=\"color-maroon\">\r\n                                    <span *ngIf=\"compartment.get('Capacity').errors.pattern\">\r\n                                        Invalid.\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\" *ngIf=\"FreightForm.get('IsFilldCompatible').value\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Pump ID\" formControlName=\"PumpId\" tabindex=\"2\" />\r\n                                <div *ngIf=\"compartment.get('PumpId').invalid && compartment.get('PumpId').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"compartment.get('PumpId').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                             </div>\r\n                            <div class=\"col-sm-1\">\r\n                                <a *ngIf=\"!first\" (click)=\"RemoveCompartment(i);\" class=\"fa fa-trash-alt mt10 color-maroon\" title=\"Remove\"></a>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a (click)=\"AddCompartment();\" class=\"add-partial-block mb20\">\r\n                                <span class=\"fa fa-plus-circle\"></span> Add New\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 text-right form-buttons\">\r\n        <input type=\"button\" value=\"Cancel\" class=\"btn\" onclick=\"closeSlidePanel()\" (click)=\"clearTrailerForm()\">\r\n        <button id=\"Submit\" type=\"submit\" class=\"btn btn-lg btn-primary valid\" aria-invalid=\"false\">Submit</button>\r\n    </div>\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading...</div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\ndeclare var ApexCharts;\n\n@Component({\n    selector: 'app-demand-capture-chart',\n    templateUrl: './demand-capture-chart.component.html',\n    styleUrls: ['./demand-capture-chart.component.css']\n})\n\nexport class DemandCaptureChartComponent implements OnInit {\n    @Input() data: any;\n    demandCapChart: any;\n    showChart = false;\n    // isLoading = false;\n    showCustomDateText = false;\n    customDays = 0;\n    dateFilterList: any[] = [];\n    noChartData = false;\n    public isLoadingSubject: BehaviorSubject<any>;\n    constructor(private carrierService: CarrierService) {\n        this.isLoadingSubject = new BehaviorSubject(false);\n    }\n\n    ngOnInit() {\n        this.loadTrends();\n    }\n\n    ngAfterViewInit() {\n        if (this.demandCapChart)\n            this.demandCapChart.render();\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.data.currentValue && change.data.currentValue.tfxJobId && !change.data.firstChange) {\n            if (this.demandCapChart) {\n                this.demandCapChart.destroy();\n            }\n            this.loadTrends();\n            this.noChartData = false;\n        }\n    }\n\n\n    async loadTrends() {\n        if (this.data.siteId && this.data.noOfDays && this.data.tfxJobId) {\n            this.isLoadingSubject.next(true);\n            this.getDemandCapChartData(this.data.siteId, this.data.noOfDays, this.data.tfxJobId);\n            this.getDateList();\n        }\n    }\n    public getDateList() {\n        return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }, { Id: 0, Value: 'Custom' }]\n    }\n\n    async onSelection($event) {\n\n        if ($event == 0) {\n            this.showCustomDateText = true;\n        } else {\n            this.showCustomDateText = false;\n            this.showChart = false;\n            this.data.noOfDays = $event;\n            this.demandCapChart.destroy();\n            this.noChartData = false;\n            this.getDemandCapChartData(this.data.siteId, $event, this.data.tfxJobId);\n        }\n\n    }\n    async getDemandCapChartData(siteId, noOfDays, tfxJobId) {\n        this.isLoadingSubject.next(true);\n        this.carrierService.getDemandCapChartData(siteId, noOfDays, tfxJobId).subscribe(op => {\n            if (op.Result && op.Result.length > 0) this.rendor(op.Result)\n            else {\n                this.noChartData = true;\n                this.isLoadingSubject.next(false);\n            }\n        })\n    }\n\n    async rendor(data) {\n        var mapList = [];\n        var filterkeys = [];\n        await data && data.map(m => {\n            if (!filterkeys.find(f => f && f.tankid == m.TankId && f.storageid == m.StorageId)) {\n                filterkeys.push({ tankid: m.TankId, storageid: m.StorageId });\n                mapList.push({ name: `[Tank: ${m.TankName} , Product Category: ${m.ProductName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [new Date(re.CaptureTime).getTime(), re.NetVolume.toFixed(1)] }) });\n            }\n        })\n\n        var date = new Date();\n        var previousDate = date.setDate(date.getDate() - this.data.noOfDays);\n        var options = {\n            series: mapList,\n            chart: {\n                type: 'line',\n                height: 350,\n                zoom: {\n                    enabled: true,\n                    type: 'x',\n                    autoScaleYaxis: false,\n                    zoomedArea: {\n                        fill: {\n                            color: '#90CAF9',\n                            opacity: 0.4\n                        },\n                        stroke: {\n                            color: '#0D47A1',\n                            opacity: 0.4,\n                            width: 1\n                        }\n                    }\n                },\n                toolbar: {\n                    show: true,\n                    offsetX: 0,\n                    offsetY: 0,\n                    tools: {\n                        download: false,\n                        selection: true,\n                        zoom: true,\n                        zoomin: true,\n                        zoomout: true,\n                        pan: true,\n                        reset: true,\n                        customIcons: []\n                    },\n                    autoSelected: 'zoom'\n                },\n            },\n            annotations: {\n                yaxis: [{\n                    show: true,\n                    y: 30,\n                    borderColor: '#999',\n                    title: {\n                        text: \"Fuel (In Gallons)\",\n                        style: {\n                            color: '#008FFB',\n                        }\n                    },\n                    text: 'Fuel (In Gallons)',\n                    tooltip: {\n                        enabled: true\n                    },\n                    axisTicks: {\n                        show: true,\n                    },\n                    axisBorder: {\n                        show: true,\n                        color: '#00E396'\n                    },\n                    label: {\n                        show: true,\n                        text: 'Date',\n                        style: {\n                            color: \"#fff\",\n                            background: '#00E396'\n                        }\n                    }\n                }],\n                xaxis: [{\n                    x: new Date().getTime(),\n                    borderColor: '#999',\n                    yAxisIndex: 0,\n                    type: \"datetime\",\n                    label: {\n                        show: true,\n                        text: 'Gallons',\n                        style: {\n                            color: \"#fff\",\n                            background: '#775DD0'\n                        },\n                        tooltip: {\n                            enabled: true\n                        },\n                        axisTicks: {\n                            show: true,\n                        },\n                        axisBorder: {\n                            show: true,\n                            color: '#00E396'\n                        },\n                    }\n                }]\n            },\n            dataLabels: {\n                enabled: false\n            },\n            markers: {\n                size: 0,\n                style: 'hollow',\n            },\n            xaxis: {\n                type: 'datetime',\n                labels: {\n                    datetimeUTC: false\n                },\n                min: new Date(previousDate).getTime(),\n                tickAmount: 6,\n            },\n            tooltip: {\n                x: {\n                    format: 'dd MMM yyyy hh:mm tt  '\n                }\n            },\n            stroke: {\n                show: true,\n                curve: 'smooth',\n                lineCap: 'butt',\n                colors: undefined,\n                width: 1,\n                dashArray: 0,\n            },\n            fill: {\n                type: 'gradient',\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.7,\n                    opacityTo: 0.9,\n                    stops: [0, 100]\n                }\n            },\n        };\n        this.isLoadingSubject.next(false);\n        //if (this.demandCapChart)\n        //    this.demandCapChart.resetSeries();\n        this.demandCapChart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\n        if (this.demandCapChart)\n            this.demandCapChart.render();\n\n        this.showChart = true;\n\n\n        //var resetCssClasses = function (activeEl) {\n        //    var els = document.querySelectorAll(\"button\");\n        //    Array.prototype.forEach.call(els, function (el) {\n        //        el.classList.remove('active');\n        //    });\n        //                activeEl.target.classList.add('active')\n        //}\n\n\n\n\n    }\n\n}\n","<!--<div>\r\n    <input type=\"button\" class=\"btn btn-primary\" (click)=\"loadTrends()\" value=\"Trends\" />\r\n</div>-->\r\n\r\n<div *ngIf=\"!noChartData\">\r\n    Last {{customDays==0?(data?.noOfDays):customDays}} Days   Demand Capture Chart (Site-{{data?.siteId}})\r\n</div>\r\n\r\n<div *ngIf=\"noChartData\" class=\"alert alert-danger\">\r\n    No Data Found.\r\n</div>\r\n\r\n<div [ngClass]=\"{'hide_chart': !showChart}\">\r\n    <div>\r\n        <select  *ngIf=\"!noChartData\" (change)=\"onSelection($event.target.value)\">\r\n            <option *ngFor=\"let item of dateFilterList\" [value]=\"item.Id\">{{item.Value}}</option>\r\n        </select>\r\n        <input type=\"number\" maxlength=\"2\" max=\"99\" class=\"form-control\" [(ngModel)]=\"customDays\" *ngIf=\"showCustomDateText\" />\r\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"getDemandCapChartData(data.siteId, customDays, data.tfxJobId)\" *ngIf=\"showCustomDateText && customDays>0\" value=\"Submit\" />\r\n    </div>\r\n\r\n    <div id=\"chart-timeline\"></div>\r\n</div>\r\n<div *ngIf=\"(isLoadingSubject | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n\r\n","import { Component, OnInit, Output, EventEmitter, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, ViewChild, OnDestroy, ViewEncapsulation, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormArray, FormGroup, Validators } from '@angular/forms';\r\nimport { AdditiveOrderViewModel, DropdownItem, StateDropdownExtendedItem, StatelistService, TBDDropdownItem } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { BehaviorSubject, Subscription, Subject, of, iif } from 'rxjs';\r\nimport { DipTestViewModel, CustomerJobsForCarrier, SalesDataModel, DropAddressModel, OrderPickupLocationModel, OrderPickupDetailModel, RaiseTBDDeliveryRequest, TBDRaiseDRDeliveryRequests, BlendedRequest, CompatibleProductModel, DeliveryRequestViewModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { DataService } from 'src/app/carrier/service/data.service';\r\nimport * as moment from 'moment';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { UtilService } from 'src/app/carrier/service/util.service';\r\nimport { AddressService } from 'src/app/address.service';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { AddressModel } from 'src/app/invoice/models/DropDetail';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { JobRegionModel } from 'src/app/carrier/models/location';\r\nimport { DeliveryReqPriority } from 'src/app/app.enum';\r\nimport { additiveProductTypeId, DropDown, NumberConstants, RegExConstants, ScheduleDays, ScheduleQuantityType, ScheduleTypes } from 'src/app/app.constants';\r\nimport { getRecurringUniqueId, getUniqueId } from 'src/app/my.functions';\r\ndeclare function closeSlidePanel(): any;\r\ndeclare var IsBuyerCompany: boolean;\r\n\r\n@Component({\r\n    selector: 'app-dip-test',\r\n    templateUrl: './dip-test.component.html',\r\n    styleUrls: ['./dip-test.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class DipTestComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    @ViewChild('elementFilter') elementFilter: ElementRef;\r\n    //keyword = 'Name';\r\n    public IsCommonBadge = false\r\n    public height_Panel: any;\r\n    public DipTestsForEachTank: DipTestViewModel[] = [];\r\n    public OtherProductDipTestsForEachTank: DipTestViewModel[] = [];\r\n    public selectedLocation: JobRegionModel[] = [];\r\n    public SiteList: JobRegionModel[] = [];\r\n    public selectedCustomer: CustomerJobsForCarrier[] = [];\r\n    public companySiteList: CustomerJobsForCarrier[] = [];\r\n    public SiteddlSettings = {};\r\n    public CustomerSettings = {};\r\n    public DaySetting = {};\r\n    // public DeliveryRequests: FormArray;\r\n    public fmGroup: FormGroup;\r\n    public IsLoading: boolean = false;\r\n    public DelReqPriority: typeof DeliveryReqPriority = DeliveryReqPriority;\r\n    public dipTestLoader: boolean = false;\r\n    public showForm: boolean = false;\r\n    public IsDrFromMultiWindow: boolean = false;\r\n    public OrderList: DropdownItem[] = [];\r\n    public selectedOrder: DropdownItem[] = [];\r\n    public isTankExists: boolean = true;\r\n    public OrderDetails: DipTestViewModel[] = [];\r\n    public multiDropdownSettings: IDropdownSettings;\r\n    public chartdata: any;\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    public disableControl: boolean = false;\r\n    public loadingCustomers: boolean = true;\r\n    public otherProductTypeId: number;\r\n    public companyUoM: number;\r\n    public CompatibleProductTypeList: CompatibleProductModel[] = [];\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n    public StartTime: any;\r\n    public EndTime: any;\r\n\r\n    @Input() IsThisFromDrDisplay: boolean;\r\n    @Input() public isDisableControl: boolean;\r\n    @Input() SelectedRegionId: string;\r\n    @Input() IsSalesPage: boolean = false;\r\n    @Input() RequestFromBuyerWallyBoard: boolean;\r\n    @Output() onRaiseDR: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() OnRaiseDRFromMultiWindow: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public DisableControlsSubscription: Subscription;\r\n    public FormValidationMessage: string = \"\";\r\n\r\n    //recuring schedules\r\n    public ScheduleTypes: DropdownItem[] = ScheduleTypes.filter(x => x.Id != 4) as DropdownItem[];;\r\n    public ScheduleQuantityTypeDetails: DropdownItem[] = ScheduleQuantityType;\r\n    //public RecurringDRSchedule: RecurringDRSchedule[] = [];\r\n    //public isRecurringSchedule: boolean;\r\n    public MaxInputDate: Date = new Date();\r\n    public currentdate: string;\r\n    // public options: Options;\r\n    public ScheduleDaysDetails: Array<DropDown> = ScheduleDays;\r\n    public failedMessageIdentification: string = \"<failed>\";\r\n    public messageSplitTag: string = \"<split>\";\r\n    //public PoNumber: string;\r\n    //public TankName: string;\r\n    public RetainTime: string;\r\n    public RetainDate: string;\r\n    public WindowStartTime: string;\r\n    public WindowStartDate: string;\r\n    public WindowEndTime: string;\r\n    public WindowEndDate: string;\r\n    public IsRetainButtonClick: boolean = false;\r\n    SelectedCustomerId: string;\r\n    SelectedLocationId: string;\r\n    SalesData: SalesDataModel[] = [];\r\n    public dtTrigger: Subject<any> = new Subject();\r\n    public dtOptions: any = {};\r\n    public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n\r\n    public StateList: StateDropdownExtendedItem[] = [];\r\n    public CountryList: DropdownItem[] = [];\r\n    public CountryGroupList: DropdownItem[] = [];\r\n    public ChangePickupForOrders: number[] = [];\r\n    public BulkPlants: DropdownItem[];\r\n    public BulkplantList: DropdownItem[];\r\n    private DGSubscription: Subscription = new Subscription();\r\n    public LocationType: number = 1;\r\n    public SearchTerminalFuelType: string;\r\n    public Terminals = [];\r\n    public TBDTerminals = [];\r\n    public isReadOnly: boolean = false;\r\n    public PickupForm: FormGroup;\r\n    public SelectedDRForEditPickup: FormGroup;\r\n    public SelectedDRForEditPickupIndex: number;\r\n    public CountryBasedZipcodeLabel: string = \"Zip\";\r\n    public _loadingTerminals: boolean = false;\r\n    public SearchTerminalKey: string;\r\n    public minCharRequired = false;\r\n    public _loadingAddress: boolean = false;\r\n    public noTerminalFound = false;\r\n    public searchError = false;\r\n\r\n    public activePriorityTab = DeliveryReqPriority.MustGo;\r\n    public isUserSubmit: boolean = false;\r\n    public fmTBDGroup: FormGroup;\r\n    public FuelTypeDdlSettings = {};\r\n    public FuelTypeDetails: TBDDropdownItem[] = [];\r\n    public OtherFuelTypeDetails: TBDDropdownItem[] = [];\r\n    public SelectedTBDForEditPickup: FormGroup;\r\n    public SelectedTBDForEditPickupIndex: number;\r\n    public TBDDeliveryRequestViewModel: RaiseTBDDeliveryRequest = new RaiseTBDDeliveryRequest();\r\n    public isTBDUserSubmit: boolean = false;\r\n    public TBDdipTestLoader: boolean = false;\r\n\r\n    //BLENDED REQUEST\r\n    public DrForEditBlendedRequestIndex: number = 0;\r\n    public DrForEditBlendedRequest: FormGroup;\r\n    public BlendDrIndex: number = 0;\r\n    public IsPickupForBlendRequest: boolean = false;\r\n    public blendRequestForm: FormGroup = this.fb.group({ BlendedRequests: this.fb.array([]) });\r\n    public additiveOrders: AdditiveOrderViewModel[] = [];\r\n    public preferenceSetting: any = null;\r\n\r\n\r\n    constructor(private fb: FormBuilder, private carrierService: CarrierService,\r\n        private utilService: UtilService,\r\n        private stateService: StatelistService,\r\n        private addresService: AddressService,\r\n        private sbService: ScheduleBuilderService,\r\n        private dispatcherService: DispatcherService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private dataService: DataService) {\r\n        this.fmGroup = this.fb.group({\r\n            DeliveryRequests: this.fb.array([]),\r\n            IsTankNotAvailableForOrderProducts: this.fb.control(false),\r\n            //new controls\r\n            PickupLocationType: this.fb.control(null),\r\n            IsCommonPickup: this.fb.control(null),\r\n            Terminal: this.utilService.getTerminalForm(new DropdownItem(), false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(new DropAddressModel(), false),\r\n            BadgeNo1: this.fb.control(null),\r\n            BadgeNo2: this.fb.control(null),\r\n            BadgeNo3: this.fb.control(null),\r\n            LoadCode: this.fb.control(null),\r\n            IsCommonBadge: this.fb.control(null),\r\n            IsPreLoadInfo: this.fb.control(null),\r\n            ProductTypeId: this.fb.control(null)\r\n        });\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 1);\r\n        this.currentdate = moment(new Date()).format('MM/DD/YYYY');\r\n        this.isLoadingSubject = new BehaviorSubject(false);\r\n        //TBD\r\n        this.fmTBDGroup = this.fb.group({\r\n            ScheduleTBDForm: this.fb.array([]),\r\n        });\r\n        this.FuelTypeDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n        };\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.IsThisFromDrDisplay && change.IsThisFromDrDisplay.currentValue != null) {\r\n            this.IsDrFromMultiWindow = change.IsThisFromDrDisplay.currentValue;\r\n        }\r\n        this.subscribeDisableControlsSubject();\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.dtTrigger.unsubscribe();\r\n        this.unsubscribeAllSubscriptions_();\r\n    }\r\n    ngOnInit() {\r\n        //  this.initializeSalesGrid();\r\n        this.SiteddlSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'DisplayName',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n\r\n        };\r\n        this.multiDropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            allowSearchFilter: true,\r\n            itemsShowLimit: 1\r\n        };\r\n        this.CustomerSettings = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.DaySetting = {\r\n            singleSelection: false,\r\n            closeDropDownOnSelection: false,\r\n            idField: 'id',\r\n            textField: 'text',\r\n            enableCheckAll: false,\r\n            itemsShowLimit: 1,\r\n        };\r\n        // this.options = {\r\n        //     multiple: true,\r\n        //     closeOnSelect: false,\r\n        //     tags: true\r\n        // };\r\n        this.additiveOrders = [];\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.subscribeDisableControlsSubject();\r\n        this.height_Panel = this.calHeight();\r\n        this.PickupForm = this.initPickupForm_(new OrderPickupDetailModel());\r\n        this.PickupLocationTypeChange_();\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n        this.StartTime = new Date(0, 0, 0, null, null, null);\r\n        this.EndTime = new Date(0, 0, 0, null, null, null);\r\n    }\r\n\r\n    onDaySelect(event: any, recurringSchedule: FormGroup, isSelected: boolean) {\r\n    }\r\n    // start\r\n    getBulkPlantAddress_(bulkPlantName: string) {\r\n        this.DGSubscription.add(this.addresService.GetBulkPlantDetails(bulkPlantName).subscribe(response => {\r\n            this.PickupForm.controls['BulkPlant'].patchValue({\r\n                Address: response.Address,\r\n                City: response.City,\r\n                State: response.State,\r\n                Country: { Code: response.Country.Code },\r\n                ZipCode: response.ZipCode,\r\n                CountyName: response.CountyName,\r\n                Latitude: response.Latitude,\r\n                Longitude: response.Longitude\r\n            });\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        }));\r\n        this.PickupForm.markAllAsTouched();\r\n        this.PickupForm.markAsDirty();\r\n    }\r\n    changeTerminal_(delReq: FormGroup, event: any, drIndex: number): void {\r\n        let _orderId = event.target.selectedOptions[0].value;\r\n        let orders = delReq.get('OrderPickupDetails').value as any[] || [];\r\n        if (orders.length > 0) {\r\n            let selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (!selectedOrder) {\r\n                var order = this.OrderDetails.find(t => t.OrderId == _orderId);\r\n                if (order && order.OrderPickupDetails) {\r\n                    selectedOrder = order.OrderPickupDetails.find(x => x.OrderId == _orderId);\r\n                }\r\n            }\r\n            //set badges\r\n            delReq.get('BadgeNo1').patchValue(selectedOrder.Badge1);\r\n            delReq.get('BadgeNo2').patchValue(selectedOrder.Badge2);\r\n            delReq.get('BadgeNo3').patchValue(selectedOrder.Badge3);\r\n\r\n            let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n            this.setPickupLocation_(delReq, location);\r\n            this.findDrWithSameProductAndJob(delReq, _orderId, location, drIndex);\r\n        }\r\n    }\r\n    findDrWithSameProductAndJob(selectedDrForm: FormGroup, seletedOrderId: number, location: OrderPickupLocationModel, drIndex: number) {\r\n        if (selectedDrForm === null || drIndex === null) {\r\n            return;\r\n        }\r\n\r\n        let _delReqs = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        let selectedDrObj = selectedDrForm ? selectedDrForm.value : null;\r\n\r\n        for (let index = 0; index < _delReqs.length; index++) {\r\n            let _drForm = _delReqs.controls[index] as FormGroup;\r\n            let _drObj = _drForm ? _drForm.value : null;\r\n            if (_drObj && selectedDrObj && _drObj.ProductTypeId == selectedDrObj.ProductTypeId && _drObj.JobId == selectedDrObj.JobId && index != drIndex) {\r\n                //set pickup details\r\n                this.setPickupLocation_(_drForm, location);\r\n                //set other details\r\n                _drForm.get('ScheduleQuantityType').patchValue(selectedDrObj.ScheduleQuantityType);\r\n                _drForm.get('Priority').patchValue(selectedDrObj.Priority);\r\n                _drForm.get('IsCommonBadge').patchValue(selectedDrObj.IsCommonBadge);\r\n                _drForm.get('BadgeNo1').patchValue(selectedDrObj.BadgeNo1);\r\n                _drForm.get('BadgeNo2').patchValue(selectedDrObj.BadgeNo2);\r\n                _drForm.get('BadgeNo3').patchValue(selectedDrObj.BadgeNo3);\r\n                _drForm.get('OrderId').patchValue(selectedDrObj.OrderId);\r\n            }\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onBulkPlantSelected_(event: any): void {\r\n        this.PickupForm.get('BulkPlant.SiteName').setValue(event.Name);\r\n        this.PickupForm.get('BulkPlant.SiteId').setValue(event.Id);\r\n        this.BulkPlants = this.BulkplantList.slice();\r\n        this.getBulkPlantAddress_(event.Name);\r\n        if (this.PickupForm.get('BulkPlant.SiteName').valid) {\r\n            this.isReadOnly = true;\r\n        }\r\n    }\r\n    onBulkPlantSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.BulkPlants = this.BulkplantList.slice().filter(function (elem) {\r\n            return elem.Name && elem.Name.toLowerCase().indexOf(keyword) >= 0;\r\n        });\r\n        let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n        this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n    }\r\n    onBulkPlantBlur_(event: any): void {\r\n        if (this.BulkPlants.filter(t => t.Name && t.Name.toLowerCase() == event.target.value.toLowerCase()).length > 0) {\r\n            let bulkPlant = this.BulkPlants.find(t => t.Name.toLowerCase() == event.target.value.toLowerCase());\r\n            this.PickupForm.get('BulkPlant.SiteName').setValue(bulkPlant.Name);\r\n            this.PickupForm.get('BulkPlant.SiteId').setValue(bulkPlant.Id);\r\n            this.getBulkPlantAddress_(bulkPlant.Name);\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    setCommonPickupFlag_() {\r\n        if (this.fmGroup.get('IsCommonPickup').value) {\r\n            this.PickupForm.reset();\r\n        } else {\r\n            this.fmGroup.controls['Terminal'].reset()\r\n            this.fmGroup.controls['BulkPlant'].reset();\r\n        }\r\n    }\r\n    setPickupLocation_(form: FormGroup, order: OrderPickupLocationModel): void {\r\n        form.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                form.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                form.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n            this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n\r\n    RemovePickupLocation(tdr: FormGroup, drIndex: number): void {\r\n\r\n        if (tdr != null || tdr != undefined) {\r\n            this.SelectedDRForEditPickupIndex = drIndex;\r\n            this.ChangePickupForOrders = [];\r\n            this.SelectedDRForEditPickup = tdr;\r\n            let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n            _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n\r\n            let terminal = this.utilService.getTerminalForm(new DropdownItem(), false);\r\n            let bulkPlant = this.utilService.getBulkPlantForm(new DropAddressModel(), false);\r\n            let _terminal = terminal.value;\r\n            let _bulkPlant = bulkPlant.value;\r\n            let location = {\r\n                PickupLocationType: _pickupType,\r\n                Terminal: _terminal,\r\n                BulkPlant: _bulkPlant\r\n            };\r\n            this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n        }\r\n    }\r\n\r\n    get StatesListByCountry(): any[] {\r\n        let countryCode = this.PickupForm.controls['BulkPlant']['controls'].Country.get(\"Code\").value;\r\n        if (countryCode != \"\" && countryCode != undefined && this.CountryList != undefined && this.CountryList.length > 0) {\r\n            let country = this.CountryList.filter(c => c.Code == countryCode);\r\n            let countryId = 0;\r\n            if (country) {\r\n                countryId = country[0].Id;\r\n            }\r\n            if (countryId == 4) {\r\n                let countryGroupCode = this.PickupForm.controls['BulkPlant']['controls'].CountryGroup.get(\"Id\").value;\r\n                return this.StateList.filter(t => t.CountryId == 4 && t.CountryGroupId == countryGroupCode);\r\n            }\r\n            else {\r\n                return this.StateList.filter(t => t.CountryId == countryId);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    editPickupLocation_(tdr: FormGroup, drIndex: number): void {\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n        this.SelectedDRForEditPickupIndex = drIndex;\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = tdr;\r\n\r\n        if (tdr && tdr.get('IsBlendedRequest').value) {\r\n\r\n            let blendRequests = tdr.get('BlendedRequests').value as BlendedRequest[];\r\n\r\n            if (blendRequests && blendRequests.length > 0) {\r\n                blendRequests.forEach(blend => {\r\n                    if (!blend.IsAdditive && blend.OrderId)\r\n                        this.ChangePickupForOrders.push(blend.OrderId);\r\n                });\r\n            }\r\n        }\r\n        else if (tdr == null || tdr == undefined) {\r\n            this.SelectedDRForEditPickup = this.fmGroup\r\n            let _delReqs = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n            _delReqs.controls.forEach((x: FormGroup) => {\r\n                let _orderId = x.controls['OrderId'].value as number;\r\n                if (_orderId > 0) {\r\n                    this.ChangePickupForOrders.push(_orderId);\r\n                }\r\n            });\r\n        } else {\r\n            let _orderId = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n            if (_orderId > 0) {\r\n                this.ChangePickupForOrders.push(_orderId);\r\n                let existingOrders = tdr.get('OrderPickupDetails').value || [];\r\n                let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n                if (orders.length > 0) {\r\n                    let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                    this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n                }\r\n            }\r\n        }\r\n        let _pickupType = this.SelectedDRForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = this.SelectedDRForEditPickup.controls['Terminal'].value;\r\n        let _bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto/manual order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr)\r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n\r\n        if (this.ChangePickupForOrders.length > 0) {\r\n            this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            }));\r\n        }\r\n        else {\r\n            this.Terminals = [];\r\n        }\r\n\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setBulkPlantValidators_(form: FormGroup, required: boolean) {\r\n        form.get('BulkPlant.Address').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n        form.get('BulkPlant.City').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n        form.get('BulkPlant.State.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.State.Id').updateValueAndValidity();\r\n        form.get('BulkPlant.Country.Code').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.Country.Code').updateValueAndValidity();\r\n        form.get('BulkPlant.ZipCode').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n        form.get('BulkPlant.CountyName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n        form.get('BulkPlant.Latitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n        form.get('BulkPlant.Longitude').setValidators(required ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n        form.get('BulkPlant.SiteName').setValidators(required ? [Validators.required] : null);\r\n        form.get('BulkPlant.SiteName').updateValueAndValidity();\r\n    }\r\n    setTerminalValidators_(form: FormGroup, required: boolean) {\r\n        form.get('Terminal.Name').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Name').updateValueAndValidity();\r\n        form.get('Terminal.Id').setValidators(required ? [Validators.required] : null);\r\n        form.get('Terminal.Id').updateValueAndValidity();\r\n    }\r\n    setPickupValidators_(form: FormGroup, pickupType: number): void {\r\n        if (pickupType != 2) {\r\n            this.setBulkPlantValidators_(form, false);\r\n            this.setTerminalValidators_(form, true);\r\n        } else {\r\n            this.setTerminalValidators_(form, false);\r\n            this.setBulkPlantValidators_(form, true);\r\n        }\r\n    }\r\n    initPickupForm_(order: OrderPickupDetailModel): FormGroup {\r\n        let isTerminalPickup = order && order.PickupLocationType != 2;\r\n        let _pForm = this.fb.group({\r\n            PickupLocationType: this.fb.control(order.PickupLocationType),\r\n            Terminal: this.utilService.getTerminalForm(null, isTerminalPickup),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, !isTerminalPickup)\r\n        });\r\n        if (order != null || order != undefined) {\r\n            if (order.PickupLocationType != 2) {\r\n                _pForm.controls['Terminal'].patchValue({ Id: order.TerminalId, Name: order.TerminalName });\r\n            } else {\r\n                _pForm.controls['BulkPlant'].patchValue({\r\n                    Address: order.Address,\r\n                    City: order.City,\r\n                    State: { Id: order.StateId, Code: order.StateCode },\r\n                    Country: { Code: order.CountryCode },\r\n                    ZipCode: order.ZipCode,\r\n                    CountyName: order.CountyName,\r\n                    Latitude: order.Latitude,\r\n                    Longitude: order.Longitude,\r\n                    SiteName: order.BulkplantName\r\n                });\r\n            }\r\n        }\r\n        this.DGSubscription.add(_pForm.controls['PickupLocationType'].valueChanges.subscribe(x => { this.LocationType = x; }));\r\n        return _pForm;\r\n    }\r\n    setStateCode_(event: any) {\r\n        this.PickupForm.get('BulkPlant.State.Code').setValue(event.target.selectedOptions[0].text);\r\n    }\r\n    onTerminalSelected_(event: any): void {\r\n        this.PickupForm.get('Terminal').patchValue({ Id: event.Id, Name: event.Name });\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    onTerminalSearched_(event: any): void {\r\n        let keyword = event.target.value.toLowerCase();\r\n        this.SearchTerminalKey = keyword;\r\n        let searchKeyword$ = of(keyword);\r\n        this.DGSubscription.add(searchKeyword$.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            tap((data) => {\r\n                this._loadingTerminals = true\r\n                if (data.length < 3 && data.length != 0) {\r\n                    this.minCharRequired = true;\r\n                } else {\r\n                    this.minCharRequired = false;\r\n                }\r\n            }),\r\n            switchMap((term) => iif(\r\n                () => (term.length < 3 && term.length != 0),\r\n                of([]), this.sbService.getPickupTerminals(this.ChangePickupForOrders, keyword)\r\n                    .pipe(tap(() => { this._loadingTerminals = false; }),\r\n                        catchError(() => {\r\n                            this._loadingTerminals = false;\r\n                            this.searchError = true;\r\n                            return of([]);\r\n                        })\r\n                    ))),\r\n            tap(() => this._loadingTerminals = false)).subscribe((data) => {\r\n                this._loadingTerminals = false;\r\n                if (data.length === 0) {\r\n                    this.noTerminalFound = true;\r\n                } else {\r\n                    this.noTerminalFound = false;\r\n                }\r\n                this.Terminals = data;\r\n                this.changeDetectorRef.detectChanges();\r\n            },\r\n                (err) => {\r\n                    console.log(err);\r\n                }));\r\n    }\r\n    public validateTerminal_(terminal: any, event: any): void {\r\n        if (!terminal.get('Id').value) {\r\n            terminal.get('Name').patchValue('');\r\n        }\r\n    }\r\n    addressMapper_(data: any): AddressModel {\r\n        let state = this.StateList.find(x => x.Code == data.StateCode);\r\n        let country = this.CountryList.find(x => x.Code == data.CountryCode);\r\n        let _address = new AddressModel();\r\n        _address.Address = data.Address;\r\n        _address.City = data.City;\r\n        _address.CountyName = data.CountyName\r\n        _address.Latitude = data.Latitude;\r\n        _address.Longitude = data.Longitude;\r\n        _address.ZipCode = data.ZipCode;\r\n        _address.State = state;\r\n        _address.Country = country;\r\n        return _address;\r\n    }\r\n    getAddressByZip_(event: any): void {\r\n        let zipCode = event.target.value;\r\n        let regexUsa = new RegExp(RegExConstants.UsaZip);\r\n        let regexCan = new RegExp(RegExConstants.CanZip);\r\n        if (regexUsa.test(zipCode) || regexCan.test(zipCode)) {\r\n            this._loadingAddress = true;\r\n            this.DGSubscription.add(this.addresService.getAddress(zipCode)\r\n                .subscribe(data => {\r\n                    this._loadingAddress = false;\r\n                    if (data != null && data != undefined && data.StateCode != null) {\r\n                        if (data.CountryCode != 'CAR') {\r\n                            data.CountryCode == 'US' || data.CountryCode == 'USA' ? data.CountryCode = 'USA' : data.CountryCode = 'CAN';\r\n                        }\r\n                        let addressModel = this.addressMapper_(data);\r\n                        this.PickupForm.get('BulkPlant').patchValue({\r\n                            City: addressModel.City,\r\n                            State: addressModel.State,\r\n                            Country: { Code: addressModel.Country.Code },\r\n                            ZipCode: addressModel.ZipCode,\r\n                            CountyName: addressModel.CountyName,\r\n                            Latitude: addressModel.Latitude,\r\n                            Longitude: addressModel.Longitude\r\n                        });\r\n                        this.PickupForm.markAllAsTouched();\r\n                        this.PickupForm.markAsDirty();\r\n                        if (addressModel.Country.Code != \"USA\" && addressModel.Country.Code != \"US\") {\r\n                            this.CountryBasedZipcodeLabel = \"Postal Code\";\r\n                        }\r\n                        else {\r\n                            this.CountryBasedZipcodeLabel = \"Zip\";\r\n                        }\r\n                    }\r\n                }));\r\n        }\r\n    }\r\n    updatePickupLocation_() {\r\n        if (this.SelectedDRForEditPickup != null) {\r\n            let isCommon = false;\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedDRForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation_(this.SelectedDRForEditPickup, pickupLoc);\r\n\r\n            //set badges for dr by terminal and order\r\n            let _orderId = this.SelectedDRForEditPickup.value.OrderId;\r\n            let _pickupLocationType = pickupLoc.PickupLocationType;\r\n            let _pickupLocationId = (_pickupLocationType != 2) ? (pickupLoc.Terminal.Id) : (pickupLoc.BulkPlant.SiteId);\r\n            let orderIds = [];\r\n            let selectedFormValue = this.SelectedDRForEditPickup.value;\r\n            if (selectedFormValue.hasOwnProperty('DeliveryRequests')) {\r\n                isCommon = true;\r\n                if (selectedFormValue.DeliveryRequests.length > 0) {\r\n                    orderIds = selectedFormValue.DeliveryRequests.map(function (a) { return a[\"OrderId\"]; });\r\n                }\r\n            }\r\n            else {\r\n                orderIds.push(_orderId);\r\n            }\r\n            //this.dipTestLoader = true;\r\n            this.DGSubscription.add(this.sbService.getOrderBadgesByTerminal(orderIds, _pickupLocationType, _pickupLocationId).subscribe((data: any) => {\r\n                //this.dipTestLoader = false;\r\n                if (data && data.length > 0) {\r\n                    if (!isCommon) {\r\n                        if (this.SelectedDRForEditPickup.value.IsCommonBadge == false || (data[0].BadgeNo1 && data[0].BadgeNo1.length > 0) || (data[0].BadgeNo2 && data[0].BadgeNo2.length > 0) || (data[0].BadgeNo3 && data[0].BadgeNo3.length > 0)) {\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo1'].setValue(data[0].BadgeNo1);\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo2'].setValue(data[0].BadgeNo2);\r\n                            this.SelectedDRForEditPickup.controls['BadgeNo3'].setValue(data[0].BadgeNo3);\r\n                            this.SelectedDRForEditPickup.controls['IsCommonBadge'].setValue(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        let _drArray = this.SelectedDRForEditPickup.controls['DeliveryRequests'] as FormArray;\r\n                        _drArray.controls.forEach((_drForm: FormGroup) => {\r\n                            if (_drForm.value.OrderId && _drForm.value.OrderId > 0) {\r\n                                let badgeInfo = data.find(t => t.OrderId == _drForm.value.OrderId);\r\n                                if (_drForm.value.IsCommonBadge == false || (badgeInfo.BadgeNo1 && badgeInfo.BadgeNo1.length > 0) || (badgeInfo.BadgeNo2 && badgeInfo.BadgeNo2.length > 0) || (badgeInfo.BadgeNo3 && badgeInfo.BadgeNo3.length > 0)) {\r\n                                    _drForm.controls['BadgeNo1'].setValue(badgeInfo.BadgeNo1);\r\n                                    _drForm.controls['BadgeNo2'].setValue(badgeInfo.BadgeNo2);\r\n                                    _drForm.controls['BadgeNo3'].setValue(badgeInfo.BadgeNo3);\r\n                                    _drForm.controls['IsCommonBadge'].setValue(false);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                this.findDrWithSameProductAndJob(this.SelectedDRForEditPickup, _orderId, pickupLoc, this.SelectedDRForEditPickupIndex);\r\n            }));\r\n        }\r\n\r\n        let dismiss = document.getElementById('btnDrPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    private subscribeCommonPickupLocationChange_(): void {\r\n        this.DGSubscription.add(this.fmGroup.controls['IsCommonPickup'].valueChanges\r\n            .subscribe(x => {\r\n                x ? this.disableDeliveryGroupPickups_() : this.enableDeliveryGroupPickups_();\r\n                this.setCommonPickupFlag_();\r\n                this.setPickupValidators_(this.fmGroup, x);\r\n            }));\r\n    }\r\n    private PickupLocationTypeChange_(): void {\r\n        this.DGSubscription.add(this.PickupForm.controls['PickupLocationType'].valueChanges.subscribe((data) => {\r\n            this.PickupForm.markAllAsTouched;\r\n            this.PickupForm.markAsDirty();\r\n            this.setPickupValidators_(this.PickupForm, data);\r\n            let commonPickup = this.fmGroup.controls['IsCommonPickup'].value;\r\n            commonPickup ? this.disableDeliveryGroupPickups_() : this.enableDeliveryGroupPickups_();\r\n        }));\r\n    }\r\n    private disableDeliveryGroupPickups_(): void {\r\n        let _drArray = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].disable();\r\n                x.controls['BulkPlant'].disable();\r\n            });\r\n        }\r\n        if (this.fmGroup.controls['PickupLocationType'].value == 2) {\r\n            this.fmGroup.controls['BulkPlant'].enable();\r\n            this.fmGroup.controls['Terminal'].disable();\r\n\r\n        } else {\r\n            this.fmGroup.controls['BulkPlant'].disable();\r\n            this.fmGroup.controls['Terminal'].enable();\r\n        }\r\n    }\r\n    private enableDeliveryGroupPickups_(): void {\r\n        let _drArray = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        if (_drArray) {\r\n            _drArray.controls.forEach((x: FormGroup) => {\r\n                x.controls['Terminal'].enable();\r\n                x.controls['BulkPlant'].enable();\r\n            });\r\n        }\r\n        this.fmGroup.controls['BulkPlant'].disable();\r\n        this.fmGroup.controls['Terminal'].disable();\r\n    }\r\n    private unsubscribeAllSubscriptions_(): void {\r\n        if (this.DGSubscription) {\r\n            this.DGSubscription.unsubscribe();\r\n        }\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.subscribeCommonPickupLocationChange_();\r\n    }\r\n    // end\r\n    getSiteList() {\r\n        this.selectedCustomer = [];\r\n        this.selectedLocation = [];\r\n        this.companySiteList = [];\r\n        this.SiteList = [];\r\n        this.OrderList = [];\r\n        this.selectedOrder = [];\r\n\r\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n            this.loadingCustomers = true;\r\n            this.carrierService.getJobListForCarrier(this.SelectedRegionId).subscribe(t2 => {\r\n                this.companySiteList = t2 as CustomerJobsForCarrier[];\r\n                this.loadingCustomers = false;\r\n                let ele = document.getElementById('loadingCustomers');\r\n                if (ele) {\r\n                    ele.click()\r\n                }\r\n                this.loadDefaultLocations();\r\n            });\r\n        }\r\n    }\r\n\r\n    getAllDipTest() {\r\n        if (this.SelectedRegionId != null && this.SelectedRegionId != undefined && this.SelectedRegionId != '') {\r\n            this.clearRaiseRequests();\r\n            let regionId = this.SelectedRegionId;\r\n            this.dipTestLoader = true;\r\n            const customerId = this.SelectedCustomerId == null ? 0 : parseInt(this.SelectedCustomerId);\r\n            this.carrierService.getDipTests(null, this.SelectedRegionId, customerId, this.RequestFromBuyerWallyBoard, this.showForm).subscribe(data => {\r\n                this.DipTestsForEachTank = data;\r\n                this.dipTestLoader = false;\r\n                let companyId = this.getCustomerForJob();\r\n                if (data.length == 0 && companyId != \"\") {\r\n                    this.isTankExists = false;\r\n                    this.getOrdersForJob(0, companyId, regionId);\r\n                }\r\n                else {\r\n                    this.isTankExists = true;\r\n                    this.fillRaiseDrForm();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getDipTestForSite(_jobId: any, _regionId: any) {\r\n        this.clearRaiseRequests();\r\n        this.dipTestLoader = true;\r\n        const customerId = this.SelectedCustomerId == null ? 0 : parseInt(this.SelectedCustomerId);\r\n        this.carrierService.getDipTests(_jobId, _regionId, customerId, this.RequestFromBuyerWallyBoard, this.showForm).subscribe(data => {\r\n            this.DipTestsForEachTank = data;\r\n            let companyId = this.getCustomerForJob();\r\n\r\n            if (data.length == 0 && companyId != \"\") {\r\n                this.isTankExists = false;\r\n                this.getOrdersForJob(_jobId, companyId, _regionId);\r\n            }\r\n            else {\r\n                this.isTankExists = true;\r\n                let productIds: number[] = this.DipTestsForEachTank.map(x => x.ProductTypeId);\r\n                this.getProductExcludedOrdersForJob(this.SelectedLocationId, companyId, this.SelectedRegionId, productIds);\r\n            }\r\n        });\r\n    }\r\n\r\n    getOrdersForJob(_jobId: any, _customerId: any, _regionId: any) {\r\n        this.dipTestLoader = true;\r\n        let skipMarineConversion = false;\r\n        this.carrierService.getOrdersForJob(_jobId, _customerId, _regionId, skipMarineConversion).subscribe(data => {\r\n            if (data != null) {\r\n                \r\n                //US to USA\r\n                if (data.DeliveryReqInput && data.DeliveryReqInput.length > 0 && data.DeliveryReqInput.some(x => x.OrderPickupDetails && x.OrderPickupDetails.length > 0 && x.OrderPickupDetails.some(y => y.CountryCode == \"US\"))) {\r\n                    data.DeliveryReqInput.forEach((request: DipTestViewModel) => {\r\n                        request.OrderPickupDetails.forEach(p => {\r\n                            if (p.CountryCode == \"US\") \r\n                                p.CountryCode = \"USA\";\r\n                        })\r\n                    });\r\n                }\r\n\r\n                this.OrderList = data.OrderList;\r\n                this.selectedOrder = [];\r\n                this.OrderDetails = data.DeliveryReqInput;\r\n                this.DipTestsForEachTank = data.DeliveryReqInput.filter(t => t.ProductTypeId != additiveProductTypeId);\r\n            }\r\n            this.dipTestLoader = false;\r\n            this.showForm = true;\r\n            this.fillRaiseDrForm();\r\n        });\r\n    }\r\n\r\n    getUoM(_orderId: any, blendedRequest: FormGroup) {\r\n        if (_orderId) {\r\n            let order = this.additiveOrders.find(t => t.Id == _orderId);\r\n            if (order) {\r\n                blendedRequest.get('UoM').setValue(order.UoM);\r\n            }\r\n            else {\r\n                blendedRequest.get('UoM').setValue(this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM);\r\n            }\r\n        }\r\n        else {\r\n            blendedRequest.get('UoM').setValue(this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM);\r\n        }\r\n    }\r\n\r\n    //GET ORDERS EXCLUDING TANK PRODUCTS\r\n    getProductExcludedOrdersForJob(_jobId: any, _customerId: any, _regionId: any, productsToExclude: number[]) {\r\n        this.dipTestLoader = true;\r\n        let skipMarineConversion = false;\r\n        this.carrierService.getOrdersForJob(_jobId, _customerId, _regionId, skipMarineConversion, 0, productsToExclude).subscribe(data => {\r\n            if (data != null) {\r\n\r\n                //US to USA\r\n                if (data.DeliveryReqInput && data.DeliveryReqInput.length > 0 && data.DeliveryReqInput.some(x => x.OrderPickupDetails && x.OrderPickupDetails.length > 0 && x.OrderPickupDetails.some(y => y.CountryCode == \"US\"))) {\r\n                    data.DeliveryReqInput.forEach((request: DipTestViewModel) => {\r\n                        request.OrderPickupDetails.forEach(p => {\r\n                            if (p.CountryCode == \"US\")\r\n                                p.CountryCode = \"USA\";\r\n                        })\r\n                    });\r\n                }\r\n\r\n                this.OrderList = data.OrderList;\r\n                this.selectedOrder = [];\r\n                this.OrderDetails = data.DeliveryReqInput;\r\n                this.OtherProductDipTestsForEachTank = data.DeliveryReqInput;\r\n                //this.DipTestsForEachTank = this.DipTestsForEachTank.concat(data.DeliveryReqInput)\r\n            }\r\n            this.dipTestLoader = false;\r\n            this.showForm = true;\r\n            this.fillOtherProductRaiseDrForm();\r\n        });\r\n    }\r\n    //FILL DR FORM WITH OTHER PRODUCTS\r\n    fillOtherProductRaiseDrForm() {\r\n        let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n        let currentObj = this;\r\n        if (this.OtherProductDipTestsForEachTank != null && this.OtherProductDipTestsForEachTank != undefined && this.OtherProductDipTestsForEachTank.length > 0) {\r\n\r\n            this.DipTestsForEachTank = this.DipTestsForEachTank.concat(this.OtherProductDipTestsForEachTank);\r\n\r\n            this.DipTestsForEachTank.filter(t => t.ProductTypeId != additiveProductTypeId).forEach(function (element: DipTestViewModel, index: number) {\r\n                prods.push(currentObj.buildRaiseDRForm(element));\r\n            });\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        }\r\n        else {\r\n            this.fillRaiseDrForm();\r\n        }\r\n    }\r\n    \r\n    fillRaiseDrForm() {\r\n        let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n        let currentObj = this;\r\n        if (this.DipTestsForEachTank != null && this.DipTestsForEachTank != undefined) {\r\n            prods.clear();\r\n            this.DipTestsForEachTank.forEach(function (element: DipTestViewModel, index: number) {\r\n                prods.push(currentObj.buildRaiseDRForm(element));\r\n            });\r\n            if (!this.changeDetectorRef['destroyed']) {\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    openRaiseDrPanel() {\r\n        this.selectedLocation = [];\r\n        //this.BuyerCompanyName = \"\";\r\n        this.clearRaiseRequests();\r\n        this.getSiteList();\r\n        this.getAllDipTest();\r\n        this.getCreateDrSetting();\r\n    }\r\n\r\n    clearRaiseRequests() {\r\n        let controls = <FormArray>this.fmGroup.controls['DeliveryRequests'];\r\n        controls.clear();\r\n    }\r\n\r\n    createDR() {\r\n        this.showForm = true;\r\n        this.getAllDipTest();\r\n    }\r\n\r\n    loadTankDR(sales: SalesDataModel) {\r\n        this.SelectedRegionId = sales.RegionId;\r\n        this.SelectedLocationId = sales.TfxJobId.toString();\r\n        this.getSiteList();\r\n        this.selectedLocation = [];\r\n        this.clearRaiseRequests();\r\n        let job = new JobRegionModel();\r\n        job.Id = sales.TfxJobId;\r\n        job.Code = sales.SiteId;\r\n        job.Name = sales.SiteId;\r\n        job.LocationManagedType = sales.LocationManagedType;\r\n        this.selectedLocation = [job];\r\n        this.showForm = true;\r\n        this.getDipTestForSite(sales.TfxJobId, sales.RegionId);\r\n    }\r\n\r\n    buildRaiseDRForm(model: DipTestViewModel): FormGroup {\r\n        const orderPickupDetailsExist = (model.OrderPickupDetails && model.OrderPickupDetails.length > 0) ? true : false;\r\n        const blendOrderPickupDetailsExist = (model.BlendOrderPickupDetails && model.BlendOrderPickupDetails.length > 0) ? true : false;\r\n        const isTerminalPickup = orderPickupDetailsExist && model.OrderPickupDetails[0].PickupLocationType != 2;\r\n        let tanks = (model && model.Tanks && model.Tanks.length > 0) ? model.Tanks : [];\r\n        let _form = this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            SiteId: this.fb.control(model.SiteId == null ? model.JobId.toString() : model.SiteId),\r\n            JobId: this.fb.control(model.JobId),\r\n\r\n            TankId: this.fb.control(model.TankId),\r\n            StorageId: this.fb.control(model.StorageId),\r\n            ScheduleQuantityType: this.fb.control(1),\r\n            RequiredQuantity: this.fb.control(''),\r\n            IsTankAndAssetAvailableForJob: this.fb.control(model.IsTankAndAssetAvailableForJob),\r\n            IsMaxFillAllowed: this.fb.control(false),\r\n            IsReAssignToCarrier: this.fb.control(model.IsReAssignToCarrier),\r\n            Priority: this.fb.control(model.Priority.toLocaleString()),\r\n            CreatedByRegionId: this.fb.control(this.SelectedRegionId),\r\n            CurrentThreshold: this.fb.control(model.CurrentThreshold),\r\n            TankMaxFill: this.fb.control(model.TankMaxFill),\r\n            BuyerCompanyId: this.fb.control(model.BuyerCompanyId),\r\n            RecurringSchdule: this.fb.array([]),\r\n            CustomerCompany: this.fb.control(model.BuyerCompanyName),\r\n            isRecurringSchedule: this.fb.control(model.isRecurringSchedule),\r\n            PoNumber: this.fb.control(model.PoNumber),\r\n            TankName: this.fb.control(model.TankName),\r\n            Notes: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].DRNote : ''),\r\n            isRetainInfo: this.fb.control(false),\r\n            RetainInfo: this.fb.array([]),\r\n            IsRetainButtonClick: this.fb.control(false),\r\n            //isTankExists: this.fb.control(this.isTankExists),\r\n            SupplierCompanyId: this.fb.control((model.SupplierCompanies.length > 0) ? model.SupplierCompanies[0].Id : model.SupplierCompanyId),\r\n            SupplierCompanies: this.fb.control(model.SupplierCompanies),\r\n            RequestFromBuyerWallyBoard: this.fb.control(this.RequestFromBuyerWallyBoard),\r\n            IsCommonBadge: this.fb.control(model.IsCommonBadge),\r\n            BadgeNo1: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge1 : null),\r\n            BadgeNo2: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge2 : null),\r\n            BadgeNo3: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].Badge3 : null),\r\n            OrderId: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].OrderId : model.OrderId),\r\n            PickupLocationType: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails[0].PickupLocationType : null),\r\n            ProductTypeId: this.fb.control(model.ProductTypeId),\r\n            FuelTypeId: this.fb.control(model.FuelTypeId),\r\n            Terminal: this.utilService.getTerminalForm(null, false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(null, false),\r\n            OrderPickupDetails: this.fb.control(orderPickupDetailsExist ? model.OrderPickupDetails : []),\r\n            BlendOrderPickupDetails: this.fb.control(blendOrderPickupDetailsExist ? model.BlendOrderPickupDetails : []),\r\n            //BLENDED DR\r\n            IsBlendedRequest: this.fb.control(false),\r\n            BlendedRequests: this.fb.array([]),\r\n            IsCommonPickupForBlend: this.fb.control(false),\r\n            BlendedGroupId: this.fb.control(null),\r\n            Tanks: this.fb.control(tanks),\r\n            SelectedDate: this.fb.control(model.SelectedDate || moment(new Date()).format('MM/DD/YYYY')),\r\n            IsFutureDR: this.fb.control(false),\r\n            IsCalendarView: this.fb.control(false),\r\n            DeliveryLevelPO: this.fb.control(null),\r\n            ScheduleStartTime: this.fb.control(null),\r\n            ScheduleEndTime: this.fb.control(null),\r\n            IndicativePrice: this.fb.control(null),\r\n            //bind required API response in the form\r\n            ProductName: this.fb.control(model.ProductName),\r\n            JobName: this.fb.control(model.JobName),\r\n            DisplayCaptureTime: this.fb.control(model.DisplayCaptureTime),\r\n            TankCapacity: this.fb.control(model.TankCapacity),\r\n            UoM: this.fb.control(model.UoM),\r\n            NetVolume: this.fb.control(model.NetVolume),\r\n            Ullage: this.fb.control(model.Ullage),\r\n            ReorderQuantity: this.fb.control(model.ReorderQuantity),\r\n            DisplayDRDetails: this.fb.control(model.DisplayDRDetails),\r\n            ExistingDR: this.fb.control(model.ExistingDR),\r\n            BuyerCompanyName: this.fb.control(model.BuyerCompanyName),\r\n            IsDRExists: this.fb.control(model.IsDRExists),\r\n\r\n        });\r\n\r\n        if (orderPickupDetailsExist && isTerminalPickup) {\r\n            _form.controls['Terminal'].patchValue({ Id: model.OrderPickupDetails[0].TerminalId, Name: model.OrderPickupDetails[0].TerminalName });\r\n        }\r\n        else if (orderPickupDetailsExist) {\r\n            _form.controls['BulkPlant'].patchValue({\r\n                Address: model.OrderPickupDetails[0].Address,\r\n                City: model.OrderPickupDetails[0].City,\r\n                State: { Id: model.OrderPickupDetails[0].StateId, Code: model.OrderPickupDetails[0].StateCode },\r\n                Country: { Code: model.OrderPickupDetails[0].CountryCode },\r\n                ZipCode: model.OrderPickupDetails[0].ZipCode,\r\n                CountyName: model.OrderPickupDetails[0].CountyName,\r\n                Latitude: model.OrderPickupDetails[0].Latitude,\r\n                Longitude: model.OrderPickupDetails[0].Longitude,\r\n                SiteName: model.OrderPickupDetails[0].BulkplantName,\r\n                SiteId: model.OrderPickupDetails[0].SiteId\r\n            });\r\n        }\r\n        return _form;\r\n    }\r\n    buildRecurringSchedule(model: any) {\r\n\r\n        let selected = []\r\n        if (model.WeekDayId && model.WeekDayId.length > 0) {\r\n            selected = this.ScheduleDaysDetails.filter(s => model.WeekDayId.includes(s.id));\r\n        }\r\n        return this.fb.group({\r\n            Id: this.fb.control(model.Id),\r\n            ScheduleType: this.fb.control(model.ScheduleType),\r\n            WeekDayId: this.fb.control(model.WeekDayId),\r\n            TempWeekDayId: this.fb.control(selected),\r\n            MonthDayId: this.fb.control(model.MonthDayId),\r\n            Date: this.fb.control(model.Date == '' ? this.currentdate : model.Date),\r\n            ScheduleQuantityType: this.fb.control(model.ScheduleQuantityType),\r\n            RequiredQuantity: this.fb.control(model.RequiredQuantity),\r\n            TankName: this.fb.control(model.TankName),\r\n            IsBlendedProduct: this.fb.control(model.IsBlendedRequest),\r\n            RecurringBlendedGroupId: this.fb.control(getRecurringUniqueId()),\r\n            DeliveryLevelPO: this.fb.control(model.DeliveryLevelPO),\r\n        });\r\n    }\r\n    getDefaultRecurringScheduleDetails(TankName: string, IsBlendedRequest: boolean) {\r\n        return this.fb.group({\r\n            Id: this.fb.control(''),\r\n            ScheduleType: this.fb.control(1),\r\n            WeekDayId: this.fb.control([]),\r\n            TempWeekDayId: this.fb.control([]),\r\n            MonthDayId: this.fb.control(''),\r\n            Date: this.fb.control(this.currentdate),\r\n            ScheduleQuantityType: this.fb.control(1),\r\n            RequiredQuantity: this.fb.control(''),\r\n            TankName: this.fb.control(TankName),\r\n            IsBlendedProduct: this.fb.control(IsBlendedRequest),\r\n            RecurringBlendedGroupId: this.fb.control(getRecurringUniqueId()),\r\n            DeliveryLevelPO: this.fb.control(''),\r\n        });\r\n    }\r\n\r\n\r\n    public loadChart() {\r\n        // let siteId = this.SiteList.filter(t => t.Id == item.Id)[0].Code;\r\n        if (this.selectedLocation && this.selectedLocation.length > 0) {\r\n            this.chartdata = null;\r\n            this.isChartDataExistSubject.next(false);\r\n            let siteId = this.SiteList.filter(t => t.Id == this.selectedLocation[0].Id)[0].Code;\r\n            this.chartdata = { siteId: siteId, noOfDays: 3, tfxJobId: this.selectedLocation[0].Id };\r\n            this.isChartDataExistSubject.next(true);\r\n        }\r\n    }\r\n\r\n    public checkLocationAssignment(jobId: number) {\r\n        this.dipTestLoader = true;\r\n        this.carrierService.checkLocationAssignedToCarrier(jobId)\r\n            .subscribe((data: any) => {\r\n                this.dipTestLoader = false;\r\n                let result = data != null ? data.Result : null;\r\n                if (result != null && result.StatusCode == 0 && result.ResponseData != null && result.ResponseData != undefined) {\r\n                    if (result.ResponseData.IsLocationAssignedToCarrier) {\r\n                        this.FormValidationMessage = result.StatusMessage;\r\n                    }\r\n                    else {\r\n                        this.FormValidationMessage = \"\";\r\n                    }\r\n                }\r\n                else {\r\n                    this.FormValidationMessage = \"\";\r\n                }\r\n            });\r\n    }\r\n\r\n    public changeActiveTab(priority) {\r\n        this.activePriorityTab = priority;\r\n    }\r\n\r\n    public onSiteSelect(item: DropdownItem): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.showForm = true;\r\n        this.SelectedLocationId = item.Id.toString();\r\n        this.getDipTestForSite(item.Id, this.SelectedRegionId);\r\n\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.checkLocationAssignment(item.Id);\r\n        //this.getSalesData();\r\n        this.height_Panel = this.calHeight();\r\n        this.setLocationManagedType();\r\n    }\r\n\r\n    LocationManagedType = 0;\r\n    public setLocationManagedType() {\r\n        this.LocationManagedType = 0;\r\n        if (this.SiteList.length > 0 && this.selectedLocation.length > 0) {\r\n            this.LocationManagedType = this.SiteList.filter(t => t.Id == this.selectedLocation[0].Id)[0].LocationManagedType;\r\n        }\r\n    }\r\n\r\n    public calHeight() {\r\n        return this.viewportToPixels('100vh') - (this.elementFilter ? this.elementFilter.nativeElement.offsetHeight + 160 : 160);\r\n    }\r\n\r\n    public viewportToPixels(value) {\r\n        let parts = value.match(/([0-9\\.]+)(vh|vw)/)\r\n        let q = Number(parts[1])\r\n        let side = window[['innerHeight', 'innerWidth'][['vh', 'vw'].indexOf(parts[2])]]\r\n        return side * (q / 100)\r\n    }\r\n\r\n    public onSiteDeSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.selectedLocation = [];\r\n        this.selectedOrder = [];\r\n        this.OrderList = [];\r\n        //this.BuyerCompanyName = \"\";\r\n        this.clearRaiseRequests();\r\n        this.showForm = !(this.selectedLocation.length == 0)\r\n        this.chartdata = null;\r\n        this.isChartDataExistSubject.next(false);\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n        this.FormValidationMessage = \"\";\r\n        this.SelectedLocationId = null;\r\n        this.getAllDipTest();\r\n        this.LocationManagedType = 0;\r\n    }\r\n    public onSelectAll(item: any): void {\r\n        this.selectedOrder = item;\r\n        this.onOrderChange();\r\n    }\r\n\r\n    public onOrderChange(): void {\r\n        let ids = this.selectedOrder.map(t => t.Id);\r\n        this.clearRaiseRequests();\r\n        if (ids.length > 0) {\r\n            this.DipTestsForEachTank = this.OrderDetails.filter(t => ids.indexOf(t.OrderId) != -1);\r\n        }\r\n        else {\r\n            this.DipTestsForEachTank = this.OrderDetails;\r\n        }\r\n        this.fillRaiseDrForm();\r\n        this.showForm = true;\r\n        this.height_Panel = this.calHeight();\r\n    }\r\n\r\n    public onCustomerSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.selectedLocation = [];\r\n        this.selectedOrder = [];\r\n        this.SelectedCustomerId = item.CompanyId;\r\n        this.SiteList = this.companySiteList.find(x => x.CompanyId == item.CompanyId).Jobs;\r\n        this.getAllDipTest();\r\n        this.height_Panel = this.calHeight();\r\n    }\r\n\r\n    public onCustomerDeSelect(item: any): void {\r\n        this.OtherProductDipTestsForEachTank = [];\r\n        //this.showOtherProducts = false;\r\n        this.fmGroup.controls['IsTankNotAvailableForOrderProducts'].setValue(false);\r\n        this.SelectedCustomerId = null;\r\n        this.loadDefaultLocations();\r\n        this.OrderList = [];\r\n        this.onSiteDeSelect(item);\r\n    }\r\n\r\n    loadDefaultLocations() {\r\n        this.SiteList = [];\r\n        this.SiteList = this.companySiteList.reduce((j, cj) => [...j, ...cj.Jobs], []);\r\n    }\r\n\r\n    getCustomerForJob(): string {\r\n        let customerCompanyId: string = \"\";\r\n        if (this.SelectedCustomerId != null) {\r\n            customerCompanyId = this.SelectedCustomerId;\r\n        }\r\n        else if (this.SelectedLocationId != null) {\r\n            let jobId = parseInt(this.SelectedLocationId);\r\n            let company = this.companySiteList.find(t => t.Jobs.some(t1 => t1.Id == jobId));\r\n            if (company != undefined && company != null) {\r\n                customerCompanyId = company.CompanyId.toString();\r\n            }\r\n        }\r\n        return customerCompanyId;\r\n    }\r\n\r\n    public UpdateHeldDrCount() {\r\n        this.carrierService.updateHeldDrCount().subscribe((data: any) => {\r\n            if (data && data > 0) {\r\n                $(\"#heldDrIcon\").removeClass('hide');\r\n                $(\"#heldDrsCount\").text(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    public onSubmit(): void {\r\n        this.isUserSubmit = true;\r\n        let isSapRequest = false;\r\n        let _requests = this.fmGroup.get(\"DeliveryRequests\").value as any[];\r\n\r\n        if (_requests.length <= 0) {\r\n            Declarations.msgerror('No Tank found to raise DR', undefined, undefined);\r\n            return;\r\n        }\r\n        var delRequests: DeliveryRequestViewModel[] = [];\r\n        //TANK MAX FILL VALIDATION\r\n        let _invalidQuantityRequests = 0;\r\n        //VALID DR COUNT\r\n        let _validRequests = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidDays = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidDate = 0;\r\n        //INVALID DAYS FOR RECURRING DR\r\n        let _rsInvalidQuantity = 0;\r\n        _requests.forEach(function (request) {\r\n            if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && request.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed) {\r\n                _invalidQuantityRequests++;\r\n                delRequests.push(request);\r\n            }\r\n            else if (request.ScheduleQuantityType > 1 || request.isRecurringSchedule || request.RequiredQuantity > 0) {\r\n                _validRequests++;\r\n            }\r\n            if (request.isRecurringSchedule) {\r\n                if (request.RecurringSchdule.length > 0) {\r\n                    request.RecurringSchdule.forEach(function (rcs) {\r\n                        if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.TempWeekDayId.length == 0)) {\r\n                            _rsInvalidDays++;\r\n                        }\r\n                        else if (rcs.ScheduleType == 3 && !rcs.Date) {\r\n                            _rsInvalidDate++;\r\n                        }\r\n                        else if (!(rcs.RequiredQuantity > 0) && rcs.ScheduleQuantityType == 1) {\r\n                            _rsInvalidQuantity++;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        if (_invalidQuantityRequests > 0) {\r\n            if (delRequests.length > 0) {\r\n                this.sbService.postValidateDRMaxFill(delRequests).subscribe(response => {\r\n                });\r\n            }\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Required quantity is more than Max Fill.', undefined, undefined); return;\r\n\r\n        }\r\n        else if (_validRequests == 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please enter valid required quantity for at least one tank/order.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDays > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please select valid days for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDate > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Please select valid date for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantity > 0) {\r\n            this.isUserSubmit = false;\r\n            Declarations.msgerror('Invalid required quantity for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        if (this.preferenceSetting?.CreditCheckType == 1) {\r\n            let isValid = true;\r\n            isSapRequest = true;\r\n            _requests.forEach(function (request) {\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0 && (request.IndicativePrice <= 0 || request.IndicativePrice == null)) {\r\n                    Declarations.msgerror('Please enter Indicative Price.', undefined, undefined);\r\n                    isValid = false;\r\n                }\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0) {\r\n                    if (request.OrderId == null || request.OrderId == 0) {\r\n                        Declarations.msgerror('Please select Order', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                    if ((request.Terminal == null || request.Terminal.Id == 0) && (request.Bulkplant == null || request.Bulkplant.SiteId == 0)) {\r\n                        Declarations.msgerror('Please select Pick up location', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                }\r\n            });\r\n            if (!isValid) {\r\n                this.isUserSubmit = false;\r\n                return;\r\n            }\r\n        }\r\n        if (this.fmGroup.valid) {\r\n            this.dipTestLoader = true;\r\n            //bind common pickup to model\r\n            let model = this.fmGroup.getRawValue();\r\n            let drList = model.DeliveryRequests as any[] || [];\r\n            const isCommonPickup = model.IsCommonPickup;\r\n\r\n            drList.forEach(dr => {\r\n                if (isCommonPickup) {\r\n                    dr.PickupLocationType = model.PickupLocationType;\r\n                    if (model.PickupLocationType != 2)\r\n                        dr.Terminal = model.Terminal;\r\n                    else\r\n                        dr.BulkPlant = model.BulkPlant;\r\n                    if (dr.BlendedRequests) {\r\n                        dr.BlendedRequests.forEach(blendDr => {\r\n                            blendDr.PickupLocationType = model.PickupLocationType;\r\n                            if (model.PickupLocationType != 2)\r\n                                blendDr.Terminal = model.Terminal;\r\n                            else\r\n                                blendDr.BulkPlant = model.BulkPlant;\r\n                        })\r\n                    }\r\n                }\r\n                if (dr.IsCommonBadge) {\r\n                    dr.BadgeNo1 = model.BadgeNo1;\r\n                    dr.BadgeNo2 = model.BadgeNo2;\r\n                    dr.BadgeNo3 = model.BadgeNo3;\r\n                }\r\n                if (dr.PickupLocationType != 2) {\r\n                    dr.BulkPlant = null;\r\n                }\r\n                else {\r\n                    dr.Terminal = null;\r\n                }\r\n                dr.BlendedRequests.forEach(blendDr => {\r\n                    if (blendDr.PickupLocationType != 2)\r\n                        blendDr.BulkPlant = null;\r\n                    else\r\n                        blendDr.Terminal = null;\r\n                })\r\n                // reccuring dr week days\r\n                if (dr.isRecurringSchedule && dr.RecurringSchdule && dr.RecurringSchdule.length > 0) {\r\n                    dr.RecurringSchdule.forEach(rcs => {\r\n                        if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.TempWeekDayId.length > 0)) {\r\n                            rcs.WeekDayId = rcs.TempWeekDayId.map((day: any) => day.id.toString());\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            this.carrierService.postRaiseRequests(model).subscribe((data: any) => {\r\n                this.isUserSubmit = false;\r\n                if (data != null && parseInt(data.StatusCode) == 0) {\r\n                    this.displayMessage(data);\r\n                    closeSlidePanel();\r\n                    this.clearForm();\r\n                    this.getSiteList();\r\n                    if (!isSapRequest) {\r\n                        this.onRaiseDR.emit();\r\n                        this.emitDataForDRDisplay();\r\n                    }\r\n                    else {\r\n                        this.UpdateHeldDrCount();\r\n                    }\r\n                    this.dipTestLoader = false;\r\n                }\r\n                else {\r\n                    this.dipTestLoader = false;\r\n                    const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                    Declarations.msgerror(statusMessage, undefined, undefined);\r\n                }\r\n                if (!this.changeDetectorRef['destroyed']) {\r\n                    this.changeDetectorRef.detectChanges();\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.isUserSubmit = false;\r\n            this.IsLoading = false;\r\n            this.fmGroup.markAllAsTouched();\r\n        }\r\n    }\r\n    private displayMessage(data: any) {\r\n        if (data.StatusMessage.indexOf(this.messageSplitTag) != -1) {\r\n            let dataMessage = data.StatusMessage.split(this.messageSplitTag);\r\n            // Iterate through each value\r\n            for (var i = 0; i < dataMessage.length; i++) {\r\n                // Alert each number\r\n                if (dataMessage[i].indexOf(this.failedMessageIdentification) != -1) {\r\n                    let message = dataMessage[i].replace(this.failedMessageIdentification, '');\r\n                    Declarations.msgerror(message, undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgsuccess(dataMessage[i], undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n        }\r\n    }\r\n    private emitDataForDRDisplay() {\r\n        if (this.IsDrFromMultiWindow) {\r\n            this.OnRaiseDRFromMultiWindow.emit();\r\n        }\r\n    }\r\n\r\n    public onSingleSubmit(form: any): void {\r\n        let isSapRequest = false;\r\n        let request = form.value;\r\n        let _rsInvalidDays = 0;\r\n        let _rsInvalidDate = 0;\r\n        let _rsInvalidQuantity = 0;\r\n        let _rsInvalidQuantityMaxFill = 0;\r\n\r\n        if (request.isRecurringSchedule != true) {\r\n            if (request.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && request.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed) {\r\n                Declarations.msgerror('Required quantity is more than Max Fill.', undefined, undefined); return;\r\n            }\r\n            else if (request.ScheduleQuantityType == 1 && !(request.RequiredQuantity > 0)) {\r\n                Declarations.msgerror('Invalid required quantity.', undefined, undefined); return;\r\n            }\r\n            if (this.preferenceSetting?.CreditCheckType == 1) {\r\n                let isValid = true;\r\n                isSapRequest = true;\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0 && (request.IndicativePrice <= 0 || request.IndicativePrice == null)) {\r\n                    Declarations.msgerror('Please enter Indicative Price.', undefined, undefined);\r\n                    isValid = false;\r\n                }\r\n                if (request.ScheduleQuantityType == 1 && request.RequiredQuantity > 0) {\r\n                    if (request.OrderId == null || request.OrderId == 0) {\r\n                        Declarations.msgerror('Please select Order', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                    if ((request.Terminal == null || request.Terminal.Id == 0) && (request.Bulkplant == null || request.Bulkplant.SiteId == 0)) {\r\n                        Declarations.msgerror('Please select Pick up location', undefined, undefined);\r\n                        isValid = false\r\n                    }\r\n                }\r\n                if (!isValid) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else if (request.isRecurringSchedule == true) {\r\n\r\n            if (request.RecurringSchdule.length > 0) {\r\n                request.RecurringSchdule.forEach(function (rcs) {\r\n                    if ((rcs.ScheduleType == 1 || rcs.ScheduleType == 2) && (rcs.WeekDayId.length == 0)) {\r\n                        _rsInvalidDays++;\r\n                    }\r\n                    else if (rcs.ScheduleType == 3 && !rcs.Date) {\r\n                        _rsInvalidDate++;\r\n                    }\r\n                    else if (!(rcs.RequiredQuantity > 0) && rcs.ScheduleQuantityType == 1) {\r\n                        _rsInvalidQuantity++;\r\n                    }\r\n                    else if (rcs.ScheduleQuantityType == 1 && request.TankMaxFill > 0 && rcs.RequiredQuantity > request.TankMaxFill && !request.IsMaxFillAllowed && !request.IsMaxFillAllowed) {\r\n                        _rsInvalidQuantityMaxFill++;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                Declarations.msgerror('Invalid recurring schdule.', undefined, undefined); return;\r\n            }\r\n        }\r\n\r\n        if (_rsInvalidDays > 0) {\r\n            Declarations.msgerror('Please select valid days for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidDate > 0) {\r\n            Declarations.msgerror('Please select valid date for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantity > 0) {\r\n            Declarations.msgerror('Invalid required quantity for recurring schedule.', undefined, undefined); return;\r\n        }\r\n        else if (_rsInvalidQuantityMaxFill) {\r\n            Declarations.msgerror('Required quantity is more than Max Fill for recurring schedule.', undefined, undefined); return;\r\n        }\r\n\r\n        this.dipTestLoader = true;\r\n        this.carrierService.postRaiseRequest(request)\r\n            .subscribe((data: any) => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    if (!isSapRequest) {\r\n                        this.onRaiseDR.emit();\r\n                    }\r\n                    else {\r\n                        this.UpdateHeldDrCount();\r\n                    }\r\n                    this.dipTestLoader = false;\r\n                    //disable current submitt buttton\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                }\r\n            })\r\n    }\r\n    clearForm() {\r\n        this.fmGroup.reset();\r\n        this.clearRaiseRequests();\r\n        this.showForm = false;\r\n        this.FormValidationMessage = \"\";\r\n        // destroy chart\r\n        this.chartdata = null;\r\n        let element: HTMLElement = document.getElementById('idTankTab') as HTMLElement;\r\n        element ? element.click() : '';\r\n    }\r\n\r\n    removeTank(formIndex: number) {\r\n        let control = this.fmGroup.controls['DeliveryRequests'] as FormArray;\r\n        control.removeAt(formIndex);\r\n    }\r\n    subscribeDisableControlsSubject(): void {\r\n        if (this.DisableControlsSubscription) {\r\n            this.DisableControlsSubscription.unsubscribe();\r\n        }\r\n        this.DisableControlsSubscription = this.dataService.DisableDSBControlsSubject.subscribe(x => {\r\n            this.disableControl = x;\r\n        });\r\n    }\r\n    public addNewSchedule(product: any): void {\r\n        product.get(\"RecurringSchdule\").push(this.getDefaultRecurringScheduleDetails(product.get('TankName').value, product.get('IsBlendedRequest').value));\r\n        if (product.get('IsBlendedRequest').value) {\r\n            var totalQty = 0;\r\n            var blendedRequests = <FormArray>product.get('BlendedRequests');\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>product.get('RecurringSchdule');\r\n            deliveryReqControl.controls.forEach(x => {\r\n                if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                    x.get('RequiredQuantity').setValue(totalQty);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public enableSchedule(product: any, index: any): void {\r\n        if (!product.get('IsBlendedRequest').value) {\r\n            product.get('RequiredQuantity').setValue(null);\r\n            if (product.get('isRecurringSchedule').value === true) {\r\n                product.get('RequiredQuantity').disable();\r\n                product.get('ScheduleQuantityType').disable();\r\n                product.get('Priority').setValue(1);\r\n                $(\"#mustgo\" + index).prop(\"checked\", true);\r\n                let PoNumber = product.get('PoNumber').value == null ? \"\" : product.get('PoNumber').value;\r\n                let JobId = product.get('JobId').value;\r\n                let ProductTypeId = product.get('ProductTypeId').value;\r\n                let JobSiteId = product.get('SiteId').value == null ? \"\" : product.get('SiteId').value;\r\n                this.getRecurringSchedule(product, PoNumber, JobId, JobSiteId, ProductTypeId, index, product.get('IsBlendedRequest').value);\r\n\r\n            } else {\r\n                product.get('isRecurringSchedule').setValue(false);\r\n                product.get('RequiredQuantity').enable();\r\n                product.get('ScheduleQuantityType').enable();\r\n                $(\".showHide\" + index).hide();\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (product.get('isRecurringSchedule').value === true) {\r\n                let PoNumber = product.get('PoNumber').value == null ? \"\" : product.get('PoNumber').value;\r\n                let JobId = product.get('JobId').value;\r\n                let ProductTypeId = product.get('ProductTypeId').value;\r\n                let JobSiteId = product.get('SiteId').value == null ? \"\" : product.get('SiteId').value;\r\n                this.getRecurringSchedule(product, PoNumber, JobId, JobSiteId, ProductTypeId, index, product.get('IsBlendedRequest').value);\r\n\r\n            }\r\n            else {\r\n                $(\".showHide\" + index).hide();\r\n            }\r\n\r\n        }\r\n    }\r\n    public DeleteSchedule(product: any, index: any, Id: any) {\r\n        let recurringSchedule = <FormArray>product.get(\"RecurringSchdule\");\r\n        if (Id == '') {\r\n            if (index > -1) {\r\n                recurringSchedule.removeAt(index);\r\n                if (recurringSchedule.length == 0) {\r\n                    product.get('RequiredQuantity').enable();\r\n                    product.get('ScheduleQuantityType').enable();\r\n                    product.get('isRecurringSchedule').patchValue(false);\r\n                    $(\".showHide\" + index).hide();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.dipTestLoader = true;\r\n            this.carrierService.deleteRecurringScheduleDetails(Id).subscribe(data => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                    if (index > -1) {\r\n                        recurringSchedule.removeAt(index);\r\n                        if (recurringSchedule.length == 0) {\r\n                            product.get('RequiredQuantity').enable();\r\n                            product.get('ScheduleQuantityType').enable();\r\n                            product.get('isRecurringSchedule').patchValue(false);\r\n                            $(\".showHide\" + index).hide();\r\n                        }\r\n                    }\r\n                    this.onRaiseDR.emit();\r\n                    this.emitDataForDRDisplay();\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                    this.dipTestLoader = false;\r\n                }\r\n                if (!this.changeDetectorRef['destroyed'])\r\n                    this.changeDetectorRef.detectChanges();\r\n            });\r\n        }\r\n    }\r\n    public setSelectedDate($event: any, recurringSchedule: any) {\r\n        if ($event != '') {\r\n            recurringSchedule.get('Date').patchValue($event);\r\n        }\r\n    }\r\n    public onTagChanged($event: any, recurringSchedule: any) {\r\n        recurringSchedule.get('WeekDayId').patchValue($event);\r\n    }\r\n    public getRecurringSchedule(product: any, PoNumber: string, JobId: number, JobSiteId: string, productTypeId: number, index: number, IsBlendedRequest: false) {\r\n        //let AssetId = product.get('AssetId').value = null ? 0 : parseInt(product.get('AssetId').value);\r\n        let recurringScheduleControls = product.get('RecurringSchdule') as FormArray;\r\n        recurringScheduleControls.clear();//removing all controls from the RecurringSchdule from array\r\n        this.dipTestLoader = true;\r\n        this.carrierService.getRecurringScheduleDetails(JobId, PoNumber, JobSiteId, productTypeId).subscribe((data: any) => {\r\n            let dataLength = data.length;\r\n            $(\".showHide\" + index).show();\r\n            if (data.length > 0) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    recurringScheduleControls.push(this.buildRecurringSchedule(data[i]));\r\n                    if (dataLength == i + 1) {\r\n                        this.dipTestLoader = false;\r\n                        if (!this.changeDetectorRef['destroyed'])\r\n                            this.changeDetectorRef.detectChanges();\r\n\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.dipTestLoader = false;\r\n                recurringScheduleControls.push(this.getDefaultRecurringScheduleDetails(product.get('TankName').value, IsBlendedRequest));\r\n                if (!this.changeDetectorRef['destroyed'])\r\n                    this.changeDetectorRef.detectChanges();\r\n            }\r\n            var totalQty = 0;\r\n            var blendedRequests = <FormArray>product.get('BlendedRequests');\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>product.get('RecurringSchdule');\r\n            deliveryReqControl.controls.forEach(x => {\r\n                if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                    x.get('RequiredQuantity').setValue(totalQty);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeSalesGrid() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n        if (this.dtTrigger) {\r\n            this.dtTrigger.unsubscribe();\r\n            this.dtTrigger = new Subject();\r\n        }\r\n    }\r\n\r\n    public getSalesData() {\r\n        this.SalesData = [];\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\r\n        }\r\n        this.initializeSalesGrid();\r\n        let inputs = {\r\n            RegionId: this.SelectedRegionId,\r\n            Priority: DeliveryReqPriority.None,\r\n            CustomerId: this.getCustomerForJob(),\r\n            LocationId: this.SelectedLocationId,\r\n            SelectedTab: '',\r\n            Carriers: '',\r\n            IsShowCarrierManaged: '',\r\n            IsShowRetailJobs: '',\r\n            InventoryCaptureType: '',\r\n        };\r\n        this.isLoadingSubject.next(true);\r\n        this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\r\n            this.SalesData = resp;\r\n            this.isLoadingSubject.next(false);\r\n            this.dtTrigger.next();\r\n            // this.datatableRerender();\r\n        });\r\n    }\r\n\r\n    public onCaculateRetainWindow() {\r\n        if (this.isTankExists) {\r\n            let data = this.fmGroup.get('DeliveryRequests').value as any[];\r\n            if (data != null) {\r\n                // let tankinfo = data.filter(x => x.RequiredQuantity != '').map(x => {\r\n                //     return {\r\n                //         JobId: x.JobId,\r\n                //         siteId: x.SiteId == null ? x.JobId : x.SiteId,\r\n                //         tankId: x.TankId,\r\n                //         storageId: x.StorageId,\r\n                //         Id: x.AssetId,\r\n                //         Quantity: x.RequiredQuantity,\r\n                //     };\r\n                // });\r\n                let tankinfo = []\r\n                data.forEach((x) => {\r\n                    if (x && x.Tanks && x.Tanks.length > 0) {\r\n                        x.Tanks.forEach((tank: any) => {\r\n                            tankinfo.push({\r\n                                //JobId: x.JobId,\r\n                                Id: tank.AssetId,\r\n                                siteId: x.SiteId,\r\n                                storageId: tank.StorageId,\r\n                                tankId: tank.TankId,\r\n                                TankName: tank.TankName,\r\n                                Quantity: x.RequiredQuantity,\r\n                            })\r\n                        })\r\n                    }\r\n                });\r\n\r\n                if (tankinfo.length > 0) {\r\n                    this.dipTestLoader = true;\r\n                    if (IsBuyerCompany == false) {\r\n                        this.dispatcherService.calculateTankDetailsRetainWindowInfo(tankinfo).subscribe((resp: any[]) => {\r\n                            this.dipTestLoader = false;\r\n                            if (resp != null && resp.length > 0) {\r\n                                let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n                                this.updateRetainInfo(resp, prods);\r\n                            }\r\n                            if (!this.changeDetectorRef['destroyed'])\r\n                                this.changeDetectorRef.detectChanges();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.dispatcherService.calculateBuyerTankDetailsRetainWindowInfo(tankinfo).subscribe((resp: any) => {\r\n                            this.dipTestLoader = false;\r\n                            if (resp != null && resp.length > 0) {\r\n                                let prods = this.fmGroup.get('DeliveryRequests') as FormArray;\r\n                                this.updateRetainInfo(resp, prods);\r\n                            }\r\n                            if (!this.changeDetectorRef['destroyed'])\r\n                                this.changeDetectorRef.detectChanges();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public onSingleCaculateRetainWindow(form: any) {\r\n\r\n        let _product = form.value;\r\n        let Qty = _product[\"RequiredQuantity\"];\r\n\r\n        if ((Qty != '' || Qty != null) && _product.Tanks && _product.Tanks.length > 0) {\r\n\r\n            let tanks = _product.Tanks.map((tank: any) => {\r\n                return {\r\n                    Id: tank.AssetId,\r\n                    siteId: _product.SiteId,\r\n                    storageId: tank.StorageId,\r\n                    tankId: tank.TankId,\r\n                    TankName: tank.TankName,\r\n                    Quantity: _product.RequiredQuantity,\r\n                }\r\n            });\r\n\r\n            this.dipTestLoader = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.calculateTankDetailsRetainWindowInfo(tanks).subscribe((resp: any[]) => {\r\n                    this.dipTestLoader = false;\r\n                    if (resp != null && resp.length > 0) {\r\n                        this.updateRetainSingleInfo(resp, form);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed'])\r\n                        this.changeDetectorRef.detectChanges();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.calculateBuyerTankDetailsRetainWindowInfo(tanks).subscribe((resp: any) => {\r\n                    this.dipTestLoader = false;\r\n                    if (resp != null && resp.length > 0) {\r\n                        this.updateRetainSingleInfo(resp, form);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed'])\r\n                        this.changeDetectorRef.detectChanges();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public updateRetainInfo(resp: any[], products: FormArray) {\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n\r\n            let productForm = products.controls[i];\r\n            let productObj = productForm.value;\r\n\r\n            let SiteId = productObj.SiteId;\r\n            let assetIds: number[] = productObj.Tanks.map((tank: any) => { return tank.AssetId });\r\n            let TankIds: number[] = productObj.Tanks.map((tank: any) => { return tank.TankId });\r\n            let StorageIds: number[] = productObj.Tanks.map((tank: any) => { return tank.StorageId });\r\n\r\n            let tankDetails = resp.filter(top => top.siteId == SiteId && TankIds.includes(top.tankId) && StorageIds.includes(top.storageId) && assetIds.includes(top.Id));\r\n\r\n            let controls = <FormArray>productForm.get('RetainInfo');\r\n            controls.clear();\r\n\r\n            let currentObj = this;\r\n\r\n            if (tankDetails != null) {\r\n                productForm.get('isRetainInfo').setValue(true);\r\n\r\n                tankDetails.forEach(function (tank) {\r\n                    controls.push(currentObj.buildRetailInfoForm(tank));\r\n                });\r\n            }\r\n            else {\r\n                productForm.get('isRetainInfo').setValue(false);\r\n            }\r\n            productForm.get('IsRetainButtonClick').setValue(true);\r\n        }\r\n    }\r\n\r\n    buildRetailInfoForm(tank: any): FormGroup {\r\n        return this.fb.group({\r\n            RetainTime: this.fb.control(tank.RetainTime),\r\n            RetainDate: this.fb.control(tank.RetainDate),\r\n            WindowStartTime: this.fb.control(tank.WindowStartTime),\r\n            WindowStartDate: this.fb.control(tank.WindowStartDate),\r\n            WindowEndTime: this.fb.control(tank.WindowEndTime),\r\n            WindowEndDate: this.fb.control(tank.WindowEndDate),\r\n            TankName: this.fb.control(tank.TankName)\r\n        });\r\n    }\r\n\r\n    public updateRetainSingleInfo(resp: any[], productForm: any) {\r\n\r\n\r\n        let productObj = productForm.value;\r\n        let assetIds: number[] = productObj.Tanks.map((tank: any) => { return tank.AssetId });\r\n        let TankIds: number[] = productObj.Tanks.map((tank: any) => { return tank.TankId });\r\n        let StorageIds: number[] = productObj.Tanks.map((tank: any) => { return tank.StorageId });\r\n        let SiteId = productObj.SiteId == null ? productObj.JobId : productObj.SiteId;\r\n\r\n        let tankDetails = resp.filter(top => top.siteId == SiteId && TankIds.includes(top.tankId) && StorageIds.includes(top.storageId) && assetIds.includes(top.Id));\r\n\r\n        let controls = <FormArray>productForm.get('RetainInfo');\r\n        controls.clear();\r\n\r\n        if (tankDetails != null) {\r\n            productForm.controls['isRetainInfo'].setValue(true);\r\n\r\n            let _this = this;\r\n            tankDetails.forEach(function (tank) {\r\n                controls.push(_this.buildRetailInfoForm(tank));\r\n            });\r\n        }\r\n        else {\r\n            productForm.controls['isRetainInfo'].setValue(false);\r\n        }\r\n        productForm.controls['IsRetainButtonClick'].setValue(true);\r\n    }\r\n\r\n    public hideShowCommonBadgeArea() {\r\n\r\n        let deliveryRequests: any[] = this.fmGroup.get('DeliveryRequests').value as any[] || [];\r\n        if (deliveryRequests.some(dr => dr.IsCommonBadge)) {\r\n            this.IsCommonBadge = true;\r\n            this.fmGroup.controls['IsCommonBadge'].setValue(true);\r\n\r\n        } else {\r\n            this.IsCommonBadge = false;\r\n            this.fmGroup.controls['IsCommonBadge'].setValue(false);\r\n        }\r\n    }\r\n    getDefaultTBDForm() {\r\n        let TBDGroupID = \"TBD_\" + new Date().getUTCMilliseconds();\r\n        let _form = this.fb.group({\r\n            SelectedFuelType: this.fb.control([]),\r\n            SelectedOtherFuelType: this.fb.control([]),\r\n            Priority: this.fb.control(1),\r\n            PickupLocationType: this.fb.control(0),\r\n            Terminal: this.utilService.getTerminalForm(new DropdownItem(), false),\r\n            BulkPlant: this.utilService.getBulkPlantForm(new DropAddressModel(), false),\r\n            TBDGroupId: this.fb.control(TBDGroupID),\r\n            DeliveryRequests: this.fb.array([]),\r\n        });\r\n        return _form;\r\n    }\r\n    getTBDDeliveryRequestForm(x: any, productType: any) {\r\n        let _form = this.fb.group({\r\n            FuelTypeId: this.fb.control(x.Id),\r\n            FuelTypeName: this.fb.control(x.Name),\r\n            DRScheduleQuantityType: this.fb.control(1),\r\n            ProductTypeId: this.fb.control(productType.ProductTypeId),\r\n            ProductTypeName: this.fb.control(productType.ProductTypeName),\r\n            RequiredQty: this.fb.control(''),\r\n            BadgeNo1: this.fb.control(''),\r\n            BadgeNo2: this.fb.control(''),\r\n            BadgeNo3: this.fb.control(''),\r\n            Notes: this.fb.control(''),\r\n            DeliveryLevelPO: this.fb.control(''),\r\n        });\r\n        return _form;\r\n    }\r\n    getTBDDefaultData() {\r\n        this.Terminals = [];\r\n        this.StateList = [];\r\n        this.CountryList = [];\r\n        this.BulkPlants = [];\r\n        this.FuelTypeDetails = [];\r\n        this.OtherFuelTypeDetails = [];\r\n        this.TBDDeliveryRequestViewModel = new RaiseTBDDeliveryRequest();\r\n        this.isTBDUserSubmit = false;\r\n        this.TBDdipTestLoader = false;\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.addresService.getBulkPlants('').subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n        });\r\n      \r\n        this.DGSubscription.add(this.sbService.getTBDPickupTerminals('').subscribe((data: DropdownItem[]) => {\r\n            this.Terminals = data;\r\n        }));\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.clear();\r\n        this.carrierService.getDefaultTBDScheduleData().subscribe(data => {\r\n            this.FuelTypeDetails = data.MstProductTypes;\r\n            this.companyUoM = data.UoM;\r\n            this.OtherFuelTypeDetails = data.OtherProducts;\r\n            if (data.OtherProducts && data.OtherProducts.length > 0) {\r\n                this.otherProductTypeId = data.OtherProducts[0].ProductTypeId;\r\n            }\r\n            let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n            prods.push(this.getDefaultTBDForm());\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n    openRaiseTBDDrPanel() {\r\n        this.getTBDDefaultData();\r\n    }\r\n    public addTBDDR() {\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.push(this.getDefaultTBDForm());\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeSelect(item: any, product: FormGroup, isOtherProduct: boolean) {\r\n        let productType = this.getProductType(isOtherProduct, item);\r\n        let prodDeliveryRequests = product.get('DeliveryRequests').value;\r\n        let prodDeliveryRequestsFormArray = product.get('DeliveryRequests') as FormArray;\r\n        var prodExists = prodDeliveryRequests.find(x => x.FuelTypeId == item.Id && x.ProductTypeId == productType.ProductTypeId);\r\n        if (prodExists == null) {\r\n            prodDeliveryRequestsFormArray.push(this.getTBDDeliveryRequestForm(item, productType));\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeDeSelect(item: any, product: FormGroup, isOtherProduct: boolean) {\r\n        let productType = this.getProductType(isOtherProduct, item);\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        prodDeliveryRequests.controls.forEach((x1: FormGroup, index) => {\r\n            if (item.Id == x1.get('FuelTypeId').value && productType.ProductTypeId == x1.get('ProductTypeId').value) {\r\n                prodDeliveryRequests.removeAt(index);\r\n            }\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    onFuelTypeSelectAll(items: any, product: FormGroup, isOtherProduct: boolean): void {\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        let drs = prodDeliveryRequests.value;\r\n        items.forEach(x => {\r\n            let productType = this.getProductType(isOtherProduct, x);\r\n            if (drs.find(t => t.FuelTypeId == x.Id && t.ProductTypeId == productType.ProductTypeId) == null) {\r\n                prodDeliveryRequests.push(this.getTBDDeliveryRequestForm(x, productType));\r\n            }\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    onFuelTypeDeSelectAll(product: FormGroup, isOtherProduct: boolean): void {\r\n        let prodDeliveryRequests = product.get('DeliveryRequests') as FormArray;\r\n        let selectedDrs = this.fb.array([]);\r\n        prodDeliveryRequests.controls.forEach((x1: FormGroup, index) => {\r\n            let removeFuel = false;\r\n            if (isOtherProduct == true && x1.get('ProductTypeId').value == this.otherProductTypeId) {\r\n                removeFuel = true;\r\n            }\r\n            if (isOtherProduct == false && x1.get('ProductTypeId').value != this.otherProductTypeId) {\r\n                removeFuel = true;\r\n            }\r\n            if (removeFuel == false) {\r\n                selectedDrs.push(x1);\r\n            }\r\n        });\r\n        prodDeliveryRequests.clear();\r\n        selectedDrs.controls.forEach(t => {\r\n            prodDeliveryRequests.push(t);\r\n        });\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private getProductType(isOtherProduct: boolean, item: any) {\r\n        let productType;\r\n        if (isOtherProduct == false)\r\n            productType = this.FuelTypeDetails.find(t => t.Id == item.Id);\r\n\r\n        else\r\n            productType = this.OtherFuelTypeDetails.find(t => t.Id == item.Id);\r\n        return productType;\r\n    }\r\n\r\n    editTBDPickupLocation_(tdr: FormGroup, drIndex: number): void {\r\n        //this.PickupForm.get('Terminal').get('SelectedTerminal').setValue('');\r\n        this.SelectedTBDForEditPickupIndex = drIndex;\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedTBDForEditPickup = tdr;\r\n        let tempPickupLocationType = this.SelectedTBDForEditPickup.controls['PickupLocationType'].value;\r\n        if (tdr == null || tdr == undefined || tempPickupLocationType == null) {\r\n            this.SelectedTBDForEditPickup = this.fmTBDGroup;\r\n        }\r\n        let _pickupType = this.SelectedTBDForEditPickup.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = this.SelectedTBDForEditPickup.controls['Terminal'].value;\r\n        let _bulkPlant = this.SelectedTBDForEditPickup.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n        this.setPickupLocation_(this.SelectedTBDForEditPickup, location);\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n    }\r\n    updateTBDPickupLocation_() {\r\n        if (this.SelectedTBDForEditPickup != null) {\r\n            let pickupLoc = this.PickupForm.value;\r\n            this.SelectedTBDForEditPickup.patchValue(pickupLoc);\r\n            this.setPickupLocation_(this.SelectedTBDForEditPickup, pickupLoc);\r\n            let dismiss = document.getElementById('btnTBDDrPickupClose') as HTMLElement;\r\n            dismiss.click();\r\n            if (!this.changeDetectorRef['destroyed'])\r\n                this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    removeTBDDR(product: FormGroup, index: number) {\r\n        let prods = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        prods.removeAt(index);\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    removeSubTBDDR(product: FormGroup, index: number, FuelTypeId: number, productTypeId: number) {\r\n        let prods = product.get('DeliveryRequests') as FormArray;\r\n        prods.removeAt(index);\r\n        let selectedProductIds = [];\r\n        if (productTypeId == this.otherProductTypeId) {\r\n            let selectedOtherFuelType = product.get('SelectedOtherFuelType').value as [];\r\n            selectedOtherFuelType.forEach((xf1: any) => {\r\n                if (xf1.Id != FuelTypeId) {\r\n                    selectedProductIds.push(xf1);\r\n                }\r\n            });\r\n            product.get('SelectedOtherFuelType').setValue(selectedProductIds);\r\n        }\r\n        else {\r\n            let selectedFuelType = product.get('SelectedFuelType').value as [];\r\n            selectedFuelType.forEach((xf1: any) => {\r\n                if (xf1.Id != FuelTypeId) {\r\n                    selectedProductIds.push(xf1);\r\n                }\r\n            });\r\n            product.get('SelectedFuelType').setValue(selectedProductIds);\r\n        }\r\n        if (!this.changeDetectorRef['destroyed'])\r\n            this.changeDetectorRef.detectChanges();\r\n    }\r\n    clearTBDForm() {\r\n        this.fmTBDGroup.reset();\r\n        this.clearRaiseRequests();\r\n    }\r\n    clearTBDRaiseRequests() {\r\n        let controls = <FormArray>this.fmTBDGroup.controls['ScheduleTBDForm'];\r\n        controls.clear();\r\n    }\r\n    SubmitTBDData() {\r\n        this.TBDDeliveryRequestViewModel.DeliveryRequests = [];\r\n        var isValid = true;\r\n        let tbdForm = this.fmTBDGroup.get('ScheduleTBDForm') as FormArray;\r\n        tbdForm.controls.forEach((product: FormGroup) => {\r\n            let prodDeliveryReq = product.get('DeliveryRequests') as FormArray;\r\n            let TBDGroupID = product.get('TBDGroupId').value;\r\n            if (prodDeliveryReq.controls.length > 0) {\r\n                let pickupLocationType = product.get('PickupLocationType').value;\r\n                if (pickupLocationType != null && pickupLocationType != 0) {\r\n                    prodDeliveryReq.controls.forEach((prodDR: FormGroup) => {\r\n                        let deliveryReq = new TBDRaiseDRDeliveryRequests();\r\n                        deliveryReq.FuelTypeId = prodDR.get('FuelTypeId').value;\r\n                        deliveryReq.FuelType = prodDR.get('FuelTypeName').value;\r\n                        deliveryReq.ProductType = prodDR.get('ProductTypeName').value;\r\n                        deliveryReq.ProductTypeId = prodDR.get('ProductTypeId').value;\r\n                        deliveryReq.Priority = product.get('Priority').value;\r\n                        deliveryReq.DeliveryLevelPO = prodDR.get('DeliveryLevelPO').value;\r\n                        let fuelTypeExists = this.TBDDeliveryRequestViewModel.DeliveryRequests.findIndex(x => x.FuelTypeId == deliveryReq.FuelTypeId && x.TBDGroupId == TBDGroupID);\r\n                        if (fuelTypeExists == -1) {\r\n                            deliveryReq.ScheduleQuantityType = prodDR.get('DRScheduleQuantityType').value;\r\n                            if (prodDR.get('DRScheduleQuantityType').value == 1) {\r\n                                if (prodDR.get('RequiredQty').value == '' || prodDR.get('RequiredQty').value == 0) {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Quantity required for fuel type.' + prodDR.get('FuelTypeName').value, undefined, undefined);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    deliveryReq.RequiredQuantity = prodDR.get('RequiredQty').value;\r\n                                }\r\n                            }\r\n                            deliveryReq.TBDGroupId = TBDGroupID;\r\n                            deliveryReq.CreatedByRegionId = this.SelectedRegionId;\r\n                            deliveryReq.AssignedToRegionId = this.SelectedRegionId;\r\n                            deliveryReq.UoM = this.companyUoM;\r\n                            deliveryReq.PickupLocationType = pickupLocationType;\r\n                            if (deliveryReq.PickupLocationType == 1) {\r\n                                deliveryReq.Terminal = product.get('Terminal').value;\r\n                                if (deliveryReq.Terminal.Id <= 0 || deliveryReq.Terminal.Name == null || deliveryReq.Terminal.Name == '') {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            else {\r\n                                deliveryReq.Bulkplant = product.get('BulkPlant').value;\r\n                                if (deliveryReq.Bulkplant == null || deliveryReq.Bulkplant.SiteName == null || deliveryReq.Bulkplant.SiteName == '' ||\r\n                                    deliveryReq.Bulkplant.Address == null || deliveryReq.Bulkplant.ZipCode == null) {\r\n                                    isValid = false;\r\n                                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            deliveryReq.BadgeNo1 = prodDR.get('BadgeNo1').value;\r\n                            deliveryReq.BadgeNo2 = prodDR.get('BadgeNo2').value;\r\n                            deliveryReq.BadgeNo3 = prodDR.get('BadgeNo3').value;\r\n                            deliveryReq.Notes = prodDR.get('Notes').value;\r\n                            this.TBDDeliveryRequestViewModel.DeliveryRequests.push(deliveryReq);\r\n                        }\r\n                        else {\r\n                            isValid = false;\r\n                            Declarations.msgerror('Fuel type already exists : ' + prodDR.get('FuelTypeName').value, undefined, undefined);\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    isValid = false;\r\n                    Declarations.msgerror('Pickup location information is required.', undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        });\r\n        if (isValid) {\r\n            if (this.TBDDeliveryRequestViewModel.DeliveryRequests.length > 0) {\r\n                this.isTBDUserSubmit = true;\r\n                this.TBDdipTestLoader = true;\r\n                let inputdata = { DeliveryRequests: this.TBDDeliveryRequestViewModel.DeliveryRequests };\r\n                this.carrierService.postRaiseRequests(inputdata as any).subscribe((data: any) => {\r\n                    this.isTBDUserSubmit = false;\r\n                    if (data != null && parseInt(data.StatusCode) == 0) {\r\n                        this.displayMessage(data);\r\n                        closeSlidePanel();\r\n                        this.clearTBDForm();\r\n                        this.onRaiseDR.emit();\r\n                        this.emitDataForDRDisplay();\r\n                        this.TBDdipTestLoader = false;\r\n                    }\r\n                    else {\r\n                        this.TBDdipTestLoader = false;\r\n                        const statusMessage = data == null ? 'Failed' : data.StatusMessage;\r\n                        Declarations.msgerror(statusMessage, undefined, undefined);\r\n                    }\r\n                    if (!this.changeDetectorRef['destroyed']) {\r\n                        this.changeDetectorRef.detectChanges();\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                Declarations.msgerror('TBD DRs required for creating delivery requests.', undefined, undefined);\r\n            }\r\n        }\r\n    }\r\n    public deletePickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n    OnCountryChanged(eventData: any) {\r\n        let selectedCountryCode = eventData.target.value;\r\n        let selectedCountryId = this.getCountryIdFromCode(selectedCountryCode);\r\n        this.setBulkPlantAddressValidators(selectedCountryId);\r\n    }\r\n\r\n    getCountryIdFromCode(countryCode: any): number {\r\n        let selectedCountryId = 1;\r\n        if (countryCode == \"CAN\" || countryCode == \"CA\") {\r\n            selectedCountryId = 2;\r\n        }\r\n        else if (countryCode == \"CAR\") {\r\n            selectedCountryId = 4;\r\n        }\r\n        return selectedCountryId;\r\n    }\r\n\r\n    setBulkPlantAddressValidators(countryId: number) {\r\n        let isCarribean = countryId == 4 ? true : false;\r\n        let form = this.PickupForm;\r\n        form.get('BulkPlant.Address').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.Address').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.City').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.City').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.ZipCode').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.ZipCode').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.CountyName').setValidators(!isCarribean ? [Validators.required] : null);\r\n        form.get('BulkPlant.CountyName').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.Latitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Latitude').updateValueAndValidity();\r\n\r\n        form.get('BulkPlant.Longitude').setValidators(!isCarribean ? [Validators.required, Validators.pattern('^[0-9.-]*$')] : null);\r\n        form.get('BulkPlant.Longitude').updateValueAndValidity();\r\n    }\r\n    public deleteTBDPickupInfo(terminalInfo: any) {\r\n        if (terminalInfo.get('Id').value) {\r\n            terminalInfo.get('Id').patchValue(0);\r\n            terminalInfo.get('Name').patchValue('');\r\n        }\r\n    }\r\n    onTBDTerminalSearched_(event: any): void {\r\n\r\n        let keyword = event.target.value.toLowerCase();\r\n\r\n        this.TBDTerminals = this.Terminals;\r\n        if (keyword != '') {\r\n            this.TBDTerminals = this.Terminals.filter(tr => tr.Name.toLowerCase().indexOf(keyword) != -1);\r\n        }\r\n    }\r\n\r\n    ///////////////////////////BLENDED REQUEST START///////////////////////////\r\n\r\n    getUnUsedOrdersForBlendedRequest(currentOrder: number) {\r\n        let currentDrForm = this.blendRequestForm;\r\n        let drValue = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].value;\r\n        let isTank = drValue.StorageId != null && drValue.StorageId != '';\r\n        let orderList: any[] = [];\r\n        if (isTank == false) {\r\n            let compatibleProductTypesModel = this.CompatibleProductTypeList.find(t => t.ProductTypeId == drValue.ProductTypeId);\r\n            let compatibleProductTypes: number[] = [drValue.ProductTypeId];\r\n            if (compatibleProductTypesModel && compatibleProductTypesModel.MappedToProductTypeIds) {\r\n                compatibleProductTypes = compatibleProductTypes.concat(compatibleProductTypesModel.MappedToProductTypeIds);\r\n            }\r\n            orderList = this.OrderDetails.filter(t => compatibleProductTypes.includes(t.ProductTypeId));\r\n        }\r\n        else {\r\n            orderList = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].controls['BlendOrderPickupDetails'].value as any[];\r\n        }\r\n        let ordersToRemove = currentDrForm.get('BlendedRequests').value as BlendedRequest[];//orders selected in blend form\r\n        ordersToRemove = ordersToRemove.filter(function (obj) { return obj.OrderId != currentOrder; });\r\n        let productToRemove = orderList.filter(s => ordersToRemove.find(s2 => s2.OrderId == s.OrderId));\r\n        return orderList.filter((x => currentOrder == x.OrderId || !productToRemove.some(y => y.FuelTypeId == x.FuelTypeId)));\r\n    };\r\n\r\n    getUnUsedBlendOrders(currentOrder: number) {\r\n\r\n        let blendRequests = this.blendRequestForm.get('BlendedRequests').value as BlendedRequest[];\r\n        blendRequests = blendRequests.filter(b => b.IsAdditive && b.OrderId && b.OrderId != currentOrder);\r\n        let ordersToRemove = blendRequests.map(b => b.OrderId);\r\n\r\n        return this.additiveOrders.filter((x => currentOrder == x.Id || !ordersToRemove.some(orderId => orderId == x.Id)));\r\n    };\r\n\r\n    openBlendRequestForm(dr: FormGroup, drIndex: number) {\r\n        this.DrForEditBlendedRequestIndex = drIndex;\r\n        this.copyBlendForm(<FormArray>dr.get('BlendedRequests'), <FormArray>this.blendRequestForm.get('BlendedRequests'));\r\n        document.getElementById('openBlendModalButton').click();\r\n    }\r\n\r\n    orderChangedForBlendRequest(_orderId: any, blendedRequest: FormGroup): void {\r\n        let parentDr = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex];\r\n        let orders = parentDr.get('BlendOrderPickupDetails').value as any[] || [];\r\n        blendedRequest.get('ProductTypeId').setValue(null);\r\n        var order = this.OrderDetails.find(t => t.OrderId == _orderId);\r\n        if (order) {\r\n            blendedRequest.get('UoM').setValue(order.UoM);\r\n        }\r\n        else {\r\n            order = orders.find(t => t.OrderId == _orderId);\r\n            if (order) {\r\n                blendedRequest.get('UoM').setValue(order.UoM);\r\n            }\r\n        }\r\n        let selectedOrder = null;\r\n        if (!orders || orders.length == 0) {\r\n            if (order) {\r\n                orders = order.OrderPickupDetails as any[] || [];\r\n                if (orders && orders.length > 0) {\r\n                    selectedOrder = orders[0];\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (orders.length > 0) {\r\n            selectedOrder = orders.find(x => x.OrderId == _orderId);\r\n            if (!selectedOrder) {\r\n                if (order && order.BlendOrderPickupDetails) {\r\n                    selectedOrder = order.BlendOrderPickupDetails.find(x => x.OrderId == _orderId);\r\n                }\r\n            }\r\n        }\r\n        if (selectedOrder) {\r\n            let location = OrderPickupLocationModel.ToLocation(selectedOrder);\r\n            this.setPickupLocationForBlendRequest(blendedRequest, location);\r\n            if (selectedOrder.ProductTypeId) {\r\n                blendedRequest.get('ProductTypeId').setValue(selectedOrder.ProductTypeId);\r\n            }\r\n            else {\r\n                blendedRequest.get('ProductTypeId').setValue(parentDr.get('ProductTypeId').value);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCreateDrSetting() {\r\n        if (!this.preferenceSetting) {\r\n            this.carrierService.getCreateDrSetting().subscribe(response => {\r\n                this.preferenceSetting = response;\r\n            });\r\n        }\r\n    }\r\n\r\n    getCompatibleProducts() {\r\n        if (this.CompatibleProductTypeList.length == 0) {\r\n            this.carrierService.getCompatibleProductTypes().subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.CompatibleProductTypeList = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getAdditiveOrders() {\r\n        if (this.additiveOrders.length == 0) {\r\n            this.carrierService.getAdditiveOrders(this.SelectedRegionId).subscribe(response => {\r\n                if (response && response.length > 0) {\r\n                    this.additiveOrders = response;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    setPickupLocationForBlendRequest(delReq: FormGroup, order: OrderPickupLocationModel): void {\r\n        delReq.controls['PickupLocationType'].patchValue(order.PickupLocationType);\r\n        if (order.PickupLocationType != 2) {\r\n            if (order.Terminal) {\r\n                delReq.controls['Terminal'].patchValue(order.Terminal);\r\n            }\r\n            // this.PickupForm.controls['PickupLocationType'].patchValue(1);\r\n            // this.PickupForm.controls['Terminal'].patchValue(order.Terminal);\r\n        } else {\r\n            if (order.BulkPlant) {\r\n                if (order.BulkPlant.ZipCode) {\r\n                    order.BulkPlant.ZipCode = order.BulkPlant.ZipCode.toUpperCase();\r\n                }\r\n                delReq.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n            }\r\n            // this.PickupForm.controls['PickupLocationType'].patchValue(2);\r\n            // this.PickupForm.controls['BulkPlant'].patchValue(order.BulkPlant);\r\n        }\r\n    }\r\n\r\n    onBlendChange(IsBlendedRequest: boolean, dr: FormGroup) {\r\n\r\n        let blendedRequests = dr.get('BlendedRequests') as FormArray;\r\n        blendedRequests.clear();\r\n\r\n        if (IsBlendedRequest) {\r\n            this.getCompatibleProducts();\r\n            this.getAdditiveOrders();\r\n\r\n            blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(false)));\r\n            blendedRequests.push(this.utilService.getBlendRequestFormGroup(new BlendedRequest(true)));\r\n\r\n            dr.get('RequiredQuantity').setValidators([Validators.required, Validators.min(NumberConstants.MinQuantity)]);\r\n            dr.get('RequiredQuantity').updateValueAndValidity();\r\n\r\n            dr.get('BlendedGroupId').setValue(getUniqueId());\r\n            if (dr.get('isRecurringSchedule').value) {\r\n                dr.get('isRecurringSchedule').setValue(false);\r\n                dr.get('RequiredQuantity').enable();\r\n                dr.get('ScheduleQuantityType').enable();\r\n            }\r\n        }\r\n        else {\r\n            dr.get('RequiredQuantity').setValidators([]);\r\n            dr.get('RequiredQuantity').updateValueAndValidity();\r\n\r\n            dr.get('BlendedGroupId').setValue(null);\r\n        }\r\n        /*dr.get('SelectedDate').setValue(moment(new Date()).format('MM/DD/YYYY'));*/\r\n        dr.get('ScheduleStartTime').setValue(null);\r\n        dr.get('ScheduleEndTime').setValue(null);\r\n\r\n    }\r\n\r\n    getRequiredDataForPickupDetails() {\r\n\r\n        if (!this.CountryList || this.CountryList.length == 0) {\r\n            this.stateService.getCountries().subscribe(x => this.CountryList = x);\r\n        }\r\n        if (!this.CountryGroupList || this.CountryGroupList.length == 0) {\r\n            this.stateService.getCountryGroup(4).subscribe(x => this.CountryGroupList = x);\r\n        }\r\n        if (!this.StateList || this.StateList.length == 0) {\r\n            this.stateService.getStates().subscribe(x => { this.StateList = x; this.changeDetectorRef.detectChanges(); })\r\n        }\r\n    }\r\n\r\n    editPickupLocationForBlend(blendDrIndex: number): void {\r\n\r\n        this.BlendDrIndex = blendDrIndex;\r\n        this.SelectedDRForEditPickupIndex = this.DrForEditBlendedRequestIndex;\r\n        let tdr = this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex];\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n\r\n        this.getRequiredDataForPickupDetails();\r\n\r\n        this.ChangePickupForOrders = [];\r\n        this.SelectedDRForEditPickup = blendDr;\r\n\r\n\r\n        let _orderId = blendDr.controls['OrderId'].value as number;\r\n       \r\n        if (_orderId > 0) {\r\n            this.ChangePickupForOrders.push(_orderId);\r\n            let existingOrders = tdr.get('OrderPickupDetails').value || [];\r\n            let orders = existingOrders.filter(t => t.OrderId == _orderId);\r\n            if (orders.length > 0) {\r\n                let lastIndex = orders[0].PoNumber.lastIndexOf(\" - \");\r\n                this.SearchTerminalFuelType = orders[0].PoNumber.slice(0, lastIndex + 1);\r\n            }\r\n        }\r\n\r\n\r\n        let _pickupType = blendDr.controls['PickupLocationType'].value;\r\n        _pickupType = _pickupType == 0 ? 1 : _pickupType;\r\n        let _terminal = blendDr.controls['Terminal'].value;\r\n        let _bulkPlant = blendDr.controls['BulkPlant'].value;\r\n        let location = {\r\n            PickupLocationType: _pickupType,\r\n            Terminal: _terminal,\r\n            BulkPlant: _bulkPlant\r\n        };\r\n\r\n        this.setPickupLocation_(this.SelectedDRForEditPickup, location);\r\n\r\n        //to get bulk plant for auto order\r\n        let orderForBulkPlant = 0;\r\n        if (tdr) {\r\n            orderForBulkPlant = this.SelectedDRForEditPickup.controls['OrderId'].value as number;\r\n        }\r\n\r\n        this.addresService.getBulkPlants('', orderForBulkPlant).subscribe(data => {\r\n            this.BulkPlants = data.slice();\r\n            this.BulkplantList = data;\r\n\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.some(t => t.Name == bulkPlantName);\r\n        });\r\n        \r\n        if (this.ChangePickupForOrders.length > 0) {\r\n            this.DGSubscription.add(this.sbService.getPickupTerminals(this.ChangePickupForOrders, '').subscribe((data: DropdownItem[]) => {\r\n                this.Terminals = data;\r\n            }));\r\n        }\r\n        else {\r\n            this.Terminals = [];\r\n        }\r\n\r\n        if (this.BulkPlants) {\r\n            let bulkPlantName = this.PickupForm.get('BulkPlant.SiteName').value;\r\n            this.isReadOnly = this.BulkPlants.filter(t => t.Name == bulkPlantName).length > 0;\r\n        }\r\n\r\n        if (location.PickupLocationType == 2) {\r\n            if (this.SelectedDRForEditPickup.controls['BulkPlant'].value) {\r\n                let bulkPlant = this.SelectedDRForEditPickup.controls['BulkPlant'].value;\r\n                if (bulkPlant.Country) {\r\n                    let countryCode = bulkPlant.Country.Code\r\n                    if (countryCode) {\r\n                        this.setBulkPlantAddressValidators(this.getCountryIdFromCode(countryCode));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePickupLocationForBlend() {\r\n\r\n        let blendDr = this.blendRequestForm.get('BlendedRequests')['controls'][this.BlendDrIndex];\r\n        this.DrForEditBlendedRequest = null;\r\n\r\n        if (this.SelectedDRForEditPickup != null && blendDr != null) {\r\n            this.setPickupLocation_(blendDr, this.PickupForm.value);\r\n        }\r\n\r\n        this.IsPickupForBlendRequest = false;\r\n        let dismiss = document.getElementById('btnDrPickupClose') as HTMLElement;\r\n        dismiss.click();\r\n    }\r\n\r\n    addRemoveBlendedProduct(addNewRow: boolean, index: number, isAdditive: boolean = false) {\r\n\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n        if (addNewRow) {\r\n\r\n            let _model = new BlendedRequest(isAdditive);\r\n            _model.IsBlendedRequest = true;\r\n            let additiveCount = this.getAdditiveCountInBlend();\r\n\r\n            if (!isAdditive && additiveCount > 0) {\r\n                _blendedRequests.insert(+_blendedRequests.controls.length - additiveCount, this.utilService.getBlendRequestFormGroup(_model));\r\n            } else {\r\n                _blendedRequests.push(this.utilService.getBlendRequestFormGroup(_model));\r\n            }\r\n        }\r\n        else {\r\n            _blendedRequests.removeAt(index);\r\n        }\r\n    }\r\n\r\n    getAdditiveCountInBlend() {\r\n        let _blendedRequests = <any[]>this.blendRequestForm.get('BlendedRequests').value;\r\n        return _blendedRequests.filter(b => b.IsAdditive).length;\r\n    }\r\n\r\n    blendDrQuantityChanged(enteredQuantity: number, blendIndex: number) {\r\n        let parentQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('QuantityInPercent').setValue((+enteredQuantity / parentQuantity) * 100);\r\n    }\r\n\r\n    blendDrPercentChanged(percent: number, blendIndex: number) {\r\n        let parentQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n        let blendedRequest = <FormGroup>this.blendRequestForm.get('BlendedRequests')['controls'][blendIndex];\r\n        blendedRequest.get('RequiredQuantity').setValue((+percent / 100) * parentQuantity);\r\n    }\r\n\r\n    clearQuantityAndPercentage(blendIndex?: number) {\r\n        if (blendIndex == null) {\r\n            blendIndex = -1;\r\n        }\r\n        let _blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        _blendedRequests.controls.forEach((b: FormGroup, index: number) => {\r\n            if (index > blendIndex && !b.get('IsAdditive').value) {\r\n                b.get('RequiredQuantity').setValue(null);\r\n                b.get('QuantityInPercent').setValue(null);\r\n            }\r\n        })\r\n    }\r\n\r\n    isBlendedRequestQuantityValid() {\r\n\r\n        if (this.blendRequestForm.valid) {\r\n\r\n            let totalQuantity = 0;\r\n            let _blendedRequests: BlendedRequest[] = this.blendRequestForm.get('BlendedRequests').value;\r\n            _blendedRequests.forEach((b: BlendedRequest, index: number) => {\r\n                if (!b.IsAdditive) {\r\n                    totalQuantity = +totalQuantity + +b.RequiredQuantity;\r\n                }\r\n            });\r\n\r\n            let RequiredQuantity = <number>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RequiredQuantity').value;\r\n            return (totalQuantity == RequiredQuantity) || (Math.abs(RequiredQuantity - totalQuantity) < 1);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onBlendTotalQuantityChange(totalQuantity: number, blendedRequests: FormArray) {\r\n\r\n        if (totalQuantity) {\r\n\r\n            let blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n\r\n            blendedRequests.controls.forEach((b: FormGroup) => {\r\n                if (!b.get('IsAdditive').value && +b.get('QuantityInPercent').value > 0) {\r\n                    b.get('RequiredQuantity').setValue((+b.get('QuantityInPercent').value / 100) * totalQuantity);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.clearQuantityAndPercentage();\r\n        }\r\n    }\r\n\r\n    copyBlendForm(formA: FormArray, formB: FormArray) {\r\n        formB.clear();\r\n        formA.controls.forEach(a => {\r\n            formB.push(this.utilService.getBlendRequestFormGroup(a.value));\r\n        })\r\n    }\r\n\r\n    OnSelectedDateChange(dr: FormGroup, scheduleDate: string) {\r\n        if (scheduleDate != dr.controls['SelectedDate'].value) {\r\n            dr.controls['SelectedDate'].setValue(scheduleDate);\r\n            this.SetFutureDR(dr, scheduleDate);\r\n        }\r\n    }\r\n    getTomorrowsDate(): Date {\r\n        var current = new Date();\r\n        current.setDate(current.getDate() + 1);\r\n        return current;\r\n    }\r\n    SetFutureDR(dr: FormGroup, scheduleDate: string) {\r\n        let tomorrowDate = this.getTomorrowsDate();\r\n        var selectedDate = new Date(scheduleDate);\r\n        let isCalendarDr = selectedDate > tomorrowDate;\r\n        dr.controls['IsFutureDR'].setValue(isCalendarDr);\r\n        dr.controls['IsCalendarView'].setValue(isCalendarDr);\r\n    }\r\n    submitBlendedForm() {\r\n        if (this.blendRequestForm.valid) {\r\n            this.copyBlendForm(<FormArray>this.blendRequestForm.get('BlendedRequests'), <FormArray>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('BlendedRequests'));\r\n        }\r\n        var totalQty = 0;\r\n        var blendedRequests = <FormArray>this.blendRequestForm.get('BlendedRequests');\r\n        if (blendedRequests.controls.length > 0) {\r\n            blendedRequests.controls.forEach(x => {\r\n                var requiredQty = x.get('RequiredQuantity').value;\r\n                totalQty = totalQty + requiredQty;\r\n            });\r\n            var deliveryReqControl = <FormArray>this.fmGroup.get('DeliveryRequests')['controls'][this.DrForEditBlendedRequestIndex].get('RecurringSchdule');\r\n            if (deliveryReqControl.controls.length > 0 && totalQty > 0) {\r\n                deliveryReqControl.controls.forEach(x => {\r\n                    if (x.get('Id').value == '' || x.get('Id').value == null) {\r\n                        x.get('RequiredQuantity').setValue(totalQty);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    ///////////////////////////BLENDED REQUEST END///////////////////////////\r\n}\r\n\r\n","<div *ngIf=\"!IsSalesPage\" class=\"row\" id=\"dr\">\r\n    <div class=\"col-sm-12 text-right\">\r\n        <!--<button id=\"btn-createDr\" type=\"button\" class=\"btn btn-link pull-right pa0\" data-target=\"raisedr\" (click)=\"openRaiseDrPanel();\" onclick=\"slidePanel('#raisedr','60%')\" *ngIf=\"disableControl==false\"><i class=\"fas fa-truck fs14 mr5\"></i> Create DR</button>\r\n        <button  type=\"button\" class=\"btn btn-link pull-right pa0\" ><i class=\"fas fa-truck fs14 mr5\"></i> Create DR</button>-->\r\n        <div class=\"btn-group legends\">\r\n            <button type=\"button\" class=\"btn dropdown-toggle pa0 mr-1\" [ngClass]=\"{'ml75' : isDisableControl}\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                DR Legends <span class=\"caret\"></span>\r\n            </button>\r\n            <ul class=\"dropdown-menu\">\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-scheduled\"></i> Scheduled</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-inprogress\"></i> In Progress</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-cancelled\"></i> Cancelled / Missed</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-completed\"></i> Completed</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-mustgo\"></i> Must Go</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-shouldgo\"></i> Should Go</a></li>\r\n                <li class=\"dropdown-item\"><a><i class=\"fas fa-circle fs12 dot-couldgo\"></i> Could Go</a></li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"btn-group ml-1\" *ngIf=\"disableControl==false\">\r\n            <a id=\"btn-createDr\" class=\"font-weight-bold\" data-target=\"raisedr\" (click)=\"openRaiseDrPanel();\" onclick=\"slidePanel('#raisedr','70%')\">Create DR</a>\r\n            <span>&nbsp;&nbsp;</span>\r\n            <a id=\"btn-tbdDr\" data-target=\"tbddr\" (click)=\"openRaiseTBDDrPanel();\" onclick=\"slidePanel('#tbddr','90%')\">TBD DR</a>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"dip-test-container\">\r\n    <div class=\"side-panel\" id=\"raisedr\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"header\">\r\n                <a class=\"ml10 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"clearForm();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Create Delivery Request</h3>\r\n                <button type=\"button\" *ngIf=\"selectedLocation.length==0 && !showForm\" class=\"btn btn-link pull-right mr20 pa0\" (click)=\"createDR();\"><i class=\"fas fa-plus fs18 mr5\"></i> Create DR</button>\r\n            </div>\r\n            <div class=\"body-panel\">\r\n                <div *ngIf=\"!IsSalesPage\" class=\"row pr sticky-controls\" #elementFilter>\r\n                            <div class=\"pa top0 bg-white left0 z-index5 loading-wrapper\" *ngIf=\"loadingCustomers\" id=\"loadingCustomers\"><span\r\n                            class=\"spinner-dashboard pa\"></span></div>\r\n                    <div [ngClass]=\"{'col-sm-6':isTankExists,'col-sm-4':!isTankExists}\">\r\n                        <div class=\"form-group mb0\">\r\n                            <ng-multiselect-dropdown class=\"single-select\" id=\"selectCustomer\"\r\n                                [placeholder]=\"'Select Customer (Optional)'\" [(ngModel)]=\"selectedCustomer\"\r\n                                [settings]=\"CustomerSettings\" [data]=\"companySiteList\" (onSelect)=\"onCustomerSelect($event)\"\r\n                                (onDeSelect)=\"onCustomerDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div [ngClass]=\"{'col-sm-6':isTankExists,'col-sm-4':!isTankExists}\">\r\n                        <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown class=\"single-select\" id=\"selectSite\" [placeholder]=\"'Select location'\"\r\n                                [(ngModel)]=\"selectedLocation\" [settings]=\"SiteddlSettings\" [data]=\"SiteList\"\r\n                                (onSelect)=\"onSiteSelect($event)\" (onDeSelect)=\"onSiteDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\" *ngIf=\"!isTankExists\">\r\n                        <div class=\"form-group\">\r\n                            <ng-multiselect-dropdown class=\"\" id=\"selectOrder\" [placeholder]=\"'Select order'\"\r\n                                [(ngModel)]=\"selectedOrder\" [settings]=\"multiDropdownSettings\" [data]=\"OrderList\"\r\n                                (onSelect)=\"onOrderChange()\" (onDeSelect)=\"onOrderChange()\" (onSelectAll)=\"onSelectAll($event)\"\r\n                                (onDeSelectAll)=\"onSelectAll($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div class=\"mb10 small-tab tanks-wrapper\" [style.height.px]=\"height_Panel\">\r\n            \r\n                    <!-- dip testpage loader -->\r\n                    <div *ngIf=\"dipTestLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                        <span class=\"spinner-dashboard pa\"></span>\r\n                    </div>\r\n            \r\n                    <!-- tabs for tanks -->\r\n                    <ul class=\"nav nav-tabs mb10\" *ngIf=\"isTankExists\">\r\n                        <li class=\"active\"><a id=\"idTankTab\" data-toggle=\"tab\" href=\"#tanks\" class=\"fs16 mr15\">Tanks</a></li>\r\n                        <li *ngIf=\"selectedLocation && selectedLocation.length>0\" (click)=\"getSalesData()\"><a data-toggle=\"tab\"\r\n                                href=\"#sales\" class=\"fs16\">Sales</a></li>\r\n                        <li *ngIf=\"selectedLocation && selectedLocation.length>0\" (click)=\"loadChart()\"><a data-toggle=\"tab\"\r\n                                href=\"#trends\" class=\"fs16\">Trends</a></li>\r\n                    </ul>\r\n            \r\n                    <!--  -->\r\n                    <div [class.tab-content]=\"isTankExists\">\r\n            \r\n                        <div id=\"tanks\" [ngClass]=\"{'tab-pane fade show active' : isTankExists}\">\r\n                            <ng-container [formGroup]=\"fmGroup\">\r\n                                <ng-container *ngFor=\"let product of fmGroup.get('DeliveryRequests')['controls']; let j = index\">\r\n                                    <div class=\"dip-test-card\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-5\">\r\n                                                <h6 class=\"product-type\">{{product.get('ProductName').value}}</h6>\r\n                                                <p class=\"customer-name\">Customer: {{product.get('BuyerCompanyName').value}}</p>\r\n                                                <p class=\"address\" container=\"body\" placement=\"bottom\" ngbTooltip=\"{{product.get('JobName').value}}\">\r\n                                                    {{product.get('JobName').value}}\r\n                                                </p>\r\n                                            </div>\r\n                                            <!-- current threshold for tank -->\r\n                                            <div class=\"col-7\" *ngIf=\"product.get('TankId').value || product.get('StorageId').value\">\r\n                                                <div class=\"tank-progrss-panel\">\r\n                                                    <span class=\"tank-progrss-status\">\r\n                                                        {{product.get('CurrentThreshold').value | number:'1.0-0'}}%-{{product.get('ProductName').value}}\r\n                                                    </span>\r\n                                                    <ngb-progressbar type=\"primary\" height=\"10px\"\r\n                                                        [value]=\"product.get('CurrentThreshold').value\">\r\n                                                    </ngb-progressbar>\r\n                                                    <span class=\"tank-time\">{{product.get('DisplayCaptureTime').value}}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <!-- display tanks for location -->\r\n                                        <div class=\"row mt10\" *ngIf=\"product.get('TankId').value || product.get('StorageId').value || (!isTankExists && product.get('Tanks').value && product.get('Tanks').value.length > 1)\">\r\n                                            <div class=\"col-12\">\r\n                                                <table class=\"table table-sm\" id=\"tanks_details\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th scope=\"col\">Tank Name</th>\r\n                                                            <th scope=\"col\">Capacity</th>\r\n                                                            <th scope=\"col\">MaxFill </th>\r\n                                                            <th scope=\"col\">Inventory</th>\r\n                                                            <th scope=\"col\">Ullage</th>\r\n                                                            <th scope=\"col\">Re-order</th>\r\n                                                            <th *ngIf=\"product.get('TankId').value || product.get('StorageId').value\" scope=\"col\">Water Level</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngIf=\"!isTankExists || (isTankExists && product.get('Tanks').value && product.get('Tanks').value.length > 1)\">\r\n                                                            <td>Summary</td>\r\n                                                            <td>{{product.get('TankCapacity').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>{{product.get('TankMaxFill').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td><span *ngIf=\"product.get('NetVolume').value == 0\">NA</span><span *ngIf=\"product.get('NetVolume').value > 0\">\r\n                                                                {{product.get('NetVolume').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</span></td>\r\n                                                            <td><span *ngIf=\"product.get('Ullage').value == -1\">NA</span><span *ngIf=\"product.get('Ullage').value > -1\">\r\n                                                                {{product.get('Ullage').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</span></td>\r\n                                                            <td>{{product.get('ReorderQuantity').value | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                        </tr>\r\n                                                        <tr *ngFor=\"let tank of product.get('Tanks').value; let i = index\">\r\n                                                             <td *ngIf=\"tank.TankName.length >= 40\" class=\"w-25\" title=\"{{tank.TankName}}\">\r\n                                                                {{tank.TankName | slice:0:40}}...\r\n                                                            </td>\r\n                                                            <td *ngIf=\"tank.TankName.length < 40\">{{tank.TankName}}</td>\r\n\r\n                                                            <td>{{tank.TankCapacity | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>{{tank.TankMaxFill | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td>\r\n                                                                <span *ngIf=\"tank.NetVolume == 0\">NA</span><span *ngIf=\"tank.NetVolume > 0\">\r\n                                                                    {{tank.NetVolume | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <span *ngIf=\"tank.Ullage == -1\">NA</span><span *ngIf=\"tank.Ullage > -1\">\r\n                                                                    {{tank.Ullage | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                            <td>{{tank.ReorderQuantity | number:'1.0-2'}}{{\" \" + product.get('UoM').value}}</td>\r\n                                                            <td *ngIf=\"tank.TankId || tank.StorageId\">{{tank.WaterLevel}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <!-- form started -->\r\n                                        <!-- *ngIf=\"((isTankExists && product.get('Tanks').value && product.get('Tanks').value.length>0) || (!isTankExists))\" -->\r\n                                        <ng-container *ngIf='showForm'>\r\n                                            <ng-container>\r\n                                                <ng-container formArrayName=\"DeliveryRequests\">\r\n                                                    <ng-container [formGroupName]=\"j\">\r\n                                                        <div class=\"row mt10 align-items-center\">\r\n                                                            <div class=\"col-sm-4\" id=\"drPriority\">\r\n                                                                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                                                    <div class=\"btn-group btn-filter\">\r\n                                                                        <div class=\"form-check form-check-inline mr-0\">\r\n                                                                            <input id=\"mustgo{{j}}\" class=\"hide-element\" type=\"radio\" value=\"1\" formControlName=\"Priority\">\r\n                                                                            <label class=\"btn ml-0\" for=\"mustgo{{j}}\"> Must Go</label>\r\n                                                                        </div>\r\n                                                                        <div class=\"form-check form-check-inline  mr-0\">\r\n                                                                            <input class=\"hide-element\" type=\"radio\" formControlName=\"Priority\" id=\"shouldgo{{j}}\" value=\"2\">\r\n                                                                            <label class=\"btn\" for=\"shouldgo{{j}}\">Should Go</label>\r\n                                                                        </div>\r\n                                                                        <div class=\"form-check form-check-inline mr-0\">\r\n                                                                            <input class=\"hide-element\" type=\"radio\" value=\"3\" formControlName=\"Priority\" id=\"couldgo{{j}}\">\r\n                                                                            <label class=\"btn\" for=\"couldgo{{j}}\">Could Go</label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-2\">\r\n                                                                <div *ngIf=\"preferenceSetting && preferenceSetting?.IsAdditiveBlendingEnabled\" class=\"form-check form-check-inline\">\r\n                                                                    <input type=\"checkbox\" formControlName=\"IsBlendedRequest\"\r\n                                                                           class=\"form-check-input\" id=\"BlendedRequest{{j}}\" (change)=\"onBlendChange($event.target.checked, product)\">\r\n                                                                    <label class=\"form-check-label\" for=\"BlendedRequest{{j}}\">Blend</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-sm-6\" *ngIf=\"!RequestFromBuyerWallyBoard && !this.fmGroup.controls['IsCommonPickup'].value\" id=\"pickupLocation\">\r\n                                                                <div class=\"clearfix color-lightgrey\" *ngIf=\"product.get('IsBlendedRequest').value\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input type=\"checkbox\" formControlName=\"IsCommonPickupForBlend\" class=\"form-check-input\" id=\"IsCommonPickupForBlend{{j}}\">\r\n                                                                        <label class=\"form-check-label\" for=\"IsCommonPickupForBlend{{j}}\">Common Pick-up Location</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <!-- individual dr pickup location OR common pickup for dr blended blend group -->\r\n                                                                <div class=\"clearfix color-lightgrey col-sm-12 pa0\" *ngIf=\"!product.get('IsBlendedRequest').value || (product.get('IsBlendedRequest').value && product.get('IsCommonPickupForBlend').value)\">\r\n                                                                    <div class=\"pull-left\">\r\n                                                                        <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                        <span class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else location;\">\r\n                                                                            Terminal\r\n                                                                        </span>\r\n                                                                        <ng-template #location>\r\n                                                                            <span class=\"pr5\">\r\n                                                                                Location\r\n                                                                            </span>\r\n                                                                        </ng-template>\r\n                                                                    </div>\r\n                                                                    <div class=\"pull-left pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                        {{product.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                        <div *ngIf=\"product.controls['Terminal']?.invalid && (product.controls['Terminal']?.dirty || product.controls['Terminal']?.touched)\">\r\n                                                                            <label class=\"fs12\" style=\"color:red\" *ngIf=\"product.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                        <span class=\"pull-left pl5 pr5\" *ngIf=\"product.controls['BulkPlant']?.controls['SiteName'].value\">\r\n                                                                            {{product.controls['BulkPlant']?.controls['SiteName'].value}}, {{product.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                            {{product.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{product.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                        </span>\r\n                                                                        <div *ngIf=\"product.controls['BulkPlant'].invalid && (product.controls['BulkPlant'].dirty || product.controls['BulkPlant'].touched)\">\r\n                                                                            <label class=\"fs12\" style=\"color:red\" *ngIf=\"product.controls['BulkPlant'].invalid\">Required</label>\r\n                                                                        </div>\r\n                                                                    </ng-template>\r\n                                                                    <span *ngIf=\"(product.controls['PostLoadedFor']==null || product.controls['PostLoadedFor']==undefined)\">\r\n                                                                        <a class=\"float-left\" (click)=\"editPickupLocation_(product, j)\" data-toggle=\"modal\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\" data-target=\"#dr-pickup-location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                                                    </span>\r\n                                                                    <span *ngIf=\"(product.controls['PostLoadedFor']==null || product.controls['PostLoadedFor']==undefined)\">\r\n                                                                        <a (click)=\"RemovePickupLocation(product, j)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"color-maroon float-left\"><i class=\"fa fa-close ml-2 mt2 fs18\"></i></a>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- non blended form part -->\r\n                                                        <div class=\"row\" *ngIf=\"!product.get('IsBlendedRequest').value; else blendedRequestTemplate\">\r\n  \r\n                                                            <!-- for tank - supplier dropdown for wally board pages -->\r\n                                                            <div *ngIf=\"isTankExists && RequestFromBuyerWallyBoard && product.get('SupplierCompanies')?.value?.length>1\"\r\n                                                                class=\"col-sm-3 input-group mt10\">\r\n                                                                <select formControlName=\"SupplierCompanyId\" class=\"form-control\">\r\n                                                                    <option disabled>Select Supplier</option>\r\n                                                                    <option *ngFor=\"let comp of product.get('SupplierCompanies')?.value;\" [value]=\"comp.Id\">\r\n                                                                        {{comp.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <!-- for tank - order dropdown for non wally board pages -->\r\n\r\n                                                            <div *ngIf=\"isTankExists && !RequestFromBuyerWallyBoard\" class=\"col-sm-3 mt10\" id=\"selectOrder\">\r\n                                                                <select class=\"form-control\" formControlName=\"OrderId\" (change)=\"changeTerminal_(product, $event, j)\">\r\n                                                                    <option disabled value=\"null\">Select Order</option>\r\n                                                                    <ng-container *ngIf=\"product.controls['OrderPickupDetails'].value?.length>0;\">\r\n                                                                        <ng-container *ngFor=\"let order of product.controls['OrderPickupDetails'].value\">\r\n                                                                            <option [value]=\"order.OrderId\">{{order.PoNumber}}</option>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 input-group mt10\" id=\"quantityType\">\r\n                                                                <select formControlName=\"ScheduleQuantityType\" class=\"form-control\">\r\n                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">{{sqType.Name}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"product.controls['ScheduleQuantityType'].value==1\" id=\"requiredQuanity\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"RequiredQuantity\" numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" />\r\n                                                                        <div class=\"input-group-addon\">{{product.get('UoM').value}}</div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <!-- render common fields bet blend & non-blend -->\r\n                                                            <ng-container *ngTemplateOutlet=\"commonFieldsTemplate\">\r\n                                                                Cool! This text is not displayed.\r\n                                                            </ng-container>\r\n\r\n                                                            <!-- for tanks - allow max fill  //why inside in non blend?-->\r\n                                                            <div class=\"col-sm-3 input-group mt10\"\r\n                                                                *ngIf=\"isTankExists && product.controls['ScheduleQuantityType'].value==1 && product.controls['IsTankAndAssetAvailableForJob'].value==true\">\r\n                                                                <div class=\"form-check form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsMaxFillAllowed\" id=\"chk-MaxFillAllowed{{j}}\">\r\n                                                                    <label class=\"form-check-label\" for=\"chk-MaxFillAllowed{{j}}\">Allow to exceed MaxFill</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <!-- reassign to carrier //why inside in non blend?-->\r\n                                                            <div *ngIf=\"!RequestFromBuyerWallyBoard && selectedLocation?.length>0 && LocationManagedType==3\"\r\n                                                                class=\"col-sm-3 input-group mt10\">\r\n                                                                <div class=\"form-check form-check-inline\">\r\n                                                                    <input class=\"form-check-input\" type=\"checkbox\" id=\"chk-IsReAssignToCarrier{{j}}\" formControlName=\"IsReAssignToCarrier\">\r\n                                                                    <label class=\"form-check-label\" for=\"chk-IsReAssignToCarrier{{j}}\">Re-assign</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                         <!-- blended request -->\r\n                                                        <ng-template #blendedRequestTemplate>\r\n                                                            <div class=\"row mt10\">\r\n                                                                <div class=\"col-sm-3\">\r\n                                                                    <div class=\"form-group mb0\">\r\n                                                                        <div class=\"input-group\">\r\n                                                                            <input type=\"text\" formControlName=\"RequiredQuantity\" id=\"blendRequiredQuantity\"\r\n                                                                                numberWithDecimal class=\"form-control pr-2\"\r\n                                                                                placeholder=\"Required Quantity\"\r\n                                                                                (input)=\"onBlendTotalQuantityChange($event.target.value, product.get('BlendedRequests'))\" />\r\n                                                                            <div class=\"input-group-addon\">{{product.get('UoM').value}}</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"color-maroon\"\r\n                                                                        *ngIf=\"product.get('RequiredQuantity').touched && product.get('RequiredQuantity').errors\">\r\n                                                                        <div>Invalid required quantity</div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class=\"col-sm-3\" id=\"clickBlend\"\r\n                                                                    *ngIf=\"product.get('RequiredQuantity').valid;\">\r\n                                                                    <a\r\n                                                                        (click)=\"openBlendRequestForm(product, j);product.get('BlendedRequests').markAllAsTouched()\">\r\n                                                                        <i class=\"fas fa-fill-drip fs25 mt-1\"></i>\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"row\">\r\n                                                                <ng-container *ngTemplateOutlet=\"commonFieldsTemplate\">\r\n                                                                    Cool! This text is not displayed.\r\n                                                                </ng-container>\r\n                                                            </div>\r\n\r\n                                                            <ng-container *ngIf=\"product.get('RequiredQuantity').valid;\">\r\n                                                                <ng-container\r\n                                                                    *ngFor=\"let blendedRequest of product.get('BlendedRequests')['controls']; let k = index;let first = first;\">\r\n                                                                    <ng-container formArrayName=\"BlendedRequests\">\r\n                                                                        <ng-container [formGroupName]=\"k\">\r\n                                                                            <div>\r\n                                                                                <div *ngIf=\"first || blendedRequest.get('IsAdditive').value\" class=\"mt-2\">\r\n                                                                                    <label *ngIf=\"first\" class=\"form-check-label\">Products</label>\r\n                                                                                    <label *ngIf=\"blendedRequest.get('IsAdditive').value\"\r\n                                                                                        class=\"form-check-label\">Additive</label>\r\n                                                                                </div>\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-sm-3 mt10\">\r\n                                                                                        <div>\r\n                                                                                            <select class=\"form-control\" formControlName=\"OrderId\" disabled>\r\n                                                                                                <option disabled value=\"null\">\r\n                                                                                                    Select\r\n                                                                                                    Order\r\n                                                                                                </option>\r\n                                                                                                <ng-container *ngIf=\"!blendedRequest.get('IsAdditive').value && product.controls['BlendOrderPickupDetails'].value?.length>0;\">\r\n                                                                                                    <option *ngFor=\"let order of product.controls['BlendOrderPickupDetails'].value\"\r\n                                                                                                            [value]=\"order.OrderId\">\r\n                                                                                                        {{order.PoNumber}}\r\n                                                                                                    </option>\r\n                                                                                                </ng-container>\r\n                                                                                                <ng-container *ngIf=\"!blendedRequest.get('IsAdditive').value && product.controls['BlendOrderPickupDetails'].value?.length==0 && !product.controls['TankId'].value\">\r\n                                                                                                    <option *ngFor=\"let order of OrderDetails\"\r\n                                                                                                            [value]=\"order.OrderId\">\r\n                                                                                                        {{order.PoNumber}}\r\n                                                                                                    </option>\r\n                                                                                                </ng-container>\r\n                                                                                                <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value\">\r\n                                                                                                    <ng-container *ngFor=\"let order of additiveOrders\">\r\n                                                                                                        <option [value]=\"order.Id\">\r\n                                                                                                            {{order.Name}}\r\n                                                                                                        </option>\r\n                                                                                                    </ng-container>\r\n                                                                                                </ng-container>\r\n                                                                                            </select>\r\n                                                                                        </div>\r\n\r\n                                                                                        <div class=\"color-maroon\" *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('OrderId').errors\">\r\n                                                                                            <div>Order is required </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-3 mt10\">\r\n                                                                                        <div class=\"form-group mb0\">\r\n                                                                                            <div class=\"input-group\">\r\n                                                                                                <input type=\"number\" formControlName=\"RequiredQuantity\" numberWithDecimal\r\n                                                                                                    class=\"form-control pr-2\" placeholder=\"Required Quantity\" disabled />\r\n                                                                                                <div class=\"input-group-addon\">\r\n                                                                                                    {{blendedRequest.get('UoM').value !=\r\n                                                                                                    null ?\r\n                                                                                                    blendedRequest.get('UoM').value :\r\n                                                                                                    product.get('UoM').value}}</div>\r\n                                                                                            </div>\r\n                                                                                            <div class=\"color-maroon\"\r\n                                                                                                *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('RequiredQuantity').invalid\">\r\n                                                                                                <div> Quantity is required </div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-sm-3 mt10\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                                                                        <div class=\"form-group mb0\">\r\n                                                                                            <div class=\"input-group\">\r\n                                                                                                <input type=\"number\" formControlName=\"QuantityInPercent\" numberWithDecimal\r\n                                                                                                    class=\"form-control\" placeholder=\"Quantity In Percent\" disabled />\r\n                                                                                                <div class=\"input-group-addon\">%</div>\r\n                                                                                            </div>\r\n                                                        \r\n                                                                                            <div class=\"color-maroon\"\r\n                                                                                                *ngIf=\"product.get('BlendedRequests').touched && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                                                                <div>Invalid percentage</div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                            <!--  -->\r\n                                                                            <div class=\"col-sm-12 mt5\"\r\n                                                                                 *ngIf=\"!product.get('IsCommonPickupForBlend').value && !fmGroup.get('IsCommonPickup').value && !blendedRequest.get('IsAdditive').value\">\r\n                                                                                <div class=\"input-group\">\r\n                                                                                    <div class=\"pull-left\">\r\n                                                                                        <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                                        <span class=\"pr5\"\r\n                                                                                              *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                                                        <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"pull-left pr5\"\r\n                                                                                         *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                                        {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                                        <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                                                   *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                                        <span class=\"pull-left pl5 pr5\">\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}},\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}}\r\n                                                                                            {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                                        </span>\r\n                                                                                        <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                                                   *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                                                        </div>\r\n                                                                                    </ng-template>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                </ng-container>\r\n                                                            </ng-container>\r\n                                                        </ng-template>\r\n            \r\n                                                        <ng-template #commonFieldsTemplate>\r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    \r\n                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\"\r\n                                                                            id=\"deli-level\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                                                                               \r\n                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"preferenceSetting?.CreditCheckType==1\">\r\n                                                                <div class=\"form-group\">\r\n                                                                    <input type=\"text\" formControlName=\"IndicativePrice\" class=\"form-control\" id=\"Indicative_Price\"\r\n                                                                        placeholder=\"Indicative Price\" />\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"row\">\r\n                                                                    <div class=\"col-10\">\r\n                                                                        <div class=\"form-group mb0\">\r\n                                                                            <input type=\"text\" class=\"form-control datepicker\" formControlName=\"SelectedDate\" myDatePicker\r\n                                                                                   [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" placeholder=\"Select Date\"\r\n                                                                                   (onDateChange)=\"OnSelectedDateChange(product,$event)\" />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"col-1 pl-0 mt-2\">\r\n                                                                        <i class=\"fa fa-info-circle ml-1\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                                                                            title=\"Select date for scheduling future loads. Future loads will be displayed in Calendar View.\"\r\n                                                                            data-original-title=\"Select date for scheduling future loads. Future loads will be displayed in Calendar View.\"></i>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"ScheduleStartTime\" class=\"form-control\"\r\n                                                                            [disableControl]=\"!product.controls['SelectedDate'].value\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                                                            (onTimeChange)=\"product.get('ScheduleStartTime').setValue($event)\" id=\"strt-time\"\r\n                                                                            placeholder=\"Start Time\" />\r\n                                                                        <div class=\"input-group-addon\"><i class=\"far fa-clock\"></i></div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                <div class=\"form-group mb0\">\r\n                                                                    <div class=\"input-group\">\r\n                                                                        <input type=\"text\" formControlName=\"ScheduleEndTime\" class=\"form-control\"\r\n                                                                            [disableControl]=\"!product.controls['SelectedDate'].value\" myTimePicker [format]=\"'hh:mm A'\"\r\n                                                                            (onTimeChange)=\"product.get('ScheduleEndTime').setValue($event)\" id=\"end-time\"\r\n                                                                            placeholder=\"End Time\" />\r\n                                                                        <div class=\"input-group-addon\"><i class=\"far fa-clock\"></i></div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        \r\n                                                        </ng-template>\r\n\r\n                                                        <!-- badges -->\r\n                                                        <div *ngIf=\"!RequestFromBuyerWallyBoard\" class=\"row mt10\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <div class=\"form-check form-check-inline float-left checkbox\">\r\n                                                                                <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckboxCommonBadge-{{j}}\" formControlName=\"IsCommonBadge\" (change)=\"hideShowCommonBadgeArea()\">\r\n                                                                                <label class=\"form-check-label\" for=\"CheckboxCommonBadge-{{j}}\">Common Badge #</label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row mt10\" *ngIf=\"product.get('IsCommonBadge').value != true\">\r\n                                                                        <div class=\"col-sm-4\">\r\n                                                                            <div class=\"form-group mb5\">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom placeholder=\"Badge #1\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4 pr10 pl10\">\r\n                                                                            <div class=\"form-group mb5 \">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\" placeholder=\"Badge #2\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-sm-4 pl5\">\r\n                                                                            <div class=\"form-group mb5 \">\r\n                                                                                <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\" placeholder=\"Badge #3\">\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- tank ullage calculation result -->\r\n                                                        <div class=\"row mt10\"\r\n                                                            *ngIf=\"isTankExists && product.get('Tanks')?.controls && product.controls['isRetainInfo'].value\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <table class=\"table table-sm\">\r\n                                                                                <tr>\r\n                                                                                    <th>Tank</th>\r\n                                                                                    <th>Retain Time</th>\r\n                                                                                    <th>Window Time</th>\r\n                                                                                </tr>\r\n                                                                                <tr\r\n                                                                                    *ngFor=\"let retainInfo of product.get('RetainInfo')?.controls\">\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('TankName').value}}</td>\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('RetainTime').value}}-{{retainInfo.get('RetainDate').value}}\r\n                                                                                    </td>\r\n                                                                                    <td class=\"color-blue opacity8\">\r\n                                                                                        {{retainInfo.get('WindowStartTime').value}}\r\n                                                                                        {{retainInfo.get('WindowStartDate').value}}\r\n                                                                                        -\r\n                                                                                        {{retainInfo.get('WindowEndTime').value}}\r\n                                                                                        {{retainInfo.get('WindowEndDate').value}}\r\n                                                                                    </td>\r\n            \r\n                                                                                    <!-- <td class=\"color-blue opacity8\" *ngIf=\"product.controls['RetainTime'].value!='' && product.controls['RetainDate'].value!=''\"><strong>Retain Time</strong><br />{{product.controls['RetainTime'].value}}-{{product.controls['RetainDate'].value}}</td> -->\r\n                                                                                    <!-- <td class=\"color-blue opacity8\" *ngIf=\"product.controls['WindowStartTime'].value!='' && product.controls['WindowStartDate'].value!='' && product.controls['WindowEndTime'].value!='' && product.controls['WindowEndDate'].value!=''\"><strong>Window Time</strong><br />{{product.controls['WindowStartTime'].value}} {{product.controls['WindowStartDate'].value}} - {{product.controls['WindowEndTime'].value}} {{product.controls['WindowEndDate'].value}}</td> -->\r\n                                                                                </tr>\r\n                                                                            </table>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- reccuring schedule -->\r\n                                                        <div class=\"row mt10\">\r\n                                                            <div class=\"col-12\">\r\n                                                                <div class=\"border p-3 radius-5 tank-panel bg-lightgrey\">\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 form-group mb0\">\r\n                                                                            <div class=\"form-check form-check-inline \">\r\n                                                                                <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isRecurringSchedule\" (change)=\"enableSchedule(product,j);\" id=\"chkreShedule_{{j}}\">\r\n                                                                                <label class=\"form-check-label\" for=\"chkreShedule_{{j}}\">Recurring Schedule</label>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-sm-12 showHide{{j}}\" style=\"display:none;\">\r\n                                                                            <div formArrayName=\"RecurringSchdule\">\r\n                                                                                <div *ngFor=\"let recurringSchedule of product.get('RecurringSchdule').controls;let reIndex = index\">\r\n                                                                                    <div [formGroupName]=\"reIndex\">\r\n                                                                                        <div class=\"row\">\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\">\r\n                                                                                                <select formControlName=\"ScheduleType\" class=\"form-control\">\r\n                                                                                                    <option *ngFor=\"let scType of ScheduleTypes\" [value]=\"scType.Id\">\r\n                                                                                                        {{scType.Name}}\r\n                                                                                                    </option>\r\n                                                                                                </select>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"recurringSchedule.controls['ScheduleType'].value==1 || recurringSchedule.controls['ScheduleType'].value==2\">\r\n\r\n                                                                                                <ng-multiselect-dropdown class=\"single-select\"\r\n                                                                                                                         style=\"width: 100%;\"\r\n                                                                                                                         [settings]=\"DaySetting\"\r\n                                                                                                                         [data]=\"ScheduleDaysDetails\"\r\n                                                                                                                         formControlName=\"TempWeekDayId\"\r\n                                                                                                                         (onSelect)=\"onDaySelect($event, recurringSchedule, true)\"\r\n                                                                                                                         (onDeSelect)=\"onDaySelect($event, recurringSchedule, false)\">\r\n                                                                                                </ng-multiselect-dropdown>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"recurringSchedule.controls['ScheduleType'].value==3\">\r\n                                                                                                <input type=\"text\" formControlName=\"Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setSelectedDate($event,recurringSchedule);\" />\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 input-group mt10\" *ngIf=\"!recurringSchedule.controls['IsBlendedProduct'].value\">\r\n                                                                                                <select formControlName=\"ScheduleQuantityType\" class=\"form-control\">\r\n                                                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">\r\n                                                                                                        {{sqType.Name}}\r\n                                                                                                    </option>\r\n                                                                                                </select>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 mt10\" *ngIf=\"recurringSchedule.controls['ScheduleQuantityType'].value==1\">\r\n                                                                                                <div class=\"input-group\">\r\n                                                                                                    <input type=\"text\" [disabled]=\"recurringSchedule.controls['IsBlendedProduct'].value\" formControlName=\"RequiredQuantity\" numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" />\r\n                                                                                                    <div class=\"input-group-addon\">{{product.get('UoM').value=='Gallons'?'G':'L'}}</div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-3 mt10\">\r\n                                                                                                <div class=\"form-group mb0\">\r\n                                                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div class=\"col-sm-1 mt10\">\r\n                                                                                                <a (click)=\"DeleteSchedule(product,reIndex,recurringSchedule.controls['Id'].value)\" class=\"fa fa-trash-alt fs18 color-maroon mt7\" title=\"Remove\"></a>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"mt10\">\r\n                                                                                <a (click)=\"addNewSchedule(product)\"><i class=\"fas fa-plus-circle\"></i>&nbsp;Schedule</a>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- notes -->\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-sm-12\">\r\n                                                                <div class=\"form-group mt10\">\r\n                                                                    <textarea formControlName=\"Notes\"\r\n                                                                        class=\"form-control add-note-tarea\"\r\n                                                                        placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <div class=\"row mt10\">\r\n                                                            <!-- tank calculation -->\r\n                                                            <div class=\"col-sm-12 text-right\">\r\n                                                                <button type=\"button\" class=\"btn btn-default btn-lg\" *ngIf='selectedLocation.length==0 && isTankExists'\r\n                                                                    (click)=\"onSingleCaculateRetainWindow(product)\">Calculate</button>\r\n                                                                <button type=\"submit\" *ngIf=\"selectedLocation.length==0\" (click)=\"onSingleSubmit(product)\"\r\n                                                                    class=\"btn btn-primary btn-lg\" [disabled]=\"dipTestLoader\">Submit</button>\r\n                                                            </div>\r\n            \r\n                                                            <!-- show existing drs -->\r\n                                                            <div class=\"col-sm-12\" *ngIf=\"product.get('IsDRExists').value\">\r\n                                                                <div class=\"alert alert-warning fs12 mb0 radius-10\">\r\n                                                                    <i class=\"fas fa-exclamation-circle mr5\"></i>\r\n                                                                    <strong>Warning:</strong> Delivery\r\n                                                                    Request(s) exists <a (click)=\"product.get('DisplayDRDetails').setValue(!product.get('DisplayDRDetails').value)\">Show\r\n                                                                        Details</a>\r\n                                                                    <div *ngIf=\"product.get('DisplayDRDetails').value\">\r\n                                                                        <table class=\"table table-hover margin bottom details-table\">\r\n                                                                            <thead>\r\n                                                                                <tr>\r\n                                                                                    <th>Required Quantity</th>\r\n                                                                                    <th>Priority</th>\r\n                                                                                    <th>Status</th>\r\n                                                                                    <th>Created Date</th>\r\n                                                                                </tr>\r\n                                                                            </thead>\r\n                                                                            <tbody>\r\n                                                                                <tr *ngFor=\"let partialDR of product.get('ExistingDR').value\">\r\n                                                                                    <!--for numeric-->\r\n                                                                                    <td *ngIf=\"partialDR.ScheduleQuantityType==0||partialDR.ScheduleQuantityType==1\">\r\n                                                                                        {{partialDR.RequiredQuantity |\r\n                                                                                        number:'1.0-2'}}\r\n                                                                                        {{product.get('UoM').value}}</td>\r\n                                                                                    <!--for non numeric-->\r\n                                                                                    <td *ngIf=\"partialDR.ScheduleQuantityType>1\">\r\n                                                                                        {{partialDR.ScheduleQuantityTypeName}}</td>\r\n                                                                                    <td>{{DelReqPriority[partialDR.Priority]}}</td>\r\n                                                                                    <td *ngIf=\"!partialDR.IsMissedDr\">\r\n                                                                                        {{partialDR.ScheduleStatusName}}</td>\r\n                                                                                    <td *ngIf=\"partialDR.IsMissedDr\">Missed</td>\r\n                                                                                    <td>{{partialDR.CreatedOn}}</td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n            \r\n                                                        <!-- OTHER PRODUCTS -->\r\n            \r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </ng-container>\r\n            \r\n                                <!-- badges and pickup details -->\r\n                                <ng-container\r\n                                    *ngIf=\"!RequestFromBuyerWallyBoard && fmGroup.get('DeliveryRequests')?.value?.length>0 && showForm\">\r\n                                    <div class=\"border radius-5 pa15 tank-panel mb20 bg-lightgrey \">\r\n                                        <div class=\"mt10\" *ngIf=\"IsCommonBadge\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-sm-4 pr5\">\r\n                                                    <div class=\"form-group mb5\">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo1\" fom\r\n                                                            placeholder=\"Badge #1\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 pr10 pl10\">\r\n                                                    <div class=\"form-group mb5 \">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo2\"\r\n                                                            placeholder=\"Badge #2\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-4 pl5\">\r\n                                                    <div class=\"form-group mb5 \">\r\n                                                        <input type=\"text\" class=\"form-control\" formControlName=\"BadgeNo3\"\r\n                                                            placeholder=\"Badge #3\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-12 mt10\">\r\n                                                <div class=\"float-left mt5\" *ngIf=\"!this.fmGroup.controls['IsPreLoadInfo']?.value\">\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" type=\"checkbox\" id=\"comm-pick-Ckbox1\"\r\n                                                            formControlName=\"IsCommonPickup\">\r\n                                                        <label class=\"form-check-label\" for=\"comm-pick-Ckbox1\">Common Pick-up\r\n                                                            Location</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button *ngIf=\"!this.fmGroup.controls['IsPreLoadInfo']?.value\"\r\n                                                    class=\"btn btn-default btn-sm float-left ml10\"\r\n                                                    (click)=\"editPickupLocation_(null, null)\"\r\n                                                    [disabled]=\"!this.fmGroup.controls['IsCommonPickup']?.value\" data-toggle=\"modal\"\r\n                                                    #idCommonPickUpBtn data-target=\"#dr-pickup-location\">\r\n                                                    <i class=\"fas fa-map-marker-alt\"></i> Choose Pick-up\r\n                                                </button>\r\n            \r\n                                                <div class=\"pr5 clearboth\">\r\n                                                    <div *ngIf=\"fmGroup.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                        {{fmGroup.controls['Terminal']['controls'].Name.value}}\r\n                                                        <div\r\n                                                            *ngIf=\"fmGroup.controls['Terminal'].invalid && (fmGroup.controls['Terminal'].dirty || fmGroup.controls['Terminal'].touched)\">\r\n                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                *ngIf=\"fmGroup.controls['Terminal']['controls'].Name.errors.required\">\r\n                                                                Required\r\n                                                                <!-- (Terminal) -->\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <ng-template #bulkPlant>\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].SiteName.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].City.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].State['controls']?.Code.value}}\r\n                                                        {{fmGroup.controls['BulkPlant']['controls'].ZipCode.value}}\r\n                                                        <div\r\n                                                            *ngIf=\"fmGroup.controls['BulkPlant'].invalid && (fmGroup.controls['BulkPlant'].dirty || fmGroup.controls['BulkPlant'].touched)\">\r\n                                                            <label class=\"fs12\" style=\"color:red\"\r\n                                                                *ngIf=\"fmGroup.controls['BulkPlant'].invalid\">\r\n                                                                Required\r\n                                                                <!-- (Bulk Plant) -->\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </ng-template>\r\n                                                </div>\r\n\r\n                                                <div *ngIf=\"fmGroup.controls['IsCommonPickup'].value || fmGroup.controls['IsCommonBadge'].value\" class=\"alert alert-warning fs12 mb0 mt10 radius-10\">\r\n                                                    Please verify common pickup/badges for auto orders if exists.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n            \r\n                                    </div>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                        </div>\r\n            \r\n                        <!-- tab - trend chart for tanks -->\r\n                        <div id=\"trends\" class=\"tab-pane fade\" *ngIf=\"isTankExists\">\r\n                            <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async)\" [data]=\"chartdata\">\r\n                            </app-demand-capture-chart>\r\n                        </div>\r\n            \r\n                        <!-- tab - sales grid for tanks -->\r\n                        <div id=\"sales\" class=\"tab-pane fade\" *ngIf=\"isTankExists\">\r\n                            <div class=\"ibox-content no-padding no-border\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table id=\"table-sales\" class=\"table table-bordered table-hover\" datatable [dtOptions]=\"dtOptions\"\r\n                                        [dtTrigger]=\"dtTrigger\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <!-- <th data-key=\"Cust\">Customer</th>\r\n                                                <th data-key=\"Loc\">Location</th> -->\r\n                                                <th data-key=\"TName\">Tank Name</th>\r\n                                                <th data-key=\"Avg7Day\">Trailing 7 day average</th>\r\n                                                <th data-key=\"PDS\">Previous day sale</th>\r\n                                                <th data-key=\"SaleWeek\">Sales on week ago</th>\r\n                                                <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                                <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                                <th data-key=\"Ullg\">Ullage</th>\r\n                                                <th data-key=\"lastDelivery\">Last Delivered Qty</th>\r\n                                                <th data-key=\"lastDeliveryQty\">Date of last delivery</th>\r\n                                                <th data-key=\"DRemg\">Days remaining</th>\r\n                                                <!-- <th data-key=\"Status\">Status</th> -->\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngIf=\"(isLoadingSubject | async)\"\r\n                                                class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                                <span class='spinner-dashboard pa'></span>\r\n                                            </tr>\r\n                                            <tr *ngFor=\"let row of SalesData\">\r\n                                                <!-- <td>{{row.CompanyName}}</td>\r\n                                                <td>{{row.SiteId}}</td> -->\r\n                                                <td>{{row.TankName}}</td>\r\n                                                <td>{{row.AvgSale}}</td>\r\n                                                <td>{{row.PrevSale}}</td>\r\n                                                <td>{{row.WeekAgoSale}}</td>\r\n                                                <td>{{row.Inventory}}</td>\r\n                                                <td>{{row.LastReadingTime}}</td>\r\n                                                <td>{{row.Ullage}}</td>\r\n                                                <td>{{row.LastDeliveredQuantity}}</td>\r\n                                                <td>{{row.LastDeliveryDate}}</td>\r\n                                                <td>{{row.DaysRemaining}}</td>\r\n                                                <!-- <td>{{row.Status}}</td> -->\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer\">\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-sm-2 text-left\">\r\n                        <button type=\"button\" class=\"btn btn-default btn-lg\" *ngIf='selectedLocation.length>0 && isTankExists' (click)=\"onCaculateRetainWindow()\">Calculate</button>\r\n                    </div>\r\n                    <div class=\"col-sm-7\">\r\n                        <div *ngIf=\"FormValidationMessage.length != 0\" class=\"text-left alert alert-info fs12 radius-5 pa10 mtm2\">\r\n                            <span> <i class=\"fas fa-info-circle mr5\"></i> {{FormValidationMessage}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 text-right\">\r\n                        <button type=\"button\" class=\"btn\" onclick=\"closeSlidePanel();\" (click)=\"clearForm()\">Cancel</button>\r\n                        <button *ngIf='selectedLocation.length>0' [disabled]=\"isUserSubmit\" (click)=\"onSubmit()\" type=\"button\" class=\"btn btn-primary btn-lg\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"pt10 pb10 pl20 pr20\">\r\n\r\n\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"side-panel\" id=\"tbddr\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"header\">\r\n                <a class=\"ml10 close-panel\" onclick=\"closeSlidePanel();\" (click)=\"clearForm();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Create TBD Delivery Request</h3>\r\n            </div>\r\n            <div class=\"body-panel\" [formGroup]=\"fmTBDGroup\">\r\n                <div *ngIf=\"TBDdipTestLoader\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n                <ng-container *ngFor=\"let product of fmTBDGroup.get('ScheduleTBDForm')['controls']; let j = index\">\r\n                    <ng-container formArrayName=\"ScheduleTBDForm\">\r\n                        <ng-container [formGroupName]=\"j\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"card mb-3\">\r\n                                        <div class=\"card-header shadow-sm bg-light\">\r\n                                            <div class=\"row mb-2\">\r\n                                                <div class=\"col-sm-10\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <ng-multiselect-dropdown formControlName=\"SelectedFuelType\"\r\n                                                                                     [placeholder]=\"'Select Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"FuelTypeDetails\"\r\n                                                                                     (onSelect)=\"onFuelTypeSelect($event,product, false)\" (onDeSelect)=\"onFuelTypeDeSelect($event,product, false)\"\r\n                                                                                     (onSelectAll)=\"onFuelTypeSelectAll($event,product, false)\"\r\n                                                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll(product, false)\">\r\n                                                            </ng-multiselect-dropdown>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <ng-multiselect-dropdown formControlName=\"SelectedOtherFuelType\"\r\n                                                                                     [placeholder]=\"'Select Other Fuel Type'\" [settings]=\"FuelTypeDdlSettings\" [data]=\"OtherFuelTypeDetails\"\r\n                                                                                     (onSelect)=\"onFuelTypeSelect($event,product, true)\" (onDeSelect)=\"onFuelTypeDeSelect($event,product, true)\"\r\n                                                                                     (onSelectAll)=\"onFuelTypeSelectAll($event,product, true)\"\r\n                                                                                     (onDeSelectAll)=\"onFuelTypeDeSelectAll(product, true)\">\r\n                                                            </ng-multiselect-dropdown>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-4\">\r\n                                                            <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                                                                <div class=\"btn-group btn-filter\">\r\n                                                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                                                        <input id=\"rdo-mustgo{{j}}\" class=\"hide-element\" type=\"radio\" [value]=\"1\" formControlName=\"Priority\" [checked]=\"product.get('Priority').value==1\">\r\n                                                                        <label class=\"btn ml-0\" for=\"rdo-mustgo{{j}}\" > Must Go</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline  mr-0\">\r\n                                                                        <input class=\"hide-element\" type=\"radio\" formControlName=\"Priority\" id=\"rdo-shouldgo{{j}}\" [value]=\"2\" [checked]=\"product.get('Priority').value==2\">\r\n                                                                        <label class=\"btn\" for=\"rdo-shouldgo{{j}}\">Should Go</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline mr-0\">\r\n                                                                        <input class=\"hide-element\" type=\"radio\" [value]=\"3\" formControlName=\"Priority\" id=\"rdo-couldgo{{j}}\" [checked]=\"product.get('Priority').value==3\">\r\n                                                                        <label class=\"btn\" for=\"rdo-couldgo{{j}}\">Could Go</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div> \r\n                                                        <div class=\"col-sm-4 mt-2\">\r\n                                                            <div class=\"clearfix color-lightgrey col-sm-12 pa0\">\r\n                                                                <!--<div class=\"pull-left\">\r\n                                                                    <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                                    <span class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else location;\">\r\n                                                                        Terminal\r\n                                                                    </span>\r\n                                                                    <ng-template #location>\r\n                                                                        <span class=\"pr5\">\r\n                                                                            Location\r\n                                                                        </span>\r\n                                                                    </ng-template>\r\n                                                                </div>-->\r\n                                                                <div class=\"pr5\" *ngIf=\"product.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                                    <strong>Terminal - </strong>{{product.controls['Terminal']?.controls['Name']?.value}}\r\n                                                                </div>\r\n                                                                <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                                    <span class=\"pull-left pl5 pr5\">\r\n                                                                        <strong>Location - </strong>\r\n                                                                        {{product.controls['BulkPlant']?.controls['SiteName'].value}}, {{product.controls['BulkPlant']?.controls['City'].value}},\r\n                                                                        {{product.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{product.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                                    </span>\r\n                                                                </ng-template>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-sm-2 text-right mt-2\">\r\n                                                    <a placement=\"bottom\" ngbTooltip=\"Add/Edit Pickup Location\" (click)=\"editTBDPickupLocation_(product, j)\" data-toggle=\"modal\" data-target=\"#dr-tbd-pickup-location\"><i class=\"fa fa-map-marker-alt fs18 ml5 mt2\"></i></a>\r\n                                                    <a (click)=\"removeTBDDR(product,j)\" class=\"ml-2\" placement=\"bottom\" ngbTooltip=\"Remove DR\"><i class=\"fas fa-trash-alt text-danger\"></i></a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ng-container *ngFor=\"let drProduct of product.get('DeliveryRequests')['controls']; let dr = index\">\r\n                                            <ng-container formArrayName=\"DeliveryRequests\">\r\n                                                <ng-container [formGroupName]=\"dr\">\r\n                                                    <div class=\"card-body pb-0\">\r\n                                                        <div class=\"row mb-2\">\r\n                                                            <div class=\"col-1\">\r\n                                                                <label>{{drProduct.get('FuelTypeName').value}}</label>\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\">\r\n                                                                <select formControlName=\"DRScheduleQuantityType\" class=\"form-control\">\r\n                                                                    <option *ngFor=\"let sqType of ScheduleQuantityTypeDetails\" [value]=\"sqType.Id\">\r\n                                                                        {{sqType.Name}}\r\n                                                                    </option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\" *ngIf=\"drProduct.controls['DRScheduleQuantityType'].value==1\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <input type=\"text\" formControlName=\"RequiredQty\" class=\"form-control\" placeholder=\"Quantity\">\r\n                                                                    <div class=\"input-group-append\">\r\n                                                                        <span class=\"input-group-text fs11\">{{companyUoM == 1 ? 'G' : 'L'}}</span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo1\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo2\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-1\">\r\n                                                                <input type=\"text\" formControlName=\"BadgeNo3\" class=\"form-control\" placeholder=\"Badge#\" />\r\n                                                            </div>\r\n                                                            <div class=\"col-2\" style=\"max-width:15% !important;\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <input type=\"text\"  formControlName=\"DeliveryLevelPO\" class=\"form-control\" placeholder=\"Delivery-Level PO#\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-2 pr-0\" style=\"max-width:15% !important;\">\r\n                                                                <textarea formControlName=\"Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                                                            </div>\r\n                                                            <div class=\"col pt-2 text-right\">\r\n                                                                <a (click)=\"removeSubTBDDR(product, dr,drProduct.get('FuelTypeId').value,drProduct.get('ProductTypeId').value)\" class=\"ml-2\" placement=\"top\" ngbTooltip=\"Remove Product\"><i class=\"fas fa-trash-alt text-danger\"></i></a>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </ng-container>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n\r\n            </div>\r\n            <div class=\"footer px-3\">\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-sm-2 text-left\">\r\n                        <a class=\"fs18 pull-left mt-1\" (click)=\"addTBDDR();\"><i class=\"fa fa-plus-circle fs18 mt3 pull-left\"></i><span class=\"fs14 mt1 pull-left\">Add DR</span></a>\r\n                    </div>\r\n                    <div class=\"col-sm-10 text-right\">\r\n                        <button class=\"btn\" onclick=\"closeSlidePanel();\" type=\"button\">Cancel</button>\r\n                        <button class=\"btn btn-primary mr-1\" type=\"submit\" [disabled]=\"isTBDUserSubmit\" (click)=\"SubmitTBDData();\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"dr-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style=\"z-index: 1051!important;\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <!--<div class=\"btn-group btn-filter\" data-toggle=\"buttons\">\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            Terminal &nbsp;\r\n                            <input type=\"radio\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            Bulk Plant\r\n                        </div>-->\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"inlinePickup\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"inlinePickup\" id=\"inlineBulkplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation_()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTerminalSearched_($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTerminalSearched_($event);\" (blur)=\"validateTerminal_(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" />\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li class=\"form-text\" *ngIf=\"minCharRequired\"><small>Enter minimum 3 characters to search.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"searchError\"><small>Something went wrong.</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"_loadingTerminals\"><small>Loading...</small></li>\r\n                                    <li class=\"form-text\" *ngIf=\"noTerminalFound && !minCharRequired && !searchError && !_loadingTerminals \"><small>{{SearchTerminalKey.length > 0 ? \"Matching terminal\" : \"Terminal\"}} not found for Fuel Type : {{SearchTerminalFuelType}}</small></li>\r\n                                    <li *ngFor=\"let terminal of Terminals;\" (click)=\"onTerminalSelected_(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                            </div>\r\n                            <!--<div class=\"ng-autocomplete\">\r\n                                <ng-autocomplete [data]=\"Terminals\"\r\n                                                 [searchKeyword]=\"keyword\"\r\n                                                 placeholder=\"Terminal Name\"\r\n                                                 (inputChanged)=\"onTerminalSearched_($event)\"\r\n                                                 (selected)='onTerminalSelected_($event)'\r\n                                                 [itemTemplate]=\"itemTemplate\"\r\n                                                 [notFoundTemplate]=\"notFoundTemplate\">\r\n                                </ng-autocomplete>\r\n\r\n                                <ng-template #itemTemplate let-item>\r\n                                    <a [innerHTML]=\"item.Name\"></a>\r\n                                </ng-template>\r\n\r\n                                <ng-template #notFoundTemplate let-notFound>\r\n                                    <div [innerHTML]=\"notFound\"></div>\r\n                                </ng-template>\r\n                            </div>-->\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deletePickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StateList\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country/Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" (change)=\"OnCountryChanged($event)\">\r\n                                            <option [value]=\"null\">Select</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnDrPickupClose\">Cancel</button>\r\n                    <button type=\"button\" *ngIf=\"IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocationForBlend()\" class=\"btn btn-primary\">Add</button>\r\n                    <button type=\"button\" *ngIf=\"!IsPickupForBlendRequest;\" [disabled]=\"!PickupForm.valid\" (click)=\"updatePickupLocation_()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"dr-tbd-pickup-location\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\" [formGroup]=\"PickupForm\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"overflow-h\">\r\n                    <div class=\"dib border pa5 radius-capsule\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineTerminal1\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"1\">\r\n                            <label class=\"form-check-label\" for=\"inlineTerminal1\">Terminal</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" id=\"inlineBlukplant2\" formControlName=\"PickupLocationType\" [name]=\"'PickupLocationType'\" [value]=\"2\">\r\n                            <label class=\"form-check-label\" for=\"inlineBlukplant2\">Bulk Plant</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" (click)=\"updatePickupLocation_()\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fas fa-times\"></i></button>\r\n                </div>\r\n                <div class=\"mt10 mb10\">\r\n                    <!-- terminal start -->\r\n                    <div class=\"row\" [formGroup]=\"PickupForm.controls['Terminal']\" *ngIf=\"LocationType==1\">\r\n                        <div class=\"col-sm-10\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"Name\" class=\"form-control\" (input)=\"onTBDTerminalSearched_($event);PickupForm.controls['Terminal']['controls'].Id.patchValue(0)\" (focus)=\"onTBDTerminalSearched_($event);\" (blur)=\"validateTerminal_(PickupForm.controls['Terminal'],$event)\" placeholder=\"Terminal Name\" />\r\n                                <ul class=\"auto-select border-dash\">\r\n                                    <li *ngFor=\"let terminal of TBDTerminals;\" (click)=\"onTerminalSelected_(terminal)\"\r\n                                        [attr.selected]=\"terminal.Id==PickupForm.controls['Terminal']['controls'].Id.value\">{{terminal.Name}}</li>\r\n                                </ul>\r\n                                <ng-container *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.invalid\r\n                                      && (PickupForm.controls['Terminal']['controls'].Name.touched || PickupForm.controls['Terminal']['controls'].Name.dirty)\">\r\n                                    <label style=\"color:red\" *ngIf=\"PickupForm.controls['Terminal']['controls'].Name.errors.required\">\r\n                                        Required\r\n                                    </label>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"padding-left: 10px;padding-top:7px;\">\r\n                            <a (click)=\"deleteTBDPickupInfo(PickupForm.controls['Terminal'])\" title=\"Remove\" class=\"color-maroon\"><i class=\"fa fa-close\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <!-- terminal ends -->\r\n                    <!-- bulk plant starts -->\r\n                    <div class=\"row pr\" [formGroup]=\"PickupForm.controls['BulkPlant']\" *ngIf=\"LocationType==2\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Bulk Plant</label>\r\n                                        <input type=\"text\" formControlName=\"SiteName\" class=\"form-control\" (input)=\"onBulkPlantSearched_($event)\" placeholder=\"Bulk Plant Name\" (blur)=\"onBulkPlantBlur_($event)\" />\r\n                                        <ul class=\"auto-select border-dash\">\r\n                                            <li *ngFor=\"let plant of BulkPlants;\" (click)=\"onBulkPlantSelected_(plant)\"\r\n                                                [attr.selected]=\"plant.Name==PickupForm.controls['BulkPlant']['controls'].SiteName.value\">{{plant.Name}}</li>\r\n                                        </ul>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].SiteName.touched || PickupForm.controls['BulkPlant']['controls'].SiteName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].SiteName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Address</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Address\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Address.touched || PickupForm.controls['BulkPlant']['controls'].Address.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Address.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>{{ CountryBasedZipcodeLabel }}</label>\r\n                                        <input type=\"text\" class=\"form-control zip-code\" formControlName=\"ZipCode\" (input)=\"getAddressByZip_($event)\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].ZipCode.touched || PickupForm.controls['BulkPlant']['controls'].ZipCode.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].ZipCode.errors.pattern\">\r\n                                                Invalid {{ CountryBasedZipcodeLabel }}\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>City</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"City\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].City.touched || PickupForm.controls['BulkPlant']['controls'].City.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].City.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].State\">\r\n                                        <label>State</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select State\" (change)=\"setStateCode_($event)\">\r\n                                            <option [value]=\"null\">Select State</option>\r\n                                            <option *ngFor=\"let st of StatesListByCountry\" [value]=\"st.Id\">\r\n                                                {{st.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.touched || PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].State['controls'].Id.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].Country\">\r\n                                        <label>Country</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Code\" class=\"form-control\" placeholder=\"Select Country\">\r\n                                            <option [value]=\"null\">Select Country</option>\r\n                                            <option *ngFor=\"let ct of CountryList\" [value]=\"ct.Code\">\r\n                                                {{ct.Code}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.touched || PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country['controls'].Code.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\" [formGroup]=\"PickupForm.controls['BulkPlant']['controls'].CountryGroup\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Country.get('Code').value=='CAR'\">\r\n                                        <label>Country Group</label>\r\n                                        <select *ngIf=\"isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\" [attr.readonly]=\"isReadOnly\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n                                        <select *ngIf=\"!isReadOnly\" formControlName=\"Id\" class=\"form-control\" placeholder=\"Select Country Group\">\r\n                                            <option [value]=\"null\">Select Country Group</option>\r\n                                            <option *ngFor=\"let ct of CountryGroupList\" [value]=\"ct.Id\">\r\n                                                {{ct.Name}}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>County</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CountyName\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].CountyName.touched || PickupForm.controls['BulkPlant']['controls'].CountyName.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].CountyName.errors.pattern\">\r\n                                                Invalid (alphanumeric with comma spaces only)\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Latitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Latitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Latitude.touched || PickupForm.controls['BulkPlant']['controls'].Latitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Latitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-6\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <label>Longitude</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Longitude\" [readonly]=\"isReadOnly\" />\r\n                                        <ng-container *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.invalid\r\n                                      && (PickupForm.controls['BulkPlant']['controls'].Longitude.touched || PickupForm.controls['BulkPlant']['controls'].Longitude.dirty)\">\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.required\">\r\n                                                Required\r\n                                            </label>\r\n                                            <label style=\"color:red\" *ngIf=\"PickupForm.controls['BulkPlant']['controls'].Longitude.errors.pattern\">\r\n                                                Invalid\r\n                                            </label>\r\n                                        </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pa bg-white z-index5 loading-wrapper\" *ngIf=\"_loadingAddress\">\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- bulk plant ends -->\r\n                </div>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn\" data-dismiss=\"modal\" id=\"btnTBDDrPickupClose\">Cancel</button>\r\n                    <button type=\"button\" [disabled]=\"!PickupForm.valid\" (click)=\"updateTBDPickupLocation_()\" class=\"btn btn-primary\">Add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- blend dr modal -->\r\n<div id=\"openBlendModalButton\" [hidden]=\"true\" data-toggle=\"modal\" data-target=\"#blendModal\"></div>\r\n<div class=\"modal fade\" id=\"blendModal\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\"\r\n     aria-labelledby=\"blendModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header py-1\">\r\n                <h4 class=\"modal-title\">Blend Details</h4>\r\n                <button type=\"button\" class=\"close mt-n2\" data-dismiss=\"modal\" (click)=\"IsPickupForBlendRequest=false\">&times;</button>\r\n            </div>\r\n\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\" *ngIf=\"fmGroup?.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex]\">\r\n\r\n                <div>\r\n                    <label class=\"form-check-label  fs18\">Products</label>\r\n                    <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0)\"></a>\r\n                </div>\r\n\r\n                <form [formGroup]=\"blendRequestForm\">\r\n                    <ng-container *ngFor=\"let blendedRequest of blendRequestForm.get('BlendedRequests')['controls']; let x = index;let first = first;let last = last;\">\r\n\r\n                        <ng-container formArrayName=\"BlendedRequests\">\r\n                            <ng-container [formGroupName]=\"x\">\r\n\r\n                                <!-- additive label -->\r\n                                <ng-container *ngIf=\"blendedRequest.get('IsAdditive').value && (first || !blendRequestForm.get('BlendedRequests')['controls'][+x - 1].get('IsAdditive').value)\">\r\n\r\n                                    <!-- validations -->\r\n                                    <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                        <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2\">Sum of entered quantity should match with {{fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('RequiredQuantity').value}}.</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <label class=\"form-check-label fs18\">Additive</label>\r\n                                            <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0, true)\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n\r\n                                <div class=\"row mt-2\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div>\r\n                                            <!-- order ddl -->\r\n                                            <select *ngIf=\"!blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\"\r\n                                                    (change)=\"orderChangedForBlendRequest($event.target.value, blendedRequest)\">\r\n                                                <option disabled value=\"null\">Select Order</option>\r\n                                                <option *ngFor=\"let order of getUnUsedOrdersForBlendedRequest(blendedRequest.get('OrderId').value)\" [value]=\"order.OrderId\">\r\n                                                    {{order.PoNumber}}\r\n                                                </option>\r\n                                            </select>\r\n                                            <!-- additive order ddl -->\r\n                                            <select *ngIf=\"blendedRequest.get('IsAdditive').value\" class=\"form-control\" formControlName=\"OrderId\" (change)=\"getUoM($event.target.value, blendedRequest)\">\r\n                                                <option disabled value=\"null\">Select Order</option>\r\n                                                <ng-container *ngFor=\"let order of getUnUsedBlendOrders(blendedRequest.get('OrderId').value)\">\r\n                                                    <option *ngIf=\"order.JobId == DipTestsForEachTank[DrForEditBlendedRequestIndex]?.JobId\" [value]=\"order.Id\">\r\n                                                        {{order.Name}}\r\n                                                    </option>\r\n                                                </ng-container>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class=\"color-maroon\" *ngIf=\"blendedRequest.get('OrderId').touched && blendedRequest.get('OrderId').errors\">\r\n                                            <div>Order is required </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"number\" formControlName=\"RequiredQuantity\"\r\n                                                       numberWithDecimal class=\"form-control pr-2\" placeholder=\"Required Quantity\" (input)=\"blendDrQuantityChanged($event.target.value,x);\" />\r\n                                                <div class=\"input-group-addon\">{{blendedRequest.get('UoM').value != null ? blendedRequest.get('UoM').value : this.DipTestsForEachTank[this.DrForEditBlendedRequestIndex]?.UoM}}</div>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\"\r\n                                                 *ngIf=\"((blendRequestForm.touched && blendedRequest.get('IsAdditive').value) || blendedRequest.get('RequiredQuantity').touched || blendedRequest.get('QuantityInPercent').touched) && blendedRequest.get('RequiredQuantity').errors\">\r\n                                                <div> Quantity is required </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-sm-3\" *ngIf=\"!blendedRequest.get('IsAdditive').value\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"number\" formControlName=\"QuantityInPercent\"\r\n                                                       numberWithDecimal class=\"form-control\"\r\n                                                       placeholder=\"Quantity In Percent\" (input)=\"blendDrPercentChanged($event.target.value,x);\" />\r\n                                                <div class=\"input-group-addon\">%</div>\r\n                                            </div>\r\n\r\n                                            <div class=\"color-maroon\"\r\n                                                 *ngIf=\"(blendedRequest.get('QuantityInPercent').touched || blendedRequest.get('RequiredQuantity').touched) && blendedRequest.get('QuantityInPercent').invalid\">\r\n                                                <div>Invalid percentage</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <!-- remove row -->\r\n                                    <div class=\"col-sm-2 input-group\">\r\n                                        <a type=\"button\" title=\"Remove\" class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\" (click)=\"addRemoveBlendedProduct(false, x)\"></a>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <!-- pickup loc -->\r\n                                <div class=\"row mt-1\">\r\n                                    <div class=\"col-sm-12\" *ngIf=\"!fmGroup.controls['IsCommonPickup']?.value && !blendedRequest.get('IsAdditive').value && !fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('IsCommonPickupForBlend').value\">\r\n                                        <div class=\"input-group\">\r\n                                            <div class=\"pull-left\">\r\n                                                <i class=\"fas fa-map-marker-alt\"></i>&nbsp; Pickup :\r\n                                                <span class=\"pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else location;\">Terminal</span>\r\n                                                <ng-template #location><span class=\"pr5\">Location</span></ng-template>\r\n                                            </div>\r\n                                            <div class=\"pull-left pr5\" *ngIf=\"blendedRequest.controls['PickupLocationType']?.value!=2; else bulkPlant;\">\r\n                                                {{blendedRequest.controls['Terminal']?.controls['Name']?.value}}\r\n                                                <div *ngIf=\"blendedRequest.controls['Terminal']?.invalid && (blendedRequest.controls['Terminal']?.dirty || blendedRequest.controls['Terminal']?.touched)\">\r\n                                                    <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['Terminal']?.controls['Name'].errors.required\">Required</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ng-template #bulkPlant class=\"pull-left pr5\">\r\n                                                <span class=\"pull-left pl5 pr5\">\r\n                                                    {{blendedRequest.controls['BulkPlant']?.controls['SiteName'].value}}, {{blendedRequest.controls['BulkPlant']?.controls['City'].value}},\r\n                                                    {{blendedRequest.controls['BulkPlant']?.controls['State']?.controls['Code'].value}} {{blendedRequest.controls['BulkPlant']?.controls['ZipCode'].value}}\r\n                                                </span>\r\n                                                <div *ngIf=\"blendedRequest.controls['BulkPlant'].invalid && (blendedRequest.controls['BulkPlant'].dirty || blendedRequest.controls['BulkPlant'].touched)\">\r\n                                                    <label class=\"fs12\" style=\"color:red\" *ngIf=\"blendedRequest.controls['BulkPlant'].invalid\">Required</label>\r\n                                                </div>\r\n                                            </ng-template>\r\n                                            <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                <a class=\"float-left\" (click)=\"IsPickupForBlendRequest=true;editPickupLocationForBlend(x);\" data-toggle=\"modal\" data-target=\"#dr-pickup-location\" placement=\"bottom\" ngbTooltip=\"Edit Pickup Location\"><i class=\"fa fa-edit fs18 ml-3 mt2\"></i></a>\r\n                                            </span>\r\n                                            <span *ngIf=\"(blendedRequest.controls['PostLoadedFor']==null || blendedRequest.controls['PostLoadedFor']==undefined)\">\r\n                                                <a (click)=\"RemovePickupLocation(blendedRequest, x)\" placement=\"bottom\" ngbTooltip=\"Remove Pickup Location\" class=\"float-left color-maroon\"><i class=\"fa fa-close fs18 ml-2 mt2\"></i></a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- additive label -->\r\n                                <ng-container *ngIf=\"(last && !blendedRequest.get('IsAdditive').value)\">\r\n\r\n                                    <!-- validations -->\r\n                                    <div class=\"mt10\" *ngIf=\"blendRequestForm.valid\">\r\n                                        <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length>0 && !isBlendedRequestQuantityValid()\" class=\"alert alert-danger mb-2 p-2\">Sum of entered quantity should match with {{fmGroup.get('DeliveryRequests')['controls'][DrForEditBlendedRequestIndex].get('RequiredQuantity').value}}.</div>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt-3\">\r\n                                        <div class=\"col-sm-12\">\r\n                                            <label class=\"form-check-label fs18\">Additive</label>\r\n                                            <a type=\"button\" title=\"Add\" class=\"fa fa-plus-circle mt9 mr10 fs15 ml10\" (click)=\"addRemoveBlendedProduct(true, 0, true)\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-container>\r\n\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                    <!-- validations -->\r\n                    <ng-container *ngIf=\"blendRequestForm.valid\">\r\n                        <div class=\"mt10\">\r\n                            <div *ngIf=\"blendRequestForm.get('BlendedRequests')['controls'].length<2\" class=\"alert alert-danger mb-2 p-2\">Please add at least two rows.</div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <div class=\"text-right\">\r\n                        <!-- buttons -->\r\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-lg\" (click)=\"IsPickupForBlendRequest=false\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-lg\" [disabled]=\"blendRequestForm.invalid || blendRequestForm.get('BlendedRequests')['controls'].length<2 || !isBlendedRequestQuantityValid()\" (click)=\"submitBlendedForm()\" data-dismiss=\"modal\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, QueryList, ViewChildren, SimpleChanges, ViewChild, OnDestroy } from '@angular/core';\r\nimport { ForecastingTankViewModel, ForecastingInventoryViewModel, ForecastingEstimatedUsageViewModel, ForecastingDeliveryViewModel, ForecastingExistingScheduleViewModel, SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { forkJoin, merge, Subject, Subscription } from 'rxjs';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { DipTestComponent } from '../dip-test/dip-test.component';\r\nimport { ForecastingLocationFilter } from 'src/app/dispatcher/dispatcher.model';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LocationTankDetailsModel, WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\r\ndeclare var IsBuyerCompany: boolean;\r\ndeclare function closeSlidePanel(): any;\r\n\r\n@Component({\r\n    selector: 'app-forecasting-tank-view',\r\n    templateUrl: './tank-view-component.html',\r\n    styleUrls: ['./tank-view-component.css']\r\n})\r\nexport class ForcastingTankViewComponent implements OnInit, OnDestroy {\r\n\r\n    public LocationSchedules: any = [];\r\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\r\n    public FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\r\n    public ForecastingTankDetails: ForecastingTankViewModel[] = [];\r\n    public ForecastingTankInventoryDetails: ForecastingInventoryViewModel[] = [];\r\n    public ForecastingTankEstimatedUsageDetails: ForecastingEstimatedUsageViewModel[] = [];\r\n    public ForecastingTankDeliveryDetails: ForecastingDeliveryViewModel[] = [];\r\n    public ForecastingTankScheduleDetails: ForecastingExistingScheduleViewModel[] = [];\r\n    public dtInventoryTrigger: Subject<any> = new Subject();\r\n    public dtInventoryOptions: any = {};\r\n    public dtEstimatedTrigger: Subject<any> = new Subject();\r\n    public dtEstimatedOptions: any = {};\r\n    public dtDeliveryTrigger: Subject<any> = new Subject();\r\n    public dtDeliveryOptions: any = {};\r\n    public dtScheduleTrigger: Subject<any> = new Subject();\r\n    public dtScheduleOptions: any = {};\r\n    public exportInvitedColumns = { columns: ':visible' };\r\n    public MinInputDate: Date = new Date();\r\n    public MaxInputDate: Date = new Date();\r\n    public IsInventoryLoading: boolean = false;\r\n    public IsEstimatedLoading: boolean = false;\r\n    public IsDeliveryLoading: boolean = false;\r\n    public IsScheduleLoading: boolean = false;\r\n    public IstankLoading: boolean = true;\r\n    public SelectedTankRegionId: string = '';\r\n    public StartDate: string = '';\r\n    public EndDate: string = '';\r\n    IsLocDrpDwnLoading = false;\r\n    SelectedLocationId: string;\r\n    SelectedTankId: string;\r\n    SelectedTankIds: string;\r\n    SelectedStorageId: string;\r\n    SelectedSiteId: string;\r\n\r\n    @Input() RequestFromBuyerWallyBoard: boolean = false;\r\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n\r\n    filterArgs = { key: \"DaysRemaining\", asc: true };\r\n    @Input() salesTabFilterForm: FormGroup;\r\n    public applyFilterSubscription: Subscription[]= [];\r\n    \r\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) { }\r\n\r\n    ngOnInit() {\r\n        this.ForecastingTankDetails = [];\r\n        this.MinInputDate.setFullYear(this.MaxInputDate.getFullYear() - 1);\r\n        this.MaxInputDate.setFullYear(this.MaxInputDate.getFullYear() + 10);\r\n        this.intializeTableDetails();\r\n\r\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\r\n            if(this.salesTabFilterForm.get('RateOfConsumption').value){\r\n                this.initLocationDropDown(1);\r\n            }\r\n        }));\r\n\r\n        if(this.salesTabFilterForm.get('RateOfConsumption').value){\r\n            this.initLocationDropDown(1);\r\n        }\r\n    }\r\n    ngOnDestroy(){\r\n        if (this.applyFilterSubscription) {\r\n            this.applyFilterSubscription.forEach(subscription => {\r\n                subscription.unsubscribe()\r\n            });\r\n        }\r\n    }\r\n    setSortArgs(key: string) {\r\n        if (this.filterArgs.key == key) {\r\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\r\n        }\r\n        else {\r\n            this.filterArgs = { asc: true, key: key }\r\n        }\r\n    }\r\n    initLocationDropDown(isLocationLoad: number = 0) {\r\n        this.IsLocDrpDwnLoading = true;\r\n        this.LocationDrpDwnList = [];\r\n\r\n        let filter: ForecastingLocationFilter = new ForecastingLocationFilter();\r\n\r\n        if (this.RequestFromBuyerWallyBoard) {\r\n            filter = {\r\n                Carriers: '',\r\n                CustomerIds: '',\r\n                InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\r\n                IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\r\n                IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\r\n                RegionId: '',\r\n            };\r\n        } else {\r\n            filter = {\r\n                Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\r\n                CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\r\n                InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\r\n                IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\r\n                IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\r\n                RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\r\n            };\r\n        }\r\n\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getSupplierLocationTanks(filter).subscribe((result: any) => {\r\n                if (result != null) {\r\n                    this.intializeLocationDetails(result, isLocationLoad);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerLocationTanks(filter).subscribe((result: any) => {\r\n                if (result != null) {\r\n                    this.intializeLocationDetails(result, isLocationLoad);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    Partsfiltering(inputName?) {       \r\n        this.FilterLocationDrpDwnList = [];\r\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\r\n            let searchWord = inputName.target.value.toUpperCase();\r\n            this.LocationDrpDwnList.forEach(element => {\r\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\r\n                    this.FilterLocationDrpDwnList.push(element);\r\n                }\r\n            });\r\n        } else {\r\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;           \r\n        }       \r\n    }\r\n    locationChange($event) {\r\n        this.SelectedTankId = null;\r\n        this.SelectedLocationId = $event.JobId;\r\n        this.SelectedSiteId = $event.SiteId;\r\n        this.SelectedTankIds = 'NONE';\r\n        this.SelectedStorageId = 'NONE';\r\n        this.StartDate = '';\r\n        this.EndDate = '';\r\n        this.ForecastingTankDetails = [];\r\n        this.ForecastingTankEstimatedUsageDetails = [];\r\n        this.getTankDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankInventoryDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankDeliveryDetails(parseInt(this.SelectedLocationId));\r\n        this.getTankScheduleDetails(parseInt(this.SelectedLocationId));\r\n    }\r\n    tankChange($event) {\r\n        this.StartDate = '';\r\n        this.EndDate = '';\r\n        this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\r\n        this.SelectedTankIds = $event.TankId;\r\n        this.SelectedStorageId = $event.StorageId;\r\n        this.ForecastingTankDetails = [];\r\n        this.ForecastingTankEstimatedUsageDetails = [];\r\n        this.getTankDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankInventoryDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankDeliveryDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n        this.getTankScheduleDetails(parseInt(this.SelectedLocationId), $event.TankId, $event.StorageId);\r\n    }\r\n    getTankDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IstankLoading = true;\r\n        this.IsInventoryLoading = true;\r\n        this.IsDeliveryLoading = true;\r\n        this.IsScheduleLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingTankViewModel[]) => {\r\n                this.ForecastingTankDetails = resp;             \r\n                this.ForecastingTankDetails && this.ForecastingTankDetails.map(m => {\r\n                    try {\r\n                        this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n\r\n                })\r\n                this.IstankLoading = false;\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingTankViewModel[]) => {\r\n                this.ForecastingTankDetails = resp;\r\n                this.ForecastingTankDetails && this.ForecastingTankDetails.map(m => {\r\n                    try {\r\n                        this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    }\r\n\r\n                })\r\n                this.IstankLoading = false;\r\n            });\r\n        }\r\n    }\r\n    getTankInventoryDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsInventoryLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankInventoryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingInventoryViewModel[]) => {\r\n                this.ForecastingTankInventoryDetails = resp;\r\n                this.IsInventoryLoading = false;\r\n                this.datatableInventoryRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankInventoryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingInventoryViewModel[]) => {\r\n                this.ForecastingTankInventoryDetails = resp;\r\n                this.IsInventoryLoading = false;\r\n                this.datatableInventoryRerender();\r\n            });\r\n        }\r\n    }\r\n    getTankEstimatedUsageDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        if (this.StartDate && this.StartDate != '' && this.EndDate && this.EndDate != '') {\r\n            this.IsEstimatedLoading = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.getForcastingTankEstimatedUsageDetails(JobId, TankId, StorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.getBuyerForcastingTankEstimatedUsageDetails(JobId, TankId, StorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n        }\r\n    }\r\n    getTankDeliveryDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsDeliveryLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankDeliveryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingDeliveryViewModel[]) => {\r\n                this.ForecastingTankDeliveryDetails = resp;\r\n                this.IsDeliveryLoading = false;\r\n                this.datatableDeliveryRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankDeliveryDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingDeliveryViewModel[]) => {\r\n                this.ForecastingTankDeliveryDetails = resp;\r\n                this.IsDeliveryLoading = false;\r\n                this.datatableDeliveryRerender();\r\n            });\r\n        }\r\n    }\r\n    getTankScheduleDetails(JobId: number, TankId: string = '', StorageId = '') {\r\n        this.IsScheduleLoading = true;\r\n        if (IsBuyerCompany == false) {\r\n            this.dispatcherService.getForcastingTankScheduleDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingExistingScheduleViewModel[]) => {\r\n                this.ForecastingTankScheduleDetails = resp;\r\n                this.IsScheduleLoading = false;\r\n                this.datatableScheduleRerender();\r\n            });\r\n        }\r\n        else {\r\n            this.dispatcherService.getBuyerForcastingTankScheduleDetails(JobId, TankId, StorageId).subscribe((resp: ForecastingExistingScheduleViewModel[]) => {\r\n                this.ForecastingTankScheduleDetails = resp;\r\n                this.IsScheduleLoading = false;\r\n                this.datatableScheduleRerender();\r\n            });\r\n        }\r\n    }\r\n    intializeInventoryTable() {\r\n        this.dtInventoryOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Inventory Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Inventory Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeEstimatedUsageTable() {\r\n        this.dtEstimatedOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Estimated Usage Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Estimated Usage Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeDeliveryTable() {\r\n        this.dtDeliveryOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Delivery Information', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Delivery Information', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeScheduleTable() {\r\n        this.dtScheduleOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'csv', title: 'Existing Schedule', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Existing Schedule', orientation: 'landscape', exportOptions: this.exportInvitedColumns },\r\n                { extend: 'print', exportOptions: this.exportInvitedColumns }\r\n            ],\r\n\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n    }\r\n    intializeTableDetails() {\r\n        this.intializeInventoryTable();\r\n        this.intializeEstimatedUsageTable();\r\n        this.intializeDeliveryTable();\r\n        this.intializeScheduleTable();\r\n    }\r\n    private datatableInventoryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtInventoryTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableEstimatedRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtEstimatedTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableDeliveryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtDeliveryTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    private datatableScheduleRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                this.dtScheduleTrigger.next();\r\n            });\r\n        }\r\n    }\r\n    public searchEstimatedData() {\r\n        if (this.StartDate && this.StartDate != '' && this.EndDate && this.EndDate != '') {\r\n            this.IsEstimatedLoading = true;\r\n            if (IsBuyerCompany == false) {\r\n                this.dispatcherService.getForcastingTankEstimatedUsageDetails(this.SelectedLocationId, this.SelectedTankIds, this.SelectedStorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n            else {\r\n                this.dispatcherService.getBuyerForcastingTankEstimatedUsageDetails(this.SelectedLocationId, this.SelectedTankIds, this.SelectedStorageId, this.StartDate, this.EndDate).subscribe((resp: ForecastingEstimatedUsageViewModel[]) => {\r\n                    this.ForecastingTankEstimatedUsageDetails = resp;\r\n                    this.IsEstimatedLoading = false;\r\n                    this.datatableEstimatedRerender();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            Declarations.msgerror('Provide valid input details.', undefined, undefined);\r\n        }\r\n    }\r\n    public intializeLocationDetails(result: any, isLocationLoad: number = 0) {\r\n        this.IsLocDrpDwnLoading = false;\r\n        this.LocationDrpDwnList = result;\r\n        this.Partsfiltering();\r\n        this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\r\n        if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\r\n            this.LocationDrpDwnList.forEach(loc => {\r\n                loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\r\n                    if (result && result.filter(f => f.Tanks.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\r\n                        m.IsUnknowDeliveryOrMissDelivery = true;\r\n                    else\r\n                        m.IsUnknowDeliveryOrMissDelivery = false;\r\n                });\r\n            });\r\n            this.SelectedLocationId = this.LocationDrpDwnList[0].JobId.toString();\r\n            if (isLocationLoad == 0) {\r\n                this.getTankDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankInventoryDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankEstimatedUsageDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankDeliveryDetails(this.LocationDrpDwnList[0].JobId);\r\n                this.getTankScheduleDetails(this.LocationDrpDwnList[0].JobId);\r\n            }\r\n        }\r\n    }\r\n    setFromDate(event: any): void {\r\n        this.StartDate = event;\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        this.EndDate = event;\r\n    }\r\n    public showTanks(location?: any) {\r\n        if(location){\r\n            let row = this.ForecastingTankDetails[0];\r\n            this.SelectedTankRegionId = row.RegionId;\r\n\r\n            var salesDataModel = new SalesDataModel();\r\n            salesDataModel.RegionId = row.RegionId;\r\n            salesDataModel.SiteId = location.SiteId;\r\n            salesDataModel.TankId = location.TankId;\r\n            salesDataModel.StorageId = location.StorageId;\r\n            salesDataModel.TfxJobId = parseInt(location.JobId);\r\n            salesDataModel.LocationManagedType = location.LocationManagedType;\r\n            this.dipTestComponent.loadTankDR(salesDataModel);\r\n        }\r\n        else if (this.ForecastingTankDetails.length > 0) {\r\n\r\n            let row = this.ForecastingTankDetails[0];\r\n            this.SelectedTankRegionId = row.RegionId;\r\n            var salesDataModel = new SalesDataModel();\r\n            salesDataModel.RegionId = row.RegionId;\r\n            salesDataModel.SiteId = row.SiteId;\r\n            salesDataModel.TankId = row.TankId;\r\n            salesDataModel.StorageId = row.StorageId;\r\n            salesDataModel.TfxJobId = parseInt(this.SelectedLocationId);\r\n            salesDataModel.LocationManagedType = row.LocationManagedType;\r\n            this.dipTestComponent.loadTankDR(salesDataModel);\r\n        }\r\n    }\r\n    public closeSidePanel() {\r\n        closeSlidePanel();\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\r\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No\r\n                    Location Available</div>\r\n                <div class=\"table-scroll\" *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"45%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index;\">\r\n                                <tr >\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div \r\n                                                    ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\r\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\r\n                                                    (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                       \r\n                                    </td>\r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <!-- <td>{{loc.Status}}</td> -->\r\n                                    <td>\r\n                                        <!-- location level create dr -->\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\r\n                                    <td colspan=\"3\">\r\n                                        <div class=\"card-body\">\r\n                                            <ul class=\"list-group list-group-flush\">\r\n                                                <table class=\"table tank-view-child\">\r\n                                                    <!-- <thead>\r\n                                                        <tr>\r\n                                                            <th>Location</th>\r\n                                                            <th>Days remaining</th>\r\n                                                            <th>Status</th>\r\n                                                        </tr>\r\n                                                    </thead> -->\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                            <td width=\"45%\">\r\n                                                                <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\" [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                    {{tank.Name}}\r\n                                                                    <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                        class=\"active-dot\"></span>\r\n                                                                    <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                                        *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                                </a>\r\n                                                            </td>\r\n                                                            <td width=\"24%\">\r\n                                                                {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <!-- tank level create dr -->\r\n                                                                <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                    <span class=\"\">{{tank.Status}}</span>\r\n                                                                </a>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <!-- <li class=\"list-group-item \" *ngFor=\"let tank of loc?.Tanks\"\r\n                                                    [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                    <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\">\r\n                                                        {{tank.Name}}({{(tank.DaysRemaining == 0)? \"N\\A\": tank.DaysRemaining + \" Days\"}}) <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                            class=\"active-dot\"></span>\r\n                                                        <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                            *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                    </a>\r\n                                                </li> -->\r\n                                            </ul>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3 pl-0\" *ngIf=\"ForecastingTankDetails!=null && ForecastingTankDetails.length>0\">\r\n        <div class=\"mb5 text-center\">\r\n            <a href=\"javascript:void(0)\" class=\"fs18 mb10\" (click)=\"showTanks()\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                <i class=\"fa fa-plus-circle fs18 mt4\"></i><span class=\"fs14 mt2 ml5\">Create DR</span>\r\n            </a>\r\n        </div>\r\n        <div *ngIf=\"ForecastingTankDetails!=null && ForecastingTankDetails.length>0\">\r\n            <div class=\"tank-container pr5\">\r\n                <div class=\"mb10\" *ngFor=\"let forecastigTankDetails of ForecastingTankDetails; let i = index;\">\r\n                    <div class=\"dr-panel\">\r\n                        <div class=\"header\">\r\n                            <div class=\"mb5\">\r\n                                <span class=\"tank-name\">{{forecastigTankDetails.TankName}}</span>\r\n                                <span class=\"product-type\"> {{forecastigTankDetails.ProductType}}</span>\r\n                                <!-- <span class=\"left-days\">{{forecastigTankDetails.DaysLeft}} Days remaining</span> -->\r\n                                <span class=\"left-days\">{{(forecastigTankDetails.DaysLeft == null)? \"N\\A\": forecastigTankDetails.DaysLeft + \" Days remaining\"}}</span>\r\n                            </div>\r\n                            <ngb-progressbar [showValue]=\"true\" height=\"20px\" type=\"info\" [value]=\"forecastigTankDetails.TankFill\">\r\n                            </ngb-progressbar>\r\n                            <div class=\"mt5 mb5\"><span class=\"last-reading\">Last Reading Time:\r\n                                    {{forecastigTankDetails.LastReadingTime}}</span> </div>\r\n                        </div>\r\n                        <div class=\"dr-panel-body\">\r\n                            <div class=\"row border-bottom border-top mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Last Reading</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.LastInventoryReading}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Maxfill</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.MaxFillQuantity == null ? 0.0 : forecastigTankDetails.MaxFillQuantity}}</div>\r\n                            </div>\r\n                            <!--<div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Current inventory</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.EstimatedCurrentInventory}}</div>\r\n                            </div>-->\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Ullage</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.UllageSinceLastReading}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Previous day sale</div>\r\n                                <div class=\"col-5 small-value\">\r\n                                    <div *ngIf=\"forecastigTankDetails.PrevSale.startsWith('NA*')\">\r\n                                        Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!forecastigTankDetails.PrevSale.startsWith('NA*')\">\r\n                                        {{forecastigTankDetails.PrevSale}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Trailing 7 days average</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.AvgSale}}</div>\r\n                            </div>\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Sales a week ago </div>\r\n                                <div class=\"col-5 small-value\">\r\n                                    <div *ngIf=\"forecastigTankDetails.WeekAgoSale.startsWith('NA*')\">\r\n                                        Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                    </div>\r\n                                    <div *ngIf=\"!forecastigTankDetails.WeekAgoSale.startsWith('NA*')\">\r\n                                        {{forecastigTankDetails.WeekAgoSale}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-8 small-label\"> Delivery since last reading</div>\r\n                                <div class=\"col-4 small-value\">{{forecastigTankDetails.DeliverySinceLastReading}}</div>\r\n                            </div> -->\r\n                            <div class=\"row border-bottom mlr-5\">\r\n                                <div class=\"col-7 small-label\"> Status</div>\r\n                                <div class=\"col-5 small-value\">{{forecastigTankDetails.Status }}</div>\r\n                            </div>\r\n                            <div class=\"row  mlr-5\">\r\n                                <div class=\"col-12 small-label\">  \r\n                                    <span>Site Instructions </span>\r\n                                    <a data-toggle=\"collapse\" class=\"collapsed_btn\" href=\"#collapseSiteInstructions-{{i}}\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseSiteInstructions\">\r\n                                        <i class=\"fas fa-chevron-down\"></i>\r\n                                        <i class=\"fas fa-chevron-up\"></i>\r\n                                   </a>\r\n                                </div>\r\n                                <div class=\"col-12 small-value p-0\">\r\n                                    <div class=\"collapse\" id=\"collapseSiteInstructions-{{i}}\">\r\n                                        <textarea class=\"col-12\" appCopy readonly>{{forecastigTankDetails.SiteInstructions}}</textarea>   \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-3\" *ngIf=\"IstankLoading && ForecastingTankDetails.length==0\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <div class=\"card pa10 loading-wrapper\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-5 location-chart-panel\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <app-forcasting-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankIds\"\r\n                [StorageId]=\"SelectedStorageId\"></app-forcasting-tank-chart>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Inventory Information</h4>\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-sm\" datatable [dtOptions]=\"dtInventoryOptions\" [dtTrigger]=\"dtInventoryTrigger\">\r\n                    <thead>\r\n                        <tr class=\"font-bold\">\r\n                            <td data-key=\"TankName\">Tank Name</td>\r\n                            <td data-key=\"InventoryLevel\">Inventory Level</td>\r\n                            <td data-key=\"Ullage\">Ullage</td>\r\n                            <td data-key=\"PrevInventory\">Prev Inventory Reading Time</td>\r\n                            <td data-key=\"SafetyStock\">Safety Stock</td>\r\n                            <td data-key=\"RunOutLevel\">Run Out Level</td>\r\n                            <td data-key=\"PhysicalStop\">Physical Pump Stop</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngIf=\"IsInventoryLoading\" class='loading-wrapper bg-white'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </tr>\r\n                        <tr *ngFor=\"let row of ForecastingTankInventoryDetails\">\r\n                            <td>{{row.TankName}}</td>\r\n                            <td>{{row.InventoryLevel}}% ({{row.InventoryLevelQty}})</td>\r\n                            <td>{{row.Ullage}}</td>\r\n                            <td>{{row.PrevInventoryReading}}</td>\r\n                            <td>{{row.SafetyStockQty}} ({{row.SafetyStock}}%)</td>\r\n                            <td>{{row.RunOutLevelQty}} ({{row.RunOutLevel}}%)</td>\r\n                            <td>{{row.PhysicalPumpStopQty}} ({{row.PhysicalPumpStop}}%)</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Estimated Usage Information</h4>\r\n            <div class=\"row mb5\">\r\n                <div class=\"col-sm-3\">\r\n                    <!--<label>Start Date:<span class=\"color-maroon\">*</span></label>-->\r\n                    <input type=\"text\" placeholder=\"Start Date\" class=\"form-control datepicker\" [(ngModel)]=\"StartDate\"\r\n                        [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                        (onDateChange)=\"setFromDate($event);\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n                    <!--<label>End Date:<span class=\"color-maroon\">*</span></label>-->\r\n                    <input type=\"text\" placeholder=\"End Date\" class=\"form-control datepicker\" [(ngModel)]=\"EndDate\"\r\n                        [minDate]=\"MinInputDate\" [maxDate]=\"MaxInputDate\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                        (onDateChange)=\"setToDate($event);\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"col-sm-2\">\r\n                    <label></label>\r\n                    <input type=\"button\" class=\"btn btn-primary\" value=\"Search\" (click)=\"searchEstimatedData();\" />\r\n                </div>\r\n            </div>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtEstimatedOptions\" [dtTrigger]=\"dtEstimatedTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>Usage Period</td>\r\n                        <td>Average Business day Usage</td>\r\n                        <td>Total Expected Usage</td>\r\n                        <td>Maximum Business day Usage</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsEstimatedLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankEstimatedUsageDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.UsagePeriod}}</td>\r\n                        <td>{{row.AverageBusinessDayUsage}}</td>\r\n                        <td>{{row.TotalExceptedUsage}}</td>\r\n                        <td>{{row.MaximumBusinessdayUsage}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Delivery Information</h4>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtDeliveryOptions\" [dtTrigger]=\"dtDeliveryTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>No. Of Deliveries</td>\r\n                        <td>Last Delivered Quantity</td>\r\n                        <td>Last Delivered Date</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsDeliveryLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankDeliveryDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.NoOfDeliveries}}</td>\r\n                        <td>{{row.LastDeliveredQty}}</td>\r\n                        <td>{{row.LastDeliveredDate}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b\">\r\n            <h4 class=\"text-center\">Existing Schedule</h4>\r\n            <table class=\"table table-sm\" datatable [dtOptions]=\"dtScheduleOptions\" [dtTrigger]=\"dtScheduleTrigger\">\r\n                <thead>\r\n                    <tr class=\"font-bold\">\r\n                        <td>Tank Name</td>\r\n                        <td>Existing Delivery Schedule</td>\r\n                        <td>Delivery Request</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngIf=\"IsScheduleLoading\" class='loading-wrapper bg-white'>\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </tr>\r\n                    <tr *ngFor=\"let row of ForecastingTankScheduleDetails\">\r\n                        <td>{{row.TankName}}</td>\r\n                        <td>{{row.ExistingDeliverySchedule}}</td>\r\n                        <td>{{row.DeliveryRequest}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [RequestFromBuyerWallyBoard]=\"RequestFromBuyerWallyBoard\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { __await } from 'tslib';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { SendBirdCommonComponent } from '../common/sendbird.common.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { BackgroupChatIntialize, ChatMessage, Carriar, Driver, ChatData, GroupChannelInfo, chatResponse, MemberInfo } from '../sendbirdCommon';\r\ndeclare var userName: string;\r\ndeclare var userIntialName: string;\r\ndeclare var currentUserCompanyId: number;\r\ndeclare var userEmail: string;\r\ndeclare const SendBird: any;\r\ndeclare function IsUserActive(): boolean;\r\n\r\n@Component({\r\n    selector: 'app-buyer-sendbird',\r\n    templateUrl: './buyer-sendbird.component.html',\r\n    styleUrls: ['./buyer-sendbird.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BuyerSendbirdComponent implements OnInit {\r\n    public sb: any = Object();\r\n    public ChannelHandler: any;\r\n    public appKey: string = '';\r\n    public sbSendbird: FormGroup;\r\n    public backgrounddriverDetails: BackgroupChatIntialize[];\r\n    public chatCollection: ChatMessage[] = [];\r\n    public intervalTime: any;\r\n    public static messageLoadLimit: number = 30;\r\n    constructor(private chatService: chatService, private sbService: ScheduleBuilderService,\r\n        private fb: FormBuilder, private cdr: ChangeDetectorRef) {\r\n    }\r\n    // #region ngEvent  \r\n    ngOnInit() {\r\n        this.sbSendbird = this.initSendbirdForm();\r\n        this.getAPPKey();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.intervalTime) {\r\n            clearInterval(this.intervalTime);\r\n        }\r\n        this.sb.removeChannelHandler(\"onTypingStatusUpdated\");\r\n        this.sb.removeChannelHandler(\"onMessageReceived\");\r\n        this.sb.removeChannelHandler(\"onReadReceiptUpdated\");\r\n    }\r\n    // #endregion \r\n\r\n    //intialize sendbird form.\r\n    private initSendbirdForm() {\r\n        let _dtForm = this.fb.group({\r\n            textMessage: this.fb.control(''),\r\n        });\r\n        return _dtForm;\r\n    }\r\n    // #region privateMethods\r\n    //intialize sendbird account\r\n    private IntializeSendbird(driverId, regionID: string) {\r\n        let currentChatWidgetIndex = this.chatCollection.findIndex(top => top.driverInfo.Id === driverId);\r\n        if (currentChatWidgetIndex === -1) {\r\n            let chatUserDetails = [];\r\n            this.chatService.getDriverDetails(driverId).subscribe(t => {\r\n                if (t.StatusCode === 0) {\r\n                    //create the object of the class\r\n                    let chatMessage: ChatMessage = new ChatMessage();\r\n                    //chatMessage.regionId = regionID;\r\n                    chatMessage.showsmallLoder = false;\r\n                    chatMessage.loadmore = false;\r\n                    let carrierObj: Carriar = new Carriar();\r\n                    let driverObj: Driver = new Driver();\r\n                    let chatData: ChatData[] = [];\r\n                    let groupChannelInfo: GroupChannelInfo = new GroupChannelInfo();\r\n\r\n                    //assign value of driver object\r\n                    driverObj = t as Driver;\r\n                    driverObj.firstMessage = true;\r\n\r\n                    //define the loading..\r\n                    chatMessage.chatLoading = true;\r\n                    chatMessage.divId = \"divusers_\" + this.chatCollection.length;\r\n                    //get companyUserDetails\r\n                     {\r\n                        let companyUserDetails: CompanyUsers[] = [];\r\n                        let companyUser: CompanyUsers = new CompanyUsers();\r\n                        companyUser.RegionDescription = userName;\r\n                        companyUser.RegionID = userName;\r\n                        companyUser.SendBirdRegionID = userName;\r\n                        companyUser.EmailAddress = userEmail;\r\n                        companyUser.FullName = userName;\r\n                        companyUserDetails.push(companyUser);\r\n                            if (companyUserDetails.length > 0) {\r\n\r\n                                //set regionName and regionDescription and regionID.\r\n                                chatMessage.regionName = companyUserDetails[0].RegionName;\r\n                                chatMessage.regionDescription = companyUserDetails[0].RegionDescription;\r\n                                chatMessage.regionId = companyUserDetails[0].SendBirdRegionID;\r\n                                chatMessage.fullregionId = regionID;\r\n                                //set groupName // OR Retrive groupName\r\n                                groupChannelInfo.groupChannelName = \"DR_\" + driverId + \"_COM_\" + currentUserCompanyId + \"_RE_\" + companyUser;\r\n\r\n                                //set companyCurrent User Information\r\n                                chatMessage.companyUserInfo = companyUserDetails;\r\n                                if (companyUserDetails.length > 0) {\r\n                                    companyUserDetails.forEach(xitem => {\r\n                                        chatUserDetails.push(xitem.EmailAddress);\r\n                                    });\r\n                                    chatUserDetails.push(driverObj.Email);\r\n                                    chatMessage.driverInfo = driverObj;\r\n\r\n                                    carrierObj.userName = userName;\r\n                                    carrierObj.userIntialName = userIntialName;\r\n                                    chatMessage.currentLoginUserInfo = carrierObj;\r\n                                    chatMessage.chatData = chatData;\r\n                                    chatMessage.groupChannelInfo = groupChannelInfo;\r\n                                }\r\n                            }\r\n                            else {\r\n                                chatMessage.companyUserInfo = [];\r\n                            }\r\n                            if (chatMessage.companyUserInfo.length > 0) {\r\n                                this.chatCollection.push(chatMessage);\r\n                                this.cdr.detectChanges();\r\n                                let chatObj = this.chatCollection.find(top => top.driverInfo.Email === driverObj.Email);\r\n                                if (chatObj != null) {\r\n                                    this.createAccount(chatMessage.companyUserInfo, chatMessage.currentLoginUserInfo, chatMessage.driverInfo, chatObj);\r\n                                }\r\n                            } else {\r\n                                Declarations.msgwarning(\"There is no dispatcher found in the region\", undefined, undefined);\r\n                            }\r\n                        }\r\n\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Issue in getDriverDetails api..\", undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //create account in sendbird and connect to groupchat\r\n    private async createAccount(companyUserInfo: CompanyUsers[], currentUserLoginInfo: Carriar, driverObj: Driver, chatMessage: ChatMessage) {\r\n        try {\r\n            if (companyUserInfo.length > 0 && driverObj != null && currentUserLoginInfo != null) {\r\n                //create driver account\r\n                let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                let driverObjResult = await this.connectDriver(driverObj) as chatResponse;\r\n                if (driverObjResult.statusCode === 100 && carrierObjResult.statusCode === 100) {\r\n                    //check channel exists or not..\r\n                    let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                    if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                        //find the diffrence member between group member and company users\r\n                        //so that we can add additional member to current channel\r\n                        let sbjoinResponse = await this.sbJoinGroupChannel(chatMessage, groupChannel.object1, companyUserInfo, driverObj) as chatResponse;\r\n                        if (sbjoinResponse.statusCode === 200) {\r\n                        }\r\n                        else {\r\n                        }\r\n                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                        if (carrierObjResult.statusCode === 100) {\r\n                            this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                            let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                            if (messageHistory.statusCode === 100) {\r\n                                this.updateChatData(chatMessage, messageHistory);\r\n                                let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                if (memberInfos.length > 0)\r\n                                    chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                if (groupChannel.statusCode === 100) {\r\n                                    chatMessage.chatLoading = false;\r\n                                    let dvObj = $(\"#\" + chatMessage.divId);\r\n                                    if (dvObj != undefined) {\r\n                                        if (dvObj.hasClass('chat-minimized')) {\r\n                                            dvObj.removeClass('chat-minimized');\r\n                                            if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.cdr.detectChanges();\r\n                                    setTimeout(function () { BuyerSendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //create company users account - dispatcher,carrier => Role\r\n                        let companyUserCount = companyUserInfo.length;\r\n                        if (companyUserInfo.length > 0) {\r\n                            for (const companyUser of companyUserInfo) {\r\n                                let companyUserResponse = await this.connectCompanyUser(companyUser) as chatResponse;\r\n                                if (companyUserResponse.statusCode === 100) {\r\n                                    companyUser.ProfileURL = companyUserResponse.object.profileUrl;\r\n                                    companyUserCount = companyUserCount - 1;\r\n                                    if (companyUserCount == 0) {\r\n                                        //connect current user account - sendbird\r\n                                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                                        if (carrierObjResult.statusCode === 100) {\r\n                                            //create the groupChannel of All Company Users(Carrier,Dispatcher) \r\n                                            //1 to M => 1 Drivers to Many Dispacther.Carrier User\r\n                                            //create group channel or retrive channel if created.\r\n                                            let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                                            if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                                                this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                                                let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                if (messageHistory.statusCode === 100) {\r\n                                                    this.updateChatData(chatMessage, messageHistory);\r\n                                                    let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                    if (memberInfos.length > 0)\r\n                                                        chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                }\r\n                                                else {\r\n                                                }\r\n                                            }\r\n                                            else if (groupChannel.statusCode === 200) { //create the group channel\r\n                                                let createdChannel = await this.sbCreateGroupChannel(groupChannel.object, groupChannel.object1, chatMessage.regionName, chatMessage.regionDescription) as chatResponse;\r\n                                                if (createdChannel.statusCode === 100) {\r\n                                                    this.updateGroupChannelInfo(chatMessage, createdChannel);\r\n                                                    let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                    if (messageHistory.statusCode === 100) {\r\n                                                        this.updateChatData(chatMessage, messageHistory);\r\n                                                        let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                        if (memberInfos.length > 0)\r\n                                                            chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if (groupChannel.statusCode === 100 || groupChannel.statusCode === 200) {\r\n                                                chatMessage.chatLoading = false;\r\n                                                let dvObj = $(\"#\" + chatMessage.divId);\r\n                                                if (dvObj != undefined) {\r\n                                                    if (dvObj.hasClass('chat-minimized')) {\r\n                                                        dvObj.removeClass('chat-minimized');\r\n                                                        if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                            dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                this.cdr.detectChanges();\r\n                                                setTimeout(function () { BuyerSendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (chatMessage.companyUserInfo.length == 0) {\r\n                    chatMessage.chatLoading = false;\r\n                    var chatObjIndex = this.chatCollection.findIndex(top => top.driverInfo.Email === driverObj.Email);\r\n                    if (chatObjIndex != -1) {\r\n                        this.chatCollection.splice(chatObjIndex, 1);\r\n                        this.cdr.detectChanges();\r\n                    }\r\n                    Declarations.msgwarning(\"This driver is not assigned to any region\", undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    public async connectCompanyUser(companyUserObj: CompanyUsers) {\r\n        //create company user if not created..\r\n        let companyObjResult = await this.sbConnect(companyUserObj.EmailAddress) as chatResponse;\r\n        if (companyObjResult.statusCode === 100) {\r\n            let companyObjData = companyObjResult.object;\r\n            companyUserObj.ProfileURL = companyObjData.profileUrl;\r\n            if (companyUserObj.FullName != companyObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(companyUserObj.FullName, companyObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return companyObjResult;\r\n    }\r\n\r\n    private async connectDispatcher(carrierObj: Carriar) {\r\n        //create carrier user if not created..\r\n        let carrierObjResult = await this.sbConnect(carrierObj.userName) as chatResponse;\r\n        if (carrierObjResult.statusCode === 100) {\r\n            let carrierObjData = carrierObjResult.object;\r\n            carrierObj.ProfileURL = carrierObjData.profileUrl;\r\n            if (carrierObj.userIntialName != carrierObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(carrierObj.userIntialName, carrierObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return carrierObjResult;\r\n    }\r\n    private async connectDriver(driverObj: Driver) {\r\n        //create driver user if not created..\r\n        let driverdetails = [];\r\n        driverdetails.push(driverObj.Email);\r\n        let userAvailable = await this.sbGetUserDetails(driverdetails) as chatResponse;\r\n        let driverObjResult = new chatResponse();\r\n        if (userAvailable.statusCode == 100) {\r\n            if (userAvailable.object.length === 0) {\r\n                driverObjResult = await this.sbConnect(driverObj.Email) as chatResponse;\r\n                if (driverObjResult.statusCode === 100) {\r\n                    let driverObjData = driverObjResult.object;\r\n                    driverObj.ProfileURL = driverObjData.profileUrl;\r\n                    let connectionStatusResponse = await this.checkUserOnline(driverObj.Email) as chatResponse;\r\n                    if (connectionStatusResponse.statusCode === 100) {\r\n                        driverObj.ConnectionStatus = connectionStatusResponse.object.toUpperCase() === 'ONLINE' ? true : false;\r\n                    }\r\n                    if (driverObj.ConnectionStatus === false) {\r\n                        if (driverObjData.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(driverObjData.lastSeenAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            driverObj.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    if (driverObj.FullName != driverObjData.nickname) {\r\n                        let updateDriverInfo = await this.sbUpdateCurrentUserInfo(driverObj.FullName, driverObjData.profileUrl) as any;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                driverObjResult.statusCode = 100;\r\n                driverObjResult.object = userAvailable.object[0];\r\n                driverObj.ConnectionStatus = driverObjResult.object.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                driverObj.ProfileURL = driverObjResult.object.profileUrl;\r\n                if (driverObj.ConnectionStatus === false) {\r\n                    if (driverObjResult.object.lastSeenAt > 0) {\r\n                        let lastSeen = new Date(driverObjResult.object.lastSeenAt);\r\n                        let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                        let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                        let day = lastSeen.getDate();\r\n                        driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                        driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                    }\r\n                    else {\r\n                        driverObj.lastSeenAt = 'NO';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return driverObjResult;\r\n    }\r\n    private static scrollBottomDiv(driverObj: Driver) {\r\n        if ($(\".driver_\" + driverObj.Id)[0]) {\r\n            $(\".driver_\" + driverObj.Id).scrollTop($(\".driver_\" + driverObj.Id)[0].scrollHeight);\r\n        }\r\n    }\r\n    private updateGroupChannelInfo(chatMessage: ChatMessage, groupChannel: chatResponse) {\r\n        chatMessage.groupChannelInfo.groupChannelURL = groupChannel.object;\r\n        if (chatMessage.groupChannelInfo.groupChannelObj == null) {\r\n            chatMessage.groupChannelInfo.groupChannelObj = groupChannel.object1;\r\n        }\r\n    }\r\n    private updateChatData(chatMessage: ChatMessage, chatReponse: chatResponse) {\r\n        chatMessage.chatData = chatReponse.object as ChatData[];\r\n        if (chatMessage.chatData.length >= BuyerSendbirdComponent.messageLoadLimit) {\r\n            chatMessage.loadmore = true;\r\n        }\r\n    }\r\n    private sbGetUserDetails = userIds => {\r\n        let response = new chatResponse();\r\n        return new Promise((resolve) => {\r\n            // Retrieving certain users using the UserID filter\r\n            let applicationUserListQueryByIds = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQueryByIds.userIdsFilter = userIds;\r\n            applicationUserListQueryByIds.next((user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbConnect = userId => {\r\n        return new Promise((resolve, reject) => {\r\n            let response: chatResponse = new chatResponse();\r\n            this.sb.connect(userId, (user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 200;\r\n                    response.message = 'SendBird Login Failed.';\r\n                    reject(response);\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbUpdateCurrentUserInfo = (nickname, profileUrl) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.sb.updateCurrentUserInfo(nickname, profileUrl, (user, error) => {\r\n                error ? reject('Unable to update user profile') : resolve(user);\r\n            });\r\n        });\r\n    };\r\n    private sbIntializeGroupChannel = (driverId, companyUserDetails: CompanyUsers[], groupChannelInfo: GroupChannelInfo) => {\r\n        return new Promise((resolve) => {\r\n            let userDetails = [];\r\n            //push company user to array\r\n            companyUserDetails.forEach(comItem => {\r\n                userDetails.push(comItem.EmailAddress);\r\n            });\r\n            //push driver details to array\r\n            userDetails.push(driverId);\r\n\r\n            let response: chatResponse = new chatResponse();\r\n            let filteredQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\r\n            filteredQuery.channelNameContainsFilter = groupChannelInfo.groupChannelName;\r\n            filteredQuery.includeEmpty = true;\r\n            filteredQuery.limit = 15;\r\n            filteredQuery.next(function (groupChannels, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(chatResponse);\r\n                }\r\n                else {\r\n                    if (groupChannels.length > 0) {\r\n                        //return the group channel\r\n                        response.object = groupChannels[0].url;\r\n                        response.object1 = groupChannels[0];\r\n                        response.statusCode = 100;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        //create the group channel\r\n                        response.statusCode = 200;\r\n                        response.object = userDetails;\r\n                        response.object1 = groupChannelInfo.groupChannelName;\r\n                        resolve(response);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbCreateGroupChannel = (userIds, groupChannelName, regionName, regionDecription) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let groupChannelparams = new this.sb.GroupChannelParams();\r\n            groupChannelparams.isPublic = true;\r\n            groupChannelparams.isEphemeral = false;\r\n            groupChannelparams.isDistinct = false;\r\n            groupChannelparams.addUserIds(userIds);\r\n            groupChannelparams.name = groupChannelName;\r\n            groupChannelparams.data = regionDecription;\r\n            groupChannelparams.customType = regionName;\r\n            this.sb.GroupChannel.createChannel(groupChannelparams, (groupChannel, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = groupChannel.url;\r\n                    response.object1 = groupChannel;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbLoadChatHistroy = (chatting_groupChannel, carrierObj: Carriar, chatObj: ChatMessage) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let messageListQuery = chatting_groupChannel.createPreviousMessageListQuery();\r\n            messageListQuery.limit = BuyerSendbirdComponent.messageLoadLimit;\r\n            messageListQuery.reverse = false;\r\n            // Retrieving  messages.\r\n            messageListQuery.load(function (messages, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let chatData: ChatData[] = [];\r\n                    messages.forEach(function (value) {\r\n                        let date = new Date(value.createdAt);\r\n                        let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                        let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                        let day = date.getDate();\r\n                        let year = date.getFullYear();\r\n                        if (value._sender.nickname.trim().length === 0) {\r\n                            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                value._sender.nickname = chatObj.driverInfo.FullName;\r\n                            }\r\n                            else {\r\n                                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                if (dispatcherDetails != null) {\r\n                                    value._sender.nickname = dispatcherDetails.FullName;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (value._sender.userId === carrierObj.userName) {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 1;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                chatItem.nickname = value._sender.nickname;\r\n                            }\r\n\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                        else {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 2;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                    chatItem.nickname = chatObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    chatItem.nickname = value._sender.nickname;\r\n                                }\r\n                            }\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                    });\r\n                    response.statusCode = 100;\r\n                    response.object = chatData;\r\n                    resolve(response);\r\n                }\r\n            });\r\n\r\n        });\r\n    };\r\n    private sbChannelMemberDetails = (chatting_groupChannel, driverObj: Driver, companyUserInfo: CompanyUsers[]) => {\r\n        let memberName = \"\";\r\n        let memberInfos: MemberInfo[] = [];\r\n        return new Promise((resolve) => {\r\n            chatting_groupChannel.refresh(function (response, error) {\r\n                if (response) {\r\n                    let memberdetails = response.members;\r\n                    memberdetails.forEach(xItem => {\r\n\r\n                        if (driverObj && companyUserInfo) {\r\n                            if (driverObj.Email === xItem.userId) {\r\n                                memberName = driverObj.FullName;\r\n                            }\r\n                            else {\r\n                                if (companyUserInfo) {\r\n                                    let compInfo = companyUserInfo.findIndex(top => top.EmailAddress === xItem.userId);\r\n                                    if (compInfo != -1) {\r\n                                        memberName = companyUserInfo[compInfo].FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let response = new MemberInfo();\r\n                        response.memberId = xItem.memberId;\r\n                        response.profileUrl = xItem.profileUrl;\r\n                        response.nickname = xItem.nickname === \"\" ? memberName : xItem.nickname;\r\n                        response.userId = xItem.userId;\r\n                        response.connectionStatus = xItem.connectionStatus.toUpperCase();\r\n                        if (xItem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xItem.lastSeenAt);\r\n                            response.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            response.lastSeenAt = '-';\r\n                        }\r\n                        memberInfos.push(response);\r\n                    });\r\n                    resolve(memberInfos);\r\n                }\r\n                if (error) {\r\n                    resolve(memberInfos);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n    private sbJoinGroupChannel = (chatMessage: ChatMessage, groupChannel: any, companyUserDetails: CompanyUsers[], driverinfo: Driver) => {\r\n        return new Promise(async (resolve) => {\r\n            let response = new chatResponse();\r\n            try {\r\n\r\n\r\n                let joinmemberdetails = '';\r\n                let leavememberdetails = '';\r\n                let currentGroupMemberDetails = [];\r\n                let currentCompanyMemberDetails = [];\r\n                currentCompanyMemberDetails.push(driverinfo.Email);\r\n                groupChannel.members.forEach(xItem => {\r\n                    currentGroupMemberDetails.push(xItem.userId);\r\n                });\r\n                companyUserDetails.forEach(xItem => {\r\n                    currentCompanyMemberDetails.push(xItem.EmailAddress);\r\n                });\r\n                let diffMembers = this.arr_diff(currentCompanyMemberDetails, currentGroupMemberDetails);\r\n                let totalMember = diffMembers.length;\r\n                if (diffMembers.length > 0) {\r\n                    for (const dmember of diffMembers) {\r\n                        let companyUsers = companyUserDetails.find(top => top.EmailAddress === dmember);\r\n                        let userExists = currentGroupMemberDetails.find(top => top === dmember);\r\n                        if (companyUsers != null && userExists == null) {\r\n                            let connectUsers = await this.connectCompanyUser(companyUsers) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                if (groupChannel.isPublic) {\r\n                                    groupChannel.join(function (response, error) {\r\n                                        if (error) {\r\n                                            console.log(\"groupChannel-join-error\", error);\r\n                                        }\r\n                                        joinmemberdetails = joinmemberdetails + \",\" + companyUsers.EmailAddress;\r\n                                        totalMember = totalMember - 1;\r\n                                        if (totalMember === 0) {\r\n                                            response.object = joinmemberdetails;\r\n                                            response.object1 = leavememberdetails;\r\n                                            response.statusCode = 100;\r\n                                            groupChannel.refresh(function (response, error) {\r\n                                                if (response) {\r\n                                                    chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                                }\r\n                                                if (error) {\r\n                                                    this.co\r\n                                                    console.log(\"groupChannel-refresh-error\", error);\r\n                                                }\r\n                                            });\r\n                                            resolve(response);\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        else if (companyUsers == null && userExists != null) {\r\n                            let connectUsers = await this.sbConnect(dmember) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                groupChannel.leave(function (response, error) {\r\n                                    if (error) {\r\n                                        console.log(\"groupChannel-leave-error\", error);\r\n                                    }\r\n                                    leavememberdetails = leavememberdetails + \",\" + dmember;\r\n                                    totalMember = totalMember - 1;\r\n                                    if (totalMember === 0) {\r\n                                        if (response == null) {\r\n                                            response = new chatResponse();\r\n                                        }\r\n                                        response.object1 = leavememberdetails;\r\n                                        response.object = joinmemberdetails;\r\n                                        response.statusCode = 100;\r\n                                        groupChannel.refresh(function (response, error) {\r\n                                            if (response) {\r\n                                                chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                            }\r\n                                            if (error) {\r\n                                                console.log(\"groupChannel-refresh-error\", error);\r\n                                            }\r\n                                        });\r\n                                        resolve(response);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            totalMember = totalMember - 1;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    response.statusCode = 200;\r\n                    resolve(response);\r\n                }\r\n            } catch (e) {\r\n                response.statusCode = 404;\r\n                response.object = e;\r\n                resolve(response);\r\n            }\r\n        });\r\n    };\r\n    private static formatAMPM(date: any) {\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    private static getMonthName(date: any) {\r\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        return monthNames[date.getMonth()];\r\n    }\r\n    private getAPPKey() {\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n        });\r\n    }\r\n    private IntializeChannelHandler() {\r\n        this.ChannelHandler = new this.sb.ChannelHandler();\r\n        this.ChannelHandler.onTypingStatusUpdated = this.onTypingStatusUpdated;\r\n        this.ChannelHandler.onMessageReceived = this.onMessageReceived;\r\n        this.ChannelHandler.onReadReceiptUpdated = this.onReadReceiptUpdated;\r\n        this.sb.addChannelHandler(\"onTypingStatusUpdated\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onMessageReceived\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onReadReceiptUpdated\", this.ChannelHandler);\r\n    }\r\n    public callOffline(phoneNumber: any) {\r\n        Declarations.msginfo(\"Driver contact details : \" + phoneNumber, undefined, undefined);\r\n    }\r\n    public closeChat(email: string) {\r\n        let index = this.chatCollection.findIndex(top => top.driverInfo.Email === email);\r\n        if (index > -1) {\r\n            let drItem = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n            if (drItem != null) {\r\n                if (this.backgrounddriverDetails == undefined) {\r\n                    this.backgrounddriverDetails = [];\r\n                }\r\n                let bkindex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === drItem.driverInfo.Id);\r\n                if (bkindex === -1) {\r\n                    let backobj = new BackgroupChatIntialize();\r\n                    backobj.regionId = drItem.fullregionId;\r\n                    backobj.driverInfo = drItem.driverInfo;\r\n                    this.backgrounddriverDetails.push(backobj);\r\n\r\n                }\r\n            }\r\n            this.chatCollection.splice(index, 1);\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    public minimizeChat(divId: string, email: string, iconId: string) {\r\n        let dvObj = $(\"#\" + divId);\r\n        let iconObj = $(\"#\" + iconId);\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            chatObj.divId = divId;\r\n        }\r\n        if (dvObj != undefined && iconObj != undefined) {\r\n            if (dvObj.hasClass('chat-minimized')) {\r\n                dvObj.removeClass('chat-minimized');\r\n                dvObj.removeClass('chat-active');\r\n                if (chatObj != null) {\r\n                    BuyerSendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                }\r\n                if (iconObj.hasClass('fa-window-maximize')) {\r\n                    iconObj.addClass('fa-window-minimize');\r\n                    iconObj.removeClass('fa-window-maximize');\r\n                }\r\n            }\r\n            else {\r\n                dvObj.addClass('chat-minimized');\r\n                if (iconObj.hasClass('fa-window-minimize')) {\r\n                    iconObj.removeClass('fa-window-minimize');\r\n                    iconObj.addClass('fa-window-maximize');\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    async sendMessage(email: string) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            let textMessage = this.sbSendbird.get('textMessage').value;\r\n            if (chatChannel != null && textMessage != '') {\r\n                const sendMessage = new this.sb.UserMessageParams();\r\n                sendMessage.message = textMessage;\r\n                sendMessage.mentionType = 'channel';                       // Either 'users' or 'channel'\r\n                sendMessage.metaArrayKeys = ['linkTo', 'itemType'];\r\n                sendMessage.customType = 'GROUPCHAT';\r\n                let response = await this.sbSendMessage(chatChannel, sendMessage, chatObj) as chatResponse;\r\n                if (response.statusCode === 100) {\r\n                    chatObj.chatData.push(response.object);\r\n                    this.cdr.detectChanges();\r\n                    chatChannel.endTyping();\r\n                    BuyerSendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                    await this.sendPushNotification(chatObj, textMessage, email);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Error in send message-sendbird.\" + response.object, undefined, undefined);\r\n                }\r\n                this.sbSendbird.get('textMessage').setValue('');\r\n            }\r\n\r\n        }\r\n    }\r\n    public sbSendMessage(chatChannel: any, sendMessage: any, chatObj: ChatMessage) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            chatChannel.sendUserMessage(sendMessage, function (message, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let date = new Date(message.createdAt);\r\n                    let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                    let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    let chatMessageObj = BuyerSendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                    response.statusCode = 100;\r\n                    response.object = chatMessageObj;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    typingIndicatorEvent(email: string, event: any) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            chatChannel.startTyping();\r\n        }\r\n        let keyCode = (event.keyCode ? event.keyCode : event.which);\r\n        if (keyCode == '13') {\r\n            this.sendMessage(email);\r\n        }\r\n    }\r\n    public async sendPushNotification(chatObj: ChatMessage, textMessage: string, email: string) {\r\n        if (chatObj.driverInfo.firstMessage === false && chatObj.driverInfo.ConnectionStatus === false) {\r\n            let userIds = [email];\r\n            let userDetails = await this.sbGetUserDetails(userIds) as chatResponse;\r\n            if (userDetails.statusCode === 100) {\r\n                let users = userDetails.object;\r\n                users.forEach(xitem => {\r\n                    if (xitem.connectionStatus.toUpperCase() != 'ONLINE') {\r\n                        //send push notification to driver.\r\n                        this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                            let statusMessage = t as any;\r\n                            if (statusMessage.StatusCode === 0) {\r\n                                Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                            }\r\n                            else {\r\n                                Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (chatObj.driverInfo.firstMessage) {\r\n            //send push notification to driver.\r\n            this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                let statusMessage = t as any;\r\n                if (statusMessage.StatusCode === 0) {\r\n                    Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n            chatObj.driverInfo.firstMessage = false;\r\n        }\r\n    }\r\n    public static loadsendMessage(chatData: ChatData[], currentUserInfo: Carriar, value: any, hourDate: any, monthName: any, day: any, year: any, chatObj: ChatMessage) {\r\n        let chatItem = new ChatData();\r\n        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n        if (value._sender.nickname.trim().length === 0) {\r\n            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                value._sender.nickname = chatObj.driverInfo.FullName;\r\n            }\r\n            else {\r\n                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                if (dispatcherDetails != null) {\r\n                    value._sender.nickname = dispatcherDetails.FullName;\r\n                }\r\n            }\r\n        }\r\n        if (value._sender.userId === currentUserInfo.userName) {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 1;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        else {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 2;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        return chatItem;\r\n    }\r\n    public checkUserOnline = (userId) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let applicationUserListQuery = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQuery.userIdsFilter = [userId];\r\n            applicationUserListQuery.next(function (users, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"ONLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"ONLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"OFFLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"OFFLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"NON_AVAILABLE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"NON_AVAILABLE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    }\r\n\r\n    public sbLoadMoreMessage = async (userId) => {\r\n        let groupChannelObj = this.chatCollection.find(top => top.driverInfo.Email === userId);\r\n        if (groupChannelObj) {\r\n            groupChannelObj.showsmallLoder = true;\r\n            let carrierObj = groupChannelObj.currentLoginUserInfo;\r\n            let groupChannel = groupChannelObj.groupChannelInfo.groupChannelObj;\r\n            let messageID = groupChannelObj.chatData[0].messageId;\r\n            let userIds: any = [];\r\n            groupChannelObj.groupChannelInfo.memberInfo.forEach(comItem => {\r\n                userIds.push(comItem.userId);\r\n            });\r\n            groupChannelObj.chatData.forEach(comItem => {\r\n                comItem.headerText = '';\r\n            });\r\n            let response = await this.sbGetPreviousMessage(groupChannel, messageID, groupChannelObj, carrierObj, userIds) as chatResponse;\r\n            if (response.statusCode === 100) {\r\n                let chatData = response.object as ChatData[];\r\n                let finalData = chatData.concat(groupChannelObj.chatData);\r\n                finalData.forEach(xItem => {\r\n                    let date = new Date(xItem.createdAt);\r\n                    let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                    let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    if (finalData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                        xItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                    }\r\n                    else {\r\n                        xItem.headerText = '';\r\n                    }\r\n                });\r\n                groupChannelObj.chatData = finalData;\r\n                groupChannelObj.showsmallLoder = false;\r\n            }\r\n        }\r\n    };\r\n    public async sbGetPreviousMessage(groupChannel: any, messageID: any, groupChannelObj: ChatMessage, carrierObj: Carriar, userIds: []) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            response.statusCode = 100;\r\n            groupChannel.getPreviousMessagesByID(messageID, true, BuyerSendbirdComponent.messageLoadLimit, false, 'MESG', '', userIds, false, false,\r\n                function (messages, error) {\r\n                    if (error) {\r\n                        response.statusCode = 400;\r\n                        response.object = error;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        if (messages.length > 0) {\r\n                            if (messages.length >= BuyerSendbirdComponent.messageLoadLimit) {\r\n                                groupChannelObj.loadmore = true;\r\n                            }\r\n                            else {\r\n                                groupChannelObj.loadmore = false;\r\n                            }\r\n                        }\r\n                        let chatData: ChatData[] = [];\r\n                        messages.forEach(function (value) {\r\n                            let date = new Date(value.createdAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                            let day = date.getDate();\r\n                            if (value._sender.nickname.trim().length === 0) {\r\n                                if (groupChannelObj.driverInfo.Email === value._sender.userId) {\r\n                                    value._sender.nickname = groupChannelObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    var dispatcherDetails = groupChannelObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                    if (dispatcherDetails != null) {\r\n                                        value._sender.nickname = dispatcherDetails.FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (value._sender.userId === carrierObj.userName) {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 1;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                            else {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 2;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                        });\r\n                        response.object = chatData;\r\n                        resolve(response);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    public async sbCheckUserOnline() {\r\n        let userDetailsArray = [];\r\n        this.chatCollection.forEach(xitem => {\r\n            userDetailsArray.push(xitem.driverInfo.Email);\r\n        });\r\n        let userDetails = await this.sbGetUserDetails(userDetailsArray) as chatResponse;\r\n        if (userDetails.statusCode == 100) {\r\n            let users = userDetails.object;\r\n            users.forEach(xitem => {\r\n                let userCollection = this.chatCollection.find(x => x.driverInfo.Email === xitem.userId);\r\n                if (userCollection) {\r\n                    userCollection.driverInfo.ConnectionStatus = xitem.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                    if (userCollection.driverInfo.ConnectionStatus === false) {\r\n                        if (xitem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xitem.lastSeenAt);\r\n                            let hourDate = BuyerSendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = BuyerSendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            userCollection.driverInfo.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            userCollection.driverInfo.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            userCollection.driverInfo.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    this.cdr.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region sendbirdEventHandler\r\n    public onTypingStatusUpdated = (groupChannel) => {\r\n        this.chatCollection.forEach(xitem => {\r\n            xitem.driverInfo.TypingIndicator = false;\r\n        });\r\n        if (groupChannel) {\r\n            let objectFound = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === groupChannel.name);\r\n            if (objectFound) {\r\n                let members = groupChannel.getTypingMembers();\r\n                members.forEach(function (value) {\r\n                    if (objectFound.driverInfo.Email === value.userId) {\r\n                        if (value.connectionStatus.toUpperCase() === 'ONLINE') {\r\n                            objectFound.driverInfo.ConnectionStatus = true;\r\n                        }\r\n                    }\r\n                    if (objectFound.currentLoginUserInfo.userName === value.userId) {\r\n                        objectFound.driverInfo.TypingIndicator = false;\r\n                    }\r\n                    else {\r\n                        objectFound.driverInfo.TypingIndicator = true;\r\n                    }\r\n                    objectFound.driverInfo.State = value.state.toUpperCase();\r\n                    objectFound.driverInfo.TypingMemberName = value.nickname;\r\n                });\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n    };\r\n    public onMessageReceived = (channel, message) => {\r\n        if (channel != null && message != null) {\r\n            let chatObj = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === channel.name);\r\n            if (chatObj) {\r\n                let date = new Date(message.createdAt);\r\n                let hourDate = BuyerSendbirdComponent.formatAMPM(date);\r\n                let monthName = BuyerSendbirdComponent.getMonthName(date);\r\n                let day = date.getDate();\r\n                let year = date.getFullYear();\r\n                let chatMesage = BuyerSendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                let messageFound = chatObj.chatData.findIndex(top => top.messageId === chatMesage.messageId);\r\n                if (messageFound == -1) {\r\n                    chatObj.chatData.push(chatMesage);\r\n                    this.cdr.detectChanges();\r\n                    //add chat-active class\r\n                    if (chatObj.divId != '') {\r\n                        let dvObj = $(\"#\" + chatObj.divId);\r\n                        if (dvObj != undefined) {\r\n                            if (dvObj.hasClass('chat-minimized')) {\r\n                                if (!dvObj.hasClass('chat-active')) {\r\n                                    dvObj.addClass('chat-active');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //call from the background.\r\n                let channelMember = [], currentDriverDetails = [];\r\n                let groupMemberDetails = channel.members;\r\n                groupMemberDetails.forEach(item => {\r\n                    channelMember.push(item.userId);\r\n                });\r\n                this.backgrounddriverDetails.forEach(item => {\r\n                    currentDriverDetails.push(item.driverInfo.Email)\r\n                });\r\n                //Get common elements of arr1, arr2\r\n                let commonElements = this.getCommon(channelMember, currentDriverDetails);\r\n                if (commonElements.length > 0) {\r\n                    for (const commonelement of commonElements) {\r\n                        let driverDetails = this.backgrounddriverDetails.find(x => x.driverInfo.Email === commonelement);\r\n                        if (driverDetails != null) {\r\n                            //remove item from backgroup thread if exists\r\n                            this.IntializeDriverChat(driverDetails.driverInfo.Id, driverDetails.regionId);\r\n                            let index = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === driverDetails.driverInfo.Id);\r\n                            if (index != -1) {\r\n                                this.backgrounddriverDetails.splice(index, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    };\r\n    public onReadReceiptUpdated = (groupChannel) => {\r\n\r\n    };\r\n    // #endregion\r\n\r\n\r\n    //call for schedulebuilder component.\r\n    public IntializeDriverChat(driverId, regionID) {\r\n        this.IntializeSendbird(driverId, regionID);\r\n\r\n    }\r\n    //intialize background chat\r\n    public IntializeChatDefault(driverDetails: any[], regionId) {\r\n        this.backgrounddriverDetails = [];\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n            if (driverDetails.length > 0) {\r\n                this.chatService.getDriversDetails(driverDetails).subscribe(t => {\r\n                    if (t.StatusCode === 302) {\r\n                        let driverObj = t.Data as Driver[];\r\n                        driverObj.forEach(xitem => {\r\n                            let findIndex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Email === xitem.Email);\r\n                            if (findIndex === -1) {\r\n                                let chatdefault = new BackgroupChatIntialize();\r\n                                chatdefault.driverInfo = xitem;\r\n                                chatdefault.regionId = regionId;\r\n                                this.backgrounddriverDetails.push(chatdefault);\r\n                            }\r\n                            this.sb.connect(xitem.Email, function (user, error) {\r\n                                if (error) {\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    console.log(\"IntializeChatDefault\", user);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        })\r\n    }\r\n    public async groupInfo(email: string) {\r\n        let records = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (records != null) {\r\n            this.chatService.loaderElement(true);\r\n            let groupChannel = records.groupChannelInfo.groupChannelObj;\r\n            let driverObj = records.driverInfo;\r\n            let companyUserInfo = records.companyUserInfo;\r\n            let memberInfos = await this.sbChannelMemberDetails(groupChannel, driverObj, companyUserInfo) as MemberInfo[];\r\n            if (memberInfos.length > 0) {\r\n                groupChannel.memberInfo = memberInfos;\r\n                this.chatService.sendMemberInfo(memberInfos);\r\n            }\r\n            else {\r\n                this.chatService.loaderElement(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // #region CommonFunctions\r\n    private getCommon(arr1, arr2) {\r\n        let common = [];                   // Array to contain common elements\r\n        for (let i = 0; i < arr1.length; ++i) {\r\n            for (let j = 0; j < arr2.length; ++j) {\r\n                if (arr1[i] == arr2[j]) {       // If element is in both the arrays\r\n                    common.push(arr1[i]);        // Push to common array\r\n                }\r\n            }\r\n        }\r\n        return common;                     // Return the common elements\r\n    }\r\n    private arr_diff(a1, a2) {\r\n\r\n        let a = [], diff = [];\r\n        for (let i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (let i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (let k in a) {\r\n            diff.push(k);\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    // #endregion\r\n}   \r\n","\r\n<div class=\"tfx-chat shadow-b chat-minimized\" *ngFor=\"let chatDetails of chatCollection;let i = index\" id=\"divusers_{{i}}\">\r\n    <div class=\"chat-user\">\r\n        <span class=\"pl10 pr5 pull-left animated flash infinite pt10 mt2 fs14\" *ngIf=\"chatDetails.chatLoading\">\r\n            Initiating chat with {{chatDetails.driverInfo.FullName}}...\r\n        </span>\r\n        <img class=\"pull-left mt2 radius\" src=\"{{chatDetails.driverInfo.ProfileURL}}\" width=\"20\" height=\"20\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL!=''\">\r\n        <i class=\"fas fa-user pull-left fs16 mt4\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL==''\"></i>\r\n        <span class=\"pl10 pr5 pull-left\" *ngIf=\"chatDetails.chatLoading==false\">\r\n            {{chatDetails.driverInfo.FullName}}<i class=\"fas fa-circle color-green fs8 ml5\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===true\"></i>\r\n            <span class=\"fs10 db\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===false && chatDetails.driverInfo.lastSeenAt!='NO'\">last seen {{chatDetails.driverInfo.lastSeenAt}}</span>\r\n            <span class=\"fs10 color-orange db\" *ngIf=\"chatDetails.driverInfo.TypingIndicator===true\">{{chatDetails.driverInfo.TypingMemberName}} typing...</span>\r\n        </span>\r\n        <a class=\"mt8 pull-right  mt10 mr10\" *ngIf=\"chatDetails.chatLoading\"><i class=\"fas fa-close  mt2 fs16\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"closeChat(chatDetails.driverInfo.Email)\" title=\"Close chat\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-close\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"callOffline(chatDetails.driverInfo.PhoneNumber)\" *ngIf=\"chatDetails.driverInfo.IsPhoneNumberConfirmed===true && chatDetails.chatLoading==false\"><i class=\"fas fa-phone color-green mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"groupInfo(chatDetails.driverInfo.Email)\" title=\"Group members information\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-users mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"minimizeChat('divusers_'+i,chatDetails.driverInfo.Email,'icon_'+i)\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"far fa-window-minimize mr10\" id=\"icon_{{i}}\"></i></a>\r\n    </div>\r\n    <div class=\"chat-details driver_{{chatDetails.driverInfo.Id}}\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <div class=\"text-center pr\">\r\n            <span class=\"chat-loader pa text-center\" *ngIf=\"chatDetails.showsmallLoder===true\"></span>\r\n            <a (click)=\"sbLoadMoreMessage(chatDetails.driverInfo.Email)\" class=\"btn btn-default btn-xs fs10\" *ngIf=\"chatDetails.loadmore===true\">Load More</a>\r\n        </div>\r\n        <div *ngFor=\"let driverChat of chatDetails.chatData\">\r\n            <div class=\"messageHeader\" *ngIf=\"driverChat.headerText!=''\">{{driverChat.headerText}}</div>\r\n            <div [ngClass]=\"(driverChat.messageType===1)?'you':'driver'\">\r\n                <span *ngIf=\"driverChat.messageType===2\" style=\"color: #ec9f5a\">{{driverChat.nickname}}<br /></span>\r\n                {{driverChat.message}}\r\n                <div class=\"text-right time\">{{driverChat.dateTime}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"message-box\" [formGroup]=\"sbSendbird\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <textarea placeholder=\"message\" formControlName=\"textMessage\" (keypress)=\"typingIndicatorEvent(chatDetails.driverInfo.Email,$event)\"></textarea>\r\n        <button (click)=\"sendMessage(chatDetails.driverInfo.Email)\"><i class=\"fas fa-play\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n","export class SendBirdCommonComponent {\r\n    \r\n    public static getLastSeen(startDateTime: Date) {\r\n        let results;\r\n        try {\r\n            let toTime = new Date().getTime();\r\n            let fromTime = startDateTime.getTime();\r\n            let datediff = toTime - fromTime;\r\n            let seconds = Math.floor(datediff / 1000);\r\n            let minutes = Math.floor(seconds / 60);\r\n            let hours = Math.floor(minutes / 60);\r\n            let days = Math.floor(hours / 24);\r\n            let weeks = Math.floor(days / 7);\r\n            let months = Math.floor(weeks / 4);\r\n            let years = Math.floor(days / 365);\r\n            let getSeconds = Math.abs(seconds);\r\n            switch (true) {\r\n                case (getSeconds == 0):\r\n                    results = \"just now\";\r\n                    break;\r\n                case (getSeconds == 1):\r\n                    results = this.getTense(seconds, 'second', true);\r\n                    break;\r\n                case (getSeconds > 1 && getSeconds < 60):\r\n                    results = this.getTense(seconds, 'second', false);\r\n                    break;\r\n                case (getSeconds >= 60 && getSeconds < 120):\r\n                    results = this.getTense(minutes, 'mintue', true);\r\n                    break;\r\n                case (getSeconds >= 120 && getSeconds < 3600):\r\n                    results = this.getTense(minutes, 'mintue', false);\r\n                    break;\r\n                case (getSeconds >= 3600 && getSeconds < 7200):\r\n                    results = this.getTense(hours, 'hour', true);\r\n                    break;\r\n                case (getSeconds >= 7200 && getSeconds < 86400):\r\n                    results = this.getTense(hours, 'hour', false);\r\n                    break;\r\n                case (getSeconds >= 86400 && getSeconds < 172800):\r\n                    results = this.getTense(days, 'day', true);\r\n                    break;\r\n                case (getSeconds >= 172800 && getSeconds < 604800):\r\n                    results = this.getTense(days, 'day', false);\r\n                    break;\r\n                case (getSeconds >= 604800 && getSeconds < 1209600):\r\n                    results = this.getTense(weeks, 'week', true);\r\n                    break;\r\n                case (getSeconds >= 1209600 && getSeconds < 2419200):\r\n                    results = this.getTense(weeks, 'week', false);\r\n                    break;\r\n                case (getSeconds >= 2419200 && getSeconds < 4838400):\r\n                    results = this.getTense(months, 'month', true);\r\n                    break;\r\n                case (getSeconds >= 4838400 && getSeconds < 31536000):\r\n                    results = this.getTense(months, 'month', false);\r\n                    break;\r\n                case (getSeconds >= 31536000 && getSeconds < 63072000):\r\n                    results = this.getTense(years, 'year', true);\r\n                    break;\r\n                case (getSeconds >= 63072000):\r\n                    results = this.getTense(years, 'year', false);\r\n                    break;\r\n            }\r\n        }\r\n        catch (err) {\r\n            results = \"\";\r\n            console.log(\"getLastSeen\", err);\r\n        }\r\n        return results;\r\n    }\r\n    private static getTense(time, tense, singular) {\r\n        let getTime = Math.abs(time);\r\n        if (singular == true) {\r\n            if (time > 0) {\r\n                if (tense == 'hour' || tense == 'year')\r\n                    return 'An ' + tense + ' ago';\r\n                else\r\n                    return 'A ' + tense + ' ago';\r\n            } else {\r\n                if (tense == 'hour' || tense == 'year')\r\n                    return 'After an ' + tense;\r\n                else\r\n                    return 'After a ' + tense;\r\n            }\r\n\r\n        } else {\r\n            if (time > 0)\r\n                return getTime + ' ' + tense + 's ago';\r\n            else\r\n                return 'After ' + getTime + ' ' + tense + 's';\r\n\r\n        }\r\n    }\r\n\r\n}","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { __await } from 'tslib';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { ScheduleBuilderService } from 'src/app/carrier/service/schedule-builder.service';\r\nimport { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { SendBirdCommonComponent } from './common/sendbird.common.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { BackgroupChatIntialize, ChatMessage, Carriar, Driver, ChatData, GroupChannelInfo, chatResponse, MemberInfo } from './sendbirdCommon';\r\ndeclare var userName: string;\r\ndeclare var userIntialName: string;\r\ndeclare var currentUserCompanyId: number;\r\ndeclare const SendBird: any;\r\ndeclare function IsUserActive(): boolean;\r\n\r\n@Component({\r\n    selector: 'app-sendbird',\r\n    templateUrl: './sendbird.component.html',\r\n    styleUrls: ['./sendbird.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SendbirdComponent implements OnInit {\r\n    public sb: any = Object();\r\n    public ChannelHandler: any;\r\n    public appKey: string = '';\r\n    public sbSendbird: FormGroup;\r\n    public backgrounddriverDetails: BackgroupChatIntialize[];\r\n    public chatCollection: ChatMessage[] = [];\r\n    public intervalTime: any;\r\n    public static messageLoadLimit: number = 30;\r\n    constructor(private chatService: chatService, private sbService: ScheduleBuilderService,\r\n        private fb: FormBuilder, private cdr: ChangeDetectorRef) {\r\n    }\r\n    // #region ngEvent  \r\n    ngOnInit() {\r\n        this.sbSendbird = this.initSendbirdForm();\r\n        this.getAPPKey();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.intervalTime) {\r\n            clearInterval(this.intervalTime);\r\n        }\r\n        this.sb.removeChannelHandler(\"onTypingStatusUpdated\");\r\n        this.sb.removeChannelHandler(\"onMessageReceived\");\r\n        this.sb.removeChannelHandler(\"onReadReceiptUpdated\");\r\n    }\r\n    // #endregion \r\n\r\n    //intialize sendbird form.\r\n    private initSendbirdForm() {\r\n        let _dtForm = this.fb.group({\r\n            textMessage: this.fb.control(''),\r\n        });\r\n        return _dtForm;\r\n    }\r\n    // #region privateMethods\r\n    //intialize sendbird account\r\n    private IntializeSendbird(driverId, regionID: string) {\r\n        let currentChatWidgetIndex = this.chatCollection.findIndex(top => top.driverInfo.Id === driverId);\r\n        if (currentChatWidgetIndex === -1) {\r\n            let chatUserDetails = [];\r\n            this.chatService.getDriverDetails(driverId).subscribe(t => {\r\n                if (t.StatusCode === 0) {\r\n                    //create the object of the class\r\n                    let chatMessage: ChatMessage = new ChatMessage();\r\n                    chatMessage.regionId = regionID;\r\n                    chatMessage.showsmallLoder = false;\r\n                    chatMessage.loadmore = false;\r\n                    let carrierObj: Carriar = new Carriar();\r\n                    let driverObj: Driver = new Driver();\r\n                    let chatData: ChatData[] = [];\r\n                    let groupChannelInfo: GroupChannelInfo = new GroupChannelInfo();\r\n\r\n                    //assign value of driver object\r\n                    driverObj = t as Driver;\r\n                    driverObj.firstMessage = true;\r\n\r\n                    //define the loading..\r\n                    chatMessage.chatLoading = true;\r\n                    chatMessage.divId = \"divusers_\" + this.chatCollection.length;\r\n                    //get companyUserDetails\r\n                    this.sbService.getRegionDispacther(regionID, driverId)\r\n                        .subscribe(data => {\r\n                            let companyUserDetails = data as CompanyUsers[];\r\n                            if (companyUserDetails.length > 0) {\r\n\r\n                                //set regionName and regionDescription and regionID.\r\n                                chatMessage.regionName = companyUserDetails[0].RegionName;\r\n                                chatMessage.regionDescription = companyUserDetails[0].RegionDescription;\r\n                                chatMessage.regionId = companyUserDetails[0].SendBirdRegionID;\r\n                                chatMessage.fullregionId = regionID;\r\n                                //set groupName // OR Retrive groupName\r\n                                groupChannelInfo.groupChannelName = \"DR_\" + driverId + \"_COM_\" + currentUserCompanyId + \"_RE_\" + chatMessage.regionId.toUpperCase();\r\n\r\n                                //set companyCurrent User Information\r\n                                chatMessage.companyUserInfo = companyUserDetails;\r\n                                if (companyUserDetails.length > 0) {\r\n                                    companyUserDetails.forEach(xitem => {\r\n                                        chatUserDetails.push(xitem.EmailAddress);\r\n                                    });\r\n                                    chatUserDetails.push(driverObj.Email);\r\n                                    chatMessage.driverInfo = driverObj;\r\n\r\n                                    carrierObj.userName = userName;\r\n                                    carrierObj.userIntialName = userIntialName;\r\n                                    chatMessage.currentLoginUserInfo = carrierObj;\r\n                                    chatMessage.chatData = chatData;\r\n                                    chatMessage.groupChannelInfo = groupChannelInfo;\r\n                                }\r\n                            }\r\n                            else {\r\n                                chatMessage.companyUserInfo = [];\r\n                            }\r\n                            if (chatMessage.companyUserInfo.length > 0) {\r\n                                this.chatCollection.push(chatMessage);\r\n                                this.cdr.detectChanges();\r\n                                let chatObj = this.chatCollection.find(top => top.driverInfo.Email === driverObj.Email);\r\n                                if (chatObj != null) {\r\n                                    this.createAccount(chatMessage.companyUserInfo, chatMessage.currentLoginUserInfo, chatMessage.driverInfo, chatObj);\r\n                                }\r\n                            } else {\r\n                                Declarations.msgwarning(\"There is no dispatcher found in the region\", undefined, undefined);\r\n                            }\r\n                        });\r\n\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Issue in getDriverDetails api..\", undefined, undefined);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //create account in sendbird and connect to groupchat\r\n    private async createAccount(companyUserInfo: CompanyUsers[], currentUserLoginInfo: Carriar, driverObj: Driver, chatMessage: ChatMessage) {\r\n        try {\r\n            if (companyUserInfo.length > 0 && driverObj != null && currentUserLoginInfo != null) {\r\n                //create driver account\r\n                let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                let driverObjResult = await this.connectDriver(driverObj) as chatResponse;\r\n                if (driverObjResult.statusCode === 100 && carrierObjResult.statusCode === 100) {\r\n                    //check channel exists or not..\r\n                    let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                    if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                        //find the diffrence member between group member and company users\r\n                        //so that we can add additional member to current channel\r\n                        let sbjoinResponse = await this.sbJoinGroupChannel(chatMessage, groupChannel.object1, companyUserInfo, driverObj) as chatResponse;\r\n                        if (sbjoinResponse.statusCode === 200) {\r\n                        }\r\n                        else {\r\n                        }\r\n                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                        if (carrierObjResult.statusCode === 100) {\r\n                            this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                            let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                            if (messageHistory.statusCode === 100) {\r\n                                this.updateChatData(chatMessage, messageHistory);\r\n                                let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                if (memberInfos.length > 0)\r\n                                    chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                if (groupChannel.statusCode === 100) {\r\n                                    chatMessage.chatLoading = false;\r\n                                    let dvObj = $(\"#\" + chatMessage.divId);\r\n                                    if (dvObj != undefined) {\r\n                                        if (dvObj.hasClass('chat-minimized')) {\r\n                                            dvObj.removeClass('chat-minimized');\r\n                                            if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.cdr.detectChanges();\r\n                                    setTimeout(function () { SendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        //create company users account - dispatcher,carrier => Role\r\n                        let companyUserCount = companyUserInfo.length;\r\n                        if (companyUserInfo.length > 0) {\r\n                            for (const companyUser of companyUserInfo) {\r\n                                let companyUserResponse = await this.connectCompanyUser(companyUser) as chatResponse;\r\n                                if (companyUserResponse.statusCode === 100) {\r\n                                    companyUser.ProfileURL = companyUserResponse.object.profileUrl;\r\n                                    companyUserCount = companyUserCount - 1;\r\n                                    if (companyUserCount == 0) {\r\n                                        //connect current user account - sendbird\r\n                                        let carrierObjResult = await this.connectDispatcher(currentUserLoginInfo) as chatResponse;\r\n                                        if (carrierObjResult.statusCode === 100) {\r\n                                            //create the groupChannel of All Company Users(Carrier,Dispatcher) \r\n                                            //1 to M => 1 Drivers to Many Dispacther.Carrier User\r\n                                            //create group channel or retrive channel if created.\r\n                                            let groupChannel = await this.sbIntializeGroupChannel(chatMessage.driverInfo.Email, chatMessage.companyUserInfo, chatMessage.groupChannelInfo) as chatResponse;\r\n                                            if (groupChannel.statusCode === 100) { // return group channel that already created.\r\n                                                this.updateGroupChannelInfo(chatMessage, groupChannel);\r\n                                                let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                if (messageHistory.statusCode === 100) {\r\n                                                    this.updateChatData(chatMessage, messageHistory);\r\n                                                    let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                    if (memberInfos.length > 0)\r\n                                                        chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                }\r\n                                                else {\r\n                                                }\r\n                                            }\r\n                                            else if (groupChannel.statusCode === 200) { //create the group channel\r\n                                                let createdChannel = await this.sbCreateGroupChannel(groupChannel.object, groupChannel.object1, chatMessage.regionName, chatMessage.regionDescription) as chatResponse;\r\n                                                if (createdChannel.statusCode === 100) {\r\n                                                    this.updateGroupChannelInfo(chatMessage, createdChannel);\r\n                                                    let messageHistory = await this.sbLoadChatHistroy(chatMessage.groupChannelInfo.groupChannelObj, currentUserLoginInfo, chatMessage) as chatResponse;\r\n                                                    if (messageHistory.statusCode === 100) {\r\n                                                        this.updateChatData(chatMessage, messageHistory);\r\n                                                        let memberInfos = await this.sbChannelMemberDetails(chatMessage.groupChannelInfo.groupChannelObj, driverObj, companyUserInfo) as MemberInfo[];\r\n                                                        if (memberInfos.length > 0)\r\n                                                            chatMessage.groupChannelInfo.memberInfo = memberInfos;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            if (groupChannel.statusCode === 100 || groupChannel.statusCode === 200) {\r\n                                                chatMessage.chatLoading = false;\r\n                                                let dvObj = $(\"#\" + chatMessage.divId);\r\n                                                if (dvObj != undefined) {\r\n                                                    if (dvObj.hasClass('chat-minimized')) {\r\n                                                        dvObj.removeClass('chat-minimized');\r\n                                                        if (dvObj.find('div.chat-user').length !== 0) {\r\n                                                            dvObj.find('div.chat-user').addClass(\"bg-white\");\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                this.cdr.detectChanges();\r\n                                                setTimeout(function () { SendbirdComponent.scrollBottomDiv(driverObj); }, 1500);\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (chatMessage.companyUserInfo.length == 0) {\r\n                    chatMessage.chatLoading = false;\r\n                    var chatObjIndex = this.chatCollection.findIndex(top => top.driverInfo.Email === driverObj.Email);\r\n                    if (chatObjIndex != -1) {\r\n                        this.chatCollection.splice(chatObjIndex, 1);\r\n                        this.cdr.detectChanges();\r\n                    }\r\n                    Declarations.msgwarning(\"This driver is not assigned to any region\", undefined, undefined);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    public async connectCompanyUser(companyUserObj: CompanyUsers) {\r\n        //create company user if not created..\r\n        let companyObjResult = await this.sbConnect(companyUserObj.EmailAddress) as chatResponse;\r\n        if (companyObjResult.statusCode === 100) {\r\n            let companyObjData = companyObjResult.object;\r\n            companyUserObj.ProfileURL = companyObjData.profileUrl;\r\n            if (companyUserObj.FullName != companyObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(companyUserObj.FullName, companyObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return companyObjResult;\r\n    }\r\n\r\n    private async connectDispatcher(carrierObj: Carriar) {\r\n        //create carrier user if not created..\r\n        let carrierObjResult = await this.sbConnect(carrierObj.userName) as chatResponse;\r\n        if (carrierObjResult.statusCode === 100) {\r\n            let carrierObjData = carrierObjResult.object;\r\n            carrierObj.ProfileURL = carrierObjData.profileUrl;\r\n            if (carrierObj.userIntialName != carrierObjData.nickname) {\r\n                let updateCarrierInfo = await this.sbUpdateCurrentUserInfo(carrierObj.userIntialName, carrierObjData.profileUrl) as any;\r\n            }\r\n        }\r\n        return carrierObjResult;\r\n    }\r\n    private async connectDriver(driverObj: Driver) {\r\n        //create driver user if not created..\r\n        let driverdetails = [];\r\n        driverdetails.push(driverObj.Email);\r\n        let userAvailable = await this.sbGetUserDetails(driverdetails) as chatResponse;\r\n        let driverObjResult = new chatResponse();\r\n        if (userAvailable.statusCode == 100) {\r\n            if (userAvailable.object.length === 0) {\r\n                driverObjResult = await this.sbConnect(driverObj.Email) as chatResponse;\r\n                if (driverObjResult.statusCode === 100) {\r\n                    let driverObjData = driverObjResult.object;\r\n                    driverObj.ProfileURL = driverObjData.profileUrl;\r\n                    let connectionStatusResponse = await this.checkUserOnline(driverObj.Email) as chatResponse;\r\n                    if (connectionStatusResponse.statusCode === 100) {\r\n                        driverObj.ConnectionStatus = connectionStatusResponse.object.toUpperCase() === 'ONLINE' ? true : false;\r\n                    }\r\n                    if (driverObj.ConnectionStatus === false) {\r\n                        if (driverObjData.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(driverObjData.lastSeenAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            driverObj.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    if (driverObj.FullName != driverObjData.nickname) {\r\n                        let updateDriverInfo = await this.sbUpdateCurrentUserInfo(driverObj.FullName, driverObjData.profileUrl) as any;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                driverObjResult.statusCode = 100;\r\n                driverObjResult.object = userAvailable.object[0];\r\n                driverObj.ConnectionStatus = driverObjResult.object.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                driverObj.ProfileURL = driverObjResult.object.profileUrl;\r\n                if (driverObj.ConnectionStatus === false) {\r\n                    if (driverObjResult.object.lastSeenAt > 0) {\r\n                        let lastSeen = new Date(driverObjResult.object.lastSeenAt);\r\n                        let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                        let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                        let day = lastSeen.getDate();\r\n                        driverObj.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                        driverObj.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                    }\r\n                    else {\r\n                        driverObj.lastSeenAt = 'NO';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return driverObjResult;\r\n    }\r\n    private static scrollBottomDiv(driverObj: Driver) {\r\n        if ($(\".driver_\" + driverObj.Id)[0]) {\r\n            $(\".driver_\" + driverObj.Id).scrollTop($(\".driver_\" + driverObj.Id)[0].scrollHeight);\r\n        }\r\n    }\r\n    private updateGroupChannelInfo(chatMessage: ChatMessage, groupChannel: chatResponse) {\r\n        chatMessage.groupChannelInfo.groupChannelURL = groupChannel.object;\r\n        if (chatMessage.groupChannelInfo.groupChannelObj == null) {\r\n            chatMessage.groupChannelInfo.groupChannelObj = groupChannel.object1;\r\n        }\r\n    }\r\n    private updateChatData(chatMessage: ChatMessage, chatReponse: chatResponse) {\r\n        chatMessage.chatData = chatReponse.object as ChatData[];\r\n        if (chatMessage.chatData.length >= SendbirdComponent.messageLoadLimit) {\r\n            chatMessage.loadmore = true;\r\n        }\r\n    }\r\n    private sbGetUserDetails = userIds => {\r\n        let response = new chatResponse();\r\n        return new Promise((resolve) => {\r\n            // Retrieving certain users using the UserID filter\r\n            let applicationUserListQueryByIds = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQueryByIds.userIdsFilter = userIds;\r\n            applicationUserListQueryByIds.next((user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbConnect = userId => {\r\n        return new Promise((resolve, reject) => {\r\n            let response: chatResponse = new chatResponse();\r\n            this.sb.connect(userId, (user, error) => {\r\n                if (error) {\r\n                    response.statusCode = 200;\r\n                    response.message = 'SendBird Login Failed.';\r\n                    reject(response);\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = user;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbUpdateCurrentUserInfo = (nickname, profileUrl) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.sb.updateCurrentUserInfo(nickname, profileUrl, (user, error) => {\r\n                error ? reject('Unable to update user profile') : resolve(user);\r\n            });\r\n        });\r\n    };\r\n    private sbIntializeGroupChannel = (driverId, companyUserDetails: CompanyUsers[], groupChannelInfo: GroupChannelInfo) => {\r\n        return new Promise((resolve) => {\r\n            let userDetails = [];\r\n            //push company user to array\r\n            companyUserDetails.forEach(comItem => {\r\n                userDetails.push(comItem.EmailAddress);\r\n            });\r\n            //push driver details to array\r\n            userDetails.push(driverId);\r\n\r\n            let response: chatResponse = new chatResponse();\r\n            let filteredQuery = this.sb.GroupChannel.createMyGroupChannelListQuery();\r\n            filteredQuery.channelNameContainsFilter = groupChannelInfo.groupChannelName;\r\n            filteredQuery.includeEmpty = true;\r\n            filteredQuery.limit = 15;\r\n            filteredQuery.next(function (groupChannels, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(chatResponse);\r\n                }\r\n                else {\r\n                    if (groupChannels.length > 0) {\r\n                        //return the group channel\r\n                        response.object = groupChannels[0].url;\r\n                        response.object1 = groupChannels[0];\r\n                        response.statusCode = 100;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        //create the group channel\r\n                        response.statusCode = 200;\r\n                        response.object = userDetails;\r\n                        response.object1 = groupChannelInfo.groupChannelName;\r\n                        resolve(response);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    private sbCreateGroupChannel = (userIds, groupChannelName, regionName, regionDecription) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let groupChannelparams = new this.sb.GroupChannelParams();\r\n            groupChannelparams.isPublic = true;\r\n            groupChannelparams.isEphemeral = false;\r\n            groupChannelparams.isDistinct = false;\r\n            groupChannelparams.addUserIds(userIds);\r\n            groupChannelparams.name = groupChannelName;\r\n            groupChannelparams.data = regionDecription;\r\n            groupChannelparams.customType = regionName;\r\n            this.sb.GroupChannel.createChannel(groupChannelparams, (groupChannel, error) => {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                else {\r\n                    response.statusCode = 100;\r\n                    response.object = groupChannel.url;\r\n                    response.object1 = groupChannel;\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    };\r\n    private sbLoadChatHistroy = (chatting_groupChannel, carrierObj: Carriar, chatObj: ChatMessage) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let messageListQuery = chatting_groupChannel.createPreviousMessageListQuery();\r\n            messageListQuery.limit = SendbirdComponent.messageLoadLimit;\r\n            messageListQuery.reverse = false;\r\n            // Retrieving  messages.\r\n            messageListQuery.load(function (messages, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let chatData: ChatData[] = [];\r\n                    messages.forEach(function (value) {\r\n                        let date = new Date(value.createdAt);\r\n                        let hourDate = SendbirdComponent.formatAMPM(date);\r\n                        let monthName = SendbirdComponent.getMonthName(date);\r\n                        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                        let day = date.getDate();\r\n                        let year = date.getFullYear();\r\n                        if (value._sender.nickname.trim().length === 0) {\r\n                            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                value._sender.nickname = chatObj.driverInfo.FullName;\r\n                            }\r\n                            else {\r\n                                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                if (dispatcherDetails != null) {\r\n                                    value._sender.nickname = dispatcherDetails.FullName;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (value._sender.userId === carrierObj.userName) {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 1;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                chatItem.nickname = value._sender.nickname;\r\n                            }\r\n\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                        else {\r\n                            let chatItem = new ChatData();\r\n                            chatItem.messageId = value.messageId;\r\n                            chatItem.createdAt = value.createdAt;\r\n                            chatItem.channelURL = value.channelUrl;\r\n                            chatItem.channelType = value.channelType;\r\n                            chatItem.messageType = 2;\r\n                            var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                            if (dispatcherDetails != null) {\r\n                                chatItem.nickname = dispatcherDetails.FullName;\r\n                            }\r\n                            else {\r\n                                if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                                    chatItem.nickname = chatObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    chatItem.nickname = value._sender.nickname;\r\n                                }\r\n                            }\r\n                            chatItem.message = value.message;\r\n                            chatItem.dateTime = hourDate;\r\n                            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                            }\r\n                            else {\r\n                                chatItem.headerText = '';\r\n                            }\r\n                            chatItem.userId = value._sender.userId;\r\n                            chatData.push(chatItem);\r\n                        }\r\n                    });\r\n                    response.statusCode = 100;\r\n                    response.object = chatData;\r\n                    resolve(response);\r\n                }\r\n            });\r\n\r\n        });\r\n    };\r\n    private sbChannelMemberDetails = (chatting_groupChannel, driverObj: Driver, companyUserInfo: CompanyUsers[]) => {\r\n        let memberName = \"\";\r\n        let memberInfos: MemberInfo[] = [];\r\n        return new Promise((resolve) => {\r\n            chatting_groupChannel.refresh(function (response, error) {\r\n                if (response) {\r\n                    let memberdetails = response.members;\r\n                    memberdetails.forEach(xItem => {\r\n\r\n                        if (driverObj && companyUserInfo) {\r\n                            if (driverObj.Email === xItem.userId) {\r\n                                memberName = driverObj.FullName;\r\n                            }\r\n                            else {\r\n                                if (companyUserInfo) {\r\n                                    let compInfo = companyUserInfo.findIndex(top => top.EmailAddress === xItem.userId);\r\n                                    if (compInfo != -1) {\r\n                                        memberName = companyUserInfo[compInfo].FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        let response = new MemberInfo();\r\n                        response.memberId = xItem.memberId;\r\n                        response.profileUrl = xItem.profileUrl;\r\n                        response.nickname = xItem.nickname === \"\" ? memberName : xItem.nickname;\r\n                        response.userId = xItem.userId;\r\n                        response.connectionStatus = xItem.connectionStatus.toUpperCase();\r\n                        if (xItem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xItem.lastSeenAt);\r\n                            response.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            response.lastSeenAt = '-';\r\n                        }\r\n                        memberInfos.push(response);\r\n                    });\r\n                    resolve(memberInfos);\r\n                }\r\n                if (error) {\r\n                    resolve(memberInfos);\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n    private sbJoinGroupChannel = (chatMessage: ChatMessage, groupChannel: any, companyUserDetails: CompanyUsers[], driverinfo: Driver) => {\r\n        return new Promise(async (resolve) => {\r\n            let response = new chatResponse();\r\n            try {\r\n\r\n\r\n                let joinmemberdetails = '';\r\n                let leavememberdetails = '';\r\n                let currentGroupMemberDetails = [];\r\n                let currentCompanyMemberDetails = [];\r\n                currentCompanyMemberDetails.push(driverinfo.Email);\r\n                groupChannel.members.forEach(xItem => {\r\n                    currentGroupMemberDetails.push(xItem.userId);\r\n                });\r\n                companyUserDetails.forEach(xItem => {\r\n                    currentCompanyMemberDetails.push(xItem.EmailAddress);\r\n                });\r\n                let diffMembers = this.arr_diff(currentCompanyMemberDetails, currentGroupMemberDetails);\r\n                let totalMember = diffMembers.length;\r\n                if (diffMembers.length > 0) {\r\n                    for (const dmember of diffMembers) {\r\n                        let companyUsers = companyUserDetails.find(top => top.EmailAddress === dmember);\r\n                        let userExists = currentGroupMemberDetails.find(top => top === dmember);\r\n                        if (companyUsers != null && userExists == null) {\r\n                            let connectUsers = await this.connectCompanyUser(companyUsers) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                if (groupChannel.isPublic) {\r\n                                    groupChannel.join(function (response, error) {\r\n                                        if (error) {\r\n                                            console.log(\"groupChannel-join-error\", error);\r\n                                        }\r\n                                        joinmemberdetails = joinmemberdetails + \",\" + companyUsers.EmailAddress;\r\n                                        totalMember = totalMember - 1;\r\n                                        if (totalMember === 0) {\r\n                                            response.object = joinmemberdetails;\r\n                                            response.object1 = leavememberdetails;\r\n                                            response.statusCode = 100;\r\n                                            groupChannel.refresh(function (response, error) {\r\n                                                if (response) {\r\n                                                    chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                                }\r\n                                                if (error) {\r\n                                                    this.co\r\n                                                    console.log(\"groupChannel-refresh-error\", error);\r\n                                                }\r\n                                            });\r\n                                            resolve(response);\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        else if (companyUsers == null && userExists != null) {\r\n                            let connectUsers = await this.sbConnect(dmember) as chatResponse;\r\n                            if (connectUsers.statusCode === 100) {\r\n                                groupChannel.leave(function (response, error) {\r\n                                    if (error) {\r\n                                        console.log(\"groupChannel-leave-error\", error);\r\n                                    }\r\n                                    leavememberdetails = leavememberdetails + \",\" + dmember;\r\n                                    totalMember = totalMember - 1;\r\n                                    if (totalMember === 0) {\r\n                                        if (response == null) {\r\n                                            response = new chatResponse();\r\n                                        }\r\n                                        response.object1 = leavememberdetails;\r\n                                        response.object = joinmemberdetails;\r\n                                        response.statusCode = 100;\r\n                                        groupChannel.refresh(function (response, error) {\r\n                                            if (response) {\r\n                                                chatMessage.groupChannelInfo.groupChannelObj = response;\r\n                                            }\r\n                                            if (error) {\r\n                                                console.log(\"groupChannel-refresh-error\", error);\r\n                                            }\r\n                                        });\r\n                                        resolve(response);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            totalMember = totalMember - 1;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    response.statusCode = 200;\r\n                    resolve(response);\r\n                }\r\n            } catch (e) {\r\n                response.statusCode = 404;\r\n                response.object = e;\r\n                resolve(response);\r\n            }\r\n        });\r\n    };\r\n    private static formatAMPM(date: any) {\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return strTime;\r\n    }\r\n    private static getMonthName(date: any) {\r\n        let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        return monthNames[date.getMonth()];\r\n    }\r\n    private getAPPKey() {\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n        });\r\n    }\r\n    private IntializeChannelHandler() {\r\n        this.ChannelHandler = new this.sb.ChannelHandler();\r\n        this.ChannelHandler.onTypingStatusUpdated = this.onTypingStatusUpdated;\r\n        this.ChannelHandler.onMessageReceived = this.onMessageReceived;\r\n        this.ChannelHandler.onReadReceiptUpdated = this.onReadReceiptUpdated;\r\n        this.sb.addChannelHandler(\"onTypingStatusUpdated\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onMessageReceived\", this.ChannelHandler);\r\n        this.sb.addChannelHandler(\"onReadReceiptUpdated\", this.ChannelHandler);\r\n    }\r\n    public callOffline(phoneNumber: any) {\r\n        Declarations.msginfo(\"Driver contact details : \" + phoneNumber, undefined, undefined);\r\n    }\r\n    public closeChat(email: string) {\r\n        let index = this.chatCollection.findIndex(top => top.driverInfo.Email === email);\r\n        if (index > -1) {\r\n            let drItem = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n            if (drItem != null) {\r\n                if (this.backgrounddriverDetails == undefined) {\r\n                    this.backgrounddriverDetails = [];\r\n                }\r\n                let bkindex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === drItem.driverInfo.Id);\r\n                if (bkindex === -1) {\r\n                    let backobj = new BackgroupChatIntialize();\r\n                    backobj.regionId = drItem.fullregionId;\r\n                    backobj.driverInfo = drItem.driverInfo;\r\n                    this.backgrounddriverDetails.push(backobj);\r\n\r\n                }\r\n            }\r\n            this.chatCollection.splice(index, 1);\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    public minimizeChat(divId: string, email: string, iconId: string) {\r\n        let dvObj = $(\"#\" + divId);\r\n        let iconObj = $(\"#\" + iconId);\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            chatObj.divId = divId;\r\n        }\r\n        if (dvObj != undefined && iconObj != undefined) {\r\n            if (dvObj.hasClass('chat-minimized')) {\r\n                dvObj.removeClass('chat-minimized');\r\n                dvObj.removeClass('chat-active');\r\n                if (chatObj != null) {\r\n                    SendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                }\r\n                if (iconObj.hasClass('fa-window-maximize')) {\r\n                    iconObj.addClass('fa-window-minimize');\r\n                    iconObj.removeClass('fa-window-maximize');\r\n                }\r\n            }\r\n            else {\r\n                dvObj.addClass('chat-minimized');\r\n                if (iconObj.hasClass('fa-window-minimize')) {\r\n                    iconObj.removeClass('fa-window-minimize');\r\n                    iconObj.addClass('fa-window-maximize');\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    async sendMessage(email: string) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            let textMessage = this.sbSendbird.get('textMessage').value;\r\n            if (chatChannel != null && textMessage != '') {\r\n                const sendMessage = new this.sb.UserMessageParams();\r\n                sendMessage.message = textMessage;\r\n                sendMessage.mentionType = 'channel';                       // Either 'users' or 'channel'\r\n                sendMessage.metaArrayKeys = ['linkTo', 'itemType'];\r\n                sendMessage.customType = 'GROUPCHAT';\r\n                let response = await this.sbSendMessage(chatChannel, sendMessage, chatObj) as chatResponse;\r\n                if (response.statusCode === 100) {\r\n                    chatObj.chatData.push(response.object);\r\n                    this.cdr.detectChanges();\r\n                    chatChannel.endTyping();\r\n                    SendbirdComponent.scrollBottomDiv(chatObj.driverInfo);\r\n                    await this.sendPushNotification(chatObj, textMessage, email);\r\n                }\r\n                else {\r\n                    Declarations.msgerror(\"Error in send message-sendbird.\" + response.object, undefined, undefined);\r\n                }\r\n                this.sbSendbird.get('textMessage').setValue('');\r\n            }\r\n\r\n        }\r\n    }\r\n    public sbSendMessage(chatChannel: any, sendMessage: any, chatObj: ChatMessage) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            chatChannel.sendUserMessage(sendMessage, function (message, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                    resolve(response);\r\n                }\r\n                else {\r\n                    let date = new Date(message.createdAt);\r\n                    let hourDate = SendbirdComponent.formatAMPM(date);\r\n                    let monthName = SendbirdComponent.getMonthName(date);\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    let chatMessageObj = SendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                    response.statusCode = 100;\r\n                    response.object = chatMessageObj;\r\n                    resolve(response);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    typingIndicatorEvent(email: string, event: any) {\r\n        let chatObj = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (chatObj != null) {\r\n            let chatChannel = chatObj.groupChannelInfo.groupChannelObj;\r\n            chatChannel.startTyping();\r\n        }\r\n        let keyCode = (event.keyCode ? event.keyCode : event.which);\r\n        if (keyCode == '13') {\r\n            this.sendMessage(email);\r\n        }\r\n    }\r\n    public async sendPushNotification(chatObj: ChatMessage, textMessage: string, email: string) {\r\n        if (chatObj.driverInfo.firstMessage === false && chatObj.driverInfo.ConnectionStatus === false) {\r\n            let userIds = [email];\r\n            let userDetails = await this.sbGetUserDetails(userIds) as chatResponse;\r\n            if (userDetails.statusCode === 100) {\r\n                let users = userDetails.object;\r\n                users.forEach(xitem => {\r\n                    if (xitem.connectionStatus.toUpperCase() != 'ONLINE') {\r\n                        //send push notification to driver.\r\n                        this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                            let statusMessage = t as any;\r\n                            if (statusMessage.StatusCode === 0) {\r\n                                Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                            }\r\n                            else {\r\n                                Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (chatObj.driverInfo.firstMessage) {\r\n            //send push notification to driver.\r\n            this.chatService.sendPushNotification(textMessage, chatObj.driverInfo.Id).subscribe(t => {\r\n                let statusMessage = t as any;\r\n                if (statusMessage.StatusCode === 0) {\r\n                    Declarations.msgsuccess(\"Notification sent to driver successfully.\", undefined, undefined);\r\n                }\r\n                else {\r\n                    Declarations.msgwarning(statusMessage.StatusMessage, undefined, undefined);\r\n                }\r\n            });\r\n\r\n            chatObj.driverInfo.firstMessage = false;\r\n        }\r\n    }\r\n    public static loadsendMessage(chatData: ChatData[], currentUserInfo: Carriar, value: any, hourDate: any, monthName: any, day: any, year: any, chatObj: ChatMessage) {\r\n        let chatItem = new ChatData();\r\n        let monthDName = monthName.substring(0, 3).toUpperCase();\r\n        if (value._sender.nickname.trim().length === 0) {\r\n            if (chatObj.driverInfo.Email === value._sender.userId) {\r\n                value._sender.nickname = chatObj.driverInfo.FullName;\r\n            }\r\n            else {\r\n                var dispatcherDetails = chatObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                if (dispatcherDetails != null) {\r\n                    value._sender.nickname = dispatcherDetails.FullName;\r\n                }\r\n            }\r\n        }\r\n        if (value._sender.userId === currentUserInfo.userName) {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 1;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        else {\r\n            chatItem.messageId = value.messageId;\r\n            chatItem.createdAt = value.createdAt;\r\n            chatItem.channelURL = value.channelUrl;\r\n            chatItem.channelType = value.channelType;\r\n            chatItem.messageType = 2;\r\n            chatItem.nickname = value._sender.nickname;\r\n            chatItem.message = value.message;\r\n            chatItem.dateTime = hourDate;\r\n            chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n            if (chatData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                chatItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n            }\r\n            else {\r\n                chatItem.headerText = '';\r\n            }\r\n            chatItem.userId = value._sender.userId;\r\n        }\r\n        return chatItem;\r\n    }\r\n    public checkUserOnline = (userId) => {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            let applicationUserListQuery = this.sb.createApplicationUserListQuery();\r\n            applicationUserListQuery.userIdsFilter = [userId];\r\n            applicationUserListQuery.next(function (users, error) {\r\n                if (error) {\r\n                    response.statusCode = 404;\r\n                    response.object = error;\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"ONLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"ONLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"OFFLINE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"OFFLINE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                if (users[0].connectionStatus.toUpperCase() === \"NON_AVAILABLE\") {\r\n                    response.statusCode = 100;\r\n                    response.object = \"NON_AVAILABLE\";\r\n                    // User.connectionStatus consists of NON_AVAILABLE, ONLINE, and OFFLINE.\r\n                }\r\n                resolve(response);\r\n            });\r\n        });\r\n    }\r\n\r\n    public sbLoadMoreMessage = async (userId) => {\r\n        let groupChannelObj = this.chatCollection.find(top => top.driverInfo.Email === userId);\r\n        if (groupChannelObj) {\r\n            groupChannelObj.showsmallLoder = true;\r\n            let carrierObj = groupChannelObj.currentLoginUserInfo;\r\n            let groupChannel = groupChannelObj.groupChannelInfo.groupChannelObj;\r\n            let messageID = groupChannelObj.chatData[0].messageId;\r\n            let userIds: any = [];\r\n            groupChannelObj.groupChannelInfo.memberInfo.forEach(comItem => {\r\n                userIds.push(comItem.userId);\r\n            });\r\n            groupChannelObj.chatData.forEach(comItem => {\r\n                comItem.headerText = '';\r\n            });\r\n            let response = await this.sbGetPreviousMessage(groupChannel, messageID, groupChannelObj, carrierObj, userIds) as chatResponse;\r\n            if (response.statusCode === 100) {\r\n                let chatData = response.object as ChatData[];\r\n                let finalData = chatData.concat(groupChannelObj.chatData);\r\n                finalData.forEach(xItem => {\r\n                    let date = new Date(xItem.createdAt);\r\n                    let monthName = SendbirdComponent.getMonthName(date);\r\n                    let monthDName = monthName.substring(0, 3).toUpperCase();\r\n                    let day = date.getDate();\r\n                    let year = date.getFullYear();\r\n                    if (finalData.findIndex(top => top.headerText === day + \" \" + monthDName + \" \" + year) === -1) {\r\n                        xItem.headerText = day + \" \" + monthDName + \" \" + year;\r\n                    }\r\n                    else {\r\n                        xItem.headerText = '';\r\n                    }\r\n                });\r\n                groupChannelObj.chatData = finalData;\r\n                groupChannelObj.showsmallLoder = false;\r\n            }\r\n        }\r\n    };\r\n    public async sbGetPreviousMessage(groupChannel: any, messageID: any, groupChannelObj: ChatMessage, carrierObj: Carriar, userIds: []) {\r\n        return new Promise((resolve) => {\r\n            let response = new chatResponse();\r\n            response.statusCode = 100;\r\n            groupChannel.getPreviousMessagesByID(messageID, true, SendbirdComponent.messageLoadLimit, false, 'MESG', '', userIds, false, false,\r\n                function (messages, error) {\r\n                    if (error) {\r\n                        response.statusCode = 400;\r\n                        response.object = error;\r\n                        resolve(response);\r\n                    }\r\n                    else {\r\n                        if (messages.length > 0) {\r\n                            if (messages.length >= SendbirdComponent.messageLoadLimit) {\r\n                                groupChannelObj.loadmore = true;\r\n                            }\r\n                            else {\r\n                                groupChannelObj.loadmore = false;\r\n                            }\r\n                        }\r\n                        let chatData: ChatData[] = [];\r\n                        messages.forEach(function (value) {\r\n                            let date = new Date(value.createdAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(date);\r\n                            let monthName = SendbirdComponent.getMonthName(date);\r\n                            let day = date.getDate();\r\n                            if (value._sender.nickname.trim().length === 0) {\r\n                                if (groupChannelObj.driverInfo.Email === value._sender.userId) {\r\n                                    value._sender.nickname = groupChannelObj.driverInfo.FullName;\r\n                                }\r\n                                else {\r\n                                    var dispatcherDetails = groupChannelObj.companyUserInfo.find(top => top.EmailAddress === value._sender.userId);\r\n                                    if (dispatcherDetails != null) {\r\n                                        value._sender.nickname = dispatcherDetails.FullName;\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (value._sender.userId === carrierObj.userName) {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 1;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                            else {\r\n                                let chatItem = new ChatData();\r\n                                chatItem.messageId = value.messageId;\r\n                                chatItem.createdAt = value.createdAt;\r\n                                chatItem.channelURL = value.channelUrl;\r\n                                chatItem.channelType = value.channelType;\r\n                                chatItem.messageType = 2;\r\n                                chatItem.nickname = value._sender.nickname;\r\n                                chatItem.message = value.message;\r\n                                chatItem.dateTime = hourDate;\r\n                                chatItem.fulldateTime = hourDate + \",\" + monthName + \",\" + day;\r\n                                chatItem.headerText = '';\r\n                                chatItem.userId = value._sender.userId;\r\n                                chatData.push(chatItem);\r\n                            }\r\n                        });\r\n                        response.object = chatData;\r\n                        resolve(response);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    public async sbCheckUserOnline() {\r\n        let userDetailsArray = [];\r\n        this.chatCollection.forEach(xitem => {\r\n            userDetailsArray.push(xitem.driverInfo.Email);\r\n        });\r\n        let userDetails = await this.sbGetUserDetails(userDetailsArray) as chatResponse;\r\n        if (userDetails.statusCode == 100) {\r\n            let users = userDetails.object;\r\n            users.forEach(xitem => {\r\n                let userCollection = this.chatCollection.find(x => x.driverInfo.Email === xitem.userId);\r\n                if (userCollection) {\r\n                    userCollection.driverInfo.ConnectionStatus = xitem.connectionStatus.toUpperCase() === 'ONLINE' ? true : false;\r\n                    if (userCollection.driverInfo.ConnectionStatus === false) {\r\n                        if (xitem.lastSeenAt > 0) {\r\n                            let lastSeen = new Date(xitem.lastSeenAt);\r\n                            let hourDate = SendbirdComponent.formatAMPM(lastSeen);\r\n                            let monthName = SendbirdComponent.getMonthName(lastSeen);\r\n                            let day = lastSeen.getDate();\r\n                            userCollection.driverInfo.templastSeenAt = monthName + \",\" + day + \",\" + hourDate;\r\n                            userCollection.driverInfo.lastSeenAt = SendBirdCommonComponent.getLastSeen(lastSeen);\r\n                        }\r\n                        else {\r\n                            userCollection.driverInfo.lastSeenAt = 'NO';\r\n                        }\r\n                    }\r\n                    this.cdr.detectChanges();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region sendbirdEventHandler\r\n    public onTypingStatusUpdated = (groupChannel) => {\r\n        this.chatCollection.forEach(xitem => {\r\n            xitem.driverInfo.TypingIndicator = false;\r\n        });\r\n        if (groupChannel) {\r\n            let objectFound = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === groupChannel.name);\r\n            if (objectFound) {\r\n                let members = groupChannel.getTypingMembers();\r\n                members.forEach(function (value) {\r\n                    if (objectFound.driverInfo.Email === value.userId) {\r\n                        if (value.connectionStatus.toUpperCase() === 'ONLINE') {\r\n                            objectFound.driverInfo.ConnectionStatus = true;\r\n                        }\r\n                    }\r\n                    if (objectFound.currentLoginUserInfo.userName === value.userId) {\r\n                        objectFound.driverInfo.TypingIndicator = false;\r\n                    }\r\n                    else {\r\n                        objectFound.driverInfo.TypingIndicator = true;\r\n                    }\r\n                    objectFound.driverInfo.State = value.state.toUpperCase();\r\n                    objectFound.driverInfo.TypingMemberName = value.nickname;\r\n                });\r\n            }\r\n        }\r\n        this.cdr.detectChanges();\r\n    };\r\n    public onMessageReceived = (channel, message) => {\r\n        if (channel != null && message != null) {\r\n            let chatObj = this.chatCollection.find(top => top.groupChannelInfo.groupChannelName === channel.name);\r\n            if (chatObj) {\r\n                let date = new Date(message.createdAt);\r\n                let hourDate = SendbirdComponent.formatAMPM(date);\r\n                let monthName = SendbirdComponent.getMonthName(date);\r\n                let day = date.getDate();\r\n                let year = date.getFullYear();\r\n                let chatMesage = SendbirdComponent.loadsendMessage(chatObj.chatData, chatObj.currentLoginUserInfo, message, hourDate, monthName, day, year, chatObj) as ChatData;\r\n                let messageFound = chatObj.chatData.findIndex(top => top.messageId === chatMesage.messageId);\r\n                if (messageFound == -1) {\r\n                    chatObj.chatData.push(chatMesage);\r\n                    this.cdr.detectChanges();\r\n                    //add chat-active class\r\n                    if (chatObj.divId != '') {\r\n                        let dvObj = $(\"#\" + chatObj.divId);\r\n                        if (dvObj != undefined) {\r\n                            if (dvObj.hasClass('chat-minimized')) {\r\n                                if (!dvObj.hasClass('chat-active')) {\r\n                                    dvObj.addClass('chat-active');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //call from the background.\r\n                let channelMember = [], currentDriverDetails = [];\r\n                let groupMemberDetails = channel.members;\r\n                groupMemberDetails.forEach(item => {\r\n                    channelMember.push(item.userId);\r\n                });\r\n                this.backgrounddriverDetails.forEach(item => {\r\n                    currentDriverDetails.push(item.driverInfo.Email)\r\n                });\r\n                //Get common elements of arr1, arr2\r\n                let commonElements = this.getCommon(channelMember, currentDriverDetails);\r\n                if (commonElements.length > 0) {\r\n                    for (const commonelement of commonElements) {\r\n                        let driverDetails = this.backgrounddriverDetails.find(x => x.driverInfo.Email === commonelement);\r\n                        if (driverDetails != null) {\r\n                            //remove item from backgroup thread if exists\r\n                            this.IntializeDriverChat(driverDetails.driverInfo.Id, driverDetails.regionId);\r\n                            let index = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Id === driverDetails.driverInfo.Id);\r\n                            if (index != -1) {\r\n                                this.backgrounddriverDetails.splice(index, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.cdr.detectChanges();\r\n        }\r\n    };\r\n    public onReadReceiptUpdated = (groupChannel) => {\r\n\r\n    };\r\n    // #endregion\r\n\r\n\r\n    //call for schedulebuilder component.\r\n    public IntializeDriverChat(driverId, regionID) {\r\n        this.IntializeSendbird(driverId, regionID);\r\n\r\n    }\r\n    //intialize background chat\r\n    public IntializeChatDefault(driverDetails: any[], regionId) {\r\n        this.backgrounddriverDetails = [];\r\n        this.chatService.getSendBirdAPIKey().subscribe(t => {\r\n            this.appKey = t.Value as string;\r\n            this.sb = new SendBird({ appId: this.appKey });\r\n            this.IntializeChannelHandler();\r\n            this.intervalTime = setInterval(() => {\r\n                if (IsUserActive()) {\r\n                    this.sbCheckUserOnline();\r\n                }\r\n            }, 45000);\r\n            if (driverDetails.length > 0) {\r\n                this.chatService.getDriversDetails(driverDetails).subscribe(t => {\r\n                    if (t.StatusCode === 302) {\r\n                        let driverObj = t.Data as Driver[];\r\n                        driverObj.forEach(xitem => {\r\n                            let findIndex = this.backgrounddriverDetails.findIndex(x => x.driverInfo.Email === xitem.Email);\r\n                            if (findIndex === -1) {\r\n                                let chatdefault = new BackgroupChatIntialize();\r\n                                chatdefault.driverInfo = xitem;\r\n                                chatdefault.regionId = regionId;\r\n                                this.backgrounddriverDetails.push(chatdefault);\r\n                            }\r\n                            this.sb.connect(xitem.Email, function (user, error) {\r\n                                if (error) {\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    console.log(\"IntializeChatDefault\", user);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n        })\r\n    }\r\n    public async groupInfo(email: string) {\r\n        let records = this.chatCollection.find(top => top.driverInfo.Email === email);\r\n        if (records != null) {\r\n            this.chatService.loaderElement(true);\r\n            let groupChannel = records.groupChannelInfo.groupChannelObj;\r\n            let driverObj = records.driverInfo;\r\n            let companyUserInfo = records.companyUserInfo;\r\n            let memberInfos = await this.sbChannelMemberDetails(groupChannel, driverObj, companyUserInfo) as MemberInfo[];\r\n            if (memberInfos.length > 0) {\r\n                groupChannel.memberInfo = memberInfos;\r\n                this.chatService.sendMemberInfo(memberInfos);\r\n            }\r\n            else {\r\n                this.chatService.loaderElement(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    // #region CommonFunctions\r\n    private getCommon(arr1, arr2) {\r\n        let common = [];                   // Array to contain common elements\r\n        for (let i = 0; i < arr1.length; ++i) {\r\n            for (let j = 0; j < arr2.length; ++j) {\r\n                if (arr1[i] == arr2[j]) {       // If element is in both the arrays\r\n                    common.push(arr1[i]);        // Push to common array\r\n                }\r\n            }\r\n        }\r\n        return common;                     // Return the common elements\r\n    }\r\n    private arr_diff(a1, a2) {\r\n\r\n        let a = [], diff = [];\r\n        for (let i = 0; i < a1.length; i++) {\r\n            a[a1[i]] = true;\r\n        }\r\n        for (let i = 0; i < a2.length; i++) {\r\n            if (a[a2[i]]) {\r\n                delete a[a2[i]];\r\n            } else {\r\n                a[a2[i]] = true;\r\n            }\r\n        }\r\n        for (let k in a) {\r\n            diff.push(k);\r\n        }\r\n\r\n        return diff;\r\n    }\r\n\r\n    // #endregion\r\n}   \r\n","\r\n<div class=\"tfx-chat shadow-b chat-minimized\" *ngFor=\"let chatDetails of chatCollection;let i = index\" id=\"divusers_{{i}}\">\r\n    <div class=\"chat-user\">\r\n        <span class=\"pl10 pr5 pull-left animated flash infinite pt10 mt2 fs14\" *ngIf=\"chatDetails.chatLoading\">\r\n            Initiating chat with {{chatDetails.driverInfo.FullName}}...\r\n        </span>\r\n        <img class=\"pull-left mt2 radius\" src=\"{{chatDetails.driverInfo.ProfileURL}}\" width=\"20\" height=\"20\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL!=''\">\r\n        <i class=\"fas fa-user pull-left fs16 mt4\" *ngIf=\"chatDetails.chatLoading==false && chatDetails.driverInfo.ProfileURL==''\"></i>\r\n        <span class=\"pl10 pr5 pull-left\" *ngIf=\"chatDetails.chatLoading==false\">\r\n            {{chatDetails.driverInfo.FullName}}<i class=\"fas fa-circle color-green fs8 ml5\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===true\"></i>\r\n            <span class=\"fs10 db\" *ngIf=\"chatDetails.driverInfo.ConnectionStatus===false && chatDetails.driverInfo.lastSeenAt!='NO'\">last seen {{chatDetails.driverInfo.lastSeenAt}}</span>\r\n            <span class=\"fs10 color-orange db\" *ngIf=\"chatDetails.driverInfo.TypingIndicator===true\">{{chatDetails.driverInfo.TypingMemberName}} typing...</span>\r\n        </span>\r\n        <a class=\"mt8 pull-right  mt10 mr10\" *ngIf=\"chatDetails.chatLoading\"><i class=\"fas fa-close  mt2 fs16\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"closeChat(chatDetails.driverInfo.Email)\" title=\"Close chat\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-close\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"callOffline(chatDetails.driverInfo.PhoneNumber)\" *ngIf=\"chatDetails.driverInfo.IsPhoneNumberConfirmed===true && chatDetails.chatLoading==false\"><i class=\"fas fa-phone color-green mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"groupInfo(chatDetails.driverInfo.Email)\" title=\"Group members information\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"fas fa-users mr10\"></i></a>\r\n        <a class=\"mt2 pull-right\" (click)=\"minimizeChat('divusers_'+i,chatDetails.driverInfo.Email,'icon_'+i)\" *ngIf=\"chatDetails.chatLoading==false\"><i class=\"far fa-window-minimize mr10\" id=\"icon_{{i}}\"></i></a>\r\n    </div>\r\n    <div class=\"chat-details driver_{{chatDetails.driverInfo.Id}}\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <div class=\"text-center pr\">\r\n            <span class=\"chat-loader pa text-center\" *ngIf=\"chatDetails.showsmallLoder===true\"></span>\r\n            <a (click)=\"sbLoadMoreMessage(chatDetails.driverInfo.Email)\" class=\"btn btn-default btn-xs fs10\" *ngIf=\"chatDetails.loadmore===true\">Load More</a>\r\n        </div>\r\n        <div *ngFor=\"let driverChat of chatDetails.chatData\">\r\n            <div class=\"messageHeader\" *ngIf=\"driverChat.headerText!=''\">{{driverChat.headerText}}</div>\r\n            <div [ngClass]=\"(driverChat.messageType===1)?'you':'driver'\">\r\n                <span *ngIf=\"driverChat.messageType===2\" style=\"color: #ec9f5a\">{{driverChat.nickname}}<br /></span>\r\n                {{driverChat.message}}\r\n                <div class=\"text-right time\">{{driverChat.dateTime}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"message-box\" [formGroup]=\"sbSendbird\" *ngIf=\"chatDetails.chatLoading==false\">\r\n        <textarea placeholder=\"message\" formControlName=\"textMessage\" (keypress)=\"typingIndicatorEvent(chatDetails.driverInfo.Email,$event)\"></textarea>\r\n        <button (click)=\"sendMessage(chatDetails.driverInfo.Email)\"><i class=\"fas fa-play\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n","import { CompanyUsers } from 'src/app/carrier/models/DispatchSchedulerModels';\r\n\r\nexport class BackgroupChatIntialize {\r\n    public regionId: string;\r\n    public driverInfo: Driver;\r\n}\r\nexport class ChatMessage {\r\n    public driverInfo: Driver;\r\n    public currentLoginUserInfo: Carriar;\r\n    public groupChannelInfo: GroupChannelInfo;\r\n    public chatData: ChatData[];\r\n    public companyUserInfo: CompanyUsers[];\r\n    public showsmallLoder: boolean = false;\r\n    public loadmore: boolean = false;\r\n    public regionId: string;\r\n    public fullregionId: string;\r\n    public regionName: string;\r\n    public regionDescription: string;\r\n    public unreadCount: number = 0;\r\n    public divId: string;\r\n    public chatLoading: boolean = false;\r\n}\r\nexport class Carriar {\r\n    public userName: string;\r\n    public userIntialName: string;\r\n    public ProfileURL: string;\r\n    public ConnectionStatus: boolean;\r\n    public templastSeenAt: string;\r\n    public lastSeenAt: string;\r\n}\r\nexport class Driver {\r\n    public Id: number;\r\n    public Email: string;\r\n    public FullName: string;\r\n    public ConnectionStatus: boolean = false;\r\n    public lastSeenAt: string = '';\r\n    public templastSeenAt: string = '';\r\n    public ProfileURL: string;\r\n    public LastSeenDateTime: string;\r\n    public TypingIndicator: boolean = false;\r\n    public TypingMemberName: string = '';\r\n    public State: string;\r\n    public Role: string;\r\n    public PhoneNumber: string;\r\n    public IsPhoneNumberConfirmed: boolean;\r\n    public firstMessage: boolean = true;\r\n    public StatusCode: number = 0;       \r\n}\r\nexport class GroupChannelInfo {\r\n    public groupChannelObj: any;\r\n    public groupChannelURL: string;\r\n    public groupChannelName: string;\r\n    public groupChannelCustomType: string;\r\n    public memberInfo: MemberInfo[] = [];\r\n}\r\nexport class MemberInfo {\r\n    public memberId: string;\r\n    public nickname: string;\r\n    public userId: string;\r\n    public connectionStatus: string;\r\n    public profileUrl: string;\r\n    public lastSeenAt: string;\r\n}\r\nexport class ChatData {\r\n    public messageId: string;\r\n    public createdAt: string;\r\n    public channelURL: string;\r\n    public channelType: string;\r\n    public messageType: number;//sendMessage=1 , receiveMessage =2\r\n    public nickname: string;\r\n    public userId: string;\r\n    public message: string;\r\n    public dateTime: string;\r\n    public fulldateTime: string;\r\n    public headerText: string;\r\n}\r\n\r\nexport class chatResponse {\r\n    public statusCode: number;\r\n    public object: any;\r\n    public object1: any;\r\n    public message: any;\r\n}\r\nexport class Roles {\r\n    public Id: number;\r\n    public Name: string;\r\n}","import { HandleError } from 'src/app/errors/HandleError';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class chatService extends HandleError {\r\n\r\n    driverId: any;\r\n    driverDetails: BehaviorSubject<any>;\r\n    loader: any;\r\n    loaderDetails: BehaviorSubject<any>;\r\n    memberInfo: any;\r\n    memberInfoDetails: BehaviorSubject<any>;\r\n    defaultdriverChat: any;\r\n    defaultdriverChatDetails: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.driverDetails = new BehaviorSubject(this.driverId);\r\n        this.loaderDetails = new BehaviorSubject(this.loader);\r\n        this.memberInfoDetails = new BehaviorSubject(this.memberInfo);\r\n        this.defaultdriverChatDetails = new BehaviorSubject(this.defaultdriverChat);\r\n    }\r\n    private getDriverDetailsURL = '/Carrier/ScheduleBuilder/GetDriverDetails?driverId=';\r\n    private getSendBirdAPIKeyURL = '/Carrier/ScheduleBuilder/GetSendBirdAPPId';\r\n    private sendPushNotificationTODriver = '/Carrier/ScheduleBuilder/SendPushNotificationTODriver';\r\n    private getDriversDetailsURL = '/Carrier/ScheduleBuilder/GetDriversDetails';\r\n    \r\n    getDriverDetails(driverId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getDriverDetailsURL + driverId)\r\n            .pipe(catchError(this.handleError<any>('getDriverDetails', null)));\r\n    }\r\n\r\n    getSendBirdAPIKey(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getSendBirdAPIKeyURL)\r\n            .pipe(catchError(this.handleError<any>('getSendBirdAPIKey', null)));\r\n    }\r\n    pushDriverDetails(driverId: any) {\r\n        this.driverDetails.next(driverId);\r\n    }\r\n    \r\n    loaderElement(status: any) {\r\n        this.loaderDetails.next(status);\r\n    }\r\n    sendMemberInfo(memberData: any) {\r\n        this.memberInfoDetails.next(memberData);\r\n    }\r\n    intializeChatDefault(driverObjDetails) {\r\n        this.defaultdriverChatDetails.next(driverObjDetails);\r\n    }\r\n    sendPushNotification(msgData: any, drId: any) {\r\n        var data = { message: msgData, driverId: drId };\r\n        return this.httpClient.post<any>(this.sendPushNotificationTODriver, data)\r\n            .pipe(catchError(this.handleError<any>('sendPushNotification', null)));\r\n    }\r\n    getDriversDetails(driverIds: any): Observable<any> {\r\n        var data = { driverIds: driverIds };\r\n        return this.httpClient.post<any>(this.getDriversDetailsURL, data)\r\n            .pipe(catchError(this.handleError<any>('getDriversDetails', null)));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>sidebar works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HandleError } from './errors/HandleError';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StatelistService extends HandleError {\r\n\r\n    private stateUrl = '/Settings/Profile/GetStatesEx';\r\n    private countryUrl = '/Settings/Profile/GetCountriesEx';\r\n    private countryGroupUrl = '/Settings/Profile/GetCountriesGroupEx?countryId=';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    regions: DropdownItem[];\r\n\r\n    getStates(): Observable<StateDropdownExtendedItem[]> {\r\n        return this.httpClient.get<StateDropdownExtendedItem[]>(this.stateUrl)\r\n            .pipe(catchError(this.handleError<StateDropdownExtendedItem[]>('getStates', [])));\r\n    }\r\n\r\n    getCountries(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.countryUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCountries', [])));\r\n    }\r\n\r\n    getCountryGroup(countryId:any): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.countryGroupUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCountries', [])));\r\n    }\r\n}\r\n\r\nexport class DropdownItem {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\nexport class ShiftLoadQueueDropdownItem {\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n    OrderNo: number;\r\n}\r\nexport class StateDropdownExtendedItem extends DropdownItem {\r\n    CountryGroupId?: number;\r\n    CountryId: number;\r\n}\r\n\r\nexport class DropdownCustomItem {\r\n    Id: number;\r\n    isDisabled: boolean;\r\n    Name: string;\r\n}\r\n\r\nexport class DropdownItemExt {\r\n    Id: string;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport class FeeSubType {\r\n    public FeeTypeId: string;\r\n    public FeeSubTypeId: number;\r\n    public SubTypeName: string;\r\n}\r\nexport class TBDDropdownItem {\r\n    Id: number;\r\n    Name: string;\r\n    ProductTypeName: string;\r\n    ProductTypeId: number;\r\n    UoM: number;\r\n}\r\nexport class LocationDropdownItem {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n    DisplayName: string;\r\n}\r\n\r\nexport class AdditiveOrderViewModel {\r\n    Id: number;\r\n    Name: string;\r\n    BuyerCompanyId: number;\r\n    JobId: number;\r\n    UoM: string;\r\n}","import { Component, OnInit, ViewChild, Input, SimpleChanges } from '@angular/core';\r\nimport { ForecastingTankChartViewModel, TankDetailsForChartModel, TankLevelModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport * as moment from 'moment';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\ndeclare var IsBuyerCompany: boolean;\r\nimport { Chart } from 'chart.js';\r\nimport { ColorConstants } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-forcasting-tank-chart',\r\n    templateUrl: './tank-chart.component.html',\r\n    styleUrls: ['./tank-chart.component.css']\r\n})\r\nexport class ForcastingTankChartComponent implements OnInit {\r\n    @Input() JobId: any;\r\n    @Input() SiteId: any;\r\n    @Input() TankId: any;\r\n    @Input() StorageId: any;\r\n    public selectedJobId: any;\r\n    public selectedSiteId: any;\r\n    public selectedTankId: any;\r\n    public selectedStorageId: any;\r\n    public MinInputDate: Date = new Date();\r\n    public IsChartLoading: boolean = false;\r\n    public currentDate: string = '';\r\n\r\n    constructor(private dispatcherService: DispatcherService) {\r\n        // this.chartOptions = this.getChartOptions([], [], []);\r\n    }\r\n    ngOnInit() {\r\n        this.currentDate = moment(this.MinInputDate).format(\"MM-DD-YYYY HH:mm:ss\");\r\n    }\r\n    ngAfterViewInit() {\r\n        // console.log(\"chart-obj-ngAfterViewInit\", this.chart);\r\n    }\r\n    ngOnChanges(change: SimpleChanges) {\r\n        //this.IsChartLoading = true;\r\n        this.currentDate = moment(this.MinInputDate).format(\"MM-DD-YYYY HH:mm:ss\");\r\n        if (change.JobId && change.JobId.currentValue && change.JobId.currentValue != change.JobId.previousValue) {\r\n            this.selectedJobId = change.JobId.currentValue;\r\n        }\r\n        if (change.SiteId && change.SiteId.currentValue && change.SiteId.currentValue != change.SiteId.previousValue) {\r\n            this.selectedSiteId = change.SiteId.currentValue;\r\n        }\r\n        if (change.TankId && change.TankId.currentValue && change.TankId.currentValue != change.TankId.previousValue) {\r\n            this.selectedTankId = change.TankId.currentValue;\r\n        }\r\n        if (change.StorageId && change.StorageId.currentValue && change.StorageId.currentValue != change.StorageId.previousValue) {\r\n            this.selectedStorageId = change.StorageId.currentValue;\r\n        }\r\n        if (this.selectedJobId || this.selectedTankId || this.selectedStorageId) {\r\n            if (this.selectedTankId == 'NONE') {\r\n                this.selectedTankId = '';\r\n            }\r\n            if (this.selectedStorageId == 'NONE') {\r\n                this.selectedStorageId = '';\r\n            }\r\n            if (IsBuyerCompany == false) {\r\n                this.IsChartLoading = true;\r\n                this.dispatcherService.getForcastingTankChartDetails(this.selectedJobId, this.selectedTankId, this.selectedStorageId, this.currentDate).subscribe((resp: ForecastingTankChartViewModel) => {\r\n                    this.updateChartData(resp);\r\n                    this.IsChartLoading = false;\r\n                });\r\n            }\r\n            else {\r\n                this.IsChartLoading = true;\r\n                this.dispatcherService.getBuyerForcastingTankChartDetails(this.selectedJobId, this.selectedTankId, this.selectedStorageId, this.currentDate).subscribe((resp: ForecastingTankChartViewModel) => {\r\n                    this.updateChartData(resp);\r\n                    this.IsChartLoading = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    updateChartData(resp: ForecastingTankChartViewModel) {\r\n        if (resp != null) {\r\n            // var _xAxisTimeSpan = resp[\"XAxisTimeSpan\"];\r\n            // var _tankDetailsForChart = resp[\"TankDetailsForChart\"] as TankDetailsForChartModel[];\r\n            // var _tankLevels = resp[\"TankLevels\"] as TankLevelModel[];\r\n            // var _seriesData = _tankDetailsForChart.map(x => { return { name: x.TankName, data: x.Data }; });\r\n\r\n            let _labels = resp.XAxisTimeSpan;\r\n            let _lineChartData: ChartDataSets[] = [];\r\n\r\n            if (resp.TankDetailsForChart && resp.TankDetailsForChart.length > 0) {\r\n                resp.TankDetailsForChart.forEach((tankDetails, i) => {\r\n                    _lineChartData.push({\r\n                        data: tankDetails.Data,\r\n                        label: tankDetails.TankName,\r\n                        fill: false,\r\n                        borderColor: ColorConstants[i] || 'gray'\r\n                    })\r\n                });\r\n            }\r\n\r\n            // Line chart:\r\n            const ctx = document.getElementById('myChart') as HTMLCanvasElement;\r\n\r\n            new Chart(ctx, {\r\n                type: 'line',\r\n                data: {\r\n                    labels: _labels,\r\n                    datasets: _lineChartData,\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'time'\r\n                        }]\r\n                    },\r\n                },\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n","<div *ngIf=\"IsChartLoading\" class='loading-wrapper bg-white'>\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n\r\n<div style=\"display: block\">\r\n    <canvas id=\"myChart\" style=\"display: block;\"></canvas>\r\n</div>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { HttpGenericService } from '../http-generic.service';\nimport * as moment from 'moment';\ndeclare var ApexCharts;\n@Component({\n  selector: 'app-tank-chart',\n  templateUrl: './tank-chart.component.html',\n  styleUrls: ['./tank-chart.component.css']\n})\nexport class TankChartComponent implements OnInit {\n  @Input() JobId: any;\n  @Input() SiteId: any;\n  @Input() TankId: any;\n  @Input() isSupplierView:boolean;\n  NoOfDays: number = 3;\n  chart: any;\n  cData: any[] = [];\n  showChart = false;\n  // isLoading = false;\n  showCustomDateText = false;\n  customDays = 0;\n  dateFilterList: any[] = [];\n  noChartData = false;\n  public toogleMap: Boolean = true;\n  public isLoadingSubject: BehaviorSubject<any>;\n  public GetSalesDataForGraphUrl = \"/Supplier/Sales/GetSalesDataForGraph\";\n  constructor(private httpSer: HttpGenericService) {\n    this.isLoadingSubject = new BehaviorSubject(false);\n  }\n\n  ngOnInit() {\n    if(!this.isSupplierView){\n      this.GetSalesDataForGraphUrl = \"/buyer/Sales/GetSalesDataForGraph\";\n    }\n    this.loadChart();\n  }\n\n  ngAfterViewInit() {\n    if (this.chart)\n      this.chart.render();\n  }\n\n  public toggleMapView() {\n    this.toogleMap = !this.toogleMap;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.TankId && change.TankId.currentValue) {\n      this.TankId = change.TankId.currentValue;\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      if (this.SiteId && this.NoOfDays && this.JobId) {\n        this.isLoadingSubject.next(true);\n        this.rendor(this.cData);\n        this.getDateList();\n      }\n      this.noChartData = false;\n    }\n    else if (change.JobId && change.JobId.currentValue && !change.JobId.firstChange) {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      this.loadChart();\n      this.noChartData = false;\n    }\n\n  }\n\n\n  async loadChart() {\n    if (this.SiteId && this.NoOfDays && this.JobId) {\n      this.isLoadingSubject.next(true);\n      this.getTankChartData(this.SiteId, this.NoOfDays, this.JobId);\n      this.getDateList();\n    }\n  }\n  public getDateList() {\n    //return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }, { Id: 0, Value: 'Custom' }]\n    return this.dateFilterList = [{ Id: 3, Value: 'Last 3 Days' }, { Id: 7, Value: 'Last 7 Days' }, { Id: 10, Value: 'Last 10 Days' }]\n  }\n\n  async onSelection($event) {\n\n    if ($event == 0) {\n      this.showCustomDateText = true;\n    } else {\n      this.showCustomDateText = false;\n      this.showChart = false;\n      this.NoOfDays = $event;\n      this.chart.destroy();\n      this.noChartData = false;\n      this.getTankChartData(this.SiteId, $event, this.JobId);\n    }\n\n  }\n  async getTankChartData(siteId, noOfDays, tfxJobId) {\n    this.isLoadingSubject.next(true);\n    this.httpSer.fetchAll(`${this.GetSalesDataForGraphUrl}?jobId=${tfxJobId}&noOfDays=${noOfDays}`).subscribe(op => {\n      if (op && op.length > 0) {\n        this.cData = op;\n        this.rendor(op);\n      }\n      else {\n        this.noChartData = true;\n        this.isLoadingSubject.next(false);\n      }\n    })\n  }\n\n  async rendor(data) {\n\n\n    if (this.TankId) {\n      try {\n        let obj = this.TankId.split(\"_\");\n        let tankId = obj[0];\n        let storageId = obj[1];\n        data = data.filter(f => f.TankId == tankId && f.StorageId == storageId);\n      } catch (e) {\n        console.log(\"split issue related tankid and storage id (tank-chart component)\");\n      }\n\n    }\n\n    var mapList = [];\n    var filterkeys = [];\n    await data && data.map(m => {\n      if (!filterkeys.find(f => f && f.tankid == m.TankId && f.storageid == m.StorageId)) {\n        filterkeys.push({ tankid: m.TankId, storageid: m.StorageId });\n        //mapList.push({ name: `[Tank: ${m.TankName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [new Date(re.CreatedDate).getTime(), 74] }) });\n        mapList.push({ name: `[Tank: ${m.TankName}]`, data: data.filter(f => f.TankId == m.TankId && f.StorageId == m.StorageId).map(re => { return [moment(re.CreatedDate).valueOf(), re.Sale.toFixed(1)] }) });\n      }\n    })\n\n    var date = new Date();\n    var previousDate = date.setDate(date.getDate() - this.NoOfDays);\n    var options = {\n      series: mapList,\n      chart: {\n        type: 'line',\n        height: 350,\n        zoom: {\n          enabled: true,\n          type: 'x',\n          autoScaleYaxis: false,\n          zoomedArea: {\n            fill: {\n              color: '#90CAF9',\n              opacity: 0.4\n            },\n            stroke: {\n              color: '#0D47A1',\n              opacity: 0.4,\n              width: 1\n            }\n          }\n        },\n        toolbar: {\n          show: true,\n          offsetX: 0,\n          offsetY: 0,\n          tools: {\n            download: false,\n            selection: true,\n            zoom: true,\n            zoomin: true,\n            zoomout: true,\n            pan: true,\n            reset: true,\n            customIcons: []\n          },\n          autoSelected: 'zoom'\n        },\n      },\n      annotations: {\n        yaxis: [{\n          show: true,\n          y: 30,\n          borderColor: '#999',\n          title: {\n            text: \"Fuel (In Gallons / Litres)\",\n            style: {\n              color: '#008FFB',\n            }\n          },\n          text: 'Fuel (In Gallons / Litres)',\n          tooltip: {\n            enabled: true\n          },\n          axisTicks: {\n            show: true,\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          label: {\n            show: true,\n            text: 'Date',\n            style: {\n              color: \"#fff\",\n              background: '#00E396'\n            }\n          }\n        }],\n        xaxis: [{\n          x: new Date().getTime(),\n          borderColor: '#999',\n          yAxisIndex: 0,\n          type: \"datetime\",\n          label: {\n            show: true,\n            text: 'Gallons/Litres',\n            style: {\n              color: \"#fff\",\n              background: '#775DD0'\n            },\n            tooltip: {\n              enabled: true\n            },\n            axisTicks: {\n              show: true,\n            },\n            axisBorder: {\n              show: true,\n              color: '#00E396'\n            },\n          }\n        }]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      markers: {\n        size: 0,\n        style: 'hollow',\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          datetimeUTC: false\n        },\n        min: new Date(previousDate).getTime(),\n        tickAmount: 6,\n      },\n      tooltip: {\n        x: {\n          format: 'dd MMM yyyy hh:mm tt  '\n        }\n      },\n      stroke: {\n        show: true,\n        curve: 'smooth',\n        lineCap: 'butt',\n        colors: undefined,\n        width: 1,\n        dashArray: 0,\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.7,\n          opacityTo: 0.9,\n          stops: [0, 100]\n        }\n      },\n    };\n    this.isLoadingSubject.next(false);\n    //if (this.chart)\n    //    this.chart.resetSeries();\n    this.chart = new ApexCharts(document.querySelector(\"#chart-timeline\"), options);\n    try {\n      if (this.chart)\n        this.chart.render();\n    } catch (e) {\n      this.chart.destroy();\n      this.chart.render();\n    }\n\n\n    this.showChart = true;\n\n  }\n\n}\n\n\n\n","\n<div class=\"row\" *ngIf=\"!noChartData\">\n    <div class=\"col-sm-6\">Last {{customDays==0?(NoOfDays):customDays}} Days   Sales Chart (Site-{{SiteId}})</div>\n    <div class=\"col-sm-6 text-right\">\n        <a class=\"btn btn-link \" (click)=\"toggleMapView()\"> <i class=\"fas mr5\" [ngClass]=\" toogleMap == true ? 'fa-eye-slash' : 'fa-eye' \" ></i> {{ toogleMap == true ? 'Hide Chart' : 'Show Chart'}}  </a>\n    </div>\n</div>\n\n<div *ngIf=\"noChartData\" class=\"alert alert-danger\">\n    No Data Found.\n</div>\n\n<div [ngClass]=\"{'hide_chart': !showChart}\">\n    <div>\n        <select  *ngIf=\"!noChartData\" (change)=\"onSelection($event.target.value)\" >\n            <option *ngFor=\"let item of dateFilterList\" [value]=\"item.Id\" [selected]=\"NoOfDays==item.Id\">{{item.Value}}</option>\n        </select>\n        <!-- <input type=\"number\" maxlength=\"2\" max=\"30\" class=\"form-control\" [(ngModel)]=\"customDays\" *ngIf=\"showCustomDateText\" />\n        <input type=\"button\" class=\"btn btn-primary\" (click)=\"getTankChartData(SiteId, customDays,JobId)\" *ngIf=\"showCustomDateText && customDays>0\" value=\"Submit\" /> -->\n    </div>\n\n    <div id=\"chart-timeline\" [ngClass]=\"{'hide-element': !toogleMap}\"></div>\n</div>\n<div *ngIf=\"(isLoadingSubject | async)\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\n\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TankChartComponent } from './tank-chart.component';\nimport { ForcastingTankChartComponent} from './forcasting/tank-chart.component'\nimport { FormsModule } from '@angular/forms';\nimport { ChartsModule } from 'ng2-charts';\n\n\n@NgModule({\n    declarations: [TankChartComponent, ForcastingTankChartComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ChartsModule,\n        // TankChartRoutingModule\n    ],\n    exports: [TankChartComponent, ForcastingTankChartComponent]\n})\nexport class TankChartModule {\n    static forRoot(): ModuleWithProviders<TankChartModule> {\n        return {\n            ngModule: TankChartModule,\n            providers: [\n\n            ]\n        };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    googleMapApiKey:'AIzaSyCzsZAIHNcp3VO_Fb3nQjf6wy4S_pc_X3I'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}