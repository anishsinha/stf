{"version":3,"sources":["./src/app/calendar/dsb-calendar/dsb-calendar.component.ts","./src/app/calendar/dsb-calendar/dsb-calendar.component.html","./src/app/calendar/model.ts","./src/app/calendar/tfcalendar.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwH;AACpF;AACL;AACqC;AAGX;AAEb;AACgH;AAKrF;AACtC;AACsB;;;;;;;;;;;;;;;ICWvC,6EAA8C;IAAA,+DAAI;IAAA,4DAAQ;;;IAC1D,6EAA+C;IAAA,mEAAQ;IAAA,4DAAQ;;;;IAkBvE,2EACI;IAAA,0EACI;IAAA,6EAAyB;IAAA,iEAAM;IAAA,4DAAQ;IACvC,+FAE0B;IAFD,kYAAgC;IAEzD,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;;;IAJ2B,0DAAgC;IAAhC,+FAAgC;;;;IA/CrE,0EACI;IAAA,4EAEA;IAFoD,kWAA0B,8QAA6B,KAAK,KAAlC;IAA9E,4DAEA;IAAA,4EAAqD;IAAA,+DAAI;IAAA,4DAAQ;IACrE,4DAAM;IACN,0EACI;IAAA,4EAEA;IAFoD,kWAA0B,8QAA6B,IAAI,KAAjC;IAA9E,4DAEA;IAAA,6EAAiD;IAAA,iEAAM;IAAA,4DAAQ;IACnE,4DAAM;IAEN,2EACI;IAAA,2EAEI;IAAA,2EACI;IAAA,8EAAyB;IAAA,oEAAQ;IAAA,4DAAQ;IACzC,gGAI0B;IAJD,6XAAkC;IAI3D,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,sIAA8C;IAC9C,sIAA+C;IAC/C,gGAG0B;IAHD,6XAAkC;IAG3D,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,4EACI;IAAA,4EACI;IAAA,2EACI;IAAA,8EAAyB;IAAA,oEAAQ;IAAA,4DAAQ;IACzC,qGAE0B;IAFD,6XAAkC;IAE3D,4DAA0B;IAC9B,4DAAM;IACV,4DAAM;IACN,kIACI;IAOR,4DAAM;IAEN,4EACI;IAAA,4EACI;IAAA,2EACI;IAAA,8EAA8B;IAAA,gEAAI;IAAA,4DAAQ;IAC1C,8EACJ;IADuB,+VAAsB;IAAzC,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACN,4EACI;IAAA,2EACI;IAAA,8EAA8B;IAAA,8DAAE;IAAA,4DAAQ;IACxC,8EACJ;IADuB,6VAAoB;IAAvC,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,4EACI;IAAA,4EACI;IAAA,+EACI;IADkB,gZAAyB,WAAS,IAAE;IACtD,mEACJ;IAAA,4DAAS;IACT,+EACI;IAD4C,sYAAsB,KAAK,UAAG,WAAS,IAAE;IACrF,kEACJ;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;;;IA7EkD,0DAA0B;IAA1B,wFAA0B;IAK1B,0DAA0B;IAA1B,wFAA0B;IAU7C,0DAAkC;IAAlC,gGAAkC;IASlC,0DAAoB;IAApB,qFAAoB;IACpB,0DAAqB;IAArB,sFAAqB;IACrB,0DAAkC;IAAlC,gGAAkC;IAYlC,0DAAkC;IAAlC,gGAAkC;IAK3C,0DAAoB;IAApB,qFAAoB;IAcjB,0DAAsB;IAAtB,oFAAsB;IAMtB,0DAAoB;IAApB,kFAAoB;IAUrB,0DAAyB;IAAzB,yFAAyB;;;IAkCiD,4EAA6C;IAAA,uDAAS;IAAA,4DAAO;;;IAAhB,0DAAS;IAAT,6EAAS;;;IAY9I,2EACI;IAAA,uEAA0C;IAC9C,4DAAM;;;;IACN,+FAE0B;IAFwD,0YAA6C;IAE/H,4DAA0B;;;;IAFkC,qFAAqB;;;;IAGjF,8FAEyB;IAF+F,wYAA6C;IAErK,4DAAyB;;;;IAFsD,qFAAqB;;;;IAGpG,6FAEwB;IAF2E,sYAA6C;IAEhJ,4DAAwB;;;;IAFgC,qFAAqB;;;;;IAU7F,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,yEACI;IADgB,iZAAgE;IAChF,8EAAiC;IAAA,uDAAqB;IAAA,4DAAS;IAAA,oEAA6C;IAChH,4DAAI;IACR,4DAAO;IACX,4DAAM;IACV,4DAAM;;;;;IANQ,0DAAyD;IAAzD,uKAAyD;IACwC,0DAAuB;IAAvB,gFAAuB;IACrF,0DAAqB;IAArB,8FAAqB;;;;IAU1D,0EACI;IACA,uEACI;IAAA,yEACI;IADsI,gkBAA4E;IAClN,0EACI;IAAA,8EAAsD;IAAA,uDAAiD;IAAA,4DAAS;IAAC,oEAA8C;IACnK,4DAAM;IAIV,4DAAI;IACR,4DAAO;IACX,4DAAK;;;;;;;IAZoD,qLAAgE;IAGS,0DAAe;IAAf,8FAAe;IAAvH,qLAAgE;IAEpB,0DAAiD;IAAjD,8HAAiD;;;IAN3H,qEACI;IAAA,qIACI;IAYR,4DAAK;;;;IAbG,0DAA+B;IAA/B,iGAA+B;;;;IAe3C,sEACI;IAAA,yEAAkT;IAAnL,mbAAoC;IAA+I,qEAAU;IAAA,oEAA+C;IAAA,4DAAI;IACnX,4DAAM;;;;IADkK,0DAAuB;IAAvB,gFAAuB;;;IAnBnM,2EACI;IAAA,6EACI;IAAA,+HACI;IAcR,4DAAQ;IACR,iIACI;IAER,4DAAM;;;IAnBM,0DAAkD;IAAlD,sFAAkD;IAgBrD,0DAAkD;IAAlD,oHAAkD;;;;IAW3C,0EAEI;IAAA,uEACI;IAAA,yEACI;IADyB,6hBAAmD;IAC5E,8EAAgE;IAAA,uDAAgB;IAAA,4DAAS;IAAA,oEAA4D;IACzJ,4DAAI;IACR,4DAAO;IACX,4DAAK;;;;;;;IAPD,kKAAoD;IAGjC,0DAAa;IAAb,4FAAa;IAAmE,gFAAuB;IAClD,0DAAgB;IAAhB,yFAAgB;;;IALhG,qEACI;IAAA,oIAEI;IAMR,4DAAK;;;IAP4C,0DAAW;IAAX,2EAAW;;;;IAU5D,yEAAoU;IAAzK,gaAAyB;IAAgJ,qEAAU;IAAA,oEAA+C;IAAA,4DAAI;;;;IAA5M,gFAAuB;;;IAfxN,2EACI;IAAA,sEACI;IAAA,6EACI;IAAA,+HACI;IASR,4DAAQ;IACR,sEACI;IAAA,6HAAoU;IACpU,4EAA2C;IAAA,8EAAqB;IAAA,uDAAyD;;IAAA,4DAAS;IAAC,4DAAO;IAC9I,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAhBU,0DAA8C;IAA9C,mFAA8C;IAY6E,0DAA2B;IAA3B,2FAA2B;IAC1F,0DAAyD;IAAzD,gLAAyD;;;;IAQ7H,0EAEI;IAAA,uEACI;IAAA,yEACI;IADyB,6dAA2D;IACpF,8EAAsE;IAAA,uDAAgB;IAAA,4DAAS;IAAC,oEAA4D;IAChK,4DAAI;IACR,4DAAO;IACX,4DAAK;;;;;;;IAPY,mKAAoD;IAG9C,0DAAa;IAAb,6FAAa;IAA2E,gFAAuB;IACpD,0DAAgB;IAAhB,0FAAgB;;;IALtG,qEACI;IAAA,oIAEI;IAMR,4DAAK;;;IARG,0DAAY;IAAZ,6EAAY;;;IAFxB,6EACI;IAAA,+HACI;IAUR,4DAAQ;;;IAXA,0DAAwD;IAAxD,+FAAwD;;;;IAgBxD,0EACI;IACA,uEACI;IAAA,yEACI;IAD2B,qgBAA0F;IACrH,8EAAsE;IAAA,uDAAiD;IAAA,4DAAS;IAAA,oEAA4D;IAChM,4DAAI;IACR,4DAAO;IACX,4DAAK;;;;;;;IAPuC,uLAAgE;IAGrF,0DAAe;IAAf,+FAAe;IAA0G,gFAAuB;IACrF,0DAAiD;IAAjD,gIAAiD;;;IALvI,qEACI;IAAA,oIACI;IAOR,4DAAK;;;;IARG,0DAAuC;IAAvC,+GAAuC;;;IAFnD,6EACI;IAAA,+HACI;IASR,4DAAQ;;;IAVA,0DAAyD;IAAzD,iGAAyD;;;IAoBrC,uEAA6D;IAAA,uDAAwF;IAAA,4DAAO;;;IAA/F,0DAAwF;IAAxF,0KAAwF;;;IACrJ,uEAA4D;IAAA,uDAAoC;IAAA,4DAAO;;;IAA3C,0DAAoC;IAApC,sGAAoC;;;IAGhG,yEAA2E;IAAA,uDAA8C;IAAA,4DAAI;;;IAAlD,0DAA8C;IAA9C,gHAA8C;;;IACzH,yEAAoE;IAAA,uDAA8D;IAAA,4DAAI;;;IAAlE,0DAA8D;IAA9D,gJAA8D;;;IAItI,4EAA4H;IAAA,uDAAuG;;IAAA,4DAAO;;;IAA9G,0DAAuG;IAAvG,kPAAuG;;;IACnO,4EAA+H;IAAA,uDAA2G;;IAAA,4DAAO;;;IAAlH,0DAA2G;IAA3G,sPAA2G;;;IAC1O,4EAA6E;IAAA,uDAAiD;IAAA,4DAAO;;;IAAxD,0DAAiD;IAAjD,mHAAiD;;;IAK9H,wEACI;IAAA,uDACJ;IAAA,4DAAQ;;;IADJ,0DACJ;IADI,yKACJ;;;IAcR,sEACI;IAAA,4EAA+C;IAAA,gEAAK;IAAA,4DAAO;IAC/D,4DAAM;;;;;IAtCV,2EACI;IAAA,yEACI;IAAA,2EACI;IAAA,2EACI;IAAA,wJAA6D;IAC7D,wJAA4D;IAChE,4DAAM;IACN,2EACI;IAAA,kJAA2E;IAC3E,kJAAoE;IACxE,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,0JAA4H;IAC5H,0JAA+H;IAC/H,0JAA6E;IACjF,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,4EACI;IAAA,4JACI;IAER,4DAAM;IACN,4EACI;IAAA,4EACI;IAAA,0EAAqC;IAAlC,mcAAiC;IAAC,qEAA+B;IAAA,4DAAI;IAC5E,4DAAM;IACN,4EACI;IAAA,0EAAuC;IAApC,qcAAmC;IAAC,qEAAqC;IAAA,4DAAI;IACpF,4DAAM;IACN,4EACI;IAAA,0EAA2B;IAAxB,ybAAuB;IAAC,qEAA4C;IAAA,4DAAI;IAC/E,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,wJACI;IAER,4DAAM;;;IAvCmI,sQAA+K;IAIlS,0DAAsD;IAAtD,qHAAsD;IACtD,0DAAqD;IAArD,oHAAqD;IAG5B,0DAA2C;IAA3C,4GAA2C;IAClD,0DAA2C;IAA3C,4GAA2C;IAI7C,0DAAiG;IAAjG,uKAAiG;IACjG,0DAAoG;IAApG,0KAAoG;IACpG,0DAAkD;IAAlD,iHAAkD;IAKrE,0DAAsF;IAAtF,0JAAsF;IAgBhG,2DAA8C;IAA9C,kKAA8C;;;IArC3D,wEACI;IAAA,kJACI;IAuCR,qEAAe;;;IAxCN,0DAAoG;IAApG,4KAAoG;;;IAHrH,2EACI;IAAA,yEACI;IAAA,mJACI;IAyCR,4DAAM;IACV,4DAAM;;;IA3CgB,0DAAkF;IAAlF,4HAAkF;;;IAkD5F,2EACI;IAAA,uEAA0C;IAC9C,4DAAM;;;IA8EU,sEACI;IAAA,2EAAsB;IAAA,uDAA6C;IAAA,4DAAM;IAC7E,4DAAM;;;IADoB,0DAA6C;IAA7C,0JAA6C;;;IAGnE,uEAAmD;IAAA,8DAAG;IAAA,4DAAO;;;IACxC,8DAAG;;;IADxB,mIAAmD;IACnD,8NAAqB;IACrB,sEAAK;IAAA,uDAAgH;IAAA,4DAAM;;;;IAFrH,6IAA4C;IAE7C,0DAAgH;IAAhH,gUAAgH;;;IAsCjH,uEAAoD;IAAA,+DAAG;IAAA,4DAAO;;;IACxC,+DAAG;;;IAkBjB,uEAAsD;IAAA,4DAAC;IAAA,4DAAO;;;IACzC,4DAAC;;;;IAb9C,2EACI;IAAA,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,sEAAK;IAAA,uDAAoE;IAAA,4DAAM;IACnF,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,kFACA;IAD0D,oZAAgD,KAAK,KAAE;IAAjH,4DACA;IAAA,4EACI;IAAA,oIAAsD;IACtD,+NAAqB;IACzB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,4EACI;IAAA,mFAGA;IAH8C,0VAAkD,6VAEP,IAAI,KAFG;IAAhG,4DAGA;IAAA,4EAA+B;IAAA,6DAAC;IAAA,4DAAM;IAC1C,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IA7BoE,gFAAkB;IAIvE,0DAAoE;IAApE,sJAAoE;IAMqE,0DAAiD;IAAjD,6GAAiD;IAEjL,0DAA+C;IAA/C,6IAA+C;IASX,0DAAkD;IAAlD,8GAAkD;;;IAuBxF,uEAA+C;IAAA,4DAAC;IAAA,4DAAO;;;IAClC,4DAAC;;;;IAb9C,2EACI;IAAA,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,sEAAK;IAAA,uDAAsD;IAAA,4DAAM;IACrE,4DAAM;IACV,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,2EACI;IAAA,kFACA;IADoF,gVAA0C;IAA9H,4DACA;IAAA,4EACI;IAAA,0IAA+C;IAC/C,qOAAqB;IACzB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EACI;IAAA,wEAAM;IAAA,8EAAkB;IAAA,4DAAO;IACnC,4DAAQ;IACR,iFACJ;IADoE,iYAA6C;IAA7G,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;;IA3B+D,gFAAkB;IAIlE,0DAAsD;IAAtD,wIAAsD;IAM6B,0DAA0C;IAA1C,sGAA0C;IAEpH,0DAAwC;IAAxC,+HAAwC;IAWU,0DAA6C;IAA7C,6GAA6C;;;IAxBjI,sEACI;IAAA,kIACI;IA2BR,4DAAM;;;IA5BG,0DAA+D;IAA/D,qGAA+D;;;;IAlD5E,sEACI;IAAA,2EACI;IAAA,0EACI;IAAA,2EAA2B;IAAA,uDAAyE;IAAA,4DAAM;IAC9G,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,4EACI;IAAA,uEAAM;IAAA,0EAAc;IAAA,4DAAO;IAC3B,6HAAoD;IACpD,wNAAsB;IAC1B,4DAAQ;IACR,8EACJ;IADsE,sWAAgC;IAAlG,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,6HACI;IA8BJ,4HACI;IA6BR,4DAAM;;;;IA5EiC,0DAAyE;IAAzE,kNAAyE;IAQtF,0DAA4C;IAA5C,6IAA4C;IAGY,0DAAgC;IAAhC,+FAAgC;IAIzG,0DAAoE;IAApE,kGAAoE;IA+BpE,0DAA+B;IAA/B,iGAA+B;;;IA8CpB,8EACI;IAAA,uDACJ;IAAA,4DAAS;;;IAF4C,iFAAmB;IACpE,0DACJ;IADI,4FACJ;;;IAQA,uEAAoD;IAAA,+DAAG;IAAA,4DAAO;;;IACxC,+DAAG;;;;IALrC,0EACI;IAAA,0EACI;IAAA,6EACI;IAAA,uEAAM;IAAA,4EAAiB;IAAA,4DAAO;IAC9B,0IAAoD;IACpD,qOAAsB;IAC1B,4DAAQ;IACR,kFACJ;IADoE,mYAA8C;IAA9G,4DACJ;IAAA,4DAAM;IACV,4DAAM;;;;IALY,0DAA4C;IAA5C,+IAA4C;IAGU,0DAA8C;IAA9C,8GAA8C;;;;IAzB1H,2EACI;IAAA,0EACI;IAAA,2EAAsC;IAAA,uDAA6E;IAAA,4DAAM;IAC7H,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,0EACI;IAAA,0EACI;IAAA,6EACI;IAAA,uEAAM;IAAA,wEAAa;IAAA,4DAAO;IAC9B,4DAAQ;IACR,oFACI;IADyB,iYAAkD;IAC3E,0IACI;IAER,4DAAS;IACb,4DAAM;IACV,4DAAM;IACN,qIACI;IASR,4DAAM;;;IA1BwC,0DAA6E;IAA7E,qPAA6E;IASlF,0DAAkD;IAAlD,iHAAkD;IACnE,0DAA4C;IAA5C,kGAA4C;IAM1C,0DAA0F;IAA1F,wKAA0F;;;IAwEhH,2EAAyF;IAAA,uDAAiE;IAAA,4DAAM;;;IAAvE,0DAAiE;IAAjE,gJAAiE;;;;IAD9J,sEACI;IAAA,0HAAyF;IACzF,8EAAoF;IAAA,iEAAM;IAAA,4DAAS;IACnG,8EAA2H;IAAhE,qUAA6B,CAAC,KAAE;IAAgC,iEAAM;IAAA,4DAAS;IAC9I,4DAAM;;;IAHG,0DAAyD;IAAzD,mIAAyD;IAEtD,0DAAoC;IAApC,qGAAoC;;;;IAG5C,8EAAoF;IAAA,iEAAM;IAAA,4DAAS;IACnG,6EAAsF;IAAhE,6UAA6B,CAAC,KAAE;IAAgC,iEAAM;IAAA,4DAAS;;ADniB1H,MAAM,oBAAoB;IAqM7B,YAAoB,cAA8B,EAAU,iBAAoC,EAAU,EAAe,EAAU,kBAA0C,EACjK,WAAwB,EAAU,KAAwB;QADlD,mBAAc,GAAd,cAAc,CAAgB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,uBAAkB,GAAlB,kBAAkB,CAAwB;QACjK,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAmB;QArMtE,QAAQ;QACD,oBAAe,GAAG,EAAE,CAAC;QACrB,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAG,EAAE,CAAC;QAClB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,EAAE,CAAC;QAChB,iBAAY,GAAiB,EAAE,CAAC;QAChC,WAAM,GAAG,EAAE,CAAC;QACZ,YAAO,GAAG,EAAE,CAAC;QACb,UAAK,GAAG,EAAE,CAAC;QACX,iBAAY,GAAe,EAAE,CAAC;QACrC,wBAAmB,GAAW,EAAE,CAAC;QAEjC,yBAAoB,GAAG,EAAE,CAAC;QAC1B,yBAAoB,GAAG,EAAE,CAAC;QAC1B,uBAAkB,GAAG,EAAE,CAAC;QACxB,yBAAoB,GAAG,EAAE,CAAC;QAMnB,UAAK,GAAW,CAAC,CAAC;QACzB,aAAQ,GAAW,EAAE,CAAC;QACtB,WAAM,GAAW,EAAE,CAAC;QAEb,iBAAY,GAAY,KAAK,CAAC;QAC9B,mBAAc,GAAY,KAAK,CAAC;QAEhC,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAE3B,eAAU,GAAY,IAAI,CAAC;QAC3B,gBAAW,GAAY,IAAI,CAAC;QAEnC,wBAAwB;QACjB,0BAAqB,GAAQ,EAAE,CAAC;QAEvC,SAAS;QAET,iBAAY,GAAG,6DAAY,CAAC;QAG5B,WAAM,GAAQ,EAAE,CAAC;QACjB,cAAS,GAAQ,EAAE,CAAC;QACb,oBAAe,GAA6B,IAAI,gGAAwB,CAAC,KAAK,CAAC,CAAC;QAChF,0BAAqB,GAA+B,EAAE,CAAC;QACvD,uBAAkB,GAAW,CAAC,CAAC;QAC/B,4BAAuB,GAA+B,EAAE,CAAC;QACzD,oBAAe,GAAG,EAAE,CAAC;QACrB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,yBAAoB,GAAG,KAAK,CAAC;QAGpC,WAAM,GAAQ;YACV,CAAC,EAAE;gBACC,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,SAAS;aACtB;YACD,CAAC,EAAE;gBACC,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,SAAS;aACvB;YACD,CAAC,EAAE;gBACC,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,SAAS;aACvB;SACJ,CAAC;QAiBF,YAAO,GAAiB,IAAI,4CAAO,EAAE,CAAC;QACtC,yBAAoB,GAA4B,EAAE,CAAC;QAiKnD,SAAI,GAAiB,6DAAY,CAAC,KAAK,CAAC;QACxC,aAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;IAnD8C,CAAC;IA/H3E,gBAAgB,CAAC,KAAK;QAClB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE;YAC1I,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACL,CAAC;IACM,kBAAkB;QACrB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAO,IAAI,EAAE,CAAC;QAC9F,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAO,IAAI,EAAE,CAAC;QAC9F,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAO,IAAI,EAAE,CAAC;QAC1F,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAO,IAAI,EAAE,CAAC;QAC7F,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAGD,aAAa,CAAC,KAAK;QACf,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QACnE,IAAI,YAAY,EAAE;YACd,IAAI,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CACzC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;iBACtC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACL,IAAI,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE;oBAC5B,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;iBAC7B;gBACD,OAAO;oBACH,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK;iBACjC,CAAC;YACN,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACrD;IACL,CAAC;IACD,eAAe;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IACD,cAAc,CAAC,GAAG;QACd,cAAc;QACd,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACnD,IAAI,MAAM,EAAE;YACR,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACvE,IAAI,YAAY,IAAI,GAAG,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,GAAG,CAAC,EAAE,CAAC;qBACjE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;qBAC5D,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC,CAAC;aAC7J;SACJ;IACL,CAAC;IACD,gBAAgB;QACZ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IACM,YAAY;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,IAAI,IAAI,6DAAY,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;aAAM;YACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC/B,CAAC;IACM,eAAe;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IACM,mBAAmB,CAAC,QAAgB,EAAE,MAAc;QACvD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;IACM,kBAAkB;QACrB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAClC,gBAAgB;YAChB,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE;oBACpC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;oBAC9B,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;oBAC1C,IAAI,KAAK,GAAG;wBACR,KAAK,EAAE,CAAC,CAAC,eAAe,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;qBACjM,CAAC;oBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC3B;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gBAAgB;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5G,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,YAAY,GAAG,mCAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC9D,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC;YACnE,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;gBAC/B,IAAI,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;gBAC/E,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACvB,MAAM,cAAc,GAAG,yDAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;oBACrE,MAAM,YAAY,GAAG,yDAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;oBACjE,IAAI,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;oBACvE,IAAI,SAAS,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC;oBACxC,IAAI,KAAK,GAAG;wBACR,KAAK,EAAE,cAAc,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS;qBAC9E,CAAC;oBACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACN;SACJ;IACL,CAAC;IAID,QAAQ;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC;SACzD,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAC3B,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YACnC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;SAC7C,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,QAAQ;QACR,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,uBAAuB,GAAG;YAC3B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,KAAK;SACxB,CAAC;QACF,IAAI,CAAC,mBAAmB,GAAG;YACvB,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,gBAAgB;YACzB,SAAS,EAAE,WAAW;YACtB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,KAAK;SACxB,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG;YACrB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,MAAM;YACjB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;YACvB,cAAc,EAAE,KAAK;YACrB,wBAAwB,EAAE,IAAI;SACjC,CAAC;QAEF,IAAI,CAAC,YAAY,GAAG,oEAAc,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9G,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAID,YAAY;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAA+B,EAAE,EAAE;YACtG,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC;IACN,CAAC;IACM,aAAa;QAChB,IAAI,UAAU,GAAwB,IAAI,0DAAmB,EAAE,CAAC;QAChE,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACvE,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC5C,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChE,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACjE,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7G,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACnG,IAAI,IAAI,CAAC,IAAI,IAAI,6DAAY,CAAC,GAAG,EAAE;YAC/B,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YACxC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SACvC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,oBAAoB,CAAC,KAAa,EAAE,IAAI;QACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;QACrE,IAAI,QAAQ,EAAE;YACV,sCAAsC;YACtC,wEAAwE;YACxE,8DAA8D;YAC9D,GAAG;YACH,IAAI,GAAG,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACxB,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC;aAC1D,CAAC,CAAC;SACN;IACL,CAAC;IACD,uBAAuB,CAAC,KAAa,EAAE,SAAe,EAAE,OAAa;QACjE,IAAI,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;QACrE,IAAI,QAAQ,EAAE;YACV,IAAI,SAAS,GAAG,mCAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,QAAQ,GAAG,mCAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,OAAO,GAAG,mCAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,MAAM,GAAG,mCAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,GAAG,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAC3C,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;mBAC5G,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7G,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACxB,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC;aAC1D,CAAC,CAAC;SACN;IACL,CAAC;IAED,2BAA2B,CAAC,OAAmC;QAC3D,OAAO,GAAG,4DAAM,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QACzC,IAAI,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;YAC1D,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED,kBAAkB,CAAC,IAAI,EAAE,KAAK;QAC1B,sBAAsB;IAC1B,CAAC;IAED,OAAO,CAAC,IAAkB;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAAA,CAAC;IAEF,qBAAqB;QACjB,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9F,CAAC;IACD,kBAAkB;QACd,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE;YACpD,IAAI,UAAU,GAAG,mCAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACzD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC;SAChF;aAAM;YACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SACvG;IACL,CAAC;IACD,eAAe;QACX,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE;YACpD,IAAI,UAAU,GAAG,mCAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACzD,OAAO,UAAU,CAAC;SACrB;aAAM;YACH,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;SAC5C;IACL,CAAC;IACD,SAAS,CAAC,WAAW;QACjB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,EAAE,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC9F,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAC9C,2BAA2B;QAC3B,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,IAAI,CAAC,EAAE;YAAE,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,CAAC,CAAC;SAAE;QAEtG,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACxD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IACD,kBAAkB;QACd,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClE,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChE,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACpE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,GAAG,GAA+B,EAAE,CAAC;QACzC,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACvC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzE,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC;aAC7C;SACJ;aAAM;YACH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClC;QACD,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;QAC3C,IAAI,QAAQ,GAA0B,IAAI,6FAAqB,EAAE,CAAC;QAClE,QAAQ,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAChC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACvC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;QAC3D,QAAQ,CAAC,OAAO,GAAE,aAAa,CAAC;QAChC,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;QACzC,QAAQ,CAAC,cAAc,GAAG,YAAY,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5D,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBACtB,iEAAY,CAAC,UAAU,CAAC,sCAAsC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aACzF;iBACI;gBACD,iEAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7F;YACD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YACtD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2BAA2B,CAAC,WAAgB;QACxC,IAAI,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5G,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;QACrD,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACvC,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC5F,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACtE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC1D;IACL,CAAC;IACD,mBAAmB,CAAC,WAAgB;QAChC,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,IAAI,CAAC,EAAE;YAAE,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,CAAC,CAAC;SAAE;QACtG,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAC3D,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,qBAAqB,CAAC,WAAgB;QAClC,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC;QACtC,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACvC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,cAAc,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,IAAI,CAAC,uBAAuB;gBAC5B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpF;QACD,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,gCAAgC,CAAC,CAAC;QACxE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,oBAAoB;QAChB,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC;IACtG,CAAC;IACD,mBAAmB,CAAC,MAAc;QAC9B,YAAY;QACZ,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,IAAI,mBAAmB,GAAW,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;YACxE,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;gBACvC,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBACnD,IAAI,IAAI,CAAC,uBAAuB;oBAC5B,mBAAmB,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aAC9I;YACD,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,GAAG,CAAC,CAAC,IAAI,mBAAmB,GAAG,OAAO,CAAC,EAAE;gBACjH,iEAAY,CAAC,QAAQ,CAAC,4BAA4B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAAC,OAAO;aACrF;iBACI,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;gBAC3K,IAAI,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;oBACxD,iEAAY,CAAC,QAAQ,CAAC,+BAA+B,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBAAC,OAAO;iBACjI;aACJ;SACJ;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,MAAM,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAAE;QACjG,IAAI,cAAc,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;YACvC,IAAI,MAAM,IAAI,CAAC,EAAE;gBACb,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;gBACzC,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;gBAC/C,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;gBACvD,IAAI,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;gBACjE,IAAI,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;gBAC7D,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;gBAC3D,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;oBAC/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;oBAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;oBACjD,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;oBACnC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;oBAC7C,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC;oBACzC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBAC3C,CAAC,CAAC,CAAC;aACN;YACD,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC5C,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBAC9B,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBACrC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;oBAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACjF,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;oBACnD,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;oBAC7D,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBACzD,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBACzD,IAAI,CAAC,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,oBAAoB,IAAI,CAAC;wBACrD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,CAAC,CAAC;aACL;SACJ;QACD,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,cAAc,CAAC;aACpD,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACrB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBACtB,iEAAY,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAClE,yCAAyC;aAE5C;iBACI,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;gBAC3B,iEAAY,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAClE,yCAAyC;aAC5C;iBACI;gBACD,iEAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7F;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,eAAe;QACX,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAED,mBAAmB,CAAC,GAA6B,EAAE,SAAkB;QACjE,IAAI,SAAS,EAAE;YACX,GAAG,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC;SAClF;aAAM;YACH,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;SAClF;IACL,CAAC;IACD,wBAAwB;QACpB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,eAAe;QACX,IAAI,CAAC,cAAc,CAAC,+BAA+B,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACrE,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;gBACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;gBAClC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;aACvF;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kBAAkB,CAAC,MAAM;QAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;IAC7E,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IACM,YAAY,CAAC,GAAI;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE;YACtF,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;QACD,IAAI,GAAG,IAAI,KAAK,EAAE;YACd,iEAAY,CAAC,UAAU,CAAC,6BAA6B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAChF;aAAM,IAAI,GAAG,IAAI,OAAO,EAAE;YACvB,iEAAY,CAAC,OAAO,CAAC,2BAA2B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAC3E;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,iBAAiB;QACpB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;YACnE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;YACzJ,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/G,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ;aACI;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;SACvF;IACL,CAAC;IACM,gBAAgB;QACnB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACxG,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC1G;SACJ;aACI;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;SACxC;IACL,CAAC;IACM,eAAe;QAClB,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACrF,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACrF,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACjF,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACpF,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxD,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IACM,YAAY,CAAC,IAAS,EAAE,QAAiB;QAC5C,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,IAAI,QAAQ,EAAE;YAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;YACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAE9C;aACI,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;YACrD,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,QAAQ;YACxC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9C;IACL,CAAC;IACM,mBAAmB,CAAC,SAAkB;QACzC,IAAI,CAAC,SAAS,EAAE;YACZ,iEAAY,CAAC,QAAQ,CAAC,2BAA2B,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;SAC5E;IACL,CAAC;IACD,uBAAuB;QACnB,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,EAAE;YACxC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAU,EAAE,EAAE;gBACjE,IAAI,CAAC,qBAAqB,GAAG,GAAG,IAAI,EAAE,CAAC;YAC3C,CAAC,CAAC,CAAC;SACN;IACL,CAAC;;wFAtnBQ,oBAAoB;oGAApB,oBAAoB;;QCxBjC,8MACI;QAgFJ,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEACI;QAAA,yEAGI;QAFC,0LAAuB,iFACd,qCAA4B,UAAU,CAAC,IADzB;QAExB,mEAAiC;QACrC,4DAAM;QACN,0EAEI;QADC,2LAAuB,kFAAU,qCAA4B,OAAO,CAAC,IAA9C;QACxB,mEACJ;QAAA,4DAAM;QACN,2EAGI;QAFC,2LAAuB,kFACd,qCAA4B,MAAM,CAAC,IADrB;QAExB,oEAAkC;QACtC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EAAgB;QAAA,wDAAuD;;QAAA,4DAAK;QAChF,4DAAM;QACN,2EACI;QAAA,6EACsD;QAD2F,uRAAS,UAAQ,IAAC;QAC7G,yEAA8B;QAAA,qHAA6C;QAAgB,4DAAI;QAAC,oEAAO;QAAA,4DAAI;QACrK,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,yEAAmI;QAAhG,wIAAS,mCAA2B,IAAC;QAA2D,iEAAK;QAAA,4DAAI;QAC5I,yEAAgI;QAA7F,wIAAS,kCAA0B,IAAC;QAAyD,gEAAI;QAAA,4DAAI;QACxI,yEAA6H;QAA1F,wIAAS,iCAAyB,IAAC;QAAuD,+DAAG;QAAA,4DAAI;QACxI,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEACA;QAAA,2EACI;QAAA,mHACI;QAEJ,2JAEA;QACA,yJAEA;QACA,uJAEA;QACJ,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACN,+MACI;QAUJ,+MACI;QAwBJ,gNACI;QAqBJ,+MACI;QAcJ,+MACI;QAaJ,+MACI;QA+CJ,sEAA0H;QAC1H,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,mHACI;QAEJ,4EACI;QAAA,2EACI;QAAA,0EACI;QAAA,2EACI;QAAA,0EAA4B;QAAA,6EAAiB;QAAA,4DAAK;QACtD,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EACA;QADiH,8IAAU,wBAAoB,IAAC;QAAhJ,4DACA;QAAA,6EAA6D;QAAA,qFAAyB;QAAA,4DAAQ;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,6EACI;QAAA,wEAAM;QAAA,iEAAK;QAAA,4DAAO;QACtB,4DAAQ;QACR,+FAM0B;QAFD,0KAAY,yBAAqB,IAAC,gHACpB,qBAAiB,IADG;QAE3D,4DAA0B;QAC9B,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,wEAAM;QAAA,kEAAM;QAAA,4DAAO;QACvB,4DAAQ;QACR,+FAM0B;QAFD,0KAAY,0BAAsB,IAAC,gHACrB,sBAAkB,IADG;QAE5D,4DAA0B;QAC9B,4DAAM;QACN,2EACI;QAAA,6EACI;QAAA,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACrB,4DAAQ;QACR,0FAI0B;QAC9B,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EAAgF;QAAA,kEAAM;QAAA,4DAAS;QAC/F,8EAAoF;QAA9D,6IAAS,wBAAoB,IAAC;QAAgC,mEAAO;QAAA,4DAAS;QACxG,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGN,sEAAoJ;QACpJ,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,gFACI;QAAA,0EAA4B;QAAA,oFAAwB;QAAA,4DAAK;QACzD,0EACI;QAAA,4EACI;QAAA,4EAAgC;QAAA,yDAAgC;QAAA,4DAAM;QAC1E,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,4EAAuC;QAAA,+EAAkB;QAAA,4DAAM;QAC/D,qHACI;QAEJ,iNACI;QAIR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,+EAA8D;QAAA,mEAAM;QAAA,4DAAS;QAC7E,+EAA2G;QAArF,8IAAS,wBAAoB,CAAC,CAAC,IAAC;QAAqD,mEAAM;QAAA,4DAAS;QAC9H,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,uEAAgH;QAChH,4EACI;QAAA,4EACI;QACA,4EACI;QAAA,4EACI;QAAA,iFACI;QAAA,4EACI;QAAA,2EAAkC;QAAA,oFAAuB;QAAA,4DAAK;QAC9D,+EAAqG;QAAA,qEAAgC;QAAA,4DAAS;QAClJ,4DAAM;QAEN,sHACI;QAiFJ,kNACI;QA+BJ,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,8EACI;QAAA,yEAAM;QAAA,0EAAa;QAAA,4DAAO;QAC9B,4DAAQ;QACR,kFACJ;QADkL,gNAA0C;QAAxN,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EAAgC;QAAA,uEAAU;QAAA,4DAAQ;QAClD,kFACJ;QADwL,qNAA+C;QAAnO,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACN,4EACI;QAAA,4EACI;QAAA,8EAAgC;QAAA,qEAAQ;QAAA,4DAAQ;QAChD,kFACJ;QADoL,mNAA6C;QAA7N,4DACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,8EACI;QAAA,yEAAM;QAAA,+EAAkB;QAAA,4DAAO;QACnC,4DAAQ;QACR,kFACJ;QADoE,mNAA6C;QAA7G,4DACJ;QAAA,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,8EACA;QAD6C,4MAAsC;QAAnF,4DACA;QAAA,8EAA8C;QAAA,qEAAO;QAAA,4DAAQ;QACjE,4DAAM;QACN,4EACI;QAAA,8EACA;QAD6C,4MAAsC;QAAnF,4DACA;QAAA,8EAA+C;QAAA,sEAAS;QAAA,4DAAQ;QACpE,4DAAM;QACN,4EACI;QAAA,8EACA;QAD6C,4MAAsC;QAAnF,4DACA;QAAA,8EAA8C;QAAA,qEAAQ;QAAA,4DAAQ;QAClE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,4EACI;QAAA,4EACI;QAAA,iFAAiJ;QAA1H,4MAAmC;QAA4E,4DAAW;QACrJ,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,4EACI;QAAA,qHACI;QAIJ,iNACI;QAGR,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;QA1ekF,0DAAa;QAAb,0EAAa;QAMpE,0DAAuB;QAAvB,kFAAuB;QAG4B,0DAAa;QAAb,0EAAa;QAQzD,0DAAuD;QAAvD,8KAAuD;QAGlD,0DAA+B;QAA/B,2EAA+B;QAC2D,0DAAiB;QAAjB,+EAAiB;QAInD,0DAA4C;QAA5C,wGAA4C;QAC7C,0DAA2C;QAA3C,uGAA2C;QAC5C,0DAA0C;QAA1C,sGAA0C;QAKxH,0DAAiB;QAAjB,8EAAiB;QACb,0DAA0B;QAA1B,wFAA0B;QAGN,0DAAkC;QAAlC,gGAAkC;QAGd,0DAAiC;QAAjC,+FAAiC;QAGvD,0DAAgC;QAAhC,8FAAgC;QAqJtD,2DAA4B;QAA5B,0FAA4B;QAIxB,0DAA2B;QAA3B,wFAA2B;QAmBS,2DAA8B;QAA9B,2FAA8B;QAY9B,0DAA8B;QAA9B,2FAA8B;QAY9B,0DAA8B;QAA9B,2FAA8B;QA4B/B,2DAAgC;QAAhC,qIAAgC;QAKvD,0DAA6D;QAA7D,8GAA6D;QAiCzE,2DAAgE;QAAhE,sGAAgE;QAwHqD,0DAAuB;QAAvB,gFAAuB;QAM3C,0DAAuD;QAAvD,oHAAuD;QAM3D,0DAAuD;QAAvD,oHAAuD;QAU7E,0DAA6C;QAA7C,wGAA6C;QAQhE,0DAAsC;QAAtC,iGAAsC;QAItC,0DAAsC;QAAtC,iGAAsC;QAItC,0DAAsC;QAAtC,iGAAsC;QAQ5D,0DAAmC;QAAnC,8FAAmC;QAM7D,0DAA4D;QAA5D,sGAA4D;;6FD5hB5E,oBAAoB;cAPhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;gBAC5C,aAAa,EAAE,+DAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAClD;;;;;;;;;;;;;;AExBD;AAAA;AAAA;AAAA;AAAO,MAAM,mBAAmB;IAC5B;QACI,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;IAC7B,CAAC;CAQJ;AAEM,MAAM,UAAU;CAItB;AAEM,MAAM,UAAU;CAKtB;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC8B;AACtB;AACvD,yFAAyF;AACpC;AACU;AACU;AACX;AACN;AACR;;;;;;AAEhD,sCAAsC;AACtC,oBAAoB;AACpB,uBAAuB;AACvB,KAAK;AAEL,MAAM,SAAS,GAAW;IACtB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yFAAoB;KAClC,EAAE;QACC,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,yFAAoB;KAClC;CAAC,CAAC;AAkBA,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAblB;YACL,4DAAY;YACZ,mEAAY;YACZ,yEAAe;YACf,6DAAgB,CAAC,OAAO,EAAE;YAC1B,4DAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;YAChC,kEAAe,CAAC,OAAO,EAAE;YACzB,+DAAc,CAAC,OAAO,CAAC;gBACnB,OAAO,EAAE,4DAAW;gBACpB,UAAU,EAAE,sFAAc;aAC7B,CAAC;SACL;mIAEU,gBAAgB,mBAdV,yFAAoB,aAEjC,4DAAY;QACZ,mEAAY;QACZ,yEAAe;6FAUR,gBAAgB;cAf5B,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,yFAAoB,CAAC;gBACtC,OAAO,EAAE;oBACL,4DAAY;oBACZ,mEAAY;oBACZ,yEAAe;oBACf,6DAAgB,CAAC,OAAO,EAAE;oBAC1B,4DAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;oBAChC,kEAAe,CAAC,OAAO,EAAE;oBACzB,+DAAc,CAAC,OAAO,CAAC;wBACnB,OAAO,EAAE,4DAAW;wBACpB,UAAU,EAAE,sFAAc;qBAC7B,CAAC;iBACL;aACF","file":"calendar-tfcalendar-module-es2015.js","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { addHours } from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport { CalendarView, CalendarViewPeriod } from 'angular-calendar';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { DispatcherService} from '../../carrier/service/dispatcher.service';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { sortBy } from '../../my.functions';\r\nimport { CalendarScheduleModel, DeliveryRequestViewModel, DelRequestsByJobModel, ScheduleBuilderModel } from '../../carrier/models/DispatchSchedulerModels';\r\nimport { DeliveryrequestService } from '../../carrier/service/deliveryrequest.service';\r\nimport { UtilService } from '../../carrier/service/util.service';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Priority } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CalendarFilterModel, IndexModel, ShiftModel } from '../model';\r\nimport * as moment from 'moment';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\n\r\n@Component({\r\n    selector: 'app-dsb-calendar',\r\n    templateUrl: './dsb-calendar.component.html',\r\n    styleUrls: ['./dsb-calendar.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DsbCalendarComponent implements OnInit {\r\n    //filter\r\n    public allLocationList = [];\r\n    public allVesselList = [];\r\n    public locationList = [];\r\n    public customerList = [];\r\n    public vesselList = [];\r\n    public scheduleData: ShiftModel[] = [];\r\n    public shifts = [];\r\n    public columns = [];\r\n    public loads = [];\r\n    public priorityList: Priority[] = [];\r\n    selectedPriorityIds: string = '';\r\n\r\n    SelectedlocationList = [];\r\n    SelectedCustomerList = [];\r\n    SelectedVesselList = [];\r\n    SelectedPriorityList = [];\r\n\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public CustomerDdlSettings: IDropdownSettings;\r\n    public SingleDdlSettings: IDropdownSettings;\r\n\r\n    public count: number = 0;\r\n    FromDate: string = '';\r\n    ToDate: string = '';\r\n\r\n    public locationType: boolean = false;\r\n    public IsFilterLoaded: boolean = false;\r\n\r\n    public MinDate: Date = new Date();\r\n    public MaxDate: Date = new Date();\r\n\r\n    public isFromDate: boolean = true;\r\n    public isValidDate: boolean = true;\r\n\r\n    //schedule quantity type\r\n    public ScheduleQuantityTypes: any = [];\r\n\r\n    //@Filter\r\n\r\n    CalendarView = CalendarView;\r\n    public DrForm: FormGroup;\r\n    public MoveToDsbForm: FormGroup;\r\n    Events: any = [];\r\n    DayEvents: any = [];\r\n    public requestToUpdate: DeliveryRequestViewModel = new DeliveryRequestViewModel(false);\r\n    public blendRequestsToUpdate: DeliveryRequestViewModel[] = [];\r\n    public blendTotalQuantity: number = 0;\r\n    public blendAddRequestToUpdate: DeliveryRequestViewModel[] = [];\r\n    public blendedProducts = \"\";\r\n    public _loadingDrRequests = false;\r\n    public _loadingScheduleData = false;\r\n    public SelectedDay; // for viewMoreData\r\n    public SelectedDayEvent; // for dayView data\r\n    colors: any = {\r\n        1: {\r\n            primary: '#FDD6D6',\r\n            secondary: '#BB4141',\r\n            tertiary: '#fadadd'\r\n        },\r\n        2: {\r\n            primary: '#FFDDB5',\r\n            secondary: '#E89330',\r\n        },\r\n        3: {\r\n            primary: '#DCDCDC',\r\n            secondary: '#696969',\r\n        },\r\n    };\r\n    period: CalendarViewPeriod;\r\n    beforeViewRender(event) {\r\n        if (!this.period || this.period.start.getTime() !== event.period.start.getTime() || this.period.end.getTime() !== event.period.end.getTime()) {\r\n            this.period = event.period;\r\n            this.setlocalFilterVals();\r\n            this.ApplyFilters();\r\n        }\r\n    }\r\n    public setlocalFilterVals() {\r\n        this.SelectedCustomerList = JSON.parse(localStorage.getItem(\"calenderCustomers\")) as [] || [];\r\n        this.SelectedlocationList = JSON.parse(localStorage.getItem(\"calenderLocations\")) as [] || [];\r\n        this.SelectedVesselList = JSON.parse(localStorage.getItem(\"calenderVessels\")) as [] || [];\r\n        this.SelectedPriorityList = JSON.parse(localStorage.getItem(\"calenderPriority\")) as [] || [];\r\n        this.FromDate = localStorage.getItem(\"calenderFromDate\");\r\n        this.ToDate = localStorage.getItem(\"calenderToDate\");\r\n    }\r\n    refresh: Subject<any> = new Subject();\r\n    allDeliveryLocations: DelRequestsByJobModel[] = [];\r\n    onShiftSelect(shift) {\r\n        const shiftIndexes = this.scheduleData.find(x => x.Id == shift.Id);\r\n        if (shiftIndexes) {\r\n            let cArray = shiftIndexes.Indexes.map(x => ({ ColumnIndex: x.ColumnIndex, Driver: x.Driver }));\r\n            this.columns = [...new Map(cArray.map(item =>\r\n                [item['ColumnIndex'], item])).values()]\r\n                .map(y => {\r\n                    var cName = \"C\" + (y.ColumnIndex + 1);\r\n                    if (y.Driver && y.Driver != \"\") {\r\n                        cName += \" : \" + y.Driver;\r\n                    }\r\n                    return {\r\n                        Id: y.ColumnIndex, Name: cName\r\n                    };\r\n                });\r\n            this.loads = [];\r\n            this.MoveToDsbForm.get('Load').patchValue(null);\r\n            this.MoveToDsbForm.get('Column').patchValue(null);\r\n        }\r\n    }\r\n    onShiftDeSelect() {\r\n        this.columns = [];\r\n        this.loads = [];\r\n        this.MoveToDsbForm.get('Column').patchValue(null);\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    onColumnSelect(col) {\r\n        //filter loads\r\n        let shifts = this.MoveToDsbForm.get(\"Shift\").value;\r\n        if (shifts) {\r\n            const shiftIndexes = this.scheduleData.find(x => x.Id == shifts[0].Id);\r\n            if (shiftIndexes && col) {\r\n                this.MoveToDsbForm.get('Load').patchValue(null);\r\n                this.loads = shiftIndexes.Indexes.filter(x => x.ColumnIndex == col.Id)\r\n                    .map(x => ({ LoadIndex: x.LoadIndex, LoadTime: x.LoadTime }))\r\n                    .reduce(function (a, b) { return a.concat(b); }, []).map(y => { return { Id: y.LoadIndex, Name: \"Load \" + (y.LoadIndex + 1) + \" : \" + y.LoadTime } });\r\n            }\r\n        }\r\n    }\r\n    onColumnDeSelect() {\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    public GetEventData() {\r\n        this.Events = [];\r\n        if (this.view == CalendarView.Day) {\r\n            this.setDayViewEvents();\r\n        } else {\r\n            this.setMonthViewEvents();\r\n        }\r\n        this.refresh.next();\r\n        this._loadingDrRequests = false;\r\n        this.cdRef.detectChanges();\r\n    }\r\n    public resetLoadFilter() {\r\n        this.shifts = [];\r\n        this.loads = [];\r\n        this.columns = [];\r\n        this.MoveToDsbForm.get('Shift').patchValue(null);\r\n        this.MoveToDsbForm.get('Column').patchValue(null);\r\n        this.MoveToDsbForm.get('Load').patchValue(null);\r\n    }\r\n    public getCalendarLoadData(regionId: string, drDate: string) {\r\n        this.resetLoadFilter();\r\n        this._loadingScheduleData = true;\r\n        this.carrierService.getSheduleCalendarData(regionId, drDate).subscribe(data => {\r\n            this.scheduleData = data;\r\n            this.shifts = this.scheduleData.map(x => { return { Id: x.Id, Name: x.Name }; });\r\n            this._loadingScheduleData = false;\r\n            this.cdRef.detectChanges();\r\n        });\r\n    }\r\n    public setMonthViewEvents() {\r\n        this.allDeliveryLocations.forEach(z => {\r\n            // group by date\r\n            var seldate = [];\r\n            z.DeliveryRequests.forEach(z1 => {\r\n                if (!seldate.includes(z1.SelectedDate)) {\r\n                    seldate.push(z1.SelectedDate);\r\n                    let eventDate = new Date(z1.SelectedDate);\r\n                    let edata = {\r\n                        title: z.CustomerCompany + \" - \" + z.JobName, Customer: z.CustomerCompany, JobName: z.JobName, JobId: z.JobId, start: eventDate, end: eventDate, allDay: true, color: this.colors[z1.Priority]\r\n                    };\r\n                    this.Events.push(edata);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public setDayViewEvents() {\r\n        this.DayEvents = [];\r\n        let allDrs = this.allDeliveryLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\r\n        if (allDrs && allDrs.length > 0) {\r\n            let selectedDate = moment(this.viewDate).format('MM/DD/YYYY');\r\n            var filterDrs = allDrs.filter(t => t.SelectedDate == selectedDate);\r\n            if (filterDrs && filterDrs.length) {\r\n                var groupByTimeDrs = this.deliveryReqService.groupDrsBySelectedTime(filterDrs);\r\n                groupByTimeDrs.forEach(x => {\r\n                    const eventStartDate = addHours(new Date(selectedDate), x.StartTime);\r\n                    const eventEndDate = addHours(new Date(selectedDate), x.EndTime);\r\n                    let jobDrs = this.deliveryReqService.groupDrsByJob(x.DeliveryRequests);\r\n                    let timeLimit = x.EndTime - x.StartTime;\r\n                    let edata = {\r\n                        start: eventStartDate, end: eventEndDate, drs: jobDrs, timeLimit: timeLimit\r\n                    };\r\n                    this.DayEvents.push(edata);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    constructor(private carrierService: CarrierService, private dispatcherService: DispatcherService, private fb: FormBuilder, private deliveryReqService: DeliveryrequestService,\r\n        private utilService: UtilService, private cdRef: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this.DrForm = this.fb.group({\r\n            DeliveryRequests: this.getDeliveryRequestFormArray([])\r\n        });\r\n        this.MoveToDsbForm = this.fb.group({\r\n            Shift: this.fb.control(null),\r\n            Column: this.fb.control(null),\r\n            Load: this.fb.control(null),\r\n            ScheduleData: this.fb.control(null),\r\n            IsScheduleForToday: this.fb.control(false)\r\n        });\r\n        this.getScheduleQuantityType();\r\n        //filter\r\n        this.getAllCustomers();\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.CustomerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'BuyerCompanyId',\r\n            textField: 'BuyerName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.SingleDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false,\r\n            closeDropDownOnSelection: true\r\n        };\r\n\r\n        this.priorityList = LoadPriorities;\r\n        this.MinDate = new Date(this.MinDate.getFullYear(), this.MinDate.getMonth(), this.MinDate.getDate(), 0, 0, 0);\r\n        this.MaxDate.setFullYear(this.MinDate.getFullYear() + 30);\r\n    }\r\n    view: CalendarView = CalendarView.Month;\r\n    viewDate: Date = new Date();\r\n\r\n    getFutureDrs() {\r\n        this._loadingDrRequests = true;\r\n        this.cdRef.detectChanges();\r\n        this.allDeliveryLocations = [];\r\n        var inputModel = this.getFilterData();\r\n        this.carrierService.getCalendarDeliveryRequests(inputModel).subscribe((drs: DeliveryRequestViewModel[]) => {\r\n            this.allDeliveryLocations = [];\r\n            if (drs != null && drs.length > 0) {\r\n                this.allDeliveryLocations = this.deliveryReqService.groupDrsByJob(drs);\r\n            }\r\n            this.GetEventData();\r\n        })\r\n    }\r\n    public getFilterData(): CalendarFilterModel {\r\n        var inputModel: CalendarFilterModel = new CalendarFilterModel();\r\n        inputModel.Customers = this.SelectedCustomerList.map(t => t.BuyerName);\r\n        inputModel.LocationType = this.locationType;\r\n        inputModel.Locations = this.SelectedlocationList.map(t => t.Id);\r\n        inputModel.Priorities = this.SelectedPriorityList.map(t => t.Id);\r\n        inputModel.Vessels = this.SelectedVesselList.map(t => t.Name);\r\n        inputModel.FromDate = this.FromDate && this.FromDate != \"null\" ? new Date(this.FromDate) : this.period.start;\r\n        inputModel.ToDate = this.ToDate && this.ToDate != \"null\" ? new Date(this.ToDate) : this.period.end;\r\n        if (this.view == CalendarView.Day) {\r\n            inputModel.FromDate = this.period.start;\r\n            inputModel.ToDate = this.period.end;\r\n        }\r\n        return inputModel;\r\n    }\r\n\r\n    bindDeliveryRequests(jobId: number, date) {\r\n        let location = this.allDeliveryLocations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            //var drs = location.DeliveryRequests;\r\n            //if (location.DeliveryRequests.some(x => x.IsBlendedRequest === true)){\r\n            //    drs = groupDrsByBlendGroupId(location.DeliveryRequests);\r\n            //}\r\n            var drs = location.DeliveryRequests.filter(t => new Date(t.SelectedDate).toString() == date.toString());\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(drs)\r\n            });\r\n        }\r\n    }\r\n    bindDayDeliveryRequests(jobId: number, startdate: Date, enddate: Date) {\r\n        let location = this.allDeliveryLocations.find(t => t.JobId == jobId);\r\n        if (location) {\r\n            let startHour = moment(startdate).format(\"h\");\r\n            let startEve = moment(startdate).format(\"A\");\r\n            let endHour = moment(enddate).format(\"h\");\r\n            let endEve = moment(enddate).format(\"A\");\r\n            var drs = location.DeliveryRequests.filter(t =>\r\n                (t.ScheduleStartTime.toString().startsWith(startHour) && t.ScheduleStartTime.toString().indexOf(startEve) > -1)\r\n                && (t.ScheduleEndTime.toString().startsWith(endHour) && t.ScheduleEndTime.toString().indexOf(endEve) > -1)\r\n            );\r\n            this.DrForm = this.fb.group({\r\n                DeliveryRequests: this.getDeliveryRequestFormArray(drs)\r\n            });\r\n        }\r\n    }\r\n\r\n    getDeliveryRequestFormArray(delReqs: DeliveryRequestViewModel[]): FormArray {\r\n        delReqs = sortBy(delReqs, 'ProductType');\r\n        let _drArray = this.fb.array([]);\r\n        delReqs && delReqs.forEach(x => {\r\n            var _form = this.utilService.getDeliveryRequestFormNew(x);\r\n            _drArray.push(_form);\r\n        });\r\n        return _drArray;\r\n    }\r\n\r\n    setNextMonthEvents(date, event) {\r\n        //this.getFutureDrs();\r\n    }\r\n\r\n    setView(view: CalendarView) {\r\n        this.view = view;\r\n    };\r\n\r\n    getTotalBlendQuantity(): number {\r\n        return this.blendRequestsToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0);\r\n    }\r\n    toggleScheduleData() {\r\n        if (this.MoveToDsbForm.get(\"IsScheduleForToday\").value) {\r\n            let todaysDate = moment(new Date()).format('MM/DD/YYYY');\r\n            this.getCalendarLoadData(this.requestToUpdate.CreatedByRegionId, todaysDate);\r\n        } else {\r\n            this.getCalendarLoadData(this.requestToUpdate.CreatedByRegionId, this.requestToUpdate.SelectedDate);\r\n        }\r\n    }\r\n    getScheduleDate() {\r\n        if (this.MoveToDsbForm.get(\"IsScheduleForToday\").value) {\r\n            let todaysDate = moment(new Date()).format('MM/DD/YYYY');\r\n            return todaysDate;\r\n        } else {\r\n            return this.requestToUpdate.SelectedDate;\r\n        }\r\n    }\r\n    MoveToDSB(deliveryReq) {\r\n        this.MoveToDsbForm.get('IsScheduleForToday').patchValue(false);\r\n        this.getCalendarLoadData(deliveryReq.value.CreatedByRegionId, deliveryReq.value.SelectedDate);\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        // temp data need to remove\r\n        if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1; }\r\n\r\n        let element = document.getElementById(\"switchDSBModal\");\r\n        element ? element.click() : null;\r\n    }\r\n    onConfirmMoveToDSB() {\r\n        const selectedShift = this.MoveToDsbForm.get(\"Shift\").value[0].Id;\r\n        const selectedLoad = this.MoveToDsbForm.get(\"Load\").value[0].Id;\r\n        const selectedColumn = this.MoveToDsbForm.get(\"Column\").value[0].Id;\r\n        this._loadingScheduleData = true;\r\n        let drs: DeliveryRequestViewModel[] = [];\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            drs.push(...this.blendRequestsToUpdate);\r\n            if (this.blendAddRequestToUpdate && this.blendAddRequestToUpdate.length > 0) {\r\n                drs.push(...this.blendAddRequestToUpdate);\r\n            }\r\n        } else {\r\n            drs.push(this.requestToUpdate);\r\n        }\r\n        drs.forEach(t => t.IsCalendarView = false);\r\n        let schedule: CalendarScheduleModel = new CalendarScheduleModel();\r\n        schedule.DeliveryRequests = drs;\r\n        schedule.Date = this.getScheduleDate();\r\n        schedule.RegionId = this.requestToUpdate.CreatedByRegionId;\r\n        schedule.ShiftId= selectedShift;\r\n        schedule.DriverRowIndex = selectedColumn;\r\n        schedule.DriverColIndex = selectedLoad;\r\n        this.carrierService.saveDriverView(schedule).subscribe((data) => {\r\n            if (data.StatusCode == 0) {\r\n                Declarations.msgsuccess('Delivery request saved successfully.', undefined, undefined);\r\n            }\r\n            else {\r\n                Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n            }\r\n            this._loadingScheduleData = false;\r\n            let element = document.getElementById(\"modal-cancel\");\r\n            element ? element.click() : null;\r\n            this.refreshCalendar();\r\n        });\r\n    }\r\n    \r\n    LoadDeliveryRequestToUpdate(deliveryReq: any) {\r\n        let allDrs = this.allDeliveryLocations.map(item => item.DeliveryRequests).reduce((a, c) => a.concat(c), []);\r\n        var drToupdate = allDrs.find(t => t.Id == deliveryReq.value.Id);\r\n        this.blendRequestsToUpdate = [];\r\n        this.blendTotalQuantity = 0;\r\n        this.blendAddRequestToUpdate = [];\r\n        this.requestToUpdate = Object.assign({}, drToupdate);\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            var tempBlendDrs = allDrs.filter(t => t.BlendedGroupId == deliveryReq.value.BlendedGroupId);\r\n            this.blendedProducts = tempBlendDrs.map(t => t.ProductType).join(\", \");\r\n            this.blendRequestsToUpdate = tempBlendDrs.filter(t => !t.IsAdditive);\r\n            this.blendAddRequestToUpdate = tempBlendDrs.filter(t => t.IsAdditive);\r\n            this.blendTotalQuantity = this.getTotalBlendQuantity();\r\n        }\r\n    }\r\n    EditDeliveryRequest(deliveryReq: any) {\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        if (this.requestToUpdate.ScheduleQuantityType == 0) { this.requestToUpdate.ScheduleQuantityType = 1; }\r\n        let element = document.getElementById(\"openUpdateDrModal\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    DeleteDeliveryRequest(deliveryReq: any) {\r\n        this.LoadDeliveryRequestToUpdate(deliveryReq);\r\n        this.requestToUpdate.IsDeleted = true;\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            $.each(this.blendRequestsToUpdate, function () { this.IsDeleted = true; });\r\n            if (this.blendAddRequestToUpdate)\r\n                $.each(this.blendAddRequestToUpdate, function () { this.IsDeleted = true; });\r\n        }\r\n        let element = document.getElementById(\"openDeleteDeliveryRequestModal\");\r\n        element ? element.click() : null;\r\n    }\r\n\r\n    IsValidBlendQuantity(): boolean {\r\n        return this.blendRequestsToUpdate.map(t => t.QuantityInPercent).reduce((a, b) => a + b, 0) == 100;\r\n    }\r\n    onDeliveryReqUpdate(status: number) {\r\n        //VALIDATION\r\n        if (status == 1) {\r\n            var tnkRequiredQuantity: number = this.requestToUpdate.RequiredQuantity;\r\n            if (this.requestToUpdate.IsBlendedRequest) {\r\n                tnkRequiredQuantity = this.getTotalBlendQuantity();\r\n                if (this.blendAddRequestToUpdate)\r\n                    tnkRequiredQuantity = (+tnkRequiredQuantity) + (+this.blendAddRequestToUpdate.map(t => t.RequiredQuantity).reduce((a, b) => a + b, 0));\r\n            }\r\n            if (this.requestToUpdate.ScheduleQuantityType == 1 && (!(tnkRequiredQuantity > 0) || tnkRequiredQuantity < 0.00001)) {\r\n                Declarations.msgerror(\"Invalid required quantity.\", undefined, undefined); return;\r\n            }\r\n            else if (this.requestToUpdate.ScheduleQuantityType == 1 && this.requestToUpdate.TankMaxFill && this.requestToUpdate.TankMaxFill > 0 && !this.requestToUpdate.IsMaxFillAllowed) {\r\n                if (tnkRequiredQuantity > this.requestToUpdate.TankMaxFill) {\r\n                    Declarations.msgerror(\"Should not exceed max fill. (\" + this.requestToUpdate.TankMaxFill + \")\", undefined, undefined); return;\r\n                }\r\n            }\r\n        }\r\n        this._loadingDrRequests = true;\r\n        jQuery('#closeEditDrPanel').click();\r\n        if (this.requestToUpdate.ScheduleQuantityType > 1) { this.requestToUpdate.RequiredQuantity = 0; }\r\n        let updateRequests = [this.requestToUpdate];\r\n        if (this.requestToUpdate.IsBlendedRequest) {\r\n            if (status == 1) {\r\n                let drNotes = this.requestToUpdate.Notes;\r\n                let drPriority = this.requestToUpdate.Priority;\r\n                let drSelectedDate = this.requestToUpdate.SelectedDate;\r\n                let drScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\r\n                let drScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\r\n                let deliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\r\n                $.each(this.blendRequestsToUpdate, function () {\r\n                    this.Notes = drNotes; this.Priority = drPriority;\r\n                    this.SelectedDate = drSelectedDate;\r\n                    this.ScheduleStartTime = drScheduleStartTime;\r\n                    this.ScheduleEndTime = drScheduleEndTime;\r\n                    this.DeliveryLevelPO = deliveryLevelPO;\r\n                });\r\n            }\r\n            updateRequests = this.blendRequestsToUpdate;\r\n            if (this.blendAddRequestToUpdate) {\r\n                this.blendAddRequestToUpdate.forEach(t => {\r\n                    t.Notes = this.requestToUpdate.Notes; t.Priority = this.requestToUpdate.Priority;\r\n                    t.SelectedDate = this.requestToUpdate.SelectedDate;\r\n                    t.ScheduleStartTime = this.requestToUpdate.ScheduleStartTime;\r\n                    t.ScheduleEndTime = this.requestToUpdate.ScheduleEndTime;\r\n                    t.DeliveryLevelPO = this.requestToUpdate.DeliveryLevelPO;\r\n                    if (t.RequiredQuantity > 0 || t.ScheduleQuantityType != 1)\r\n                        updateRequests.push(t);\r\n                })\r\n            }\r\n        }\r\n        this.carrierService.updateDeliveryRequest(updateRequests)\r\n            .subscribe((data: any) => {\r\n                if (data.StatusCode == 0) {\r\n                    Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\r\n                    /*this.refreshDeliveryRequests(status);*/\r\n\r\n                }\r\n                else if (data.StatusCode == 2) {\r\n                    Declarations.msgwarning(data.StatusMessage, undefined, undefined);\r\n                    /*this.refreshDeliveryRequests(status);*/\r\n                }\r\n                else {\r\n                    Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\r\n                }\r\n                this.refreshCalendar();\r\n            });\r\n    }\r\n\r\n    refreshCalendar() {\r\n        this.getFutureDrs();\r\n    }\r\n\r\n    toggleBlendQuantity(req: DeliveryRequestViewModel, isPercent: boolean) {\r\n        if (isPercent) {\r\n            req.RequiredQuantity = (this.blendTotalQuantity * req.QuantityInPercent) / 100;\r\n        } else {\r\n            req.QuantityInPercent = (req.RequiredQuantity / this.blendTotalQuantity) * 100;\r\n        }\r\n    }\r\n    toggleBlendTotalQuantity() {\r\n        this.blendRequestsToUpdate.forEach(t => {\r\n            this.toggleBlendQuantity(t, true);\r\n        });\r\n    }\r\n    getAllCustomers() {\r\n        this.carrierService.getFilterDataForDsbCalenderView().subscribe((data) => {\r\n            if (data != null) {\r\n                this.customerList = data.CustomerList;\r\n                this.vesselList = data.Vessels;\r\n                this.allLocationList = data.Locations;\r\n                this.allVesselList = data.Vessels;\r\n                this.locationList = this.allLocationList.filter(x => this.locationType == x.IsTrue);\r\n            }\r\n        });\r\n    }\r\n\r\n    public toggleLocationType(isPort) {\r\n        this.locationList = this.allLocationList.filter(x => isPort == x.IsTrue);\r\n    }\r\n\r\n    public ResetFilters() {\r\n        this.SelectedCustomerList = [];\r\n        this.SelectedlocationList = [];\r\n        this.SelectedPriorityList = [];\r\n        this.SelectedVesselList = [];\r\n        this.locationType = false;\r\n        this.FromDate = '';\r\n        this.ToDate = '';\r\n        this.isValidDate = true;\r\n        this.ApplyFilters(\"reset\");\r\n        this.toggleLocationType(false);\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        this.count = 0;\r\n        var Customerids = [];\r\n        this.SelectedCustomerList.forEach(res => {\r\n            this.count++;\r\n            Customerids.push(res.CompanyId)\r\n        });\r\n        var Locationids = [];\r\n        this.SelectedlocationList.forEach(res => {\r\n            this.count++;\r\n            Locationids.push(res.Id)\r\n        });\r\n        var vesselsids = [];\r\n        this.SelectedVesselList.forEach(res => {\r\n            this.count++;\r\n            vesselsids.push(res.Id)\r\n        });\r\n        var Prioritiesids = [];\r\n        this.SelectedPriorityList.forEach(res => {\r\n            this.count++;\r\n            Prioritiesids.push(res.Id)\r\n        });\r\n        if ((this.FromDate && this.FromDate != 'null') || (this.ToDate && this.ToDate != 'null')) {\r\n            this.count++;\r\n        }\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n        this.setFilterValues();\r\n        this.getFutureDrs();\r\n    }\r\n\r\n    public onCustomerChanged() {\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.locationList = this.allLocationList.filter(t => this.SelectedCustomerList.some(c => c.BuyerCompanyId == t.CodeId) && t.IsTrue == this.locationType);\r\n            if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n                this.SelectedlocationList = this.SelectedlocationList.filter(t => this.locationList.some(el => el.Id == t.Id));\r\n                this.onLocationChange();\r\n            }\r\n        }\r\n        else {\r\n            this.locationList = this.allLocationList.filter(x => this.locationType == x.IsTrue);\r\n        }\r\n    }\r\n    public onLocationChange() {\r\n        if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n            this.vesselList = this.allVesselList.filter(t => this.SelectedlocationList.some(c => c.Id == t.CodeId));\r\n            if (this.SelectedVesselList && this.SelectedVesselList.length > 0) {\r\n                this.SelectedVesselList = this.vesselList.filter(x => this.SelectedVesselList.some(t => t.Id == x.Id));\r\n            }\r\n        }\r\n        else {\r\n            this.vesselList = this.allVesselList;\r\n        }\r\n    }\r\n    public setFilterValues() {\r\n        localStorage.setItem(\"calenderCustomers\", JSON.stringify(this.SelectedCustomerList));\r\n        localStorage.setItem(\"calenderLocations\", JSON.stringify(this.SelectedlocationList));\r\n        localStorage.setItem(\"calenderVessels\", JSON.stringify(this.SelectedVesselList));\r\n        localStorage.setItem(\"calenderPriority\", JSON.stringify(this.SelectedPriorityList));\r\n        localStorage.setItem(\"calenderFromDate\", this.FromDate);\r\n        localStorage.setItem(\"calenderToDate\", this.ToDate);\r\n    }\r\n    public validateDate(date: any, fromDate: boolean) {\r\n        if (date != '' && this.ToDate != '' && fromDate) {\r\n            this.isValidDate = this.ToDate >= date;\r\n            this.validateDateMessage(this.isValidDate);\r\n            \r\n        }\r\n        else if (date != '' && this.FromDate != '' && !fromDate) {\r\n            this.isValidDate = date >= this.FromDate\r\n            this.validateDateMessage(this.isValidDate);\r\n        }\r\n    }\r\n    public validateDateMessage(validDate: boolean) {\r\n        if (!validDate) {\r\n            Declarations.msgerror(\"Select valid filter dates\", undefined, undefined);\r\n        }\r\n    }\r\n    getScheduleQuantityType() {\r\n        if (this.ScheduleQuantityTypes.length == 0) {\r\n            this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\r\n                this.ScheduleQuantityTypes = SQT || [];\r\n            });\r\n        }\r\n    }\r\n}","\r\n<ng-template #filterPopContent>\r\n    <div class=\"form-check form-check-inline\">\r\n        <input class=\"form-check-input\" name=\"locationType\" [(ngModel)]=\"locationType\" (click)=\"toggleLocationType(false)\"\r\n               id=\"radio-location\" type=\"radio\" [value]=\"false\">\r\n        <label class=\"form-check-label\" for=\"radio-location\">Land</label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline mr-3 mt-2\">\r\n        <input class=\"form-check-input\" name=\"locationType\" [(ngModel)]=\"locationType\" (click)=\"toggleLocationType(true)\"\r\n               id=\"radio-port\" type=\"radio\" [value]=\"true\">\r\n        <label class=\"form-check-label\" for=\"radio-port\">Marine</label>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt-3\">\r\n        <div class=\"col-6 pr-0\">\r\n\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Customer</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" [settings]=\"CustomerDdlSettings\"\r\n                                         [placeholder]=\"'Select Customer'\" [data]=\"customerList\"\r\n                                         (onSelect)=\"onCustomerChanged()\" (onDeSelect)=\"onCustomerChanged()\">\r\n\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\" *ngIf=\"locationType\">Port</label>\r\n                <label class=\"font-bold\" *ngIf=\"!locationType\">Location</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\" [settings]=\"multiselectSettingsById\"\r\n                                         [placeholder]=\"locationType ? 'Select Port' : 'Select Location'\" [data]=\"locationList\"\r\n                                         (onSelect)=\"onLocationChange()\" (onDeSelect)=\"onLocationChange()\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt10\">\r\n        <div class=\"col-6 pr-0\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Priority</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Select Priority'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"priorityList\" #selectedPriority>\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6 mt-2\" *ngIf=\"locationType\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold\">Vessel</label>\r\n                <ng-multiselect-dropdown [(ngModel)]=\"SelectedVesselList\" [placeholder]=\"'Select Vessel'\"\r\n                                         [settings]=\"multiselectSettingsById\" [data]=\"vesselList\">\r\n                </ng-multiselect-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row border-bottom-2 mt10\">\r\n        <div class=\"col-6 pr-0\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold mr-3\">From</label>\r\n                <input name=\"date\" [(ngModel)]=\"FromDate\" type=\"date\" class=\"form-control datepicker ng-pristine ng-valid ng-touched\" (change)=\"validateDate(FromDate,isFromDate)\" required>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"font-bold mr-3\">To</label>\r\n                <input name=\"date\" [(ngModel)]=\"ToDate\" type=\"date\" class=\"form-control datepicker ng-pristine ng-valid ng-touched\" (change)=\"validateDate(ToDate,!isFromDate)\" required>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row mt10\">\r\n        <div class=\"col-12 text-right\">\r\n            <button type=\"button\" (click)=\"ResetFilters(); p.close();\" class=\"btn btn-default\">\r\n                Reset\r\n            </button>\r\n            <button type=\"button\" [disabled]=\"!isValidDate\" (click)=\"ApplyFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                Save\r\n            </button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"well bg-white shadowb-b\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"row ibox-content no-padding no-border\">\r\n                    <div class=\"col-md-4 text-left\">\r\n                        <div>\r\n                            <div class=\"btn btn-default btn-xs\" mwlCalendarPreviousView [view]=\"view\"\r\n                                 [(viewDate)]=\"viewDate\"\r\n                                 (click)=\"setNextMonthEvents(viewDate,'Previous')\">\r\n                                <i class=\"fas fa-arrow-left\"></i>\r\n                            </div>\r\n                            <div class=\"btn\tbtn-default btn-xs\" id=\"idToday\" mwlCalendarToday\r\n                                 [(viewDate)]=\"viewDate\" (click)=\"setNextMonthEvents(viewDate,'Today')\">\r\n                                Today\r\n                            </div>\r\n                            <div class=\"btn\tbtn-default btn-xs\" mwlCalendarNextView [view]=\"view\"\r\n                                 [(viewDate)]=\"viewDate\"\r\n                                 (click)=\"setNextMonthEvents(viewDate,'Next')\">\r\n                                <i class=\"fas fa-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 text-center\">\r\n                        <h3 class=\"mt5\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\r\n                    </div>\r\n                    <div class=\"col-2 pl0 text-right pt8 pr-0\">\r\n                        <a class=\"fs14 mr10\" [ngbPopover]=\"filterPopContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n                           popoverClass=\"master-filter popoverWidth-500 pb-2\"><i class=\"fas fa-filter pr-0\"><span class=\"circle-badge\" *ngIf=\"count > 0\">{{count}}</span></i> Filters</a>\r\n                    </div>\r\n                    <div class=\"col-md-2 text-left pl-0\">\r\n                        <div class=\"view-btn\">\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\" id=\"idMonth\">Month</a>\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Week)\" [class.active]=\"view === CalendarView.Week\" id=\"idWeek\">Week</a>\r\n                            <a class=\"btn btn-outline-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\" id=\"idDay\">Day</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div [ngSwitch]=\"view\">\r\n                    <div *ngIf=\"_loadingDrRequests\" class=\"pa bg-white z-index10 loading-wrapper\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                             [events]=\"Events\" [cellTemplate]=\"customCellTemplate\" [refresh]=\"refresh\">\r\n                    </mwl-calendar-month-view>\r\n                    <mwl-calendar-week-view class=\"my-week-view\" *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [hourSegments]=\"0\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                            [events]=\"Events\" [refresh]=\"refresh\" [eventTemplate]=\"customEventTemplate\">\r\n                    </mwl-calendar-week-view>\r\n                    <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"DayEvents\" (beforeViewRender)=\"beforeViewRender($event)\"\r\n                                           [refresh]=\"refresh\" [eventTemplate]=\"customDayEventTemplate\">\r\n                    </mwl-calendar-day-view>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<ng-template #customEventTemplate let-day=\"weekEvent\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <div class=\"label calender-grid mnth-events\">\r\n            <span [ngStyle]=\"{'background-color': day.event.color.primary}\" style=\"color:black\">\r\n                <a class=\"row py-2\" (click)=\"bindDeliveryRequests(day.event.JobId, day.event.start)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                    <strong class=\"text-dark col-10\">{{day.event.title }} </strong><i class=\"fas fa-arrow-right col-1 mt-2\"></i>\r\n                </a>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #customDayEventTemplate let-day=\"weekEvent\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <table class=\"table table-hover\">\r\n            <tr *ngFor=\"let item of day.event.drs; let i = index;\">\r\n                <td *ngIf=\"i < day.event.timeLimit\" style=\"color: black\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" class=\"label calender-grid mnth-events\">\r\n                    <!---->\r\n                    <span>\r\n                        <a class=\"row py\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" style=\"color:black;border-radius:10px\" id=\"d-dr-{{i}}\" (click)=\"bindDayDeliveryRequests(item.JobId,day.event.start, day.event.end)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                            <div class=\"col-sm-12\">\r\n                                <strong class=\"font-weight-bold text-dark float-left\">{{item.CustomerCompany + \" - \" + item.JobName }} </strong> <i class=\"fas fa-arrow-right float-right\"></i>\r\n                            </div>\r\n                            <!--<div class=\"col-1 align-self-center\">\r\n                                <i class=\"fas fa-arrow-right float-right\"></i>\r\n                            </div>-->\r\n                        </a>\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n        <div *ngIf=\"day.event.drs.length > day.event.timeLimit\">\r\n            <a class=\"col-sm-11\" type=\"button\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"top\" data-content=\"Top popover\" (click)=\"SelectedDayEvent=day.event\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"dayViewMoreContent\" container=\"body\" popoverClass=\"dr-popover view-more-popover-day\">View more <i class=\"ml-2 fas fa-chevron-circle-down\"></i></a>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #customCellTemplate let-day=\"day\" let-locale=\"locale\">\r\n    <div class=\"cal-cell-top\">\r\n        <div>\r\n            <table class=\"table table-hover\">\r\n                <tr *ngFor=\"let item of day.events let i = index;\">\r\n                    <td [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                        class=\"label  calender-grid mnth-events\" *ngIf=\"i<3\">\r\n                        <span>\r\n                            <a class=\"row\" id=\"dr-{{i}}\" (click)=\"bindDeliveryRequests(item.JobId,day.date)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                                <strong class=\"font-weight-bold text-dark float-left col-sm-10\">{{item.title }} </strong><i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                            </a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <div>\r\n                <a class=\"col-sm-11\" type=\"button\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"top\" data-content=\"Top popover\" *ngIf=\"day.events.length>3\" (click)=\"SelectedDay=day\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"requestPopContent\" container=\"body\" popoverClass=\"dr-popover view-more-popover-month\">View more <i class=\"ml-2 fas fa-chevron-circle-down\"></i></a>\r\n                <span class=\"col-sm-1 cal-day-number mt-0\"><strong class=\"ml-1\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</strong> </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-template #requestPopContent>\r\n    <table class=\"table table-hover\">\r\n        <tr *ngFor=\"let item of SelectedDay.events ; let i = index;\">\r\n            <td *ngIf=\"i>=3\" [ngStyle]=\"{'background-color': item.color.primary}\" style=\"color:black\"\r\n                class=\"label  calender-grid mnth-events\">\r\n                <span>\r\n                    <a class=\"row\" id=\"dr-{{i}}\" (click)=\"bindDeliveryRequests(item.JobId,SelectedDay.date)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                        <strong class=\"small font-weight-bold text-dark float-left col-sm-10\">{{item.title }} </strong> <i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                    </a>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n\r\n    </table>\r\n</ng-template>\r\n<ng-template #dayViewMoreContent>\r\n    <table class=\"table table-hover\">\r\n        <tr *ngFor=\"let item of SelectedDayEvent.drs; let i = index;\">\r\n            <td *ngIf=\"i >= SelectedDayEvent.timeLimit\" [ngStyle]=\"{'background-color': colors[item.Priority].primary }\" style=\"color:black\" class=\"label  calender-grid mnth-events\">\r\n                <!---->\r\n                <span>\r\n                    <a class=\"row\" id=\"d-dr-{{i}}\" (click)=\"bindDayDeliveryRequests(item.JobId,SelectedDayEvent.start, SelectedDayEvent.end)\" type=\"button\" [autoClose]=\"'outside'\" placement=\"bottom\" [ngbPopover]=\"popContent\" container=\"body\" popoverClass=\"dr-popover\">\r\n                        <strong class=\"small font-weight-bold text-dark float-left col-sm-10\">{{item.CustomerCompany + \" - \" + item.JobName }} </strong><i class=\"fas fa-arrow-right float-right col-sm-1 mt-2\"></i>\r\n                    </a>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</ng-template>\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row\">\r\n            <ng-container *ngFor=\"let dr of DrForm.controls['DeliveryRequests']['controls']; let i = index;\">\r\n                <div *ngIf=\"dr.controls['IsBlendedRequest'].value==false || dr.controls['IsBlendedDrParent'].value==true\" class=\"col-12 product-details\" [ngClass]=\"{'mustgo-status': (dr.controls['Priority'].value==1) , 'shouldgo-status': (dr.controls['Priority'].value==2) ,'couldgo-status': (dr.controls['Priority'].value==3)}\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                            <div class=\"product-name\">\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value === true\">{{dr.controls['AdditiveProductName'].value}} {{dr.controls['BlendedProductName'].value}}</span>\r\n                                <span *ngIf=\"dr.controls['IsBlendedRequest'].value != true\">{{dr.controls['ProductType'].value}}</span>\r\n                            </div>\r\n                            <div class=\"product-sub-text\">\r\n                                <p class=\"deliverywindow fs10\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['DeliveryDateStartTime'].value}}</p>\r\n                                <p class=\"recurring_dr\" *ngIf=\"dr.controls['IsMarine'].value==true\">{{dr.controls['Vessel'].value}}-{{dr.controls['Berth'].value}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==false\">{{dr.controls['RequiredQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['TotalBlendedQuantity'].value > 0 && dr.controls['IsBlendedRequest'].value==true\">{{dr.controls['TotalBlendedQuantity'].value | number:'1.0-2'}}{{dr.controls['UoM'].value == 1 ? 'G' : 'L'}}</span>\r\n                            <span class=\"product-qty\" *ngIf=\"dr.controls['RequiredQuantity'].value == 0\">{{dr.controls['ScheduleQuantityTypeText'].value}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\" style=\"font-size:11px;\">\r\n                            <label *ngIf=\"dr.controls['ScheduleStartTime'].value && dr.controls['ScheduleEndTime'].value\">\r\n                                {{dr.controls['ScheduleStartTime'].value}} - {{ dr.controls['ScheduleEndTime'].value}}\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"icon-tray col-md-6 pull-right\">\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Edit\">\r\n                                <a (click)=\"EditDeliveryRequest(dr)\"><i class=\"fa fa-edit fs13\"></i></a>\r\n                            </div>\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Delete\">\r\n                                <a (click)=\"DeleteDeliveryRequest(dr)\"><i class=\"fas fa-trash-alt fs13\"></i></a>\r\n                            </div>\r\n                            <div class=\"circle-icon\" placement=\"bottom\" container=\"body\" ngbTooltip=\"Move Load to DSB\">\r\n                                <a (click)=\"MoveToDSB(dr)\"><i class=\"fas fa-hand-point-right fs13\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"dr.controls['IsBlendedRequest']?.value\">\r\n                        <span class=\"fs12 pull-right font-weight-bold\">Blend</span>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"switchDSBModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#switchToDSBModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"switchToDSBModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div *ngIf=\"_loadingScheduleData\" class=\"pa bg-white z-index10 loading-wrapper\">\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <form novalidate>\r\n                    <div [formGroup]=\"MoveToDsbForm\" class=\"form-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-6\">\r\n                                <h2 class=\"fs18 f-bold mt0\">Move Load to DSB?</h2>\r\n                            </div>\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"pull-right form-check form-check-inline\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"IsScheduleForToday\" id=\"chk-IsScheduleForToday\" (change)=\"toggleScheduleData()\">\r\n                                    <label class=\"form-check-label\" for=\"chk-IsScheduleForToday\">Schedule for current date</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt-3\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Shift</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"shifts\"\r\n                                                             formControlName=\"Shift\"\r\n                                                             (onSelect)=\"onShiftSelect($event)\"\r\n                                                             (onDeSelect)=\"onShiftDeSelect()\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Column</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"columns\"\r\n                                                             formControlName=\"Column\"\r\n                                                             (onSelect)=\"onColumnSelect($event)\"\r\n                                                             (onDeSelect)=\"onColumnDeSelect()\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Load</span>\r\n                                    </label>\r\n                                    <ng-multiselect-dropdown class=\"single-select\"\r\n                                                             [settings]=\"SingleDdlSettings\"\r\n                                                             [data]=\"loads\"\r\n                                                             formControlName=\"Load\">\r\n                                    </ng-multiselect-dropdown>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <button id=\"modal-cancel\" type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onConfirmMoveToDSB()\" class=\"btn btn-primary btn-lg\">Confirm</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div id=\"openDeleteDeliveryRequestModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#deleteDeliveryRequestModal\" data-backdrop=\"static\"></div>\r\n<div class=\"modal fade\" id=\"deleteDeliveryRequestModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #deleteDRform=\"ngForm\" novalidate>\r\n                    <h2 class=\"fs18 f-bold mt0\">Delete Delivery Request?</h2>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"mt10 fs14 f-normal\">{{requestToUpdate?.ProductType}}</div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"mt8 fs14 f-normal dib mr5\">Required Quantity </div>\r\n                                <div *ngIf=\"requestToUpdate.ScheduleQuantityType>1; else quantity\">\r\n                                    <div class=\"mt5 fs10\">{{requestToUpdate?.ScheduleQuantityTypeText}}</div>\r\n                                </div>\r\n                                <ng-template #quantity>\r\n                                    <span *ngIf=\"requestToUpdate?.UoM==1; else litres\">(G)</span>\r\n                                    <ng-template #litres>(L)</ng-template>\r\n                                    <div>{{requestToUpdate?.IsBlendedRequest ? requestToUpdate?.TotalBlendedQuantity: requestToUpdate?.RequiredQuantity}}</div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"submit\" (click)=\"onDeliveryReqUpdate(2)\" class=\"btn btn-primary btn-lg\" data-dismiss=\"modal\">Delete</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"openUpdateDrModal\" hidden=\"hidden\" data-toggle=\"modal\" data-target=\"#updateDeliveryRequestModal\"></div>\r\n<div id=\"updateDeliveryRequestModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <form #form=\"ngForm\" novalidate>\r\n                    <div class=\"overflow-h\">\r\n                        <h4 class=\"pull-left mb5 pt0 pb0\">Update Delivery Request</h4>\r\n                        <button type=\"button\" class=\"close color-grey pull-right pa\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"fa fa-close fs21\"></i></button>\r\n                    </div>\r\n                    <!-- #blended Dr to update -->\r\n                    <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularDRToUpdate\">\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal\">{{blendedProducts}} Tank, Location: {{blendRequestsToUpdate[0]?.JobName}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\" class=\"mr5\">\r\n                                        <span>Total Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"blendTotalQuantity\" [(ngModel)]=\"blendTotalQuantity\" (input)=\"toggleBlendTotalQuantity()\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngFor=\"let blendUpdateRequest of blendRequestsToUpdate; index as j\" [ngModelGroup]=\"j\">\r\n                            <div class=\"row mt5\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div>{{blendUpdateRequest.ProductType}} - {{blendUpdateRequest.FuelType}}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"text\" numberWithDecimal class=\"form-control\" (input)=\"toggleBlendQuantity(blendUpdateRequest,false)\" name=\"RequiredQuantity\" [(ngModel)]=\"blendUpdateRequest.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                            <div class=\"input-group-addon\">\r\n                                                <span *ngIf=\"blendUpdateRequest?.UoM==1; else litres\">G</span>\r\n                                                <ng-template #litres>L</ng-template>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group mb0\">\r\n                                        <div class=\"input-group\">\r\n                                            <input type=\"number\" name=\"QuantityInPercent\" [(ngModel)]=\"blendUpdateRequest.QuantityInPercent\" #QuantityInPercent=\"ngModel\"\r\n                                                   numberWithDecimal class=\"form-control\"\r\n                                                   placeholder=\"Quantity In Percent\" (input)=\"toggleBlendQuantity(blendUpdateRequest,true)\" />\r\n                                            <div class=\"input-group-addon\">%</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- additive fuel -->\r\n                        <div *ngIf=\"blendAddRequestToUpdate\">\r\n                            <div *ngFor=\"let additiveReq of blendAddRequestToUpdate; index as k\" [ngModelGroup]=\"k\">\r\n                                <div class=\"row mt5\">\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div>{{additiveReq.ProductType}} - {{additiveReq.FuelType}}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" class=\"form-control\" name=\"AdRequiredQuantity\" numberWithDecimal [(ngModel)]=\"additiveReq.RequiredQuantity\" #AdRequiredQuantity=\"ngModel\" required>\r\n                                                <div class=\"input-group-addon\">\r\n                                                    <span *ngIf=\"additiveReq?.UoM==1; else litres\">G</span>\r\n                                                    <ng-template #litres>L</ng-template>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"name\" class=\"mr5\">\r\n                                                <span>Delivery Level PO#</span>\r\n                                            </label>\r\n                                            <input type=\"text\" class=\"form-control\"  name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- #blended Dr to update end-->\r\n                    <!-- #Regular Dr to update -->\r\n                    <ng-template #regularDRToUpdate>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-12\">\r\n                                <div class=\"fs14 f-normal text-muted\">{{requestToUpdate?.ProductType}} Tank, Location: {{requestToUpdate?.JobName}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mt5\">\r\n                            <div class=\"col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"ScheduleQuantityType\">\r\n                                        <span>Quantity Type</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" [(ngModel)]=\"requestToUpdate.ScheduleQuantityType\" name=\"ScheduleQuantityType\" #ScheduleQuantityType=\"ngModel\">\r\n                                        <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                            {{sqType.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-6\" *ngIf=\"requestToUpdate.ScheduleQuantityType==1 || requestToUpdate.ScheduleQuantityType==0\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">\r\n                                        <span>Required Quantity</span>\r\n                                        <span *ngIf=\"requestToUpdate?.UoM==1; else litres\"> (G)</span>\r\n                                        <ng-template #litres> (L)</ng-template>\r\n                                    </label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"RequiredQuantity\" [(ngModel)]=\"requestToUpdate.RequiredQuantity\" #RequiredQuantity=\"ngModel\" required>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <!-- #Regular Dr to update end-->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Schedule Date</span>\r\n                                </label>\r\n                                <input type=\"text\" placeholder=\"Select Date\" class=\"form-control datepicker\" name=\"SelectedDate\" myDatePicker [format]=\"'MM/DD/YYYY'\" [minDate]=\"MinDate\" [maxDate]=\"MaxDate\" [(ngModel)]=\"requestToUpdate.SelectedDate\" #SelectedDate=\"ngModel\" (onDateChange)=\"requestToUpdate.SelectedDate = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">Start Time</label>\r\n                                <input type=\"text\" placeholder=\"Start Time\" name=\"ScheduleStartTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleStartTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleStartTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <div class=\"form-group mb0\">\r\n                                <label class=\"form-check-label\">End Time</label>\r\n                                <input type=\"text\" placeholder=\"End Time\" name=\"ScheduleEndTime\" class=\"form-control\" [disableControl]=\"requestToUpdate.SelectedDate == null\" myTimePicker [format]=\"'hh:mm A'\" [(ngModel)]=\"requestToUpdate.ScheduleEndTime\" #ScheduleStartTime=\"ngModel\" (onTimeChange)=\"requestToUpdate.ScheduleEndTime = ($event)\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"name\" class=\"form-check-label\">\r\n                                    <span>Delivery-Level PO#</span>\r\n                                </label>\r\n                                <input type=\"text\"  class=\"form-control\" name=\"DeliveryLevelPO\" [(ngModel)]=\"requestToUpdate.DeliveryLevelPO\" #DeliveryLevelPO=\"ngModel\">\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"1\" name=\"Priority\" id=\"mustgo\">\r\n                                <label class=\"form-check-label\" for=\"mustgo\"> Must Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"2\" name=\"Priority\" id=\"shouldgo\">\r\n                                <label class=\"form-check-label\" for=\"shouldgo\">Should Go</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input class=\"form-check-input\" type=\"radio\" [(ngModel)]=\"requestToUpdate.Priority\" [value]=\"3\" name=\"Priority\" id=\"couldgo\">\r\n                                <label class=\"form-check-label\" for=\"couldgo\">Could Go</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <div class=\"form-group mt10\">\r\n                                <textarea name=\"Notes\" [(ngModel)]=\"requestToUpdate.Notes\" class=\"form-control add-note-tarea\" placeholder=\"Note (optional)\" rows=\"2\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"text-right \">\r\n                        <div *ngIf=\"requestToUpdate.IsBlendedRequest; else regularUpdate\">\r\n                            <div *ngIf=\"blendTotalQuantity > 0 && !IsValidBlendQuantity()\" class=\"color-maroon mb15\">Sum of entered quantity should match with {{blendTotalQuantity}}.</div>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button [disabled]=\"!IsValidBlendQuantity()\" type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </div>\r\n                        <ng-template #regularUpdate>\r\n                            <button type=\"button\" class=\"btn btn-lg\" data-dismiss=\"modal\" id=\"closeEditDrPanel\">Cancel</button>\r\n                            <button type=\"submit\" (click)=\"onDeliveryReqUpdate(1)\" class=\"btn btn-primary btn-lg\">Update</button>\r\n                        </ng-template>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class CalendarFilterModel {\r\n    constructor() {\r\n        this.Customers = [];\r\n        this.Locations = [];\r\n        this.Vessels = [];\r\n        this.Priorities = [];\r\n        this.FromDate = new Date();\r\n        this.ToDate = new Date();\r\n    }\r\n    public Customers: any[];\r\n    public Locations: any[];\r\n    public Vessels: any[];\r\n    public LocationType: boolean;\r\n    public Priorities: any[];\r\n    public FromDate: Date;\r\n    public ToDate: Date;\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public Indexes: IndexModel[];\r\n}\r\n\r\nexport class IndexModel {\r\n    public LoadIndex: number;\r\n    public ColumnIndex: number;\r\n    public LoadTime: string;\r\n    public Driver: string;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DsbCalendarComponent } from './dsb-calendar/dsb-calendar.component';\nimport { RouterModule, Routes } from '@angular/router';\r\n/*import { FullCalendarModule } from '@fullcalendar/angular'; // must go before plugins*/\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { NgDragDropModule } from 'ng-drag-drop';\r\n\n//FullCalendarModule.registerPlugins([\r\n//    dayGridPlugin,\r\n//    interactionPlugin\r\n//]);\n\nconst cal_route: Routes = [\n    {\n        path: '',\n        component: DsbCalendarComponent\n    }, {\n        path: 'Index',\n        component: DsbCalendarComponent\n    }];\n\n\n@NgModule({\n    declarations: [DsbCalendarComponent],\n  imports: [\n      CommonModule,\r\n      SharedModule,\r\n      DirectiveModule,\r\n      NgDragDropModule.forRoot(),\r\n      RouterModule.forChild(cal_route),\n      FlatpickrModule.forRoot(),\n      CalendarModule.forRoot({\r\n          provide: DateAdapter,\r\n          useFactory: adapterFactory,\r\n      }),\n  ]\n})\nexport class TfcalendarModule { }\n"],"sourceRoot":"webpack:///"}