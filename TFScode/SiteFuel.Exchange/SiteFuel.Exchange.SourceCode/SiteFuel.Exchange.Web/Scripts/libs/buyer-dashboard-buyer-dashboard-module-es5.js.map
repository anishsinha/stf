{"version":3,"sources":["webpack:///src/app/buyer-dashboard/Model/DashboardModel.ts","webpack:///src/app/buyer-dashboard/buyer-dashboard.module.ts","webpack:///src/app/buyer-dashboard/dashboard.service.ts","webpack:///src/app/buyer-dashboard/delivery/delivery.component.ts","webpack:///src/app/buyer-dashboard/delivery/delivery.component.html","webpack:///src/app/buyer-dashboard/home/home.component.ts","webpack:///src/app/buyer-dashboard/home/home.component.html","webpack:///src/app/buyer-dashboard/inventory/inventory.component.ts","webpack:///src/app/buyer-dashboard/inventory/inventory.component.html","webpack:///src/app/buyer-dashboard/invoice/invoice.component.ts","webpack:///src/app/buyer-dashboard/invoice/invoice.component.html","webpack:///src/app/buyer-dashboard/loads-map/loads-map.component.ts","webpack:///src/app/buyer-dashboard/loads-map/loads-map.component.html","webpack:///src/app/buyer-dashboard/location-map/location-map.component.ts","webpack:///src/app/buyer-dashboard/location-map/location-map.component.html","webpack:///src/app/buyer-dashboard/map-view/map-view.component.ts","webpack:///src/app/buyer-dashboard/map-view/map-view.component.html","webpack:///src/app/buyer-dashboard/message/message.component.ts","webpack:///src/app/buyer-dashboard/message/message.component.html"],"names":["JobBuyerDashboardViewModel","JobDRDetailsModel","BuyerLoadsForDashboardInputModel","InventoryForDashboardInputModel","BuyerLoadsForDashboardViewModel","InvoiceGridBuyerDashboardInputModel","InvoiceGridBuyerDashboardModel","DashboardTileViewModel","route","path","component","BuyerDashboardModule","forChild","declarations","imports","DashboardService","httpClient","getJobDetailsForBuyerDashboardUrl","GetBuyerLoadsForDashboard","GetLocationInventoryURl","GetInvoiceGridForBuyerDashboardURL","GetNewBuyerDashboardTileSettingsURL","SaveDBTileSettingsURL","GetMessagesForBuyerDashboardURL","countryId","pipe","get","handleError","input","post","CountryId","pageId","isMultipleTilesUpdated","settingsModel","providedIn","DeliveryComponent","dashbpardSer","router","dtOptions","dtTrigger","IsLoading","deliveries","type","cloneDeliveries","activePriorityTab","MustGo","DeliveryReqPriority","toDate","format","minDate","Date","setMonth","getMonth","maxDate","currentCompanyId","initializeGrid","changes","SelectedCountryId","currentValue","getDeliveries","exportInvitedColumns","columns","paging","bSort","bInfo","searching","pagingType","pageLength","lengthMenu","setDate","getDate","datatableElement","dtInstance","then","destroy","FromDate","ToDate","subscribe","data","FilterDate","priority","filter","f","Priority","next","navigate","result","window","open","event","initializeDate","setFromDate","changeActiveTab","selector","templateUrl","styleUrls","HomeComponent","carrierService","_dashboardSer","isShowCountryDDL","CountryList","tiles","DashboardTileViewModelList","getCountries","getTiles","GetNewBuyerDashboardTileSettings","pageID","PageId","TileDetails","initializeTiles","GetCountries","currentUserCompanyId","ServingCountries","length","isNaN","localStorage","getItem","Number","DefaultCountryId","setItem","target","value","toString","SaveDBTileSettings","StatusCode","msgsuccess","StatusMessage","undefined","msgerror","IsDelivery","find","TileDisplayName","IsClosed","IsInventory","IsInvoice","IsMessage","ApplySettings","encapsulation","None","Tiles","InventoryComponent","inventories","cloneInventories","MinStartDate","MaxStartDate","GetLocationInventory","InvoiceComponent","Invoices","temp_string","activeInvoiceDDTTab","getInvoices","InvoiceTypeId","CurrencyTypeId","GetInvoices","LoadsMapComponent","dispatcherService","toogleMap","previousInfowindow","previousInfowindowIndex","zoomLevel","centerLoactionLat","centerLoactionLng","MaxInputDate","add","TodaysDate","AUTO_REFRESH_TIME","autoRefreshTicks","driverModal","modalDetails","display","UserCountry","CountryCentre","USA","lat","lng","CAN","screenOptions","position","Drivers","OfflineDrivers","allLoads","OnGoingLoads","selectedDriverLoads","selectedDriverDetails","toogleFilter","toogleDriver","toogleGrid","toogleExpandMap","selectedDriverLoadsdtOptions","selectedDriverLoadsdtTrigger","loadingData","modalData","backgroudchatDefault","memberInfo","disableControl","filterDriverData","getDispatcherCountry","FuelUnit","setMapCenter","getDispatcherLoads","autoRefreshLoads","clearAllIntervals","changeFilterValueIntervalForMultiWindow","clearInterval","setCountryCenterInterval","setTimeout","googleMap","bounds","google","maps","LatLngBounds","extend","LatLng","fitBounds","setZoom","t","Lat","Lng","forEach","x","statusColor","SttsId","locationbounds","dLat","dLng","setCenter","getCenter","SearchedKeyword","showDriverDetails","searchLoadInterval","autoRefreshInterval","autoRefreshTimerInterval","statusId","inputs","DriverSearch","IsRequestFromDashboard","getOnGoingLoadsForMap","initailizeOnGoingLoad","thing","i","arr","indexOf","Id","Name","trim","driverFilter","map","m","push","startAutoRefreshTimer","setInterval","IsUserActive","stopAutoRefreshTimer","infoWindow","isOpen","close","index","driver","scrollTo","getDriverAdditionalDetails","msgwarning","routeShow","closePreviousWindow","selectedMaplable","other","Object","prototype","call","valueLen","keys","otherLen","compare","item1","item2","match","key","hasOwnProperty","toggleExpandMapView","filterMapByStatus","mapReady","searchDrivers","read","LocationMapComponent","_dashboard","isLoading","jobLocationData","jobLocationDataForMap","UoM","clickViewActive","centerLocationLat","centerLocationLog","mustGoUrl","shouldGoUrl","couldGoUrl","noDlrUrl","noImageUrl","fetchJobLocationData","getJobDetailsForBuyerDashboard","res","checkMostPriorityJob","setCountryCentre","jobLocationLength","deliveryRequests","jobDeliveryRequests","filteredMustGoDRs","filteredShoudGoDRs","filteredCouldGoDRs","highestPriority","iconUrl","Map","Latitude","Longitude","jobLocation","opendedJobDetails","CountryCode","$event","MapViewComponent","viewType","changeViewType","MessageComponent","getMessages","GetMessages","Messages"],"mappings":"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","file":"buyer-dashboard-buyer-dashboard-module-es5.js","sourcesContent":["export class JobBuyerDashboardViewModel {\r\n    CustomerName?: string;\r\n    CustomerId?: number;\r\n    CountryId?: number;\r\n    CountryCode?: string;\r\n    JobID?: number;\r\n    JobName?: string;\r\n    Latitude?: string;\r\n    Longitude?: string;\r\n    Address?: string;\r\n    City?: string;\r\n    CityId?: number;\r\n    State?: string;\r\n    StateID?: number;\r\n    ZipCode?: string;\r\n    ContactPersonName?: string;\r\n    ContactPhoneNumber?: string;\r\n    jobDeliveryRequests?: JobDRDetailsModel[];\r\n}\r\n\r\nexport class JobDRDetailsModel {\r\n    JobId?: number;\r\n    Priority?: number;\r\n}\r\n\r\nexport class BuyerLoadsForDashboardInputModel {\r\n    CountryId?: number;\r\n    FromDate?: Date;\r\n    ToDate?: Date;\r\n}\r\nexport class InventoryForDashboardInputModel {\r\n    CountryId?: number;\r\n    FromDate?: Date;\r\n    ToDate?: Date;\r\n}\r\n\r\nexport class BuyerLoadsForDashboardViewModel {\r\n    PoNumber?: string; // PoNumber\r\n    Location?: string; // Drop location\r\n    Product?: string; // Product name\r\n    Quantity?: string; // Drop quantity\r\n    Dispatcher?: string; // Dispatcher name\r\n    Status?: string; // Delivery current status\r\n    Priority?: number; // Load priority\r\n}\r\n\r\nexport interface InventoryViewModel {\r\n    SiteId?: string;\r\n    Location?: string;\r\n    TankName?: string;\r\n    AvgSale?: string;\r\n    Inventory?: string;\r\n    DaysRemaining?: string;\r\n    Priority?: number;\r\n}\r\n\r\nexport class InvoiceGridBuyerDashboardInputModel {\r\n    UserId?: number;\r\n    CompanyId?: number;\r\n    IsBuyerAdmin?: boolean;\r\n    CountryId?: number;\r\n    CurrencyTypeId?: number;\r\n    GroupIds?: string;\r\n    InvoiceTypeId?: number;\r\n    BrandedCompanyId?: number;\r\n\r\n}\r\n\r\n\r\nexport class InvoiceGridBuyerDashboardModel {\r\n    Id?: number;\r\n    InvoiceNumber?: string;\r\n    Supplier?: string;\r\n    PoNumber?: string;\r\n    DropDate?: string;\r\n    DropTime?: string;\r\n    Status?: string;\r\n    CreatedDate?: Date | string;\r\n    IsSupressOrderPricing?: boolean;\r\n}\r\n\r\nexport class DashboardTileViewModel {\r\n        TileName?: string;\r\n\r\n        RowIdx?: number;\r\n\r\n        ColIdx?: number;\r\n\r\n        IsCollapsed?: boolean;\r\n\r\n        IsClosed?: boolean;\r\n\r\n        TileDisplayName?: string;\r\n    }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { MapViewComponent } from './map-view/map-view.component';\nimport { LocationMapComponent } from './location-map/location-map.component';\nimport { LoadsMapComponent } from './loads-map/loads-map.component';\nimport { DeliveryComponent } from './delivery/delivery.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { MessageComponent } from './message/message.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '../modules/shared.module';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { FormsModule } from '@angular/forms';\n\n\nconst route:Routes=[{path:'',component:HomeComponent}]\n\n\n@NgModule({\n  declarations: [HomeComponent, MapViewComponent, LocationMapComponent, LoadsMapComponent, DeliveryComponent, InventoryComponent, InvoiceComponent, MessageComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    DirectiveModule,\n    DataTablesModule,\n    AgmDirectionModule,\n    FormsModule,\n    RouterModule.forChild(route)\n  ]\n})\nexport class BuyerDashboardModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { HandleError } from 'src/app/errors/HandleError';\nimport { BuyerLoadsForDashboardInputModel, DashboardTileViewModel, InventoryForDashboardInputModel, InvoiceGridBuyerDashboardInputModel } from './Model/DashboardModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService extends HandleError {\n  private getJobDetailsForBuyerDashboardUrl = \"/Buyer/Dashboard/GetJobDetailsForBuyerDashboard\";\n  private GetBuyerLoadsForDashboard = \"/Buyer/Dashboard/GetBuyerLoadsForDashboard\"\n  private GetLocationInventoryURl = \"/Buyer/Dashboard/GetLocationInventory\"\n  private GetInvoiceGridForBuyerDashboardURL = \"/Buyer/Dashboard/GetInvoiceGridForBuyerDashboardAsync\";\n  private GetNewBuyerDashboardTileSettingsURL = \"/Buyer/Dashboard/GetNewBuyerDashboardTileSettings\";\n  private SaveDBTileSettingsURL = \"/Buyer/Dashboard/SaveDBTileSettings\";\n  private GetMessagesForBuyerDashboardURL = \"/Messages/Mailbox/GetMessagesForBuyerDashboard\";\n  constructor(private httpClient: HttpClient) { super(); }\n\n  public getJobDetailsForBuyerDashboard(countryId: any): Observable<any> {\n    return timer(0, 60 * 60 * 1000).pipe(\n      switchMap(() => {\n        //return this.httpClient.get<any>(`${this.getJobDetailsForBuyerDashboardUrl}`)\n        return this.httpClient.get<any>(`${this.getJobDetailsForBuyerDashboardUrl}?countryId=${countryId}`)\n      })).pipe(catchError(this.handleError<any>('getJobDetailsForBuyerDashboardUrl', null)));\n  }\n\n  public getDeliveries(input: BuyerLoadsForDashboardInputModel): Observable<any> {\n    return this.httpClient.post<any>(this.GetBuyerLoadsForDashboard, input)\n      .pipe(catchError(this.handleError<any>('getDeliveries', null)));\n  }\n  public GetLocationInventory(input: InventoryForDashboardInputModel): Observable<any> {\n    return this.httpClient.get<any>(this.GetLocationInventoryURl + \"?CountryId=\" + input.CountryId)\n      .pipe(catchError(this.handleError<any>('GetLocationInventory', null)));\n  }\n\n  public GetInvoices(input: InvoiceGridBuyerDashboardInputModel): Observable<any> {\n    return this.httpClient.post<any>(this.GetInvoiceGridForBuyerDashboardURL, input)\n      .pipe(catchError(this.handleError<any>('GetInvoiceGridForBuyerDashboardURL', null)));\n  }\n\n  public GetNewBuyerDashboardTileSettings(): Observable<any> {\n    return this.httpClient.get<any>(this.GetNewBuyerDashboardTileSettingsURL)\n      .pipe(catchError(this.handleError<any>('GetNewBuyerDashboardTileSettings', null)));\n  }\n\n  public SaveDBTileSettings(pageId: string, input: DashboardTileViewModel[]): Observable<any> {\n    return this.httpClient.post<any>(this.SaveDBTileSettingsURL, { pageId: pageId, isMultipleTilesUpdated: true, settingsModel: input })\n      .pipe(catchError(this.handleError<any>('SaveDBTileSettings', null)));\n  }\n  public GetMessages(): Observable<any> {\n    return this.httpClient.get<any>(this.GetMessagesForBuyerDashboardURL)\n      .pipe(catchError(this.handleError<any>('GetMessagesForBuyerDashboard', null)));\n  }\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DeliveryReqPriority } from 'src/app/app.enum';\nimport { DashboardService } from '../dashboard.service';\nimport { BuyerLoadsForDashboardInputModel, BuyerLoadsForDashboardViewModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n\n@Component({\n    selector: 'app-delivery',\n    templateUrl: './delivery.component.html',\n    styleUrls: ['./delivery.component.scss']\n})\nexport class DeliveryComponent implements OnInit, OnChanges {\n    @Input() SelectedCountryId: any;\n    dtOptions: any = {};\n    dtTrigger: Subject<any> = new Subject();\n    public IsLoading: boolean = false;\n    currentCompanyId: any;\n    deliveries: BuyerLoadsForDashboardViewModel[] = [];\n    public type = 1;\n    private cloneDeliveries: BuyerLoadsForDashboardViewModel[] = [];\n    maxDate: Date;\n    minDate: Date;\n    fromDate: string;\n    toDate: string;\n    activePriorityTab = DeliveryReqPriority.MustGo;\n    public DeliveryReqPriority = DeliveryReqPriority;\n    //min max date\n\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n    constructor(private dashbpardSer: DashboardService, private router: Router) {\n        this.toDate = moment().format('MM/DD/YYYY');\n        this.minDate = new Date(new Date().setMonth(new Date().getMonth() - 10));\n        this.maxDate = new Date(new Date().setMonth(new Date().getMonth() + 10));\n        //this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n    }\n\n    ngOnInit() {\n        this.currentCompanyId = currentCompanyId;\n        this.initializeGrid();\n\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n            this.getDeliveries();\n        }\n\n    }\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            paging: false,\n            bSort: false,\n            bInfo: false,\n            searching: true,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n    }\n    public initializeDate(type): void {\n        this.type = type;\n        if (type == 1)//today\n        {\n            this.toDate = moment().format('MM/DD/YYYY');\n            //  this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n        } else {\n            this.toDate = moment(new Date(new Date().setDate(new Date().getDate() + 1))).format('MM/DD/YYYY');\n            // this.fromDate = moment().format('MM/DD/YYYY');\n        }\n        this.getDeliveries();\n    }\n    public getDeliveries() {\n        this.IsLoading = true;\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        var input = new BuyerLoadsForDashboardInputModel();\n        input.CountryId = this.SelectedCountryId;\n        input.FromDate = new Date(this.toDate);\n        input.ToDate = new Date(this.toDate);\n        this.cloneDeliveries = [];\n        this.dashbpardSer.getDeliveries(input).subscribe(data => {\n            this.IsLoading = false;\n            this.cloneDeliveries = data;\n            this.FilterDate(DeliveryReqPriority.MustGo); // Default must go\n        });\n    }\n\n    private FilterDate(priority): void {\n        if (this.cloneDeliveries)\n            this.deliveries = this.cloneDeliveries.filter(f => f.Priority == priority);\n        else\n            this.deliveries = [];\n        this.dtTrigger.next();\n\n    }\n\n    public changeActiveTab(priority) {\n        this.activePriorityTab = priority;\n        this.FilterDate(priority);\n    }\n\n    public navigate(): void {\n        this.router.navigate([]).then(result => { window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard=2', '_blank'); });\n    }\n\n    setFromDate(event: any): void {\n        if (event) {\n            this.type = 0;//not today and tomorrow\n            this.toDate = (event);\n            if (moment().format('MM/DD/YYYY') == moment(this.toDate).format('MM/DD/YYYY'))\n                this.type = 1;\n            else if (moment(new Date().setDate(new Date().getDate() + 1)).format('MM/DD/YYYY') == moment(this.toDate).format('MM/DD/YYYY'))\n                this.type = 2;\n            // this.fromDate = moment(new Date(new Date().setDate(new Date().getDate() - 1))).format('MM/DD/YYYY');\n            this.getDeliveries();\n        }\n\n    }\n}\n\n\n\n\n","<div class=\"delivary-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Deliveries</h4>\n                    </div>\n               </div>\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-6\">\r\n                    <div class=\"dib border radius-capsule shadow-b\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"type==1\">\r\n                            <label class=\"btn ml0\" (click)=\"initializeDate(1)\">Today</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"type==2\">\r\n                            <label class=\"btn\" (click)=\"initializeDate(2)\">Tomorrow</label>\r\n                            <input type=\"text\" [(ngModel)]=\"toDate\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #fromDate1\r\n                                   class=\"form-control datepicker\" placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                   (onDateChange)=\"setFromDate($event);\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\n                <div class=\"col-6\">\n                    <div class=\"d-inline-block text-right prority-pills float-right mb10\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should\n                                    Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                    [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could\n                                    Go</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\n                                class=\"spinner-dashboard pa\"></span></div>\n        \n                        <table\n                            class=\"table bg-white table-hover\">\n                            <thead>\n                                <tr>\n                                    <th data-key=\"po_no\">PO Number</th>\n                                    <th data-key=\"loc\">Location</th>\n                                    <th data-key=\"product\">Product</th>\n                                    <th data-key=\"qty\">Quantity</th>\n                                    <th data-key=\"dispacher\">Dispatcher</th>\n                                    <th data-key=\"status\">Status</th>\n                                    <th data-key=\"on_time\">On Time</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of deliveries\">\n                                        <td>{{item?.PoNumber}}</td>\n                                        <td>{{item?.Location}}</td>\n                                        <td>{{item?.Product}}</td>\n                                        <td>{{item?.Quantity}}</td>\n                                        <td>{{item?.Dispatcher}}</td>\n                                        <td>\n                                            <!-- {{item?.Status}} -->\n                                            <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Completed','badge-danger': item?.Status=='Accepted','badge-warning': item?.Status.length>8 }\"\n                                                placement=\"left\"\n                                                ngbTooltip=\"{{item?.Status}}\"> \n                                                {{ (item?.Status.length>10)? (item?.Status | slice:0:10)+'..':(item?.Status) }}\n                                            </span>\n                                        </td>\n                                        <td>--</td>\n                                    </tr>\n                                    <tr *ngIf=\"deliveries && deliveries.length==0\">\n                                        <td colspan=\"7\"> \n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Data Found</h4>\n                                                </div>\n                                            </div>\n                                            \n                                        </td>  \n                                   </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                    </div>\n            </div>\n         \n       \n            <!-- <div class=\"well bg-white shadow-b pr\">\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span\n                        class='spinner-dashboard pa'></span></div>\n                <div class=\"ibox mb0\">\n                    <div class=\"ibox-content no-padding no-border location_table\">\n                    \n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DropdownItem } from 'src/app/statelist.service';\nimport { DashboardService } from '../dashboard.service';\nimport { DashboardTileViewModel } from '../Model/DashboardModel';\nimport { Declarations } from 'src/app/declarations.module';\ndeclare var currentUserCompanyId: any;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent implements OnInit {\n  public isShowCountryDDL: boolean = true;\n  CountryList: DropdownItem[] = [];\n  public SelectedCountryId: number;\n  public tiles: Tiles = {};\n  IsLoading = false;\n  public DashboardTileViewModelList: DashboardTileViewModel[] = [];\n  pageID: string;\n  constructor(private carrierService: CarrierService, private router: Router, private _dashboardSer: DashboardService) { }\n\n  ngOnInit() {\n    this.getCountries();\n    this.getTiles();\n  }\n\n  getTiles() {\n    this.IsLoading = true;\n    this._dashboardSer.GetNewBuyerDashboardTileSettings().subscribe(data => {\n      if (data) {\n        this.pageID = data.PageId;\n        this.DashboardTileViewModelList = data.TileDetails;\n        this.initializeTiles();\n        this.IsLoading = false;\n      } else\n        this.IsLoading = false;\n    });\n  }\n\n  private getCountries() {\n    this.carrierService.GetCountries(currentUserCompanyId).subscribe(data => {\n      if (data != null) {\n        if (data.ServingCountries != null && data.ServingCountries.length > 1) {\n          //this.ServingCountries = data.ServingCountries;\n          this.CountryList = data.CountryList as DropdownItem[];\n\n          if (isNaN(this.SelectedCountryId) || this.SelectedCountryId == 0) {\n            let countryId = localStorage.getItem('countryIdForDashboard');\n            if (countryId)\n              this.SelectedCountryId = +countryId;\n            else {\n              this.SelectedCountryId = Number(data.DefaultCountryId);\n              localStorage.setItem('countryIdForDashboard', data.DefaultCountryId);\n              localStorage.setItem('currencyTypeForDashboard', data.DefaultCountryId);\n            }\n          }\n        }\n        else {\n          this.SelectedCountryId = Number(data.DefaultCountryId);\n          this.isShowCountryDDL = false;\n        }\n      }\n    });\n  }\n\n  public onCountryChange(event) {\n    this.SelectedCountryId = (event.target.value == \"null\" || event.target.value == null) ? 1 : Number(event.target.value);\n    // localStorage.setItem('countryFilterType', <string>this.CountryFilter);\n    localStorage.setItem('countryIdForDashboard', this.SelectedCountryId.toString());\n    localStorage.setItem('currencyTypeForDashboard', this.SelectedCountryId.toString());\n  }\n\n  navigate() {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Dashboard/Index', '_blank'); });\n  }\n\n  public ApplySettings(): void {\n\n    this._dashboardSer.SaveDBTileSettings(this.pageID, this.DashboardTileViewModelList).subscribe(data => {\n      if (data.StatusCode == 0) {\n        Declarations.msgsuccess(data.StatusMessage, undefined, undefined);\n        this.initializeTiles();\n      }\n      else {\n        Declarations.msgerror(data == null ? 'Failed' : data.StatusMessage, undefined, undefined);\n      }\n    });\n  }\n\n  initializeTiles() {\n    this.tiles.IsDelivery = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Deliveries\").IsClosed;\n    this.tiles.IsInventory = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Location Inventory\").IsClosed;\n    this.tiles.IsInvoice = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Invoices\").IsClosed;\n    this.tiles.IsMessage = this.DashboardTileViewModelList.find(f => f.TileDisplayName == \"Messages\").IsClosed;\n  }\n\n\n}\n\n\nexport class Tiles {\n  IsWallyBoard?: boolean\n  IsInvoice?: boolean\n  IsDelivery?: boolean\n  IsInventory?: boolean\nIsMessage?:boolean\n}\n\n","<div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n        <div class=\"icon-wrapper2\">\r\n\r\n            <div class=\"right0 z-index5 mb10 btn-db-preferences\">\r\n                <span data-toggle=\"modal\" data-target=\"#tile-preferences\">\r\n                    <a href=\"javascript:void(0)\" class=\"btn yellow-bg btn-circle btn-sm color-white\"\r\n                        data-toggle=\"modal\" data-target=\"#myModal\" data-placement=\"bottom\"\r\n                        title=\"Dashboard Preferences\">\r\n                        <i class=\"fa fa-th fs16\"></i>\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- <div class=\"float-right text-right\">\r\n            <button class=\"btn btn-outline btn-primary btn-rnd\" data-toggle=\"modal\" data-target=\"#myModal\">More</button>\r\n        </div> -->\r\n        <div class=\"float-right text-right mb10\" *ngIf=\"isShowCountryDDL\">\r\n            <div class=\"form-group mb0\">\r\n                <select class=\"form-control\" (change)=\"onCountryChange($event)\">\r\n                    <option *ngFor=\"let country of CountryList\" [value]=\"country.Id\"\r\n                        [selected]=\"SelectedCountryId==country.Id\"><i class=\"fa fa-airbnb fa-2x\"></i> {{country.Code}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n    <span class=\"spinner-dashboard pa\"></span>\r\n</div>\r\n<div class=\"buyerdashboard-home-container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\" *ngIf=\"!tiles.IsWallyBoard\">\r\n            <app-map-view [SelectedCountryId]=\"SelectedCountryId\"></app-map-view>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" >  \r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsDelivery\">\r\n            <app-delivery [SelectedCountryId]=\"SelectedCountryId\"></app-delivery>\r\n        </div>\r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsInventory\"> \r\n            <app-inventory [SelectedCountryId]=\"SelectedCountryId\"></app-inventory>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-6\" *ngIf=\"!tiles.IsInvoice\">\r\n            <app-invoice [SelectedCountryId]=\"SelectedCountryId\"></app-invoice>\r\n        </div>\r\n        <div class=\"col-lg-6\" *ngIf = \"!tiles.IsMessage\">\r\n            <app-message></app-message>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Tiles you want to see on dashboard</h4>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            </div>\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div  class=\"col-sm-4\" *ngFor=\"let item of DashboardTileViewModelList\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"form-check form-check-inline\">\r\n                                <input type=\"checkbox\" [checked]=\"!item.IsClosed\" id=\"inlineCheckbox-board_{{item.TileName}}\"\r\n                                    (change)=\"item.IsClosed = !item.IsClosed\">\r\n                                <label class=\"form-check-label ml-2\" for=\"inlineCheckbox-board\"> {{item.TileDisplayName}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                <!-- Modal footer -->\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"ApplySettings()\"\r\n                        data-dismiss=\"modal\">Apply</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DeliveryReqPriority } from 'src/app/app.enum';\nimport { DashboardService } from '../dashboard.service';\nimport { BuyerLoadsForDashboardInputModel, BuyerLoadsForDashboardViewModel, InventoryForDashboardInputModel, InventoryViewModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\n\nexport class InventoryComponent implements OnInit {\n  @Input() SelectedCountryId: any;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  currentCompanyId: any;\n  inventories: InventoryViewModel[] = [];\n\n  private cloneInventories: InventoryViewModel[] = [];\n  activePriorityTab = DeliveryReqPriority.MustGo;\n  public DeliveryReqPriority = DeliveryReqPriority;\n  //min max date\n  MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  MaxStartDate = new Date();\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n  constructor(private dashbpardSer: DashboardService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.currentCompanyId = currentCompanyId;\n    this.initializeGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.getDeliveries();\n    }\n\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      searching: true,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n  };\n  }\n\n  public getDeliveries() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    var input = new InventoryForDashboardInputModel();\n    input.CountryId = this.SelectedCountryId;\n    this.cloneInventories = [];\n    this.dashbpardSer.GetLocationInventory(input).subscribe(data => {\n      this.IsLoading = false;\n      this.cloneInventories = data;\n      this.FilterDate(DeliveryReqPriority.MustGo); // Default must go\n    });\n  }\n\n  private FilterDate(priority): void {\n    if (this.cloneInventories)\n      this.inventories = this.cloneInventories.filter(f => f.Priority == priority);\n    else\n      this.inventories = [];\n      if ((this.datatableElement && this.datatableElement.dtInstance)) {\n        this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); this.dtTrigger.next();});\n      }\n  }\n\n  public changeActiveTab(priority) {\n    this.activePriorityTab = priority;\n    this.FilterDate(priority);\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard=3', '_blank'); });\n  }\n}\n\n\n","<div class=\"inventory-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Location Inventory</h4>\n                    </div>\n                    <!-- <div class=\"d-inline-block text-right prority-pills ml-2\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\n                            </li>\n                        </ul>\n                    </div> -->\n\n                </div>\n                \n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"d-block text-right prority-pills float-right mb10\">\n                        <ul class=\"nav nav-pills float-right\">\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\n                                <a class=\"nav-link mustgo active\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\n                                <a class=\"nav-link shouldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\n                            </li>\n                            <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\n                                <a class=\"nav-link couldgo\"\n                                   [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\n                                class=\"spinner-dashboard pa\"></span></div>\n\n                        <table \n                            class=\"table bg-white table-hover\">\n                            <thead>\n                                <tr>\n                                    <th data-key=\"site_ID\">Location ID</th>\n                                    <th data-key=\"loc\">Location</th>\n                                    <th data-key=\"tank_name\">Tank Name</th>\n                                    <th data-key=\"qty\">Trailing 7 Days Average</th>\n                                    <th data-key=\"inv\">Current Inventory</th>\n                                    <th data-key=\"days\">Days Remaining</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of inventories\">\n                                        <td>{{item?.SiteId }}</td>\n                                        <td>{{item?.Location }}</td>\n                                        <td>{{item?.TankName }}</td>\n                                        <td>{{item?.AvgSale}}</td>\n                                        <td>{{item?.Inventory  }}</td>\n                                        <td>{{item?.DaysRemaining=='--'? 'NA':item?.DaysRemaining }}</td>\n                                    \n                                    </tr>\n                                    <tr *ngIf=\"inventories && inventories.length==0\">\n                                     <td colspan=\"6\"> \n                                          <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                        <div class=\"col-12 align-items-center text-center\">\n                                            <i class=\"fab fa-searchengin fa-5x\"></i>\n                                            <h4>No Data Found</h4>\n                                        </div>\n                                    </div>\n                                </td> \n                                </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            \n            \n            <!-- <div class=\"well bg-white shadow-b pr\">\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span\n                        class='spinner-dashboard pa'></span></div>\n                <div class=\"ibox mb0\">\n                    <div class=\"ibox-content no-padding no-border location_table\">\n                      \n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DashboardService } from '../dashboard.service';\nimport { InvoiceGridBuyerDashboardModel, InvoiceGridBuyerDashboardInputModel } from '../Model/DashboardModel';\ndeclare var currentCompanyId: any;\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.scss']\n})\nexport class InvoiceComponent implements OnInit {\n\n  @Input() SelectedCountryId: any;\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  currentCompanyId: any;\n  Invoices: InvoiceGridBuyerDashboardModel[] = [];\n  temp_string: string =`DDTs`\n\n  activeInvoiceDDTTab = 0;\n\n  //min max date\n  MinStartDate = moment(new Date(new Date().setMonth(new Date().getMonth() - 1)));\n  MaxStartDate = new Date();\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n\n  constructor(private dashbpardSer: DashboardService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.currentCompanyId = currentCompanyId;\n    this.initializeGrid();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.getInvoices();\n    }\n\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n\n  public getInvoices() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    var input = new InvoiceGridBuyerDashboardInputModel();\n    input.CountryId = this.SelectedCountryId;\n    input.InvoiceTypeId = this.activeInvoiceDDTTab;\n    let CurrencyTypeId = localStorage.getItem(\"currencyTypeForDashboard\");\n    if (CurrencyTypeId)\n      input.CurrencyTypeId = +CurrencyTypeId;\n    this.dashbpardSer.GetInvoices(input).subscribe(data => {\n      this.IsLoading = false;\n      this.Invoices = data;\n      this.FilterDate(this.activeInvoiceDDTTab); // Default must go\n    });\n  }\n\n  private FilterDate(type): void {\n    //this.Invoices = this.cloneInventories.filter(f => f.type == type);\n    this.dtTrigger.next();\n\n  }\n\n  public changeActiveTab(type) {\n    this.activeInvoiceDDTTab = type;\n    this.getInvoices();\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Buyer/Invoice/View', '_blank'); });\n  }\n\n}\n","<div class=\"invoices-view-contanier\">\r\n    <div class=\"well\">\r\n        <div class=\"well-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-9 form-row align-items-center\">\r\n                    <div class=\"d-inline-block\">\r\n                        <h4 class=\"well-title\">{{ (activeInvoiceDDTTab==6)? temp_string : 'Invoices' }}</h4>\r\n                    </div>\r\n                    <div class=\"dib border radius-capsule shadow-b ml20\">\r\n                        <div class=\"btn-group btn-filter\">\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"0\" [checked]=\"activeInvoiceDDTTab==0\">\r\n                            <label class=\"btn ml0\" (click)=\"changeActiveTab(0)\">Invoices</label>\r\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'activeInvoiceDDTTab'\" [value]=\"6\" [checked]=\"activeInvoiceDDTTab==6\">\r\n                            <label class=\"btn\" (click)=\"changeActiveTab(6)\">DDTs</label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"d-inline-block ml20\">\r\n                        <div class=\"form-group input-search\">\r\n                            <i class=\"fas fa-search form-control-search\"></i>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n                        </div>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\r\n                    <button class=\"btn btn-outline btn-primary btn-rnd fs11\" (click)=\"navigate()\">View More</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"well-body  padding-8\">\r\n            <div class=\"table-wrapper\">\r\n                <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\r\n                    <span class=\"spinner-dashboard pa\"></span>\r\n                </div>\r\n                <table  class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th >Invoice Number</th>\r\n                            <th >PO Number</th>\r\n                            <th >Supplier Name</th>\r\n                            <th >Drop Date</th>\r\n                            <th >Drop Time</th>\r\n                            <th >Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container>\r\n                            <tr *ngFor=\"let item of Invoices\">\r\n                                <td>{{item?.InvoiceNumber }} <span class=\"fa fa-info-circle\" \r\n                                    placement=\"right\"\r\n                                    ngbTooltip=\"This invoice is not currently available. Please contact {{item?.Supplier}} for details.\" *ngIf=\"item?.IsSupressOrderPricing\"></span></td>\r\n                                <td>\r\n                                    <ng-container *ngFor=\"let po of item?.PoNumber.split(';')\">\r\n                                        <div style=\"display:inline-block;\">\r\n                                            {{po}}\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td>{{item?.Supplier }}</td>\r\n                                <td>{{item?.DropDate}}</td>\r\n                                <td>\r\n                                    <ng-container *ngFor=\"let time of item?.DropTime.split(';')\">\r\n                                        <div class=\"text-nowrap\" style=\"display:inline-block;\">\r\n                                            {{time}}\r\n                                        </div>\r\n                                    </ng-container>\r\n                                </td>\r\n                                <td> <span class=\"badge badge-pill badge-primary\" [ngClass]=\"{'badge-success': item?.Status=='Received','badge-danger': item?.Status=='Rejected','badge-warning': item?.Status.length>8 }\"\r\n                                    placement=\"left\"\r\n                                    ngbTooltip=\"{{item?.Status}}\"> \r\n                                    {{ (item?.Status.length>8)? (item?.Status | slice:0:8)+'..':(item?.Status) }}\r\n                                </span> </td>\r\n                            </tr>\r\n                            <tr *ngIf=\"Invoices && Invoices.length==0\">\r\n                                 <td colspan=\"6\">\r\n                                    <div class=\"row align-items-center\" style=\"height: 175px;\">\r\n                                        <div class=\"col-12 align-items-center text-center\">\r\n                                            <i class=\"fab fa-searchengin fa-5x\"></i>\r\n                                            <h4>No Data Found</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                 </td>  \r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n             <!-- <div class=\"well bg-white shadow-b pr\">\r\n                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit, QueryList, SimpleChanges, ViewChild, ViewChildren } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { Subject } from 'rxjs';\nimport { DriverAdditionalDetails, routesColor, WhereIsMyDriverModel } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport { BuyerwallyboardService } from 'src/app/buyer-wally-board/services/buyerwallyboard.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { Declarations } from 'src/app/declarations.module';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\ndeclare function IsUserActive(): boolean;\n\nexport declare var google: any;\n@Component({\n  selector: 'app-loads-map',\n  templateUrl: './loads-map.component.html',\n  styleUrls: ['./loads-map.component.scss']\n})\nexport class LoadsMapComponent implements OnInit {\n  @Input() SelectedCountryId: any;\n  public toogleMap: boolean = true;\n  public selectedMaplable: any;\n  public previousInfowindow: any = null;\n  public previousInfowindowIndex: number = null\n  public FuelUnit: string;\n  public googleMap: any;\n  public zoomLevel = 5;\n  public centerLoactionLat = 39.1175;\n  public centerLoactionLng = -103.8784;\n  public MaxInputDate: Date = moment().add(1, 'year').toDate();\n  public TodaysDate: string = moment().format('MM/DD/YYYY');\n\n\n  private AUTO_REFRESH_TIME: number = 300; // seconds\n  public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\n\n  public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n\n  private UserCountry = \"\";\n  private CountryCentre = {\n    USA: { lat: 39.11757961, lng: -103.8784 },\n    CAN: { lat: 57.88251631, lng: -98.54842922 }\n  };\n  public screenOptions = {\n    position: 6\n  };\n\n  private searchLoadInterval: any;\n  private autoRefreshInterval: any;\n  private autoRefreshTimerInterval: any;\n  private setCountryCenterInterval: any;\n\n  public Drivers: WhereIsMyDriverModel[] = [];\n  public OfflineDrivers: WhereIsMyDriverModel[] = [];\n  public allLoads: WhereIsMyDriverModel[] = [];\n  public OnGoingLoads: WhereIsMyDriverModel[] = [];\n  public selectedDriverLoads: WhereIsMyDriverModel[] = [];\n  public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\n\n  public SearchedKeyword: string;\n\n  public toogleFilter: Boolean = false;\n  public toogleDriver: Boolean = false;\n  public toogleGrid: Boolean = false;\n  public toogleExpandMap: Boolean = false;\n\n  public selectedDriverLoadsdtOptions: any = {};\n  public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\n\n  @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n  @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\n  public loadingData: boolean = true;\n  public modalData: boolean = true;\n  public IsShouldGoLoading: boolean;\n  public IsCouldGoLoading: boolean;\n  public IsMustGoLoading: boolean;\n  public backgroudchatDefault = [];\n  public memberInfo: MemberInfo[] = [];\n  public disableControl: boolean = false;\n  changeFilterValueIntervalForMultiWindow: any;\n\n  constructor(private dispatcherService: BuyerwallyboardService, private carrierService: CarrierService) {\n  }\n\n  ngOnInit() {\n    // this.filterDriverData();\n    // this.dispatcherService.getDispatcherCountry().subscribe(data => {\n    //   this.UserCountry = data;\n    //   this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\n    //   this.setMapCenter();\n    // });\n  }\n\n  clickOutsideDropdown() {\n    if (this.toogleFilter) {\n      this.toogleFilter = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n      this.filterDriverData();\n      this.dispatcherService.getDispatcherCountry().subscribe(data => {\n        this.UserCountry = data;\n        this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\n        this.setMapCenter();\n      });\n    }\n  }\n  ngAfterViewInit(): void {\n    this.getDispatcherLoads();\n    this.autoRefreshLoads();\n  }\n\n  ngOnDestroy(): void {\n    this.clearAllIntervals();\n    if (this.changeFilterValueIntervalForMultiWindow)\n      clearInterval(this.changeFilterValueIntervalForMultiWindow);\n  }\n\n  setMapCenter(): void {\n    if (this.UserCountry != \"\") {\n      this.setCountryCenterInterval = window.setTimeout(() => {\n        this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\n        this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\n        if (this.googleMap && this.OnGoingLoads.length == 0) {\n          const bounds = new google.maps.LatLngBounds();\n          bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\n          this.googleMap.fitBounds(bounds);\n          this.googleMap.setZoom(5);\n        } else {\n          const bounds = new google.maps.LatLngBounds();\n          this.OnGoingLoads.filter(t => t.Lat != null && t.Lng != null).forEach(x => {\n            x.statusColor = routesColor[x.SttsId];\n            bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\n          });\n          this.googleMap.fitBounds(bounds);\n\n          const locationbounds = new google.maps.LatLngBounds();\n          this.OnGoingLoads.forEach(x => {\n              locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\n          });\n          if (this.googleMap && locationbounds) {\n              this.googleMap.setCenter(locationbounds.getCenter());         \n          }\n          this.googleMap.setZoom(5);\n        }\n      }, 500);\n    }\n  }\n\n  searchDrivers(event: any): void {\n    this.SearchedKeyword = event.target.value;\n    this.filterDriverData();\n  }\n\n\n  refreshDatatable(): void {\n    if (this.driverModal.modalDetails.display === \"block\") {\n      this.showDriverDetails(this.driverModal.modalDetails.data);\n    }\n  }\n\n  filterDriverData(): void {\n    this.clearAllIntervals();\n    this.searchLoadInterval = window.setTimeout(() => {\n      this.getDispatcherLoads();\n      this.autoRefreshLoads();\n    }, 2000);\n  }\n\n  clearAllIntervals(): void {\n    if (this.searchLoadInterval) {\n      clearInterval(this.searchLoadInterval);\n    }\n    if (this.autoRefreshInterval) {\n      clearInterval(this.autoRefreshInterval);\n    }\n    if (this.setCountryCenterInterval) {\n      clearInterval(this.setCountryCenterInterval);\n    }\n    if (this.autoRefreshTimerInterval) {\n      clearInterval(this.autoRefreshTimerInterval);\n    }\n  }\n\n  getDispatcherLoads(statusId?): void {\n\n    let inputs = {\n      // FromDate: moment().format('MM/DD/YYYY'),\n      // ToDate: moment().format('MM/DD/YYYY'),\n      DriverSearch: this.SearchedKeyword,\n      IsRequestFromDashboard: true,\n      CountryId:this.SelectedCountryId,\n    };\n    this.loadingData = true;\n    this.dispatcherService.getOnGoingLoadsForMap(inputs).subscribe((data) => {\n      this.initailizeOnGoingLoad(data);\n    });\n\n  }\n\n  private initailizeOnGoingLoad(data) {\n    this.OnGoingLoads = data;// data.filter(x => x.Lat != null && x.Lng != null);\n\n    this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\n      return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\n    });\n    this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\n    //last location not available\n    this.OfflineDrivers = [];\n    var driverFilter = [];\n    data && data.map(m => {\n      if (!driverFilter.find(f => f && f.Name == m.Name)) {\n        driverFilter.push(m);\n        if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\n          (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\n      }\n    })\n    this.setMapCenter();\n    this.startAutoRefreshTimer();\n    this.loadingData = false;\n  }\n\n\n\n  autoRefreshLoads(): void {\n    this.autoRefreshInterval = window.setInterval(() => {\n      if (IsUserActive()) {\n        this.getDispatcherLoads();\n      }\n    }, this.AUTO_REFRESH_TIME * 1000);\n  }\n\n  startAutoRefreshTimer(): void {\n    this.stopAutoRefreshTimer();\n    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n    this.autoRefreshTimerInterval = window.setInterval(() => {\n      if (IsUserActive()) {\n        if (this.autoRefreshTicks == 0) {\n          this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n          this.stopAutoRefreshTimer();\n        } else {\n          this.autoRefreshTicks--;\n        }\n      }\n    }, 1000);\n  }\n\n  stopAutoRefreshTimer(): void {\n    if (this.autoRefreshTimerInterval) {\n      clearInterval(this.autoRefreshTimerInterval);\n    }\n  }\n\n  mapReady(map: any): void {\n    this.googleMap = map;\n    this.setMapCenter();\n  }\n\n  setZoomLevel(): void {\n    if (this.OnGoingLoads.length == 0) {\n      this.setMapCenter();\n    } else {\n      this.zoomLevel = 8; // default zoom level\n    }\n  }\n\n  public toggleExpandMapView() {\n    this.toogleExpandMap = !this.toogleExpandMap;\n  }\n\n  public toggleMapView() {\n    this.toogleMap = !this.toogleMap;\n  }\n\n  public toggleGrids() {\n    this.toogleGrid = !this.toogleGrid;\n  }\n\n  public toggleFilterView() {\n    this.toogleFilter = !this.toogleFilter;\n  }\n  public toggleDriverView() {\n    this.toogleDriver = !this.toogleDriver;\n  }\n\n\n  public mouseHoverMarker(infoWindow, event: MouseEvent): void {\n    if (this.previousInfowindow && this.previousInfowindow.isOpen) {\n      this.previousInfowindow.close();\n    }\n    if (infoWindow) {\n      this.previousInfowindow = infoWindow;\n      this.previousInfowindow.isOpen = true;\n      infoWindow.open();\n    }\n  }\n\n  public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\n    if (this.previousInfowindow && this.previousInfowindow.isOpen && infoWindow) {\n      this.previousInfowindow.close();\n      this.previousInfowindow.isOpen = false;\n    }\n    if (infoWindow) {\n      infoWindow.close();\n    }\n  }\n\n  public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\n    window.scrollTo(0, 0);\n    this.driverModal = { modalDetails: { display: 'block', data: driver } };\n    if (infoWindow && infoWindow.isOpen) {\n      infoWindow.close();\n    }\n    this.selectedDriverDetails = new DriverAdditionalDetails();\n    this.modalData = true;\n    this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\n      if (data) {\n        this.selectedDriverDetails = new DriverAdditionalDetails(data);\n        this.modalData = false;\n      }\n      else {\n        this.selectedDriverDetails = new DriverAdditionalDetails();\n        Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\n        this.modalData = false;\n      }\n    });\n  }\n\n  public modalClose(): void {\n    this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n  }\n\n\n  private closePreviousWindow(index: number): void {\n    if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\n      this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\n      if (this.previousInfowindow && this.previousInfowindow.isOpen)\n        this.previousInfowindow.close();\n      this.setMapCenter();\n    }\n  }\n  public showHideRoutes(index: number): void {\n    if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\n      this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\n      if (!this.OnGoingLoads[index].routeShow)\n        this.setMapCenter();\n    } else {\n      this.closePreviousWindow(index);\n    }\n    this.previousInfowindowIndex = index;\n  }\n\n  filterMapByStatus(statusId) {\n    this.selectedMaplable = statusId;\n    this.getDispatcherLoads(statusId)\n\n  }\n\n  isArrayEqual(value, other) {\n    var type = Object.prototype.toString.call(value);\n    if (type !== Object.prototype.toString.call(other)) return false;\n    if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n    var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\n    var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\n    if (valueLen !== otherLen) return false;\n    var compare = function (item1, item2) {\n    };\n    var match;\n    if (type === '[object Array]') {\n      for (var i = 0; i < valueLen; i++) {\n        compare(value[i], other[i]);\n      }\n    } else {\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          compare(value[key], other[key]);\n        }\n      }\n    }\n    return true;\n\n  }\n\n}\n","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\n    <span class='spinner-dashboard pa'></span>\n</div>\n\n<div class=\"row animated\">\n    <div class=\"\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap ,'col-sm-9': !toogleExpandMap , 'col-sm-12':toogleExpandMap === true  }\">\n        <div class=\"expand_map_btn\">\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !toogleExpandMap, 'fa-arrow-circle-left': toogleExpandMap}\"></i>\n            </a>\n        </div>\n        <div id=\"map-view\" class=\"\">\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\n                <div id=\"status-legends\" class=\"well pa0\">\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\n                            On the way to terminal\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\n                            Arrived at terminal\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\n                            On the way to location\n                        </a>\n\n                    </div>\n                    <div class=\"border-b pb5 pt5 pl5\">\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\n                            Arrived at location\n                        </a>\n\n                    </div>\n                </div>\n            </div>\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\n            </div>\n            <agm-map style=\"height:60vh\"   [zoom]=\"zoomLevel\" [maxZoom]=\"16\"  [minZoom]=\"2\"\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\n                    <agm-marker *ngIf=\"driver.Lat!= null &&driver.Lng!= null\" [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':40,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\">\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\n                            <div>\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\n                                <!--<p class=\"pull-right\" *ngIf=\"driver.AllowCustomerDriverChat==true\">\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs21 far fa-comment\"></span></a>\n                </p>-->\n\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\n                                <ng-template #showRouteTemplate>\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\n                                </ng-template>\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\n                            <div>\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                    <agm-direction *ngIf=\"driver.dLat && driver.dLng && driver.Lat!= null && driver.Lng!= null\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\n                </ng-container>\n            </agm-map>\n        </div>\n    </div>\n\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (toogleExpandMap === false && toogleMap === true), 'absolute_driver': toogleMap===false, 'hide_absolute_driver': (toogleDriver === true && toogleMap === false), 'display_hide': (toogleExpandMap === true && toogleMap===true) }\">\n        <div class=\"driver_btn\" *ngIf=\"!toogleMap\">\n            <a class=\"\" (click)=\"toggleDriverView()\">\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !toogleDriver, 'fa-arrow-circle-left': toogleDriver}\"></i>\n            </a>\n        </div>\n        <div class=\"mt10\">\n            <!-- <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3> -->\n            <div class=\"inner-addon left-addon pull-left ml10\">\n                <i class=\"glyphicon glyphicon-search\"></i>\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Driver\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"driver-list dib full-width\">\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\n                    <span class=\"fs15\">{{driver.Name}}</span>\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\n                </div>\n                <!--<div class=\"pull-right mt10\" *ngIf=\"driver.AllowCustomerDriverChat==true\">\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs18 far fa-comment\"></span></a>\n                </div>-->\n            </div>\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\n                <div class=\"pull-left\" title=\"Last location is not available\">\n                    <span class=\"fs15\">{{driver.Name}}</span>\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Status</th>\n                            <th>LastSeenAt</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let member of memberInfo\">\n                            <td>{{member.nickname}}</td>\n                            <td>{{member.userId}}</td>\n                            <td>{{member.connectionStatus}}</td>\n                            <td>{{member.lastSeenAt}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"text-right\">\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div id=\"invoice\" class=\"hide-element\">\n</div>\n\n","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { JobLocationDetailsModal } from 'src/app/buyer-wally-board/Models/BuyerWallyBoard';\nimport { DashboardService } from '../dashboard.service';\nimport { JobBuyerDashboardViewModel } from '../Model/DashboardModel';\nexport declare var google: any;\ndeclare var currentCompanyId: any;\n\n@Component({\n    selector: 'app-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\nexport class LocationMapComponent implements OnDestroy, OnChanges {\n    //@ViewChild(DataTableDirective)\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    @Input() SelectedCountryId: any\n    public Map: any;\n    public isLoading = false;\n    public zoomLevel = 5;\n    public dtOptions: any = {};\n    public jobLocationData: JobBuyerDashboardViewModel[] = [];\n    public jobLocationDataForMap: JobBuyerDashboardViewModel[] = [];\n    public opendedJobDetails: JobBuyerDashboardViewModel;\n    private setCountryCenterInterval: any;\n    public UoM: string = '';\n    public clickViewActive: Boolean = false;\n    public toogleMap: Boolean = true;\n    public centerLocationLat = 47.1853106;\n    public centerLocationLog = -125.36955;\n    private UserCountry = \"USA\";\n    private CountryCentre = {\n        USA: { lat: 39.11757961, lng: -103.8784 },\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\n    };\n    public screenOptions = {\n        position: 3\n    };\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\n    public noImageUrl = \"Content/images/no-image.png\";\n\n    public CurrentCompanyId: any;\n    constructor(private _dashboard: DashboardService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.SelectedCountryId && changes.SelectedCountryId.currentValue) {\n            this.fetchJobLocationData();\n        }\n    }\n    ngOnDestroy(): void {\n\n    }\n    private fetchJobLocationData(): void {\n        this.isLoading = true;\n        this._dashboard.getJobDetailsForBuyerDashboard(this.SelectedCountryId).subscribe(res => {\n            if (res) {\n                this.jobLocationData = this.checkMostPriorityJob(res);\n                this.jobLocationDataForMap = this.jobLocationData;\n            }\n            this.setCountryCentre();\n            this.isLoading = false;\n        });\n    }\n\n    private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\n        const jobLocationLength = jobLocationData.length;\n        for (let i = 0; i < jobLocationLength; i++) {\n            let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\n            if (deliveryRequests.length) {\n                let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\n                let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\n                let filteredCouldGoDRs = deliveryRequests.filter((data) => data.Priority === 3);\n                if (filteredMustGoDRs.length > 0) {\n                    jobLocationData[i].highestPriority = 1;\n                    jobLocationData[i].iconUrl = this.mustGoUrl;\n                }\n                else if (filteredShoudGoDRs.length > 0) {\n                    jobLocationData[i].highestPriority = 2;\n                    jobLocationData[i].iconUrl = this.shouldGoUrl;\n                }\n                else {\n                    jobLocationData[i].highestPriority = 3;\n                    jobLocationData[i].iconUrl = this.couldGoUrl;\n                }\n            } else {\n                jobLocationData[i].highestPriority = 4;\n                jobLocationData[i].iconUrl = this.noDlrUrl;\n            }\n        }\n        return jobLocationData;\n    }\n\n    private setCountryCentre(): void {\n        if (this.UserCountry != \"\") {\n            this.setCountryCenterInterval = window.setTimeout(() => {\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\n                if (this.Map && this.jobLocationData.length == 0) {\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\n                    this.Map.setZoom(5);\n                } else {\n                    const bounds = new google.maps.LatLngBounds();\n                    this.jobLocationData.forEach((x: JobLocationDetailsModal) => {\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\n                    });\n                    if (this.Map && bounds) {\n                        this.Map.fitBounds(bounds);\n                        this.Map.setCenter(bounds.getCenter()); \n                        this.Map.setZoom(5);        \n                    }\n            \n                }\n            }, 500);\n        }\n    }\n\n    private setZoomLevel(): void {\n        if (this.jobLocationData.length == 0) {\n            this.setCountryCentre();\n        } else {\n            //this.zoomLevel = 10;\n        }\n    }\n\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\n        infoWindow.open();\n    }\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\n        infoWindow.close();\n    }\n\n    public closeViewClicked(): void {\n        this.clickViewActive = false;\n    }\n\n    public toggleMapView(): void {\n        this.toogleMap = !this.toogleMap;\n    }\n\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\n        window.scrollTo(0, 0);\n        this.opendedJobDetails = jobLocation;\n        if ((this.opendedJobDetails.CountryCode === 'USA') || ((this.opendedJobDetails.CountryCode === 'US'))) {\n            this.UoM = 'Gallons';\n        }\n        else {\n            this.UoM = 'Litres';\n        }\n        this.clickViewActive = true;\n        this.toogleMap = true;\n    }\n\n    public mapReady(map: any): void {\n        this.Map = map;\n        this.setCountryCentre();\n    }\n\n    public setCenterMap($event): void {\n        if (this.UserCountry && !this.jobLocationData.length) {\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\n            if (this.Map) {\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\n                this.Map.setZoom(5);\n            }\n        }\n    }\n}","\n\n<div class=\"animated clearboth row\" [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\n    <div [ngClass]=\"clickViewActive  ? 'col-sm-8 ' : 'col-sm-12'\">\n       \n        <div class=\"pr\">\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\n            <div id=\"status-legends\" class=\"well pa0\">\n                <div class=\"border-b\">\n                    <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\n                        <img [src]=\"mustGoUrl\" data-statusid=\"11\">\n                        Must Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\n                        Should Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"couldGoUrl\" data-statusid=\"1\">\n                        Could Go\n                    </div>\n                </div>\n                <div class=\"border-b\">\n                    <div class=\"db pa5\">\n                        <img [src]=\"noDlrUrl\" data-statusid=\"1\">\n                        Unplanned\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\n            <agm-map [zoom]=\"zoomLevel\" style=\"height: 60vh;\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\">\n                <ng-container *ngFor=\"let jobLocation of jobLocationDataForMap\">\n                    <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\" [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }' (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\" (markerClick)=\"onInfoViewClick(jobLocation)\">\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\n                            <div>\n                                <p><strong>{{ jobLocation.JobName}}</strong></p>\n                                <!--<p>{{jobLocation.CustomerName}}</p>-->\n                            </div>\n                        </agm-info-window>\n                    </agm-marker>\n                </ng-container>\n            </agm-map>\n        </div>\n\n    </div>\n    <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\n        <div class=\"dib full-width pr well pa15 pt10\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                  \n                    <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i> </a>\n                </div>\n            </div>\n           \n            <div class=\"row\">\n                <div class=\" col-sm-12 driver_details\">\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                                <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                            </span>\n                        </p>\n                    </div>\n                    <div class=\"job-location\">\n                        <p class=\"mb0\">\n                            <span class=\"address1\">\n                                <i class=\"fas fa-map-marker-alt\"></i>  {{this.opendedJobDetails.Address}}, {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}}, {{this.opendedJobDetails.ZipCode}}\n                            </span>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MapViewComponent implements OnInit {\n  @Input() SelectedCountryId: any\n  public viewType = 1;\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n  }\n  public changeViewType(type: any): void {\n    localStorage.setItem('viewType', <string>type);\n    this.viewType = type;\n  }\n\n  public navigate(): void {\n    this.router.navigate([]).then(result => {  window.open('/Buyer/Job/BuyerWallyBoard?viewTypeFromDashboard='+ this.viewType, '_blank'); });\n  }\n}\n","<div class=\"map-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Wally Board</h4>\n                    </div>\n                    <div class=\"dib border radius-capsule shadow-b ml20\" >\n                        <div class=\"btn-group btn-filter\">\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"1\" [checked]=\"viewType==1\">\n                            <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\n                            <input class=\"hide-element\" type=\"radio\" [name]=\"'viewType'\" [value]=\"2\" [checked]=\"viewType==2\">\n                            <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\n                        </div>\n                    </div>\n                    <!-- <div class=\"d-inline-block ml20\">\n                          <div class=\"form-group input-search\">\n                            <i class=\"fas fa-search form-control-search\"></i>\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n                          </div>\n                    </div> -->\n                </div>\n                \n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body\">\n            <app-location-map *ngIf=\"viewType==1\" [SelectedCountryId]=\"SelectedCountryId\"></app-location-map>\n            <app-loads-map *ngIf=\"viewType==2\" [SelectedCountryId]=\"SelectedCountryId\"></app-loads-map>\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\nimport { DashboardService } from '../dashboard.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n  dtOptions: any = {};\n  dtTrigger: Subject<any> = new Subject();\n  public IsLoading: boolean = false;\n  @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n  Messages: any;\n  constructor(private dashbpardSer: DashboardService, private router: Router) { }\n\n  ngOnInit() {\n    this.initializeGrid();\n    this.getMessages();\n  }\n  initializeGrid() {\n    let exportInvitedColumns = { columns: ':invisible' };\n    this.dtOptions = {\n      paging: false,\n      bSort: false,\n      bInfo : false,\n      pagingType: 'first_last_numbers',\n      pageLength: 10,\n      lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n    };\n  }\n  public getMessages() {\n    this.IsLoading = true;\n    if ((this.datatableElement && this.datatableElement.dtInstance)) {\n      this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n    }\n    this.dashbpardSer.GetMessages().subscribe(data => {\n      this.IsLoading = false;\n      this.Messages = data;\n    });\n  }\n  public navigate(): void {\n    this.router.navigate([]).then(result => { window.open('/Messages/Mailbox', '_blank'); });\n  }\n}\n","<div class=\"message-view-contanier\">\n    <div class=\"well\">\n        <div class=\"well-header\">\n            <div class=\"row\">\n                <div class=\"col-sm-9 form-row align-items-center\">\n                    <div class=\"d-inline-block\">\n                        <h4 class=\"well-title\">Messages</h4>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-3 form-row align-items-center flex-row-reverse pr0\">\n                    <button class=\"btn btn-outline btn-primary btn-rnd\" (click)=\"navigate()\">View More</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"well-body padding-8\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"table-wrapper\">\n                        <div *ngIf=\"IsLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\">\n                            <span class=\"spinner-dashboard pa\"></span>\n                        </div>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th>From</th>\n                                    <th>Message</th>\n                                    <th>Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <ng-container>\n                                    <tr *ngFor=\"let item of Messages\">\n                                        <td>{{item?.SenderName }}</td>\n                                        <td>{{item?.Subject}}</td>\n                                        <td>{{item?.MessageDeliveredTime}}</td>\n                                    </tr>\n                                    <tr *ngIf=\"Messages && Messages.length==0\">\n                                        <td colspan=\"3\">\n                                            <div class=\"row align-items-center\" style=\"height: 175px;\">\n                                                <div class=\"col-12 align-items-center text-center\">\n                                                    <i class=\"fab fa-searchengin fa-5x\"></i>\n                                                    <h4>No Message to show</h4>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]}