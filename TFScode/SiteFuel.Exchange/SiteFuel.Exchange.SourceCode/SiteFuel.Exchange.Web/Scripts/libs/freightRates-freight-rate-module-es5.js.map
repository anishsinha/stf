{"version":3,"sources":["webpack:///src/app/company-addresses/region/service/region.service.ts","webpack:///src/app/freightRates/Create/create-freight-rate-rules-component.ts","webpack:///src/app/freightRates/Create/create-freight-rate-rules-component.html","webpack:///src/app/freightRates/Master/master.component.ts","webpack:///src/app/freightRates/Master/master.component.html","webpack:///src/app/freightRates/Models/createFreightRateRules.ts","webpack:///src/app/freightRates/Models/viewFreightRateRules.ts","webpack:///src/app/freightRates/Services/freight-rate-rules.service.ts","webpack:///src/app/freightRates/View/view-freight-rate-rules.component.html","webpack:///src/app/freightRates/View/view-freight-rate-rules.component.ts","webpack:///src/app/freightRates/freight.rate.module.ts","webpack:///src/app/shared-components/Freight/freight.component.html","webpack:///src/app/shared-components/Freight/freight.component.ts"],"names":["httpOptions","headers","RegionService","httpClient","createUrl","updateUrl","deleteUrl","getRegionsUrl","getSourceRegionsUrl","createSourceRegionUrl","updateSourceRegionUrl","deleteSourceRegionUrl","getJobsUrl","getDriversUrl","getDispatchersUrl","getTrailersUrl","stateUrl","shiftByDriverUrl","getRegionSchedulsbyRegionIdUrl","getRouteByReginId","getCompanyShiftsUrl","getRegionDriversUrl","addDriverScheduleUrl","addRegionScheduleUrl","updateDriverScheduleUrl","deleteDriverScheduleUrl","getCarriersUrl","getRegionShiftMapping","getCarrierRegionsUrl","getSelectedCarriersByRegionUrl","isSourceRegionAvailableUrl","getProductTypeUrl","getFuelProductUrl","isPublishedDRUrl","onLoadingChanged","get","pipe","handleError","regiondId","regionId","region","post","name","id","countryId","driverIds","scheduleType","routeId","model","data","date","postModel","SelectedDate","driverScheduleMappingViewModels","productIds","fuelTypeIds","providedIn","CreateFreightRateRules","freightRateRulesService","http","cdr","_fb","IsEditable","dtOptions","DtTrigger","IsLoading","IsGeneratedSurchargeTable","SingleSelectSettingsById","viewType","RuleMode","freightRateRuleType","Range","decimalSupportedRegx","intGreaterThanZeroRegx","SelectedFuelGroups","disableInputControls","exportInvitedColumns","columns","dom","aaSorting","orderable","buttons","extend","exportOptions","title","orientation","pagingType","pageLength","lengthMenu","singleSelection","closeDropDownOnSelection","idField","textField","enableCheckAll","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","MultiSelectSettingsById","onSelectedFreightRateRuleId","subscribe","s","stringify","JSON","parse","RuleId","Mode","FreightRateRuleType","localStorage","getItem","Number","removeItem","createForm","P2P","next","undefined","freightComponent","isLoadingSubject","IsLoaded","detectChanges","getFreightRateDetailUrl","fr","frModel","FrModel","companyIds","CustomerIds","length","forEach","push","CarrierIds","getSupplierCustomersUrl","getTableTypesUrl","getFuelGroupsUrl","FuelGroupType","join","getTerminalsAndBulkPlantsUrl","getCustomerJobsUrl","sourceRegionInput","TableType","toString","CustomerId","CarrierId","TerminalAndBulkPlans","SourceRegionIds","Customers","Tabletypes","Carriers","FuelGroups","SourceRegion","Locations","requiredCalls","result","TableTypeList","CustomerList","JobIds","LocationList","CarrierList","FuelGroupsList","SourceRegionList","TerminalsAndBulkPlants","TerminalsAndBulkPlantList","Edit","datatableElement","dtInstance","then","destroy","_fr","rForm","setValue","Id","rcForm","Name","filter","x","Master","IsMasterSelected","IsCustomerSelected","IdInComparer","IsCarrierSelected","controls","IdInComparers","IsSourceRegionSelected","StartDate","format","EndDate","FuelGroupIds","value","rerender_destroy","Status","FreightRateFuelGroups","clear","LoadFuelGroupTable","FreightRateRouteTables","rTable","ftable","groupBy","StartQuantity","res","LoadRouteTable","at","patchValue","FreightRateRangeTables","generateRangeTable","FreightRatePtoPTables","generateP2PTable","rerender_trigger","list","keyGetter","map","Map","item","key","collection","set","array","f","groups","o","group","Object","keys","fRange","groupByWithMultipleProperty","TerminalAndBulkPlantName","LocationName","LocationAddress","LaneID","AssumedMiles","sameName","LoadP2PTable","ShowMessage","UptoQuantity","LoadRangeTable","IsLast","rt","control","TerminalId","BulkPlantId","JobId","required","pattern","IsLaneRequired","LoadGroupInP2PTable","LoadGroupInRangeTable","fg","FuelGroupId","FuelGroupName","RateValue","EndQuantity","LoadGroupInRouteTable","Route","LoadGroupInFuelGroupTable","selectedFuelGroup","FreightRateCalcPrefFuelGroupId","FreightRateCalcPreferenceType","MixLoadMinValue","MinQuantity","ruleType","RuleType","FuelGroupTable","RangeTable","refreshUI","Date","toDate","AddRemoveValidations","RangeStartValue","RangeEndValue","RangeInterval","onTableTypeSelect","Customer","formGroup","values","disable","disableAllControl","markAsTouched","markFormGroupTouched","requiredControls","notRequiredControls","ctrl","setValidators","updateValueAndValidity","clearValidators","clearAllValidations","freightTableStatus","Draft","msgerror","TableName","valid","Save","ValidateOnSubmit","selectedFuelGroups","ClearDuplicateUpToQuantity","table","fgTable","fgtableArray","findIndex","rangeTable","isExist","IsGroupExist","flag","rT","i","includes","setErrors","DuplicateEntry","errors","saveModel","gList","fgT","j","IsDuplicateUpToQuantity","updateFreightRate","response","ServiceResponse","StatusCode","message","msgsuccess","changeToViewTab","StatusMessage","createFreightRate","Published","onSelectedTabChanged","unsubscribe","otherArray","current","other","ctrlName","abstractControl","GetControlNames","index","UpperRowEndQuantity","SameRowEndQuantity","InvalidRange","isNaN","onStartQuantityLostFocus","event","srNmber","CreateRangeTable","insert","start","stop","step","GenerateRange","Math","round","sortForTerminalsAndBulkPlants","a","b","trbls","sort","sLocations","locs","startsWith","split","concat","Code","end","output","textInput","test","upTo","addGroupInRangeTable","generateTable","$event","AddRange","AddFuelGroup","CreateFuelGroupTable","addFuelGroupTable","removeAt","n","rows","firstRow","frs","str","replace","isNumber","frtVM","r","frP2P","row","terminalInfo","bulkPlantInfo","trim","locationInfo","LaneId","fp2p","onSubmit","RuleTypeTypeChange","getOutput","onFuelGroupChange","onImportClick","onCancel","selector","templateUrl","styleUrls","MasterComponent","router","changeViewType","FreightRateFuelGroupViewModel","FreightRateRouteTableViewModel","FreightRatePtoPTable","FreightRateRangeTableViewModel","FreightRateViewModel","FreightPricingRulesViewModel","TableTypes","SourceRegions","Standard","StatusId","FreightRateModel","FreightRateRuleTypes","FreightRateInputModel","FreightRateGridModel","FreightRateRulesService","createFreightRateUrl","updateFreightRateUrl","archiveFreightRateUrl","getFreightRateSummaryUrl","getFreightRateTableForViewUrl","getFreightRateRuleTypesUrl","fsm","customerId","freightRateId","ViewFreightRateRules","fb","regionService","fuelsurchargeService","dtTrigger","SinlgeselectSettingsById","MultiSelectSettingsByGroup","FreightRateList","minDate","maxDate","popoverTitle","popoverMessage","cancelClicked","confirmClicked","setFullYear","getFullYear","CounrtyId","getData","MultiselectSettingsById","text","searchPlaceholderText","primaryKey","labelKey","enableSearchFilter","badgeShowLimit","getTableTypes","getFreightRateRuleTypes","viewFreightRateForm","initializeFreightRateDatatableGrid","datatableInventoryRerender","getFreightRateGridDetails","ruleId","mode","operation","Frmodel","fromDate","isArchived","archiveFreightRate","filterGrid","getSupplierCustomers","getCarriers","getSourceRegions","onCarriersOrCustomersChange","selectedTableType","FreightRateRuleTypeList","carriers","tableType","customerIds","carrierIds","selectedCustomers","selectedCarriers","selectedSourceRegions","getTerminalsAndBulkPlants","getTerminalsBulkPlant","$","DataTable","clearForm","reset","input","selectedFreightRateRuleTypes","selectedTableTypes","selectedTerminalAndBulkPlants","IsArchived","freightRateRuleTypeIds","FreightRateRuleTypeIds","tableTypeIds","TableTypeIds","sourceRegionIds","selectedTerminalIds","c","terminalIds","TerminalIds","selectedBulkPlants","bulkPlantIds","BulkPlantIds","exportColumns","route","path","component","FreightRateRulesModule","forChild","declarations","imports","FreightComponent","externalMappingsService","onGenerateTable","onGenerateFuelGroup","SelectedTerminalsAndBulkPlants","SelectedFiles","IsShowBulkUploadPopup","MaxFileUploadSize","confirmButtonText","cancelButtonText","MinStartDate","MaxStartDate","MinToDate","MinFromDate","CountryId","dt","getFuelGroups","PricingRuleType","valueChanges","prev","CustomerChange","LocationChange","CarrierChange","SourceRegionChange","TerminalsAndBulkPlantsChange","FuelGroupsChange","change","currentValue","previousValue","Fsmodel","TableTypeId","fgt","Carrier","getCustomerJobs","emit","ids","modeChangePublishORdraftValidators","ValidateOnGenearteRow","statusId","fuelGroupType","files","document","createElement","columnName","template","rep","cols","repeat","blob","Blob","objectUrl","URL","createObjectURL","href","download","click","revokeObjectURL","fileName","basename","pop","pos","lastIndexOf","slice","formData","FormData","file","isValidFile","append","reader","FileReader","readAsText","onload","e","CloseBulkUploadPopup","nativeElement","isValid","extension","getExtension","toLowerCase","size","setStartDate","setEndDate","FuelGroupTypeChange","changeDetection","OnPush","encapsulation","None"],"mappings":"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","file":"freightRates-freight-rate-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Region, RegionModel,SourceRegion,SourceRegionModel, CarrierRegionModel, TfxCarrierDropdownDisplayItem } from '../model/region';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { RouteInformationModel } from 'src/app/carrier/models/location';\r\nimport { RegionScheduleViewModel } from 'src/app/driver/models/regionSchedule';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RegionService extends HandleError {\r\n\r\n    private createUrl = '/Region/Create';\r\n    private updateUrl = '/Region/Update';\r\n    private deleteUrl = '/Region/Delete?id=';\r\n    private getRegionsUrl = '/Region/GetRegions';\r\n    private getSourceRegionsUrl = '/Region/GetSourceRegions';\r\n    private createSourceRegionUrl = '/Region/CreateSourceRegion';\r\n    private updateSourceRegionUrl = '/Region/UpdateSourceRegion';\r\n    private deleteSourceRegionUrl = '/Region/DeleteSourceRegion?id=';\r\n    private getJobsUrl = '/Region/GetJobs';\r\n    private getDriversUrl = '/Region/GetDrivers';\r\n    private getDispatchersUrl = '/Region/GetDispatchers';\r\n    private getTrailersUrl = '/Region/GetTrailers';\r\n    private stateUrl = '/Settings/Profile/GetStatesEx?countryId=';\r\n    private shiftByDriverUrl = '/Freight/GetShiftByDrivers?driverList=';\r\n    private getRegionSchedulsbyRegionIdUrl = '/Freight/getRegionShiftSchedule?regionId=';\r\n    private getRouteByReginId = '/ScheduleBuilder/GetRouteInfoDetails?regionId=';\r\n    private getCompanyShiftsUrl = '/Region/GetCompanyShifts';\r\n    private getRegionDriversUrl = '/Region/GetRegionDrivers?regionId=';\r\n    private addDriverScheduleUrl = '/Region/AddDriverSchedule';\r\n    private addRegionScheduleUrl = '/Region/AddRegionSchedule';\r\n    private updateDriverScheduleUrl = '/Region/updateDriverSchedule';\r\n    private deleteDriverScheduleUrl = '/Region/DeleteDriverSchedules';\r\n    public getCarriersUrl = '/Region/GetCarriers';\r\n    private getRegionShiftMapping = '/Region/GetResionShiftSchedulesDetails?regionId=';\r\n    private getCarrierRegionsUrl = '/Carrier/Freight/GetCarrierRegions';\r\n    private getSelectedCarriersByRegionUrl = '/Carrier/ScheduleBuilder/GetSelectedCarriersByRegion?regionId=';\r\n    private isSourceRegionAvailableUrl = '/Validation/IsSourceRegionExist?name=';\r\n    private getProductTypeUrl = '/Supplier/FuelGroup/GetProductTypes';\r\n    private getFuelProductUrl = '/Region/GetMstFuelProducts';\r\n    private isPublishedDRUrl = '/Region/IsPublishedDR?productIds=';\r\n\r\n    onLoadingChanged: BehaviorSubject<any>;\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onLoadingChanged = new BehaviorSubject(false);\r\n    }\r\n\r\n    getJobs(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getJobsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getJobs', [])));\r\n    }\r\n\r\n    getDrivers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDriversUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getRegionDrivers(regiondId): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getRegionDriversUrl + regiondId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDrivers', [])));\r\n    }\r\n    getCompanyShifts(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCompanyShiftsUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCompanyShifts', [])));\r\n    }\r\n    getRoutesByRegion(regionId: number): Observable<RouteInformationModel[]> {\r\n        return this.httpClient.get<RouteInformationModel[]>(this.getRouteByReginId + regionId)\r\n            .pipe(catchError(this.handleError<RouteInformationModel[]>('GetRouteInfoDetails', [])));\r\n    }\r\n\r\n    getDispatchers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getDispatchersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getDispatchers', [])));\r\n    }\r\n\r\n    getTrailers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getTrailersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getTrailers', [])));\r\n    }\r\n\r\n    getRegions(): Observable<RegionModel> {\r\n        return this.httpClient.get<RegionModel>(this.getRegionsUrl)\r\n            .pipe(catchError(this.handleError<RegionModel>('getRegions', null)));\r\n    }\r\n\r\n    createRegion(region: Region): Observable<Region> {\r\n        return this.httpClient.post<Region>(this.createUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('createRegion', region)));\r\n    }\r\n\r\n    updateRegion(region: Region): any {\r\n        return this.httpClient.post<Region>(this.updateUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<Region>('updateRegion', region)));\r\n    }\r\n\r\n    getSourceRegions(): Observable<SourceRegionModel> {\r\n        return this.httpClient.get<SourceRegionModel>(this.getSourceRegionsUrl)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('getSourceRegions', null)));\r\n    }\r\n\r\n    createSourceRegion(region: SourceRegion): Observable<SourceRegion> {\r\n        return this.httpClient.post<SourceRegion>(this.createSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('createSourceRegion', region)));\r\n    }\r\n\r\n    isSourceRegionAvailable(name: string, id: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isSourceRegionAvailableUrl + name + \"&id=\" + id)\r\n            .pipe(catchError(this.handleError<SourceRegionModel>('isSourceRegionAvailable', null)));\r\n    }\r\n\r\n    updateSourceRegion(region: SourceRegion): any {\r\n        return this.httpClient.post<SourceRegion>(this.updateSourceRegionUrl, region, httpOptions)\r\n            .pipe(catchError(this.handleError<SourceRegion>('updateSourceRegion', region)));\r\n    }\r\n\r\n    deleteRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteRegion', id)));\r\n    }\r\n\r\n    deleteSourceRegion(id: string): any {\r\n        return this.httpClient.post<any>(this.deleteSourceRegionUrl + id, id)\r\n            .pipe(catchError(this.handleError<any>('deleteSourceRegion', id)));\r\n    }\r\n\r\n    getStates(countryId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.stateUrl + countryId)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getStates', [])));\r\n    }\r\n\r\n    //for calender\r\n    getShiftByDrivers(driverIds: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.shiftByDriverUrl + driverIds + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getShiftByDrivers', [])));\r\n    }\r\n\r\n    getSchedulesByRegion(regionId: any, scheduleType: any): Observable<any> {\r\n        return this.httpClient.get<any>(this.getRegionSchedulsbyRegionIdUrl + regionId + \"&scheduleType=\" + scheduleType)\r\n            .pipe(catchError(this.handleError<any>('getSchedulesByRegion', [])));\r\n    }\r\n\r\n    getRegionSchedule(regionId: string, routeId: string): Observable<RegionScheduleViewModel[]> {\r\n        return this.httpClient.get<RegionScheduleViewModel[]>(this.getRegionShiftMapping + regionId + \"&routeId=\" + routeId)\r\n            .pipe(catchError(this.handleError<any>('getRegionSchedule', [])));\r\n    }\r\n\r\n    addDriverSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addDriverScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', model)));\r\n    }\r\n\r\n    addRegionSchedule(model: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.addRegionScheduleUrl, model, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addRegionSchedule', model)));\r\n    }\r\n\r\n    updateDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { model: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.updateDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('addDriverSchedule', postModel)));\r\n    }\r\n\r\n    deleteDriverSchedule(data: any, date: any): Observable<any> {\r\n        var postModel = { driverScheduleMappingViewModels: data, SelectedDate: date};\r\n        return this.httpClient.post<any>(this.deleteDriverScheduleUrl, postModel, httpOptions)\r\n            .pipe(catchError(this.handleError<any>('deleteDriverSchedule', postModel)));\r\n    }\r\n\r\n    getCarriers(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<DropdownItem[]>(this.getCarriersUrl)\r\n            .pipe(catchError(this.handleError<DropdownItem[]>('getCarriers', [])));\r\n    }\r\n    getCarrierRegions(): Observable<CarrierRegionModel[]> {\r\n        return this.httpClient.get<any>(this.getCarrierRegionsUrl)\r\n            .pipe(catchError(this.handleError<any>('getCarrierRegions', null)));\r\n    }\r\n\r\n    getSelectedCarriersByRegion(regionId: string): Observable<TfxCarrierDropdownDisplayItem[]> {\r\n        return this.httpClient.get<any>(this.getSelectedCarriersByRegionUrl + regionId)\r\n            .pipe(catchError(this.handleError<any>('getSelectedCarriersByRegion', null)));\r\n    }\r\n\r\n    getProductType(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getProductTypeUrl)\r\n            .pipe(catchError(this.handleError<any>('getProductType', [])));\r\n    }\r\n    getFuelProducts(): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFuelProductUrl)\r\n            .pipe(catchError(this.handleError<any>('getFuelProducts',[])));\r\n    }\r\n\r\n    isPublishedDR(productIds: any, fuelTypeIds: string): Observable<any> {\r\n        return this.httpClient.get<any>(this.isPublishedDRUrl + productIds + \"&fuelTypeIds=\" + fuelTypeIds)\r\n            .pipe(catchError(this.handleError<any>('isPublishedDR', null)));\r\n    }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { FreightRateRulesService } from '../Services/freight-rate-rules.service'\r\nimport { FreightRateViewModel, FreightRateFuelGroupViewModel, FreightRateRouteTableViewModel, FreightRateRangeTableViewModel, FreightRatePtoPTable } from '../Models/createFreightRateRules'\r\nimport { Subject, forkJoin, merge } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FreightComponent } from '../../shared-components/Freight/freight.component';\r\nimport { BOOL_TYPE } from '@angular/compiler/src/output/output_ast';\r\nimport { FreightRateRuleType, FreightTableStatus, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\n\r\n\r\n@Component({\r\n    selector: 'app-create-freight-rate-rules',\r\n    templateUrl: './create-freight-rate-rules-component.html',\r\n    styleUrls: ['./create-freight-rate-rules-component.css']\r\n})\r\nexport class CreateFreightRateRules implements OnInit {\r\n    @ViewChild(FreightComponent) public freightComponent: FreightComponent;\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public IsEditable: boolean = true;\r\n    public rForm: FormGroup;\r\n    public fgTemp: FormGroup;\r\n    public fgTempG: FormGroup;\r\n    public rcFormRange: FormGroup;\r\n    public dtOptions: any = {};\r\n    public DtTrigger: Subject<any> = new Subject();\r\n    public IsLoading: boolean = false;\r\n    public IsGeneratedSurchargeTable = false;\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public ServiceResponse: any;\r\n    public viewType = 1;\r\n    public RuleId?: number;\r\n    public RuleMode: string=\"CREATE\";\r\n    public freightRateRuleType: number = FreightRateRuleType.Range;\r\n    public FrModel: FreightRateViewModel;\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public intGreaterThanZeroRegx = /^[1-9][0-9]*$/;\r\n\r\n    public SelectedFuelGroups: DropdownItem[]=[]; // for mixed fuel group.\r\n   \r\n    public disableInputControls: boolean = false;\r\n\r\n    constructor(\r\n        private freightRateRulesService: FreightRateRulesService,\r\n        private http: HttpClient, \r\n        private cdr: ChangeDetectorRef,\r\n        private _fb: FormBuilder) { }\r\n\r\n    ngOnInit() {\r\n        let exportInvitedColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            aaSorting: [],\r\n            orderable: false,\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportInvitedColumns },\r\n                { extend: 'csv', title: 'Freight Rate P2P', exportOptions: exportInvitedColumns },\r\n                { extend: 'pdf', title: 'Freight Rate P2P', orientation: 'landscape', exportOptions: exportInvitedColumns },\r\n                { extend: 'print', exportOptions: exportInvitedColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.freightRateRulesService.onSelectedFreightRateRuleId.subscribe(s => {\r\n            if (s) {\r\n                let stringify = JSON.parse(s);\r\n                this.RuleId = stringify.RuleId;\r\n                this.RuleMode = stringify.Mode;\r\n                this.freightRateRuleType = stringify.FreightRateRuleType;\r\n            }\r\n        })\r\n\r\n        // with order page integration\r\n        let id = localStorage.getItem(\"FreightRateRuleId\");\r\n        if (id && +id > 0) {\r\n            this.RuleId = Number(id);\r\n            this.RuleMode = \"VIEW\";\r\n            localStorage.removeItem(\"FreightRateRuleId\");\r\n        }\r\n\r\n        this.createForm(this.freightRateRuleType);       \r\n    }\r\n\r\n    ngAfterViewInit() {        \r\n        if (this.freightRateRuleType == FreightRateRuleType.P2P) {\r\n            this.DtTrigger.next();\r\n        }\r\n        if (this.RuleId == null || this.RuleId == undefined) return;\r\n\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        this.freightComponent.IsLoaded = false;\r\n        this.IsLoading = true;\r\n        this.cdr.detectChanges();\r\n        this.http.get(this.freightRateRulesService.getFreightRateDetailUrl + this.RuleId).pipe(\r\n            map(fr => {\r\n                const frModel = fr as FreightRateViewModel;\r\n                return frModel;\r\n            }),\r\n            mergeMap(frModel => {                \r\n                this.FrModel = frModel;\r\n                let companyIds: number[] = [];\r\n                if (this.FrModel.CustomerIds.length > 0) {\r\n                    this.FrModel.CustomerIds.forEach(s => companyIds.push(s));\r\n                }\r\n                if (this.FrModel.CarrierIds.length > 0) {\r\n                    this.FrModel.CarrierIds.forEach(s => companyIds.push(s));\r\n                }\r\n                var getSupplierCustomersUrl = \"/FuelSurcharge/GetSupplierCustomers\";\r\n                var getTableTypesUrl = \"/FuelSurcharge/GetTableTypes\";\r\n                var getCarriersUrl = '/Region/GetCarriers';\r\n                var getFuelGroupsUrl = \"/FuelGroup/GetFuelGroups?fuelGroupType=\" + this.FrModel.FuelGroupType + \"&companyIds=\" + companyIds.join(',')\r\n                var getSourceRegionsUrl = \"/FuelSurcharge/GetSourceRegionsAsync\";\r\n                var getTerminalsAndBulkPlantsUrl = \"/FuelSurcharge/GetTerminalsAndBulkPlantsAsync?regionIds=\";\r\n                var getCustomerJobsUrl = \"/FreightRate/GetCustomerJobs?customerId=\" + this.FrModel.CustomerIds.join(',');\r\n\r\n                var sourceRegionInput = new SourceRegionInputModel();\r\n                sourceRegionInput.TableType = this.FrModel.TableType.toString();\r\n                sourceRegionInput.CustomerId = this.FrModel.CustomerIds;\r\n                sourceRegionInput.CarrierId = this.FrModel.CarrierIds;\r\n                \r\n                const TerminalAndBulkPlans = this.http.get(getTerminalsAndBulkPlantsUrl + frModel.SourceRegionIds.join(','))\r\n                const Customers = this.http.get(getSupplierCustomersUrl);\r\n                const Tabletypes = this.http.get(getTableTypesUrl);\r\n                const Carriers = this.http.get(getCarriersUrl);\r\n                const FuelGroups = this.http.get(getFuelGroupsUrl);\r\n                const SourceRegion = this.http.post(getSourceRegionsUrl, sourceRegionInput);\r\n                const Locations = this.http.get(getCustomerJobsUrl);\r\n\r\n                let requiredCalls = [Tabletypes, Customers, Carriers, FuelGroups, SourceRegion, TerminalAndBulkPlans];\r\n\r\n                if (this.FrModel.FreightRateRuleType == FreightRateRuleType.P2P) {\r\n                    requiredCalls = [Tabletypes, Customers, Carriers, FuelGroups, SourceRegion, TerminalAndBulkPlans, Locations];\r\n                }                \r\n                return forkJoin(requiredCalls);\r\n            })).subscribe(result => {\r\n                this.IsLoading = false;\r\n                this.freightComponent.TableTypeList = result[0] as DropdownItem[];\r\n                if (this.FrModel.CustomerIds != null && this.FrModel.CustomerIds.length > 0)\r\n                    this.freightComponent.CustomerList = result[1] as DropdownItem[];\r\n\r\n                if (this.FrModel.JobIds != null && this.FrModel.JobIds.length > 0)\r\n                    this.freightComponent.LocationList = result[6] as DropdownItem[];\r\n\r\n                if (this.FrModel.CarrierIds != null && this.FrModel.CarrierIds.length > 0)\r\n                    this.freightComponent.CarrierList = result[2] as DropdownItem[];\r\n\r\n                this.freightComponent.FuelGroupsList = result[3] as DropdownItem[];\r\n                this.freightComponent.SourceRegionList = result[4] as DropdownItem[];\r\n\r\n                if (this.FrModel.TerminalsAndBulkPlants != null && this.FrModel.TerminalsAndBulkPlants.length > 0)\r\n                    this.freightComponent.TerminalsAndBulkPlantList = result[5] as DropdownItemExt[];\r\n\r\n                \r\n                this.Edit(this.FrModel);\r\n\r\n            });\r\n    }\r\n\r\n    rerender_destroy(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n                //this.DtTrigger.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    rerender_trigger(): void {\r\n        if ((this.datatableElement && this.datatableElement.dtInstance)) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                //dtInstance.destroy();\r\n                this.DtTrigger.next();\r\n            });\r\n        }\r\n    }   \r\n    private Edit(_fr: FreightRateViewModel) {\r\n        if (this.rForm) {\r\n            if (this.RuleMode != \"COPY\") {\r\n                this.rForm.get('RuleId').setValue(_fr.Id);\r\n                this.freightComponent.rcForm.get('TableName').setValue(_fr.Name);\r\n                this.IsEditable = false;\r\n            } else {\r\n                this.RuleId = null;\r\n            }\r\n            this.rForm.get('RuleType').setValue(_fr.FreightRateRuleType);\r\n            \r\n            this.freightComponent.rcForm.get('FuelGroupType').setValue(_fr.FuelGroupType);\r\n\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == _fr.TableType));\r\n\r\n            if (_fr.TableType != TableType.Master) this.freightComponent.IsMasterSelected = false;\r\n\r\n            if (_fr.CustomerIds != null && _fr.CustomerIds != undefined && _fr.CustomerIds.length > 0) {\r\n                this.freightComponent.IsCustomerSelected = true;\r\n                this.freightComponent.IsMasterSelected = false;\r\n                if (this.freightComponent.CustomerList.length > 0 && _fr.CustomerIds.length > 0)\r\n                    this.freightComponent.rcForm.get('Customers').setValue(this.freightComponent.CustomerList.filter(this.IdInComparer(_fr.CustomerIds)));\r\n\r\n            }\r\n\r\n\r\n            if (_fr.JobIds != null && _fr.JobIds != undefined && _fr.JobIds.length > 0) {\r\n               \r\n                if (this.freightComponent.LocationList.length > 0 && _fr.JobIds.length > 0)\r\n                    this.freightComponent.rcForm.get('Locations').setValue(this.freightComponent.LocationList.filter(this.IdInComparer(_fr.JobIds)));\r\n\r\n            }\r\n\r\n            if (_fr.CarrierIds != null && _fr.CarrierIds != undefined && _fr.CarrierIds.length > 0) {\r\n                this.freightComponent.IsCarrierSelected = true;\r\n                this.freightComponent.IsMasterSelected = false;\r\n                if (this.freightComponent.CarrierList.length > 0)\r\n                    this.freightComponent.rcForm.get('Carriers').setValue(this.freightComponent.CarrierList.filter(this.IdInComparer(_fr.CarrierIds)));\r\n\r\n            }\r\n\r\n            if (this.freightComponent.SourceRegionList != null && this.freightComponent.SourceRegionList != undefined && _fr.SourceRegionIds != null && _fr.SourceRegionIds != undefined && _fr.SourceRegionIds.length > 0) {\r\n                if (this.freightComponent.SourceRegionList.length > 0 && _fr.SourceRegionIds.length > 0)\r\n                    this.freightComponent.rcForm.get('SourceRegions').setValue(this.freightComponent.SourceRegionList.filter(this.IdInComparer(_fr.SourceRegionIds)));\r\n            }\r\n\r\n            if (this.freightComponent.TerminalsAndBulkPlantList != null && this.freightComponent.TerminalsAndBulkPlantList != undefined && _fr.TerminalsAndBulkPlants != null && _fr.TerminalsAndBulkPlants != undefined && _fr.TerminalsAndBulkPlants.length > 0) {\r\n                if (this.freightComponent.TerminalsAndBulkPlantList.length > 0 && _fr.TerminalsAndBulkPlants.length > 0) {\r\n                    this.freightComponent.rcForm.controls.TerminalsAndBulkPlants.setValue(this.freightComponent.TerminalsAndBulkPlantList.filter(this.IdInComparers(_fr.TerminalsAndBulkPlants)));\r\n                    this.freightComponent.IsSourceRegionSelected = true;\r\n                }\r\n            }\r\n\r\n            this.freightComponent.rcForm.get('StartDate').setValue(moment(_fr.StartDate).format('MM/DD/YYYY'));\r\n\r\n            if (_fr.EndDate != null && _fr.EndDate != undefined) {\r\n                this.freightComponent.rcForm.get('EndDate').setValue(moment(_fr.EndDate).format('MM/DD/YYYY'));\r\n            } \r\n\r\n            if (_fr.FuelGroupIds != null) {\r\n\r\n                if (this.freightComponent.FuelGroupsList.length > 0 && _fr.FuelGroupIds.length > 0) {\r\n                    this.freightComponent.rcForm.get('FuelGroups').setValue(this.freightComponent.FuelGroupsList.filter(this.IdInComparer(_fr.FuelGroupIds)));\r\n                    this.SelectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n                }\r\n\r\n            }\r\n\r\n            this.rerender_destroy();\r\n\r\n            this.freightComponent.rcForm.get('StatusId').setValue(_fr.Status);\r\n            if (_fr.FreightRateFuelGroups != null && _fr.FreightRateFuelGroups.length > 0) {\r\n\r\n                (<FormArray>this.rForm.get('FuelGroupTable')).clear();\r\n                (<FormArray>this.rForm.get('FuelGroupTable')).push(this.LoadFuelGroupTable(_fr));\r\n\r\n            }\r\n\r\n            if (_fr.FreightRateRouteTables != null && _fr.FreightRateRouteTables.length > 0) {\r\n\r\n                let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n                rTable.clear();\r\n                const ftable = _fr.FreightRateRouteTables;\r\n                this.groupBy(ftable, ftable => ftable.StartQuantity).forEach(res => {\r\n                    (<FormArray>this.rForm.get('RangeTable')).push(this.LoadRouteTable(false, res, _fr.Id))\r\n                });\r\n                rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n                this.freightComponent.IsLoaded = true;\r\n            }\r\n            else if (_fr.FreightRateRangeTables != null && _fr.FreightRateRangeTables.length > 0) {\r\n                this.generateRangeTable(_fr.FreightRateRangeTables);\r\n            }\r\n            else if (_fr.FreightRatePtoPTables != null && _fr.FreightRatePtoPTables.length > 0) {\r\n                this.generateP2PTable(_fr.FreightRatePtoPTables);\r\n            }\r\n\r\n            this.rerender_trigger();\r\n\r\n        }\r\n\r\n        if (this.RuleMode == \"VIEW\") {\r\n            this.disableInputControls = true;\r\n            this.freightComponent.disableInputControls = true;\r\n        }\r\n        \r\n    }\r\n\r\n    private groupBy(list, keyGetter) {\r\n        const map = new Map();\r\n        list.forEach((item) => {\r\n            const key = keyGetter(item);\r\n            const collection = map.get(key);\r\n            if (!collection) {\r\n                map.set(key, [item]);\r\n            } else {\r\n                collection.push(item);\r\n            }\r\n        });\r\n        return map;\r\n    }\r\n\r\n    private groupByWithMultipleProperty(array, f) {\r\n        let groups = {};\r\n        array.forEach(function (o) {\r\n            var group = JSON.stringify(f(o));\r\n            groups[group] = groups[group] || [];\r\n            groups[group].push(o);\r\n        });\r\n        return Object.keys(groups).map(function (group) {\r\n            return groups[group];\r\n        })\r\n    }\r\n\r\n    private generateP2PTable(fRange: FreightRatePtoPTable[], Id?: number) {\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n\r\n        if (fRange != null && fRange.length > 0) {\r\n\r\n            let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n            rTable.clear();\r\n            let ftable = this.groupByWithMultipleProperty(fRange, function (item) {\r\n                return [item.TerminalAndBulkPlantName, item.LocationName, item.LocationAddress, item.LaneID, item.AssumedMiles];\r\n            });\r\n            let sameName = \"\";\r\n            ftable.forEach(res => {                \r\n                (<FormArray>this.rForm.get('RangeTable')).push(this.LoadP2PTable(sameName == \"\" || sameName != res[0].TerminalAndBulkPlantName?true:false, res, Id));\r\n                sameName = res[0].TerminalAndBulkPlantName;\r\n            });\r\n            \r\n        }\r\n        this.freightComponent.ShowMessage = false;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        \r\n        \r\n        this.freightComponent.IsLoaded = true;\r\n    }\r\n\r\n\r\n    private generateRangeTable(fRange: FreightRateRangeTableViewModel[],Id?:number) {\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        if (fRange != null && fRange.length > 0) {\r\n\r\n            let rTable = (<FormArray>this.rForm.get('RangeTable'))\r\n            rTable.clear();\r\n            const ftable = fRange;\r\n            this.groupBy(ftable, ftable => ftable.UptoQuantity).forEach(res => {\r\n                (<FormArray>this.rForm.get('RangeTable')).push(this.LoadRangeTable(false, res, Id))\r\n            });\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n        }\r\n\r\n        this.freightComponent.ShowMessage = false;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        this.freightComponent.IsLoaded = true;\r\n    }\r\n\r\n    private LoadP2PTable(IsLast: boolean, rt: FreightRatePtoPTable[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            TerminalAndBulkPlantName: this._fb.control(rt[0].TerminalAndBulkPlantName),\r\n            TerminalId: this._fb.control(rt[0].TerminalId),\r\n            BulkPlantId: this._fb.control(rt[0].BulkPlantId),\r\n            LocationName: this._fb.control(rt[0].LocationName),\r\n            LocationAddress: this._fb.control(rt[0].LocationAddress),\r\n            JobId: this._fb.control(rt[0].JobId),\r\n            LaneID: this._fb.control(rt[0].LaneID),\r\n            AssumedMiles: this._fb.control(rt[0].AssumedMiles, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n            IsLaneRequired: this._fb.control(rt[0].IsLaneRequired),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInP2PTable(rt)\r\n        });\r\n    }\r\n    private LoadRangeTable(IsLast: boolean, rt: FreightRateRangeTableViewModel[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            UptoQuantity: this._fb.control(rt[0].UptoQuantity, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInRangeTable(rt)\r\n        });\r\n    }\r\n\r\n    private LoadGroupInP2PTable(rt: FreightRatePtoPTable[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                FuelGroupName: new FormControl(x.FuelGroupName),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    private LoadGroupInRangeTable(rt: FreightRateRangeTableViewModel[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    private LoadRouteTable(IsLast: boolean, rt: FreightRateRouteTableViewModel[], Id: number): FormGroup {\r\n        return this._fb.group({\r\n            Id: this._fb.control(Id),\r\n            StartQuantity: this._fb.control(rt[0].StartQuantity, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            EndQuantity: this._fb.control(rt[0].EndQuantity, [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n            IsLast: this._fb.control(IsLast),\r\n            group: this.LoadGroupInRouteTable(rt)\r\n        });\r\n    }\r\n\r\n    private LoadGroupInRouteTable(rt: FreightRateRouteTableViewModel[]): FormArray {\r\n        let fg = new FormArray([]);\r\n        rt.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                RateValue: new FormControl(x.RateValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n\r\n    private LoadFuelGroupTable(_fr: FreightRateViewModel): FormGroup {\r\n        if (_fr.FreightRateRuleType == FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                group: this.LoadGroupInFuelGroupTable(_fr)\r\n            });\r\n        }\r\n        else if (_fr.FreightRateRuleType == FreightRateRuleType.Range || _fr.FreightRateRuleType == FreightRateRuleType.P2P) {\r\n            let selectedFuelGroup: DropdownItem[] = [];\r\n            if (_fr.FreightRateCalcPrefFuelGroupId != null) {                \r\n                selectedFuelGroup=this.freightComponent.FuelGroupsList.filter(res => res.Id == _fr.FreightRateCalcPrefFuelGroupId);\r\n            }\r\n            return this._fb.group({\r\n                group: this.LoadGroupInFuelGroupTable(_fr),\r\n                FreightRateCalcPreferenceType: new FormControl(_fr.FreightRateCalcPreferenceType),\r\n                FuelGroups: new FormControl(selectedFuelGroup, [Validators.required]),\r\n                MixLoadMinValue: new FormControl(_fr.MixLoadMinValue, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            });\r\n        }\r\n    }\r\n\r\n    private LoadGroupInFuelGroupTable(_fr: FreightRateViewModel): FormArray {\r\n        let fg = new FormArray([]);\r\n        _fr.FreightRateFuelGroups.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.FuelGroupId),\r\n                MinQuantity: new FormControl(x.MinQuantity, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n\r\n\r\n\r\n    private createForm(ruleType: number) {\r\n        if (ruleType == FreightRateRuleType.Route) {\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range) {\r\n\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n            });\r\n        }\r\n\r\n        else if (ruleType == FreightRateRuleType.P2P) {\r\n\r\n            this.rForm = this._fb.group({\r\n                RuleId: new FormControl(''),\r\n                RuleType: new FormControl(ruleType),\r\n                FuelGroupTable: this._fb.array([\r\n                ]),\r\n                RangeTable: this._fb.array([\r\n                ])\r\n            });           \r\n        }\r\n\r\n    }\r\n\r\n    public changeViewType(value) {\r\n        this.viewType = value;\r\n    }\r\n    public RuleTypeTypeChange(ruleType: number): void {\r\n        this.freightRateRuleType = ruleType;\r\n        this.refreshUI(ruleType);\r\n    }\r\n    private refreshUI(ruleType: number) {\r\n        this.freightComponent.IsLoaded = false;\r\n        this.freightComponent.isLoadingSubject.next(true);\r\n        this.RuleId = null;\r\n        this.IsEditable = true;\r\n        this.createForm(ruleType);\r\n        this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Master));\r\n\r\n        this.freightComponent.SourceRegionList = [];\r\n        this.freightComponent.TerminalsAndBulkPlantList = [];\r\n        \r\n        this.freightComponent.rcForm.get('TableName').patchValue('');\r\n        this.freightComponent.rcForm.get('StartDate').setValue(moment(moment(new Date()).toDate()).format('MM/DD/YYYY'));\r\n        this.freightComponent.FuelGroupsList = [];\r\n        this.freightComponent.rcForm.get('FuelGroups').patchValue([]);\r\n\r\n        if (ruleType != FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeStartValue]);\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeEndValue]);\r\n            this.AddRemoveValidations(null, [this.freightComponent.rcForm.controls.RangeInterval]);\r\n        } else {\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeStartValue],null );\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeEndValue],null);\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.RangeInterval],null);\r\n        }\r\n\r\n        if (ruleType != FreightRateRuleType.P2P) {\r\n\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Master));\r\n            this.freightComponent.onTableTypeSelect({ Id: TableType.Master });           \r\n            this.DtTrigger.next();\r\n           \r\n        } else {\r\n            this.freightComponent.rcForm.get('TableTypes').setValue(this.freightComponent.TableTypeList.filter(x => x.Id == TableType.Customer));\r\n            this.freightComponent.onTableTypeSelect({ Id: TableType.Customer });\r\n        }\r\n        this.freightComponent.IsLoaded = true;\r\n        this.freightComponent.isLoadingSubject.next(false);\r\n        //this.rerender();\r\n    }\r\n\r\n    private disableAllControl(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.disable();\r\n            if (control.controls) {\r\n                this.disableAllControl(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();            \r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n    public onSubmit(freightTableStatus: number): void {\r\n        this.IsLoading = true;\r\n        if (freightTableStatus == FreightTableStatus.Draft) {\r\n            if (this.rForm.get('RuleId').value != \"\") {\r\n                Declarations.msgerror(\"Not allowed. \" + this.freightComponent.rcForm.get('TableName').value + \" is in edit mode.\", undefined, undefined);\r\n                this.IsLoading = false;\r\n                return;\r\n            }\r\n            this.clearAllValidations(this.rForm); // clear all validation\r\n            this.AddRemoveValidations([this.freightComponent.rcForm.controls.TableName], null); // minimum validation for draft\r\n            if (this.freightComponent.rcForm.valid) this.Save(freightTableStatus);\r\n            this.IsLoading = false;\r\n            return;\r\n           }\r\n        this.freightComponent.ValidateOnSubmit(freightTableStatus);\r\n\r\n        if (this.RuleMode == \"COPY\" && !this.freightComponent.rcForm.get('TableName').valid) {\r\n            this.freightComponent.ShowMessage = false;\r\n        }\r\n        // clear validation of last row and second column of RangeTable\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.Route) {\r\n            rTable.at(rTable.length - 1).get('EndQuantity').clearValidators();\r\n            rTable.at(rTable.length - 1).get('EndQuantity').updateValueAndValidity();\r\n            rTable.at(rTable.length - 1).get('EndQuantity').markAsTouched();\r\n        }\r\n        else if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations(null,\r\n                [this.freightComponent.rcForm.get('RangeStartValue'), this.freightComponent.rcForm.get('RangeEndValue'), this.freightComponent.rcForm.get('RangeInterval')]);\r\n\r\n            let selectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            if (selectedFuelGroups.length == 1) {\r\n                this.AddRemoveValidations(null,\r\n                    [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue'), (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n            }\r\n            this.ClearDuplicateUpToQuantity();\r\n        }\r\n        else if (rTable.length > 0 && (+this.rForm.get('RuleType').value) == FreightRateRuleType.P2P) {\r\n            let selectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            if (selectedFuelGroups.length == 1) {\r\n                this.AddRemoveValidations(null,\r\n                    [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue'), (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n            }\r\n        }\r\n\r\n        if (rTable.length > 0 &&\r\n            (+this.rForm.get('RuleType').value == FreightRateRuleType.P2P || +this.rForm.get('RuleType').value == FreightRateRuleType.Range) &&\r\n            (((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FreightRateCalcPreferenceType').value != 1) ||\r\n            (<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('MixLoadMinValue').value==0)) {\r\n\r\n            this.AddRemoveValidations(null,\r\n                [(<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('FuelGroups')]);\r\n        }\r\n        \r\n        this.markFormGroupTouched(this.rForm)\r\n\r\n        this.IsLoading = false;\r\n        if (this.rForm.valid && this.freightComponent.rcForm.valid && !this.freightComponent.ShowMessage) {\r\n            this.Save(freightTableStatus);\r\n        }\r\n\r\n\r\n    }\r\n    private IsGroupExist(table: string): number {\r\n        let fgTable = (<FormArray>this.rForm.get(table));\r\n        let fgtableArray = fgTable.value as any[];\r\n        return fgtableArray.findIndex((s) => s['group']);\r\n    }\r\n\r\n    private IsDuplicateUpToQuantity():boolean {\r\n        let UptoQuantity = [];\r\n        let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let isExist = this.IsGroupExist(\"RangeTable\");\r\n        let flag = false;\r\n        if (isExist != -1) {\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            for (let i = 0; i <= rT; i++) {\r\n\r\n                if (!UptoQuantity.includes(+(rangeTable.at(i).get('UptoQuantity').value))) {\r\n                    UptoQuantity.push(+(rangeTable.at(i).get('UptoQuantity').value));\r\n\r\n                } else {\r\n                    rangeTable.at(i).get('UptoQuantity').setErrors({ DuplicateEntry: true });\r\n                    rangeTable.at(i).get('UptoQuantity').markAsTouched();\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n    private ClearDuplicateUpToQuantity() {\r\n        let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let isExist = this.IsGroupExist(\"RangeTable\");\r\n        if (isExist != -1) {\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            for (let i = 0; i <= rT; i++) {\r\n                if (rangeTable.at(i).get('UptoQuantity')?.errors?.DuplicateEntry) {\r\n                    rangeTable.at(i).get('UptoQuantity').markAsTouched();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private Save(freightTableStatus: FreightTableStatus): void {\r\n        this.IsLoading = true;\r\n        \r\n        var saveModel = new FreightRateViewModel();\r\n        saveModel.Id = this.rForm.get('RuleId').value;\r\n        saveModel.Name = this.freightComponent.rcForm.get('TableName').value;\r\n        saveModel.Status = freightTableStatus;\r\n        saveModel.FuelGroupType = this.freightComponent.rcForm.get('FuelGroupType').value;\r\n        saveModel.FreightRateRuleType = this.rForm.get('RuleType').value;\r\n\r\n        saveModel.StartDate = this.freightComponent.rcForm.get('StartDate').value;\r\n\r\n        if (this.freightComponent.rcForm.get('EndDate').value != null && this.freightComponent.rcForm.get('EndDate').value != undefined) {\r\n            saveModel.EndDate = this.freightComponent.rcForm.get('EndDate').value;\r\n        }\r\n\r\n        saveModel.TableType = this.freightComponent.rcForm.get('TableTypes').value[0].Id;\r\n\r\n        \r\n        this.freightComponent.rcForm.get('Customers').value.forEach(res => saveModel.CustomerIds.push(res.Id));        \r\n        this.freightComponent.rcForm.get('Carriers').value.forEach(res => saveModel.CarrierIds.push(res.Id));\r\n\r\n        this.freightComponent.rcForm.get('SourceRegions').value.forEach(res => saveModel.SourceRegionIds.push(res.Id));\r\n\r\n        saveModel.TerminalsAndBulkPlants = this.freightComponent.rcForm.get('TerminalsAndBulkPlants').value;\r\n        let isExist = 0;\r\n        isExist = this.IsGroupExist(\"FuelGroupTable\");\r\n        if (isExist != -1) {\r\n            var gList = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('group'))).length - 1;\r\n            var fgT = (<FormArray>this.rForm.get('FuelGroupTable')).length - 1\r\n            for (let i = 0; i <= fgT; i++) {\r\n                for (let j = 0; j <= gList; j++) {\r\n                    let group = new FreightRateFuelGroupViewModel();\r\n                    group.FuelGroupId = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                    group.MinQuantity = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('MinQuantity').value;\r\n                    if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range || +this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n                        saveModel.MixLoadMinValue = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('MixLoadMinValue').value;\r\n\r\n                        saveModel.FreightRateCalcPreferenceType = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('FreightRateCalcPreferenceType').value;\r\n                        let selectedFuelGroup: DropdownItem[] = (<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('FuelGroups').value;\r\n                        saveModel.FreightRateCalcPrefFuelGroupId = selectedFuelGroup.length == 1 ? selectedFuelGroup[0].Id : null;\r\n\r\n\r\n                    }\r\n                    saveModel.FreightRateFuelGroups.push(group);\r\n                }\r\n            }\r\n        }\r\n        isExist = this.IsGroupExist(\"RangeTable\");\r\n        if (isExist!=-1) {\r\n            gList = (<FormArray>((<FormArray>this.rForm.get('RangeTable')).at(0).get('group'))).length - 1;\r\n            var rT = (<FormArray>this.rForm.get('RangeTable')).length - 1;\r\n            let rangeTable = (<FormArray>this.rForm.get('RangeTable'));\r\n            if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n                for (let i = 0; i <= rT; i++) {\r\n                    for (let j = 0; j <= gList; j++) {\r\n\r\n                        let group = new FreightRateRouteTableViewModel();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.StartQuantity = rangeTable.at(i).get('StartQuantity').value;\r\n                        if (rangeTable.at(i).get('IsLast').value != true) {\r\n                            group.EndQuantity = rangeTable.at(i).get('EndQuantity').value;\r\n                        } else {\r\n                            group.EndQuantity = null;\r\n                        }\r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n                        saveModel.FreightRateRouteTables.push(group);\r\n                    }\r\n                }\r\n            }\r\n            else if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n\r\n                if (this.IsDuplicateUpToQuantity()) {\r\n                    this.IsLoading = false;\r\n                    return;\r\n                }\r\n                for (var i = 0; i <= rT; i++) {\r\n                    for (var j = 0; j <= gList; j++) {\r\n                        let group = new FreightRateRangeTableViewModel();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.UptoQuantity = rangeTable.at(i).get('UptoQuantity').value;                        \r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n                        saveModel.FreightRateRangeTables.push(group);\r\n                    }\r\n                }\r\n            }\r\n            else if (+this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n\r\n                for (let i = 0; i <= rT; i++) {\r\n                    for (let j = 0; j <= gList; j++) {\r\n                        let group = new FreightRatePtoPTable();\r\n                        group.FuelGroupId = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupId').value;\r\n                        group.FuelGroupName = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('FuelGroupName').value;\r\n                        group.RateValue = (<FormArray>(rangeTable.at(i).get('group'))).at(j).get('RateValue').value;\r\n\r\n                        group.AssumedMiles = rangeTable.at(i).get('AssumedMiles').value;\r\n                        group.IsLaneRequired = rangeTable.at(i).get('IsLaneRequired').value;\r\n                        group.LaneID = rangeTable.at(i).get('LaneID').value;\r\n                        group.LocationAddress = rangeTable.at(i).get('LocationAddress').value;\r\n                        group.LocationName = rangeTable.at(i).get('LocationName').value;\r\n                        group.JobId = rangeTable.at(i).get('JobId').value;\r\n                        group.TerminalAndBulkPlantName = rangeTable.at(i).get('TerminalAndBulkPlantName').value;\r\n                        group.BulkPlantId = rangeTable.at(i).get('BulkPlantId').value;\r\n                        group.TerminalId = rangeTable.at(i).get('TerminalId').value;\r\n                        saveModel.FreightRatePtoPTables.push(group);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        if (this.rForm.get('RuleId').value != \"\") {\r\n            this.freightRateRulesService.updateFreightRate(saveModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \" edited\";\r\n                        if (saveModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(saveModel.Name + message + \" successfully.\", undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeToViewTab();\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        } else {\r\n            this.freightRateRulesService.createFreightRate(saveModel)\r\n                .subscribe((response: any) => {\r\n                    this.ServiceResponse = response;\r\n                    if (response != null && response.StatusCode == 0) {\r\n                        let message = \"\";\r\n                        if (saveModel.Status == FreightTableStatus.Published) {\r\n                            message = \" created\"\r\n                        }\r\n                        else if (saveModel.Status == FreightTableStatus.Draft) {\r\n                            message = \" saved draft\"\r\n                        }\r\n                        Declarations.msgsuccess(saveModel.Name + message + \" successfully.\" , undefined, undefined);\r\n                        this.IsLoading = false;\r\n                        this.changeToViewTab();\r\n                    }\r\n                    else {\r\n                        this.IsLoading = false;\r\n                        Declarations.msgerror(response == null || response.StatusMessage == null ? 'Failed' : response.StatusMessage, undefined, undefined);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    public changeToViewTab() {\r\n        this.freightRateRulesService.onSelectedTabChanged.next(2);\r\n    }\r\n\r\n    public clearForm() {\r\n        this.refreshUI(FreightRateRuleType.Range);\r\n    }\r\n\r\n    public onCancel(): void {\r\n        if (this.RuleMode == \"VIEW\") {\r\n            this.disableInputControls = false;\r\n            this.freightComponent.disableInputControls = false;\r\n            this.RuleId = null;\r\n        }\r\n        if (this.RuleId != null) {\r\n            this.changeToViewTab();\r\n        }\r\n        else {\r\n            this.refreshUI(FreightRateRuleType.Range);\r\n        }\r\n        \r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n    IdInComparers(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                return other.Id == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n\r\n\r\n    public GetControlNames(formGroup: FormGroup): string[] {\r\n        var ctrlName: string[] = [];\r\n        (<any>Object).keys(formGroup.controls).forEach((key: string) => {\r\n            const abstractControl = formGroup.get(key);\r\n            ctrlName.push(key);\r\n            if (abstractControl instanceof FormGroup) {\r\n                this.GetControlNames(abstractControl);\r\n            }\r\n        });\r\n        return ctrlName;\r\n    }\r\n   \r\n    public onStartQuantityLostFocus(index: number): void {\r\n\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let StartQuantity = rTable.at(index).get('StartQuantity').value;\r\n        let UpperRowEndQuantity;\r\n        if (index > 0) {           \r\n            UpperRowEndQuantity = rTable.at(index - 1).get('EndQuantity').value;\r\n            let SameRowEndQuantity = rTable.at(index).get('EndQuantity').value;\r\n            if (+StartQuantity <= +UpperRowEndQuantity) {\r\n                rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n            else if (+StartQuantity >= SameRowEndQuantity)\r\n            {\r\n                rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n            else {\r\n                rTable.at(index).get('StartQuantity').setErrors(null);\r\n                rTable.at(index).get('StartQuantity').markAsTouched();\r\n            }\r\n        } else {\r\n            UpperRowEndQuantity = rTable.at(index).get('EndQuantity').value;\r\n            if (UpperRowEndQuantity) {\r\n                if (+StartQuantity >= +UpperRowEndQuantity) {\r\n                    rTable.at(index).get('StartQuantity').setErrors({ InvalidRange: true });\r\n                    rTable.at(index).get('StartQuantity').markAsTouched();\r\n                }\r\n                else {\r\n                    rTable.at(index).get('StartQuantity').setErrors(null);\r\n                    rTable.at(index).get('StartQuantity').markAsTouched();\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n        \r\n\r\n    public onEndQuantityLostFocus(index: number): void {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let StartQuantity = rTable.at(index).get('StartQuantity').value;\r\n        let EndQuantity = rTable.at(index).get('EndQuantity').value;\r\n        if (!isNaN(+EndQuantity) && !isNaN(+StartQuantity)) {\r\n            if (+StartQuantity >= +EndQuantity) {\r\n                rTable.at(index).get('EndQuantity').setErrors({ InvalidRange: true });\r\n                rTable.at(index).get('EndQuantity').markAsTouched();\r\n            } else {\r\n                rTable.at(index).get('EndQuantity').setErrors(null);\r\n                rTable.at(index).get('EndQuantity').markAsTouched();\r\n            }\r\n        }\r\n        this.onStartQuantityLostFocus(index);\r\n    }\r\n    public onStartQuantityKeyPress(event:any,index: number): void {\r\n        if (index == 0 && !isNaN(event.data)) {\r\n            var gList = (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(0).get('group'))).length - 1;\r\n            var fgT = (<FormArray>this.rForm.get('FuelGroupTable')).length - 1;\r\n            let StartQuantity = (<FormArray>this.rForm.get('RangeTable')).at(index).get('StartQuantity').value;\r\n            \r\n            for (let i = 0; i <= fgT; i++) {\r\n                for (let j = 0; j <= gList; j++) {\r\n                    (<FormArray>((<FormArray>this.rForm.get('FuelGroupTable')).at(i).get('group'))).at(j).get('MinQuantity').patchValue(+StartQuantity);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    public onEndQuantityKeyPress(index:number): void {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let EndQuantity = rTable.at(index).get('EndQuantity').value;        \r\n        if (!isNaN(+EndQuantity)) {            \r\n            if (+EndQuantity) {\r\n                rTable.at(index + 1).get('StartQuantity').patchValue((+EndQuantity + 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    public AddRange(srNmber: number) {\r\n        this.rerender_destroy();\r\n        if ((<FormArray>this.rForm.get('FuelGroupTable')).length == 0)\r\n        {\r\n            return;\r\n        };\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        let EndQuantity = \"\";\r\n        if (rTable.length > 0 && +this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(false);\r\n            EndQuantity = rTable.at(rTable.length - 2).get('EndQuantity').value;\r\n            if (EndQuantity != \"\") rTable.at(rTable.length - 1).get('StartQuantity').patchValue((+EndQuantity + 1));\r\n            rTable.push(this.CreateRangeTable(true, +this.rForm.get('RuleType').value));\r\n        }\r\n        else if (rTable.length > 0 && +this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n            let UptoQuantity = rTable.at(srNmber).get('UptoQuantity').value;\r\n            rTable.insert(srNmber + 1, this.CreateRangeTable(false, +this.rForm.get('RuleType').value));\r\n            /*if (UptoQuantity != \"\") rTable.at(srNmber + 1).get('UptoQuantity').patchValue(0);*/\r\n            rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n        }\r\n        // no manaul row add for P2P\r\n        else {\r\n           \r\n            if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n                rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value));\r\n                rTable.push(this.CreateRangeTable(true, +this.rForm.get('RuleType').value));\r\n            }\r\n            else if (+ this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n                this.markFormGroupTouched(this.rForm)\r\n                if (!this.freightComponent.rcForm.get('RangeStartValue').valid\r\n                    || !this.freightComponent.rcForm.get('RangeStartValue').valid\r\n                    || !this.freightComponent.rcForm.get('RangeInterval').valid) { return }\r\n\r\n                let start = this.freightComponent.rcForm.get('RangeStartValue').value;\r\n                let stop = this.freightComponent.rcForm.get('RangeEndValue').value;\r\n                let step = this.freightComponent.rcForm.get('RangeInterval').value;\r\n                this.GenerateRange(+start, +stop, +step).forEach(res => {\r\n                    rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value, Math.round(res)));\r\n                });\r\n            }\r\n            else if (+ this.rForm.get('RuleType').value == FreightRateRuleType.P2P) {\r\n\r\n                if (!this.freightComponent.rcForm.get('TerminalsAndBulkPlants').valid\r\n                    || !this.freightComponent.rcForm.get('Locations').valid) { return }\r\n                \r\n                let trbls = this.freightComponent.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n                function sortForTerminalsAndBulkPlants(a, b) {\r\n                    if (a.Name < b.Name) {\r\n                        return -1;\r\n                    }\r\n                    if (a.Name > b.Name) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }\r\n                trbls.sort(sortForTerminalsAndBulkPlants);\r\n                let sLocations = this.freightComponent.rcForm.get('Locations').value as DropdownItem[];\r\n                let JobIds: number[] = [];\r\n                sLocations.forEach(s => JobIds.push(s.Id));\r\n                let locs = this.freightComponent.LocationList.filter(this.IdInComparer(JobIds));\r\n                for (var i = 0; i < trbls.length; i++) {\r\n\r\n                    for (var j = 0; j < locs.length; j++) {\r\n                        rTable.push(this.CreateRangeTable(false, + this.rForm.get('RuleType').value));                        \r\n                        rTable.at(rTable.length - 1).get(\"TerminalAndBulkPlantName\").patchValue(trbls[i].Name);\r\n                        if (trbls[i].Id.startsWith('Terminals_')) {\r\n                            rTable.at(rTable.length - 1).get(\"TerminalId\").patchValue(trbls[i].Id.split(\"Terminals_\")[1]);\r\n                            rTable.at(rTable.length - 1).get(\"LaneID\").patchValue(trbls[i].Id.split(\"Terminals_\")[1].concat(\" \" + locs[j].Id.toString()));\r\n                        }\r\n                        else if (trbls[i].Id.startsWith('BulkPlants_')) {                            \r\n                            rTable.at(rTable.length - 1).get(\"BulkPlantId\").patchValue(trbls[i].Id.split(\"BulkPlants_\")[1]);\r\n                            rTable.at(rTable.length - 1).get(\"LaneID\").patchValue(trbls[i].Id.split(\"BulkPlants_\")[1].concat(\" \" + locs[j].Id.toString()));\r\n                        }                       \r\n\r\n                        rTable.at(rTable.length - 1).get(\"LocationName\").patchValue(locs[j].Name);\r\n                        rTable.at(rTable.length - 1).get(\"LocationAddress\").patchValue(locs[j].Code);\r\n                        rTable.at(rTable.length - 1).get(\"JobId\").patchValue(locs[j].Id);\r\n                        \r\n                        if (j == 0) {\r\n                            rTable.at(rTable.length - 1).get(\"IsLast\").patchValue(true);\r\n                        }\r\n                    }\r\n                    \r\n                    \r\n                }\r\n                //this.DtTrigger.next();\r\n                this.rerender_trigger();\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private GenerateRange(start:number, end:number, step:number = 0) {\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        for (let i = start; i <= end; i += step) {\r\n            output.push(i);\r\n        }\r\n        return output;\r\n    }\r\n    public onEndQuantityChange(textInput : any, index : number) {        \r\n        if (this.intGreaterThanZeroRegx.test(textInput)) {\r\n           \r\n            (<FormArray>this.rForm.get('RangeTable')).at(index + 1).get('StartQuantity').patchValue((+textInput + 1));\r\n        }\r\n        else {\r\n            (<FormArray>this.rForm.get('RangeTable')).at(index + 1).get('StartQuantity').patchValue('');\r\n        }\r\n        \r\n    }\r\n    private CreateRangeTable(IsLast: boolean, ruleType: number, upTo? : number): FormGroup {\r\n        if (ruleType ==FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                StartQuantity: this._fb.control(IsLast ? '' : 1, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n                EndQuantity: this._fb.control('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                UptoQuantity: this._fb.control(upTo, [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n\r\n        else if (ruleType == FreightRateRuleType.P2P) {\r\n            return this._fb.group({\r\n                Id: this._fb.control(''),\r\n                TerminalAndBulkPlantName:this._fb.control(''),\r\n                TerminalId:this._fb.control(''),\r\n                BulkPlantId:this._fb.control(''),\r\n                LocationName:this._fb.control(''),\r\n                LocationAddress:this._fb.control(''),\r\n                JobId:this._fb.control(''),\r\n                LaneID:this._fb.control(''),\r\n                AssumedMiles: this._fb.control('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)]),\r\n                IsLaneRequired:this._fb.control(true),\r\n                IsLast: this._fb.control(IsLast),\r\n                group: this.addGroupInRangeTable()\r\n            });\r\n        }\r\n    }\r\n   \r\n    public addGroupInRangeTable(): FormArray {\r\n        let fg = new FormArray([]);\r\n        this.freightComponent.rcForm.get('FuelGroups').value.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.Id),\r\n                FuelGroupName: new FormControl(x.Name),\r\n                RateValue: new FormControl('', [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    public generateOutput() {\r\n        this.freightComponent.generateTable();        \r\n    }\r\n\r\n    public getOutput($event) { //event which is coming from freight component\r\n        (<FormArray>this.rForm.get('RangeTable')).clear();\r\n        this.AddRange(0);\r\n    }\r\n    public onFuelGroupChange($event) { //event which is coming from freight component\r\n        (<FormArray>this.rForm.get('FuelGroupTable')).clear();\r\n\r\n        if ((+this.rForm.get('RuleType').value) == FreightRateRuleType.Range) {\r\n            this.freightComponent.rcForm.get('RangeStartValue').patchValue('');\r\n            this.freightComponent.rcForm.get('RangeEndValue').patchValue('');\r\n            this.freightComponent.rcForm.get('RangeInterval').patchValue('');\r\n        }\r\n\r\n        this.AddFuelGroup(+this.rForm.get('RuleType').value);\r\n      \r\n    }\r\n\r\n    public AddFuelGroup(ruleType:number) {\r\n        (<FormArray>this.rForm.get('FuelGroupTable')).push(this.CreateFuelGroupTable(ruleType));\r\n    }\r\n    \r\n    private CreateFuelGroupTable(ruleType: number): FormGroup {\r\n        this.SelectedFuelGroups = this.freightComponent.rcForm.get('FuelGroups').value as DropdownItem[];\r\n        if (this.SelectedFuelGroups.length == 0) {\r\n            return this._fb.group({});\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Route) {\r\n            return this._fb.group({\r\n                group: this.addFuelGroupTable()\r\n            });\r\n        }\r\n        else if (ruleType == FreightRateRuleType.Range || ruleType == FreightRateRuleType.P2P) {\r\n                return this._fb.group({\r\n                    group: this.addFuelGroupTable(),\r\n                    FreightRateCalcPreferenceType: new FormControl(1),\r\n                    FuelGroups: new FormControl('', [Validators.required]),\r\n                    MixLoadMinValue: new FormControl(0, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n                });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    public addFuelGroupTable(): FormArray {\r\n        let fg = new FormArray([]);\r\n        this.freightComponent.rcForm.get('FuelGroups').value.forEach(x => {\r\n            fg.push(this._fb.group({\r\n                FuelGroupId: new FormControl(x.Id),\r\n                FuelGroupName: new FormControl(x.Name),\r\n                MinQuantity: new FormControl(1, [Validators.required, Validators.pattern(this.decimalSupportedRegx)])\r\n            }));\r\n        });\r\n        return fg;\r\n    }\r\n\r\n    \r\n\r\n    public AddRanges(srNmber: number) {\r\n        this.AddRange(srNmber);\r\n    }\r\n\r\n    public RemoveRanges(srNmber: number) {\r\n        let rTable = (<FormArray>this.rForm.get('RangeTable'));\r\n        if (+this.rForm.get('RuleType').value == FreightRateRuleType.Route) {\r\n            if (rTable.length > 2) {\r\n                rTable.removeAt(rTable.length - 1);\r\n                // rTable.removeAt(rTable.length - 1);\r\n                if (rTable.length > 0) rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n            }\r\n        }\r\n        else if (+this.rForm.get('RuleType').value == FreightRateRuleType.Range) {\r\n\r\n            if (rTable.length > 1) {\r\n                rTable.removeAt(srNmber);\r\n                if (rTable.length > 0) rTable.at(rTable.length - 1).get('IsLast').patchValue(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isNumber(n) {\r\n        return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\r\n    }\r\n\r\n\r\n    public onImportClick($event) {\r\n        \r\n        \r\n        let rows = [];\r\n        let columns = [];\r\n        let firstRow = [];\r\n        rows = $event.split(/\\r?\\n/);\r\n        //sainity check 1\r\n        columns = rows[0].split(\",\"); //first row\r\n        firstRow = rows[0].split(\",\");  //first row\r\n\r\n        if (this.freightRateRuleType == FreightRateRuleType.Range) {\r\n            let frs: FreightRateRangeTableViewModel[] = [];\r\n            if (columns.length - 1 != this.SelectedFuelGroups.length || columns[0] != \"UptoQuantity\") {\r\n                Declarations.msgerror(\"Template mistmach with selected fuel group name.\", undefined, undefined);\r\n                return;\r\n            }\r\n\r\n            let i = 0;\r\n            for (i = 0; i < this.SelectedFuelGroups.length; i++) {\r\n                if (this.SelectedFuelGroups[i].Name != columns[i + 1]) {\r\n                    Declarations.msgerror(\"Template mistmach with selected fuel group name order.\", undefined, undefined);\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                for (let j = 0; j < columns.length; j++) {\r\n                    let str = columns[j].replace(/\\s/g, \"\");\r\n                    if (!this.isNumber(str)) {\r\n                        Declarations.msgerror(\"Invalid number \" + str + \".\", undefined, undefined);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            rows = $event.split(/\\r?\\n/);\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                //let fr = new FreightRateRangeTableViewModel();\r\n                let frtVM = { UptoQuantity: 0, FuelGroupId: 0, RateValue: 0 };\r\n                for (let j = 0; j < columns.length; j++) {\r\n                    let str = columns[j].replace(/\\s/g, \"\");\r\n                    if (j == 0) {\r\n                        frtVM.UptoQuantity = +str;\r\n                    } else {\r\n                        frtVM.FuelGroupId = this.SelectedFuelGroups.filter(r => r.Name == firstRow[j])[0].Id;\r\n                        frtVM.RateValue = +str;\r\n                        frs.push({ UptoQuantity: frtVM.UptoQuantity, FuelGroupId: frtVM.FuelGroupId, RateValue: frtVM.RateValue });\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.generateRangeTable(frs);\r\n        }\r\n        else if (this.freightRateRuleType == FreightRateRuleType.P2P) {\r\n\r\n            //TODO : validation is not yet converd.\r\n            let frP2P: FreightRatePtoPTable[] = [];\r\n            rows = $event.split(/\\r?\\n/);\r\n            let i = 0;\r\n            for (i = 1; i < rows.length; i++) {\r\n                columns = rows[i].split(\",\");\r\n                if (columns.length == 1) break;\r\n                \r\n                //Terminal/Bulk Plants,Location Name,Location Address,LaneId,Assumed Miles,FuelGroupStd1,FuelGroupStd2,IsLaneRequired\r\n                //Terminals_811|Buckeye - Roseton,14038|loc 1 sep,57 wall street,,,,,\r\n                let row = columns[0].split(\"|\");\r\n                let terminalInfo = { TerminalId: \"\", TerminalAndBulkPlantName:\"\" };\r\n                let bulkPlantInfo = { BulkPlantId: \"\", TerminalAndBulkPlantName: \"\"};\r\n                if (columns[0].startsWith('Terminals_')) {\r\n                    terminalInfo = { TerminalId: row[0].trim(), TerminalAndBulkPlantName: row[1].trim() };\r\n                }\r\n                else if (columns[0].startsWith('BulkPlants_')) {\r\n                    bulkPlantInfo = { BulkPlantId: row[0].trim(), TerminalAndBulkPlantName: row[1].trim() };\r\n                }             \r\n                 row = columns[1].split(\"|\");\r\n                let locationInfo = {\r\n                    JobId: row[0].trim(), LocationName: row[1], LocationAddress: columns[2].trim()\r\n                };\r\n                //let lastPipline = row[2].split(\",\"); //loc 1 sep,57 wall street,laneId,assumedMile,fg1,fg2,islaneRequired\r\n                let LaneId = columns[3].trim();\r\n                let AssumedMiles = columns[4].trim();\r\n                let IsLaneRequired = columns[columns.length-1].trim();\r\n                \r\n                for (let j = 0; j < this.SelectedFuelGroups.length; j++) {\r\n                    let fp2p = new FreightRatePtoPTable();\r\n                    fp2p.TerminalId = terminalInfo.TerminalId == \"\" ? null : +terminalInfo.TerminalId.split('_')[1];\r\n                    fp2p.BulkPlantId = bulkPlantInfo.BulkPlantId == \"\" ? null : +bulkPlantInfo.BulkPlantId.split('_')[1];\r\n                    fp2p.TerminalAndBulkPlantName = terminalInfo.TerminalId == \"\" ? bulkPlantInfo.TerminalAndBulkPlantName: terminalInfo.TerminalAndBulkPlantName;\r\n                    fp2p.LocationName = locationInfo.LocationName;\r\n                    fp2p.LocationAddress = locationInfo.LocationAddress;\r\n                    fp2p.JobId = +locationInfo.JobId;\r\n                    fp2p.LaneID =LaneId;\r\n                    fp2p.AssumedMiles = AssumedMiles;\r\n                    fp2p.IsLaneRequired = (IsLaneRequired==\"0\")?false:true;\r\n                    fp2p.FuelGroupId = this.SelectedFuelGroups[0].Id;\r\n                    fp2p.RateValue = +columns[4+j].trim();\r\n                    frP2P.push(fp2p);\r\n                }\r\n            }\r\n\r\n            //this.freightComponent.closePopup();\r\n\r\n            this.generateP2PTable(frP2P);\r\n        }\r\n\r\n\r\n        Declarations.msgsuccess(\"Import successful.\", undefined, undefined);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","\r\n<form [formGroup]=\"rForm\" (ngSubmit)=\"onSubmit(2)\">\r\n    <div>\r\n        <div *ngIf=\"RuleMode!='CREATE'\">\r\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm()\"><i class=\"fa fa-plus-circle\"></i>Create New</button>\r\n        </div>\r\n        <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n            <div class=\"row mt-2\">\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"Range\" [name]=\"'RuleType'\" [value]=\"2\"\r\n                                   (change)=\"RuleTypeTypeChange(2)\">\r\n                            <label class=\"form-check-label\" for=\"Range\">Range</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"P2P\" [name]=\"'RuleType'\" [value]=\"1\"\r\n                                   (change)=\"RuleTypeTypeChange(1)\">\r\n                            <label class=\"form-check-label\" for=\"P2P\">P2P</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"RuleType\" id=\"Route\" [name]=\"'RuleType'\" [value]=\"3\"\r\n                                   (change)=\"RuleTypeTypeChange(3)\">\r\n                            <label class=\"form-check-label\" for=\"Route\">Route</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <app-freight [PricingRuleType]=\"rForm.get('RuleType').value\"\r\n                         [IsEditable]=\"IsEditable\"\r\n                         (onGenerateTable)=\"getOutput($event)\"\r\n                         (onGenerateFuelGroup)=\"onFuelGroupChange($event)\"\r\n                         (onImportClick)=\"onImportClick($event)\">\r\n            </app-freight>\r\n            <div class=\"well bg-white\" *ngIf=\"freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==3 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n\r\n                           <!--{{rcForm.get('FuelGroupTable').value|json}}-->\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <!--{{rcForm.get('RangeTable').value|json}}-->\r\n                        <table class=\"table table-bordered table-hover mt-3\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colspan=\"3\" align=\"center\">Quantity (Gallons)</th>\r\n                                    <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                        {{item.Name}}\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                <ng-container formArrayName=\"RangeTable\">\r\n                                    <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                        <ng-container [formGroupName]=\"o\">\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <input type=\"text\" formControlName=\"StartQuantity\" class=\"form-control\" (input)=\"onStartQuantityKeyPress($event,o)\"\r\n                                                           (change)=\"onStartQuantityLostFocus(o)\" />\r\n                                                    <div *ngIf=\"item.get('StartQuantity').invalid && item.get('StartQuantity').touched\" class=\"color-maroon\">\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.required\">\r\n                                                            Required.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.pattern\">\r\n                                                            Invalid, must be greater than zero.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('StartQuantity').errors.InvalidRange\">\r\n                                                            Invalid range.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>To</td>\r\n                                                <td *ngIf=\"!item.get('IsLast').value\">\r\n                                                    <input type=\"text\" formControlName=\"EndQuantity\" class=\"form-control\" (input)=\"onEndQuantityKeyPress(o)\"\r\n                                                           (change)=\"onEndQuantityLostFocus(o)\" />\r\n                                                    <div *ngIf=\"item.get('EndQuantity').invalid && item.get('EndQuantity').touched\" class=\"color-maroon\">\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.required\">\r\n                                                            Required.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.pattern\">\r\n                                                            Invalid, must be greater than zero.\r\n                                                        </div>\r\n                                                        <div *ngIf=\"item.get('EndQuantity').errors.InvalidRange\">\r\n                                                            Invalid range.\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td *ngIf=\"item.get('IsLast').value\">\r\n                                                    Above\r\n                                                    <!--<input type=\"hidden\" formControlName=\"EndQuantity\" value=\"99999999\" />-->\r\n                                                </td>\r\n\r\n                                                <ng-container formArrayName=\"group\">\r\n                                                    <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                        <ng-container [formGroupName]=\"p\">\r\n                                                            <td>\r\n                                                                <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                        Required.\r\n                                                                    </div>\r\n\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                        Invalid.\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                </ng-container>\r\n\r\n                                                <td>\r\n                                                    <ng-container *ngIf=\"o==(rForm.get('RangeTable')['controls'].length-1)\">\r\n                                                        <a type=\"button\"\r\n                                                           class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                           title=\"Add\"\r\n                                                           (click)=\"AddRanges(o)\">\r\n                                                        </a>\r\n                                                        <a type=\"button\"\r\n                                                           class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                           title=\"Remove\"\r\n                                                           (click)=\"RemoveRanges(o)\">\r\n                                                        </a>\r\n                                                    </ng-container>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </ng-container>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==1 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Mixed Load\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Calculation of Mixed fuel group load based on:\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n\r\n                                                        <input type=\"text\" formControlName=\"MixLoadMinValue\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('MixLoadMinValue').invalid && item.get('MixLoadMinValue').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.pattern\">\r\n                                                                Invalid.\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <div>\r\n                                                            <div class=\"row mb-2\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"RoundUp\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"1\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"RoundUp\">Round Up</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"Proportion\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"2\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"Proportion\">Proportion</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"row\" *ngIf=\"item.get('FreightRateCalcPreferenceType').value==1 && item.get('MixLoadMinValue').value>0\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                                                                             class=\"single-select\"\r\n                                                                                             id=\"fuelGroup\"\r\n                                                                                             [placeholder]=\"'Select fuel group (Required)'\"\r\n                                                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SelectedFuelGroups\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                    <div *ngIf=\"item.get('FuelGroups').invalid && item.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"item.get('FuelGroups').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" [ngClass]=\"{'hide-element':freightComponent.ShowMessage }\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"well bg-white shadow-b\">\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border\">\r\n                                        <div id=\"div-p2p-rate-table\" class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"DtTrigger\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"ptbp\">\r\n                                                            Terminals/Bulk Plants\r\n                                                        </th>\r\n                                                        <th data-key=\"pln\">\r\n                                                            Location Name\r\n                                                        </th>\r\n                                                        <th data-key=\"pla\">Location Address</th>\r\n                                                        <th data-key=\"pli\">LaneId</th>\r\n                                                        <th data-key=\"pam\">Assumed Miles</th>\r\n                                                        <ng-container *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                                            <th data-key=\"item.Name\">\r\n                                                                {{item.Name}}\r\n                                                            </th>\r\n                                                        </ng-container>\r\n                                                        <th data-key=\"plr\">IsLane Required</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n\r\n                                                <tbody>\r\n\r\n                                                    <ng-container formArrayName=\"RangeTable\">\r\n                                                        <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                                            <ng-container [formGroupName]=\"o\">\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <ng-container *ngIf=\"item.get('IsLast').value==true\">\r\n                                                                            <label> {{item.get('TerminalAndBulkPlantName').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LocationName').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n\r\n                                                                    <td class=\"break-word\">\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LocationAddress').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                    </td>\r\n\r\n                                                                    <td>\r\n                                                                        <ng-container>\r\n                                                                            <label> {{item.get('LaneID').value}}</label>\r\n                                                                        </ng-container>\r\n                                                                        <div *ngIf=\"item.get('LaneID').invalid && item.get('LaneID').touched\" class=\"color-maroon\">\r\n                                                                            <div *ngIf=\"item.get('LaneID').errors.required\">\r\n                                                                                Required.\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"item.get('LaneID').errors.pattern\">\r\n                                                                                Invalid.\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </td>\r\n\r\n                                                                    <td>\r\n                                                                        <input type=\"text\" formControlName=\"AssumedMiles\" class=\"form-control\" />\r\n                                                                        <div *ngIf=\"item.get('AssumedMiles').invalid && item.get('AssumedMiles').touched\" class=\"color-maroon\">\r\n                                                                            <div *ngIf=\"item.get('AssumedMiles').errors.required\">\r\n                                                                                Required.\r\n                                                                            </div>\r\n                                                                            <div *ngIf=\"item.get('AssumedMiles').errors.pattern\">\r\n                                                                                Invalid.\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                    <ng-container formArrayName=\"group\">\r\n                                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                                <td>\r\n                                                                                    <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                                    <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                                            Required.\r\n                                                                                        </div>\r\n\r\n                                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                                            Invalid.\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </td>\r\n\r\n                                                                            </ng-container>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n\r\n                                                                    <td class=\"text-center\">\r\n                                                                        <input type=\"checkbox\" formControlName=\"IsLaneRequired\" class=\"form-check-input\" [value]=\"1\" />\r\n                                                                    </td>\r\n\r\n                                                                </tr>\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                </tbody>\r\n\r\n\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"rForm.get('RuleType').value==2 && freightComponent!=null && freightComponent!=undefined && freightComponent.rcForm!=undefined && freightComponent.rcForm.get('FuelGroups').value.length>0\">\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Min Quantity</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Mixed Load\r\n                                        </th>\r\n                                        <th *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                            Calculation of Mixed fuel group load based on:\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"FuelGroupTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('FuelGroupTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"MinQuantity\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('MinQuantity').invalid && groupDetail.get('MinQuantity').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                        <div *ngIf=\"groupDetail.get('MinQuantity').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <input type=\"text\" formControlName=\"MixLoadMinValue\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('MixLoadMinValue').invalid && item.get('MixLoadMinValue').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('MixLoadMinValue').errors.pattern\">\r\n                                                                Invalid.\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td *ngIf=\"freightComponent.rcForm.get('FuelGroups').value.length>1\">\r\n                                                        <div>\r\n                                                            <div class=\"row mb-2\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"RoundUp\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"1\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"RoundUp\">Round Up</label>\r\n                                                                    </div>\r\n                                                                    <div class=\"form-check form-check-inline\">\r\n                                                                        <input class=\"form-check-input\" type=\"radio\" formControlName=\"FreightRateCalcPreferenceType\" id=\"Proportion\" [name]=\"'FreightRateCalcPreferenceType'\" [value]=\"2\" [attr.disabled]=\"item.get('MixLoadMinValue').value==0?true:null\">\r\n                                                                        <label class=\"form-check-label\" for=\"Proportion\">Proportion</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"row\" *ngIf=\"item.get('FreightRateCalcPreferenceType').value==1 && item.get('MixLoadMinValue').value>0\">\r\n                                                                <div class=\"col-sm-12\">\r\n                                                                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                                                                             class=\"single-select\"\r\n                                                                                             id=\"fuelGroup\"\r\n                                                                                             [placeholder]=\"'Select fuel group'\"\r\n                                                                                             [settings]=\"SingleSelectSettingsById\" [data]=\"SelectedFuelGroups\">\r\n                                                                    </ng-multiselect-dropdown>\r\n                                                                    <div *ngIf=\"item.get('FuelGroups').invalid && item.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"item.get('FuelGroups').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\" *ngIf=\"!freightComponent.ShowMessage\">\r\n                        <div class=\"col-sm-6\">\r\n                            <h3 class=\"mb-1\">Miles Ranges Table</h3>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Upto\r\n                                        </th>\r\n                                        <th *ngFor=\"let item of freightComponent.rcForm.get('FuelGroups').value\">\r\n                                            {{item.Name}}\r\n                                        </th>\r\n                                        <!--<th>\r\n                                        Status\r\n                                    </th>-->\r\n                                        <th>\r\n                                            Action\r\n                                        </th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    <ng-container formArrayName=\"RangeTable\">\r\n                                        <ng-container *ngFor=\"let item of rForm.get('RangeTable')['controls'];let o =index;\">\r\n                                            <ng-container [formGroupName]=\"o\">\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <input type=\"text\" formControlName=\"UptoQuantity\" class=\"form-control\" />\r\n                                                        <div *ngIf=\"item.get('UptoQuantity').invalid && item.get('UptoQuantity').touched\" class=\"color-maroon\">\r\n                                                            <div *ngIf=\"item.get('UptoQuantity').errors.required\">\r\n                                                                Required.\r\n                                                            </div>\r\n                                                            <div *ngIf=\"item.get('UptoQuantity').errors.pattern\">\r\n                                                                Invalid, must be greater than zero.\r\n                                                            </div>\r\n                                                            <span *ngIf=\"item.get('UptoQuantity').errors.DuplicateEntry\">\r\n                                                                Duplicate.\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <ng-container formArrayName=\"group\">\r\n                                                        <ng-container *ngFor=\"let groupDetail of item.get('group')['controls'];let p =index;\">\r\n                                                            <ng-container [formGroupName]=\"p\">\r\n                                                                <td>\r\n                                                                    <input type=\"text\" formControlName=\"RateValue\" class=\"form-control\" />\r\n                                                                    <div *ngIf=\"groupDetail.get('RateValue').invalid && groupDetail.get('RateValue').touched\" class=\"color-maroon\">\r\n                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.required\">\r\n                                                                            Required.\r\n                                                                        </div>\r\n\r\n                                                                        <div *ngIf=\"groupDetail.get('RateValue').errors.pattern\">\r\n                                                                            Invalid.\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n\r\n                                                            </ng-container>\r\n                                                        </ng-container>\r\n                                                    </ng-container>\r\n                                                    <!--<td>\r\n                                                    <a type=\"button\"\r\n                                                       class=\"fa fa-exclamation-triangle mt4 mr5 mr10\"\r\n                                                       title=\"Status\">\r\n                                                    </a>\r\n                                                </td>-->\r\n                                                    <td>\r\n                                                        <ng-container>\r\n                                                            <a type=\"button\"\r\n                                                               class=\"fa fa-plus-circle mt4 mr5 mr10\"\r\n                                                               title=\"Add\"\r\n                                                               (click)=\"AddRanges(o)\">\r\n                                                            </a>\r\n                                                            <a type=\"button\"\r\n                                                               class=\"fa fa-trash-alt mt7 color-maroon remove-partial-block tier\"\r\n                                                               title=\"Remove\"\r\n                                                               (click)=\"RemoveRanges(o)\">\r\n                                                            </a>\r\n                                                        </ng-container>\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            </ng-container>\r\n                                        </ng-container>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </fieldset>\r\n        <div class=\"text-right\">\r\n            <input type=\"button\" class=\"btn btn-lg btn-light\" value=\"Cancel\" (click)=\"onCancel()\" />\r\n            <button class=\"btn btn-lg btn-outline-primary\" type=\"button\" (click)=\"onSubmit(1)\" [disabled]=\"disableInputControls ? true : null\">Save Draft</button>\r\n            <button class=\"btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"disableInputControls ? true : null\">Submit</button>\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n<div class=\"loader\" *ngIf=\"IsLoading\">\r\n    <div class=\"loading-content text-center\">\r\n        <div class=\"spinner\"></div>\r\n        <div class=\"font-bold\">Loading</div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FreightRateRulesService } from '../Services/freight-rate-rules.service';\r\n\n@Component({\n    selector: 'app-master',\n    templateUrl: './master.component.html',\n    styleUrls: ['./master.component.css']\n})\nexport class MasterComponent implements OnInit {\n    viewType = 0\n    constructor(private router: Router, private freightRateRulesService: FreightRateRulesService) { }\n\n\n\n    ngOnInit() {\n        this.freightRateRulesService.onSelectedTabChanged.subscribe(s => {\r\n            if (s == 2) {\n                this.viewType = 2;\r\n\r\n            }\n            else {\n                this.viewType = 1;\r\n            }\r\n        })\n\n    }\n\n    public changeViewType(value) {\n        this.viewType = value;\n        this.freightRateRulesService.onSelectedFreightRateRuleId.next(null);\n        this.freightRateRulesService.onSelectedTabChanged.next(value);\n\n        //if(this.viewType==1)\n        //this.router.navigate(['/Supplier/FuelSurcharge/CreateNew']);\n    }\n\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block border bg-white p-1 radius-capsule shadow-b mb-2\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0 mr-1\" (click)=\"changeViewType(1)\">Create Freight Rate</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">View Freight Rate</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-create-freight-rate-rules *ngIf=\"viewType==1\"></app-create-freight-rate-rules>\r\n\r\n                <app-view-freight-rate-rules *ngIf=\"viewType==2\"></app-view-freight-rate-rules>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { FreightRateCalcPreferenceType, FreightRateRuleType, FreightTableStatus, FuelGroupType, TableType } from 'src/app/app.enum';\r\n\r\nexport class FreightRateFuelGroupViewModel {\r\n    MinQuantity: number;\r\n    FuelGroupId: number;\r\n}\r\n\r\nexport class FreightRateRouteTableViewModel {\r\n    StartQuantity: number;\r\n    EndQuantity?: number;\r\n    RateValue: number;\r\n    FuelGroupId: number;\r\n}\r\nexport class FreightRatePtoPTable {\r\n    TerminalAndBulkPlantName : string;\r\n    LocationName : string;\r\n    LocationAddress  : string;\r\n    LaneID: string;\r\n    AssumedMiles: number;\r\n    IsLaneRequired: boolean;\r\n    RateValue: number;\r\n    FuelGroupName: string;\r\n    FuelGroupId : number;\r\n    JobId: number;\r\n    TerminalId?: number;\r\n    BulkPlantId?: number;\r\n\r\n}\r\nexport class FreightRateRangeTableViewModel {\r\n    UptoQuantity: number;\r\n    RateValue: number;\r\n    FuelGroupId: number;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class FreightRateViewModel {\r\n\r\n    Id?: number;\r\n    Name: string;\r\n    Status: FreightTableStatus;\r\n    FreightRateRuleType: FreightRateRuleType;\r\n    FuelGroupType: FuelGroupType;\r\n    MixLoadMinValue: number;\r\n    FreightRateCalcPreferenceType: FreightRateCalcPreferenceType;\r\n    FreightRateCalcPrefFuelGroupId?: number;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    TableType: TableType;\r\n    CustomerIds: number[] = [];\r\n    CarrierIds: number[] = [];\r\n    JobIds: number[] = [];\r\n    FuelGroupIds: number[] = [];\r\n    SourceRegionIds: number[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n    FreightRateFuelGroups: FreightRateFuelGroupViewModel[] = [];\r\n    FreightRateRouteTables: FreightRateRouteTableViewModel[] = [];\r\n    FreightRateRangeTables: FreightRateRangeTableViewModel[] = [];\r\n    FreightRatePtoPTables: FreightRatePtoPTable[] = [];\r\n}\r\n\r\n\r\nexport class FreightPricingRulesViewModel {\r\n    \r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Locations: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    FuelGroups: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    TableTypeId: number;\r\n    FuelGroupType: FuelGroupType = FuelGroupType.Standard;\r\n    public StartDate: Date;\r\n    public EndDate: Date;\r\n    TableName: string;\r\n    StatusId: number = 2;\r\n}\r\n\r\n\r\n\r\n","import { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport * as moment from 'moment';\r\n\r\nexport class FreightRateModel {\r\n    FreightRateId?: number;\r\n    FreightRateRuleTypes: DropdownItem[] = [];\r\n    TableTypes: DropdownItem[] = [];\r\n    Customers: DropdownItem[] = [];\r\n    Carriers: DropdownItem[] = [];\r\n    SourceRegions: DropdownItem[] = [];\r\n    TerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n}\r\n\r\nexport class FreightRateInputModel {\r\n    public FreightRateRuleTypeIds: string;\r\n    public TableTypeIds: string;\r\n    public CustomerIds: string;\r\n    public CarrierIds: string;\r\n    public SourceRegionIds: string;\r\n    public TerminalIds: string;\r\n    public BulkPlantIds: string;\r\n    public StartDate: string;\r\n    public EndDate: string;\r\n    public IsArchived: boolean;\r\n}\r\n\r\nexport class FreightRateGridModel {\r\n    public Id: number;\r\n    public DateRange: string;\r\n    public FreightRateRuleType: string;\r\n    public TableType: string;\r\n    public TableName: number;\r\n    public Customer: string;\r\n    public Carrier: string;\r\n    public SourceRegion: string;\r\n    public Terminal: string;\r\n    public BulkPlant: string;\r\n    public FuelGroup: string;\r\n    public StatusName: string;\r\n    public IsArchived: boolean;\r\n    public FreightRateRuleTypeValue: number;\r\n    // For UI Dropdown\r\n    public IsShowMore : boolean;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HandleError } from 'src/app/errors/HandleError';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { FreightRateViewModel } from 'src/app/freightRates/Models/createFreightRateRules';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\n\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FreightRateRulesService extends HandleError {\r\n\r\n    public createFreightRateUrl = '/FreightRate/CreateFreightRate';\r\n    public updateFreightRateUrl = '/FreightRate/UpdateFreightRate';\r\n    public getFreightRateDetailUrl = '/FreightRate/GetFreightRateDetails?freightRateId=';\r\n    public archiveFreightRateUrl = '/FreightRate/ArchiveFreightRate';\r\n    public getFreightRateSummaryUrl = '/FreightRate/GetFreightRateSummary';\r\n    public getFreightRateTableForViewUrl = '/FreightRate/GetFreightRateTableForView?freightRateId=';\r\n    public getFreightRateRuleTypesUrl = \"/FreightRate/GetFreightRateRuleTypes\";\r\n    public getCustomerJobsUrl = \"/FreightRate/GetCustomerJobs?customerId=\";\r\n    public onSelectedTabChanged: BehaviorSubject<any>;\r\n    public onSelectedFreightRateRuleId: BehaviorSubject<any>;\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        super();\r\n        this.onSelectedTabChanged = new BehaviorSubject(1);\r\n        this.onSelectedFreightRateRuleId = new BehaviorSubject(null);\r\n    }\r\n\r\n    createFreightRate(fsm: FreightRateViewModel): Observable<FreightRateViewModel> {\r\n        return this.httpClient.post<FreightRateViewModel>(this.createFreightRateUrl, fsm, httpOptions)\r\n            .pipe(catchError(this.handleError<FreightRateViewModel>('createFreightRate', fsm)));\r\n    }\r\n\r\n    updateFreightRate(fsm: FreightRateViewModel): Observable<FreightRateViewModel> {\r\n        return this.httpClient.post<FreightRateViewModel>(this.updateFreightRateUrl, fsm, httpOptions)\r\n            .pipe(catchError(this.handleError<FreightRateViewModel>('updateFreightRate', fsm)));\r\n    }\r\n\r\n    getFreightRateRuleTypes(): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getFreightRateRuleTypesUrl)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateRuleTypes', null)));\r\n    }\r\n\r\n    getCustomerJobs(customerId: number): Observable<DropdownItem[]> {\r\n        return this.httpClient.get<any>(this.getCustomerJobsUrl + customerId)\r\n            .pipe(catchError(this.handleError<any>('getCustomerJobs', null)));\r\n    }\r\n\r\n    getFreightRateDetails(freightRateId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFreightRateDetailUrl + freightRateId)\r\n            .pipe(catchError(this.handleError<any>('getFuelSurchargeTable', null)));\r\n    }\r\n\r\n    getFreightRateGridDetails(filter: any): Observable<any> {\r\n        return this.httpClient.post<any>(this.getFreightRateSummaryUrl, filter)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateGridDetails', null)));\r\n    }\r\n\r\n    archiveFreightRate(freightRateId: number): Observable<any> {\r\n        return this.httpClient.post<any>(this.archiveFreightRateUrl, { freightRateId: freightRateId })\r\n            .pipe(catchError(this.handleError<any>('archiveFreightRate', null)));\r\n    }\r\n\r\n    getFreightRateTableForView(freightRateId: number): Observable<any> {\r\n        return this.httpClient.get<any>(this.getFreightRateTableForViewUrl + freightRateId)\r\n            .pipe(catchError(this.handleError<any>('getFreightRateTableForView', null)));\r\n    }\r\n}","<form [formGroup]=\"viewFreightRateForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 text-left\">\r\n            <a class=\"fs16 mr10 filter-link pa mt-2\" [ngbPopover]=\"popContent\" placement=\"bottom\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"></i>Filters</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well bg-white shadowb-b\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-border\">\r\n                        <div class=\"row\">\r\n                            <div id=\"div-freight-rate-grid\" class=\"table-responsive\">\r\n                                <table id=\"freight-rate-grid-datatable\" data-gridname=\"14\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"table table-striped table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th class=\"hide-element\" data-key=\"Id\">Id</th>\r\n                                            <th data-key=\"DateRange\">Date Range</th>\r\n                                            <th data-key=\"FreightRateRuleType\">Freight Pricing Rule</th>\r\n                                            <th data-key=\"TableType\">Table Type</th>\r\n                                            <th data-key=\"TableName\">Table Name</th>\r\n                                            <th data-key=\"StatusName\">Status</th>\r\n                                            <th data-key=\"Customer\">Customer(s)</th>\r\n                                            <th data-key=\"Carrier\">Carrier(s)</th>\r\n                                            <th data-key=\"SourceRegion\">Source Region(s)</th>\r\n                                            <th data-key=\"Terminal\">Terminal(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Bulk Plant(s)</th>\r\n                                            <th data-key=\"BulkPlant\">Fuel Group(s)</th>\r\n                                            <th>Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let item of FreightRateList,let i = index\" class=\"accordion\" id=\"accordionExample\">\r\n                                            <td class=\"hide-element\">{{item.Id}}</td>\r\n                                            <td>{{item.DateRange}}</td>\r\n                                            <td>{{item.FreightRateRuleType}}</td>\r\n                                            <td>{{item.TableType}}</td>\r\n                                            <td>{{item.TableName}}</td>\r\n                                            <td>{{item.StatusName}}</td>\r\n                                            <td>{{item.Customer}}</td>\r\n                                            <td>{{item.Carrier}}</td>\r\n                                            <td>{{item.SourceRegion}}</td>  \r\n                                            <td *ngIf=\"item.Terminal.length>40\">\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': item.IsShowMore}\">{{item.Terminal}}</div>\r\n                                                <div class=\"d-none\" [ngClass]=\"{'d-block': !item.IsShowMore}\" *ngIf=\"(item.Terminal.length>40)\">{{item.Terminal | slice :0:40}}...</div>\r\n                                                <a (click)=\"item.IsShowMore = !item.IsShowMore\">View More/Less</a>\r\n                                            </td>\r\n                                            <td *ngIf=\"item.Terminal.length<=40\">{{item.Terminal}}</td>\r\n\r\n                                            <td>{{item.BulkPlant}}</td>\r\n                                            <td>{{item.FuelGroup}}</td>\r\n                                            <td>\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 mr-1\" mwlConfirmationPopover\r\n                                                   [popoverTitle]=\"popoverTitle\" [popoverMessage]=\"popoverMessage\" placement=\"left\"\r\n                                                   (cancel)=\"cancelClicked = true\" (confirm)=\"archiveFreightRate(item.Id)\"><i class=\"fa fa-trash-alt color-maroon \" placement=\"bottom\" ngbTooltip=\"Archive\"></i></a>\r\n\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'EDIT');\" placement=\"bottom\" ngbTooltip=\"Edit\"><i class=\"fas fa-edit\"></i></a>\r\n\r\n                                                <a class=\"btn btn-link fs16 ml-0\" (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'VIEW');\" placement=\"bottom\" ngbTooltip=\"View\">\r\n                                                    <i class=\"fas fa-street-view\"></i>\r\n                                                </a>\r\n\r\n                                                <a *ngIf=\"!item.IsArchived\" class=\"btn btn-link fs16 ml-0\"\r\n                                                   (click)=\"viewFreightRateRule(item.Id,item.FreightRateRuleTypeValue,'COPY');\" placement=\"bottom\" ngbTooltip=\"Copy\"><i class=\"fas fa-copy\"></i></a>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!--<div id=\"freightRate-panel\" class=\"side-panel pl5 pr5\">\r\n        <div class=\"side-panel-wrapper\">\r\n            <div class=\"pt15 pb0 mb10\">\r\n                <a class=\"ml15 close-panel\" onclick=\"closeSlidePanel();\"><i class=\"fa fa-close fs18\"></i></a>\r\n                <h3 class=\"dib mt0 mb0 ml15\">Freight Rate Table Details</h3>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n\r\n    <div class=\"loader\" *ngIf=\"IsLoading\">\r\n        <div class=\"loading-content text-center\">\r\n            <div class=\"spinner\"></div>\r\n            <div class=\"font-bold\">Loading...</div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"FreightRateRuleTypes\">Freight Pricing Rule</label>\r\n                        <ng-multiselect-dropdown formControlName=\"FreightRateRuleTypes\"\r\n                                                 id=\"FreightRateRuleTypes\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\" [data]=\"FreightRateRuleTypeList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewFreightRateForm.get('FreightRateRuleTypes').invalid && viewFreightRateForm.get('FreightRateRuleTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewFreightRateForm.get('FreightRateRuleTypes').errors.required\">\r\n                                Freight Pricing Rule is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [placeholder]=\"'Select Type (Required)'\"\r\n                                                 [settings]=\"SinlgeselectSettingsById\" [data]=\"TableTypeList\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"viewFreightRateForm.get('TableTypes').invalid && viewFreightRateForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"viewFreightRateForm.get('TableTypes').errors.required\">\r\n                                Table Type is required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     (onSelect)=\"onCustomersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCustomersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCustomersDeSelect($event)\"\r\n                                                     [settings]=\"MultiselectSettingsById\"  [data]=\"CustomerList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [settings]=\"MultiselectSettingsById\"\r\n                                                     [data]=\"CarrierList\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     (onSelect)=\"onCarriersSelect($event)\"\r\n                                                     (onDeSelect)=\"onCarriersDeSelect($event)\"\r\n                                                     (onDeSelectAll)=\"onCarriersDeSelect($event)\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"SourceRegions\">Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [settings]=\"MultiselectSettingsById\" \r\n                                                 [data]=\"SourceRegionList\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 (onSelect)=\"onSourceRegionsSelect($event)\"\r\n                                                 (onDeSelect)=\"onSourceRegionsDeSelect($event)\"\r\n                                                 (onDeSelectAll)=\"onSourceRegionsDeSelectAll($event)\">\r\n                        </ng-multiselect-dropdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"TerminalsAndBulkPlants\">Terminal(s)/BulkPlant(s)</label>\r\n                        <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                              [data]=\"TerminalsAndBulkPlantList\"\r\n                                              formControlName=\"TerminalsAndBulkPlants\"\r\n                                              [settings]=\"MultiSelectSettingsByGroup\">\r\n                        </angular2-multiselect>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>From</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"fromDate\"\r\n                               (onDateChange)=\"setfromDate($event);\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>To</label>\r\n                        <input type=\"text\" placeholder=\"Select Date\" formControlName=\"toDate\" [minDate]=\"minDate\"\r\n                               [maxDate]=\"maxDate\" (onDateChange)=\"settoDate($event);\" class=\"form-control datepicker\"\r\n                               myDatePicker [format]=\"'MM/DD/YYYY'\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-6 form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" formControlName=\"isArchived\" type=\"checkbox\" value=\"\" id=\"ckb-isArchived\">\r\n                        <label class=\"form-check-label\" for=\"ckb-isArchived\">\r\n                            Show Archived\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-6 text-right form-buttons mt20\">\r\n                    <button id=\"clear-filter\" type=\"button\" class=\"btn mt3 valid\" (click)=\"clearFilter()\">Clear Filter</button>\r\n                    <button id=\"filter-freight-rate-grid\" type=\"button\" class=\"btn btn-lg btn-primary mt3 valid\" [ngClass]=\"{'pntr-none subSectionOpacity': IsLoading}\" (click)=\"filterGrid();p.close()\">Apply</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </ng-template>\r\n</form>","import { Component, OnInit, Input, ViewChild, AfterViewInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\nimport { FreightRateRulesService } from 'src/app/freightRates/Services/freight-rate-rules.service'\r\nimport { Subject, forkJoin, merge } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FreightRateGridModel, FreightRateInputModel, FreightRateModel } from '../Models/viewFreightRateRules';\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service';\r\nimport { SourceRegionInputModel } from 'src/app/app.enum';\r\nimport { DataTableDirective } from 'angular-datatables';\r\n\r\n@Component({\r\n    selector: 'app-view-freight-rate-rules',\r\n    templateUrl: './view-freight-rate-rules.component.html',\r\n    styleUrls: ['./view-freight-rate-rules.component.css']\r\n})\r\nexport class ViewFreightRateRules implements OnInit{\r\n\r\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\r\n    public IsLoading: boolean = false;\r\n    public viewFreightRateForm: FormGroup;\r\n    dtOptions: any = {};\r\n    dtTrigger: Subject<any> = new Subject();\r\n    public SinlgeselectSettingsById = {};\r\n    public MultiselectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n    public CounrtyId: any;\r\n    \r\n    public FreightRateRuleTypeList: DropdownItem[];\r\n    public TableTypeList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n    public Frmodel: FreightRateModel;\r\n    public FreightRateList: FreightRateGridModel[] = [];\r\n    public FreightRateInput: FreightRateInputModel;\r\n    constructor(private fb: FormBuilder, private freightRateRulesService: FreightRateRulesService,\r\n        private regionService: RegionService, private fuelsurchargeService: FuelSurchargeService, private cdr: ChangeDetectorRef) { }\r\n\r\n    minDate = new Date();\r\n    maxDate = new Date();\r\n    public popoverTitle: string = 'Archive Confirmation';\r\n    public popoverMessage: string = 'Do you want to archive?';\r\n    public cancelClicked: boolean = false;\r\n    public confirmClicked: boolean = false;\r\n        \r\n    ngOnInit() {\r\n        this.maxDate.setFullYear(this.maxDate.getFullYear() + 20);\r\n        this.minDate.setFullYear(this.minDate.getFullYear() - 20);\r\n        this.CounrtyId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SinlgeselectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        this.getTableTypes();\r\n        this.getFreightRateRuleTypes();\r\n        this.viewFreightRateForm = this.createForm();\r\n        this.initializeFreightRateDatatableGrid();\r\n    }\r\n    ngOnDestroy() {\r\n        this.datatableInventoryRerender();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.getFreightRateGridDetails();\r\n    }\r\n\r\n\r\n\r\n    public viewFreightRateRule(ruleId: number, freightRateRuleType: number, mode: string) {\r\n        let operation = { RuleId: ruleId, FreightRateRuleType: freightRateRuleType, Mode: mode };\r\n        this.freightRateRulesService.onSelectedFreightRateRuleId.next(JSON.stringify(operation));\r\n        this.freightRateRulesService.onSelectedTabChanged.next(1);\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Frmodel == undefined || this.Frmodel == null) {\r\n            this.Frmodel = new FreightRateModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            FreightRateRuleTypes : new FormControl(this.Frmodel.FreightRateRuleTypes, [Validators.required]),\r\n            TableTypes: new FormControl(this.Frmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Frmodel.Customers),\r\n            Carriers: new FormControl(this.Frmodel.Carriers),\r\n            SourceRegions: new FormControl(this.Frmodel.SourceRegions),\r\n            TerminalsAndBulkPlants: new FormControl(this.Frmodel.TerminalsAndBulkPlants),\r\n            fromDate: [''],\r\n            toDate: [''],\r\n            isArchived: false\r\n        });\r\n    }\r\n\r\n    archiveFreightRate(freightRateId: number) {\r\n        this.IsLoading = true;\r\n        this.freightRateRulesService.archiveFreightRate(freightRateId)\r\n            .subscribe((response: any) => {\r\n                if (response.StatusCode == 0) {\r\n                    Declarations.msgsuccess('Selected Freight Rate archived successfully', undefined, undefined);\r\n                    this.filterGrid();\r\n                } \r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.viewFreightRateForm.get('Carriers').patchValue([]);\r\n        this.viewFreightRateForm.get('Customers').patchValue([]);\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                break;\r\n            case 2: // customer\r\n                this.IsCustomerSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n            case 3: //carrier\r\n                this.IsCarrierSelected = true;\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                break;\r\n        }\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.getSourceRegions(item.Id);\r\n    }\r\n\r\n    public onCarriersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersDeSelect(item: any): void {\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersSelect(item: any): void {\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCustomersDeSelect(item: any): void {\r\n        this.viewFreightRateForm.get('SourceRegions').patchValue([]);\r\n        this.onCarriersOrCustomersChange();\r\n    }\r\n\r\n    public onCarriersOrCustomersChange() {\r\n        var selectedTableType = this.viewFreightRateForm.get('TableTypes').value as DropdownItem[];\r\n        this.getSourceRegions(selectedTableType[0].Id.toString());\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            this.TableTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getFreightRateRuleTypes(): void {\r\n        this.freightRateRulesService.getFreightRateRuleTypes().subscribe(async (data) => {\r\n            this.FreightRateRuleTypeList = await data;\r\n        });\r\n    }\r\n\r\n    private getCarriers(): void {\r\n        this.IsLoading = true;\r\n        this.regionService.getCarriers().subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.SourceRegionList = null;\r\n                this.IsLoading = false;\r\n            });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getSourceRegions(tableType: string): void {\r\n        \r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.viewFreightRateForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.viewFreightRateForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.IsLoading = true;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(data => {\r\n            this.SourceRegionList = data;\r\n            this.IsLoading = false;\r\n        });\r\n    }\r\n\r\n    private getTerminalsBulkPlant(): void {\r\n        this.IsLoading = true;\r\n        var selectedSourceRegions = this.viewFreightRateForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions != undefined && selectedSourceRegions != null) {\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(selectedSourceRegions.map(s => s.Id).join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.IsLoading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public onSourceRegionsDeSelect(item: any): void {\r\n        this.IsSourceRegionSelected = this.Frmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    public onSourceRegionsDeSelectAll(item: any): void {\r\n        this.IsSourceRegionSelected = false;\r\n    }\r\n\r\n    public onSourceRegionsSelect(item: any): void {\r\n        this.getTerminalsBulkPlant();\r\n        this.IsSourceRegionSelected = this.Frmodel.SourceRegions.length > 0;\r\n    }\r\n\r\n    filterGrid() {\r\n        $(\"#freight-rate-grid-datatable\").DataTable().clear().destroy();\r\n        this.getFreightRateGridDetails();\r\n    }\r\n\r\n    clearFilter() {\r\n        this.clearForm();\r\n        this.getFreightRateGridDetails();\r\n        this.CustomerList = [];\r\n        this.CarrierList = [];\r\n        this.SourceRegionList = [];\r\n    }\r\n\r\n    clearForm() {\r\n        this.viewFreightRateForm.reset();\r\n        $(\"#freight-rate-grid-datatable\").DataTable().clear().destroy();\r\n    }\r\n\r\n    getFreightRateGridDetails() {\r\n        var input = new FreightRateInputModel();\r\n\r\n        var selectedFreightRateRuleTypes = this.viewFreightRateForm.get('FreightRateRuleTypes').value as DropdownItem[];\r\n        var selectedTableTypes = this.viewFreightRateForm.get('TableTypes').value as DropdownItem[];\r\n        var selectedCustomers = this.viewFreightRateForm.get('Customers').value as DropdownItem[];\r\n        var selectedCarriers = this.viewFreightRateForm.get('Carriers').value as DropdownItem[];\r\n        var selectedSourceRegions = this.viewFreightRateForm.get('SourceRegions').value as DropdownItem[];\r\n        var selectedTerminalAndBulkPlants = this.viewFreightRateForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n\r\n        input.StartDate = this.viewFreightRateForm.controls.fromDate.value;\r\n        input.EndDate = this.viewFreightRateForm.controls.toDate.value;\r\n        input.IsArchived = this.viewFreightRateForm.controls.isArchived.value;\r\n\r\n        if (selectedFreightRateRuleTypes != null && selectedFreightRateRuleTypes != undefined && selectedFreightRateRuleTypes.length > 0) {\r\n            var freightRateRuleTypeIds = selectedFreightRateRuleTypes.map(s => s.Id);\r\n            input.FreightRateRuleTypeIds = freightRateRuleTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedTableTypes != null && selectedTableTypes != undefined && selectedTableTypes.length > 0) {\r\n            var tableTypeIds = selectedTableTypes.map(s => s.Id);\r\n            input.TableTypeIds = tableTypeIds.join(',');\r\n        }\r\n\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            var customerIds = selectedCustomers.map(s => s.Id);\r\n            input.CustomerIds = customerIds.join(',');\r\n        }\r\n\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            var carrierIds = selectedCarriers.map(s => s.Id);\r\n            input.CarrierIds = carrierIds.join(',');\r\n        }\r\n\r\n        if (selectedSourceRegions != null && selectedSourceRegions != undefined && selectedSourceRegions.length > 0) {\r\n            var sourceRegionIds = selectedSourceRegions.map(s => s.Id);\r\n            input.SourceRegionIds = sourceRegionIds.join(',');\r\n        }\r\n\r\n        if (selectedTerminalAndBulkPlants != null && selectedTerminalAndBulkPlants != undefined && selectedTerminalAndBulkPlants.length > 0) {\r\n            var selectedTerminalIds = selectedTerminalAndBulkPlants.filter(c => c.Code == \"Terminals\");\r\n            var terminalIds = selectedTerminalIds.map(s => s.Id);\r\n            input.TerminalIds = terminalIds.join(',');\r\n\r\n            var selectedBulkPlants = selectedTerminalAndBulkPlants.filter(c => c.Code == \"BulkPlants\");\r\n            var bulkPlantIds = selectedBulkPlants.map(s => s.Id);\r\n            input.BulkPlantIds = bulkPlantIds.join(',');\r\n        }\r\n\r\n\r\n        this.IsLoading = true;\r\n        this.cdr.detectChanges();\r\n        this.freightRateRulesService.getFreightRateGridDetails(input).subscribe(data => {\r\n            this.IsLoading = false\r\n            if(data && data.length>0){\r\n                this.FreightRateList = data as FreightRateGridModel[];\r\n            }\r\n\r\n            this.dtTrigger.next();\r\n\r\n        });\r\n    }\r\n\r\n    private datatableInventoryRerender(): void {\r\n        if (this.datatableElement.dtInstance) {\r\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                dtInstance.destroy();\r\n            });\r\n        }\r\n    }\r\n    setfromDate($event) {\r\n        this.viewFreightRateForm.controls.fromDate.setValue($event);\r\n    }\r\n\r\n    settoDate($event) {\r\n        this.viewFreightRateForm.controls.toDate.setValue($event);\r\n    }\r\n\r\n    initializeFreightRateDatatableGrid() {\r\n        let exportColumns = { columns: ':visible' };\r\n        this.dtOptions = {\r\n            dom: '<\"html5buttons\"B>lTfgitp',\r\n            buttons: [\r\n                { extend: 'colvis' },\r\n                { extend: 'copy', exportOptions: exportColumns },\r\n                { extend: 'csv', title: 'Freight Rate', exportOptions: exportColumns },\r\n                { extend: 'pdf', title: 'Freight Rate', orientation: 'landscape', exportOptions: exportColumns },\r\n                { extend: 'print', exportOptions: exportColumns }\r\n            ],\r\n            pagingType: 'first_last_numbers',\r\n            pageLength: 10,\r\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\r\n        };\r\n       \r\n    }\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../modules/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MasterComponent } from './Master/master.component';\nimport { CreateFreightRateRules } from './Create/create-freight-rate-rules-component';\nimport { ViewFreightRateRules } from './View/view-freight-rate-rules.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { DirectiveModule } from '../modules/directive.module';\nimport { FreightComponent } from '../shared-components/Freight/freight.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nconst route: Routes = [\n    { path: '', component: MasterComponent },\n    { path: 'Create', component: MasterComponent },\n    { path: 'Create/:freightrateruleId', component: MasterComponent }\n]\n\n@NgModule({\n    declarations: [\n        MasterComponent,\n        CreateFreightRateRules,\n        ViewFreightRateRules,\n        FreightComponent\n    ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        FormsModule,\n        DataTablesModule,\n        DirectiveModule,\n        RouterModule.forChild(route),\n        AngularMultiSelectModule\n    ]\n})\nexport class FreightRateRulesModule { }\n","<form [formGroup]=\"rcForm\">\r\n    <fieldset [ngClass]=\"{'pntr-none': disableInputControls}\" [disabled]=\"disableInputControls ? true : null\">\r\n        <div class=\"well bg-white\">\r\n            <div class=\"row\">\r\n                <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <label>Table Name</label>\r\n                    <input type=\"text\" [readonly]=\"!IsEditable?true:null\" formControlName=\"TableName\" class=\"form-control\" />\r\n                    <div *ngIf=\"rcForm.get('TableName').invalid && rcForm.get('TableName').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.get('TableName').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <label for=\"TableTypes\">Table Type</label>\r\n                        <ng-multiselect-dropdown formControlName=\"TableTypes\"\r\n                                                 [disabled]=\"PricingRuleType==1\"\r\n                                                 class=\"single-select\"\r\n                                                 id=\"TableTypes\"\r\n                                                 [placeholder]=\"'Select Type'\"\r\n                                                 [settings]=\"SingleSelectSettingsById\"\r\n                                                 [data]=\"TableTypeList\"\r\n                                                 (onSelect)=\"onTableTypeSelect($event)\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"rcForm.get('TableTypes').invalid && rcForm.get('TableTypes').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('TableTypes').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                        <div class=\"col-sm-3\" [ngClass]=\"{'hide-element':PricingRuleType==1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customers\">Select Customer(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     id=\"Customers\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customers'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-3 form-group\" [ngClass]=\"{'hide-element':PricingRuleType!=1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Customer\">Select Customer</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Customers\"\r\n                                                     class=\"single-select\"\r\n                                                     id=\"Customer\"\r\n                                                     [data]=\"CustomerList\"\r\n                                                     [placeholder]=\"'Select Customer'\"\r\n                                                     [settings]=\"SingleSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                            <div *ngIf=\"IsCustomerSelected && rcForm.get('Customers').invalid && rcForm.get('Customers').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Customers').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 form-group\" [ngClass]=\"{'hide-element':PricingRuleType!=1,'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Locations\">Select Location(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Locations\"\r\n                                                     id=\"Locations\"\r\n                                                     [data]=\"LocationList\"\r\n                                                     [placeholder]=\"'Select Locations'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\">\r\n                            </ng-multiselect-dropdown>\r\n\r\n                            <div *ngIf=\"IsCustomerSelected && rcForm.get('Locations').invalid && rcForm.get('Locations').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Locations').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': IsMasterSelected}\">\r\n                            <label for=\"Carriers\">Select Carrier(s)</label>\r\n                            <ng-multiselect-dropdown formControlName=\"Carriers\"\r\n                                                     id=\"Carriers\"\r\n                                                     [placeholder]=\"'Select Carriers'\"\r\n                                                     [settings]=\"MultiSelectSettingsById\"\r\n                                                     [data]=\"CarrierList\">\r\n                            </ng-multiselect-dropdown>\r\n                            <div *ngIf=\"IsCarrierSelected && rcForm.get('Carriers').invalid && rcForm.get('Carriers').touched\" class=\"color-maroon\">\r\n                                <div *ngIf=\"rcForm.get('Carriers').errors.required\">\r\n                                    Required.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div class=\"col-sm-3 form-group\">\r\n                        <label for=\"SourceRegions\">Select Source Region(s)</label>\r\n                        <ng-multiselect-dropdown formControlName=\"SourceRegions\"\r\n                                                 id=\"SourceRegions\"\r\n                                                 [placeholder]=\"'Select Source Regions'\"\r\n                                                 [settings]=\"MultiSelectSettingsById\"\r\n                                                 [data]=\"SourceRegionList\">\r\n                        </ng-multiselect-dropdown>\r\n                        <div *ngIf=\"rcForm.get('SourceRegions').invalid && rcForm.get('SourceRegions').touched\" class=\"color-maroon\">\r\n                            <div *ngIf=\"rcForm.get('SourceRegions').errors.required\">\r\n                                Required.\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3 form-group\">\r\n\r\n                        <div [ngClass]=\"{'pntr-none subSectionOpacity': !IsSourceRegionSelected}\">\r\n                            <label for=\"TerminalsAndBulkPlants\">Select Terminal(s)/BulkPlant(s)</label>\r\n                            <angular2-multiselect id=\"TerminalsAndBulkPlants\"\r\n                                                  [data]=\"TerminalsAndBulkPlantList\"\r\n                                                  formControlName=\"TerminalsAndBulkPlants\"\r\n                                                  [settings]=\"MultiSelectSettingsByGroup\">\r\n                            </angular2-multiselect>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <div class=\"form-group\">\r\n                                <label>Effective From</label>\r\n                                <input type=\"text\" formControlName=\"StartDate\" class=\"form-control datepicker\"\r\n                                       placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                       (onDateChange)=\"setStartDate($event);\" [minDate]=\"MinStartDate\"\r\n                                       [maxDate]=\"MaxStartDate\" />\r\n                                <div *ngIf=\"rcForm.get('StartDate').invalid && rcForm.get('StartDate').touched\" class=\"color-maroon\">\r\n                                    <div *ngIf=\"rcForm.get('StartDate').errors.required\">\r\n                                        Required.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <div class=\"form-group\">\r\n                                <label>End Date (Optional) </label>\r\n                                <!--<input type=\"text\" class=\"form-control\" formControlName=\"EndDate\" />-->\r\n                                <input type=\"text\" formControlName=\"EndDate\" class=\"form-control datepicker\"\r\n                                       placeholder=\"Date\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                                       (onDateChange)=\"setEndDate($event);\" [minDate]=\"MinToDate\" [maxDate]=\"MaxStartDate\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-standard\" [name]=\"'FuelGroupType'\" [value]=\"1\"\r\n                                   (change)=\"FuelGroupTypeChange(1)\">\r\n                            <label class=\"form-check-label\" for=\"occurance-standard\">Standard</label>\r\n                        </div>\r\n                        <div class=\"form-check form-check-inline\">\r\n                            <input class=\"form-check-input\" type=\"radio\" formControlName=\"FuelGroupType\" id=\"occurance-custom\" [name]=\"'FuelGroupType'\" [value]=\"2\"\r\n                                   (change)=\"FuelGroupTypeChange(2)\"\r\n                                   [attr.disabled]=\"IsMasterSelected || rcForm.get('Customers').value.length>1 || rcForm.get('Carriers').value.length>1 || (rcForm.get('Customers').value.length>0 && rcForm.get('Carriers').value.length>0) ?true:null\">\r\n                            <label class=\"form-check-label\" for=\"occurance-custom\">Custom</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <label class=\"form-check-label\" for=\"selectfuelGroups\">Fuel Groups</label>\r\n                    <ng-multiselect-dropdown formControlName=\"FuelGroups\"\r\n                                             id=\"selectfuelGroups\"\r\n                                             [placeholder]=\"'Select Fuel Group'\"\r\n                                             [settings]=\"MultiSelectSettingsById\"\r\n                                             [data]=\"FuelGroupsList\">\r\n                    </ng-multiselect-dropdown>\r\n                    <div *ngIf=\"rcForm.get('FuelGroups').invalid && rcForm.get('FuelGroups').touched\" class=\"color-maroon\">\r\n                        <div *ngIf=\"rcForm.get('FuelGroups').errors.required\">\r\n                            Required.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\" *ngIf=\"PricingRuleType==2\">\r\n                <div class=\"col-sm-4\">\r\n                    <table class=\"table table-bordered table-hover mt-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=\"4\">Range Value</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Start Value</th>\r\n                                <th>End Value</th>\r\n                                <th>Interval</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeStartValue\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeStartValue').invalid && rcForm.get('RangeStartValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeStartValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeStartValue').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeEndValue\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeEndValue').invalid && rcForm.get('RangeEndValue').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeEndValue').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeEndValue').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" formControlName=\"RangeInterval\" class=\"form-control\" />\r\n                                    <div *ngIf=\"rcForm.get('RangeInterval').invalid && rcForm.get('RangeInterval').touched\" class=\"color-maroon\">\r\n                                        <div *ngIf=\"rcForm.get('RangeInterval').errors.required\">\r\n                                            Required.\r\n                                        </div>\r\n                                        <div *ngIf=\"rcForm.get('RangeInterval').errors.pattern\">\r\n                                            Invalid, must be greater than zero.\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div *ngIf=\"rcForm.get('RangeStartValue').valid && rcForm.get('RangeEndValue').valid && +(rcForm.get('RangeStartValue').value)>+(rcForm.get('RangeEndValue').value)\" class=\"color-maroon\">\r\n                                        Invalid range.\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-3 form-group\">\r\n                    <input type=\"button\" class=\"btn btn-primary ml-0\"\r\n                           (click)=\"generateTable()\" value=\"Generate Table\" />\r\n                    <div *ngIf=\"ShowMessage\" class=\"color-maroon\">\r\n                        Please click to generate table.\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-3\" *ngIf=\"PricingRuleType!=3\">\r\n                    <button type=\"button\" class=\"btn btn-primary float-right mb5 valid\"\r\n                            [disabled]=\"!IsRangePopupOpen\"\r\n                            (click)=\"importClick()\" data-toggle=\"modal\" data-target=\"#RangeFreightRateModalPopup\">\r\n                        Import\r\n                        <span *ngIf=\"PricingRuleType==1\">P2P</span>\r\n                        <span *ngIf=\"PricingRuleType==2\">Range</span>\r\n                        Table\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</form>\r\n\r\n<div id=\"RangeFreightRateModalPopup\" class=\"modal fade\" role=\"dialog\" *ngIf=\"IsShowBulkUploadPopup && IsRangePopupOpen\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header pt0 pb5\">\r\n                <h4 class=\"modal-title\">Upload Range Table</h4>\r\n                <button type=\"button\" #btnCloseBulkUploadPopup class=\"close color-grey\" data-dismiss=\"modal\"\r\n                        aria-label=\"Close\" (click)=\"closePopup()\">\r\n                    <i class=\"fa fa-close fs21 mt15\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"mb10\">\r\n                    <span class=\"fa fa-download mr10 mt10\"></span>\r\n                    <a role=\"button\" (click)=\"downloadCsvTemplate()\" class=\"mb5 btn-download\">Download Dynamic Template</a>\r\n                    <br />\r\n                    <span>Note: Generate Dynamic template based on selected fule group order.</span>\r\n                </div>\r\n                <div class=\"mb5 mt5\">\r\n                    <input type=\"file\" id=\"bulkUploadFile\" (change)=\"selectFiles($event.target.files)\" accept=\".csv\">\r\n                </div>\r\n                <div *ngIf=\"(isLoadingSubject | async)\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                    <span class='spinner-dashboard pa'></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\"\r\n                        (click)=\"uploadRangeTableFile()\">\r\n                    Upload\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, EventEmitter, OnChanges, SimpleChanges, ElementRef, ViewChild } from '@angular/core';\r\nimport { FreightPricingRulesViewModel } from 'src/app/freightRates/Models/createFreightRateRules'\r\nimport { ExternalMappingsService } from 'src/app/self-service-alias/service/externalmappings.service';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage'\r\nimport { FuelSurchargeService } from 'src/app/fuelsurcharge/services/fuelsurcharge.service'\r\nimport { Subject, forkJoin, merge, BehaviorSubject } from 'rxjs';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { RegionService } from 'src/app/company-addresses/region/service/region.service';\r\nimport { DropdownItem, DropdownItemExt } from 'src/app/statelist.service';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport * as moment from 'moment';\r\nimport { pairwise, startWith } from 'rxjs/operators';\r\nimport { FreightRateRulesService } from '../../freightRates/Services/freight-rate-rules.service';\r\nimport { FreightRateRuleType, FreightTableStatus, FuelGroupType, SourceRegionInputModel, TableType } from 'src/app/app.enum';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-freight',\r\n    templateUrl: './freight.component.html',\r\n    styleUrls: ['./freight.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class FreightComponent implements OnInit, OnChanges {\r\n    @Input() PricingRuleType: number;\r\n    @Input() IsEditable: boolean;\r\n    @Output() onGenerateTable = new EventEmitter<any>();\r\n    @Output() onGenerateFuelGroup = new EventEmitter<any>();\r\n    @Output() onImportClick = new EventEmitter<any>();\r\n    @ViewChild('btnCloseBulkUploadPopup') CloseBulkUploadPopup: ElementRef;\r\n\r\n    public rcForm: FormGroup;\r\n\r\n    public DtTrigger: Subject<any> = new Subject();\r\n\r\n    public SingleSelectSettingsById = {};\r\n    public MultiSelectSettingsById: IDropdownSettings;\r\n    public MultiSelectSettingsByGroup = {};\r\n\r\n    public isLoadingSubject: BehaviorSubject<any>;\r\n\r\n    public IsLoaded: boolean = true;\r\n\r\n    public Fsmodel: FreightPricingRulesViewModel;\r\n    public CountryId: any;\r\n\r\n    public TableTypeList: DropdownItem[];\r\n    public FuelGroupsList: DropdownItem[];\r\n    public CustomerList: DropdownItem[];\r\n    public LocationList: DropdownItem[];\r\n    public CarrierList: DropdownItem[];\r\n    public SourceRegionList: DropdownItem[];\r\n    public TerminalsAndBulkPlantList: DropdownItemExt[] = [];\r\n    public SelectedTerminalsAndBulkPlants: DropdownItemExt[] = [];\r\n\r\n    public IsCustomerSelected = false;\r\n    public IsMasterSelected = false;\r\n    public IsCarrierSelected = false;\r\n    public IsSourceRegionSelected = false;\r\n\r\n    public SelectedFiles: File[] = [];\r\n    public IsShowBulkUploadPopup: boolean = false;\r\n    public MaxFileUploadSize: number = 1048576; // 1MB\r\n    public confirmButtonText: string = 'Yes';\r\n    public cancelButtonText: string = 'No';\r\n    public disableInputControls: boolean = false;\r\n\r\n    public ShowMessage = false;\r\n\r\n    public decimalSupportedRegx = /^(?:(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?|\\.[0-9]+)$/;\r\n    public intGreaterThanZeroRegx = /^[1-9][0-9]*$/;\r\n\r\n    public MinStartDate = new Date();\r\n    public MaxStartDate = new Date();\r\n    public MinToDate = new Date();\r\n    public MinFromDate = new Date();\r\n\r\n    constructor(private fb: FormBuilder, private fuelsurchargeService: FuelSurchargeService, private freightRateRulesService: FreightRateRulesService,\r\n        private regionService: RegionService, private externalMappingsService: ExternalMappingsService) { }\r\n\r\n    ngOnInit() {\r\n        this.isLoadingSubject = new BehaviorSubject(false);\r\n        this.CountryId = MyLocalStorage.getData(\"countryIdForDashboard\");\r\n        this.SingleSelectSettingsById = {\r\n            singleSelection: true,\r\n            closeDropDownOnSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            enableCheckAll: false,\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true\r\n        };\r\n        this.MultiSelectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 5,\r\n            allowSearchFilter: true\r\n        };\r\n\r\n        this.MultiSelectSettingsByGroup = {\r\n            singleSelection: false,\r\n            text: \"Select Terminals or Bulk Plants\",\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            searchPlaceholderText: 'Search',\r\n            primaryKey: \"Id\",\r\n            labelKey: \"Name\",\r\n            enableSearchFilter: true,\r\n            badgeShowLimit: 5,\r\n            groupBy: \"Code\"\r\n        };\r\n\r\n        var dt = moment(new Date()).toDate();\r\n        this.rcForm = this.createForm();\r\n        this.getTableTypes();\r\n        this.rcForm.get('FuelGroupType').setValue(FuelGroupType.Standard);\r\n        this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        if (this.PricingRuleType != FreightRateRuleType.P2P) {\r\n            this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Master, Name: \"Master\" }]);// default will master\r\n            this.IsMasterSelected = true;\r\n        } else {\r\n            this.rcForm.controls['TableTypes'].patchValue([{ Id: TableType.Customer, Name: \"Customer Specific\" }]);\r\n            this.IsCustomerSelected = true;\r\n            //this.IsMasterSelected = false;\r\n        }\r\n        this.getSourceRegions(TableType.Master.toString());\r\n\r\n        merge(\r\n            this.rcForm.get('Customers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.CustomerChange(prev, next);\r\n            });\r\n\r\n\r\n        merge(\r\n            this.rcForm.get('Locations').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.LocationChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('Carriers').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.CarrierChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('SourceRegions').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.SourceRegionChange(prev, next);\r\n            });\r\n\r\n        merge(\r\n            this.rcForm.get('TerminalsAndBulkPlants').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.TerminalsAndBulkPlantsChange(prev, next);\r\n            });\r\n\r\n\r\n        merge(\r\n            this.rcForm.get('FuelGroups').valueChanges\r\n        )\r\n            .pipe(startWith(null), pairwise())\r\n            .subscribe(([prev, next]: [any, any]) => {\r\n                if (this.IsLoaded && JSON.stringify(prev) != JSON.stringify(next)) this.FuelGroupsChange(prev, next);\r\n            });\r\n\r\n        \r\n        this.MaxStartDate.setFullYear(this.MaxStartDate.getFullYear() + 20);\r\n        this.MinStartDate.setFullYear(this.MinStartDate.getFullYear() - 20);\r\n        this.rcForm.get('StartDate').setValue(moment(dt).format('MM/DD/YYYY'));\r\n\r\n    }\r\n\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.PricingRuleType && change.PricingRuleType.currentValue) {\r\n            this.PricingRuleType = change.PricingRuleType.currentValue;\r\n            if (change.PricingRuleType.previousValue && change.PricingRuleType.currentValue != change.PricingRuleType.previousValue) {\r\n               \r\n            }\r\n        }\r\n\r\n        if (change.IsEditable && change.IsEditable.currentValue) {\r\n            this.IsEditable = change.IsEditable.currentValue;\r\n            if (change.IsEditable.previousValue && change.IsEditable.currentValue != change.IsEditable.previousValue) {\r\n                // todo : will progress\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private createForm() {\r\n        if (this.Fsmodel == undefined || this.Fsmodel == null) {\r\n            this.Fsmodel = new FreightPricingRulesViewModel();\r\n        }\r\n\r\n        return this.fb.group({\r\n            FuelGroupType: new FormControl(this.Fsmodel.FuelGroupType),\r\n            TableTypeId: new FormControl(this.Fsmodel.TableTypeId),\r\n            TableName: new FormControl(this.Fsmodel.TableName, Validators.required),\r\n            TableTypes: new FormControl(this.Fsmodel.TableTypes, [Validators.required]),\r\n            Customers: new FormControl(this.Fsmodel.Customers),\r\n            Locations: new FormControl(this.Fsmodel.Locations),\r\n            Carriers: new FormControl(this.Fsmodel.Carriers),\r\n            FuelGroups: new FormControl(this.Fsmodel.FuelGroups, [Validators.required]),\r\n            SourceRegions: new FormControl(this.Fsmodel.SourceRegions, [Validators.required]),\r\n            TerminalsAndBulkPlants: new FormControl(this.SelectedTerminalsAndBulkPlants),\r\n            StatusId: new FormControl(this.Fsmodel.StatusId),\r\n            StartDate: new FormControl(this.Fsmodel.StartDate, [Validators.required]),\r\n            EndDate: new FormControl(this.Fsmodel.EndDate),\r\n            RangeStartValue: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            RangeEndValue: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)]),\r\n            RangeInterval: new FormControl('', [Validators.required, Validators.pattern(this.intGreaterThanZeroRegx)])\r\n\r\n        });\r\n    }\r\n\r\n    public setStartDate(event: any): void {\r\n        this.rcForm.get('StartDate').setValue(event);\r\n        if (this.rcForm.get('StartDate').value != null && this.rcForm.get('StartDate').value != undefined && this.rcForm.get('StartDate').value != \"\") {\r\n            this.MinToDate = new Date(moment(this.rcForm.get('StartDate').value).format());\r\n        }\r\n    }\r\n\r\n    public setEndDate(event: any): void {\r\n        this.rcForm.get('EndDate').setValue(event);\r\n    }\r\n   \r\n\r\n    public FuelGroupTypeChange(fgt: number): void {\r\n        this.isLoadingSubject.next(true);\r\n        //this.ViewOrEdit = \"VIEW\";\r\n        this.rcForm.get('FuelGroups').patchValue([]);\r\n        let selectedCustomers: DropdownItem[] = [];\r\n        let selectedCarriers: DropdownItem[] = [];\r\n        \r\n        selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];        \r\n        selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n\r\n        if (selectedCustomers.length > 1 || selectedCarriers.length > 1 || (selectedCustomers.length > 0 && selectedCarriers.length > 0)) {\r\n            this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        } else {\r\n            this.getFuelGroups(fgt, selectedCustomers.length > 0 ? selectedCustomers.map(s => s.Id).join(',') : selectedCarriers.map(s => s.Id).join(','));\r\n        }\r\n\r\n        this.isLoadingSubject.next(false);\r\n\r\n    }\r\n    public onTableTypeSelect(item: any): void {\r\n        this.IsMasterSelected = false;\r\n        this.IsCustomerSelected = false;\r\n        this.IsCarrierSelected = false;\r\n        this.rcForm.get('Carriers').patchValue([]);\r\n        this.rcForm.get('Customers').patchValue([]);\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n\r\n        switch (item.Id) {\r\n            case 1: //master\r\n                this.IsMasterSelected = true;\r\n                //this.IsCarrierSelected = true;\r\n                //this.getCarriers();\r\n                this.AddRemoveValidations([this.rcForm.get('TableTypes')], [this.rcForm.get('Customers'), this.rcForm.get('Carriers')]); //\"Carriers,Customers\"\r\n                this.getSourceRegions(item.Id);\r\n                this.rcForm.get('FuelGroupType').setValue(FuelGroupType.Standard);\r\n                \r\n                break;\r\n            case 2: // customer\r\n                this.getSupplierCustomers();\r\n                this.getCarriers();\r\n                this.IsCustomerSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Customers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Carriers')]);\r\n                \r\n                break;\r\n            case 3: //carrier\r\n                this.getCarriers();\r\n                this.getSupplierCustomers();\r\n                this.IsCarrierSelected = true;\r\n                this.AddRemoveValidations([this.rcForm.get('Carriers'), this.rcForm.get('TableTypes')], [this.rcForm.get('Customers')]);\r\n                \r\n                break;\r\n        }\r\n       \r\n        this.getFuelGroups(+this.rcForm.get('FuelGroupType').value, \"\");\r\n       \r\n    }\r\n\r\n    public LocationChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n    }\r\n    public CustomerChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.Locations.patchValue([]);\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        this.rcForm.controls.SourceRegions.patchValue([]);\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n        //this.FuelGroupsList = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n\r\n        if (this.IsCustomerSelected) {\r\n            this.getSourceRegions(TableType.Customer.toString()); \r\n        }\r\n        if (this.IsCarrierSelected) {\r\n            this.getSourceRegions(TableType.Carrier.toString());\r\n        }        \r\n\r\n        if (selectedCustomers.length > 1 || selectedCarriers.length > 1 || (selectedCustomers.length > 0 && selectedCarriers.length > 0)) {\r\n            this.getFuelGroups(FuelGroupType.Standard, \"\");\r\n        } else {\r\n            this.getFuelGroups(+this.rcForm.get('FuelGroupType').value, selectedCustomers.length > 0 ? selectedCustomers.map(s => s.Id).join(',') : selectedCarriers.map(s => s.Id).join(','));\r\n        }\r\n\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            if (selectedCustomers.length > 0) {\r\n                this.freightRateRulesService.getCustomerJobs(selectedCustomers[0].Id).subscribe(async (data) => {\r\n                    this.LocationList = await (data);\r\n                    this.DtTrigger.next();\r\n                    this.isLoadingSubject.next(false);\r\n                });\r\n            }\r\n            this.AddRemoveValidations([this.rcForm.get('Locations')], null);\r\n        } else {\r\n            this.AddRemoveValidations(null, [this.rcForm.get('Locations')]);\r\n        }\r\n\r\n    }\r\n\r\n    public CarrierChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.CustomerChange(prev, next);\r\n    }\r\n\r\n\r\n    public FuelGroupsChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.ShowMessage = true;\r\n        this.onGenerateFuelGroup.emit(true);\r\n    }\r\n    public TerminalsAndBulkPlantsChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        //this.rcForm.controls.FuelGroups.patchValue([]);\r\n    }\r\n\r\n    public SourceRegionChange(prev: any, next: any) {\r\n        if (prev == null && next.length == 0) return;\r\n        this.rcForm.controls.TerminalsAndBulkPlants.patchValue([]);\r\n        //this.FuelGroupsList = [];\r\n        this.IsSourceRegionSelected = false\r\n        var ids = [];\r\n        this.ShowMessage = true;\r\n\r\n        let selectedSourceRegions = this.rcForm.get('SourceRegions').value as DropdownItem[];\r\n        if (selectedSourceRegions.length > 0) {\r\n            this.isLoadingSubject.next(true);\r\n            selectedSourceRegions.forEach(s => ids.push(s.Id));\r\n            this.fuelsurchargeService.getTerminalsAndBulkPlants(ids.join(',')).subscribe(async (data) => {\r\n                this.TerminalsAndBulkPlantList = await (data);\r\n                this.rcForm.controls.TerminalsAndBulkPlants.setValue(this.TerminalsAndBulkPlantList);\r\n                this.IsSourceRegionSelected = true;\r\n                this.DtTrigger.next();\r\n                this.isLoadingSubject.next(false);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public ValidateOnSubmit(freightTableStatus: number): boolean {\r\n        this.isLoadingSubject.next(true);\r\n        this.ShowMessage = false;\r\n        // publish or draft\r\n        this.modeChangePublishORdraftValidators(freightTableStatus);\r\n        this.markFormGroupTouched(this.rcForm)\r\n        this.isLoadingSubject.next(false);\r\n\r\n        if (!this.rcForm.valid) {\r\n            //let selectedSourceRegion = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n            this.ShowMessage = true;\r\n        }\r\n\r\n        return this.ShowMessage;\r\n    }\r\n\r\n    public ValidateOnGenearteRow(): boolean {\r\n        this.isLoadingSubject.next(true);\r\n        this.ShowMessage = false;\r\n        // publish or draft\r\n        this.clearAllValidations(this.rcForm); // clear all validation\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeStartValue], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeEndValue],null);\r\n            this.AddRemoveValidations([this.rcForm.controls.RangeInterval], null);\r\n        }\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.FuelGroups], null);\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.TerminalsAndBulkPlants], null);\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            this.AddRemoveValidations([this.rcForm.controls.Locations], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.Customers], null);\r\n        }\r\n\r\n        this.rcForm.get('StartDate').setValidators([Validators.required]);\r\n        this.rcForm.get('StartDate').updateValueAndValidity();\r\n        this.rcForm.get('StartDate').markAsTouched();\r\n        this.markFormGroupTouched(this.rcForm)\r\n        this.isLoadingSubject.next(false);\r\n\r\n        if (!this.rcForm.valid) {\r\n            this.ShowMessage = true;\r\n        }\r\n        \r\n        return this.ShowMessage;\r\n    }\r\n\r\n    public generateTable(): void {\r\n        this.ValidateOnGenearteRow();\r\n        this.rcForm.get('SourceRegions').setValidators([Validators.required]);\r\n        this.rcForm.get('SourceRegions').updateValueAndValidity();\r\n        this.onGenerateTable.emit(true);\r\n    }\r\n\r\n\r\n\r\n    private AddRemoveValidations(requiredControls: AbstractControl[], notRequiredControls: AbstractControl[]) {\r\n        if (requiredControls != null && requiredControls != undefined && requiredControls.length > 0) {\r\n\r\n            requiredControls.forEach(ctrl => {\r\n                ctrl.setValidators([Validators.required]);\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n        if (notRequiredControls != null && notRequiredControls != undefined && notRequiredControls.length > 0) {\r\n\r\n            notRequiredControls.forEach(ctrl => {\r\n                ctrl.clearValidators();\r\n                ctrl.updateValueAndValidity();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private modeChangePublishORdraftValidators(statusId: number) {\r\n\r\n        this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for all mode\r\n\r\n        if (statusId == FreightTableStatus.Draft) {\r\n            this.clearAllValidations(this.rcForm); // clear all validation\r\n            this.AddRemoveValidations([this.rcForm.controls.TableName], null); // minimum validation for draft \r\n        }\r\n        else if (statusId == FreightTableStatus.Published) {            \r\n            this.AddRemoveValidations([this.rcForm.controls.FuelGroups], null);\r\n            this.AddRemoveValidations([this.rcForm.controls.TerminalsAndBulkPlants], null);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeStartValue]);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeEndValue]);\r\n            this.AddRemoveValidations(null, [this.rcForm.controls.RangeInterval]);\r\n            if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n                this.AddRemoveValidations([this.rcForm.controls.Locations], null);\r\n                this.AddRemoveValidations([this.rcForm.controls.Customers], null);\r\n            }\r\n\r\n            this.rcForm.get('StartDate').setValidators([Validators.required]);\r\n            this.rcForm.get('StartDate').updateValueAndValidity();\r\n            this.rcForm.get('StartDate').markAsTouched();\r\n\r\n        }\r\n    }\r\n\r\n    private clearAllValidations(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n            control.clearValidators();\r\n            control.updateValueAndValidity();\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.clearAllValidations(control);\r\n            }\r\n        });\r\n    }\r\n\r\n    private markFormGroupTouched(formGroup: FormGroup) {\r\n        (<any>Object).values(formGroup.controls).forEach(control => {\r\n\r\n            control.markAsTouched();\r\n            if (control.controls) {\r\n                this.markFormGroupTouched(control);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public ngOnDestroy(): void {\r\n        this.DtTrigger.unsubscribe();\r\n    }\r\n\r\n\r\n    private getCarriers(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.regionService.getCarriers()\r\n            .subscribe(async (carriers: DropdownItem[]) => {\r\n                this.CarrierList = await carriers;\r\n                this.DtTrigger.next();\r\n                this.isLoadingSubject.next(false);\r\n            });\r\n    }\r\n\r\n    private getTableTypes(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.fuelsurchargeService.getTableTypes().subscribe(async (data) => {\r\n            if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n               let tableType = await (data);\r\n                this.TableTypeList = tableType.filter(s => s.Id == FreightRateRuleType.P2P)\r\n            } else {\r\n                this.TableTypeList = await (data);\r\n            }\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    private getSupplierCustomers(): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.fuelsurchargeService.getSupplierCustomers().subscribe(async (data) => {\r\n            this.CustomerList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n   \r\n    private getFuelGroups(fuelGroupType:number, companyIds: string): void {\r\n        this.isLoadingSubject.next(true);\r\n        this.rcForm.get('FuelGroupType').setValue(fuelGroupType);\r\n        this.externalMappingsService.getFuelGroups(fuelGroupType,companyIds).subscribe(async (data) => {\r\n            this.FuelGroupsList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    //companyIds : Based on tableType we will be call API , if tableType master or customer or carrier, full source region,customers,carriers loads will populated.\r\n    private getSourceRegions(tableType: string): void {\r\n        this.isLoadingSubject.next(true);\r\n        let customerIds: number[] = [];\r\n        let carrierIds: number[] = [];\r\n\r\n        let selectedCustomers = this.rcForm.get('Customers').value as DropdownItem[];\r\n        if (selectedCustomers != null && selectedCustomers != undefined && selectedCustomers.length > 0) {\r\n            customerIds = selectedCustomers.map(s => s.Id);\r\n        }\r\n\r\n        let selectedCarriers = this.rcForm.get('Carriers').value as DropdownItem[];\r\n        if (selectedCarriers != null && selectedCarriers != undefined && selectedCarriers.length > 0) {\r\n            carrierIds = selectedCarriers.map(s => s.Id);\r\n        }\r\n\r\n        var sourceRegionInput = new SourceRegionInputModel();\r\n        sourceRegionInput.TableType = tableType;\r\n        sourceRegionInput.CustomerId = customerIds;\r\n        sourceRegionInput.CarrierId = carrierIds;\r\n        this.fuelsurchargeService.getSourceRegions(sourceRegionInput).subscribe(async (data) => {\r\n            this.SourceRegionList = await (data);\r\n            this.DtTrigger.next();\r\n            this.isLoadingSubject.next(false);\r\n        });\r\n    }\r\n\r\n    public importClick() {\r\n        this.generateTable();\r\n        if (!this.ShowMessage) this.IsShowBulkUploadPopup = true;\r\n    }\r\n\r\n    public closePopup() {\r\n        this.IsShowBulkUploadPopup = false;\r\n    }\r\n\r\n    get IsRangePopupOpen(){\r\n        let selectedFuelGroups = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n       \r\n        return selectedFuelGroups.length > 0 && !this.ShowMessage && (this.PricingRuleType == FreightRateRuleType.P2P || (this.rcForm.get('RangeStartValue').value > 0 && this.rcForm.get('RangeEndValue').value > 0 && this.rcForm.get('RangeInterval').value > 0));\r\n        \r\n    }\r\n\r\n    public selectFiles(files: File[]) {\r\n        if (files != null && files != undefined && files.length > 0)\r\n            this.SelectedFiles = files;\r\n    }\r\n\r\n    private GenerateRange(start: number, end: number, step: number = 0) {\r\n        let output = [];\r\n        if (typeof end === 'undefined') {\r\n            end = start;\r\n            start = 0;\r\n        }\r\n        for (let i = start; i <= end; i += step) {\r\n            output.push(i);\r\n        }\r\n        return output;\r\n    }\r\n    public downloadCsvTemplate() {\r\n        this.isLoadingSubject.next(true);\r\n        const a = document.createElement('a');\r\n        var columnName = [];\r\n        var template: string;\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            columnName.push(\"Upto\");\r\n        }\r\n        else if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            columnName.push(\"Terminal/Bulk Plants\");\r\n            columnName.push(\"Location Name\");\r\n            columnName.push(\"Location Address\");\r\n            columnName.push(\"LaneId\");            \r\n            columnName.push(\"Assumed Miles\");\r\n        }\r\n        let selectedFuelGroups = this.rcForm.get('FuelGroups').value as DropdownItem[];\r\n        let rep = \",\";\r\n        selectedFuelGroups.forEach(s => columnName.push(s.Name));\r\n        template = columnName.join(',');\r\n        if (this.PricingRuleType == FreightRateRuleType.P2P) {            \r\n            template = template.concat(\",IsLaneRequired\") + \"\\n\";\r\n            var cols = [];\r\n            let trbls = this.rcForm.get('TerminalsAndBulkPlants').value as DropdownItemExt[];\r\n            let sLocations = this.rcForm.get('Locations').value as DropdownItem[];\r\n            let JobIds: number[] = [];\r\n            sLocations.forEach(s => JobIds.push(s.Id));\r\n            let locs = this.LocationList.filter(this.IdInComparer(JobIds));\r\n            for (var i = 0; i < trbls.length; i++) {\r\n                for (var j = 0; j < locs.length; j++) {                  \r\n                    template = template.concat(trbls[i].Id + \"|\" + trbls[i].Name + \",\" + locs[j].Id + \"|\" + locs[j].Name + \",\" + locs[j].Code + ',' + trbls[i].Id.split(\"_\")[1] + \" \" + locs[j].Id ) + rep.repeat(selectedFuelGroups.length+2) + \"1\"  + \"\\n\";\r\n                }\r\n               \r\n            }\r\n        }\r\n        \r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            let start = this.rcForm.get('RangeStartValue').value;\r\n            let stop = this.rcForm.get('RangeEndValue').value;\r\n            let step = this.rcForm.get('RangeInterval').value;\r\n            template = template + \"\\n\";\r\n            this.GenerateRange(+start, +stop, +step).forEach(res => {\r\n                template = template + \",\".repeat(selectedFuelGroups.length) + \"\\n\";\r\n            });\r\n        }\r\n\r\n\r\n        var blob = new Blob([\"\\ufeff\", template]);\r\n        const objectUrl = URL.createObjectURL(blob);\r\n        a.href = objectUrl;\r\n        if (this.PricingRuleType == FreightRateRuleType.Range) {\r\n            a.download = 'FreightRate_Range_Table_Template.csv';\r\n        }\r\n        else if (this.PricingRuleType == FreightRateRuleType.P2P) {\r\n            a.download = 'FreightRate_P2P_Table_Template.csv';\r\n        }\r\n        a.click();\r\n        URL.revokeObjectURL(objectUrl);\r\n        this.isLoadingSubject.next(false);\r\n    }\r\n\r\n\r\n\r\n    private getExtension(fileName) {\r\n        // extract file name from full path ...\r\n        var basename = fileName.split(/[\\\\/]/).pop();\r\n\r\n        // (supports `\\\\` and `/` separators)\r\n        var pos = basename.lastIndexOf(\".\");       // get last position of `.`\r\n\r\n        if (basename === \"\" || pos < 1)            // if file name is empty or ...\r\n            return \"\";                             //  `.` not found (-1) or comes first (0)\r\n\r\n        return basename.slice(pos + 1);            // extract extension ignoring `.`\r\n    }\r\n\r\n\r\n    public uploadRangeTableFile() {\r\n        var files = this.SelectedFiles;\r\n        if (files.length === 0)\r\n            return;\r\n\r\n        const formData = new FormData();\r\n        for (var file of files) {\r\n            if (!this.isValidFile(file)) {\r\n                return;\r\n            }\r\n            formData.append(file.name, file);\r\n        }\r\n\r\n        this.isLoadingSubject.next(true);\r\n\r\n        let reader: FileReader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e) => {\r\n            this.CloseBulkUploadPopup.nativeElement.click();\r\n            this.onImportClick.emit(reader.result as string);\r\n            this.SelectedFiles = [];\r\n            this.isLoadingSubject.next(false);\r\n        }\r\n        \r\n    }\r\n\r\n    public isValidFile(file: File) {\r\n        var isValid = true;\r\n        var extension = this.getExtension(file.name);\r\n        if (extension == undefined || extension == null || extension == '' || extension.toLowerCase() != 'csv') {\r\n            Declarations.msgerror('Invalid file, only csv files are allowed', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        if (file.size > this.MaxFileUploadSize) {\r\n            Declarations.msgerror('Invalid file size, file size should not be greater than 1 MB', undefined, undefined);\r\n            isValid = false;\r\n            return isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    private IdInComparer(otherArray) {\r\n        return function (current) {\r\n            return otherArray.filter(function (other) {\r\n                //console.log(other + \" : \" + current.Id);\r\n                return other == current.Id\r\n            }).length == 1;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}