{"version":3,"sources":["webpack:///src/app/buyer-wally-board/Models/BuyerWallyBoard.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/dispatcher-dashboard.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/dispatcher-dashboard.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/location.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/location.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/grid-view.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/grid-view.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/location-view.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/location-view.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/sales-data.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/sales-data.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view-master.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view-master.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/sales-data/tank-view.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-grid-view.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-grid-view.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-map-view.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver-map-view.component.ts","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver.component.html","webpack:///src/app/dispatcher/dispatcher-dashboard/where-is-my-driver.component.ts","webpack:///src/app/dispatcher/dispatcher-routing.module.ts","webpack:///src/app/dispatcher/dispatcher.module.ts"],"names":["LoadFilterModel","DipTestViewModel","ExistingDR","TankCapacityForDR","ModifiedTripInfo","CreateDeliveryRequestViewModel","CustomerJobsForCarrier","PartialDRDetails","TfxModule","WindowModeFilter","UoM","DeliveryRequestViewModel","Terminal","BulkPlant","DropAddressModel","PickupLocationType","WindowMode","QueueMode","RegionDetailModel","Drivers","Trailers","Shifts","ShiftModel","ScheduleBuilderModel","DSBSaveModel","PreloadedDRs","PostloadedDRs","Trips","DRDragDropModel","SbDriverViewModel","SbTrailerViewModel","TrailerViewModel","TrailerShiftModel","ScheduleShiftModel","Schedules","IsCollapsed","ShiftDetailModel","TrailerModel","LocationFilters","state","city","product","priority","customer","supplier","carrier","TripModel","DeliveryRequests","State","Country","OrderPickupDetailModel","OrderPickupLocationModel","orderPickupDetail","location","Id","TerminalId","Name","TerminalName","Code","Address","City","StateId","StateCode","CountryCode","ZipCode","CountyName","Latitude","Longitude","SiteName","BulkplantName","SiteId","WhereIsMyDriverModel","routeShow","DistatcherRegionModel","Filter","SbFilterModel","Pickups","SelectedDrivers","SelectedPickups","SelectedTrailers","TrailerViewFilterModel","DriverViewFilterModel","CompanyUsers","TankMinMaxFill","TankChartHeight","DipTest","DriverAdditionalDetails","data","License","ContactNumnber","routesColor","DemandModel","PartialDRDetail","LoadInfo","PreLoadDrViewModel","PreLoadDrResponseViewModel","PreLoadDrModel","SalesTankFilterModal","selectedLocAttributeData","SalesFilterModal","DispatcherDashboardComponent","fb","dispatcherService","carrierService","customSortingService","disableControl","checkWindowSelection","getCountries","configColumnDefsNullToBottom","GetCountries","currentUserCompanyId","subscribe","localStorage","setItem","DefaultCountryId","type","singleMulti","dispatcherDashboard","window","open","viewType","SingleMultiWindowSubject","next","getItem","setTimeout","close","readonlyKey","getData","DSB_READONLY_KEY","changeViewType","selector","templateUrl","styleUrls","JobTankHierarchyComponent","LocationSchedules","CloneLocationSchedules","LocationDrpDwnList","FilterLocationDrpDwnList","IsLoading","IsLocDrpDwnLoading","filterArgs","key","asc","initLocationDropDown","filter","Carriers","CustomerIds","SelectedCustomerId","InventoryCaptureType","IsRateOfConsumption","IsShowCarrierManaged","RegionId","SelectedRegionId","getSupplierLocationTanks","GetRaisedExceptions","result","Partsfiltering","length","locationChange","forEach","loc","Tanks","m","f","TankDetail","TankId","StorageId","IsUnknowDeliveryOrMissDelivery","$event","SelectedTankId","SelectedLocationId","JobId","SelectedSiteId","inputName","target","value","trim","searchWord","toUpperCase","element","indexOf","push","row","salesDataModel","TfxJobId","parseInt","LocationManagedType","dipTestComponent","loadTankDR","closeSlidePanel","closeSidePanel","LocationComponent","isLoading","zoomLevel","jobLocationData","clickedAssetsDetails","stateList","countryList","cityList","priorityList","statusList","fuelTypeList","customerList","latestReading","chartData","chartLabels","IsFilterLoaded","selectedTankMinMax","selectedTankHeight","subscriptions","filteredJobLocationData","unchangedJobLocationData","SelectedFilter","assetDetails","assetIndex","assetsModal","modalDetails","display","locationSubscription","clickViewActive","clickAssetsPanel","clickChartsPanel","toogleMap","toogleFilter","centerLocationLat","centerLocationLog","UserCountry","CountryCentre","USA","lat","lng","CAN","screenOptions","position","mustGoUrl","shouldGoUrl","couldGoUrl","noDlrUrl","noImageUrl","isShowCarrierManaged","carrierList","selectedCarrierIds","SelectedRegions","Regions","UnchangedCustomerList","SelectedCustomerList","SelectedlocationList","SelectedCarrierList","SelectedPriorityList","SelectedStatusList","selectedPriorityIds","LocationAttributeList","selectedLocAttributeList","locationList","isShowNonRetailJobs","jobIdsEmittedFromSalesComponent","locationFilterModal","count","isChartDataExistSubject","_this","addEventListener","e","SaveFilters","getRegions","getCarriers","getDispatcherLocation","multiselectSettingsById","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","enableCheckAll","CustomerDdlSettings","PriorityDdlSettings","GetCarriersForSupplier","PageLoad","ids","res","jobids","join","selectedLocAttributeId","add","getJobLocationDetails","addJobPriority","setCountryCentre","modifiedItemArray","item","index","Item","getCountryList","getProductTypeList","Data","countryId","getStateList","stateId","getCityList","obj","find","t","JobID","Priority","highestPriority","iconUrl","jobLocationLength","i","deliveryRequests","jobDeliveryRequests","filteredMustGoDRs","filteredShoudGoDRs","filteredCouldGoDRs","unsubscribe","setCountryCenterInterval","clearInterval","infoWindow","event","jobLocation","scrollTo","opendedJobDetails","closeAssetsClicked","assets","jobTankAdditionalDetails","getDipTestDetails","getDemandCaptureChart","demandChartData","indx","fetchJobLocationData","jobAssetDetails","closeViewClicked","closeChartsClicked","siteId","tankId","noOfDays","chartOptions","setChartOptions","StatusCode","resp","chartdata","respLen","captureTime","Date","CaptureTimeString","format","unshift","NetVolume","calculateMinMAx","tfxJobId","map","Map","setZoom","setCenter","google","maps","LatLng","bounds","LatLngBounds","x","extend","fitBounds","getCenter","country","FuelUnit","responsive","maintainAspectRatio","scales","yAxes","scaleLabel","labelString","ticks","callback","label","toString","replace","xAxes","time","displayFormats","getDispatcherCountry","assetNumber","anchor","orignalCanvas","document","getElementsByTagName","resizedCanvas","createElement","resizedContext","getContext","height","width","context","drawImage","href","toDataURL","download","AssetName","selectedTank","MaxFill","MinFill","MaxFillPercent","MinFillPercent","ci_percent","FuelCapacity","sbf_percent","fillTankDiagram","min_ShouldBeEmptyPercent","min_ShouldBeFilledPercent","min_CurrentInventoryPercent","CurrentInventoryPercent","ShouldBeFilledPercent","ShouldBeEmptyPercent","getAllCustomers","customers","el","CompanyId","concat","Jobs","GetUniqueItems","reduce","p","n","initAllLocation","GetDispatcherRegions","GetFilters","getJobListForCarrier","t2","some","items","uniqueItems","includes","sort","a","b","localeCompare","setCustomerAndLocations","RegionIds","r","selectedRegionId","ApplyFilters","msg","Regionids","Customerids","Locationids","Statusids","SelectedStatusId","Prioritiesids","SelectedPrioritiesId","LocAttributeids","locationGridView","applyFilters","msgsuccess","undefined","msginfo","isTopFilter","getFilters","SupplierWallyboardLocation","input","JSON","parse","postFiltersData","stringify","SetFilters","Carrier","Customer","Location","Status","valueEmitted","ShowCarrierMangedData","toggleMapView","getJobIdsForMapEventHandler","encapsulation","None","GridViewComponent","wallyUtilService","MustGoSchedules","ShouldGoSchedules","CouldGoSchedules","dtMustGoOptions","dtShouldGoOptions","dtCouldGoOptions","dtMustGoTrigger","dtShouldGoTrigger","dtCouldGoTrigger","showDr","IsDrExists","DRLoader","ExistingDeliveries","DrPriority","MustGo","dsModal","title","IsScheduled","isValid","ScheduleQuantityTypes","loadingData","applyFilterSubscription","columnsDetails","salesTabFilterForm","get","valueChanges","bindPriorityArray","getSalesData","setValue","init","getScheduleQuantityType","initializeMustGo","initializeCouldGo","initializeShouldGo","GetScheduleQtyType","SQT","subscription","exportInvitedColumns","columns","dom","buttons","exportOptions","orientation","pagingType","pageLength","fixedHeader","lengthMenu","columnDefs","targets","colReorder","inputs","getIdsByList","CustomerId","getCompanyIdsByList","LocationId","SelectedTab","IsShowRetailJobs","IsShouldGoLoading","IsCouldGoLoading","IsMustGoLoading","IsUnknownOrMissing","ShouldGo","Inventory","CouldGo","destroyDatatable","getSalesDtls","dtElements","dtElement","dtInstance","then","destroy","resetModal","SelectedTank","GetDeliveryDetails","ProductTypeId","isSchedule","RequiredQuantity","ScheduleQuantityType","validateMsg","SelectedTankRegionId","$","hide","removeClass","raiseDr","FuelTypeId","MaxFillQuantity","PostRaiseDeliveryRequest","response","StatusMessage","closeModal","msgerror","SelectedPriorities","LocationViewComponent","dtTrigger","dtOptions","IsDataLoaded","SelectedCustomers","SelectedLocations","SelectedCarriers","SelectedStatus","getJobIdsForMap","initializeGrid","change","isFilterData","currentValue","previousValue","SelectedCarrierIds","previousIds","previousCarrierIds","passJobIdsToMapData","datatableRerender","datatableElement","jobsPriority","emit","SalesDataComponent","toogleDriver","toogleGrid","toogleExpandMap","RegionDdlSettings","CarrierDdlSettings","LoadPriorities","filterCount","getSalesTabFilterForm","_rgnIds","getCustomerListByRegionId","initAllCustomers","isShowAllLoc","_selectedCustomerList","_selectedlocationList","_cust","filterData","SupplierWallyboardSales","_selectedCarriers","_selectedRegions","_selectedPriorities","_selectedLocAttributeList","regionChanged","onCustomerSelect","setFilterCount","PriorityTab","TanksTab","salesViewTypeChanged","TankViewMasterComponent","verifyForcastingAccountLevelSetting","getForcastingSetting","IsForecatingAccountLevel","TankViewComponent","j","TankInventoryDiffinHrs","console","log","LocationName","WhereIsMyDriverGridViewComponent","chatService","IsFiltersLoaded","activePriorityTab","DeliveryReqPriority","SelectedMapLabelEnum","previousInfowindow","previousInfowindowIndex","centerLoactionLat","centerLoactionLng","MaxInputDate","toDate","TodaysDate","AUTO_REFRESH_TIME","autoRefreshTicks","driverModal","OfflineDrivers","allLoads","OnGoingLoads","CloneOnGoingLoads","selectedDriverLoads","selectedDriverDetails","RegionStates","RegionDispachers","StateDdlSettings","SelectedStateIds","SelectedPriorityIds","SelectedDispacherIds","selectedLocAttributeIds","selectedDriverLoadsdtOptions","selectedDriverLoadsdtTrigger","modalData","backgroudchatDefault","memberInfo","toogleMapFromParent","readOnlyModeSelection","subscribeFormChanges","exportColumns","mustGocolumnsDetails","shouldGocolumnsDetails","couldGocolumnsDetails","name","serverSide","processing","header","headerOffset","ajax","dataTablesParameters","_states","FilterForm","selectedDispacherIds","_carriers","_locAttribute","_locAttributeIds","States","FromDate","ToDate","DriverSearch","SearchedKeyword","DispacherId","inputData","Object","assign","getDispatcherLoads","recordsTotal","recordsFiltered","order","selectedCarriers","searching","isFilterChanged","IsFilterChanged","filterDriverData","selectedCarrierId","selectedRegions","selectedStates","selectedStateIds","selectedPriorities","selectedDispachers","selectedCustomerId","fromdate","selectedStartDate","todate","selectedEndDate","autoRefreshLoads","clearAllIntervals","unSubscribeFormChanges","frmDate","WBF_FROMDATE_KEY","WBF_TODATE_KEY","WBF_REGION_KEY","WBF_SELECTEDSTATES_KEY","WBF_SELECTEDDISPACHER_KEY","cid","WBF_CUSTOMER_KEY","patchValue","initializeFilterChange","isArrayEqual","reload","LdPri","slice","draw","showDriverDetails","searchLoadInterval","autoRefreshInterval","autoRefreshTimerInterval","statusId","_priorities","startAutoRefreshTimer","refreshDatatable","setInterval","IsUserActive","stopAutoRefreshTimer","expandMapView","toggleGrid","toggleDriverView","driver","isOpen","getDriverAdditionalDetails","msgwarning","invoiceHeaderId","showSliderPanel","GetDropTicketDetails","html","appendHTMLSliderContent","hideSliderLoader","selectedMaplable","other","prototype","call","valueLen","keys","otherLen","compare","item1","item2","match","hasOwnProperty","filterForm","toggleGrids","changeActiveTab","read","WhereIsMyDriverMapViewComponent","currentOngoingLoadDetails","setMapCenter","loaderDetails","memberInfoDetails","jQuery","click","onRegionSelect","changeFilterValueIntervalForMultiWindow","Dispatchers","googleMap","statusColor","SttsId","Lat","Lng","locationbounds","dLat","dLng","_selectedRegion","_selectedRegionIds","Priorities","isFilter","getOnGoingLoads","initailizeOnGoingLoad","thing","arr","driverFilter","addDrivertoBackground","xItem","sendbirdComponent","IntializeChatDefault","driverId","IntializeDriverChat","OngoingData","TrailerDisplayId","split","TruckId","closePreviousWindow","customerChanged","setFromDate","setToDate","clickOutsideDropdown","toggleFilterView","toggleExpandMapView","filterMapByStatus","mapReady","searchDrivers","WhereIsMyDriverComponent","cdr","viewLoadType","loadScreenType","setFilterForm","restoreFilterStates","fromDate","group","control","ToggleMap","ToggleExpandMapView","ToggleGrids","ToggleDriverView","SelectedStates","SelectedDispachers","ApplyLoadFilters","filterChange","sessionStorage","setRegionStates","setRegionDispachers","DateFormat","test","_fromDate","_toDate","setData","_selectedDate","DSB_DATE_KEY","SupplierWallyboardLoads","jsonFilterForm","filterModel","Dispachers","lstRegion","detectChanges","myDiv","nativeElement","that","loadsGridView","applyLoadsFilters","loadsMapView","routeDispatcher","path","component","DispatcherRoutingModule","forChild","imports","exports","DispatcherModule","declarations"],"mappingsaA,e;;;;QAQAC,gB,GAAb;AAAA;;AAwBW,WAAAC,UAAA,GAAiC,EAAjC;AAWV,K;;QAEYC,iB;;;;QAMAC,gB;;;;QAMAC,8B;;;;QAQAC,sB;;;;QAMAC,gB;;;;AAQb,QAAYC,SAAZ;;AAAA,eAAYA,SAAZ,EAAqB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAfD,EAAYA,SAAS,KAATA,SAAS,MAArB;;AAiBA,QAAYC,gBAAZ;;AAAA,eAAYA,gBAAZ,EAA4B;AACxB;AACA;AACH,KAHD,EAAYA,gBAAgB,KAAhBA,gBAAgB,MAA5B;;AAKA,QAAYC,GAAZ;;AAAA,eAAYA,GAAZ,EAAe;AACX;AACA;AACA;AACH,KAJD,EAAYA,GAAG,KAAHA,GAAG,MAAf;;QAMaC,wB,GACT,oCAAc;AAAA;;AACV,WAAKC,QAAL,GAAgB,IAAI,sEAAJ,EAAhB;AACA,WAAKC,SAAL,GAAiB,IAAIC,gBAAJ,EAAjB;AACA,WAAKC,kBAAL,GAA0B,CAA1B;AACA,WAAKC,UAAL,GAAkB,CAAlB;AACA,WAAKC,SAAL,GAAiB,CAAjB;AACH,K;;QA0DQC,iB,GACT,6BAAc;AAAA;;AACV,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,MAAL,GAAc,EAAd;AACH,K;;QAOQC,U;;;;QAcAC,oB,GACT,gCAAc;AAAA;;AACV,WAAKF,MAAL,GAAc,EAAd;AACA,WAAKD,QAAL,GAAgB,EAAhB;AACH,K;;QAkBQI,Y;;;;;AACT,8BAAc;AAAA;;AAAA;;AACV;AAIG,eAAAC,YAAA,GAAsB,EAAtB;AACA,eAAAC,aAAA,GAAuB,EAAvB;AAJH,eAAKC,KAAL,GAAa,EAAb;AAFU;AAGb;;;MAJ6BJ,oB;;QAYrBK,e;;;;;;;;;;;;MAAwBL,oB;;QAQxBM,iB;;;;;AACT,mCAAc;AAAA;;AAAA;;AACV;AACA,eAAKR,MAAL,GAAc,EAAd;AAFU;AAGb;;;MAJkCE,oB;;QAQ1BO,kB;;;;;AACT,oCAAc;AAAA;;AAAA;;AACV;AACA,eAAKV,QAAL,GAAgB,EAAhB;AAFU;AAGb;;;MAJmCG,oB;;QAQ3BQ,gB;;;;QAWAC,iB;;;;QAQAC,kB,GACT,8BAAc;AAAA;;AACV,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACH,K;;QASQC,gB;;;;QAOAC,Y,GACT,wBAAc;AAAA;;AACV,WAAKlB,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKO,KAAL,GAAa,EAAb;AACH,K;;QAMQW,e,GAAb;AAAA;;AAEW,WAAAC,KAAA,GAAkB,EAAlB;AACA,WAAAC,IAAA,GAAiB,EAAjB;AACA,WAAAC,OAAA,GAAoB,EAApB;AACA,WAAAC,QAAA,GAAqB,EAArB;AACA,WAAAC,QAAA,GAAqB,EAArB;AACA,WAAAC,QAAA,GAA2B,EAA3B;AACA,WAAAC,OAAA,GAA0B,EAA1B;AACV,K;;QAEYC,S,GACT,qBAAc;AAAA;;AACV,WAAKC,gBAAL,GAAwB,EAAxB;AACA,WAAKnC,QAAL,GAAgB,IAAI,sEAAJ,EAAhB;AACA,WAAKC,SAAL,GAAiB,IAAIC,gBAAJ,EAAjB;AACA,WAAKK,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACH,K;;QAuCQN,gB,GACT,4BAAc;AAAA;;AACV,WAAKkC,KAAL,GAAa,IAAI,sEAAJ,EAAb;AACA,WAAKC,OAAL,GAAe,IAAI,sEAAJ,EAAf;AACH,K;;QAaQC,sB,GAAb;AAAA;;AAKW,WAAAnC,kBAAA,GAA6B,CAA7B;AAYV,K;;QAEYoC,wB;;;;;;;eAIF,oBAAkBC,iBAAlB,EAA2D;AAC9D,cAAIC,QAAQ,GAAG,IAAIF,wBAAJ,EAAf;AACAE,kBAAQ,CAACtC,kBAAT,GAA8BqC,iBAAiB,CAACrC,kBAAhD;AACAsC,kBAAQ,CAACzC,QAAT,GAAoB;AAChB0C,cAAE,EAAEF,iBAAiB,CAACG,UADN;AAEhBC,gBAAI,EAAEJ,iBAAiB,CAACK,YAFR;AAGhBC,gBAAI,EAAE;AAHU,WAApB;AAKAL,kBAAQ,CAACxC,SAAT,GAAqB;AACjB8C,mBAAO,EAAEP,iBAAiB,CAACO,OADV;AAEjBC,gBAAI,EAAER,iBAAiB,CAACQ,IAFP;AAGjBZ,iBAAK,EAAE;AAAEM,gBAAE,EAAEF,iBAAiB,CAACS,OAAxB;AAAiCH,kBAAI,EAAEN,iBAAiB,CAACU,SAAzD;AAAoEN,kBAAI,EAAE;AAA1E,aAHU;AAIjBP,mBAAO,EAAE;AAAEK,gBAAE,EAAE,CAAN;AAASI,kBAAI,EAAEN,iBAAiB,CAACW,WAAjC;AAA8CP,kBAAI,EAAE;AAApD,aAJQ;AAKjBQ,mBAAO,EAAEZ,iBAAiB,CAACY,OALV;AAMjBC,sBAAU,EAAEb,iBAAiB,CAACa,UANb;AAOjBC,oBAAQ,EAAEd,iBAAiB,CAACc,QAPX;AAQjBC,qBAAS,EAAEf,iBAAiB,CAACe,SARZ;AASjBC,oBAAQ,EAAEhB,iBAAiB,CAACiB,aATX;AAUjBC,kBAAM,EAAE;AAVS,WAArB;AAYA,iBAAOjB,QAAP;AACH;;;;;;QAGQkB,oB,GAAb;AAAA;;AA6BW,WAAAC,SAAA,GAAqB,KAArB;AAIV,K;;QAEYC,qB;;;;QAgEAC,M,GAAb;AAAA;;AACI,sBAAmB,EAAnB;AACA,qBAAiB,EAAjB;AACA,wBAA4B,EAA5B;AACA,yBAAyB,EAAzB;AACA,yBAAyB,EAAzB;AACA,yBAA6B,EAA7B;AACA,wBAA4B,EAA5B;AACH,K;;QAmGYC,a,GACT,yBAAc;AAAA;;AACV,WAAKxD,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKwD,OAAL,GAAe,EAAf;AAEA,WAAKC,eAAL,GAAuB,EAAvB;AACA,WAAKC,eAAL,GAAuB,EAAvB;AACA,WAAKC,gBAAL,GAAwB,EAAxB;AACH,K;;QAUQC,sB,GAAb;AAAA;;AACW,WAAA3D,MAAA,GAAe,EAAf;AACA,WAAAD,QAAA,GAAiB,EAAjB;AACA,WAAAwD,OAAA,GAAgB,EAAhB;AACA,WAAAzD,OAAA,GAAgB,EAAhB;AACV,K;;QAEY8D,qB,GAAb;AAAA;;AACW,WAAA5D,MAAA,GAAe,EAAf;AACV,K;;QACY6D,Y;;;;QAoBAC,c;;;;QAOAC,e;;;;QAQAC,O;;;;QA6CAC,uB,GAOT,iCAAYC,IAAZ,EAA6C;AAAA;;AACzC,WAAKjC,EAAL,GAAUiC,IAAI,IAAIA,IAAI,CAAC,IAAD,CAAZ,IAAsB,IAAhC;AACA,WAAK/B,IAAL,GAAY+B,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAZ,IAAwB,IAApC;AACA,WAAKC,OAAL,GAAeD,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAZ,IAA2B,IAA1C;AACA,WAAKE,cAAL,GAAsBF,IAAI,IAAIA,IAAI,CAAC,gBAAD,CAAZ,IAAkC,IAAxD;AACA,WAAKlE,MAAL,GAAckE,IAAI,IAAIA,IAAI,CAAC,QAAD,CAAZ,IAA0B,EAAxC;AACA,WAAKnE,QAAL,GAAgBmE,IAAI,IAAIA,IAAI,CAAC,UAAD,CAAZ,IAA4B,EAA5C;AACH,K;;AAGE,QAAMG,WAAW,GAAG;AACvB,SAAG,SADoB;AAEvB,UAAI,SAFmB;AAGvB,UAAI,SAHmB;AAIvB,UAAI,SAJmB;AAKvB,UAAI;AALmB,KAApB;;QAQMC,W;;;;QAyBAC,e;;;;QASAC,Q;;;;QAQAC,kB;;;;QAYAC,0B;;;;QAMAC,c;;;;QAeAC,oB,GAAb;AAAA;;AACW,WAAAC,wBAAA,GAA+B,EAA/B;AACV,K;;QAEYC,gB;;;;;;;;;;;ACj1Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcgB;;AACI;;AACI;;AACA;;AAAkC;AAAA;;AAAA;;AAAA,yCAA0B,CAA1B;AAA2B,SAA3B;;AAA4E;;AAA+C;;AAC7J;;AACA;;AAA6B;AAAA;;AAAA;;AAAA,yCAA0B,CAA1B;AAA2B,SAA3B;;AAA2E;;AAA8C;;AAC1J;;AACJ;;;;;;AAL+D;;AAAA,6EAAW,SAAX,EAAW,uBAAX;;AAEE;;AAAA,6EAAW,SAAX,EAAW,uBAAX;;;;;;AAQjE;;AAA8D;;AAAU;;;;;;AAA1D;;;;;;AACd;;AAAwE;;AAAU;;;;;;AAA1D;;;;;;AACxB;;AAAoC;;AAAU;;;;QDfjDC,4B;AAQT,4CAAoBC,EAApB,EAA6CC,iBAA7C,EAA2FC,cAA3F,EAAmIC,oBAAnI,EAAwL;AAAA;;AAApK,aAAAH,EAAA,GAAAA,EAAA;AAAyB,aAAAC,iBAAA,GAAAA,iBAAA;AAA8C,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAC,oBAAA,GAAAA,oBAAA;AAJ5H,aAAAC,cAAA,GAA0B,KAA1B;AAIoL;;;;eAEpL,oBAAQ;AACX,eAAKC,oBAAL;AACA,eAAKC,YAAL;AACH;;;eAED,2BAAe;AACX,eAAKH,oBAAL,CAA0BI,4BAA1B;AACH;;;eAED,wBAAe;AACX,eAAKL,cAAL,CAAoBM,YAApB,CAAiCC,oBAAjC,EAAuDC,SAAvD,CAAiE,UAAAxB,IAAI,EAAI;AACrE,gBAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdyB,0BAAY,CAACC,OAAb,CAAqB,uBAArB,EAA8C1B,IAAI,CAAC2B,gBAAnD;AACAF,0BAAY,CAACC,OAAb,CAAqB,0BAArB,EAAiD1B,IAAI,CAAC2B,gBAAtD;AACH;AACJ,WALD;AAMH;;;eACM,wBAAeC,IAAf,EAAwB;AAC3BH,sBAAY,CAACC,OAAb,CAAqB,UAArB,EAAyCE,IAAzC;;AACA,cAAI,KAAKC,WAAL,KAAqB,CAAzB,EAA4B;AACxB,iBAAKC,mBAAL,GAA2BC,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqC,QAArC,CAA3B;AACH,WAFD,MAEO;AACH,iBAAKC,QAAL,GAAgBL,IAAhB;AACH;AACJ;;;eAGM,0BAAiBA,IAAjB,EAA6B;AAAA;;AAChC,eAAKC,WAAL,GAAmBD,IAAnB;AACA,eAAKb,iBAAL,CAAuBmB,wBAAvB,CAAgDC,IAAhD,CAAqDP,IAArD;;AACA,cAAIA,IAAI,KAAK,CAAT,IAAc,CAAEH,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAF,KAA2C,CAA7D,EAAgE;AAC5DC,sBAAU,CAAC,YAAM;AACb,oBAAI,CAACP,mBAAL,CAAyBQ,KAAzB;AACH,aAFS,EAEP,KAFO,CAAV;AAGH;;AACDb,sBAAY,CAACC,OAAb,CAAqB,aAArB,EAA4C,KAAKG,WAAjD;AACH;;;eAEO,gCAAoB;AACxB,eAAKA,WAAL,GAAoBJ,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAD,GAAwC,CAAEX,YAAY,CAACW,OAAb,CAAqB,aAArB,CAA1C,GAAiF,CAApG;AACA,eAAKH,QAAL,GAAiBR,YAAY,CAACW,OAAb,CAAqB,UAArB,CAAD,GAAqC,CAAEX,YAAY,CAACW,OAAb,CAAqB,UAArB,CAAvC,GAA2E,CAA3F;AACA,cAAIG,WAAW,GAAG,uEAAeC,OAAf,CAAuB,uEAAeC,gBAAtC,CAAlB;;AACA,cAAIF,WAAW,IAAI,EAAnB,EAAuB;AACnB,iBAAKrB,cAAL,GAAsB,KAAtB;AACH,WAFD,MAGK;AACD,iBAAKA,cAAL,GAAsBqB,WAAtB;AACH;;AACD,cAAI,KAAKrB,cAAL,IAAuB,IAA3B,EAAiC;AAC7B,iBAAKe,QAAL,GAAgB,CAAhB;AACH;AACJ;;;;;;;uBA7DQpB,4B,EAA4B,2H,EAAA,6J,EAAA,uJ,EAAA,8J;AAAA,K;;;YAA5BA,4B;AAA4B,+C;AAAA,e;AAAA,c;AAAA,u8B;AAAA;AAAA;ACbzC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAAuB;AAAA,mBAAS,IAAA6B,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAQ;;AAC3D;;AACA;;AAAmB;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAK;;AACpD;;AACA;;AAAmB;AAAA,mBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,WAA1B;;AAA4B;;AAAK;;AACxD;;AACJ;;AACA;;AAQJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AAGJ;;;;AA5BiE;;AAAA,mFAAe,OAAf,EAAe,CAAf,EAAe,SAAf,EAAe,iBAAf;;AAEA;;AAAA,mFAAe,OAAf,EAAe,CAAf,EAAe,SAAf,EAAe,iBAAf;;AAEA;;AAAA,mFAAe,OAAf,EAAe,CAAf,EAAe,SAAf,EAAe,iBAAf;;AAIC;;AAAA;;AAYR;;AAAA;;AACU;;AAAA;;AACpC;;AAAA;;;;;;;;;sEDfnB7B,4B,EAA4B;cALxC,uDAKwC;eAL9B;AACP8B,kBAAQ,EAAE,0BADH;AAEPC,qBAAW,EAAE,uCAFN;AAGPC,mBAAS,EAAE,CAAC,sCAAD;AAHJ,S;AAK8B,Q;;;;;;;;;;;;;;;;;;;;AEbzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWgB;;AACI;;AACI;;AACA;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEJ;;AACJ;;;;;;AACA;;AACI;;AAEJ;;;;;;AAoEgD;;;;;;;;;;;;;;AANZ;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACA;;AAIJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAe;;AAAe;;AAClC;;AACJ;;AACJ;;;;;;;;AAhBY;;AAAA;;AACA;;AAAA;;AAEI;;AAAA;;AAMR;;AAAA;;AAImB;;AAAA;;;;;;;;AA3DnD;;AACI;;AACI;;AACI;;AACI;;AACI;;AAIK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AACI;;;;;;AAGJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AAEA;;AAAI;;AAAmE;;AACvE;;AACI;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAe;;AAAc;;AACjC;;AACJ;;AACJ;;AACA;;AAIA;;AACI;;AACI;;AAEI;;AACI;;AACI;;AAqBJ;;AACJ;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;;;;;AAlEqC;;AAAA;;AAEZ;;AAAA;;AAEuB,mIAAuC,eAAvC,EAAuC,+CAAvC;;AAIpB;;AAAA;;AAchB;;AAAA;;AAGmB;;AAAA;;AAIvB;;AAAA,yHAA6B,iBAA7B,EAA6B,sDAA7B;;AAUoB;;AAAA;;;;;;;;AA7DxC;;AAEI;;AACI;;AACI;;AACI;;AAAgB;;AAAQ;;AACxB;;AAAe;AAAA;;AAAA;;AAAA,qCAAqB,eAArB;AAAoC,SAApC;;AACX;;AAAoB;;AACxB;;AAEA;;AACI;;AACJ;;AAIJ;;AACJ;;AACA;;AACI;;;;AAsEJ;;AACJ;;AACJ;;;;;;AAxE0B;;AAAA;;;;;;;;;;QD5B7BC,yB;AAiBT,yCAAoB/B,iBAApB,EAA0D;AAAA;;AAAtC,aAAAA,iBAAA,GAAAA,iBAAA;AAfb,aAAAgC,iBAAA,GAAyB,EAAzB;AACP,aAAAC,sBAAA,GAAyB,EAAzB;AACO,aAAAC,kBAAA,GAAiD,EAAjD;AACP,aAAAC,wBAAA,GAAuD,EAAvD;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,kBAAA,GAAqB,KAArB;AAOA,aAAAC,UAAA,GAAa;AAAEC,aAAG,EAAE,eAAP;AAAwBC,aAAG,EAAE;AAA7B,SAAb;AAG6D;;;;eAE7D,oBAAW;AACP,eAAKC,oBAAL;AACH;;;eAED,qBAAYF,GAAZ,EAAyB;AACrB,cAAI,KAAKD,UAAL,CAAgBC,GAAhB,IAAuBA,GAA3B,EAAgC;AAC5B,iBAAKD,UAAL,GAAkB;AAAEE,iBAAG,EAAE,CAAC,KAAKF,UAAL,CAAgBE,GAAxB;AAA6BD,iBAAG,EAAEA;AAAlC,aAAlB;AACH,WAFD,MAGK;AACD,iBAAKD,UAAL,GAAkB;AAAEE,iBAAG,EAAE,IAAP;AAAaD,iBAAG,EAAEA;AAAlB,aAAlB;AACH;AACJ;;;eAED,gCAAuB;AAAA;;AAEnB,eAAKF,kBAAL,GAA0B,IAA1B;AACA,eAAKH,kBAAL,GAA0B,EAA1B;AAGA,cAAIQ,MAAM,GAA8B;AACpCC,oBAAQ,EAAE,EAD0B;AAEpCC,uBAAW,EAAE,KAAKC,kBAAL,GAAyB,KAAKA,kBAA9B,GAAkD,EAF3B;AAGpCC,gCAAoB,EAAE,EAHc;AAIpCC,+BAAmB,EAAE,KAJe;AAKpCC,gCAAoB,EAAE,KALc;AAMpCC,oBAAQ,EAAE,KAAKC,gBAAL,GAAuB,KAAKA,gBAA5B,GAA8C;AANpB,WAAxC;AAUA,gEAAS,CAAC,KAAKlD,iBAAL,CAAuBmD,wBAAvB,CAAgDT,MAAhD,CAAD,EAA0D,KAAK1C,iBAAL,CAAuBoD,mBAAvB,EAA1D,CAAT,EACK3C,SADL,CACe,UAAA4C,MAAM,EAAI;AACjB,kBAAI,CAAChB,kBAAL,GAA0B,KAA1B;AACA,kBAAI,CAACH,kBAAL,GAA0BmB,MAAM,CAAC,CAAD,CAAhC;;AACA,kBAAI,CAACC,cAAL;;AACA,kBAAI,CAACpB,kBAAL,IAA2B,MAAI,CAACA,kBAAL,CAAwBqB,MAAxB,GAAiC,CAA5D,GAAgE,MAAI,CAACC,cAAL,CAAoB,MAAI,CAACtB,kBAAL,CAAwB,CAAxB,CAApB,CAAhE,GAAkH,EAAlH;;AACA,gBAAI,MAAI,CAACA,kBAAL,IAA2B,MAAI,CAACA,kBAAL,CAAwBqB,MAAxB,GAAiC,CAAhE,EAAmE;AAC/D,oBAAI,CAACrB,kBAAL,CAAwBuB,OAAxB,CAAgC,UAAAC,GAAG,EAAI;AACnCA,mBAAG,IAAIA,GAAG,CAACC,KAAX,IAAoBD,GAAG,CAACC,KAAJ,CAAUJ,MAAV,GAAmB,CAAvC,IAA4CG,GAAG,CAACC,KAAJ,CAAUF,OAAV,CAAkB,UAAAG,CAAC,EAAI;AAC/D,sBAAIP,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUX,MAAV,CAAiB,UAAAmB,CAAC;AAAA,2BAAIA,CAAC,CAACC,UAAF,CAAaC,MAAb,IAAuBH,CAAC,CAACG,MAAzB,IAAmCF,CAAC,CAACC,UAAF,CAAa9F,MAAb,IAAuB0F,GAAG,CAAC1F,MAA9D,IAAwE6F,CAAC,CAACC,UAAF,CAAaE,SAAb,IAA0BJ,CAAC,CAACI,SAAxG;AAAA,mBAAlB,EAAqIT,MAArI,GAA8I,CAA/J,EACIK,CAAC,CAACK,8BAAF,GAAmC,IAAnC,CADJ,KAGIL,CAAC,CAACK,8BAAF,GAAmC,KAAnC;AACP,iBAL2C,CAA5C;AAMH,eAPD;AAQH;AACJ,WAhBL;AAiBH;;;eAED,wBAAeC,MAAf,EAAuB;AACnB,eAAKC,cAAL,GAAsB,IAAtB;AACA,eAAKC,kBAAL,GAA0BF,MAAM,CAACG,KAAjC;AACA,eAAKC,cAAL,GAAsBJ,MAAM,CAAClG,MAA7B;AACA,eAAKgE,iBAAL,GAAyB,EAAzB;AACA,eAAKC,sBAAL,GAA8B,EAA9B;AACH;;;eAED,oBAAWiC,MAAX,EAAmB;AACf,cAAI,KAAKjC,sBAAL,IAA+B,KAAKA,sBAAL,CAA4BsB,MAA5B,GAAqC,CAAxE,EAA2E;AACvE,iBAAKY,cAAL,GAAsBD,MAAM,CAACH,MAAP,GAAgB,GAAhB,GAAsBG,MAAM,CAACF,SAAnD;AACA,iBAAKhC,iBAAL,GAAyB,KAAKC,sBAAL,CAA4BS,MAA5B,CAAmC,UAAAmB,CAAC;AAAA,qBAAIA,CAAC,CAACE,MAAF,IAAYG,MAAM,CAACH,MAAnB,IAA6BF,CAAC,CAACG,SAAF,IAAeE,MAAM,CAACF,SAAvD;AAAA,aAApC,CAAzB;AACH,WAHD,MAKI,KAAKhC,iBAAL,GAAyB,EAAzB;AACP;;;eAED,wBAAeuC,SAAf,EAA2B;AAAA;;AACvB,eAAKpC,wBAAL,GAAgC,EAAhC;;AACA,cAAIoC,SAAS,IAAIA,SAAS,CAACC,MAAvB,IAAiCD,SAAS,CAACC,MAAV,CAAiBC,KAAlD,IAA2DF,SAAS,CAACC,MAAV,CAAiBC,KAAjB,CAAuBC,IAAvB,MAAiC,EAAhG,EAAoG;AAChG,gBAAIC,UAAU,GAAGJ,SAAS,CAACC,MAAV,CAAiBC,KAAjB,CAAuBG,WAAvB,EAAjB;AACA,iBAAK1C,kBAAL,CAAwBuB,OAAxB,CAAgC,UAAAoB,OAAO,EAAI;AACvC,kBAAIA,OAAO,CAAC7G,MAAR,CAAe4G,WAAf,GAA6BE,OAA7B,CAAqCH,UAArC,MAAqD,CAAC,CAA1D,EAA6D;AACzD,sBAAI,CAACxC,wBAAL,CAA8B4C,IAA9B,CAAmCF,OAAnC;AACH;AACJ,aAJD;AAKH,WAPD,MAOO;AACH,iBAAK1C,wBAAL,GAAgC,KAAKD,kBAArC;AACH;AACJ;;;eAEM,mBAAUnF,QAAV,EAAyB;AAE5B,cAAIiI,GAAG,GAAG,KAAKhD,iBAAL,CAAuB,CAAvB,CAAV;AAEA,cAAIiD,cAAc,GAAG,IAAI,6FAAJ,EAArB;AACAA,wBAAc,CAAChC,QAAf,GAA0B+B,GAAG,CAAC/B,QAA9B;AACAgC,wBAAc,CAACjH,MAAf,GAAwBjB,QAAQ,CAACiB,MAAjC;AACAiH,wBAAc,CAAClB,MAAf,GAAwBhH,QAAQ,CAACgH,MAAjC;AACAkB,wBAAc,CAACjB,SAAf,GAA2BjH,QAAQ,CAACiH,SAApC;AACAiB,wBAAc,CAACC,QAAf,GAA0BC,QAAQ,CAACpI,QAAQ,CAACsH,KAAV,CAAlC;AACAY,wBAAc,CAACG,mBAAf,GAAqCrI,QAAQ,CAACqI,mBAAT,GAA+BrI,QAAQ,CAACqI,mBAAxC,GAA6D,IAAlG;AACA,eAAKC,gBAAL,CAAsBC,UAAtB,CAAiCL,cAAjC;AACH;;;eACM,0BAAiB;AACpBM,yBAAe;AAClB;;;;;;;uBAjHQxD,yB,EAAyB,6J;AAAA,K;;;YAAzBA,yB;AAAyB,6C;AAAA;AAAA;oEAevB,sG,EAAgB,I;;;;;;;;;;;;;;AC5B/B;;AACI;;AACI;;AACI;;AAII;;AAEI;;AACJ;;AACA;;AAOA;;AAIA;;AA4FJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAwC;AAAA,mBAAa,IAAAyD,cAAA,EAAb;AAA6B,WAA7B;;AACoE;;AAChH;;;;AAlHoB;;AAAA;;AAGC;;AAAA;;AAOA;;AAAA;;AAIA;;AAAA;;AAkGH;;AAAA,6FAAyB,aAAzB,EAAyB,IAAzB,EAAyB,kBAAzB,EAAyB,oBAAzB,EAAyB,qBAAzB,EAAyB,KAAzB,EAAyB,4BAAzB,EAAyB,IAAzB;;;;;;;;;;sED3GLzD,yB,EAAyB;cALrC,uDAKqC;eAL3B;AACPH,kBAAQ,EAAE,wBADH;AAEPC,qBAAW,EAAE,qCAFN;AAGPC,mBAAS,EAAE,CAAC,oCAAD;AAHJ,S;AAK2B,Q;;;;;;gBAejC,uD;iBAAU,sG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVK;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAiC,UAAjC,EAAiC;AAAA;;AAAA;;AAAA;AAAA,SAAjC,EAAiC,YAAjC,EAAiC;AAAA;;AAAA;;AAAA;AAAA,SAAjC;;AAGzB;;AACJ;;;;;;AAJ6B;;AAAA,yGAAiC,aAAjC,EAAiC,gBAAjC,EAAiC,UAAjC,EAAiC,+BAAjC,EAAiC,MAAjC,EAAiC,mBAAjC;;;;;;AALrC;;AACI;;AAC4B;;AAAc;;AAC1C;;AAQJ;;;;;;AAVyB;;AAAA,qFAAyB,WAAzB,EAAyB,SAAzB;;;;;;AAqB8C;;AAA2C;;AAAS;;;;;;AAAT;;AAAA;;;;;;AAiD1H;;AAA+E;;AACnC;;;;;;;;;;;;;;;;;;;;;;AAsC5B;;AACI;;AAEI;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAiD,UAAjD,EAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAjD,EAAiD,aAAjD,EAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAjD;;AAGA;;AACI;;AACI;;AAAG;;AAAQ;;AAAwB;;AAAS;;AAC5C;;AAAG;;AAA4B;;AACnC;;AACJ;;AACJ;;AACJ;;;;;;AAZgB;;AAAA,uGAAiC,WAAjC,EAAiC,yBAAjC,EAAiC,SAAjC,EAAiC,qKAAjC;;AAKS;;AAAA;;AAEE;;AAAA;;AACR;;AAAA;;;;;;AAaf;;AAAsF;;AAChD;;AAAkB;;;;;;AAQxD;;;;;;AACI;;;;;;AAkCgB;;AACyB;;AAAI;;;;;;AAU7B;;AAEI;;AAAuB;;AAAQ;;AAC/B;;AAAuC;;AAAI;;AAC3C;;AACwB;;AAAiD;;AAC7E;;;;;;;;AAJ2B;;AAAA;;AAGC;;AAAA;;;;;;AAE5B;;AAAkE;;AACrD;;;;;;AA0CrC;;;;;;;;AAVR;;AACI;;AACI;;AACI;;AACI;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AACjD;;AAAI;;AACR;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AACL;;AAClD;;AACJ;;AACA;;AAEJ;;AACJ;;;;;;;;AAHsB;;AAAA,0FAA8D,yBAA9D,EAA8D,oBAA9D;;;;;;AAMlB;;AAA+E;;AACnC;;;;;;AAUhC;;;;;;AACI;;;;;;;;AAbpB;;AACI;;AAEA;;AACI;;AACI;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAkC;;AAAI;;AAC3F;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAyC;;AAChG;;AACJ;;AACA;;AACI;;AACI;;AACI;;;;AAEJ;;AAMJ;;AACJ;;AAEJ;;;;;;AAtBS;;AAAA;;AAWiC;;AAAA;;;;;;;;AA9H9C;;AACI;;AACI;;AACI;;AACI;;AAEA;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AACnD;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAiC;;AACrC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAgC;;AACpC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAsC;;AAG1C;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAqB;;AAAkB;;AACvC;;AAEA;;AACyB;;AAAiD;;AAC9E;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAOA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAA6B;;AAAkB;;AAC/C;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;;AAAW;;AACrC;;AACA;;AACI;;AAAwB;;AAA4C;;AACxE;;AACJ;;AACA;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAoE;;AAC7D;;AACX;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AACwC;;AAAqB;;AACpE;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAeA;;AAyBJ;;;;;;AAvIqB;;AAAA;;AASA;;AAAA;;AASwC;;AAAA;;AAOD;;AAAA;;AAOM;;AAAA;;AAYxB;;AAAA;;AAGmB;;AAAA;;AASrB;;AAAA;;AAMC;;AAAA;;AAUjB;;AAAA;;AAQwB;;AAAA;;AAMgD;;AAAA;;AASjC;;AAAA;;AAeU;;AAAA;;;;;;;;;;;;;;;AAzK7E;;AAEI;;AAEI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAC+C;AAAA;;AAAA;;AAAA;AAAA;;AAE3C;;AAcJ;;AACJ;;AAEJ;;AACA;;AA4IJ;;;;;;AAlMI;;AACK;;AAAA;;AAOwB;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAOZ;;AAAA,2FAAkB,SAAlB,EAAkB,EAAlB,EAAkB,SAAlB,EAAkB,CAAlB,EAAkB,gBAAlB,EAAkB,IAAlB,EAAkB,mBAAlB,EAAkB,IAAlB,EAAkB,0BAAlB,EAAkB,oBAAlB;;AAGS;;AAAA;;AAkBiB;;AAAA;;;;;;AA0K3B;;;;;;AADJ;;AACI;;AAEJ;;;;;;;;AAFkB;;AAAA,0FAA8D,yBAA9D,EAA8D,oBAA9D;;;;;;;;;;;;;;;;;;;;;;AAdlC;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AACtD;;AAC1C;;AACA;;AACI;;AAIJ;;AACJ;;AACJ;;AACJ;;;;;;AApBK,yLAA6E,SAA7E,EAA6E,+FAA7E;;AAasC;;AAAA;;;;;;AAS/C;;;;;;AAIQ;;AAA+E;;AACnC;;;;;;;;;;;;;;AAExC;;AACI;;AAA0D;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AACzE;;AAAI;;AAC5B;;;;;;;;AAFQ;;AAAA;;AAAyF;;AAAA;;;;;;AAUjF;;AAEI;;AAEC;;;;;;;;AAFD;;AAAA;;;;;;AAIR;;AAII;;AAAqD;;AACzD;;;;;;;;AALG;;;;;;AAoBkF;;AACF;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAb3F;;AACI;;AACI;;AACI;;AAEI;;AACI;;AACI;;AAAmB;;AAAY;;AAC/B;;AAAI;;AAAM;;AAAiD;;AAAO;;AACtE;;AACA;;AACI;;AAAmB;;AAAa;;AAChC;;AAAI;;AAAM;;;;AAA2D;;AACiB;;AACtF;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAZkC;;AAAA;;AAIA;;AAAA;;AACE;;AAAA;;;;;;AA+C6D;;AACF;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AASlB;;AACa;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAQZ;;AACY;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAqB9D;;AAEI;;AAAE;;;;;;AAEF;;;;AAAwC;;AAAM;;AAAY;;;;;;AAA1D;;AAA8C;;AAAA;;;;;;;;;;;;AApF9E;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAGA;;AAEI;;;;AAAmD;;AACvD;;AAEI;;;;AAAmD;;AAC3D;;AACJ;;AACJ;;AACA;;AACI;;AAGI;;AACI;;AACI;;AAA+B;;AAAW;;AAC1C;;AAAI;;AAAM;;AAA4E;;AACtF;;AACJ;;AACA;;AACI;;AAAmB;;AAAS;;AAC5B;;AAAI;;AAAM;;AAAkD;;AAAO;;AACvE;;AACA;;AACI;;AAAmB;;AAAY;;AAC/B;;AAAI;;AAAM;;AAAqF;;AAC/F;;AACJ;;AACA;;AACI;;AAAmB;;AAAa;;AAChC;;AAAI;;AAAM;;;;AAA2D;;AACiB;;AACtF;;AACJ;;AACA;;AACI;;AACI;;AAAM;;AAAQ;;AACd;;AAAM;;AAA8C;;AACxD;;AACA;;AACI;;AAAM;;;;AAAuC;;AACgC;;AACjF;;AACJ;;AACA;;AACI;;AACI;;AAAM;;AAAQ;;AACd;;AAAM;;AAA8C;;AACxD;;AACA;;AAAI;;AAAM;;;;AAAwC;;AAC+B;;AACjF;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAM;;AACV;;AAAI;;AAAiB;;AACzB;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAGA;;AAGJ;;AACA;;AAAI;;AAAM;;;;AAA2C;;AAAO;;AAC5D;;AAAI;;AAAM;;;;AACO;;AAAO;;AAC5B;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;;AAxF4B;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAWU;;AAAA;;AAKA;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AAGA;;AAAA;;AACE;;AAAA;;AAMF;;AAAA;;AAEA;;AAAA;;AACE;;AAAA;;AAsBR;;AAAA,sPAA2F,UAA3F,EAA2F,IAA3F;;AAME;;AAAA;;AACA;;AAAA;;;;;;AAa9B;;AACI;;AAEJ;;;;;;AAFwD;;AAAA,sFAAoB,UAApB,EAAoB,iBAApB,EAAoB,SAApB,EAAoB,oBAApB,EAAoB,QAApB,EAAoB,mBAApB,EAAoB,QAApB,EAAoB,IAApB;;;;;;AAGxD;;AACI;;AACJ;;;;;;AAXJ;;AAEI;;AACI;;AAAsB;;AAAuB;;AACjD;;AACA;;AAIA;;AAGJ;;;;;;AAP8C;;AAAA;;AAIrC;;AAAA;;;;;;AA3JrB;;AACI;;AAEA;;AACI;;AAIJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmC;;AAA+C;;AAClF;;AAKJ;;AACA;;AAMJ;;AACJ;;AACA;;AAqBA;;AAgGA;;AAaJ;;AACJ;;AACJ;;;;;;;;AAhKS;;AAAA;;AAGa;;AAAA;;AAUqC;;AAAA;;AAE/B;;AAAA;;AAOJ;;AAAA;;AAM2B;;AAAA;;AAqBlC;;AAAA;;AAgGkB;;AAAA;;;;;;;;AAmBnC;;AACI;;AACI;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAA6B,UAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B,EAA6B,YAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B,EAA6B,aAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B,EAA6B,eAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B;;AAGzB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAkC,UAAlC,EAAkC;AAAA;;AAAA;;AAAA;AAAA,SAAlC,EAAkC,YAAlC,EAAkC;AAAA;;AAAA;;AAAA;AAAA,SAAlC;;AAGzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAEzB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAO;;AAC/D;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAEzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAEzB;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAwB;;AAChF;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAGzB;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAuB;AAAA;;AAAA;;AAAA;AAAA;;AACnB;;AACJ;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,+BAAsB,KAAtB;AAA8B;AAAS,SAAvC;;AAClB;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA/DyC;;AAAA,qGAA6B,UAA7B,EAA6B,+BAA7B,EAA6B,aAA7B,EAA6B,eAA7B,EAA6B,MAA7B,EAA6B,eAA7B;;AASA;;AAAA,0GAAkC,UAAlC,EAAkC,2BAAlC,EAAkC,aAAlC,EAAkC,iBAAlC,EAAkC,MAAlC,EAAkC,oBAAlC;;AAWA;;AAAA,0GAAkC,UAAlC,EAAkC,+BAAlC,EAAkC,aAAlC,EAAkC,iBAAlC,EAAkC,MAAlC,EAAkC,oBAAlC;;AAQA;;AAAA,0GAAkC,aAAlC,EAAkC,UAAlC,EAAkC,UAAlC,EAAkC,2BAAlC,EAAkC,MAAlC,EAAkC,oBAAlC;;AAUA;;AAAA,wGAAgC,aAAhC,EAAgC,QAAhC,EAAgC,UAAhC,EAAgC,+BAAhC,EAAgC,MAAhC,EAAgC,kBAAhC;;AAQA;;AAAA,8GAAsC,aAAtC,EAAsC,0BAAtC,EAAsC,UAAtC,EAAsC,+BAAtC,EAAsC,MAAtC,EAAsC,6BAAtC;;;;QCrgBhC2D,iB;AA0FT,iCAA6BzF,iBAA7B,EACYC,cADZ,EAC0C;AAAA;;AADb,aAAAD,iBAAA,GAAAA,iBAAA;AACjB,aAAAC,cAAA,GAAAA,cAAA;AAvFL,aAAAyF,SAAA,GAAY,KAAZ;AACA,aAAAC,SAAA,GAAY,CAAZ;AACA,aAAAC,eAAA,GAA6C,EAA7C;AAEA,aAAAC,oBAAA,GAAyC,EAAzC;AACA,aAAAC,SAAA,GAAqB,EAArB;AACA,aAAAC,WAAA,GAAyB,EAAzB;AACA,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,YAAA,GAA2B,EAA3B;AACA,aAAAC,UAAA,GAAa,EAAb;AACA,aAAAC,YAAA,GAA+B,EAA/B;AACA,aAAAC,YAAA,GAAe,EAAf;AACA,aAAAC,aAAA,GAAyB,IAAI,sFAAJ,EAAzB;AACA,aAAAC,SAAA,GAAY,EAAZ;AAEA,aAAAC,WAAA,GAAc,EAAd;AAGA,aAAAC,cAAA,GAA0B,KAA1B;AAEA,aAAAC,kBAAA,GAAqC,IAAI,6FAAJ,EAArC;AACA,aAAAC,kBAAA,GAAsC,IAAI,8FAAJ,EAAtC;AAEP,aAAAC,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AAIO,aAAAC,uBAAA,GAAqD,EAArD;AACA,aAAAC,wBAAA,GAAsD,EAAtD;AACA,aAAAC,cAAA,GAAyB,IAAI,qFAAJ,EAAzB;AAEA,aAAAC,YAAA,GAAe;AAAEC,oBAAU,EAAE;AAAd,SAAf;AACA,aAAAC,WAAA,GAAc;AAAEC,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE;AAAzB;AAAhB,SAAd;AAEC,aAAAmI,oBAAA,GAAuB,IAAI,iDAAJ,EAAvB;AAED,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAAC,gBAAA,GAA4B,KAA5B;AACA,aAAAC,gBAAA,GAA4B,KAA5B;AAEA,aAAAC,SAAA,GAAqB,KAArB;AACA,aAAAC,YAAA,GAAwB,KAAxB;AAEA,aAAAC,iBAAA,GAAoB,UAApB;AACA,aAAAC,iBAAA,GAAoB,CAAC,SAArB;AACC,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAC,aAAA,GAAgB;AACpBC,aAAG,EAAE;AAAEC,eAAG,EAAE,WAAP;AAAoBC,eAAG,EAAE,CAAC;AAA1B,WADe;AAEpBC,aAAG,EAAE;AAAEF,eAAG,EAAE,WAAP;AAAoBC,eAAG,EAAE,CAAC;AAA1B;AAFe,SAAhB;AAID,aAAAE,aAAA,GAAgB;AACnBC,kBAAQ,EAAE;AADS,SAAhB;AAGA,aAAAC,SAAA,GAAY,8BAAZ;AACA,aAAAC,WAAA,GAAc,gCAAd;AACA,aAAAC,UAAA,GAAa,+BAAb;AACA,aAAAC,QAAA,GAAW,4BAAX;AACA,aAAAC,UAAA,GAAa,6BAAb;AAEA,aAAAC,oBAAA,GAAgC,KAAhC;AACA,aAAAC,WAAA,GAAqB,EAArB;AACP,aAAAC,kBAAA,GAA6B,EAA7B;AACA,aAAAC,eAAA,GAAkB,EAAlB;AACO,aAAAC,OAAA,GAAmC,EAAnC;AACA,aAAAC,qBAAA,GAAwB,EAAxB;AACA,aAAA5F,gBAAA,GAA2B,EAA3B;AAKP,aAAA6F,oBAAA,GAAuB,EAAvB;AACA,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,mBAAA,GAAsB,EAAtB;AACA,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,kBAAA,GAAqB,EAArB;AACA,aAAAC,mBAAA,GAA8B,EAA9B;AACA,aAAAC,qBAAA,GAAwB,8EAAxB;AACA,aAAAC,wBAAA,GAA2B,EAA3B;AAEO,aAAAC,YAAA,GAAe,EAAf;AACA,aAAAC,mBAAA,GAA+B,KAA/B;AACA,aAAAC,+BAAA,GAAuC,EAAvC;AAEA,aAAAC,mBAAA,GAA2C,IAAI,qEAAJ,EAA3C;AACA,aAAAC,KAAA,GAAgB,CAAhB;AAIH,aAAKC,uBAAL,GAA+B,IAAI,oDAAJ,CAAoB,KAApB,CAA/B;;AAEA,YAAIC,KAAK,GAAG,IAAZ;;AACA7I,cAAM,CAAC8I,gBAAP,CAAwB,cAAxB,EAAwC,UAAUC,CAAV,EAAa;AACjDF,eAAK,CAACG,WAAN,CAAkB,IAAlB;;AACA;AACH,SAHD;AAIH;;;;eAIM,oBAAQ;AACX,eAAKC,UAAL;AACA,eAAKC,WAAL;AACA,eAAKC,qBAAL;AACA,eAAKlE,YAAL,GAAoB,CAAC;AACjBjJ,cAAE,EAAE,CADa;AAEjBE,gBAAI,EAAE;AAFW,WAAD,EAGjB;AACCF,cAAE,EAAE,CADL;AAECE,gBAAI,EAAE;AAFP,WAHiB,EAOpB;AACIF,cAAE,EAAE,CADR;AAEIE,gBAAI,EAAE;AAFV,WAPoB,EAWpB;AACIF,cAAE,EAAE,CADR;AAEIE,gBAAI,EAAE;AAFV,WAXoB,CAApB;AAeA,eAAKgJ,UAAL,GAAkB,CAAC;AACflJ,cAAE,EAAE,WADW;AAEfE,gBAAI,EAAE;AAFS,WAAD,EAGf;AACCF,cAAE,EAAE,YADL;AAECE,gBAAI,EAAE;AAFP,WAHe,EAOlB;AACIF,cAAE,EAAE,OADR;AAEIE,gBAAI,EAAE;AAFV,WAPkB,CAAlB;AAWA,eAAKkN,uBAAL,GAA+B;AAC3BC,2BAAe,EAAE,KADU;AAE3BC,mBAAO,EAAE,IAFkB;AAG3BC,qBAAS,EAAE,MAHgB;AAI3BC,yBAAa,EAAE,YAJY;AAK3BC,2BAAe,EAAE,cALU;AAM3BC,0BAAc,EAAE,CANW;AAO3BC,6BAAiB,EAAE,IAPQ;AAQ3BC,0BAAc,EAAE;AARW,WAA/B;AAUA,eAAKC,mBAAL,GAA2B;AACvBR,2BAAe,EAAE,KADM;AAEvBC,mBAAO,EAAE,WAFc;AAGvBC,qBAAS,EAAE,aAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAUA,eAAKE,mBAAL,GAA2B;AACvBT,2BAAe,EAAE,IADM;AAEvBC,mBAAO,EAAE,IAFc;AAGvBC,qBAAS,EAAE,MAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAUH;;;eAID,uBAAc;AAAA;;AACV,eAAK5K,iBAAL,CAAuB+K,sBAAvB,GAAgDtK,SAAhD,CAA0D,UAAAxB,IAAI,EAAI;AAC9D,kBAAI,CAACyJ,WAAL,GAAmBzJ,IAAnB;AACH,WAFD;AAGH;;;eAEO,8BAAqB+L,QAArB,EAAuC;AAAA;;AAC3C,eAAKtF,SAAL,GAAiB,IAAjB;;AACA,cAAI,KAAK+D,+BAAL,IAAwC,KAAKA,+BAAL,CAAqClG,MAAjF,EAAyF;AACrF,gBAAI0H,GAAG,GAAG,EAAV;AACA,iBAAKxB,+BAAL,CAAqChG,OAArC,CAA6C,UAAAyH,GAAG,EAAI;AAAED,iBAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAChG,QAAb;AAAwB,aAA9E;AACA,gBAAIiG,MAAM,GAAG,EAAb;AACAA,kBAAM,GAAGF,GAAG,CAACG,IAAJ,EAAT;AAEA,gBAAIC,sBAAsB,GAAG,EAA7B;;AACA,gBAAI,KAAK/B,wBAAL,IAAiC,KAAKA,wBAAL,CAA8B/F,MAA9B,GAAuC,CAA5E,EAA+E;AAC3E,kBAAI0H,GAAG,GAAG,EAAV;AACA,mBAAK3B,wBAAL,CAA8B7F,OAA9B,CAAsC,UAAAyH,GAAG,EAAI;AAAED,mBAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,eAAjE;AACAqO,oCAAsB,GAAGJ,GAAG,CAACG,IAAJ,EAAzB;AACH;;AACD,iBAAKhE,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuBuL,qBAAvB,CAA6CJ,MAA7C,EAAqDE,sBAArD,EAA6E5K,SAA7E,CAAuF,UAAAyK,GAAG,EAAI;AACxH;AACA,kBAAIA,GAAJ,EAAS;AACL,sBAAI,CAACtF,eAAL,GAAuB,MAAI,CAAC4F,cAAL,CAAoBN,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,CAApB,CAAvB;AACH;;AACD,oBAAI,CAACO,gBAAL;;AACA,oBAAI,CAAC/F,SAAL,GAAiB,KAAjB;AACH,aAP6B,CAA9B;AAQH,WApBD,MAoBO;AACH,iBAAKmB,wBAAL,GAAgC,KAAKjB,eAAL,GAAuB,EAAvD;AACA,iBAAK6F,gBAAL;AACA,iBAAK/F,SAAL,GAAiB,KAAjB;AACH;AAEJ;;;eAEO,8BAAqBzG,IAArB,EAAmC;AACvC,cAAIyM,iBAAiB,GAAmB,EAAxC;AACAzM,cAAI,CAACwE,OAAL,CAAa,UAACkI,IAAD,EAAOC,KAAP,EAAiB;AAC1B,gBAAIC,IAAI,GAAiB;AAAE,oBAAM,CAAR;AAAW,sBAAQ;AAAnB,aAAzB;AACAA,gBAAI,CAAC7O,EAAL,GAAU4O,KAAV;AACAC,gBAAI,CAAC3O,IAAL,GAAYyO,IAAZ;AACAD,6BAAiB,CAAC3G,IAAlB,CAAuB8G,IAAvB;AACH,WALD;AAMA,iBAAOH,iBAAP;AACH;;;eAEO,gCAAoB;AAAA;;AACxB,eAAKtE,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuB8L,cAAvB,GAAwCrL,SAAxC,CAAkD,UAAAyK,GAAG,EAAI;AACnF,mBAAI,CAACnF,WAAL,GAAmBmF,GAAnB;AACH,WAF6B,CAA9B;AAGH;;;eAEO,oCAAwB;AAAA;;AAC5B,eAAK9D,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuB+L,kBAAvB,GAA4CtL,SAA5C,CAAsD,UAAAyK,GAAG,EAAI;AACvF,mBAAI,CAAC/E,YAAL,GAAoB+E,GAAG,CAACc,IAAxB;AACH,WAF6B,CAA9B;AAGH;;;eAEO,4BAAmBC,SAAnB,EAAqC;AAAA;;AACzC,eAAK7E,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuBkM,YAAvB,CAAoCD,SAApC,EAA+CxL,SAA/C,CAAyD,UAAAyK,GAAG,EAAI;AAC1F,mBAAI,CAACpF,SAAL,GAAiBoF,GAAjB;AACH,WAF6B,CAA9B;AAGH;;;eAEO,2BAAkBiB,OAAlB,EAAkC;AAAA;;AACtC,eAAK/E,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuBoM,WAAvB,CAAmCD,OAAnC,EAA4C1L,SAA5C,CAAsD,UAAAyK,GAAG,EAAI;AACvF,mBAAI,CAAClF,QAAL,GAAgBkF,GAAhB;AACH,WAF6B,CAA9B;AAGH;;;eACO,wBAAetF,eAAf,EAAyD;AAAA;;AAC7D,cAAIA,eAAe,IAAIA,eAAe,CAACrC,MAAvC,EAA+C;AAC3CqC,2BAAe,CAACnC,OAAhB,CAAwB,UAAAoB,OAAO,EAAI;AAC/B,kBAAIwH,GAAG,GAAG,OAAI,CAAC5C,+BAAL,CAAqC6C,IAArC,CAA0C,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACrH,QAAF,IAAcL,OAAO,CAAC2H,KAA1B;AAAA,eAA3C,CAAV;;AACA,kBAAIH,GAAJ,EAAS;AACL,oBAAIA,GAAG,CAACI,QAAJ,IAAgB,CAApB,EAAuB;AACnB5H,yBAAO,CAAC6H,eAAR,GAA0B,CAA1B;AACA7H,yBAAO,CAAC8H,OAAR,GAAkB,OAAI,CAACvE,SAAvB;AACH,iBAHD,MAIK,IAAIiE,GAAG,CAACI,QAAJ,IAAgB,CAApB,EAAuB;AACxB5H,yBAAO,CAAC6H,eAAR,GAA0B,CAA1B;AACA7H,yBAAO,CAAC8H,OAAR,GAAkB,OAAI,CAACtE,WAAvB;AACH,iBAHI,MAIA,IAAIgE,GAAG,CAACI,QAAJ,IAAgB,CAApB,EAAuB;AACxB5H,yBAAO,CAAC6H,eAAR,GAA0B,CAA1B;AACA7H,yBAAO,CAAC8H,OAAR,GAAkB,OAAI,CAACrE,UAAvB;AACH,iBAHI,MAIA;AACDzD,yBAAO,CAAC6H,eAAR,GAA0B,CAA1B;AACA7H,yBAAO,CAAC8H,OAAR,GAAkB,OAAI,CAACpE,QAAvB;AACH;AACJ,eAjBD,MAiBO;AACH1D,uBAAO,CAAC6H,eAAR,GAA0B,CAA1B;AACA7H,uBAAO,CAAC8H,OAAR,GAAkB,OAAI,CAACpE,QAAvB;AACH;AACJ,aAvBD;AAwBH;;AACD,iBAAO3C,eAAP;AACH;;;eACO,8BAAqBA,eAArB,EAA+D;AACnE,cAAMgH,iBAAiB,GAAGhH,eAAe,CAACrC,MAA1C;;AACA,eAAK,IAAIsJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,iBAApB,EAAuCC,CAAC,EAAxC,EAA4C;AACxC,gBAAIC,gBAAgB,GAAGlH,eAAe,CAACiH,CAAD,CAAf,CAAmBE,mBAA1C;;AACA,gBAAID,gBAAgB,CAACvJ,MAArB,EAA6B;AACzB,kBAAIyJ,iBAAiB,GAAGF,gBAAgB,CAACpK,MAAjB,CAAwB,UAACzD,IAAD;AAAA,uBAAUA,IAAI,CAACwN,QAAL,KAAkB,CAA5B;AAAA,eAAxB,CAAxB;AACA,kBAAIQ,kBAAkB,GAAGH,gBAAgB,CAACpK,MAAjB,CAAwB,UAACzD,IAAD;AAAA,uBAAUA,IAAI,CAACwN,QAAL,KAAkB,CAA5B;AAAA,eAAxB,CAAzB;AACA,kBAAIS,kBAAkB,GAAGJ,gBAAgB,CAACpK,MAAjB,CAAwB,UAACzD,IAAD;AAAA,uBAAUA,IAAI,CAACwN,QAAL,KAAkB,CAA5B;AAAA,eAAxB,CAAzB;;AACA,kBAAIO,iBAAiB,CAACzJ,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BqC,+BAAe,CAACiH,CAAD,CAAf,CAAmBH,eAAnB,GAAqC,CAArC;AACA9G,+BAAe,CAACiH,CAAD,CAAf,CAAmBF,OAAnB,GAA6B,KAAKvE,SAAlC;AACH,eAHD,MAIK,IAAI6E,kBAAkB,CAAC1J,MAAnB,GAA4B,CAAhC,EAAmC;AACpCqC,+BAAe,CAACiH,CAAD,CAAf,CAAmBH,eAAnB,GAAqC,CAArC;AACA9G,+BAAe,CAACiH,CAAD,CAAf,CAAmBF,OAAnB,GAA6B,KAAKtE,WAAlC;AACH,eAHI,MAIA;AACDzC,+BAAe,CAACiH,CAAD,CAAf,CAAmBH,eAAnB,GAAqC,CAArC;AACA9G,+BAAe,CAACiH,CAAD,CAAf,CAAmBF,OAAnB,GAA6B,KAAKrE,UAAlC;AACH;AACJ,aAhBD,MAgBO;AACH1C,6BAAe,CAACiH,CAAD,CAAf,CAAmBH,eAAnB,GAAqC,CAArC;AACA9G,6BAAe,CAACiH,CAAD,CAAf,CAAmBF,OAAnB,GAA6B,KAAKpE,QAAlC;AACH;AACJ;;AACD,iBAAO3C,eAAP;AACH;;;eAEM,uBAAW;AACd,cAAI,KAAKwB,oBAAT,EAA+B;AAC3B,iBAAKA,oBAAL,CAA0B+F,WAA1B;AACH;;AACD,eAAKnD,WAAL,CAAiB,IAAjB;;AACA,cAAI,KAAKoD,wBAAT,EAAmC;AAC/BC,yBAAa,CAAC,KAAKD,wBAAN,CAAb;AACH;AACJ;;;eAEM,0BAAiBE,UAAjB,EAA6BC,KAA7B,EAA8C;AACjDD,oBAAU,CAACrM,IAAX;AACH;;;eAEM,4BAAmBqM,UAAnB,EAA+BC,KAA/B,EAAgD;AACnDD,oBAAU,CAAC/L,KAAX;AACH;;;eAEM,yBAAgBiM,WAAhB,EAAoD;AACvDxM,gBAAM,CAACyM,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,eAAKC,iBAAL,GAAyBF,WAAzB;AACA,eAAKzG,YAAL,CAAkBC,UAAlB,GAA+B,CAA/B;AACA,eAAKK,eAAL,GAAuB,IAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA,eAAKC,SAAL,GAAiB,IAAjB;AACA,eAAKmG,kBAAL;AACH;;;eAEM,4BAAgB;AACnB,eAAKtG,eAAL,GAAuB,KAAvB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACH;;;eAEM,2BAAkBqG,MAAlB,EAA0C;AAC7C,cAAIA,MAAM,CAACrK,MAAX,EAAmB;AACf,iBAAK+D,gBAAL,GAAwB,IAAxB;AACA,iBAAKzB,oBAAL,GAA4B+H,MAA5B;;AACA,gBAAIA,MAAM,CAAC,CAAD,CAAN,CAAUC,wBAAV,CAAmCtK,MAAvC,EAA+C;AAC3C,mBAAKuK,iBAAL,CAAuBF,MAAM,CAAC,CAAD,CAAN,CAAUC,wBAAV,CAAmC,CAAnC,EAAsC,QAAtC,CAAvB,EAAwED,MAAM,CAAC,CAAD,CAAN,CAAUC,wBAAV,CAAmC,CAAnC,EAAsC,QAAtC,CAAxE,EAAyH,CAAzH;AACH,aAFD,MAGK;AACD,mBAAKvH,SAAL,GAAiB,EAAjB;AACA,mBAAKD,aAAL,GAAqB,IAAI,sFAAJ,EAArB;AACH;AACJ;AACJ;;;eAEM,8BAAkB;AACrB,eAAKiB,gBAAL,GAAwB,KAAxB;AAEH;;;eAEM,2BAAkBsG,MAAlB,EAA0C;AAC7C,eAAKrG,gBAAL,GAAwB,IAAxB;AACA,eAAKqC,uBAAL,CAA6BxI,IAA7B,CAAkC,KAAlC;;AACA,cAAIwM,MAAM,CAACrK,MAAP,IAAiBqK,MAAM,CAAC,CAAD,CAAN,CAAUC,wBAAV,CAAmCtK,MAAxD,EAAgE;AAC5D,iBAAKwK,qBAAL,CAA2BH,MAAM,CAAC,CAAD,CAAN,CAAUC,wBAAV,CAAmC,CAAnC,EAAsC,QAAtC,CAA3B,EAA4E,CAA5E,EAA+ED,MAAM,CAAC,CAAD,CAAN,CAAUvJ,KAAzF;AACH,WAFD,MAGK;AACD,iBAAKuF,uBAAL,CAA6BxI,IAA7B,CAAkC,KAAlC;AACA,iBAAK4M,eAAL,GAAuB,IAAvB;AACH;AACJ;;;eAEM,8BAAkB;AACrB,eAAKzG,gBAAL,GAAwB,KAAxB;AACH;;;eAEM,yBAAgB0G,IAAhB,EAA4B;AAC/B,eAAKlH,YAAL,CAAkBC,UAAlB,GAA+BiH,IAA/B;;AACA,cAAI,KAAKpI,oBAAL,CAA0BoI,IAA1B,EAAgCJ,wBAAhC,CAAyDtK,MAA7D,EAAqE;AACjE,iBAAKuK,iBAAL,CAAuB,KAAKjI,oBAAL,CAA0BoI,IAA1B,EAAgCJ,wBAAhC,CAAyD,CAAzD,EAA4D,QAA5D,CAAvB,EAA8F,KAAKhI,oBAAL,CAA0BoI,IAA1B,EAAgCJ,wBAAhC,CAAyD,CAAzD,EAA4D,QAA5D,CAA9F,EAAqK,CAArK;AACH,WAFD,MAEO;AACH,iBAAKvH,SAAL,GAAiB,EAAjB;AACA,iBAAKD,aAAL,GAAqB,IAAI,sFAAJ,EAArB;AACH;AACJ;;;eACM,yBAAa;AAChB,eAAKmB,SAAL,GAAiB,CAAC,KAAKA,SAAvB;;AACA,cAAI,KAAKA,SAAT,EAAoB;AAChB,iBAAK0G,oBAAL;AACH,WAJe,CAKhB;;AACH;;;eAEM,4BAAgB;AACnB,eAAKzG,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACH;;;eAED,gCAAuB;AACnB,cAAI,KAAKA,YAAT,EAAuB;AACnB,iBAAKA,YAAL,GAAoB,KAApB;AACH;AACJ;;;eAEO,0BAAiBxI,IAAjB,EAAuB2M,KAAvB,EAA4B,CACnC;;;eAEM,mBAAU4B,WAAV,EAA8C;AACjD,eAAKE,iBAAL,GAAyBF,WAAzB;AACA,eAAK3H,oBAAL,GAA4B,KAAK6H,iBAAL,CAAuBS,eAAnD;;AACA,cAAI,KAAKtI,oBAAL,CAA0BtC,MAA9B,EAAsC;AAClC,iBAAKoK,kBAAL;AACA,iBAAKS,gBAAL;AACA,iBAAKC,kBAAL;AACA,iBAAKtH,YAAL,CAAkBC,UAAlB,GAA+B,CAA/B;;AACA,gBAAI,KAAKnB,oBAAL,CAA0B,CAA1B,EAA6BgI,wBAA7B,CAAsDtK,MAA1D,EAAkE;AAC9D,mBAAKuK,iBAAL,CAAuB,KAAKjI,oBAAL,CAA0B,CAA1B,EAA6BgI,wBAA7B,CAAsD,CAAtD,EAAyD,QAAzD,CAAvB,EAA2F,KAAKhI,oBAAL,CAA0B,CAA1B,EAA6BgI,wBAA7B,CAAsD,CAAtD,EAAyD,QAAzD,CAA3F,EAA+J,CAA/J;AACH;;AACD,iBAAK5G,WAAL,GAAmB;AAAEC,0BAAY,EAAE;AAAEC,uBAAO,EAAE,OAAX;AAAoBlI,oBAAI,EAAE;AAA1B;AAAhB,aAAnB;AACH;AACJ;;;eAEM,sBAAU;AACb,eAAKgI,WAAL,GAAmB;AAAEC,wBAAY,EAAE;AAAEC,qBAAO,EAAE,MAAX;AAAmBlI,kBAAI,EAAE;AAAzB;AAAhB,WAAnB;AACH;;;eAEO,2BAAkBqP,MAAlB,EAAkCC,MAAlC,EAAkDC,QAAlD,EAAkE;AAAA;;AACtE,eAAK9I,SAAL,GAAiB,IAAjB;AACA,eAAKY,SAAL,GAAiB,EAAjB;AACA,eAAKmI,YAAL,GAAoB,EAApB;AACA,eAAKA,YAAL,GAAoB,KAAKC,eAAL,CAAqB,KAAK9G,WAA1B,CAApB;AACA,eAAKrB,WAAL,GAAmB,EAAnB;AACA,eAAKF,aAAL,GAAqB,IAAI,sFAAJ,EAArB;AACA,eAAKe,oBAAL,CAA0BkE,GAA1B,CAA8B,KAAKtL,iBAAL,CAAuB8N,iBAAvB,CAAyCQ,MAAzC,EAAiDC,MAAjD,EAAyDC,QAAzD,EAAmE/N,SAAnE,CAA6E,UAACxB,IAAD,EAAU;AACjH,gBAAIA,IAAI,IAAIA,IAAI,CAAC0P,UAAL,KAAoB,GAAhC,EAAqC;AACjC,kBAAIC,IAAI,GAAG3P,IAAI,CAAC+M,IAAhB;AACA,qBAAI,CAAC3F,aAAL,GAAqBuI,IAAI,CAAC,CAAD,CAAzB;AACA,kBAAIvC,GAAG,GAAG,EAAV;AACA,kBAAIwC,SAAS,GAAG,EAAhB;AACAxC,iBAAG,CAAC,OAAD,CAAH,GAAe,UAAUuC,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAzB;AACA,kBAAIE,OAAO,GAAGF,IAAI,CAACrL,MAAnB;;AACA,mBAAK,IAAIsJ,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGiC,OAArB,EAA+BjC,CAAC,EAAhC,EAAoC;AAChC,oBAAIkC,WAAW,GAAG,mCAAM,CAAC,IAAIC,IAAJ,CAASJ,IAAI,CAAC/B,CAAD,CAAJ,CAAQoC,iBAAjB,CAAD,CAAN,CAA4CC,MAA5C,CAAmD,oBAAnD,CAAlB;AACAL,yBAAS,CAACM,OAAV,CAAkBP,IAAI,CAAC/B,CAAD,CAAJ,CAAQuC,SAA1B;;AACA,uBAAI,CAAC7I,WAAL,CAAiB4I,OAAjB,CAAyBJ,WAAzB;AACH;;AACD1C,iBAAG,CAAC,MAAD,CAAH,GAAcwC,SAAd;;AACA,qBAAI,CAACvI,SAAL,CAAevB,IAAf,CAAoBsH,GAApB;AACH;;AACD,mBAAI,CAACgD,eAAL,CAAqB,OAAI,CAACxJ,oBAAL,CAA0B,OAAI,CAACkB,YAAL,CAAkBC,UAA5C,EAAwD6G,wBAAxD,CAAiF,CAAjF,CAArB;;AACA,mBAAI,CAACnI,SAAL,GAAiB,KAAjB;AACH,WAlB6B,CAA9B;AAmBH;;;eAEM,+BAAsB4I,MAAtB,EAAsCE,QAAtC,EAAwDc,QAAxD,EAAwE;AAC3E;AACA,eAAKtB,eAAL,GAAuB;AAAEM,kBAAM,EAAEA,MAAV;AAAkBE,oBAAQ,EAAEA,QAA5B;AAAsCc,oBAAQ,EAAEA;AAAhD,WAAvB;AACA,eAAK1F,uBAAL,CAA6BxI,IAA7B,CAAkC,IAAlC;AACH;;;eAEM,kBAASmO,GAAT,EAAiB;AACpB,eAAKC,GAAL,GAAWD,GAAX;AACA,eAAK9D,gBAAL;AACH;;;eAEO,wBAAY;AAChB,cAAI,KAAK7F,eAAL,CAAqBrC,MAArB,IAA+B,CAAnC,EAAsC;AAClC,iBAAKkI,gBAAL;AACH,WAFD,MAEO;AACH,iBAAK+D,GAAL,CAASC,OAAT,CAAiB,CAAjB;AACH;AACJ;;;eAEO,4BAAgB;AAAA;;AACpB,cAAI,KAAK7H,WAAL,IAAoB,EAAxB,EAA4B;AACxB,iBAAKwF,wBAAL,GAAgCpM,MAAM,CAACM,UAAP,CAAkB,YAAM;AACpD,qBAAI,CAACoG,iBAAL,GAAyB,OAAI,CAACG,aAAL,CAAmB,OAAI,CAACD,WAAxB,EAAqCG,GAA9D;AACA,qBAAI,CAACJ,iBAAL,GAAyB,OAAI,CAACE,aAAL,CAAmB,OAAI,CAACD,WAAxB,EAAqCI,GAA9D;;AACA,kBAAI,OAAI,CAACwH,GAAL,IAAY,OAAI,CAAC5J,eAAL,CAAqBrC,MAArB,IAA+B,CAA/C,EAAkD;AAC9C,uBAAI,CAACiM,GAAL,CAASE,SAAT,CAAmB,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,OAAI,CAACnI,iBAA5B,EAA+C,OAAI,CAACC,iBAApD,CAAnB;;AACA,uBAAI,CAAC6H,GAAL,CAASC,OAAT,CAAiB,CAAjB;AACH,eAHD,MAGO;AACH,oBAAMK,MAAM,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,YAAhB,EAAf;;AACA,uBAAI,CAACnK,eAAL,CAAqBnC,OAArB,CAA6B,UAACuM,CAAD,EAAgC;AACzDF,wBAAM,CAACG,MAAP,CAAc,IAAIN,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBG,CAAC,CAACpS,QAAzB,EAAmCoS,CAAC,CAACnS,SAArC,CAAd;AACH,iBAFD;;AAGA,oBAAI,OAAI,CAAC2R,GAAL,IAAYM,MAAhB,EAAwB;AACpB,yBAAI,CAACN,GAAL,CAASU,SAAT,CAAmBJ,MAAnB;;AACA,yBAAI,CAACN,GAAL,CAASE,SAAT,CAAmBI,MAAM,CAACK,SAAP,EAAnB;;AACA,yBAAI,CAACX,GAAL,CAASC,OAAT,CAAiB,CAAjB;AACH;AAEJ;AACJ,aAlB+B,EAkB7B,GAlB6B,CAAhC;AAmBH;AACJ;;;eAEO,yBAAgBW,OAAhB,EAAiC;AACrC,eAAKC,QAAL,GAAiBD,OAAO,KAAK,KAAb,GAAsB,SAAtB,GAAkC,QAAlD;AACA,iBAAO;AACHE,sBAAU,EAAE,IADT;AAEHC,+BAAmB,EAAE,KAFlB;AAGHC,kBAAM,EAAE;AACJC,mBAAK,EAAE,CAAC;AACJC,0BAAU,EAAE;AACRvJ,yBAAO,EAAE,IADD;AAERwJ,6BAAW,kCAA2B,KAAKN,QAAhC;AAFH,iBADR;AAKJO,qBAAK,EAAE;AACHC,0BAAQ,EAAE,kBAAAC,KAAK,EAAI;AAAE,2BAAOA,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyB,uBAAzB,EAAkD,GAAlD,CAAP;AAAgE;AADlF;AALH,eAAD,CADH;AAUJC,mBAAK,EAAE,CAAC;AACJpQ,oBAAI,EAAE,MADF;AAEJqQ,oBAAI,EAAE;AACFC,gCAAc,EAAE;AACZ,mCAAe,QADH;AAEZ,8BAAU,QAFE;AAGZ,8BAAU,QAHE;AAIZ,4BAAQ,QAJI;AAKZ,2BAAO,QALK;AAMZ,4BAAQ,QANI;AAOZ,6BAAS,QAPG;AAQZ,+BAAW,QARC;AASZ,4BAAQ;AATI;AADd;AAFF,eAAD;AAVH;AAHL,WAAP;AAgCH;;;eAEO,iCAAqB;AAAA;;AACzB,eAAKnR,iBAAL,CAAuBoR,oBAAvB,GAA8C3Q,SAA9C,CAAwD,UAAAxB,IAAI,EAAI;AAC5D,mBAAI,CAAC2I,WAAL,GAAmB3I,IAAnB;AACA,mBAAI,CAACoR,QAAL,GAAiB,OAAI,CAACzI,WAAL,KAAqB,KAAtB,GAA+B,SAA/B,GAA2C,QAA3D;AACH,WAHD;AAIH;;;eACM,sBAAa1D,MAAb,EAAmB;AACtB,cAAI,KAAK0D,WAAL,IAAoB,CAAC,KAAKhC,eAAL,CAAqBrC,MAA9C,EAAsD;AAClD,iBAAKmE,iBAAL,GAAyB,KAAKG,aAAL,CAAmB,KAAKD,WAAxB,EAAqCG,GAA9D;AACA,iBAAKJ,iBAAL,GAAyB,KAAKE,aAAL,CAAmB,KAAKD,WAAxB,EAAqCI,GAA9D;;AACA,gBAAI,KAAKwH,GAAT,EAAc;AACV,mBAAKA,GAAL,CAASE,SAAT,CAAmB;AAAE3H,mBAAG,EAAE,KAAKL,iBAAZ;AAA+BM,mBAAG,EAAE,KAAKL;AAAzC,eAAnB;AACA,mBAAK6H,GAAL,CAASC,OAAT,CAAiB,CAAjB;AACH;AACJ;AACJ;;;eACM,0BAAiBlC,KAAjB,EAA6B8D,WAA7B,EAAkD;AACrD,cAAIC,MAAM,GAAG/D,KAAK,CAAC/I,MAAnB;AACA,cAAI+M,aAAa,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAApB;AACA,cAAIC,aAAa,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAApB;AACA,cAAIC,cAAc,GAAGF,aAAa,CAACG,UAAd,CAAyB,IAAzB,CAArB;AACAH,uBAAa,CAACI,MAAd,GAAuB,GAAvB;AACAJ,uBAAa,CAACK,KAAd,GAAsB,GAAtB;AACA,cAAIC,OAAO,GAAGT,aAAa,CAACM,UAAd,CAAyB,IAAzB,CAAd;AACAD,wBAAc,CAACK,SAAf,CAAyBV,aAAzB,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,GAA9C,EAAmD,GAAnD;AACAD,gBAAM,CAACY,IAAP,GAAcR,aAAa,CAACS,SAAd,CAAwB,YAAxB,EAAsC,GAAtC,CAAd;AACAb,gBAAM,CAACc,QAAP,aAAqB,KAAKvM,oBAAL,CAA0BwL,WAA1B,EAAuCgB,SAA5D;AACH;;;eAEO,yBAAgBC,YAAhB,EAAsD;AAC1D,eAAK7L,kBAAL,CAAwB8L,OAAxB,GAAkCD,YAAY,CAACC,OAA/C;AACA,eAAK9L,kBAAL,CAAwB+L,OAAxB,GAAkCF,YAAY,CAACE,OAA/C;AACA,eAAK/L,kBAAL,CAAwBgM,cAAxB,GAAyCH,YAAY,CAACG,cAAtD;AACA,eAAKhM,kBAAL,CAAwBiM,cAAxB,GAAyCJ,YAAY,CAACI,cAAtD;AACA,cAAIC,UAAU,GAAI,CAAC,KAAKtM,aAAL,CAAmB+I,SAAnB,IAAgC,CAAjC,IAAsCkD,YAAY,CAACM,YAApD,GAAoE,GAArF;AACAD,oBAAU,GAAGA,UAAU,GAAGL,YAAY,CAACG,cAA1B,GAA2CH,YAAY,CAACG,cAAxD,GAAyEE,UAAtF;AACAA,oBAAU,GAAGA,UAAU,GAAG,CAAb,GAAiB,CAAjB,GAAqBA,UAAlC;AAEA,cAAIE,WAAW,GAAIP,YAAY,CAACG,cAAb,GAA8BE,UAAjD;AACAE,qBAAW,GAAGA,WAAW,GAAG,GAAd,GAAoB,GAApB,GAA0BA,WAAxC;AACAA,qBAAW,GAAGA,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAApC;AAEA,eAAKC,eAAL,CAAqBD,WAArB,EAAkCF,UAAlC;AACH;;;eAEO,yBAAgBE,WAAhB,EAAqCF,UAArC,EAAuD;AAC3D,eAAKjM,kBAAL,CAAwBmM,WAAxB,GAAsCA,WAAtC;AACA,eAAKnM,kBAAL,CAAwBiM,UAAxB,GAAqCA,UAArC;AACA,cAAII,wBAAwB,GAAI,OAAQF,WAAW,GAAG,IAAf,GAAwBF,UAAU,GAAG,IAA5C,CAAhC;AACA,cAAIK,yBAAyB,GAAIH,WAAW,GAAG,IAA/C;AACA,cAAII,2BAA2B,GAAIN,UAAU,GAAG,IAAhD,CAL2D,CAM3D;;AACA,cAAIK,yBAAyB,GAAG,EAA5B,IAAkCC,2BAA2B,GAAG,EAApE,EAAwE;AACpE;AACA,gBAAIF,wBAAwB,GAAG,EAA/B,EAAmC;AAE/B,kBAAIC,yBAAyB,GAAG,EAAhC,EAAoC;AAChCA,yCAAyB,GAAGA,yBAAyB,GAAG,EAAxD;AACAC,2CAA2B,GAAGA,2BAA2B,GAAG,EAA5D;AACH;;AACD,kBAAIA,2BAA2B,GAAG,EAAlC,EAAsC;AAClCA,2CAA2B,GAAGA,2BAA2B,GAAG,EAA5D;AACAD,yCAAyB,GAAGA,yBAAyB,GAAG,EAAxD;AACH;AACJ,aAVD,CAWA;AAXA,iBAYK;AACD,kBAAIA,yBAAyB,GAAG,EAAhC,EAAoC;AAChCA,yCAAyB,GAAGA,yBAAyB,GAAG,EAAxD;AACAD,wCAAwB,GAAGA,wBAAwB,GAAG,EAAtD;AACH;;AACD,kBAAIE,2BAA2B,GAAG,EAAlC,EAAsC;AAClCA,2CAA2B,GAAGA,2BAA2B,GAAG,EAA5D;AACAF,wCAAwB,GAAGA,wBAAwB,GAAG,EAAtD;AACH;AACJ;AACJ;;AACD,eAAKrM,kBAAL,CAAwBwM,uBAAxB,GAAkDD,2BAAlD;AACA,eAAKvM,kBAAL,CAAwByM,qBAAxB,GAAgDH,yBAAhD;AACA,eAAKtM,kBAAL,CAAwB0M,oBAAxB,GAA+CL,wBAA/C;AACH;;;eAEM,iCAAwB;AAC3B,eAAKM,eAAL;AACH;;;eAEM,0BAAiB;AACpB,cAAIpI,GAAG,GAAG,EAAV;AACA,eAAKtC,kBAAL,GAA0B,EAA1B;AACA,eAAKM,mBAAL,CAAyBxF,OAAzB,CAAiC,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAA5D;AACA,eAAK2L,kBAAL,GAA0BsC,GAAG,CAACG,IAAJ,EAA1B;AACA,eAAKiI,eAAL;AACH;;;eAEM,6BAAoB;AAAA;;AACvB,cAAI,KAAKtK,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BxF,MAA1B,GAAmC,CAApE,EAAuE;AACnE,iBAAKgG,YAAL,GAAoB,EAApB;AACA,gBAAI+J,SAAS,GAAG,KAAKlN,YAAL,CAAkB1D,MAAlB,CAAyB,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAACxD,oBAAL,CAA0BrG,MAA1B,CAAiC,UAAA6Q,EAAE;AAAA,uBAAIA,EAAE,CAACC,SAAH,IAAgBjH,CAAC,CAACiH,SAAtB;AAAA,eAAnC,EAAoEjQ,MAApE,GAA6E,CAApF;AAAwF,aAAxH,CAAhB;AACA+P,qBAAS,CAAC7P,OAAV,CAAkB,UAAAyH,GAAG,EAAI;AACrB,kBAAI,CAAC,OAAI,CAAC3B,YAAL,CAAkB+C,IAAlB,CAAuB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACvP,EAAF,IAAQkO,GAAG,CAAClO,EAAhB;AAAA,eAAxB,CAAL,EAAkD;AAC9C,uBAAI,CAACuM,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBkK,MAAlB,CAAyBvI,GAAG,CAACwI,IAA7B,CAApB;AACH;AACJ,aAJD;AAKA,iBAAKnK,YAAL,GAAoB,KAAKoK,cAAL,CAAoB,KAAKpK,YAAL,CAAkBqK,MAAlB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,aAAzB,EAAgD,EAAhD,CAApB,CAApB;;AACA,gBAAI,KAAK9K,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BzF,MAA1B,GAAmC,CAApE,EAAuE;AACnE,mBAAKyF,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BtG,MAA1B,CAAiC,UAAA6J,CAAC,EAAI;AAAE,uBAAO,OAAI,CAAChD,YAAL,CAAkB7G,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,yBAAIA,EAAE,CAACvW,EAAH,IAASuP,CAAC,CAACvP,EAAf;AAAA,iBAA3B,EAA8CuG,MAA9C,GAAuD,CAA9D;AAAiE,eAAzG,CAA5B;AACH;AACJ,WAZD,MAaK;AACD,iBAAKwQ,eAAL;AACH;AACJ;;;eAEM,sBAAa;AAAA;;AAChB,eAAK/T,iBAAL,CAAuBgU,oBAAvB,GAA8CvT,SAA9C,CAAwD,UAAAxB,IAAI,EAAI;AAC5D,mBAAI,CAAC4J,OAAL,GAAe5J,IAAf;;AACA,gBAAI,OAAI,CAAC4J,OAAL,IAAgB,OAAI,CAACA,OAAL,CAAatF,MAAb,GAAsB,CAA1C,EAA6C;AACzC,qBAAI,CAACqF,eAAL,GAAuB,EAAvB;;AACA,qBAAI,CAACA,eAAL,CAAqB7D,IAArB,CAA0B,OAAI,CAAC8D,OAAL,CAAa,CAAb,CAA1B;;AACA,kBAAIoC,GAAG,GAAG,EAAV;;AACA,qBAAI,CAACrC,eAAL,CAAqBnF,OAArB,CAA6B,UAAAyH,GAAG,EAAI;AAAED,mBAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,eAAxD;;AACA,qBAAI,CAACkG,gBAAL,GAAwB+H,GAAG,CAACG,IAAJ,EAAxB;AACH;;AACD,mBAAI,CAAC6I,UAAL;AACH,WAVD;AAWH;;;eAEO,mCAA0B/Q,gBAA1B,EAA4C;AAAA;;AAChD,eAAKjD,cAAL,CAAoBiU,oBAApB,CAAyChR,gBAAzC,EAA2D,KAAKuF,oBAAhE,EAAsF,KAAKE,kBAA3F,EAA+GlI,SAA/G,CAAyH,UAAA0T,EAAE,EAAI;AAC3H,mBAAI,CAAC/N,YAAL,GAAoB+N,EAApB;;AACA,gBAAI,OAAI,CAACpL,oBAAL,IAA6B,OAAI,CAACA,oBAAL,CAA0BxF,MAA1B,GAAmC,CAApE,EAAuE;AACnE,qBAAI,CAACwF,oBAAL,GAA4B,OAAI,CAACA,oBAAL,CAA0BrG,MAA1B,CAAiC,UAAA6J,CAAC,EAAI;AAAE,uBAAO,OAAI,CAACnG,YAAL,CAAkB1D,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,yBAAIA,EAAE,CAACC,SAAH,IAAgBjH,CAAC,CAACiH,SAAtB;AAAA,iBAA3B,EAA4DjQ,MAA5D,GAAqE,CAA5E;AAA+E,eAAvH,CAA5B;AACH;;AACD,mBAAI,CAACwQ,eAAL;AACH,WAND;AAOH;;;eAEO,2BAAkB;AAAA;;AACtB,eAAKxK,YAAL,GAAoB,EAApB;;AAEA,cAAI,KAAKX,eAAL,IAAwB,KAAKA,eAAL,CAAqBrF,MAArB,GAA8B,CAA1D,EAA6D;AACzD,iBAAK6C,YAAL,CAAkB3C,OAAlB,CAA0B,UAAAyH,GAAG,EAAI;AAC7B,qBAAI,CAAC3B,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBkK,MAAlB,CAAyBvI,GAAG,CAACwI,IAAJ,CAAShR,MAAT,CAAgB,UAAA6J,CAAC;AAAA,uBAAI,OAAI,CAAC3D,eAAL,CAAqBwL,IAArB,CAA0B,UAAAb,EAAE;AAAA,yBAAIA,EAAE,CAACvW,EAAH,IAASuP,CAAC,CAACtJ,QAAf;AAAA,iBAA5B,CAAJ;AAAA,eAAjB,CAAzB,CAApB;AACH,aAFD;AAGH,WAJD,MAKK;AACD,iBAAKmD,YAAL,CAAkB3C,OAAlB,CAA0B,UAAAyH,GAAG,EAAI;AAC7B,kBAAI,CAAC,OAAI,CAAC3B,YAAL,CAAkB+C,IAAlB,CAAuB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACvP,EAAF,IAAQkO,GAAG,CAAClO,EAAhB;AAAA,eAAxB,CAAL,EAAkD;AAC9C,uBAAI,CAACuM,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBkK,MAAlB,CAAyBvI,GAAG,CAACwI,IAA7B,CAApB;AACH;AACJ,aAJD;AAKH;;AACD,eAAKnK,YAAL,GAAoB,KAAKoK,cAAL,CAAoB,KAAKpK,YAAL,CAAkBqK,MAAlB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,WAAzB,EAAgD,EAAhD,CAApB,CAApB;;AACA,cAAI,KAAK9K,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BzF,MAA1B,GAAmC,CAApE,EAAuE;AACnE,iBAAKyF,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BtG,MAA1B,CAAiC,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAAChD,YAAL,CAAkB7G,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,uBAAIA,EAAE,CAACvW,EAAH,IAASuP,CAAC,CAACvP,EAAf;AAAA,eAA3B,EAA8CuG,MAA9C,GAAuD,CAA9D;AAAiE,aAAzG,CAA5B;AACH;AACJ;;;eAED,wBAAe8Q,KAAf,EAAsB;AAClB,cAAMpJ,GAAG,GAAG,EAAZ;AACA,cAAIqJ,WAAW,GAAGD,KAAK,CAAC3R,MAAN,CAAa,UAAAiJ,IAAI;AAAA,mBAAIV,GAAG,CAACsJ,QAAJ,CAAa5I,IAAI,CAAC3O,EAAlB,IAAwB,KAAxB,GAAgCiO,GAAG,CAAClG,IAAJ,CAAS4G,IAAI,CAAC3O,EAAd,CAApC;AAAA,WAAjB,CAAlB;AACA,iBAAOsX,WAAW,CAACE,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACvX,IAAF,CAAOyX,aAAP,CAAqBD,CAAC,CAACxX,IAAvB,CAAV;AAAA,WAAjB,CAAP;AACH;;;eAEM,2BAAkB;AACrB,eAAK0X,uBAAL;AACH;;;eAED,mCAA0B;AAAA;;AACtB,cAAI,KAAKhM,eAAL,IAAwB,KAAKA,eAAL,CAAqBrF,MAArB,GAA8B,CAA1D,EAA6D;AACzD,iBAAK6C,YAAL,GAAoB,KAAK0C,qBAAL,CAA2BpG,MAA3B,CAAkC,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAAC3D,eAAL,CAAqBlG,MAArB,CAA4B,UAAA6Q,EAAE;AAAA,uBAAIhH,CAAC,CAACsI,SAAF,CAAYT,IAAZ,CAAiB,UAAAU,CAAC;AAAA,yBAAIvB,EAAE,CAACvW,EAAH,IAAS8X,CAAb;AAAA,iBAAlB,CAAJ;AAAA,eAA9B,EAAqEvR,MAArE,GAA8E,CAArF;AAAyF,aAAlI,CAApB;AACH,WAFD,MAGK;AACD,iBAAK6C,YAAL,GAAoB,KAAK0C,qBAAzB;AACH;;AACD,cAAI,KAAKC,oBAAL,IAA6B,KAAKA,oBAAL,CAA0BxF,MAA1B,GAAmC,CAApE,EAAuE;AACnE,iBAAKwF,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BrG,MAA1B,CAAiC,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAACnG,YAAL,CAAkB1D,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,uBAAIA,EAAE,CAACC,SAAH,IAAgBjH,CAAC,CAACiH,SAAtB;AAAA,eAA3B,EAA4DjQ,MAA5D,GAAqE,CAA5E;AAA+E,aAAvH,CAA5B;AACH;;AACD,eAAKwQ,eAAL;AACH;;;eAED,2BAAkB;AAAA;;AACd,cAAI9I,GAAG,GAAG,EAAV;AACA,eAAKpC,OAAL,CAAapF,OAAb,CAAqB,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAhD;AACA,cAAI+X,gBAAgB,GAAG9J,GAAG,CAACG,IAAJ,EAAvB;AACA,eAAKnL,cAAL,CAAoBiU,oBAApB,CAAyCa,gBAAzC,EAA2D,KAAKtM,oBAAhE,EAAsF,KAAKE,kBAA3F,EAA+GlI,SAA/G,CAAyH,UAAA0T,EAAE,EAAI;AAC3H,mBAAI,CAACrL,qBAAL,GAA6BqL,EAA7B;;AACA,mBAAI,CAACS,uBAAL;AACH,WAHD;AAIH;;;eAEM,8BAAqB1Q,MAArB,EAA6B,CAEnC;;;eACM,wBAAe;AAClB,eAAK0E,eAAL,GAAuB,EAAvB;AACA,eAAKG,oBAAL,GAA4B,EAA5B;AACA,eAAKC,oBAAL,GAA4B,EAA5B;AACA,eAAKE,oBAAL,GAA4B,EAA5B;AACA,eAAKC,kBAAL,GAA0B,EAA1B;AACA,eAAKG,wBAAL,GAAgC,EAAhC;AACA,eAAK0L,YAAL,CAAkB,OAAlB;AAEH;;;eACM,sBAAaC,GAAb,EAAmB;AAAA;;AACtB,eAAKjL,WAAL,CAAiB,KAAjB;AACA,eAAKL,KAAL,GAAa,CAAb;AAEA,cAAIuL,SAAS,GAAG,EAAhB;AACA,eAAKtM,eAAL,CAAqBnF,OAArB,CAA6B,UAAAyH,GAAG,EAAI;AAChC,mBAAI,CAACvB,KAAL;AACAuL,qBAAS,CAACnQ,IAAV,CAAemG,GAAG,CAAClO,EAAnB;AACH,WAHD;AAIA,eAAK0M,mBAAL,CAAyBxG,gBAAzB,GAA4CgS,SAAS,CAAC9J,IAAV,EAA5C;AAEA,cAAI+J,WAAW,GAAG,EAAlB;AACA,eAAKpM,oBAAL,CAA0BtF,OAA1B,CAAkC,UAAAyH,GAAG,EAAI;AACrC,mBAAI,CAACvB,KAAL;AACAwL,uBAAW,CAACpQ,IAAZ,CAAiBmG,GAAG,CAACsI,SAArB;AACH,WAHD;AAIA,eAAK9J,mBAAL,CAAyB7G,kBAAzB,GAA8CsS,WAAW,CAAC/J,IAAZ,EAA9C;AAEA,cAAIgK,WAAW,GAAG,EAAlB;AACA,eAAKpM,oBAAL,CAA0BvF,OAA1B,CAAkC,UAAAyH,GAAG,EAAI;AACrC,mBAAI,CAACvB,KAAL;AACAyL,uBAAW,CAACrQ,IAAZ,CAAiBmG,GAAG,CAAClO,EAArB;AACH,WAHD;AAIA,eAAK0M,mBAAL,CAAyBtF,kBAAzB,GAA8CgR,WAAW,CAAChK,IAAZ,EAA9C;AAEA,cAAIiK,SAAS,GAAG,EAAhB;AACA,eAAKlM,kBAAL,CAAwB1F,OAAxB,CAAgC,UAAAyH,GAAG,EAAI;AACnC,mBAAI,CAACvB,KAAL;AACA0L,qBAAS,CAACtQ,IAAV,CAAemG,GAAG,CAAClO,EAAnB;AACH,WAHD;AAIA,eAAK0M,mBAAL,CAAyB4L,gBAAzB,GAA4CD,SAAS,CAACjK,IAAV,EAA5C;AAEA,cAAImK,aAAa,GAAG,EAApB;AACA,eAAKrM,oBAAL,CAA0BzF,OAA1B,CAAkC,UAAAyH,GAAG,EAAI;AACrC,mBAAI,CAACvB,KAAL;AACA4L,yBAAa,CAACxQ,IAAd,CAAmBmG,GAAG,CAAClO,EAAvB;AACH,WAHD;AAIA,eAAK0M,mBAAL,CAAyB8L,oBAAzB,GAAgDD,aAAa,CAACnK,IAAd,EAAhD;AAEA,cAAIqK,eAAe,GAAG,EAAtB;;AACA,cAAI,KAAKnM,wBAAL,CAA8B/F,MAA9B,IAAwC,CAA5C,EAA+C;AAC3C,iBAAK+F,wBAAL,CAA8B7F,OAA9B,CAAsC,UAAAyH,GAAG,EAAI;AACzC,qBAAI,CAACvB,KAAL;AACA8L,6BAAe,CAAC1Q,IAAhB,CAAqBmG,GAAG,CAAClO,EAAzB;AACH,aAHD;AAIH,WALD,MAMK;AACD;AACAyY,2BAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAlB;AACH;;AAED,eAAK/L,mBAAL,CAAyB2B,sBAAzB,GAAkDoK,eAAe,CAACrK,IAAhB,EAAlD;AAEA,eAAKsK,gBAAL,CAAsBC,YAAtB,CAAmC,KAAKjM,mBAAxC;;AACA,cAAIuL,GAAG,IAAI,KAAX,EAAkB;AACd,qFAAaW,UAAb,CAAwB,6BAAxB,EAAuDC,SAAvD,EAAkEA,SAAlE;AACH,WAFD,MAEO,IAAIZ,GAAG,IAAI,OAAX,EAAoB;AACvB,qFAAaa,OAAb,CAAqB,2BAArB,EAAkDD,SAAlD,EAA6DA,SAA7D;AACH;AAEJ;;;eAEK,qBAAYE,WAAZ,EAAmC;;;;;;;;;AACjC9W,wB,GAAO,E;AACX,yBAAKe,iBAAL,CAAuBgW,UAAvB,CAAkC,2DAAUC,0BAA5C,EAAwExV,SAAxE,CAAkF,UAAAyK,GAAG,EAAI;AACrF,6BAAI,CAAC1E,cAAL,GAAsB,IAAtB;AACA,0BAAI0P,KAAJ;;AACA,0BAAIhL,GAAG,IAAIA,GAAG,IAAI,EAAlB,EAAsB;AAClB,4BAAIA,GAAG,IAAI,EAAX,EAAe;AACXgL,+BAAK,GAAGC,IAAI,CAACC,KAAL,CAAWlL,GAAX,CAAR;AACAjM,8BAAI,GAAGiX,KAAP;AACH;;AACD,4BAAIH,WAAJ,EAAiB;AACb9W,8BAAI,CAAC,sBAAD,CAAJ,GAA+B,OAAI,CAACwJ,oBAApC;AACAxJ,8BAAI,CAAC,SAAD,CAAJ,GAAkB,OAAI,CAACgK,mBAAvB;AACAhK,8BAAI,CAAC,WAAD,CAAJ,GAAoB,OAAI,CAACuI,SAAzB;AACAvI,8BAAI,CAAC,qBAAD,CAAJ,GAA8B,OAAI,CAACuK,mBAAnC;AACAvK,8BAAI,CAAC,aAAD,CAAJ,GAAsB,OAAI,CAAC6B,WAA3B;AACH,yBAND,MAMO;AAEH7B,8BAAI,CAAC,SAAD,CAAJ,GAAkB,OAAI,CAAC2J,eAAvB;AACA3J,8BAAI,CAAC,UAAD,CAAJ,GAAmB,OAAI,CAAC8J,oBAAxB;AACA9J,8BAAI,CAAC,UAAD,CAAJ,GAAmB,OAAI,CAAC+J,oBAAxB;AACA/J,8BAAI,CAAC,UAAD,CAAJ,GAAmB,OAAI,CAACiK,oBAAxB;AACAjK,8BAAI,CAAC,QAAD,CAAJ,GAAiB,OAAI,CAACkK,kBAAtB;AACAlK,8BAAI,CAAC,0BAAD,CAAJ,GAAmC,OAAI,CAACqK,wBAAxC;AACArK,8BAAI,CAAC,sBAAD,CAAJ,GAA+B,OAAI,CAACwJ,oBAApC;AACAxJ,8BAAI,CAAC,SAAD,CAAJ,GAAkB,OAAI,CAACgK,mBAAvB;AACAhK,8BAAI,CAAC,WAAD,CAAJ,GAAoB,OAAI,CAACuI,SAAzB;AACAvI,8BAAI,CAAC,qBAAD,CAAJ,GAA8B,OAAI,CAACuK,mBAAnC;AACAvK,8BAAI,CAAC,aAAD,CAAJ,GAAsB,OAAI,CAAC6B,WAA3B;AACH;;AACD,+BAAI,CAACd,iBAAL,CAAuBqW,eAAvB,CAAuC,2DAAUJ,0BAAjD,EAA6EE,IAAI,CAACG,SAAL,CAAerX,IAAf,CAA7E,EAAmGwB,SAAnG;AAEH;AACJ,qBA/BD;;;;;;;;;AAiCH;;;eACM,sBAAa;AAAA;;AAChB,eAAKiF,SAAL,GAAiB,IAAjB;AACA,eAAK1F,iBAAL,CAAuBgW,UAAvB,CAAkC,2DAAUC,0BAA5C,EAAwExV,SAAxE,CAAkF,UAAAyK,GAAG,EAAI;AACrF,mBAAI,CAAC1E,cAAL,GAAsB,IAAtB;;AACA,gBAAI0E,GAAJ,EAAS;AACL,qBAAI,CAACqL,UAAL,CAAgBJ,IAAI,CAACC,KAAL,CAAWlL,GAAX,CAAhB;AACH,aAFD,MAGK;AACD,qBAAI,CAACmI,eAAL;;AACA,qBAAI,CAAC7L,SAAL,GAAiB,IAAjB;AACH;;AACD,mBAAI,CAAC9B,SAAL,GAAiB,KAAjB;AACH,WAVD;AAWH;;;eAEM,oBAAWwQ,KAAX,EAAuB;AAC1B,eAAKpV,WAAL,GAAmBoV,KAAK,CAACpV,WAAN,IAAqB,EAArB,GAA0B,CAA1B,GAA8BoV,KAAK,CAACpV,WAAvD;;AACA,cAAI,KAAK2H,oBAAL,IAA6ByN,KAAK,CAAClT,oBAAvC,EAA6D;AACzD,iBAAKyF,oBAAL,GAA4ByN,KAAK,CAAClT,oBAAlC;AACH;;AACD,cAAI,KAAKwG,mBAAL,IAA4B0M,KAAK,CAAC1M,mBAAtC,EAA2D;AACvD,iBAAKA,mBAAL,GAA2B0M,KAAK,CAAC1M,mBAAjC;AACH;;AACD,cAAI,KAAKhC,SAAL,IAAkB0O,KAAK,CAAC1O,SAA5B,EAAuC;AACnC,iBAAKA,SAAL,GAAiB0O,KAAK,CAAC1O,SAAvB;AACH;;AACD,cAAI0O,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACM,OAAN,CAAcjT,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,iBAAK0F,mBAAL,GAA2BiN,KAAK,CAACM,OAAN,IAAmC,EAA9D;AACH;;AACD,cAAIN,KAAK,CAACrN,OAAN,IAAiBqN,KAAK,CAACrN,OAAN,CAActF,MAAd,GAAuB,CAA5C,EAA+C;AAC3C,iBAAKqF,eAAL,GAAuBsN,KAAK,CAACrN,OAAN,IAAmC,EAA1D,CAD2C,CAE3C;AACA;AACA;AACH;;AACD,cAAIqN,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACO,QAAN,CAAelT,MAAf,GAAwB,CAA9C,EAAiD;AAC7C,iBAAKwF,oBAAL,GAA4BmN,KAAK,CAACO,QAAN,IAAgC,EAA5D;AACH;;AACD,cAAIP,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACQ,QAAN,CAAenT,MAAf,GAAwB,CAA9C,EAAiD;AAC7C,iBAAKyF,oBAAL,GAA4BkN,KAAK,CAACQ,QAAN,IAAgC,EAA5D;AACH;;AACD,cAAIR,KAAK,CAACzJ,QAAN,IAAkByJ,KAAK,CAACzJ,QAAN,CAAelJ,MAAf,GAAwB,CAA9C,EAAiD;AAC7C,iBAAK2F,oBAAL,GAA4BgN,KAAK,CAACzJ,QAAN,IAAgC,EAA5D;AACH;;AACD,cAAIyJ,KAAK,CAACS,MAAN,IAAgBT,KAAK,CAACS,MAAN,CAAapT,MAAb,GAAsB,CAA1C,EAA6C;AACzC,iBAAK4F,kBAAL,GAA0B+M,KAAK,CAACS,MAAN,IAAkC,EAA5D;AACH;;AACD,cAAIT,KAAK,CAAC5M,wBAAN,IAAkC4M,KAAK,CAAC5M,wBAAN,CAA+B/F,MAA/B,GAAwC,CAA9E,EAAiF;AAC7E,iBAAK+F,wBAAL,GAAgC4M,KAAK,CAAC5M,wBAAN,IAAoD,EAApF;AACH;;AACD,eAAK0L,YAAL;AACA,eAAK3B,eAAL;AACH;;;eAED,qCAA4BuD,YAA5B,EAA0C;AAEtC,eAAKnN,+BAAL,GAAuCmN,YAAvC;;AACA,cAAI,KAAKpP,SAAT,EAAoB;AAChB,iBAAK0G,oBAAL;AACH;AACJ;;;;;;;uBAl3BQzI,iB,EAAiB,8J,EAAA,iJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;oEACf,yF,EAAqB,I;;;;;;;;;;;;;;;;;;;ADvBpC;;AACI;;AACI;;AACI;;AACI;;AACI;AAAA;AAAA,aAAkC,QAAlC,EAAkC;AAAA,mBAAW,IAAAoR,qBAAA,EAAX;AAAkC,WAApE;;AADJ;;AAEA;;AAA4D;;AAAyB;;AACzF;;AACA;;AACI;;AACI;AAAA;AAAA;;AADJ;;AAEA;;AAAuD;;AAA0B;;AACrF;;AAEA;;AAaJ;;AACA;;AAMA;;AACI;;AAA4I;AAAA;;AAAA;;AAAA,mBAAS,UAAT;AAAiB,WAAjB;;AAC3G;;AAAsC;;AAA2D;;AAAI;;AAAO;;AAC7I;;AAAuC;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAA8B;;AAC9C;;AA2CrD;;AACJ;;AACJ;;AACA;;AACI;;AAEA;;AAoMA;;AACI;;AACI;;AAKI;AAAA,mBAAmB,IAAAC,2BAAA,QAAnB;AAAsD,WAAtD;;AAAwD;;AAC5D;;AACJ;;AACJ;;AACJ;;AAGA;;AAuBA;;AAEA;;AAqKA;;;;;;;;AAleoB;;AAAA;;AAKA;;AAAA;;AAIW;;AAAA;;AAqBE;;AAAA,uFAAyB,WAAzB,EAAyB,SAAzB;;AACwD;;AAAA;;AACkB;;AAAA;;AAgDlG;;AAAA;;AAEoC;;AAAA;;AAoMxB;;AAAA;;AAEU;;AAAA,2GAAmC,mBAAnC,EAAmC,wBAAnC,EAAmC,gBAAnC,EAAmC,kBAAnC,EAAmC,mBAAnC,EAAmC,wBAAnC,EAAmC,oBAAnC,EAAmC,wBAAnC,EAAmC,kBAAnC,EAAmC,uBAAnC,EAAmC,sBAAnC,EAAmC,wBAAnC,EAAmC,gBAAnC,EAAmC,sBAAnC,EAAmC,kBAAnC,EAAmC,wBAAnC,EAAmC,0BAAnC,EAAmC,4BAAnC;;AAmCjB;;AAAA,4FAAyD,yBAAzD,EAAyD,eAAzD;;;;;;;;;;;sEC1SDtR,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACP7D,kBAAQ,EAAE,cADH;AAEPC,qBAAW,EAAE,2BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD,CAHJ;AAIPkV,uBAAa,EAAE,gEAAkBC;AAJ1B,S;AAMmB,Q;;;;;;;;gBACzB,uD;iBAAU,yF;;;gBACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQ+B;;AACI;;AACJ;;;;;;AAQyB;;;;;;AACc;;;;;;AAM/B;;AAAgD;;AAAC;;;;;;AACjD;;AAAgD;;AAAC;;;;;;AAGjD;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAiD;;AAAC;;;;;;AAClD;;AAAiD;;AAAC;;;;;;AAHtD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAoD;;AAAC;;;;;;AACrD;;AAAoD;;AAAC;;;;;;AAHzD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAMV;;AAAkD;;AAAC;;;;;;AACnD;;AAAkD;;AAAC;;;;;;AAMnD;;AAA+C;;AAAC;;;;;;AAChD;;AAA+C;;AAAC;;;;;;AAKhD;;AAA8D;;AAAC;;;;;;AAC/D;;AAA8D;;AAAC;;;;;;;;AAK/D;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC8B;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AACH;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEa;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAhEvD;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AAExB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAoC;;AACxC;;AACI;;AAAiB;;AACc;;AACnC;;AACA;;AAAI;;AAAwD;;AAC5D;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AAAI;;;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAgG;;AACpG;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAmE;;AACvE;;AAAI;;AAAmD;;AACvD;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;;;AAlEQ;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAAuB;;AAAA;;AACkE;;AAAA;;AAEzF;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAGD;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAML;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAEG;;AAAA,iIAAyD,UAAzD,EAAyD,IAAzD;;;;;;AA5FvC;;AACI;;AAA0D;;AAAQ;;AAAO;;AAAS;;AAClF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAoB;;AAAQ;;AAC5B;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAQ;;AAC3B;;AAAmB;;AAAwB;;AAC3C;;AAAqB;;AAAS;;AAC9B;;AAAkB;;AAAW;;AAC7B;;AAAuB;;AAAsB;;AAC7C;;AAAmB;;AAAiB;;AACpC;;AAAwB;;AAAa;;AACrC;;AAAkB;;AAAsB;;AACxC;;AAA+B;;AAAiB;;AAChD;;AAAoB;;AAAM;;AAC1B;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAAiB;;AAC7C;;AAAqB;;AAAc;;AACnC;;AAAsB;;AAAM;;AAChC;;AACJ;;AACA;;AACI;;AAGA;;AAoEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAnGwB;;AAAA,sGAA6B,WAA7B,EAA6B,sBAA7B;;AAsBQ;;AAAA;;AAGA;;AAAA;;;;;;AAyGJ;;AAEI;;AACJ;;;;;;AAQyB;;;;;;AACc;;;;;;AAM/B;;AAAgD;;AAAC;;;;;;AACjD;;AAAgD;;AAAC;;;;;;AAGjD;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAiD;;AAAC;;;;;;AAClD;;AAAiD;;AAAC;;;;;;AAHtD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAoD;;AAAC;;;;;;AACrD;;AAAoD;;AAAC;;;;;;AAHzD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAMV;;AAAkD;;AAAC;;;;;;AACnD;;AAAkD;;AAAC;;;;;;AAMnD;;AAA+C;;AAAC;;;;;;AAChD;;AAA+C;;AAAC;;;;;;AAKhD;;AAA8D;;AAAC;;;;;;AAC/D;;AAA8D;;AAAC;;;;;;;;AAK/D;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC8B;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AACH;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEa;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAhEvD;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AAExB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAoC;;AACxC;;AACI;;AAAiB;;AACc;;AACnC;;AACA;;AAAI;;AAAwD;;AAC5D;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AAAI;;;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAgG;;AACpG;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAoE;;AACxE;;AAAI;;AAAmD;;AACvD;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;;;AAlEQ;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAAuB;;AAAA;;AACkE;;AAAA;;AAEzF;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAGD;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAML;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAEG;;AAAA,mIAAyD,UAAzD,EAAyD,IAAzD;;;;;;AA7FvC;;AACI;;AAA2D;;AAAQ;;AAAS;;AAAS;;AACrF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAoB;;AAAQ;;AAC5B;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAQ;;AAC3B;;AAAmB;;AAAwB;;AAC3C;;AAAqB;;AAAU;;AAC/B;;AAAkB;;AAAa;;AAC/B;;AAAuB;;AAAsB;;AAC7C;;AAAmB;;AAAiB;;AACpC;;AAAwB;;AAAa;;AACrC;;AAAkB;;AAAsB;;AACxC;;AAA+B;;AAAiB;;AAChD;;AAAoB;;AAAM;;AAC1B;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAAiB;;AAC7C;;AAAqB;;AAAc;;AACnC;;AAAsB;;AAAM;;AAChC;;AACJ;;AACA;;AACI;;AAIA;;AAoEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AApGwB;;AAAA,wGAA+B,WAA/B,EAA+B,sBAA/B;;AAsBQ;;AAAA;;AAIA;;AAAA;;;;;;AAyGJ;;AAEI;;AACJ;;;;;;AAQyB;;;;;;AAEjB;;;;;;AAMA;;AAAgD;;AAAC;;;;;;AACjD;;AAAgD;;AAAC;;;;;;AAGjD;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAiD;;AAAC;;;;;;AAClD;;AAAiD;;AAAC;;;;;;AAHtD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAoD;;AAAC;;;;;;AACrD;;AAAoD;;AAAC;;;;;;AAHzD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAMV;;AAAkD;;AAAC;;;;;;AACnD;;AAAkD;;AAAC;;;;;;AAMnD;;AAA+C;;AAAC;;;;;;AAChD;;AAA+C;;AAAC;;;;;;AAKhD;;AAA8D;;AAAC;;;;;;AAC/D;;AAA8D;;AAAC;;;;;;;;AAK/D;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC8B;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AACH;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEa;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAjEvD;;AACI;;AAAI;;AAAmB;;AAEvB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAoC;;AACxC;;AACI;;AAAiB;;AAEjB;;AACJ;;AACA;;AAAI;;AAAwD;;AAC5D;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AAAI;;;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAgG;;AACpG;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAGA;;AACA;;AACJ;;AACA;;AAAI;;AAAoE;;AACxE;;AAAI;;AAAmD;;AACvD;;AACI;;AAGA;;AAIJ;;AACJ;;;;;;;;AAnEQ;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAAuB;;AAAA;;AAEoC;;AAAA;;AAE3D;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAGD;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAML;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AAGM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AAEG;;AAAA,mIAAyD,UAAzD,EAAyD,IAAzD;;;;;;AA9FvC;;AACI;;AAAyD;;AAAQ;;AAAQ;;AAAS;;AAClF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAoB;;AAAQ;;AAC5B;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAQ;;AAC3B;;AAAmB;;AAAwB;;AAC3C;;AAAqB;;AAAS;;AAC9B;;AAAkB;;AAAW;;AAC7B;;AAAuB;;AAAsB;;AAC7C;;AAAmB;;AAAiB;;AACpC;;AAAwB;;AAAa;;AACrC;;AAAkB;;AAAsB;;AACxC;;AAA+B;;AAAiB;;AAChD;;AAAoB;;AAAM;;AAC1B;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAAiB;;AAC7C;;AAAqB;;AAAc;;AACnC;;AAAsB;;AAAM;;AAChC;;AACJ;;AACA;;AACI;;AAIA;;AAqEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AArGwB;;AAAA,uGAA8B,WAA9B,EAA8B,sBAA9B;;AAsBQ;;AAAA;;AAIA;;AAAA;;;;;;AA4EhC;;AAC4D;;AAA0C;;;;;;AAI9G;;;;;;AA6BgD;;AAEI;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;;;;;;;;;AAKhB;;AACI;;AACI;;AAAO;;AAAQ;;AACf;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA,WAA8B,QAA9B,EAA8B;AAAA;;AAAA;;AAAA,wCACa,EADb;AACe,SAD7C;;AADJ;;AAGA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAR+B;;AAAA,8HAAiD,SAAjD,EAAiD,yBAAjD;;AAGW;;AAAA;;AAC1B;;AAAA;;;;;;;;AA1B5B;;AACI;;AACI;;AACI;;AAAI;;AAAS;;AACjB;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAa;;AACpB;;AAAQ;AAAA;;AAAA;;AAAA;AAAA,WAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA,sCACX,IADW;AACP,wCAAa,EAAb;AAAe,SAD1C;;AAEJ;;AAIJ;;AACJ;;AACJ;;AACA;;AAaA;;AACI;;AAAO;;AAAQ;;AACf;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEA;;AAAiD;;AAAO;;AAC5D;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEA;;AAAmD;;AAAS;;AAChE;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEA;;AAAkD;;AAAQ;;AAC9D;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAC2B;;AAAM;;AAC7C;;AACJ;;AACJ;;;;;;AAhD4B;;AAAA;;AAEI;;AAAA;;AAOE;;AAAA;;AAkBN;;AAAA,iGAAwB,OAAxB,EAAwB,CAAxB;;AAKA;;AAAA,iGAAwB,OAAxB,EAAwB,CAAxB;;AAKA;;AAAA,iGAAwB,OAAxB,EAAwB,CAAxB;;;;;;AAY5B;;AACI;;AACJ;;;;;;AA0DgC;;AACI;;AAAI;;AACJ;;AACA;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAe;;AACvB;;;;;;AANQ;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;AA/DxC;;AAwBI;;AACI;;AACI;;AACI;;AACI;;AAII;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAa;;AACjB;;AAAI;;AAAa;;AACjB;;AAAI;;AAAM;;AACV;;AAAI;;AAAO;;AACf;;AACJ;;AACA;;AACI;;AAQJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;AA9BgB;;AAAA;;AAeoB;;AAAA;;;;;;AAvHxC;;AACI;;AA0DA;;AAGA;;AAyEJ;;;;;;;;AAtI0D;;AAAA;;AA0DjD;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AA3EzB;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AACrD;;AAC1C;;AACA;;AACI;;AAwIJ;;AACJ;;AACJ;;AACJ;;;;;;AAxJK,0LAA6E,SAA7E,EAA6E,gGAA7E;;AAOe;;AAAA;;AAMuB;;AAAA;;;;QC9UlCC,iB;AAqCT,iCAAoBlX,iBAApB,EAAkEmX,gBAAlE,EAAsG;AAAA;;AAAlF,aAAAnX,iBAAA,GAAAA,iBAAA;AAA8C,aAAAmX,gBAAA,GAAAA,gBAAA;AAnC3D,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAC,eAAA,GAAgC,IAAI,4CAAJ,EAAhC;AACA,aAAAC,iBAAA,GAAkC,IAAI,4CAAJ,EAAlC;AACA,aAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAIA,aAAAC,MAAA,GAAS,KAAT;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,kBAAA,GAA6C,EAA7C;AACA,aAAAC,UAAA,GAAkC,qEAAoBC,MAAtD;AAMA,aAAAC,OAAA,GAAU;AAAEjR,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE,YAAzB;AAAuCmZ,iBAAK,EAAE,sBAA9C;AAAsEC,uBAAW,EAAE;AAAnF;AAAhB,SAAV;AACA,aAAAC,OAAA,GAAmB,IAAnB;AAEA,aAAAC,qBAAA,GAA6B,EAA7B;AAIP,aAAAC,WAAA,GAAc,KAAd;AAGO,aAAAC,uBAAA,GAA0C,EAA1C;AAgDP,aAAAC,cAAA,GAAiB,CACb;AAAEzZ,cAAI,EAAE,MAAR;AAAgB,uBAAa;AAA7B,SADa,EAEb;AAAEA,cAAI,EAAE,SAAR;AAAmB,uBAAa;AAAhC,SAFa,EAGb;AAAEA,cAAI,EAAE,KAAR;AAAe,uBAAa;AAA5B,SAHa,EAIb;AAAEA,cAAI,EAAE,OAAR;AAAiB,uBAAa;AAA9B,SAJa,EAKb;AAAEA,cAAI,EAAE,SAAR;AAAmB,uBAAa;AAAhC,SALa,EAMb;AAAEA,cAAI,EAAE,KAAR;AAAe,uBAAa;AAA5B,SANa,EAOb;AAAEA,cAAI,EAAE,IAAR;AAAc,uBAAa;AAA3B,SAPa,EAQb;AAAEA,cAAI,EAAE,MAAR;AAAgB,uBAAa;AAA7B,SARa,EASb;AAAEA,cAAI,EAAE,cAAR;AAAwB,uBAAa;AAArC,SATa,EAUb;AAAEA,cAAI,EAAE,iBAAR;AAA2B,uBAAa;AAAxC,SAVa,EAWb;AAAEA,cAAI,EAAE,OAAR;AAAiB,uBAAa;AAA9B,SAXa,CAAjB;AA8OA,aAAAuW,oBAAA,GAAiC,EAAjC;AA1RC;;;;eAED,oBAAW;AAAA;;AACP,eAAKiD,uBAAL,CAA6B1T,IAA7B,CAAkC,mDAAM,KAAK4T,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CC,YAAnD,EAAiEpY,SAAjE,CAA2E,UAAAgE,KAAK,EAAI;AAClH,mBAAI,CAACqU,iBAAL;;AACA,mBAAI,CAACC,YAAL;AACH,WAHiC,CAAlC,EADO,CAMP;;AACA,cAAG,KAAKJ,kBAAL,CAAwBC,GAAxB,CAA4B,yBAA5B,EAAuDnU,KAA1D,EAAgE;AAC5D,iBAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,yBAA5B,EAAuDI,QAAvD,CAAgE,KAAhE;AACA,iBAAKF,iBAAL;AACA,iBAAKC,YAAL;AACH;;AAED,eAAKE,IAAL;AACA,eAAKC,uBAAL;AACH;;;eAED,gBAAO;AACH,eAAKC,gBAAL;AACA,eAAKC,iBAAL;AACA,eAAKC,kBAAL,GAHG,CAIH;AACH;;;eACD,mCAA0B;AAAA;;AACtB,eAAKrZ,iBAAL,CAAuBsZ,kBAAvB,GAA4C7Y,SAA5C,CAAsD,UAAC8Y,GAAD,EAAgB;AAClE,mBAAI,CAAChB,qBAAL,GAA6BgB,GAAG,IAAI,EAApC;AACH,WAFD;AAGH;;;eAID,uBAAW;AACP,eAAK3B,gBAAL,CAAsBzK,WAAtB;AACA,eAAKwK,iBAAL,CAAuBxK,WAAvB;AACA,eAAKuK,eAAL,CAAqBvK,WAArB;;AACA,cAAI,KAAKsL,uBAAT,EAAkC;AAC9B,iBAAKA,uBAAL,CAA6BhV,OAA7B,CAAqC,UAAA+V,YAAY,EAAI;AACjDA,0BAAY,CAACrM,WAAb;AACH,aAFD;AAGH;AACJ;;;eAgBD,4BAAmB;AAEf,cAAIsM,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKnC,eAAL,GAAuB;AACnBoC,eAAG,EAAE,0BADc;AAEnBC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEJ;AAAjC,aAFK,EAGL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,sBAAxB;AAAgDyB,2BAAa,EAAEJ;AAA/D,aAHK,EAIL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,sBAAxB;AAAgD0B,yBAAW,EAAE,WAA7D;AAA0ED,2BAAa,EAAEJ;AAAzF,aAJK,EAKL;AAAExJ,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEJ;AAAlC,aALK,CAFU;AASnB;AACAM,sBAAU,EAAE,oBAVO;AAWnBC,sBAAU,EAAE,EAXO;AAYnBC,uBAAW,EAAE,KAZM;AAanBC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB,CAbO;AAcnBC,sBAAU,EAAE,CACR;AACIC,qBAAO,EAAE,EADb;AAEIvZ,kBAAI,EAAG;AAFX,aADQ;AAdO,WAAvB;AAsBH;;;eAED,6BAAoB;AAChB,cAAI4Y,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKjC,gBAAL,GAAwB;AACpB4C,sBAAU,EAAE,IADQ;AAEpBV,eAAG,EAAE,0BAFe;AAGpBC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEJ;AAAjC,aAFK,EAGL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,uBAAxB;AAAiDyB,2BAAa,EAAEJ;AAAhE,aAHK,EAIL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,uBAAxB;AAAiD0B,yBAAW,EAAE,WAA9D;AAA2ED,2BAAa,EAAEJ;AAA1F,aAJK,EAKL;AAAExJ,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEJ;AAAlC,aALK,CAHW;AAUpB;AACAM,sBAAU,EAAE,oBAXQ;AAYpBC,sBAAU,EAAE,EAZQ;AAapBC,uBAAW,EAAE,KAbO;AAcpBC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB,CAdQ;AAepBC,sBAAU,EAAE,CACR;AACIC,qBAAO,EAAE,EADb;AAEIvZ,kBAAI,EAAG;AAFX,aADQ;AAfQ,WAAxB;AAuBH;;;eAED,8BAAqB;AACjB,cAAI4Y,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKlC,iBAAL,GAAyB;AACrBmC,eAAG,EAAE,0BADgB;AAErBC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEJ;AAAjC,aAFK,EAGL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,wBAAxB;AAAkDyB,2BAAa,EAAEJ;AAAjE,aAHK,EAIL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,wBAAxB;AAAkD0B,yBAAW,EAAE,WAA/D;AAA4ED,2BAAa,EAAEJ;AAA3F,aAJK,EAKL;AAAExJ,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEJ;AAAlC,aALK,CAFY;AASrB;AACAM,sBAAU,EAAE,oBAVS;AAWrBC,sBAAU,EAAE,EAXS;AAYrBC,uBAAW,EAAE,KAZQ;AAarBC,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB,CAbS;AAcrBC,sBAAU,EAAE,CACR;AACIC,qBAAO,EAAE,EADb;AAEIvZ,kBAAI,EAAG;AAFX,aADQ;AAdS,WAAzB;AAuBH;;;eAED,wBAAe;AAAA;;AACX,cAAIyZ,MAAM,GAAG;AACTrX,oBAAQ,EAAE,KAAKkU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CADD;AAETgI,oBAAQ,EAAE,qEAAoBwK,IAFrB;AAGTuD,sBAAU,EAAE,KAAKrD,gBAAL,CAAsBsD,mBAAtB,CAA0C,KAAK9B,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA9F,CAHH;AAITiW,sBAAU,EAAE,KAAKvD,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAAvF,CAJH;AAKTkW,uBAAW,EAAE,iEAAgBlO,QALpB;AAMT9J,oBAAQ,EAAE,KAAKwU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDnU,KAAnF,CAND;AAOTzB,gCAAoB,EAAE,KAAK2V,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAPjE;AAQT3B,gCAAoB,EAAE,KAAKqU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDnU,KAA3F,CARb;AASTmW,4BAAgB,EAAE;AATT,WAAb;AAWA,eAAKC,iBAAL,GAAyB,IAAzB;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,eAAL,GAAuB,IAAvB;AAEA,gEAAS,CAAC,KAAK/a,iBAAL,CAAuB+Y,YAAvB,CAAoCuB,MAApC,CAAD,EACT,KAAKta,iBAAL,CAAuBoD,mBAAvB,EADS,CAAT,EAEK3C,SAFL,CAEe,UAAOmO,IAAP;AAAA,mBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB,6BAAMA,IAAI,CAAC,CAAD,CAAV;;AADuB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACNA,0BAAI,CAAC,CAAD,CAAJ,CAAQW,GAAR,CAAY,UAAA3L,CAAC,EAAI;AAC9B,4BAAIgL,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAAmB,CAAC;AAAA,iCAAIA,CAAC,CAACC,UAAF,CAAaC,MAAb,IAAuBH,CAAC,CAACG,MAAzB,IAAmCF,CAAC,CAACC,UAAF,CAAa9F,MAAb,IAAuB4F,CAAC,CAAC5F,MAA5D,IAAsE6F,CAAC,CAACC,UAAF,CAAaE,SAAb,IAA0BJ,CAAC,CAACI,SAAtG;AAAA,yBAAhB,EAAiIT,MAAjI,GAA0I,CAAzJ,EAA4J;AACxJK,2BAAC,CAACoX,kBAAF,GAAuB,IAAvB;AACH,yBAFD,MAIIpX,CAAC,CAACoX,kBAAF,GAAuB,KAAvB;AACP,uBANgB,CADM;;AAAA;AAAA;AAQE,6BAAMpM,IAAI,CAAC,CAAD,CAAV;;AARF;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,qCAQmBA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAA6J,CAAC;AAAA,+BAAIA,CAAC,CAACE,QAAF,IAAc,qEAAoBwO,QAAlC,IAA8C1O,CAAC,CAAC2O,SAAF,IAAe,IAAjE;AAAA,uBAAhB,CARnB;;AAAA;AAQvB,2BAAK7D,iBARkB;AAAA;AASC,6BAAMzI,IAAI,CAAC,CAAD,CAAV;;AATD;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,qCASkBA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAA6J,CAAC;AAAA,+BAAIA,CAAC,CAACE,QAAF,IAAc,qEAAoB0O,OAAlC,IAA6C5O,CAAC,CAAC2O,SAAF,IAAe,IAAhE;AAAA,uBAAhB,CATlB;;AAAA;AASvB,2BAAK5D,gBATkB;AAAA;AAUA,6BAAM1I,IAAI,CAAC,CAAD,CAAV;;AAVA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,qCAUiBA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAA6J,CAAC;AAAA,+BAAIA,CAAC,CAACE,QAAF,IAAc,qEAAoByL,MAAlC,IAA4C3L,CAAC,CAAC2O,SAAF,IAAe,IAA/D;AAAA,uBAAhB,CAVjB;;AAAA;AAUvB,2BAAK9D,eAVkB;AAWvB,2BAAKgE,gBAAL;AACA,2BAAKP,iBAAL,GAAyB,KAAzB;AACA,2BAAKC,gBAAL,GAAwB,KAAxB;AACA,2BAAKC,eAAL,GAAuB,KAAvB;AACA,2BAAKnD,gBAAL,CAAsBxW,IAAtB;AACA,2BAAKuW,iBAAL,CAAuBvW,IAAvB;AACA,2BAAKsW,eAAL,CAAqBtW,IAArB;;AAjBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAFf;AAsBH;;;eAED,sBAAU;AACN,eAAK2X,YAAL;AACH;;;eAED,wBAAY;AACR;AACA;AACA;AACA,eAAK+B,gBAAL,GAAwB,IAAxB;AACA,eAAKD,iBAAL,GAAyB,IAAzB;AACA,eAAKE,eAAL,GAAuB,IAAvB,CANQ,CAOR;;AAEA,eAAKM,YAAL;AACH;;;eAED,4BAAgB;AACZ,cAAI,KAAKC,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgB7X,OAAhB,CAAwB,UAAC8X,SAAD,EAAmC;AACvD,kBAAIA,SAAS,CAACC,UAAd,EAA0B;AACtBD,yBAAS,CAACC,UAAV,CAAqBC,IAArB,CAA0B,UAACD,UAAD,EAAgC;AACtDA,4BAAU,CAACE,OAAX;AAEH,iBAHD;AAIH;AACJ,aAPD;AAQH;AACJ;;;eAEM,mBAAU1W,GAAV,EAA+B;AAAA;;AAClC,eAAK2W,UAAL;AACA,eAAKC,YAAL,GAAoB5W,GAApB;AACA,eAAK+S,QAAL,GAAgB,IAAhB;AACA,eAAK/X,iBAAL,CAAuB6b,kBAAvB,CAA0C7W,GAAG,CAACE,QAA9C,EAAwDF,GAAG,CAAC8W,aAA5D,EAA2Erb,SAA3E,CAAqF,UAACmO,IAAD,EAAkC;AACnH,mBAAI,CAACoJ,kBAAL,GAA0BpJ,IAA1B;AACA,mBAAI,CAACmJ,QAAL,GAAgB,KAAhB;AACH,WAHD;AAIA,eAAKI,OAAL,CAAajR,YAAb,CAA0BC,OAA1B,GAAoC,OAApC;AACA,cAAI4U,UAAU,GAAI/W,GAAG,CAAC2R,MAAJ,IAAc,WAAhC;AACA,eAAKwB,OAAL,CAAajR,YAAb,CAA0BmR,WAA1B,GAAwC0D,UAAxC;AACA,eAAKlE,MAAL,GAAckE,UAAd,CAXkC,CAYlC;AACH;;;eACM,sBAAa;AAChB,eAAK/D,kBAAL,GAA0B,EAA1B;AACA,eAAKC,UAAL,GAAkB,qEAAoBC,MAAtC;AACA,eAAK8D,gBAAL,GAAwB,IAAxB;AACA,eAAKC,oBAAL,GAA4B,CAA5B;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAK5D,OAAL,GAAe,IAAf;AACH;;;eAEM,mBAAUtT,GAAV,EAA+B;AAClC,eAAKmX,oBAAL,GAA4BnX,GAAG,CAAC/B,QAAhC;AACA,eAAKoC,gBAAL,CAAsBC,UAAtB,CAAiCN,GAAjC;AACH;;;eACM,0BAAiB;AACpBO,yBAAe;AAClB;;;eAEM,sBAAa;AAChB,eAAK4S,OAAL,CAAajR,YAAb,CAA0BC,OAA1B,GAAoC,MAApC;AACA,eAAKmR,OAAL,GAAe,IAAf;AACA8D,WAAC,CAAC,iBAAD,CAAD,CAAqBC,IAArB;AACAD,WAAC,CAAC,MAAD,CAAD,CAAUE,WAAV,CAAsB,YAAtB;AACH;;;eACM,qBAAY;AACf,eAAKzE,MAAL,GAAc,CAAC,KAAKA,MAApB;AACH;;;eACM,sBAAa;AAAA;;AAChB,eAAKqE,WAAL,GAAmB,EAAnB;AACA,eAAK5D,OAAL,GAAe,IAAf;AACA,cAAIiE,OAAO,GAAG;AACVve,kBAAM,EAAE,KAAK4d,YAAL,CAAkB5d,MADhB;AAEV+F,kBAAM,EAAE,KAAK6X,YAAL,CAAkB7X,MAFhB;AAGVC,qBAAS,EAAE,KAAK4X,YAAL,CAAkB5X,SAHnB;AAIVgY,4BAAgB,EAAE,KAAKC,oBAAL,IAA6B,CAA7B,GAAiC,KAAKD,gBAAtC,GAAyD,CAJjE;AAKVC,gCAAoB,EAAE,KAAKA,oBALjB;AAMV5X,iBAAK,EAAE,KAAKuX,YAAL,CAAkB1W,QANf;AAOVsX,sBAAU,EAAE,KAAKZ,YAAL,CAAkBE,aAPpB;AAQVrP,oBAAQ,EAAE,KAAKwL;AARL,WAAd;;AAUA,cAAI,KAAKgE,oBAAL,IAA6B,CAA7B,KAAmC,KAAKD,gBAAL,IAAyB,IAAzB,IAAiC,KAAKA,gBAAL,IAAyB,CAA1D,IAA+D,KAAKA,gBAAL,GAAwB,OAA1H,CAAJ,EAAwI;AACpI,iBAAKE,WAAL,GAAmB,4BAAnB;AAAiD,iBAAK5D,OAAL,GAAe,KAAf;AACpD,WAFD,MAGK,IAAI,KAAK2D,oBAAL,IAA6B,CAA7B,IAAkC,KAAKL,YAAL,CAAkBa,eAApD,IAAuE,KAAKb,YAAL,CAAkBa,eAAlB,GAAoC,CAA3G,IAAgH,KAAKT,gBAAL,GAAwB,KAAKJ,YAAL,CAAkBa,eAA9J,EAA+K;AAChL,iBAAKP,WAAL,GAAmB,kCAAkC,KAAKN,YAAL,CAAkBa,eAApD,GAAsE,GAAzF;AAA8F,iBAAKnE,OAAL,GAAe,KAAf;AACjG,WAFI,MAGA;AACD,iBAAKP,QAAL,GAAgB,IAAhB;AACA,iBAAK/X,iBAAL,CAAuB0c,wBAAvB,CAAgDH,OAAhD,EAAyD9b,SAAzD,CAAmE,UAACkc,QAAD,EAAc;AAC7E,kBAAIA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAAChO,UAAT,IAAuB,CAA/C,EAAkD;AAC9C,kFAAaiH,UAAb,CAAwB+G,QAAQ,CAACC,aAAjC,EAAgD/G,SAAhD,EAA2DA,SAA3D;;AACA,uBAAI,CAACgH,UAAL;AAEH,eAJD,MAIO;AACH,kFAAaC,QAAb,CAAsBH,QAAQ,CAACC,aAA/B,EAA8C/G,SAA9C,EAAyDA,SAAzD;AACH;;AACD,qBAAI,CAACkC,QAAL,GAAgB,KAAhB;AACH,aATD;AAUH;AACJ;;;eAGD,6BAAoB;AAAA;;AAChB,eAAKvC,oBAAL,GAA4B,EAA5B;AACA,cAAIuH,kBAAkB,GAAG,KAAKpE,kBAAL,CAAwBC,GAAxB,CAA4B,oBAA5B,EAAkDnU,KAA3E;AACAsY,4BAAkB,CAACtZ,OAAnB,CAA2B,UAAAyH,GAAG,EAAI;AAAE,mBAAI,CAACsK,oBAAL,CAA0BzQ,IAA1B,CAA+BmG,GAAG,CAAClO,EAAnC;AAAwC,WAA5E;AACH;;;;;;;uBArUQka,iB,EAAiB,6J,EAAA,+J;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;oEAgCf,+F,EAAgB,I;;oEAHb,qE,EAAkB,I;;;;;;;;;;;;;;;;;;AD9CpC;;AACI;;AACI;;AA4GA;;AA6GA;;AA8GA;;AAEJ;;AACJ;;AAEA;;AAGA;;AA2JA;;AACI;;AAAyC;AAAA,mBAAa,IAAA1R,cAAA,EAAb;AAA6B,WAA7B;;AACmC;;AAChF;;;;;;AA7ea;;AAAA;;AA4GA;;AAAA;;AA6GA;;AAAA;;AA8GA;;AAAA;;AAKC;;AAAA,4FAAkD,yBAAlD,EAAkD,WAAlD;;AA+JI;;AAAA,8FAA0B,aAA1B,EAA0B,IAA1B,EAA0B,kBAA1B,EAA0B,wBAA1B,EAA0B,qBAA1B,EAA0B,KAA1B;;;;;;;;;;sEC5dL0R,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACPtV,kBAAQ,EAAE,eADH;AAEPC,qBAAW,EAAE,4BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKmB,Q;;;;;;;;gBA6BzB,0D;iBAAa,qE;;;gBAGb,uD;iBAAU,+F;;;gBACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB+B;;AACI;;AACJ;;;;;;AAOyB;;;;;;AAEQ;;;;;;AAKzB;;AAAgD;;AAAC;;;;;;AACjD;;AAAgD;;AAAC;;;;;;AAGjD;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAiD;;AAAC;;;;;;AAClD;;AAAiD;;AAAC;;;;;;AAHtD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AAGI;;AAAoD;;AAAC;;;;;;AACrD;;AAAoD;;AAAC;;;;;;AAHzD;;AACI;;AACA;;AACA;;AACJ;;;;;;AAHI;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AAAkD;;AAAC;;;;;;AACnD;;AAAkD;;AAAC;;;;;;AAInD;;AAA+C;;AAAC;;;;;;AAChD;;AAA+C;;AAAC;;;;;;AAGhD;;AAA8D;;AAAC;;;;;;AAC/D;;AAA8D;;AAAC;;;;;;;;AAM/D;;AAA6D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2E;;AAAc;;;;;;AAAd;;AAAA;;;;;;;;AACzG;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsF;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAtDhI;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAoC;;AACxC;;AACI;;AAAiB;;AAEQ;;AAC7B;;AACA;;AAAI;;AAAwD;;AAC5D;;AACI;;AACA;;AACA;;AACJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AACI;;AAGA;;AAKJ;;AACA;;AAAI;;;;AACA;;AACA;;AACJ;;AACA;;AAAI;;AAAgG;;AACpG;;AAAI;;AACA;;AACA;;AACJ;;AACA;;AAAI;;AACA;;AACA;;AACJ;;AACA;;AAAI;;AAAoE;;AAExE;;AAAI;;AAAmD;;AACvD;;AACI;;AACA;;AACJ;;AAEJ;;;;;;;;;;AAxDQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AAAuB;;AAAA;;AAE6D;;AAAA;;AAEpF;;AAAA;;AAEA;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AAGD;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAGA;;AAAA;;AAML;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACA;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AAEN;;AAAA;;AAEA;;AAAA;;AAEG;;AAAA,iIAAyD,UAAzD,EAAyD,IAAzD;;;;;;AAe/C;;;;;;AA6BgD;;AACI;;AACJ;;;;;;AAFqD;;AACjD;;AAAA;;;;;;;;;;;;;;AAKhB;;AACI;;AACI;;AAAO;;AAAQ;;AACf;;AACI;;AAEO;AAAA;;AAAA;;AAAA;AAAA,WAA8B,QAA9B,EAA8B;AAAA;;AAAA;;AAAA,uCACR,EADQ;AACN,SADxB;;AAFP;;AAKA;;AAEI;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAVmB;;AAAA,6HAAiD,SAAjD,EAAiD,wBAAjD;;AAKF;;AAAA;;AACD;;AAAA;;;;;;;;AA3B5B;;AACI;;AACI;;AACI;;AAA2B;;AAAS;;AACxC;;AACA;;AACI;;AACI;;AACI;;AAAO;;AAAa;;AACpB;;AAAQ;AAAA;;AAAA;;AAAA;AAAA,WAAkC,QAAlC,EAAkC;AAAA;;AAAA;;AAAA,qCAAiD,IAAjD;AAAqD,uCAAa,EAAb;AAAe,SAAtG;;AACJ;;AAGJ;;AACJ;;AACJ;;AACA;;AAgBA;;AACI;;AAAO;;AAAQ;;AACf;;AACI;;AACI;;AACO;AAAA;;AAAA;;AAAA;AAAA;;AADP;;AAEA;;AAAiD;;AAAO;;AAC5D;;AACA;;AACI;;AACO;AAAA;;AAAA;;AAAA;AAAA;;AADP;;AAEA;;AACI;;AAEJ;;AACJ;;AACA;;AACI;;AACO;AAAA;;AAAA;;AAAA;AAAA;;AADP;;AAEA;;AACI;;AAEJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA1D4B;;AAAA;;AACI;;AAAA;;AAME;;AAAA;;AAqBH;;AAAA,gGAAwB,OAAxB,EAAwB,CAAxB;;AAKA;;AAAA,gGAAwB,OAAxB,EAAwB,CAAxB;;AAQA;;AAAA,gGAAwB,OAAxB,EAAwB,CAAxB;;;;;;AAmB/B;;AACI;;AACJ;;;;;;AAkCgC;;AACI;;AAAI;;AAAkF;;AACtF;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAe;;AACvB;;;;;;AALQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;AAtCxC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAGI;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAa;;AACjB;;AAAI;;AAAa;;AACjB;;AAAI;;AAAM;;AACV;;AAAI;;AAAO;;AACf;;AACJ;;AACA;;AACI;;AAOJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;;;;;;;AA9BiB;;AAAA;;AAemB;;AAAA;;;;;;AA1GxC;;AACI;;AAqEA;;AAGA;;AAiDJ;;;;;;;;AAzH0D;;AAAA;;AAqEjD;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAvFzB;;AAGI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAC5C;;AACJ;;AACJ;;AACA;;AACI;;AA2HJ;;AACJ;;AACJ;;AACJ;;;;;;AA5IK,yLAA6E,SAA7E,EAA6E,+FAA7E;;AAOe;;AAAA;;AAOuB;;AAAA;;;;QCxGlCkb,qB;AAuCT,qCAAoBhd,iBAApB,EAAkEC,cAAlE,EAAkG;AAAA;;AAA9E,aAAAD,iBAAA,GAAAA,iBAAA;AAA8C,aAAAC,cAAA,GAAAA,cAAA;AAtC3D,aAAA+B,iBAAA,GAAyB,EAAzB;AACP,aAAAI,SAAA,GAAY,KAAZ;AACO,aAAAyV,MAAA,GAAS,KAAT;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,QAAA,GAAW,KAAX;AACA,aAAAC,kBAAA,GAA6C,EAA7C;AACA,aAAAC,UAAA,GAAkC,qEAAoBC,MAAtD;AAIA,aAAA+E,SAAA,GAA0B,IAAI,4CAAJ,EAA1B;AACA,aAAAC,SAAA,GAAiB,EAAjB;AACP,aAAA1H,oBAAA,GAA4B,EAA5B;AAKO,aAAA2C,OAAA,GAAU;AAAEjR,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE,YAAzB;AAAuCmZ,iBAAK,EAAE,sBAA9C;AAAsEC,uBAAW,EAAE;AAAnF;AAAhB,SAAV;AACA,aAAAC,OAAA,GAAmB,IAAnB;AAEA,aAAA6E,YAAA,GAAwB,KAAxB;AACA,aAAA5E,qBAAA,GAA6B,EAA7B;AACS,aAAA/R,cAAA,GAA0B,KAA1B;AACA,aAAA4W,iBAAA,GAAoB,EAApB;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAAzU,eAAA,GAAkB,EAAlB;AACA,aAAAmU,kBAAA,GAAqB,EAArB;AACA,aAAAO,gBAAA,GAAmB,EAAnB;AACA,aAAAta,oBAAA,GAAgC,KAAhC;AACA,aAAAua,cAAA,GAAiB,EAAjB;AACA,aAAA3C,gBAAA,GAA4B,KAA5B;AACP,aAAAtR,wBAAA,GAA2B,EAA3B;AACC,aAAAkU,eAAA,GAAuC,IAAI,0DAAJ,EAAvC;AAOT;;;;eAED,oBAAW;AACP,eAAKC,cAAL;AACA,eAAKvE,uBAAL,GAFO,CAGP;AAEH;;;eAED,qBAAYwE,MAAZ,EAAmC;AAC/B,cAAIC,YAAY,GAAG,KAAnB,CAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAID,MAAM,CAAC1a,oBAAP,IAA+B0a,MAAM,CAAC1a,oBAAP,CAA4B4a,YAA5B,IAA4CF,MAAM,CAAC1a,oBAAP,CAA4B6a,aAA3G,EAA0H;AACtH,iBAAK7a,oBAAL,GAA4B0a,MAAM,CAAC1a,oBAAP,CAA4B4a,YAAxD;AACAD,wBAAY,GAAG,IAAf;AACH;;AACD,cAAID,MAAM,CAACJ,gBAAP,IAA2BI,MAAM,CAACJ,gBAAP,CAAwBM,YAAvD,EAAqE;AACjE,iBAAKN,gBAAL,GAAwBI,MAAM,CAACJ,gBAAP,CAAwBM,YAAhD;AACA,gBAAI3S,GAAG,GAAG,EAAV;AACA,iBAAK6S,kBAAL,GAA0B,EAA1B;AACA,iBAAKR,gBAAL,CAAsB7Z,OAAtB,CAA8B,UAAAyH,GAAG,EAAI;AAAED,iBAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,aAAzD;AACA,iBAAK8gB,kBAAL,GAA0B7S,GAAG,CAACG,IAAJ,EAA1B;;AACA,gBAAIsS,MAAM,CAACJ,gBAAP,CAAwBO,aAA5B,EAA2C;AACvC,kBAAIE,WAAW,GAAG,EAAlB;AACAL,oBAAM,CAACJ,gBAAP,CAAwBO,aAAxB,CAAsCpa,OAAtC,CAA8C,UAAAyH,GAAG,EAAI;AAAE6S,2BAAW,CAAChZ,IAAZ,CAAiBmG,GAAG,CAAClO,EAArB;AAA0B,eAAjF;AACA,kBAAIghB,kBAAkB,GAAGD,WAAW,CAAC3S,IAAZ,EAAzB;;AACA,kBAAI,KAAK0S,kBAAL,IAA2BE,kBAA/B,EAAmD;AAC/CL,4BAAY,GAAG,IAAf;AACH;AACJ,aAPD,MAOO;AACHA,0BAAY,GAAG,IAAf;AACH;AACJ,WA5E8B,CA6E/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAID,MAAM,CAAC9C,gBAAP,IAA2B8C,MAAM,CAAC9C,gBAAP,CAAwBgD,YAAxB,IAAwCF,MAAM,CAAC9C,gBAAP,CAAwBiD,aAA/F,EAA8G;AAC1G,iBAAKjD,gBAAL,GAAwB8C,MAAM,CAAC9C,gBAAP,CAAwBgD,YAAhD;AACAD,wBAAY,GAAG,IAAf;AACH;;AACD,cAAI,CAACA,YAAY,IAAI,CAAC,KAAKR,YAAvB,KAAwC,KAAK3W,cAAjD,EAAiE;AAC7D,iBAAK2W,YAAL,GAAoB,IAApB;AACA,iBAAKpE,YAAL;AACH;AACJ;;;eAGD,uBAAW;AACP,cAAG,KAAKkE,SAAR,EACA,KAAKA,SAAL,CAAe9P,WAAf;AACH,S,CACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;eAEA,mCAA0B;AAAA;;AACtB,eAAKnN,iBAAL,CAAuBsZ,kBAAvB,GAA4C7Y,SAA5C,CAAsD,UAAC8Y,GAAD,EAAgB;AAClE,mBAAI,CAAChB,qBAAL,GAA6BgB,GAAG,IAAI,EAApC;AACH,WAFD;AAGH;;;eAED,0BAAiB;AACb,cAAIE,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKwD,SAAL,GAAiB;AACbvD,eAAG,EAAE,0BADQ;AAEbC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEJ;AAAjC,aAFK,EAGL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,eAAxB;AAAyCyB,2BAAa,EAAEJ;AAAxD,aAHK,EAIL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,eAAxB;AAAyC0B,yBAAW,EAAE,WAAtD;AAAmED,2BAAa,EAAEJ;AAAlF,aAJK,EAKL;AAAExJ,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEJ;AAAlC,aALK,CAFI;AAUbM,sBAAU,EAAE,oBAVC;AAWbC,sBAAU,EAAE,EAXC;AAYbE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB,CAZC;AAabD,uBAAW,EAAE,KAbA;AAcbE,sBAAU,EAAE,CACR;AACIC,qBAAO,EAAE,EADb;AAEIvZ,kBAAI,EAAG;AAFX,aADQ;AAdC,WAAjB;AAsBH;;;eAGM,wBAAe;AAAA;;AAClB,cAAIyZ,MAAM,GAAG;AACTrX,oBAAQ,EAAE,KAAKC,gBADN;AAETuJ,oBAAQ,EAAE,KAAK+I,oBAFN;AAGTgF,sBAAU,EAAE,KAAK3X,kBAHR;AAIT6X,sBAAU,EAAE,KAAKtW,kBAJR;AAKTuW,uBAAW,EAAE,iEAAgBjE,QALpB;AAMT/T,oBAAQ,EAAE,KAAKmb,kBANN;AAOT9a,gCAAoB,EAAE,KAAKA,oBAPlB;AAQT4X,4BAAgB,EAAE,KAAKA,gBARd;AAST9X,gCAAoB,EAAE,KAAKuI;AATlB,WAAb;AAWA,eAAKjJ,SAAL,GAAiB,IAAjB;AACA,gEAAS,CAAC,KAAKpC,iBAAL,CAAuB+Y,YAAvB,CAAoCuB,MAApC,CAAD,EACT,KAAKta,iBAAL,CAAuBoD,mBAAvB,EADS,CAAT,EAEK3C,SAFL,CAEe,UAAOmO,IAAP;AAAA,mBAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB,6BAAMA,IAAI,CAAC,CAAD,CAAV;;AADuB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACNA,0BAAI,CAAC,CAAD,CAAJ,CAAQW,GAAR,CAAY,UAAA3L,CAAC,EAAI;AAC9B,4BAAIgL,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAAmB,CAAC;AAAA,iCAAIA,CAAC,CAACC,UAAF,CAAaC,MAAb,IAAuBH,CAAC,CAACG,MAAzB,IAAmCF,CAAC,CAACC,UAAF,CAAa9F,MAAb,IAAuB4F,CAAC,CAAC5F,MAA5D,IAAsE6F,CAAC,CAACC,UAAF,CAAaE,SAAb,IAA0BJ,CAAC,CAACI,SAAtG;AAAA,yBAAhB,EAAiIT,MAAjI,GAA0I,CAAzJ,EAA4J;AACxJK,2BAAC,CAACoX,kBAAF,GAAuB,IAAvB;AACH,yBAFD,MAIIpX,CAAC,CAACoX,kBAAF,GAAuB,KAAvB;AACP,uBANgB,CADM;;AAAA;AAQvB,0BAAI,KAAKuC,cAAL,IAAuB,KAAKA,cAAL,CAAoBha,MAA3C,IAAqDqL,IAAI,CAAC,CAAD,CAA7D,EAAkE;AAC9DA,4BAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQlM,MAAR,CAAe,UAAA6J,CAAC;AAAA,iCAAI,OAAI,CAAC+I,gBAAL,CAAsBf,QAAtB,CAA+BhI,CAAC,CAACoK,MAAjC,CAAJ;AAAA,yBAAhB,CAAV;AACH;;AACD,2BAAK3U,iBAAL,GAAyB4M,IAAI,CAAC,CAAD,CAA7B;AACA,2BAAKqP,mBAAL;AACA,2BAAK7b,SAAL,GAAiB,KAAjB;AACA,2BAAK8b,iBAAL;;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB;AAAA,WAFf,EAbkB,CAgClB;AACA;AACA;AACA;AACA;AACH;;;eAEO,6BAAiB;AACrB,cAAI,KAAKC,gBAAL,CAAsB3C,UAA1B,EAAsC;AAClC,iBAAK2C,gBAAL,CAAsB3C,UAAtB,CAAiCC,IAAjC,CAAsC,UAACD,UAAD,EAAgC;AAAEA,wBAAU,CAACE,OAAX;AAAuB,aAA/F;AACH;;AACD,eAAKuB,SAAL,CAAe7b,IAAf;AACH;;;eAEM,mBAAU4D,GAAV,EAA+B;AAAA;;AAClC,eAAK2W,UAAL;AACA,eAAKC,YAAL,GAAoB5W,GAApB;AACA,eAAK+S,QAAL,GAAgB,IAAhB;AACA,eAAK/X,iBAAL,CAAuB6b,kBAAvB,CAA0C7W,GAAG,CAACE,QAA9C,EAAwDF,GAAG,CAAC8W,aAA5D,EAA2Erb,SAA3E,CAAqF,UAACmO,IAAD,EAAkC;AACnH,mBAAI,CAACoJ,kBAAL,GAA0BpJ,IAA1B;AACA,mBAAI,CAACmJ,QAAL,GAAgB,KAAhB;AACH,WAHD;AAIA,eAAKI,OAAL,CAAajR,YAAb,CAA0BC,OAA1B,GAAoC,OAApC;AACA,cAAI4U,UAAU,GAAI/W,GAAG,CAAC2R,MAAJ,IAAc,WAAhC;AACA,eAAKwB,OAAL,CAAajR,YAAb,CAA0BmR,WAA1B,GAAwC0D,UAAxC;AACA,eAAKlE,MAAL,GAAckE,UAAd,CAXkC,CAYlC;AACH;;;eACM,sBAAa;AAChB,eAAK/D,kBAAL,GAA0B,EAA1B;AACA,eAAKC,UAAL,GAAkB,qEAAoBC,MAAtC;AACA,eAAK8D,gBAAL,GAAwB,IAAxB;AACA,eAAKC,oBAAL,GAA4B,CAA5B;AACA,eAAKC,WAAL,GAAmB,EAAnB;AACA,eAAK5D,OAAL,GAAe,IAAf;AACH;;;eAEM,sBAAa;AAChB,eAAKH,OAAL,CAAajR,YAAb,CAA0BC,OAA1B,GAAoC,MAApC;AACA,eAAKmR,OAAL,GAAe,IAAf;AACA8D,WAAC,CAAC,iBAAD,CAAD,CAAqBC,IAArB;AACAD,WAAC,CAAC,MAAD,CAAD,CAAUE,WAAV,CAAsB,YAAtB;AACH;;;eAEM,qBAAY;AACf,eAAKzE,MAAL,GAAc,CAAC,KAAKA,MAApB;AACH;;;eAEM,sBAAa;AAAA;;AAChB,eAAKqE,WAAL,GAAmB,EAAnB;AACA,eAAK5D,OAAL,GAAe,IAAf;AACA,cAAIiE,OAAO,GAAG;AACVve,kBAAM,EAAE,KAAK4d,YAAL,CAAkB5d,MADhB;AAEV+F,kBAAM,EAAE,KAAK6X,YAAL,CAAkB7X,MAFhB;AAGVC,qBAAS,EAAE,KAAK4X,YAAL,CAAkB5X,SAHnB;AAIVgY,4BAAgB,EAAE,KAAKC,oBAAL,IAA6B,CAA7B,GAAiC,KAAKD,gBAAtC,GAAyD,CAJjE;AAKVC,gCAAoB,EAAE,KAAKA,oBALjB;AAMV5X,iBAAK,EAAE,KAAKuX,YAAL,CAAkB1W,QANf;AAOVsX,sBAAU,EAAE,KAAKZ,YAAL,CAAkBE,aAPpB;AAQVrP,oBAAQ,EAAE,KAAKwL;AARL,WAAd;;AAUA,cAAI,KAAKgE,oBAAL,IAA6B,CAA7B,KAAmC,EAAE,KAAKD,gBAAL,GAAwB,CAA1B,KAAgC,KAAKA,gBAAL,GAAwB,OAA3F,CAAJ,EAAyG;AACrG,iBAAKE,WAAL,GAAmB,4BAAnB;AAAiD,iBAAK5D,OAAL,GAAe,KAAf;AACpD,WAFD,MAGK,IAAI,KAAK2D,oBAAL,IAA6B,CAA7B,IAAkC,KAAKL,YAAL,CAAkBa,eAApD,IAAuE,KAAKb,YAAL,CAAkBa,eAAlB,GAAoC,CAA3G,IAAgH,KAAKT,gBAAL,GAAwB,KAAKJ,YAAL,CAAkBa,eAA9J,EAA+K;AAChL,iBAAKP,WAAL,GAAmB,kCAAkC,KAAKN,YAAL,CAAkBa,eAApD,GAAsE,GAAzF;AAA8F,iBAAKnE,OAAL,GAAe,KAAf;AACjG,WAFI,MAGA;AACD,iBAAKP,QAAL,GAAgB,IAAhB;AACA,iBAAK/X,iBAAL,CAAuB0c,wBAAvB,CAAgDH,OAAhD,EAAyD9b,SAAzD,CAAmE,UAACkc,QAAD,EAAc;AAC7E,kBAAIA,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAAChO,UAAT,IAAuB,CAA/C,EAAkD;AAC9C,kFAAaiH,UAAb,CAAwB+G,QAAQ,CAACC,aAAjC,EAAgD/G,SAAhD,EAA2DA,SAA3D;AACH,eAFD,MAEO;AACH,kFAAaiH,QAAb,CAAsBH,QAAQ,CAACC,aAA/B,EAA8C/G,SAA9C,EAAyDA,SAAzD;AACH;;AACD,qBAAI,CAACkC,QAAL,GAAgB,KAAhB;;AACA,qBAAI,CAAC8E,UAAL;AACH,aARD;AASH;AACJ;;;eAEM,0BAAiB;AACpBtX,yBAAe;AAClB;;;eAEM,mBAAUP,GAAV,EAA+B;AAClC,eAAKmX,oBAAL,GAA4BnX,GAAG,CAAC/B,QAAhC;AACA,eAAKoC,gBAAL,CAAsBC,UAAtB,CAAiCN,GAAjC;AACH;;;eAEM,+BAAsB;AACzB,cAAIoZ,YAAY,GAAG,EAAnB;;AACA,cAAI,KAAKpc,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuByB,OAAvB,CAA+B,UAAAyH,GAAG,EAAI;AAClC,kBAAI,CAACkT,YAAY,CAAC9R,IAAb,CAAkB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACrH,QAAF,IAAcgG,GAAG,CAAChG,QAAtB;AAAA,eAAnB,CAAL,EAAyD;AACrDkZ,4BAAY,CAACrZ,IAAb,CAAkB;AAAEG,0BAAQ,EAAEgG,GAAG,CAAChG,QAAhB;AAA0BuH,0BAAQ,EAAEvB,GAAG,CAACuB;AAAxC,iBAAlB;AACH;AACJ,aAJD;AAKA,iBAAK+Q,eAAL,CAAqBa,IAArB,CAA0BD,YAA1B;AACH,WAPD,MAOO;AACH,iBAAKZ,eAAL,CAAqBa,IAArB,CAA0BD,YAA1B;AACH;AACJ;;;eAEM,sBAAa1U,mBAAb,EAAoD;AACvD,cAAGA,mBAAH,EAAuB;AACnB,iBAAKxG,gBAAL,GAAwBwG,mBAAmB,CAACxG,gBAA5C;AACA,iBAAKL,kBAAL,GAA0B6G,mBAAmB,CAAC7G,kBAA9C;AACA,iBAAKuB,kBAAL,GAA0BsF,mBAAmB,CAACtF,kBAA9C;AACA,iBAAKkR,gBAAL,GAAwB5L,mBAAmB,CAAC4L,gBAA5C;AACA,iBAAKE,oBAAL,GAA4B9L,mBAAmB,CAAC8L,oBAAhD;AACA,iBAAKnK,sBAAL,GAA8B3B,mBAAmB,CAAC2B,sBAAlD;AACA,iBAAK0N,YAAL;AACH;AACJ;;;;;;;uBAhZQiE,qB,EAAqB,6J,EAAA,uJ;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;oEAoCnB,+F,EAAgB,I;;oEAChB,qE,EAAkB,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADtDjC;;AACI;;AACI;;AACI;;AAA0D;;AAAQ;;AAAa;;AAAS;;AACxF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAoB;;AAAQ;;AAC5B;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAQ;;AAC3B;;AAAmB;;AAAwB;;AAC3C;;AAAqB;;AAAe;;AACpC;;AAA0B;;AAAU;;AACpC;;AAAuB;;AAAsB;;AAC7C;;AAAmB;;AAAiB;;AACpC;;AAAwB;;AAAa;;AACrC;;AAAkB;;AAAsB;;AACxC;;AAA+B;;AAAiB;;AAChD;;AAAoB;;AAAM;;AAC1B;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAAiB;;AAC7C;;AAAqB;;AAAc;;AACnC;;AAAsB;;AAAM;;AAChC;;AACJ;;AACA;;AACI;;AAGA;;AA0DJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAGA;;AA+IA;;AACI;;AAAyC;AAAA,mBAAa,IAAAxX,cAAA,EAAb;AAA6B,WAA7B;;AAA6H;;AAC1K;;;;;;AAjPmC;;AAAA,+FAAuB,WAAvB,EAAuB,aAAvB;;AAsBK;;AAAA;;AAGA;;AAAA;;AAoE1B;;AAAA,4FAAkD,yBAAlD,EAAkD,WAAlD;;AAmJI;;AAAA,8FAA0B,aAA1B,EAA0B,IAA1B,EAA0B,kBAA1B,EAA0B,wBAA1B,EAA0B,qBAA1B,EAA0B,KAA1B;;;;;;;;;;sECzOLwX,qB,EAAqB;cALjC,uDAKiC;eALvB;AACPpb,kBAAQ,EAAE,mBADH;AAEPC,qBAAW,EAAE,gCAFN;AAGPC,mBAAS,EAAE,CAAC,+BAAD;AAHJ,S;AAKuB,Q;;;;;;;;gBAuB7B;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;gBAGA,uD;iBAAU,+F;;;gBACV,uD;iBAAU,qE;;;;;;;;;;;;ACtDf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0BwB;;AAEI;AAAA;;AAAA;;AAAA;AAAA,WAA8B,YAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B;;AACJ;;;;;;AAFI,wGAA+B,aAA/B,EAA+B,gBAA/B,EAA+B,MAA/B,EAA+B,kBAA/B;;;;;;AAFR;;AACI;;AAIJ;;;;;;AAJgE;;AAAA;;;;;;AALxE;;AACI;;AAC4B;;AAAc;;AAC1C;;AAQJ;;;;;;AAVyB;;AAAA,oFAAyB,WAAzB,EAAyB,SAAzB;;;;;;AAqB4C;;AAAiD;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAwD1H;;AAAmH;;AACnH;;;;;;AADwE;;;;;;AAExE;;AACI;;AAAU;;;;;;AADiE;;;;;;AA6B3E;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAIJ;;AACJ;;;;;;AAJY;;AAAA,wGAA8B,aAA9B,EAA8B,iBAA9B,EAA8B,MAA9B,EAA8B,oBAA9B;;;;;;AAKZ;;AACI;;AACI;;AAAwD;;AAAO;;AAC/D;;AAIJ;;AACJ;;;;;;AAJiC;;AAAA,0GAAgC,aAAhC,EAAgC,iBAAhC,EAAgC,MAAhC,EAAgC,sBAAhC;;;;;;;;;;;;;;AApCzC;;AACI;;AACI;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AACA;AAAA;;AAAA;;AAAA;AAAA,WAA4B,YAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B,EAA4B,aAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B,EAA4B,eAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B;;AAGA;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAIJ;;AACJ;;AACJ;;AACA;;AACI;;AASA;;AASJ;;AACA;;AACI;;AACI;;AACI;;AAAwD;;AAAsB;;AAC9E;;AAIJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA,qCAAoC,KAApC;AAAyC,SAAzC;;AAClB;;AACJ;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,+BAAsB,KAAtB;AAA2B,8BAAc,KAAd;AAAsB;AAAS,SAA1D;;AAClB;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA/D6B;;AAK8C;;AAAA,uGAA8B,aAA9B,EAA8B,eAA9B,EAA8B,MAA9B,EAA8B,cAA9B;;AAWvD;;AAAA,yGAAgC,aAAhC,EAAgC,iBAAhC,EAAgC,MAAhC,EAAgC,mBAAhC;;AAMO;;AAAA;;AACK;;AAAA;;AASL;;AAAA;;AAec;;AAAA,yGAAgC,aAAhC,EAAgC,wBAAhC,EAAgC,MAAhC,EAAgC,4BAAhC;;;;QDtIhCwc,kB;AA8BT,kCAAoBte,iBAApB,EAAkEC,cAAlE,EAA0GkX,gBAA1G,EAA8I;AAAA;;AAA1H,aAAAnX,iBAAA,GAAAA,iBAAA;AAA8C,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAkX,gBAAA,GAAAA,gBAAA;AA7BnG,aAAA3P,SAAA,GAAqB,IAArB;AACA,aAAAC,YAAA,GAAwB,KAAxB;AACA,aAAA8W,YAAA,GAAwB,KAAxB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AACA,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAA7T,mBAAA,GAA2B,EAA3B;AACA,aAAAhC,OAAA,GAAmC,EAAnC;AACA,aAAAzC,YAAA,GAAe,EAAf;AACA,aAAAmD,YAAA,GAAe,EAAf;AACA,aAAAiP,WAAA,GAAuB,IAAvB;AACA,aAAA1N,mBAAA,GAA2B,EAA3B;AACA,aAAA6T,kBAAA,GAA0B,EAA1B;AACA,aAAAC,cAAA,GAAsB,oEAAtB;AACA,aAAAlW,WAAA,GAAqB,EAArB;AAEP,aAAAW,qBAAA,GAAwB,8EAAxB;AACO,aAAAwV,WAAA,GAAsB,CAAtB;AAaH,aAAKlG,kBAAL,GAA0B,KAAKxB,gBAAL,CAAsB2H,qBAAtB,EAA1B;AACH;;;;aATD,eAA4B;AAAE,iBAAO,KAAKnG,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA3D;AAA4E;;;aAC1G,eAA4B;AAAE,iBAAO,KAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA3D;AAA4E;;;aAC1G,eAAuB;AAAE,iBAAO,KAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAtD;AAAuE;;;aAChG,eAA0B;AAAE,iBAAO,KAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,oBAA5B,EAAkDnU,KAAzD;AAA0E;;;aACtG,eAAgC;AAAE,iBAAO,KAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDnU,KAA/D;AAAgF;;;aAClH,eAAwB;AAAE,iBAAO,KAAKkU,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDnU,KAAvD;AAAwE;;;eAMlG,oBAAW;AACP,eAAKwU,IAAL;AACH;;;eAED,gBAAO;AACH,eAAKyF,iBAAL,GAAyB;AACrBrU,2BAAe,EAAE,KADI;AAErBC,mBAAO,EAAE,IAFY;AAGrBC,qBAAS,EAAE,MAHU;AAIrBC,yBAAa,EAAE,YAJM;AAKrBC,2BAAe,EAAE,cALI;AAMrBC,0BAAc,EAAE,CANK;AAOrBC,6BAAiB,EAAE,IAPE;AAQrBC,0BAAc,EAAE;AARK,WAAzB;AAUA,eAAKC,mBAAL,GAA2B;AACvBR,2BAAe,EAAE,KADM;AAEvBC,mBAAO,EAAE,WAFc;AAGvBC,qBAAS,EAAE,aAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAWA,eAAKE,mBAAL,GAA2B;AACvBT,2BAAe,EAAE,KADM;AAEvBC,mBAAO,EAAE,IAFc;AAGvBC,qBAAS,EAAE,MAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAUA,eAAK+T,kBAAL,GAA0B;AACtBtU,2BAAe,EAAE,KADK;AAEtBC,mBAAO,EAAE,IAFa;AAGtBC,qBAAS,EAAE,MAHW;AAItBC,yBAAa,EAAE,YAJO;AAKtBC,2BAAe,EAAE,cALK;AAMtBC,0BAAc,EAAE,CANM;AAOtBC,6BAAiB,EAAE,IAPG;AAQtBC,0BAAc,EAAE;AARM,WAA1B;AAUA,eAAKX,UAAL;AACA,eAAKC,WAAL;AACA,eAAK+J,UAAL;AACH;;;eACD,gCAAuB;AACnB,cAAI,KAAKxM,YAAT,EAAuB;AACnB,iBAAKA,YAAL,GAAoB,KAApB;AACH;AACJ;;;eACM,4BAAmB;AACtB,eAAKA,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACH;;;eAED,yBAAa;AACT,cAAIsX,OAAO,GAAG,KAAK5H,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CAAd;;AACA,cAAIsa,OAAJ,EACI,KAAKC,yBAAL,CAA+BD,OAA/B,EADJ,KAGI,KAAKE,gBAAL;AACP;;;eAEO,mCAA0B/b,gBAA1B,EAAoDgc,YAApD,EAA4E;AAAA;;AAEhF,eAAK1G,WAAL,GAAmB,IAAnB;AACA,eAAKvY,cAAL,CAAoBiU,oBAApB,CAAyChR,gBAAzC,EAA2D,KAAKyV,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA/G,EAAsH,KAAK0S,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDnU,KAAnF,CAAtH,EAAiNhE,SAAjN,CAA2N,UAAAkc,QAAQ,EAAI;AACnO,mBAAI,CAACnE,WAAL,GAAmB,KAAnB;AACA,mBAAI,CAACpS,YAAL,GAAoBuW,QAApB;;AACA,gBAAI5T,oBAAoB,GAAG,OAAI,CAACoW,qBAAL,CAA2Bzc,MAA3B,CAAkC,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAACnG,YAAL,CAAkB1D,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,uBAAIA,EAAE,CAACC,SAAH,IAAgBjH,CAAC,CAACiH,SAAtB;AAAA,eAA3B,EAA4DjQ,MAA5D,GAAqE,CAA5E;AAA+E,aAAxH,CAA3B;;AACA,mBAAI,CAACoV,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DjQ,oBAAoB,IAAI,EAArF;;AACA,gBAAImW,YAAJ,EACI,OAAI,CAACnL,eAAL;AACP,WAPD;AAQH;;;eAED,uBAAc;AAAA;;AACV,eAAK/T,iBAAL,CAAuB+K,sBAAvB,GAAgDtK,SAAhD,CAA0D,UAAAxB,IAAI,EAAI;AAC9D,mBAAI,CAACyJ,WAAL,GAAmBzJ,IAAnB;AACH,WAFD;AAGH;;;eACM,sBAAa;AAAA;;AAChB,eAAKe,iBAAL,CAAuBgU,oBAAvB,GAA8CvT,SAA9C,CAAwD,UAAAxB,IAAI,EAAI;AAC5D,mBAAI,CAAC4J,OAAL,GAAe5J,IAAf;;AACA,mBAAI,CAACggB,gBAAL;AACH,WAHD;AAIH;;;eAEO,4BAAmB;AACvB,eAAKD,yBAAL,CAA+B,KAAK7H,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CAA/B,EAAyH,IAAzH;AACH;;;eACO,2BAAkB;AAAA;;AAEtB,eAAK8E,YAAL,GAAoB,EAApB;AACA,eAAKnD,YAAL,CAAkB3C,OAAlB,CAA0B,UAAAyH,GAAG,EAAI;AAC7B,mBAAI,CAAC3B,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBkK,MAAlB,CAAyBvI,GAAG,CAACwI,IAA7B,CAApB;AACH,WAFD;;AAIA,cAAI1K,oBAAoB,GAAG,KAAKoW,qBAAL,CAA2B1c,MAA3B,CAAkC,UAAA6J,CAAC,EAAI;AAAE,mBAAO,OAAI,CAAChD,YAAL,CAAkB7G,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,qBAAIA,EAAE,CAAC/G,KAAH,IAAYD,CAAC,CAACC,KAAlB;AAAA,aAA3B,EAAoDjJ,MAApD,GAA6D,CAApE;AAAuE,WAAhH,CAA3B;;AACA,eAAKoV,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DhQ,oBAAoB,IAAI,EAArF;AACH;;;eAEM,4BAAmB;AAAA;;AAEtB,cAAI,KAAKmW,qBAAL,IAA8B,KAAKA,qBAAL,CAA2B5b,MAA3B,GAAoC,CAAtE,EAAyE;AACrE,iBAAK4b,qBAAL,CAA2B1b,OAA3B,CAAmC,UAAAyH,GAAG,EAAI;AAEtC,kBAAImU,KAAK,GAAG,OAAI,CAACjZ,YAAL,CAAkBkG,IAAlB,CAAuB,UAAAzI,CAAC;AAAA,uBAAIA,CAAC,CAAC2P,SAAF,IAAetI,GAAG,CAACsI,SAAvB;AAAA,eAAxB,CAAZ;;AACA,kBAAG6L,KAAK,IAAIA,KAAK,CAAC3L,IAAlB,EAAuB;AACnB,uBAAI,CAACnK,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBkK,MAAlB,CAAyB4L,KAAK,CAAC3L,IAA/B,CAApB;AACH;AACJ,aAND;;AAQA,gBAAI1K,oBAAoB,GAAG,KAAKoW,qBAAL,CAA2B1c,MAA3B,CAAkC,UAAA6J,CAAC,EAAI;AAAE,qBAAO,OAAI,CAAChD,YAAL,CAAkB7G,MAAlB,CAAyB,UAAA6Q,EAAE;AAAA,uBAAIA,EAAE,CAAC/G,KAAH,IAAYD,CAAC,CAACC,KAAlB;AAAA,eAA3B,EAAoDjJ,MAApD,GAA6D,CAApE;AAAuE,aAAhH,CAA3B;;AACA,iBAAKoV,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DhQ,oBAAoB,IAAI,EAArF;AACH,WAXD,MAYK;AACD,iBAAK+K,eAAL;AACH;AACJ;;;eAEM,2BAAkB;AACrB,eAAKiL,yBAAL,CAA+B,KAAK7H,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CAA/B,EAAyH,IAAzH;AACA,eAAKuQ,YAAL;AACA,eAAKhL,WAAL,CAAiB,IAAjB;AACH;;;eACM,iCAAwB;AAC3B,eAAK2O,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDI,QAAhD,CAAyD,EAAzD;AACA,eAAKL,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CI,QAA/C,CAAwD,EAAxD;AACA,eAAKgG,yBAAL,CAA+B,KAAK7H,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CAA/B,EAAyH,IAAzH;AACC,eAAKuQ,YAAL;AACA,eAAKhL,WAAL,CAAiB,IAAjB;AACJ;;;eAGM,qBAAY+L,WAAZ,EAAkC;AAAA;;AACrC,cAAIuJ,UAAU,GAAG,EAAjB;AACA,eAAKtf,iBAAL,CAAuBgW,UAAvB,CAAkC,oFAAUuJ,uBAA5C,EAAqE9e,SAArE,CAA+E,UAAAyK,GAAG,EAAI;AAClF,gBAAIgL,KAAJ;;AACA,gBAAIhL,GAAG,IAAIA,GAAG,IAAE,EAAhB,EAAoB;AAChB,kBAAGA,GAAG,IAAG,EAAT,EACA;AACIgL,qBAAK,GAAEC,IAAI,CAACC,KAAL,CAAWlL,GAAX,CAAP;AACAoU,0BAAU,GAAEpJ,KAAZ;AACH;;AAED,kBAAGH,WAAH,EAAe;AACXuJ,0BAAU,CAAC,sBAAD,CAAV,GAAqC,OAAI,CAAC3G,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAAzF;AACA6a,0BAAU,CAAC,kBAAD,CAAV,GAAiC,OAAI,CAACE,iBAAtC;AACH,eAHD,MAGK;AAEDF,0BAAU,CAAC,iBAAD,CAAV,GAAgC,OAAI,CAACG,gBAAL,IAAyB,EAAzD;AACAH,0BAAU,CAAC,sBAAD,CAAV,GAAqC,OAAI,CAACH,qBAAL,IAA8B,EAAnE;AACAG,0BAAU,CAAC,sBAAD,CAAV,GAAqC,OAAI,CAACF,qBAAL,IAA8B,EAAnE;AACAE,0BAAU,CAAC,oBAAD,CAAV,GAAmC,OAAI,CAACI,mBAAL,IAA4B,EAA/D;AACAJ,0BAAU,CAAC,0BAAD,CAAV,GAAyC,OAAI,CAACK,yBAAL,IAAkC,EAA3E;AACAL,0BAAU,CAAC,sBAAD,CAAV,GAAqC,OAAI,CAAC3G,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAAzF;AACA6a,0BAAU,CAAC,kBAAD,CAAV,GAAiC,OAAI,CAACE,iBAAtC;AACH;;AACD,qBAAI,CAACxf,iBAAL,CAAuBqW,eAAvB,CAAuC,oFAAUkJ,uBAAjD,EAA0EpJ,IAAI,CAACG,SAAL,CAAegJ,UAAf,CAA1E,EAAsG7e,SAAtG;AACH;AACJ,WAxBD;AAyBH;;;eAEM,sBAAa;AAAA;;AAChB,eAAKT,iBAAL,CAAuBgW,UAAvB,CAAkC,oFAAUuJ,uBAA5C,EAAqE9e,SAArE,CAA+E,UAAAyK,GAAG,EAAI;AAClF,gBAAIA,GAAG,IAAIA,GAAG,CAAC3H,MAAJ,GAAa,CAAxB,EAA2B;AACvB,qBAAI,CAACgT,UAAL,CAAgBrL,GAAhB;AACH;AACJ,WAJD;AAKH;;;eAEM,oBAAWgL,KAAX,EAAuB;AAE1B,cAAIoJ,UAAU,GAAGnJ,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAjB;AACA,eAAKyC,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DsG,UAAU,CAACtW,oBAAX,IAAmC,EAAhG;AACA,eAAK2P,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DsG,UAAU,CAACvW,oBAAX,IAAmC,EAAhG;AACA,eAAK4P,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CI,QAA/C,CAAwDsG,UAAU,CAAC1W,eAAX,IAA8B,EAAtF;AACA,eAAK+P,kBAAL,CAAwBC,GAAxB,CAA4B,oBAA5B,EAAkDI,QAAlD,CAA2DsG,UAAU,CAACvC,kBAAX,IAAiC,EAA5F;AACA,eAAKpE,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDI,QAAxD,CAAiEsG,UAAU,CAAChW,wBAAX,IAAuC,EAAxG;AACA,eAAKqP,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDI,QAAhD,CAAyDsG,UAAU,CAAChC,gBAAX,IAA+B,EAAxF;AACA,eAAK3E,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6DsG,UAAU,CAAC7W,oBAAxE;AAEA,eAAKuM,YAAL;;AAEA,cAAI,KAAKyK,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBlc,MAAtB,GAA+B,CAA5D,EAA+D;AAC3D,iBAAKqc,aAAL;AACH,WAFD,MAGK,IAAI,KAAKT,qBAAL,IAA8B,KAAKA,qBAAL,CAA2B5b,MAA3B,GAAoC,CAAtE,EAAyE;AAC1E,iBAAKsc,gBAAL;AACH;AACJ;;;eAEM,wBAAY;AACf,eAAKlH,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CI,QAA/C,CAAwD,EAAxD;AACA,eAAKL,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6D,EAA7D;AACA,eAAKL,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDI,QAApD,CAA6D,EAA7D;AACA,eAAKL,kBAAL,CAAwBC,GAAxB,CAA4B,oBAA5B,EAAkDI,QAAlD,CAA2D,EAA3D;AACA,eAAKL,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDI,QAAxD,CAAiE,EAAjE;AAEA,eAAKhE,YAAL,CAAkB,OAAlB;AACH;;;eAEM,sBAAaC,GAAb,EAA2B;AAE9B,eAAK0D,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CI,QAA7C,CAAsD,IAAtD;;AAEA,cAAI/D,GAAG,IAAI,KAAX,EAAkB;AACd,qFAAaW,UAAb,CAAwB,6BAAxB,EAAuDC,SAAvD,EAAkEA,SAAlE;AACH,WAFD,MAEO,IAAIZ,GAAG,IAAI,OAAX,EAAoB;AACvB,qFAAaa,OAAb,CAAqB,2BAArB,EAAkDD,SAAlD,EAA6DA,SAA7D;AACH;;AAED,eAAKiK,cAAL;AACH;;;eAED,0BAAiB;AACb,eAAKjB,WAAL,GAAmB,CAAnB;;AAEA,cAAI,KAAKlG,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CnU,KAA7C,IAAsD,kEAAiBsb,WAA3E,EAAwF;AAEpF,iBAAKlB,WAAL,IAAoB,KAAKY,gBAAL,CAAsBlc,MAA1C;AACA,iBAAKsb,WAAL,IAAoB,KAAKM,qBAAL,CAA2B5b,MAA/C;AACA,iBAAKsb,WAAL,IAAoB,KAAKO,qBAAL,CAA2B7b,MAA/C;AACA,iBAAKsb,WAAL,IAAoB,KAAKa,mBAAL,CAAyBnc,MAA7C;AACA,iBAAKsb,WAAL,IAAoB,KAAKc,yBAAL,CAA+Bpc,MAAnD;AACH,WAPD,MAQK,IAAI,KAAKoV,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CnU,KAA7C,IAAsD,kEAAiBub,QAA3E,EAAqF;AAEtF,iBAAKnB,WAAL,IAAoB,KAAKY,gBAAL,CAAsBlc,MAA1C;AACA,iBAAKsb,WAAL,IAAoB,KAAKM,qBAAL,CAA2B5b,MAA/C;AACA,iBAAKsb,WAAL,IAAoB,KAAKc,yBAAL,CAA+Bpc,MAAnD;AACH;AAEJ;;;eACD,8BAAqB1C,IAArB,EAA6C;AACzC,eAAK8X,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CI,QAA7C,CAAsDnY,IAAtD;AACA,eAAK8X,kBAAL,CAAwBC,GAAxB,CAA4B,yBAA5B,EAAuDI,QAAvD,CAAgE,IAAhE;AACA,eAAK8G,cAAL;AACH;;;;;;;uBArRQxB,kB,EAAkB,6J,EAAA,uJ,EAAA,+J;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,c;AAAA,s3E;AAAA;AAAA;;;ACpB/B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAEA;;AAAuB;AAAA,mBAAS,IAAA2B,oBAAA,CAAqB,CAArB,CAAT;AAAgC,WAAhC;;AAAkC;;AAAQ;;AAEjE;;AAEA;;AAAmB;AAAA,mBAAS,IAAAA,oBAAA,CAAqB,CAArB,CAAT;AAAgC,WAAhC;;AAAmC;;AAAK;;AAC/D;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAC2C;AAAA,mBAAU,IAAApJ,qBAAA,EAAV;AAAiC,WAAjC;;AAD3C;;AAEA;;AAA4D;;AAAyB;;AACzF;;AACA;;AAYJ;;AACA;;AAOA;;AACI;;AAA2I;AAAA;;AAAA;;AAAA,mBAAS,UAAT;AAAiB,WAAjB;;AAC3G;;AAAqC;;AAAuE;;AAAK;;AAAO;;AAkD5J;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AAEA;;AAEJ;;AACJ;;AAEA;;;;;;AArG6D;;AAAA,uFAAmB,OAAnB,EAAmB,CAAnB,EAAmB,SAAnB,EAAmB,sDAAnB;;AAIA;;AAAA,uFAAmB,OAAnB,EAAmB,CAAnB,EAAmB,SAAnB,EAAmB,sDAAnB;;AAMlC;;AAAA;;AAMG;;AAAA;;AAqBG;;AAAA,sFAAyB,WAAzB,EAAyB,SAAzB;;AACsD;;AAAA;;AAwDhE;;AAAA;;AAEO;;AAAA;;;;;;;;;;sEDjFjByH,kB,EAAkB;cAN9B,uDAM8B;eANpB;AACP1c,kBAAQ,EAAE,gBADH;AAEPC,qBAAW,EAAE,6BAFN;AAGPC,mBAAS,EAAE,CAAC,6BAAD,CAHJ;AAIPkV,uBAAa,EAAE,gEAAkBC;AAJ1B,S;AAMoB,Q;;;;;;;;;;;;;;;;;;AEpB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYI;;AAAoH;;AACpH;;;;;;AAD0E;;;;;;AAG1E;;AAAqK;;AACrK;;;;;;AADqF,sGAAoC,oBAApC,EAAoC,yBAApC;;;;QDN5EiJ,uB;AAGT,uCAAoBlgB,iBAApB,EAA0D;AAAA;;AAAtC,aAAAA,iBAAA,GAAAA,iBAAA;AAAyC;;;;eAC7D,oBAAW;AACP,eAAKmgB,mCAAL;AACH;;;eACM,+CAAsC;AAAA;;AACzC,eAAKngB,iBAAL,CAAuBogB,oBAAvB,GAA8C3f,SAA9C,CAAwD,UAACmO,IAAD,EAAe;AACnE,gBAAIA,IAAI,IAAIA,IAAI,CAACyR,wBAAL,IAAiC,CAA7C,EAAgD;AAC5C,qBAAI,CAAC1H,kBAAL,CAAwBC,GAAxB,CAA4B,mBAA5B,EAAiDI,QAAjD,CAA0D,IAA1D;AACH,aAFD,MAGK;AACD,qBAAI,CAACL,kBAAL,CAAwBC,GAAxB,CAA4B,mBAA5B,EAAiDI,QAAjD,CAA0D,KAA1D;AACH;AACJ,WAPD;AAQH;;;;;;;uBAhBQkH,uB,EAAuB,6J;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,oiB;AAAA;AAAA;ACTpC;;AACI;;AACI;;AACI;;AACI;;AAEA;;AAA8D;;AAAmB;;AACrF;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAGA;;AAEJ;;;;AAjBuB;;AAYJ;;AAAA;;AAGY;;AAAA;;;;;;;;;sEDNlBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACPte,kBAAQ,EAAE,sBADH;AAEPC,qBAAW,EAAE,mCAFN;AAGPC,mBAAS,EAAE,CAAC,kCAAD;AAHJ,S;AAKyB,Q;;;;;;gBAC/B;;;;;;;;;;;;AEVL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWgB;;AACI;;AACI;;AACA;;AAAuF;AAAA;;AAAA;;AAAA;AAAA;;AAAvF;;AACJ;;AACJ;;;;;;AAEA;;AAAqG;;AAAqB;;;;;;AAkE1E;;;;;;AAEA;;;;;;;;;;;;;;AAPZ;;AACI;;AACI;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAEA;;AAEA;;AAGJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAe;;AAAe;;AAClC;;AACJ;;AACJ;;;;;;;;AAlBgE;;AAAA;;AACpD;;AAAA;;AAEM;;AAAA;;AAIF;;AAAA;;AAIR;;AAAA;;AAImB;;AAAA;;;;;;;;AAzDnD;;AACI;;AACI;;AACI;;AACI;;AACI;;AAII;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACI;;;;;;AAGJ;;AACA;;AACI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACA;;AAAI;;AAAmE;;AAEvE;;AACI;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClC;;AAAe;;AAAc;;AACjC;;AACJ;;AACJ;;AACA;;AAGA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAqBJ;;AACJ;;AAUJ;;AACJ;;AACA;;AACJ;;AACJ;;;;;;AAzEqC;;AAAA;;AAEZ;;AAAA;;AAEsB,kIAAsC,eAAtC,EAAsC,8CAAtC;;AAInB;;AAAA;;AAahB;;AAAA;;AAImB;;AAAA;;AAIvB;;AAAA,wHAA4B,iBAA5B,EAA4B,qDAA5B;;AAQoB;;AAAA;;;;;;;;AA5DxC;;AAGI;;AACI;;AACI;;AACI;;AAAgB;;AAAQ;;AACxB;;AAAe;AAAA;;AAAA;;AAAA,qCAAqB,eAArB;AAAoC,SAApC;;AACX;;AAAoB;;AACxB;;AAEA;;AACI;;AACJ;;AAIJ;;AACJ;;AACA;;AACI;;;;AA+EJ;;AACJ;;AAEJ;;;;;;AAlF0B;;AAAA;;;;;;AAsHV;;AACI;;AACJ;;;;;;AASQ;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIJ;;AACI;;AAAc;;AAA2D;;AAAC;;AAC9E;;;;;;AACA;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AApBZ;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAe;;AACnB;;AACI;;AAGA;;AAGJ;;AACA;;AACI;;AAGA;;AAGJ;;AACA;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAc;;AAClB;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAmE;;AAC3E;;;;;;AA5BQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEK;;AAAA;;AAGA;;AAAA;;AAKA;;AAAA;;AAGA;;AAAA;;AAIL;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;QD3K3Bwe,iB;AAqBT,iCAAoBtgB,iBAApB,EAAkEmX,gBAAlE,EAAsG;AAAA;;AAAlF,aAAAnX,iBAAA,GAAAA,iBAAA;AAA8C,aAAAmX,gBAAA,GAAAA,gBAAA;AApB3D,aAAAnV,iBAAA,GAAyB,EAAzB;AACP,aAAAC,sBAAA,GAAyB,EAAzB;AACO,aAAAC,kBAAA,GAAiD,EAAjD;AACP,aAAAC,wBAAA,GAAuD,EAAvD;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,kBAAA,GAAqB,KAArB;AAEO,aAAA4a,SAAA,GAA0B,IAAI,4CAAJ,EAA1B;AACA,aAAAC,SAAA,GAAiB,EAAjB;AAMP,aAAA5a,UAAA,GAAa;AAAEC,aAAG,EAAE,eAAP;AAAwBC,aAAG,EAAE;AAA7B,SAAb;AAIO,aAAAiW,uBAAA,GAAyC,EAAzC;AAEkG;;;;eAEzG,oBAAW;AAAA;;AACP,cAAIgB,oBAAoB,GAAG;AAAEC,mBAAO,EAAE;AAAX,WAA3B;AACA,eAAKwD,SAAL,GAAiB;AACbvD,eAAG,EAAE,0BADQ;AAEbC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEJ;AAAjC,aAFK,EAGL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,eAAxB;AAAyCyB,2BAAa,EAAEJ;AAAxD,aAHK,EAIL;AAAExJ,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,eAAxB;AAAyC0B,yBAAW,EAAE,WAAtD;AAAmED,2BAAa,EAAEJ;AAAlF,aAJK,EAKL;AAAExJ,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEJ;AAAlC,aALK,CAFI;AAUbM,sBAAU,EAAE,oBAVC;AAWbC,sBAAU,EAAE,EAXC;AAYbE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,CAAC,CAAnB,CAAD,EAAwB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAAxB;AAZC,WAAjB;AAeA,eAAKzB,uBAAL,CAA6B1T,IAA7B,CAAkC,mDAAM,KAAK4T,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CC,YAAnD,EAAiEpY,SAAjE,CAA2E,UAAAgE,KAAK,EAAI;AAC9G,gBAAI,OAAI,CAACkU,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CnU,KAA7C,IAAsD,CAA1D,EAA6D;AACzD,qBAAI,CAAChC,oBAAL;AACH;AACR,WAJiC,CAAlC,EAjBO,CAsBP;;AACA,cAAI,KAAKkW,kBAAL,CAAwBC,GAAxB,CAA4B,eAA5B,EAA6CnU,KAA7C,IAAsD,CAA1D,EAA6D;AACzD,iBAAKhC,oBAAL;AACH;AACJ;;;eAED,uBAAW;AACP,cAAI,KAAKgW,uBAAT,EAAkC;AAC9B,iBAAKA,uBAAL,CAA6BhV,OAA7B,CAAqC,UAAA+V,YAAY,EAAI;AACjDA,0BAAY,CAACrM,WAAb;AACH,aAFD;AAGH;AACJ;;;eACD,qBAAY5K,GAAZ,EAAyB;AACrB,cAAI,KAAKD,UAAL,CAAgBC,GAAhB,IAAuBA,GAA3B,EAAgC;AAC5B,iBAAKD,UAAL,GAAkB;AAAEE,iBAAG,EAAE,CAAC,KAAKF,UAAL,CAAgBE,GAAxB;AAA6BD,iBAAG,EAAEA;AAAlC,aAAlB;AACH,WAFD,MAGK;AACD,iBAAKD,UAAL,GAAkB;AAAEE,iBAAG,EAAE,IAAP;AAAaD,iBAAG,EAAEA;AAAlB,aAAlB;AACH;AACJ;;;eAED,gCAAuB;AAAA;;AACnB,eAAKF,kBAAL,GAA0B,IAA1B;AACA,eAAKH,kBAAL,GAA0B,EAA1B;AAEA,cAAIQ,MAAM,GAA8B;AACpCC,oBAAQ,EAAE,KAAKwU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,kBAA5B,EAAgDnU,KAAnF,CAD0B;AAEpC7B,uBAAW,EAAE,KAAKuU,gBAAL,CAAsBsD,mBAAtB,CAA0C,KAAK9B,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA9F,CAFuB;AAGpC3B,gCAAoB,EAAE,KAAKqU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDnU,KAA3F,CAHc;AAIpC1B,+BAAmB,EAAE,KAAK4V,kBAAL,CAAwBC,GAAxB,CAA4B,mBAA5B,EAAiDnU,KAJlC;AAKpCzB,gCAAoB,EAAE,KAAK2V,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KALtC;AAMpCxB,oBAAQ,EAAE,KAAKkU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF;AAN0B,WAAxC;AASA,gEAAS,CAAC,KAAKzE,iBAAL,CAAuBmD,wBAAvB,CAAgDT,MAAhD,CAAD,EAA0D,KAAK1C,iBAAL,CAAuBoD,mBAAvB,EAA1D,CAAT,EAAkH3C,SAAlH,CAA4H,UAAA4C,MAAM,EAAI;AAClI,mBAAI,CAAChB,kBAAL,GAA0B,KAA1B;AACA,mBAAI,CAACH,kBAAL,GAA0BmB,MAAM,CAAC,CAAD,CAAhC;;AACA,mBAAI,CAACC,cAAL;;AACA,mBAAI,CAACpB,kBAAL,IAA2B,OAAI,CAACA,kBAAL,CAAwBqB,MAAxB,GAAiC,CAA5D,GAAgE,OAAI,CAACC,cAAL,CAAoB,OAAI,CAACtB,kBAAL,CAAwB,CAAxB,CAApB,CAAhE,GAAkH,EAAlH;;AACA,gBAAI,OAAI,CAACA,kBAAL,IAA2B,OAAI,CAACA,kBAAL,CAAwBqB,MAAxB,GAAiC,CAAhE,EAAmE;AAC/D,qBAAI,CAACrB,kBAAL,CAAwBuB,OAAxB,CAAgC,UAAAC,GAAG,EAAI;AACnCA,mBAAG,IAAIA,GAAG,CAACC,KAAX,IAAoBD,GAAG,CAACC,KAAJ,CAAUJ,MAAV,GAAmB,CAAvC,IAA4CG,GAAG,CAACC,KAAJ,CAAUF,OAAV,CAAkB,UAAAG,CAAC,EAAI;AAC/D,sBAAIP,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUX,MAAV,CAAiB,UAAAmB,CAAC;AAAA,2BAAIA,CAAC,CAACC,UAAF,CAAaC,MAAb,IAAuBH,CAAC,CAACG,MAAzB,IAAmCF,CAAC,CAACC,UAAF,CAAa9F,MAAb,IAAuB0F,GAAG,CAAC1F,MAA9D,IAAwE6F,CAAC,CAACC,UAAF,CAAaE,SAAb,IAA0BJ,CAAC,CAACI,SAAxG;AAAA,mBAAlB,EAAqIT,MAArI,GAA8I,CAA/J,EACIK,CAAC,CAACK,8BAAF,GAAmC,IAAnC,CADJ,KAGIL,CAAC,CAACK,8BAAF,GAAmC,KAAnC;AACP,iBAL2C,CAA5C;AAMH,eAPD;AAQH,aATD,MAUK;AACD,qBAAI,CAACE,cAAL,GAAsB,IAAtB;AACA,qBAAI,CAACnC,iBAAL,GAAyB,EAAzB;AACA,qBAAI,CAACC,sBAAL,GAA8B,EAA9B;AACA,qBAAI,CAACmC,kBAAL,GAA0B,GAA1B;AACH;AACJ,WArBD;AAsBH;;;eACD,wBAAeF,MAAf,EAAuB;AACnB,eAAKC,cAAL,GAAsB,IAAtB;AACA,eAAKC,kBAAL,GAA0BF,MAAM,CAACG,KAAjC;AACA,eAAKC,cAAL,GAAsBJ,MAAM,CAAClG,MAA7B;AACA,eAAKgE,iBAAL,GAAyB,EAAzB;AACA,eAAKC,sBAAL,GAA8B,EAA9B;AACA,eAAK8W,YAAL;AACH;;;eAED,oBAAW7U,MAAX,EAAmB;AACf,cAAI,KAAKjC,sBAAL,IAA+B,KAAKA,sBAAL,CAA4BsB,MAA5B,GAAqC,CAAxE,EAA2E;AACvE,iBAAKY,cAAL,GAAsBD,MAAM,CAACH,MAAP,GAAgB,GAAhB,GAAsBG,MAAM,CAACF,SAAnD;AACA,iBAAKhC,iBAAL,GAAyB,KAAKC,sBAAL,CAA4BS,MAA5B,CAAmC,UAAAmB,CAAC;AAAA,qBAAIA,CAAC,CAACE,MAAF,IAAYG,MAAM,CAACH,MAAnB,IAA6BF,CAAC,CAACG,SAAF,IAAeE,MAAM,CAACF,SAAvD;AAAA,aAApC,CAAzB;AACH,WAHD,MAMI,KAAKhC,iBAAL,GAAyB,EAAzB,CAPW,CASf;;AACH;;;eAEM,wBAAe;AAAA;;AAClB,cAAIsY,MAAM,GAAG;AACTrX,oBAAQ,EAAE,KAAKkU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,iBAA5B,EAA+CnU,KAAlF,CADD;AAETgI,oBAAQ,EAAE,qEAAoBwK,IAFrB;AAGTuD,sBAAU,EAAE,KAAKrD,gBAAL,CAAsBsD,mBAAtB,CAA0C,KAAK9B,kBAAL,CAAwBC,GAAxB,CAA4B,sBAA5B,EAAoDnU,KAA9F,CAHH;AAITiW,sBAAU,EAAE,KAAKtW,kBAJR;AAKTuW,uBAAW,EAAE,iEAAgBhX,KALpB;AAMTb,gCAAoB,EAAE,KAAKqU,gBAAL,CAAsBoD,YAAtB,CAAmC,KAAK5B,kBAAL,CAAwBC,GAAxB,CAA4B,0BAA5B,EAAwDnU,KAA3F,CANb;AAOT9B,oBAAQ,EAAE,EAPD;AAQTK,gCAAoB,EAAE,EARb;AAST4X,4BAAgB,EAAE;AATT,WAAb;AAWA,eAAKxY,SAAL,GAAiB,IAAjB;AAEA,eAAKpC,iBAAL,CAAuB+Y,YAAvB,CAAoCuB,MAApC,EAA4C7Z,SAA5C,CAAsD,UAACmO,IAAD,EAA4B;AAC9E,mBAAI,CAAC5M,iBAAL,GAAyB4M,IAAzB;AACA,mBAAI,CAAC3M,sBAAL,GAA8B2M,IAA9B;AACA,mBAAI,CAACxM,SAAL,GAAiB,KAAjB;AACA,mBAAI,CAACJ,iBAAL,IAA0B,OAAI,CAACA,iBAAL,CAAuBuN,GAAvB,CAA2B,UAAA3L,CAAC,EAAI;AACtD,kBAAI;AACA,uBAAI,CAACzB,wBAAL,IAAiC,OAAI,CAACA,wBAAL,CAA8BO,MAA9B,CAAqC,UAAAmB,CAAC;AAAA,yBAAIA,CAAC,CAAC7F,MAAF,IAAY4F,CAAC,CAAC5F,MAAlB;AAAA,iBAAtC,EAAgEuR,GAAhE,CAAoE,UAAAgR,CAAC;AAAA,yBAAIA,CAAC,CAAC5c,KAAF,CAAQ2I,IAAR,CAAa,UAAAzI,CAAC;AAAA,2BAAIA,CAAC,CAACE,MAAF,IAAYH,CAAC,CAACG,MAAd,IAAwBF,CAAC,CAACG,SAAF,IAAeJ,CAAC,CAACI,SAA7C;AAAA,mBAAd,EAAsEwc,sBAAtE,GAA+F5c,CAAC,CAAC4c,sBAArG;AAAA,iBAArE,CAAjC;AACH,eAFD,CAEE,OAAOzW,CAAP,EAAU;AACR0W,uBAAO,CAACC,GAAR,CAAY3W,CAAZ;AACH;AACJ,aANyB,CAA1B;;AAOA,mBAAI,CAACmU,iBAAL;AACH,WAZD;AAaH;;;eACO,6BAAiB;AAAA;;AACrB,cAAI,KAAKC,gBAAL,CAAsB3C,UAA1B,EAAsC;AAClC,iBAAK2C,gBAAL,CAAsB3C,UAAtB,CAAiCC,IAAjC,CAAsC,UAACD,UAAD,EAAgC;AAElEA,wBAAU,CAACE,OAAX;;AACA,qBAAI,CAACuB,SAAL,CAAe7b,IAAf;AAEH,aALD;AAMH;AAEJ;;;eACD,wBAAemD,SAAf,EAA2B;AAAA;;AACvB,eAAKpC,wBAAL,GAAgC,EAAhC;;AACA,cAAIoC,SAAS,IAAIA,SAAS,CAACC,MAAvB,IAAiCD,SAAS,CAACC,MAAV,CAAiBC,KAAlD,IAA2DF,SAAS,CAACC,MAAV,CAAiBC,KAAjB,CAAuBC,IAAvB,MAAiC,EAAhG,EAAoG;AAChG,gBAAIC,UAAU,GAAGJ,SAAS,CAACC,MAAV,CAAiBC,KAAjB,CAAuBG,WAAvB,EAAjB;AACA,iBAAK1C,kBAAL,CAAwBuB,OAAxB,CAAgC,UAAAoB,OAAO,EAAI;AACvC,kBAAIA,OAAO,CAAC8b,YAAR,CAAqB/b,WAArB,GAAmCE,OAAnC,CAA2CH,UAA3C,MAA2D,CAAC,CAAhE,EAAmE;AAC/D,uBAAI,CAACxC,wBAAL,CAA8B4C,IAA9B,CAAmCF,OAAnC;AACH;AACJ,aAJD;AAKH,WAPD,MAOO;AACH,iBAAK1C,wBAAL,GAAgC,KAAKD,kBAArC;AACH;AACJ;;;eAEM,mBAAUnF,QAAV,EAAyB;AAE5B,cAAIiI,GAAG,GAAG,KAAKhD,iBAAL,CAAuB,CAAvB,CAAV;AACA,eAAKma,oBAAL,GAA4BnX,GAAG,CAAC/B,QAAhC;AACA,cAAIgC,cAAc,GAAG,IAAI,6FAAJ,EAArB;AACAA,wBAAc,CAAChC,QAAf,GAA0B,KAAKkZ,oBAA/B;AACAlX,wBAAc,CAACjH,MAAf,GAAwBjB,QAAQ,CAACiB,MAAjC;AACAiH,wBAAc,CAAClB,MAAf,GAAwBhH,QAAQ,CAACgH,MAAjC;AACAkB,wBAAc,CAACjB,SAAf,GAA2BjH,QAAQ,CAACiH,SAApC;AACAiB,wBAAc,CAACC,QAAf,GAA0BC,QAAQ,CAACpI,QAAQ,CAACsH,KAAV,CAAlC;AACAY,wBAAc,CAACG,mBAAf,GAAqCrI,QAAQ,CAACqI,mBAA9C;AACA,eAAKC,gBAAL,CAAsBC,UAAtB,CAAiCL,cAAjC;AACH;;;eACM,0BAAiB;AACpBM,yBAAe;AAClB;;;;;;;uBAhMQ+a,iB,EAAiB,6J,EAAA,+J;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;oEAcf,qE,EAAkB,I;;oEAElB,sG,EAAgB,I;;oEANb,qE,EAAkB,I;;;;;;;;;;;;;;;;;;;AC3BpC;;AACI;;AACI;;AACI;;AAII;;AACI;;AACJ;;AAEA;;AAOA;;AACA;;AAuGJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAoB;;AAAQ;;AAC5B;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAQ;;AAC3B;;AAAqB;;AAAS;;AAC9B;;AAAkB;;AAAW;;AAC7B;;AAAuB;;AAAsB;;AAC7C;;AAAmB;;AAAiB;;AACpC;;AAAwB;;AAAa;;AACrC;;AAAkB;;AAAsB;;AACxC;;AAA+B;;AAAiB;;AAChD;;AAAoB;;AAAM;;AAC1B;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAAiB;;AAC7C;;AAAqB;;AAAc;;AAEvC;;AACJ;;AACA;;AACI;;AAGA;;AA8BJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;AAEA;;AACI;;AAAwC;AAAA,mBAAa,IAAA9a,cAAA,EAAb;AAA6B,WAA7B;;AACoC;;AAChF;;;;AApMsD;;AAAA;;AAIjC;;AAAA;;AAOA;;AAAA;;AACA;;AAAA;;AA6GO;;AAAA,oGAA4B,QAA5B,EAA4B,kBAA5B,EAA4B,QAA5B,EAA4B,kBAA5B,EAA4B,gBAA5B,EAA4B,IAA5B;;AAQa;;AAAA,+FAAuB,WAAvB,EAAuB,aAAvB;;AAqBL;;AAAA;;AAGA;;AAAA;;AAyClB;;AAAA,6FAAyB,aAAzB,EAAyB,IAAzB,EAAyB,kBAAzB,EAAyB,wBAAzB,EAAyB,qBAAzB,EAAyB,KAAzB;;;;;;;;;;sEDxLL8a,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACP1e,kBAAQ,EAAE,eADH;AAEPC,qBAAW,EAAE,4BAFN;AAGPC,mBAAS,EAAE,CAAC,2BAAD;AAHJ,S;AAKmB,Q;;;;;;;;gBAUzB,0D;iBAAa,qE;;;gBAIb,uD;iBAAU,qE;;;gBAEV,uD;iBAAU,sG;;;gBAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnCL;;AACI;;AACJ;;;;;;AAoDwC;;AAA2D;;AAAW;;;;;;;;;;;;AAvBtG;;AAEI;;AAA0D;;AAAQ;;AAAO;;AAAS;;AAClF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAqB;;AAAS;;AAC9B;;AAAoB;;AAAM;;AAC1B;;AAAqB;;AAAU;;AAC/B;;AAAqB;;AAAQ;;AAC7B;;AAAqB;;AAAM;;AAC3B;;AAAmB;;AAAQ;;AAC3B;;AAAkB;;AAAwB;;AAC1C;;AAAsB;;AAAY;;AAClC;;AAAmB;;AAAgB;;AACnC;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAM;;AAC5B;;AACJ;;AACJ;;AAgCJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7DI;;AAQ8B;;AAAA,sGAA6B,WAA7B,EAA6B,sBAA7B;;AAc2B;;AAAA;;;;;;AA+D7B;;AAA2D;;AAAW;;;;;;AAvBtG;;AAEI;;AAA2D;;AAAQ;;AAAS;;AAAS;;AACrF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAqB;;AAAS;;AAC9B;;AAAoB;;AAAM;;AAC1B;;AAAqB;;AAAU;;AAC/B;;AAAqB;;AAAQ;;AAC7B;;AAAqB;;AAAM;;AAC3B;;AAAmB;;AAAQ;;AAC3B;;AAAkB;;AAAwB;;AAC1C;;AAAsB;;AAAY;;AAClC;;AAAmB;;AAAgB;;AACnC;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAM;;AAC5B;;AACJ;;AACJ;;AAgCJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7DI;;AAQ8B;;AAAA,wGAA+B,WAA/B,EAA+B,wBAA/B;;AAc2B;;AAAA;;;;;;AA+D7B;;AAA2D;;AAAW;;;;;;AAvBtG;;AAEI;;AAAyD;;AAAQ;;AAAQ;;AAAS;;AAClF;;AACI;;AACI;;AACI;;AAEI;;AAEI;;AACI;;AACI;;AAAqB;;AAAS;;AAC9B;;AAAoB;;AAAM;;AAC1B;;AAAqB;;AAAU;;AAC/B;;AAAqB;;AAAQ;;AAC7B;;AAAqB;;AAAM;;AAC3B;;AAAmB;;AAAQ;;AAC3B;;AAAkB;;AAAwB;;AAC1C;;AAAsB;;AAAY;;AAClC;;AAAmB;;AAAgB;;AACnC;;AAAsB;;AAAI;;AAC1B;;AAAsB;;AAAM;;AAC5B;;AACJ;;AACJ;;AAgCJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA7DI;;AAQ8B;;AAAA,uGAA8B,WAA9B,EAA8B,uBAA9B;;AAc2B;;AAAA;;;;;;AA8D7C;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAqB;;AAC7B;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;QC/NnB8e,gC;AAgGT,gDAAoB5gB,iBAApB,EAAkE6gB,WAAlE,EAAoG5gB,cAApG,EAAoI;AAAA;;AAAhH,aAAAD,iBAAA,GAAAA,iBAAA;AAA8C,aAAA6gB,WAAA,GAAAA,WAAA;AAAkC,aAAA5gB,cAAA,GAAAA,cAAA;AA5F3F,aAAA6gB,eAAA,GAA2B,KAA3B;AACF,aAAAC,iBAAA,GAAoB,CAApB;AACA,aAAAC,mBAAA,GAAsB,oEAAtB;AACA,aAAAC,oBAAA,GAAuB,qEAAvB;AAEA,aAAAC,kBAAA,GAA0B,IAA1B;AACA,aAAAC,uBAAA,GAAkC,IAAlC;AAGA,aAAAxb,SAAA,GAAY,CAAZ;AACA,aAAAyb,iBAAA,GAAoB,OAApB;AACA,aAAAC,iBAAA,GAAoB,CAAC,QAArB;AACA,aAAAC,YAAA,GAAqB,mCAAM,GAAGhW,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBiW,MAAxB,EAArB;AACA,aAAAC,UAAA,GAAqB,mCAAM,GAAGtS,MAAT,CAAgB,YAAhB,CAArB;AAGC,aAAAuS,iBAAA,GAA4B,GAA5B,CA4E4H,CA5E3F;;AAClC,aAAAC,gBAAA,GAA2B,KAAKD,iBAAhC;AAEA,aAAAE,WAAA,GAAc;AAAEza,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,SAAd;AAGA,aAAAiJ,aAAA,GAAgB;AACnBC,kBAAQ,EAAE;AADS,SAAhB;AAQP,aAAAxB,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AACO,aAAA9L,OAAA,GAAkC,EAAlC;AACA,aAAA+mB,cAAA,GAAyC,EAAzC;AACA,aAAAC,QAAA,GAAmC,EAAnC;AACA,aAAAC,YAAA,GAAuC,EAAvC;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAA3K,eAAA,GAA0C,EAA1C;AACA,aAAAC,iBAAA,GAA4C,EAA5C;AACA,aAAAC,gBAAA,GAA2C,EAA3C;AACA,aAAA0K,mBAAA,GAA8C,EAA9C;AACA,aAAAC,qBAAA,GAAiD,IAAI,sGAAJ,EAAjD;AAEA,aAAApZ,OAAA,GAAmC,EAAnC;AACA,aAAAqZ,YAAA,GAAoB,EAApB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAvD,cAAA,GAAwB,oEAAxB;AACA,aAAAwD,gBAAA,GAAwB,EAAxB;AACA,aAAAtX,mBAAA,GAA2B,EAA3B;AACA,aAAA4T,iBAAA,GAAyB,EAAzB;AAGA,aAAAlJ,oBAAA,GAA4B,EAA5B;AAEA,aAAAhO,SAAA,GAAqB,IAArB;AACA,aAAAC,YAAA,GAAwB,KAAxB;AACA,aAAA8W,YAAA,GAAwB,KAAxB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AACA,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAArY,YAAA,GAAe,EAAf;AAEA,aAAApD,oBAAA,GAAgC,KAAhC;AACA,aAAA8a,kBAAA,GAA6B,EAA7B;AACA,aAAAuE,gBAAA,GAA2B,EAA3B;AACA,aAAAC,mBAAA,GAA8B,EAA9B;AACA,aAAAC,oBAAA,GAA+B,EAA/B;AACA,aAAA1f,kBAAA,GAA6B,EAA7B;AACA,aAAA2f,uBAAA,GAAkC,EAAlC;AAGA,aAAArF,YAAA,GAAwB,KAAxB;AACA,aAAA5F,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAgL,4BAAA,GAAoC,EAApC;AACA,aAAAC,4BAAA,GAA6C,IAAI,4CAAJ,EAA7C;AACA,aAAAhL,eAAA,GAAgC,IAAI,4CAAJ,EAAhC;AACA,aAAAC,iBAAA,GAAkC,IAAI,4CAAJ,EAAlC;AACA,aAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAGA,aAAAY,WAAA,GAAuB,IAAvB;AACA,aAAAmK,SAAA,GAAqB,IAArB,CAW6H,CAVpI;AACA;AACA;;AACO,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AACA,aAAA1iB,cAAA,GAA0B,KAA1B;AAIE,aAAA2iB,mBAAA,GAA+B,IAA/B;AAER;;;;eAED,oBAAW;AAAA;;AACP,eAAKC,qBAAL;AACA,eAAKC,oBAAL;AAEA,cAAIC,aAAa,GAAG;AAAEvJ,mBAAO,EAAE;AAAX,WAApB;AACA,cAAIwJ,oBAAoB,GAAG,EAA3B;AACA,cAAIC,sBAAsB,GAAG,EAA7B;AACA,cAAIC,qBAAqB,GAAG,EAA5B;;AACA,cAAI,KAAKjjB,cAAT,EAAyB;AACrB+iB,gCAAoB,GAAG,CAAC;AAAE9K,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADuB,EAEvB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFuB,EAGvB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHuB,EAIvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJuB,EAKvB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALuB,EAMvB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANuB,EAOvB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPuB,EAQvB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARuB,EASvB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATuB,EAUvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVuB,EAWvB;AAAEmZ,mBAAK,EAAE,aAAT;AAAwBiL,kBAAI,EAAE,eAA9B;AAA+CpkB,kBAAI,EAAE,eAArD;AAAsE,2BAAa;AAAnF,aAXuB,CAAvB;AAcH,WAfD,MAgBK;AACDikB,gCAAoB,GAAG,CAAC;AAAE9K,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADuB,EAEvB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFuB,EAGvB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHuB,EAIvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJuB,EAKvB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALuB,EAMvB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANuB,EAOvB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPuB,EAQvB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARuB,EASvB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATuB,EAUvB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVuB,CAAvB;AAaH;;AACD,eAAKsY,eAAL,GAAuB;AACnBwC,sBAAU,EAAE,oBADO;AAEnBC,sBAAU,EAAE,EAFO;AAGnBE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,QAAlB,CAAD,EAA8B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAA9B,CAHO;AAInBoJ,sBAAU,EAAE,IAJO;AAKnBC,sBAAU,EAAE,IALO;AAMnBtJ,uBAAW,EAAE;AACTuJ,oBAAM,EAAE,IADC;AAETC,0BAAY,EAAE;AAFL,aANM;AAUnBC,gBAAI,EAAE,cAACC,oBAAD,EAA4B9S,QAA5B,EAAyC;AAC3C,kBAAI+S,OAAO,GAAG,EAAd;;AAAkB,qBAAI,CAACC,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,CAA4ChB,OAA5C,CAAoD,UAAAuM,CAAC;AAAA,uBAAI4T,OAAO,CAAC7e,IAAR,CAAaiL,CAAC,CAAC5S,IAAf,CAAJ;AAAA,eAArD;;AAClB,kBAAI0mB,oBAAoB,GAAG,EAA3B;;AACA,qBAAI,CAACD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgD8K,GAAhD,CAAoD,UAAA3L,CAAC,EAAI;AACrD,oBAAIkgB,oBAAoB,IAAI,EAA5B,EAAgCA,oBAAoB,GAAGlgB,CAAC,CAAC5G,EAAzB,CAAhC,KACK8mB,oBAAoB,IAAI,MAAMlgB,CAAC,CAAC5G,EAAhC;AACR,eAHD;;AAIA,kBAAI+mB,SAAS,GAAG,EAAhB;;AAAoB,qBAAI,CAACF,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,CAA8ChB,OAA9C,CAAsD,UAAAuM,CAAC;AAAA,uBAAI+T,SAAS,CAAChf,IAAV,CAAeiL,CAAC,CAAChT,EAAjB,CAAJ;AAAA,eAAvD;;AAEpB,kBAAIgnB,aAAa,GAAG,EAApB;;AAAwB,qBAAI,CAACH,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,CAAsDhB,OAAtD,CAA8D,UAAAuM,CAAC;AAAA,uBAAIgU,aAAa,CAACjf,IAAd,CAAmBiL,CAAC,CAAChT,EAArB,CAAJ;AAAA,eAA/D;;AACxB,kBAAIinB,gBAAgB,GAAGD,aAAa,CAAC5Y,IAAd,EAAvB;;AACA,kBAAIkP,MAAM,GAAG;AACTrX,wBAAQ,EAAE,OAAI,CAACC,gBADN;AAETghB,sBAAM,EAAEN,OAFC;AAGTnX,wBAAQ,EAAE,qEAAoByL,MAHrB;AAITiM,wBAAQ,EAAE,OAAI,CAACN,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAJjC;AAKT2f,sBAAM,EAAE,OAAI,CAACP,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAL7B;AAMT4f,4BAAY,EAAE,OAAI,CAACC,eANV;AAOTC,2BAAW,EAAET,oBAAoB,IAAI,EAAxB,GAA6B,IAA7B,GAAoCA,oBAPxC;AAQTtJ,0BAAU,EAAE,OAAI,CAACqJ,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAR7C;AAST9B,wBAAQ,EAAEohB,SATD;AAUT/gB,oCAAoB,EAAE,OAAI,CAAC6gB,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAVzD;AAWT3B,oCAAoB,EAAEmhB;AAXb,eAAb;AAaA,kBAAIO,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcf,oBAAd,EAAoCrJ,MAApC,CAAhB;AACA,qBAAI,CAAC9B,WAAL,GAAmB,IAAnB;;AACA,qBAAI,CAACxY,iBAAL,CAAuB2kB,kBAAvB,CAA0CH,SAA1C,EAAqD/jB,SAArD,CAA+D,UAACmO,IAAD,EAA8B;AACzF,uBAAI,CAACwI,eAAL,GAAuBxI,IAAI,CAAC3P,IAA5B;AACA,uBAAI,CAACuZ,WAAL,GAAmB,KAAnB;AACA3H,wBAAQ,CAAC;AACL+T,8BAAY,EAAEhW,IAAI,CAACgW,YADd;AAELC,iCAAe,EAAEjW,IAAI,CAACiW,eAFjB;AAGL5lB,sBAAI,EAAE2P,IAAI,CAAC3P;AAHN,iBAAD,CAAR;AAKH,eARD;AASH,aA7CkB;AA8CnB0a,eAAG,EAAE,0BA9Cc;AA+CnBmL,iBAAK,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,CAAD,CA/CY;AAgDnBlL,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE,QAAV;AAAmB4J,2BAAa,EAAEoJ;AAAlC,aADK,EAEL;AAAEhT,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEoJ;AAAjC,aAFK,EAGL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,gCAAxB;AAA0DyB,2BAAa,EAAEoJ;AAAzE,aAHK,EAIL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,gCAAxB;AAA0D0B,yBAAW,EAAE,WAAvE;AAAoFD,2BAAa,EAAEoJ;AAAnG,aAJK,EAKL;AAAEhT,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEoJ;AAAlC,aALK,CAhDU;AAuDnBvJ,mBAAO,EAAEwJ;AAvDU,WAAvB;;AA0DA,cAAI,KAAK/iB,cAAT,EAAyB;AACrBgjB,kCAAsB,GAAG,CAAC;AAAE/K,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADyB,EAEzB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFyB,EAGzB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHyB,EAIzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJyB,EAKzB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALyB,EAMzB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANyB,EAOzB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPyB,EAQzB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARyB,EASzB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATyB,EAUzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVyB,EAWzB;AAAEmZ,mBAAK,EAAE,aAAT;AAAwBiL,kBAAI,EAAE,eAA9B;AAA+CpkB,kBAAI,EAAE,eAArD;AAAsE,2BAAa;AAAnF,aAXyB,CAAzB;AAaH,WAdD,MAeK;AACDkkB,kCAAsB,GAAG,CAAC;AAAE/K,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADyB,EAEzB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFyB,EAGzB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHyB,EAIzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJyB,EAKzB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALyB,EAMzB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANyB,EAOzB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPyB,EAQzB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARyB,EASzB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATyB,EAUzB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVyB,CAAzB;AAYH;;AACD,eAAKuY,iBAAL,GAAyB;AACrBuC,sBAAU,EAAE,oBADS;AAErBC,sBAAU,EAAE,EAFS;AAGrBE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,QAAlB,CAAD,EAA8B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAA9B,CAHS;AAIrBoJ,sBAAU,EAAE,IAJS;AAKrBC,sBAAU,EAAE,IALS;AAMrBtJ,uBAAW,EAAE;AACTuJ,oBAAM,EAAE,IADC;AAETC,0BAAY,EAAE;AAFL,aANQ;AAUrBC,gBAAI,EAAE,cAACC,oBAAD,EAA4B9S,QAA5B,EAAyC;AAC3C,kBAAI+S,OAAO,GAAG,EAAd;;AAAkB,qBAAI,CAACC,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,CAA4ChB,OAA5C,CAAoD,UAAAuM,CAAC;AAAA,uBAAI4T,OAAO,CAAC7e,IAAR,CAAaiL,CAAC,CAAC5S,IAAf,CAAJ;AAAA,eAArD;;AAClB,kBAAI0mB,oBAAoB,GAAG,EAA3B;;AACA,qBAAI,CAACD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgD8K,GAAhD,CAAoD,UAAA3L,CAAC,EAAI;AACrD,oBAAIkgB,oBAAoB,IAAI,EAA5B,EAAgCA,oBAAoB,GAAGlgB,CAAC,CAAC5G,EAAzB,CAAhC,KACK8mB,oBAAoB,IAAI,MAAMlgB,CAAC,CAAC5G,EAAhC;AACR,eAHD;;AAIA,kBAAI2L,kBAAkB,GAAG,EAAzB;AACA,kBAAIoc,gBAAgB,GAAG,OAAI,CAAClB,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,IAAiD,EAAxE;AACAsgB,8BAAgB,CAACxV,GAAjB,CAAqB,UAAA3L,CAAC,EAAI;AACtB,oBAAI+E,kBAAkB,IAAI,EAA1B,EAA8BA,kBAAkB,GAAG/E,CAAC,CAAC5G,EAAvB,CAA9B,KACK2L,kBAAkB,IAAI,MAAM/E,CAAC,CAAC5G,EAA9B;AACR,eAHD;AAIA,kBAAIgnB,aAAa,GAAG,EAApB;;AAAwB,qBAAI,CAACH,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,CAAsDhB,OAAtD,CAA8D,UAAAuM,CAAC;AAAA,uBAAIgU,aAAa,CAACjf,IAAd,CAAmBiL,CAAC,CAAChT,EAArB,CAAJ;AAAA,eAA/D;;AACxB,kBAAIinB,gBAAgB,GAAGD,aAAa,CAAC5Y,IAAd,EAAvB;;AACA,kBAAIkP,MAAM,GAAG;AACTrX,wBAAQ,EAAE,OAAI,CAACC,gBADN;AAETghB,sBAAM,EAAEN,OAFC;AAGTnX,wBAAQ,EAAE,qEAAoBwO,QAHrB;AAITkJ,wBAAQ,EAAE,OAAI,CAACN,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAJjC;AAKT2f,sBAAM,EAAE,OAAI,CAACP,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAL7B;AAMT4f,4BAAY,EAAE,OAAI,CAACC,eANV;AAOTC,2BAAW,EAAET,oBAAoB,IAAI,EAAxB,GAA6B,IAA7B,GAAoCA,oBAPxC;AAQTtJ,0BAAU,EAAE,OAAI,CAACqJ,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAR7C;AAST9B,wBAAQ,EAAEgG,kBATD;AAUT3F,oCAAoB,EAAE,OAAI,CAAC6gB,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAVzD;AAWT3B,oCAAoB,EAAEmhB;AAXb,eAAb;AAaA,kBAAIO,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcf,oBAAd,EAAoCrJ,MAApC,CAAhB;AACA,qBAAI,CAAC9B,WAAL,GAAmB,IAAnB;;AACA,qBAAI,CAACxY,iBAAL,CAAuB2kB,kBAAvB,CAA0CH,SAA1C,EAAqD/jB,SAArD,CAA+D,UAACmO,IAAD,EAA8B;AACzF,uBAAI,CAACyI,iBAAL,GAAyBzI,IAAI,CAAC3P,IAA9B;AACA,uBAAI,CAACuZ,WAAL,GAAmB,KAAnB;AACA3H,wBAAQ,CAAC;AACL+T,8BAAY,EAAEhW,IAAI,CAACgW,YADd;AAELC,iCAAe,EAAEjW,IAAI,CAACiW,eAFjB;AAGL5lB,sBAAI,EAAE2P,IAAI,CAAC3P;AAHN,iBAAD,CAAR;AAKH,eARD;AAUH,aAlDoB;AAmDrB0a,eAAG,EAAE,0BAnDgB;AAoDrBmL,iBAAK,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,CAAD,CApDc;AAqDrBlL,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE,QAAV;AAAoB4J,2BAAa,EAAEoJ;AAAnC,aADK,EAEL;AAAEhT,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEoJ;AAAjC,aAFK,EAGL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,kCAAxB;AAA4DyB,2BAAa,EAAEoJ;AAA3E,aAHK,EAIL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,kCAAxB;AAA4D0B,yBAAW,EAAE,WAAzE;AAAsFD,2BAAa,EAAEoJ;AAArG,aAJK,EAKL;AAAEhT,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEoJ;AAAlC,aALK,CArDY;AA4DrBvJ,mBAAO,EAAEyJ;AA5DY,WAAzB;;AA+DA,cAAI,KAAKhjB,cAAT,EAAyB;AACrBijB,iCAAqB,GAAG,CAAC;AAAEhL,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADwB,EAExB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFwB,EAGxB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHwB,EAIxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJwB,EAKxB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALwB,EAMxB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANwB,EAOxB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPwB,EAQxB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARwB,EASxB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATwB,EAUxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVwB,EAWxB;AAAEmZ,mBAAK,EAAE,aAAT;AAAwBiL,kBAAI,EAAE,eAA9B;AAA+CpkB,kBAAI,EAAE,eAArD;AAAsE,2BAAa;AAAnF,aAXwB,CAAxB;AAaH,WAdD,MAeK;AACDmkB,iCAAqB,GAAG,CAAC;AAAEhL,mBAAK,EAAE,WAAT;AAAsBiL,kBAAI,EAAE,OAA5B;AAAqCpkB,kBAAI,EAAE,OAA3C;AAAoD,2BAAa;AAAjE,aAAD,EACxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,MAAzB;AAAiCpkB,kBAAI,EAAE,MAAvC;AAA+C,2BAAa;AAA5D,aADwB,EAExB;AAAEmZ,mBAAK,EAAE,YAAT;AAAuBiL,kBAAI,EAAE,OAA7B;AAAsCpkB,kBAAI,EAAE,OAA5C;AAAqD,2BAAa;AAAlE,aAFwB,EAGxB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,OAA3B;AAAoCpkB,kBAAI,EAAE,OAA1C;AAAmD,2BAAa;AAAhE,aAHwB,EAIxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,OAAzB;AAAkCpkB,kBAAI,EAAE,OAAxC;AAAiD,2BAAa;AAA9D,aAJwB,EAKxB;AAAEmZ,mBAAK,EAAE,UAAT;AAAqBiL,kBAAI,EAAE,KAA3B;AAAkCpkB,kBAAI,EAAE,KAAxC;AAA+C,2BAAa;AAA5D,aALwB,EAMxB;AAAEmZ,mBAAK,EAAE,0BAAT;AAAqCiL,kBAAI,EAAE,IAA3C;AAAiDpkB,kBAAI,EAAE,8BAAvD;AAAuF,2BAAa;AAApG,aANwB,EAOxB;AAAEmZ,mBAAK,EAAE,cAAT;AAAyBiL,kBAAI,EAAE,QAA/B;AAAyCpkB,kBAAI,EAAE,QAA/C;AAAyD,2BAAa;AAAtE,aAPwB,EAQxB;AAAEmZ,mBAAK,EAAE,kBAAT;AAA6BiL,kBAAI,EAAE,KAAnC;AAA0CpkB,kBAAI,EAAE,KAAhD;AAAuD,2BAAa;AAApE,aARwB,EASxB;AAAEmZ,mBAAK,EAAE,MAAT;AAAiBiL,kBAAI,EAAE,QAAvB;AAAiCpkB,kBAAI,EAAE,QAAvC;AAAiD,2BAAa;AAA9D,aATwB,EAUxB;AAAEmZ,mBAAK,EAAE,QAAT;AAAmBiL,kBAAI,EAAE,QAAzB;AAAmCpkB,kBAAI,EAAE,QAAzC;AAAmD,2BAAa;AAAhE,aAVwB,CAAxB;AAYH;;AACD,eAAKwY,gBAAL,GAAwB;AACpBsC,sBAAU,EAAE,oBADQ;AAEpBC,sBAAU,EAAE,EAFQ;AAGpBE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,QAAlB,CAAD,EAA8B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAA9B,CAHQ;AAIpBoJ,sBAAU,EAAE,IAJQ;AAKpBC,sBAAU,EAAE,IALQ;AAMpBtJ,uBAAW,EAAE;AACTuJ,oBAAM,EAAE,IADC;AAETC,0BAAY,EAAE;AAFL,aANO;AAUpBC,gBAAI,EAAE,cAACC,oBAAD,EAA4B9S,QAA5B,EAAyC;AAC3C,kBAAI+S,OAAO,GAAG,EAAd;;AAAkB,qBAAI,CAACC,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,CAA4ChB,OAA5C,CAAoD,UAAAuM,CAAC;AAAA,uBAAI4T,OAAO,CAAC7e,IAAR,CAAaiL,CAAC,CAAC5S,IAAf,CAAJ;AAAA,eAArD;;AAClB,kBAAI0mB,oBAAoB,GAAG,EAA3B;;AACA,qBAAI,CAACD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgD8K,GAAhD,CAAoD,UAAA3L,CAAC,EAAI;AACrD,oBAAIkgB,oBAAoB,IAAI,EAA5B,EAAgCA,oBAAoB,GAAGlgB,CAAC,CAAC5G,EAAzB,CAAhC,KACK8mB,oBAAoB,IAAI,MAAMlgB,CAAC,CAAC5G,EAAhC;AACR,eAHD;;AAIA,kBAAI2L,kBAAkB,GAAG,EAAzB;AACA,kBAAIoc,gBAAgB,GAAG,OAAI,CAAClB,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,IAAiD,EAAxE;AACAsgB,8BAAgB,CAACxV,GAAjB,CAAqB,UAAA3L,CAAC,EAAI;AACtB,oBAAI+E,kBAAkB,IAAI,EAA1B,EAA8BA,kBAAkB,GAAG/E,CAAC,CAAC5G,EAAvB,CAA9B,KACK2L,kBAAkB,IAAI,MAAM/E,CAAC,CAAC5G,EAA9B;AACR,eAHD;AAIA,kBAAIgnB,aAAa,GAAG,EAApB;;AAAwB,qBAAI,CAACH,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,CAAsDhB,OAAtD,CAA8D,UAAAuM,CAAC;AAAA,uBAAIgU,aAAa,CAACjf,IAAd,CAAmBiL,CAAC,CAAChT,EAArB,CAAJ;AAAA,eAA/D;;AACxB,kBAAIinB,gBAAgB,GAAGD,aAAa,CAAC5Y,IAAd,EAAvB;;AACA,kBAAIkP,MAAM,GAAG;AACTrX,wBAAQ,EAAE,OAAI,CAACC,gBADN;AAETghB,sBAAM,EAAEN,OAFC;AAGTnX,wBAAQ,EAAE,qEAAoB0O,OAHrB;AAITgJ,wBAAQ,EAAE,OAAI,CAACN,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAJjC;AAKT2f,sBAAM,EAAE,OAAI,CAACP,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAL7B;AAMT4f,4BAAY,EAAE,OAAI,CAACC,eANV;AAOTC,2BAAW,EAAET,oBAAoB,IAAI,EAAxB,GAA6B,IAA7B,GAAoCA,oBAPxC;AAQTtJ,0BAAU,EAAE,OAAI,CAACqJ,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAR7C;AAST9B,wBAAQ,EAAEgG,kBATD;AAUT3F,oCAAoB,EAAE,OAAI,CAAC6gB,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAVzD;AAWT3B,oCAAoB,EAAEmhB;AAXb,eAAb;AAaA,kBAAIO,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcf,oBAAd,EAAoCrJ,MAApC,CAAhB;AACA,qBAAI,CAAC9B,WAAL,GAAmB,IAAnB;;AACA,qBAAI,CAACxY,iBAAL,CAAuB2kB,kBAAvB,CAA0CH,SAA1C,EAAqD/jB,SAArD,CAA+D,UAACmO,IAAD,EAA8B;AACzF,uBAAI,CAAC0I,gBAAL,GAAwB1I,IAAI,CAAC3P,IAA7B;AACA,uBAAI,CAACuZ,WAAL,GAAmB,KAAnB;AACA3H,wBAAQ,CAAC;AACL+T,8BAAY,EAAEhW,IAAI,CAACgW,YADd;AAELC,iCAAe,EAAEjW,IAAI,CAACiW,eAFjB;AAGL5lB,sBAAI,EAAE2P,IAAI,CAAC3P;AAHN,iBAAD,CAAR;AAKH,eARD;AASH,aAjDmB;AAkDpB0a,eAAG,EAAE,0BAlDe;AAmDpBmL,iBAAK,EAAE,CAAC,CAAC,CAAD,EAAI,MAAJ,CAAD,CAnDa;AAoDpBlL,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE,QAAV;AAAoB4J,2BAAa,EAAEoJ;AAAnC,aADK,EAEL;AAAEhT,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEoJ;AAAjC,aAFK,EAGL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,iCAAxB;AAA2DyB,2BAAa,EAAEoJ;AAA1E,aAHK,EAIL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,iCAAxB;AAA2D0B,yBAAW,EAAE,WAAxE;AAAqFD,2BAAa,EAAEoJ;AAApG,aAJK,EAKL;AAAEhT,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEoJ;AAAlC,aALK,CApDW;AA2DpBvJ,mBAAO,EAAE0J;AA3DW,WAAxB;AA6DA,eAAKX,4BAAL,GAAoC;AAChC1I,sBAAU,EAAE,oBADoB;AAEhCC,sBAAU,EAAE,EAFoB;AAGhCE,sBAAU,EAAE,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,QAAlB,CAAD,EAA8B,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,EAAkB,KAAlB,CAA9B,CAHoB;AAIhC8K,qBAAS,EAAE,IAJqB;AAKhCtJ,mBAAO,EAAE,IALuB;AAMhC/B,eAAG,EAAE,0BAN2B;AAOhCC,mBAAO,EAAE,CACL;AAAE3J,oBAAM,EAAE;AAAV,aADK,EAEL;AAAEA,oBAAM,EAAE,MAAV;AAAkB4J,2BAAa,EAAEoJ;AAAjC,aAFK,EAGL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,8CAAxB;AAAwEyB,2BAAa,EAAEoJ;AAAvF,aAHK,EAIL;AAAEhT,oBAAM,EAAE,KAAV;AAAiBmI,mBAAK,EAAE,8CAAxB;AAAwE0B,yBAAW,EAAE,WAArF;AAAkGD,2BAAa,EAAEoJ;AAAjH,aAJK,EAKL;AAAEhT,oBAAM,EAAE,OAAV;AAAmB4J,2BAAa,EAAEoJ;AAAlC,aALK;AAPuB,WAApC;AAeH;;;eAED,gCAAuB;AACnB,cAAI,KAAKxb,YAAT,EAAuB;AACnB,iBAAKA,YAAL,GAAoB,KAApB;AACH;AACJ,S,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eAEA,gCAAuB;AAAA;;AACnB,eAAKd,aAAL,CAAmB2E,GAAnB,CAAwB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CC,YAA5C,CACnBpY,SADmB,CACT,UAAAid,MAAM,EAAI;AACjB,gBAAIuH,eAAe,GAAG,OAAI,CAACC,eAAL,EAAtB;;AACA,gBAAI,OAAI,CAACpE,eAAL,KAAyBmE,eAAe,IAAI,CAAC,OAAI,CAAC9H,YAAlD,CAAJ,EAAqE;AACjE,qBAAI,CAACA,YAAL,GAAoB,IAApB;;AACA,qBAAI,CAACgI,gBAAL;AACH;AACJ,WAPmB,CAAxB;AASI,eAAKxe,aAAL,CAAmB2E,GAAnB,CAAwB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCC,YAAxC,CACvBpY,SADuB,CACb,UAAAid,MAAM,EAAI;AACjB,gBAAIuH,eAAe,GAAG,OAAI,CAACC,eAAL,EAAtB;;AACA,gBAAI,OAAI,CAACpE,eAAL,KAAyBmE,eAAe,IAAI,CAAC,OAAI,CAAC9H,YAAlD,CAAJ,EAAqE;AACjE,qBAAI,CAACA,YAAL,GAAoB,IAApB;;AACA,qBAAI,CAACgI,gBAAL;AACH;AACJ,WAPuB,CAAxB;AAQP;;;eAID,kCAAyB;AACrB,cAAI,KAAKxe,aAAT,EAAwB;AACpB,iBAAKA,aAAL,CAAmBwG,WAAnB;AACH;AACJ;;;eAED,2BAAkB;AACd,cAAI8X,eAAe,GAAG,KAAtB;AACA,cAAIxc,oBAAoB,GAAG,KAAKob,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAAvE;;AACA,cAAI,KAAKzB,oBAAL,IAA6ByF,oBAAjC,EAAuD;AACnD,iBAAKzF,oBAAL,GAA4ByF,oBAA5B;AACAwc,2BAAe,GAAG,IAAlB;AACH;;AACD,cAAIha,GAAG,GAAG,EAAV;AACA,cAAI8Z,gBAAgB,GAAG,KAAKlB,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,IAAiD,EAAxE;AACAsgB,0BAAgB,CAACthB,OAAjB,CAAyB,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAApD;AACA,cAAIooB,iBAAiB,GAAGna,GAAG,CAACG,IAAJ,EAAxB;;AACA,cAAI,KAAK0S,kBAAL,IAA2BsH,iBAA/B,EAAkD;AAC9C,iBAAKtH,kBAAL,GAA0BsH,iBAA1B;AACAH,2BAAe,GAAG,IAAlB;AACH;;AAEDha,aAAG,GAAG,EAAN;AACA,cAAIoa,eAAe,GAAG,KAAKxB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,IAAgD,EAAtE;AACA4gB,yBAAe,CAAC5hB,OAAhB,CAAwB,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAnD;AACA,cAAI+X,gBAAgB,GAAG9J,GAAG,CAACG,IAAJ,EAAvB;;AACA,cAAI,KAAKlI,gBAAL,IAAyB6R,gBAA7B,EAA+C;AAC3C,iBAAK7R,gBAAL,GAAwB6R,gBAAxB;AACAkQ,2BAAe,GAAG,IAAlB;AACH;;AACDha,aAAG,GAAG,EAAN;AACA,cAAIqa,cAAc,GAAG,KAAKzB,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,IAA+C,EAApE;AACA6gB,wBAAc,CAAC7hB,OAAf,CAAuB,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAlD;AACA,cAAIuoB,gBAAgB,GAAGta,GAAG,CAACG,IAAJ,EAAvB;;AACA,cAAI,KAAKiX,gBAAL,IAAyBkD,gBAA7B,EAA+C;AAC3C,iBAAKlD,gBAAL,GAAwBkD,gBAAxB;AACAN,2BAAe,GAAG,IAAlB;AACH;;AAEDha,aAAG,GAAG,EAAN;AACA,cAAIua,kBAAkB,GAAG,KAAK3B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,IAAmD,EAA5E;AACA+gB,4BAAkB,CAAC/hB,OAAnB,CAA2B,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAtD;AACA,cAAIoM,mBAAmB,GAAG6B,GAAG,CAACG,IAAJ,EAA1B;;AACA,cAAI,KAAKkX,mBAAL,IAA4BlZ,mBAAhC,EAAqD;AACjD,iBAAKkZ,mBAAL,GAA2BlZ,mBAA3B;AACA6b,2BAAe,GAAG,IAAlB;AACH;;AACDha,aAAG,GAAG,EAAN;AACA,cAAIwa,kBAAkB,GAAG,KAAK5B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,IAAmD,EAA5E;AACAghB,4BAAkB,CAAChiB,OAAnB,CAA2B,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAtD;AACA,cAAI8mB,oBAAoB,GAAG7Y,GAAG,CAACG,IAAJ,EAA3B;;AACA,cAAI,KAAKmX,oBAAL,IAA6BuB,oBAAjC,EAAuD;AACnD,iBAAKvB,oBAAL,GAA4BuB,oBAA5B;AACAmB,2BAAe,GAAG,IAAlB;AACH;;AACD,cAAIS,kBAAkB,GAAG,KAAK7B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAAnE;;AACA,cAAI,KAAK5B,kBAAL,IAA2B6iB,kBAA/B,EAAmD;AAC/C,iBAAK7iB,kBAAL,GAA0B6iB,kBAA1B;AACAT,2BAAe,GAAG,IAAlB;AACH;;AACDha,aAAG,GAAG,EAAN;AACA,cAAI3B,wBAAwB,GAAG,KAAKua,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,IAAyD,EAAxF;AACA6E,kCAAwB,CAAC7F,OAAzB,CAAiC,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAA5D;AACA,cAAIwlB,uBAAuB,GAAGvX,GAAG,CAACG,IAAJ,EAA9B;;AACA,cAAI,KAAKoX,uBAAL,IAAgCA,uBAApC,EAA6D;AACzD,iBAAKA,uBAAL,GAA+BA,uBAA/B;AACAyC,2BAAe,GAAG,IAAlB;AACH;;AACD,cAAIU,QAAQ,GAAG,KAAK9B,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAA/C;;AACA,cAAI,KAAKmhB,iBAAL,IAA0BD,QAA9B,EAAwC;AACpC,iBAAKC,iBAAL,GAAyBD,QAAzB;AACAV,2BAAe,GAAG,IAAlB;AACH;;AACD,cAAIY,MAAM,GAAE,KAAKhC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA1C;;AACA,cAAI,KAAKqhB,eAAL,IAAwBD,MAA5B,EAAoC;AAChC,iBAAKC,eAAL,GAAuBD,MAAvB;AACAZ,2BAAe,GAAG,IAAlB;AACH;;AACD,iBAAOA,eAAP;AACH;;;eAED,qBAAYvH,MAAZ,EAAmC;AAC/B,cAAIA,MAAM,CAACoD,eAAP,IAA0BpD,MAAM,CAACoD,eAAP,CAAuBlD,YAArD,EAAmE;AAC/D,iBAAKkD,eAAL,GAAuBpD,MAAM,CAACoD,eAAP,CAAuBlD,YAA9C;AACH,WAH8B,CAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAIF,MAAM,CAACoF,mBAAX,EAAgC;AAC5B,iBAAKA,mBAAL,GAA2BpF,MAAM,CAACoF,mBAAP,CAA2BlF,YAAtD;AACH;;AACD,cAAIF,MAAM,CAACJ,gBAAP,IAA2BI,MAAM,CAACJ,gBAAP,CAAwBM,YAAvD,EACI,KAAKuH,gBAAL,GArB2B,CAsB/B;AACA;;AACA,cAAIzH,MAAM,CAAC1a,oBAAX,EACI,KAAKmiB,gBAAL;AAEP;;;eACD,2BAAe;AACX;AACA,eAAKY,gBAAL;AACA,eAAKnO,gBAAL,CAAsBxW,IAAtB;AACA,eAAKuW,iBAAL,CAAuBvW,IAAvB;AACA,eAAKsW,eAAL,CAAqBtW,IAArB;AACH;;;eAED,uBAAW;AACP,eAAK4kB,iBAAL;AACA,eAAKC,sBAAL;AACA,eAAKrO,gBAAL,CAAsBzK,WAAtB;AACA,eAAKwK,iBAAL,CAAuBxK,WAAvB;AACA,eAAKuK,eAAL,CAAqBvK,WAArB;AACH;;;eAEM,yBAAgB/Q,QAAhB,EAA0B;AAC7B,eAAK2kB,iBAAL,GAAyB3kB,QAAzB;AACH;;;eAIK,kCAAyB;;;;;;;AAC3B,wBAAI,KAAK0E,WAAL,IAAoB,CAAxB,EAA2B;AACnBolB,6BADmB,GACT,uEAAezkB,OAAf,CAAuB,uEAAe0kB,gBAAtC,CADS;AAEnB5E,4BAFmB,GAEV,uEAAe9f,OAAf,CAAuB,uEAAe2kB,cAAtC,CAFU;AAGnBf,qCAHmB,GAGD,uEAAe5jB,OAAf,CAAuB,uEAAe4kB,cAAtC,CAHC;AAIvBhB,qCAAe,IAAI,EAAnB,GAAwBA,eAAe,GAAG,EAA1C,GAA+C,EAA/C;AACIC,oCALmB,GAKF,uEAAe7jB,OAAf,CAAuB,uEAAe6kB,sBAAtC,CALE;AAMvBhB,oCAAc,IAAI,EAAlB,GAAuBA,cAAc,GAAG,EAAxC,GAA6C,EAA7C;AACIG,wCAPmB,GAOE,uEAAehkB,OAAf,CAAuB,uEAAe8kB,yBAAtC,CAPF;AAQnBC,yBARmB,GAQb,uEAAe/kB,OAAf,CAAuB,uEAAeglB,gBAAtC,CARa;;AASvB,0BAAIP,OAAO,IAAI,EAAX,IAAiB3E,MAAM,IAAI,EAA3B,KAAkC,EAAE,CAAE,mCAAM,CAAC2E,OAAD,CAAR,KAAsB,CAAE,mCAAM,CAAC,KAAKrC,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAjC,CAAhC,KAA4E,EAAE,CAAE,mCAAM,CAAC8c,MAAD,CAAR,KAAqB,CAAE,mCAAM,CAAC,KAAKsC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA/B,CAA/B,CAA9G,CAAJ,EAA0L;AACtL,6BAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CR,OAA3C;AACA,6BAAKS,sBAAL;AACH,uBAHD,MAGO,IAAI,CAAC,KAAKC,YAAL,CAAkBvB,eAAlB,EAAmC,KAAKxB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAA1E,CAAL,EAAuF;AAC1F,6BAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkDrB,eAAlD;AACA,6BAAKsB,sBAAL;AACH,uBAHM,MAGA,IAAIH,GAAG,IAAIA,GAAG,IAAI,KAAK3C,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA5D,EAAmE;AACtE,6BAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqDF,GAArD;AACA,6BAAKG,sBAAL;AACH;AACJ;;;;;;;;;AACJ;;;eAED,kCAAyB;AACrBjmB,sBAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,GAArC;AACAK,gBAAM,CAACjE,QAAP,CAAgB8pB,MAAhB;AACH;;;eAED,uBAActZ,KAAd,EAAyB;AACrB,eAAK4X,gBAAL;AACH;;;eAEM,0BAAiB;AACpB,cAAIla,GAAG,GAAG,EAAV;AACA,eAAK/H,gBAAL,GAAwB,EAAxB;AACA,eAAKA,gBAAL,GAAwB+H,GAAG,CAACG,IAAJ,EAAxB;AACA,eAAKwU,aAAL;AAEH;;;eAGD,2BAAe;AACX,eAAKuF,gBAAL;AACH;;;eAID,qBAAY5X,KAAZ,EAAsB;AAClB,eAAK4X,gBAAL;AACH;;;eAED,mBAAU5X,KAAV,EAAoB;AAChB,eAAK4X,gBAAL;AACH;;;eACD,0BAAiBlmB,IAAjB,EAA6C;AACzC,eAAKmY,eAAL,GAAuBnY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAX,IAAgB9W,CAAC,CAAC8W,KAAF,IAAW,CAA/B;AAAA,WAAb,EAA+CC,KAA/C,EAAvB;AACA,eAAK1P,iBAAL,GAAyBpY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAf;AAAA,WAAb,EAA+BC,KAA/B,EAAzB;AACA,eAAKzP,gBAAL,GAAwBrY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAf;AAAA,WAAb,EAA+BC,KAA/B,EAAxB;AACH;;;eAED,4BAAgB;AACZ,eAAKzL,UAAL,CAAgB7X,OAAhB,CAAwB,UAAC8X,SAAD,EAAmC;AACvD,gBAAIA,SAAS,CAACC,UAAd,EAA0B;AACtBD,uBAAS,CAACC,UAAV,CAAqBC,IAArB,CAA0B,UAACD,UAAD,EAAgC;AACtDA,0BAAU,CAACwL,IAAX;AACH,eAFD;AAGH;AACJ,WAND;;AAOA,cAAI,KAAKrF,WAAL,CAAiBza,YAAjB,CAA8BC,OAA9B,KAA0C,OAA9C,EAAuD;AACnD,iBAAK8f,iBAAL,CAAuB,KAAKtF,WAAL,CAAiBza,YAAjB,CAA8BjI,IAArD;AACH;AACJ;;;eAED,4BAAgB;AAAA;;AACZ,eAAK+mB,iBAAL;AACA,eAAKkB,kBAAL,GAA0BlmB,MAAM,CAACM,UAAP,CAAkB,YAAM;AAC9C,mBAAI,CAACqjB,kBAAL;;AACA,mBAAI,CAACoB,gBAAL;AACH,WAHyB,EAGvB,IAHuB,CAA1B;AAIH;;;eAED,6BAAiB;AACb,cAAI,KAAKmB,kBAAT,EAA6B;AACzB7Z,yBAAa,CAAC,KAAK6Z,kBAAN,CAAb;AACH;;AACD,cAAI,KAAKC,mBAAT,EAA8B;AAC1B9Z,yBAAa,CAAC,KAAK8Z,mBAAN,CAAb;AACH;;AACD,cAAI,KAAK/Z,wBAAT,EAAmC;AAC/BC,yBAAa,CAAC,KAAKD,wBAAN,CAAb;AACH;;AACD,cAAI,KAAKga,wBAAT,EAAmC;AAC/B/Z,yBAAa,CAAC,KAAK+Z,wBAAN,CAAb;AACH;AACJ;;;eAED,4BAAmBC,QAAnB,EAA4B;AAExB,cAAI,KAAKxD,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAhC,IAAyC,EAAzC,IAA+C,KAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA9B,IAAuC,EAA1F,EAA8F;AAC1F;AACH;;AACD,cAAI6iB,WAAW,GAAG,EAAlB;AAAsB,eAAKzD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgDhB,OAAhD,CAAwD,UAAAuM,CAAC;AAAA,mBAAIsX,WAAW,CAACviB,IAAZ,CAAiBiL,CAAC,CAAChT,EAAnB,CAAJ;AAAA,WAAzD;AACtB,eAAKwY,oBAAL,GAA4B8R,WAA5B;AACA,eAAKC,qBAAL;AACA,eAAK/O,WAAL,GAAmB,KAAnB;AACA,eAAKgP,gBAAL;AACH;;;eAED,4BAAgB;AAAA;;AACZ,eAAKL,mBAAL,GAA2BnmB,MAAM,CAACymB,WAAP,CAAmB,YAAM;AAChD,gBAAIC,YAAY,EAAhB,EAAoB;AAChB,qBAAI,CAAC/C,kBAAL;AACH;AACJ,WAJ0B,EAIxB,KAAKlD,iBAAL,GAAyB,IAJD,CAA3B;AAKH;;;eAED,iCAAqB;AAAA;;AACjB,eAAKkG,oBAAL;AACA,eAAKjG,gBAAL,GAAwB,KAAKD,iBAA7B;AACA,eAAK2F,wBAAL,GAAgCpmB,MAAM,CAACymB,WAAP,CAAmB,YAAM;AACrD,gBAAIC,YAAY,EAAhB,EAAoB;AAChB,kBAAI,OAAI,CAAChG,gBAAL,IAAyB,CAA7B,EAAgC;AAC5B,uBAAI,CAACA,gBAAL,GAAwB,OAAI,CAACD,iBAA7B;;AACA,uBAAI,CAACkG,oBAAL;AACH,eAHD,MAGO;AACH,uBAAI,CAACjG,gBAAL;AACH;AACJ;AACJ,WAT+B,EAS7B,IAT6B,CAAhC;AAUH;;;eAED,gCAAoB;AAChB,cAAI,KAAK0F,wBAAT,EAAmC;AAC/B/Z,yBAAa,CAAC,KAAK+Z,wBAAN,CAAb;AACH;AACJ;;;eAEM,+BAAsB;AACzB;AACA,cAAIQ,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2CnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2C8N,UAA3C,CAAsD,CAACkB,aAAvD;AACH;;;eAEM,yBAAgB;AACnB;AACA,cAAIA,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiCnU,KAArD;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,CAACkB,aAA7C;AACH;;;eAEM,uBAAc;AACjB;AACA,cAAIC,UAAU,GAAG,KAAKhE,UAAL,CAAgBjL,GAAhB,CAAoB,aAApB,EAAmCnU,KAApD;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,aAApB,EAAmC8N,UAAnC,CAA8C,CAACmB,UAA/C;AACH;;;eAEM,4BAAmB;AACtB,eAAKpgB,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACH;;;eACM,4BAAmB;AACtB;AACA,cAAIqgB,gBAAgB,GAAG,KAAKjE,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwC8N,UAAxC,CAAmD,CAACoB,gBAApD;AACH;;;eAEM,2BAAkBC,MAAlB,EAAsE;AAAA;;AAAA,cAAtBza,UAAsB,uEAAJ,IAAI;AACzEtM,gBAAM,CAACyM,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,eAAKkU,WAAL,GAAmB;AAAEza,wBAAY,EAAE;AAAEC,qBAAO,EAAE,OAAX;AAAoBlI,kBAAI,EAAE8oB;AAA1B;AAAhB,WAAnB;;AACA,cAAIza,UAAU,IAAIA,UAAU,CAAC0a,MAA7B,EAAqC;AACjC1a,sBAAU,CAAC/L,KAAX;AACH;;AACD,eAAK0gB,qBAAL,GAA6B,IAAI,sGAAJ,EAA7B;AACA,eAAKU,SAAL,GAAiB,IAAjB;AACA,eAAK3iB,iBAAL,CAAuBioB,0BAAvB,CAAkDF,MAAM,CAAC/qB,EAAzD,EAA6DyD,SAA7D,CAAuE,UAAAxB,IAAI,EAAI;AAC3E,gBAAIA,IAAJ,EAAU;AACN,qBAAI,CAACgjB,qBAAL,GAA6B,IAAI,sGAAJ,CAA4BhjB,IAA5B,CAA7B;AACA,qBAAI,CAAC0jB,SAAL,GAAiB,KAAjB;AACH,aAHD,MAIK;AACD,qBAAI,CAACV,qBAAL,GAA6B,IAAI,sGAAJ,EAA7B;;AACA,gFAAaiG,UAAb,CAAwB,yBAAxB,EAAmD,sBAAnD,EAA2E,IAA3E;;AACA,qBAAI,CAACvF,SAAL,GAAiB,KAAjB;AACH;AACJ,WAVD;AAWH;;;eAEM,sBAAU;AACb,eAAKhB,WAAL,GAAmB;AAAEza,wBAAY,EAAE;AAAEC,qBAAO,EAAE,MAAX;AAAmBlI,kBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,WAAnB;AACH;;;eACO,iCAAqB;AACzB,cAAIuC,WAAW,GAAG,uEAAeC,OAAf,CAAuB,uEAAeC,gBAAtC,CAAlB;;AACA,cAAIF,WAAW,IAAI,EAAnB,EAAuB;AACnB,iBAAKrB,cAAL,GAAsB,KAAtB;AACH,WAFD,MAGK;AACD,iBAAKA,cAAL,GAAsBqB,WAAtB;AACH;;AACD,cAAI,KAAKrB,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,iBAAK0jB,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,KAA5C;AACH;AAEJ;;;eACM,+BAAsByB,eAAtB,EAA+C;AAClD,4EAAaC,eAAb;;AACA,eAAKpoB,iBAAL,CAAuBqoB,oBAAvB,CAA4CF,eAA5C,EAA6D1nB,SAA7D,CAAuE,UAAAxB,IAAI,EAAI;AAC3E,gBAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;AACAlM,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmBrpB,IAAnB;AACH,aAHD,MAIK;AACDmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;;AACA,gFAAaJ,UAAb,CAAwB,+BAAxB,EAAyD,IAAzD,EAA+D,IAA/D;AACH;;AAED,8EAAaK,uBAAb,CAAqC,UAArC;;AACA,8EAAaC,gBAAb;AACH,WAZD;AAaH;;;eAGD,2BAAkBnB,QAAlB,EAA4B;AACxB,eAAKoB,gBAAL,GAAwBpB,QAAxB;AACA,eAAK1C,kBAAL,CAAwB0C,QAAxB;AACH;;;eAEO,mCAA0BnkB,gBAA1B,EAA4C;AAAA;;AAChD,eAAKsV,WAAL,GAAmB,IAAnB;AACA,eAAKvY,cAAL,CAAoBiU,oBAApB,CAAyChR,gBAAzC,EAA2DzC,SAA3D,CAAqE,UAAA0T,EAAE,EAAI;AACvE,mBAAI,CAACqE,WAAL,GAAmB,KAAnB;AACA,mBAAI,CAACpS,YAAL,GAAoB+N,EAApB;AACH,WAHD;AAIH;;;eAED,qBAAYM,CAAZ,EAAeC,CAAf,EAAkB;AACd,cAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,IAAP;AACb,cAAID,CAAC,IAAI,IAAL,IAAaC,CAAC,IAAI,IAAtB,EAA4B,OAAO,KAAP;AAC5B,cAAID,CAAC,CAAClR,MAAF,IAAYmR,CAAC,CAACnR,MAAlB,EAA0B,OAAO,KAAP;;AAC1B,eAAK,IAAIsJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,CAAC,CAAClR,MAAtB,EAA8B,EAAEsJ,CAAhC,EAAmC;AAC/B,gBAAI4H,CAAC,CAAC5H,CAAD,CAAD,KAAS6H,CAAC,CAAC7H,CAAD,CAAd,EAAmB,OAAO,KAAP;AACtB;;AACD,iBAAO,IAAP;AACH;;;eAED,sBAAapI,KAAb,EAAoBikB,KAApB,EAA2B;AACvB,cAAI7nB,IAAI,GAAG4jB,MAAM,CAACkE,SAAP,CAAiB5X,QAAjB,CAA0B6X,IAA1B,CAA+BnkB,KAA/B,CAAX;AACA,cAAI5D,IAAI,KAAK4jB,MAAM,CAACkE,SAAP,CAAiB5X,QAAjB,CAA0B6X,IAA1B,CAA+BF,KAA/B,CAAb,EAAoD,OAAO,KAAP;AACpD,cAAI,CAAC,gBAAD,EAAmB,iBAAnB,EAAsC5jB,OAAtC,CAA8CjE,IAA9C,IAAsD,CAA1D,EAA6D,OAAO,KAAP;AAC7D,cAAIgoB,QAAQ,GAAGhoB,IAAI,KAAK,gBAAT,GAA4B4D,KAAK,CAAClB,MAAlC,GAA2CkhB,MAAM,CAACqE,IAAP,CAAYrkB,KAAZ,EAAmBlB,MAA7E;AACA,cAAIwlB,QAAQ,GAAGloB,IAAI,KAAK,gBAAT,GAA4B6nB,KAAK,CAACnlB,MAAlC,GAA2CkhB,MAAM,CAACqE,IAAP,CAAYJ,KAAZ,EAAmBnlB,MAA7E;AACA,cAAIslB,QAAQ,KAAKE,QAAjB,EAA2B,OAAO,KAAP;;AAC3B,cAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,KAAV,EAAiBC,KAAjB,EAAwB,CACrC,CADD;;AAEA,cAAIC,KAAJ;;AACA,cAAItoB,IAAI,KAAK,gBAAb,EAA+B;AAC3B,iBAAK,IAAIgM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgc,QAApB,EAA8Bhc,CAAC,EAA/B,EAAmC;AAC/Bmc,qBAAO,CAACvkB,KAAK,CAACoI,CAAD,CAAN,EAAW6b,KAAK,CAAC7b,CAAD,CAAhB,CAAP;AACH;AACJ,WAJD,MAIO;AACH,iBAAK,IAAItK,GAAT,IAAgBkC,KAAhB,EAAuB;AACnB,kBAAIA,KAAK,CAAC2kB,cAAN,CAAqB7mB,GAArB,CAAJ,EAA+B;AAC3BymB,uBAAO,CAACvkB,KAAK,CAAClC,GAAD,CAAN,EAAammB,KAAK,CAACnmB,GAAD,CAAlB,CAAP;AACH;AACJ;AACJ;;AACD,iBAAO,IAAP;AACH;;;eAEM,2BAAkB8mB,UAAlB,EAAsC;AACzC,eAAKxF,UAAL,GAAkBwF,UAAlB;AACA,cAAIpE,eAAe,GAAG,KAAKC,eAAL,EAAtB;;AACQ,cAAI,KAAKpE,eAAL,KAAyBmE,eAAe,IAAI,CAAC,KAAK9H,YAAlD,CAAJ,EAAqE;AACjE,iBAAKA,YAAL,GAAoB,IAApB;AACA,iBAAKgI,gBAAL;AACX;AACJ;;;;;;;uBAx0BQvE,gC,EAAgC,8J,EAAA,0K,EAAA,wJ;AAAA,K;;;YAAhCA,gC;AAAgC,uD;AAAA;AAAA;+EAmFA,qE;;oEAD3B,qE,EAAkB,I;;;;;;;;;;;;;;;;;;;;;;ADzGpC;;AAGA;;AACI;;AACI;;AAAwB;AAAA,mBAAS,IAAA0I,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAA8B;;AAClD;;AAChC;;AACJ;;AACA;;AACI;;AACI;;AAEI;;AACI;;AACI;;AACI;;AAAqB;AAAA,mBAAS,IAAAC,eAAA,gCAAT;AAAoD,WAApD;;AAEjB;;AAAoG;;AAAO;;AAC/G;;AACA;;AAAqB;AAAA,mBAAS,IAAAA,eAAA,kCAAT;AAAsD,WAAtD;;AACjB;;AAAuG;;AAAS;;AACpH;;AACA;;AAAqB;AAAA,mBAAS,IAAAA,eAAA,iCAAT;AAAqD,WAArD;;AACjB;;AAAqG;;AAAQ;;AACjH;;AAEJ;;AACJ;;AACJ;;AACJ;;AACA;;AA+DA;;AA+DA;;AA+DJ;;AACJ;;AAIA;;AAEA;;AACI;;AACI;;AACI;;AACI;;AAA4B;;AAAwB;;AACpD;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAM;;AACV;;AAAI;;AAAU;;AAClB;;AACJ;;AACA;;AACI;;AAMJ;;AACJ;;AACA;;AACI;;AAA0E;;AAAK;;AACnF;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;;;AAlQ6D;;AAKyB;;AAAA;;AAK5C;;AAAA;;AAQc;;AAAA;;AAGC;;AAAA;;AAGD;;AAAA;;AAO3C;;AAAA;;AA+DA;;AAAA;;AA+DA;;AAAA;;AAqFe;;AAAA;;;;;;;;;sEC3Nf3I,gC,EAAgC;cAL5C,uDAK4C;eALlC;AACPhf,kBAAQ,EAAE,kCADH;AAEPC,qBAAW,EAAE,+CAFN;AAGPC,mBAAS,EAAE,CAAC,8CAAD;AAHJ,S;AAKkC,Q;;;;;;;;;;gBAExC;;;gBACA;;;gBACA;;;gBA8EA,0D;iBAAa,qE;;;gBACb,uD;iBAAU,oB,EAAsB;AAAE0nB,gBAAI,EAAE,qEAAR;AAA4B,sBAAQ;AAApC,W;;;gBAYhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGe;;AACI;;AACJ;;;;;;;;AAF8C,kGAA4B,UAA5B,EAA4B,mDAA5B;;AAC1C;;AAAA;;;;;;;;AAgBZ;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAA4B,UAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B,EAA4B,YAA5B,EAA4B;AAAA;;AAAA;;AAAA;AAAA,SAA5B;;AAGzB;;AACJ;;AACA;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAgC,UAAhC,EAAgC;AAAA;;AAAA;;AAAA;AAAA,SAAhC,EAAgC,YAAhC,EAAgC;AAAA;;AAAA;;AAAA;AAAA,SAAhC;;AAGzB;;AACJ;;AACA;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;AAAA,WAAgC,UAAhC,EAAgC;AAAA;;AAAA;;AAAA;AAAA,SAAhC,EAAgC,YAAhC,EAAgC;AAAA;;AAAA;;AAAA;AAAA,SAAhC;;AAGzB;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AApB6C;;AAAA,mGAA4B,UAA5B,EAA4B,uBAA5B,EAA4B,aAA5B,EAA4B,eAA5B,EAA4B,MAA5B,EAA4B,mBAA5B;;AAMA;;AAAA,uGAAgC,UAAhC,EAAgC,0BAAhC,EAAgC,aAAhC,EAAgC,iBAAhC,EAAgC,MAAhC,EAAgC,qBAAhC;;AAMA;;AAAA,uGAAgC,UAAhC,EAAgC,0BAAhC,EAAgC,aAAhC,EAAgC,kBAAhC,EAAgC,MAAhC,EAAgC,uBAAhC;;;;;;AA4FzB;;AAA6F;;AAAQ;;AAAK;;AAAU;;AAA2B;;;;;;AAE3I;;AAA6C;;AAAQ;;AAAK;;AAAW;;AAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;AAc/G;;;;;;AAAmC,kLAA4C,aAA5C,EAA4C,uGAA5C,EAA4C,SAA5C,EAA4C,oBAA5C,EAA4C,eAA5C,EAA4C,sKAA5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3CvC;;AACI;;AAEA;;AAC+G;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAiD,aAAjD,EAAiD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAjD,EAAiD,UAAjD,EAAiD;AAAA;;AAAA;;AAAA;;AAAA,4CAAqE,IAArE,EAAyE,MAAzE,EAAyE,QAAzE;AAAyE,SAA1H;;AAa3G;;AACI;;AACI;;AAAG;;AAAQ;;AAAa;;AAAU;;AAAgB;;AAClD;;AAAG;;AAAQ;;AAAgB;;AAAS;;AAA2E;;AAAe;;AAAI;;AAClI;;AAAG;;AAAQ;;AAAgB;;AAAU;;AAA8B;;AACnE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0F;;AAAS;;AACtG;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAAyC;;AAC/G;;AAEA;;AACA;;AAGJ;;AACJ;;AACJ;;AACJ;;AACI;;AAA2L;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAkD,UAAlD,EAAkD;AAAA;;AAAA;;AAAA;;AAAA,0DAAmD,IAAnD;AAAuD,SAAzG;;AACvL;;AACI;;AACI;;AAAG;;AAAG;;AAAiB;;AAAK;;AAAgB;;AAC5C;;AAAG;;AAAG;;AAAe;;AAAI;;AAAe;;AAC5C;;AACJ;;AACJ;;AACA;;AAEJ;;;;;;;;AA1CgB;;AAAA,6FAAuB,WAAvB,EAAuB,cAAvB,EAAuB,SAAvB,EAAuB,gMAAvB,EAAuB,OAAvB,EAAuB,qUAAvB;;AAcS;;AAAA;;AAEyB;;AAAA;;AACK;;AAAA;;AAA2C;;AAA6B;;AAAA;;AAC1E;;AAAA;;AACc;;AAAA;;AAEhB;;AAAA;;AAGU;;AAAA,+FAA+C,UAA/C,EAA+C,IAA/C;;AAQ7C;;AAAA,8FAAwB,WAAxB,EAAwB,eAAxB,EAAwB,SAAxB,EAAwB,gJAAxB;;AACS;;AAAA,0FAAwB,UAAxB,EAAwB,GAAxB;;AAEmB;;AAAA;;AACH;;AAAA;;AAItB;;AAAA;;;;;;;;;;;;;;;AAQ3B;;AACI;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AACR;;AACJ;;AACJ;;;;;;AAF4B;;AAAA;;;;;;;;;;;;;;;;;;;;AAYxB;;AACI;;AAA+E;;AAAqD;;AAAe;;AACnJ;;AAA8M;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1M;;AAAmB;;AAAe;;AAClC;;AAA+B;;AAAe;;AAClD;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+D;;AAAyC;;AAC3G;;AAAG;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,IAAlC;AAAsC,SAAtC;;AAAqE;;AAAgD;;AAC5H;;AACJ;;;;;;AATyF;;AAAA;;AAA+C;;AAAA;;AACa;;AAAA;;AAA1H,0KAA4C,SAA5C,EAA4C,kIAA5C;;AACA;;AAAA;;AACY;;AAAA;;AAGA;;AAAA;;;;;;;;AAIvC;;AACI;;AAA+E;;AAAe;;AAC9F;;AACI;;AAAmB;;AAAe;;AAClC;;AAA+B;;AAAe;;AAClD;;AACA;;AAEI;;AAAG;AAAA;;AAAA;;AAAA;;AAAA,uDAAkC,IAAlC;AAAsC,SAAtC;;AAAqE;;AAAgD;;AAC5H;;AACJ;;;;;;AATmF;;AAAA;;AAExD;;AAAA;;AACY;;AAAA;;;;;;AA0B3B;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAqB;;AAC7B;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAiBpB;;AACI;;AACJ;;;;;;AAUQ;;AACI;;AACJ;;;;;;AAGI;;AAA6E;;AAAG;;AAAQ;;AAAK;;AAAa;;AAA1G;;;;;;AAGI;;AACI;;AAAG;;AAAiB;;AAAK;;AAAS;;AACtC;;;;;;;AADO;;AAAA;;AAAsB;;AAAA;;;;;;AAD7B;;;;;;AAAc;;;;;;AA0BU;;AACI;;AAAI;;AAAkB;;AAC1B;;;;;;AAagB;;AACI;;AACI;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAmB;;AAC3B;;AACJ;;;;;;AAHY;;AAAA;;AACA;;AAAA;;;;;;AAVhB;;AAAyC;;AAAG;;AAAO;;AACnD;;AACI;;AACI;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AAEhB;;AACA;;AAMJ;;AACJ;;;;;;AAPe;;AAAA;;;;;;AAqBK;;AAA4E;;;;AAA2E;;;;;;;;AAA3E;;AAAA;;;;;;AAExE;;AAAI;;AAAE;;;;;;AAJd;;AACI;;AAAyB;;AAA4D;;AACrF;;AACA;;AAGA;;AAAyB;;AAAE;;AAC3B;;AAAyB;;AAAmC;;AAChE;;;;;;;;;;AAP6B;;AAAA;;AACA;;AAAA,uGAAiD,UAAjD,EAAiD,IAAjD;;AAKA;;AAAA;;;;;;AARjC;;AACI;;AASJ;;;;;;AATW;;AAAA;;;;;;AAeC;;AAAsE;;;;AAAuE;;;;;;AAAvE;;AAAA;;;;;;AAElE;;AAAI;;AAAE;;;;;;AAJd;;AACI;;AAAyB;;AAAE;;AAC3B;;AACA;;AAGA;;AAAyB;;AAAE;;AAC3B;;AAA0B;;AAAmC;;AACjE;;;;;;;;AAN8B;;AAAA,mGAA0C,UAA1C,EAA0C,IAA1C;;AAKA;;AAAA;;;;;;AAtB1C;;AACI;;AAWA;;AACI;;AAaJ;;AACJ;;;;;;;;AA1BkB;;AAAA,0GAAgD,UAAhD,EAAgD,IAAhD;;;;;;AA+BN;;AAAiF;;;;AAAqF;;;;;;AAArF;;AAAA;;;;;;AAE7E;;AAAI;;AAAE;;;;;;AAJd;;AACI;;AAAyB;;AAA0D;;AACnF;;AACA;;AAGA;;AAAyB;;AAA0B;;AACnD;;AACI;;;;AAAyE;;AACjF;;;;;;;;AAR6B;;AAAA;;AACA;;AAAA,iHAAuD,UAAvD,EAAuD,IAAvD;;AAIA;;AAAA;;AAErB;;AAAA;;;;;;AARR;;;;;;AAAO;;;;;;AA1D3B;;AACI;;AAAI;;AAAe;;AACnB;;AAAI;;AAAoB;;AACxB;;AACI;;AAeA;;AACA;;AAAM;;AAAG;;AAAM;;AAAI;;AACnB;;AACI;;AACI;;AAAyB;;AAAW;;AACpC;;AAAyB;;AAAa;;AACtC;;AAAyB;;AAAS;;AAClC;;AAAyB;;AAAc;;AAC3C;;AACA;;AA4BA;;AACI;;AAYJ;;AACJ;;AACJ;;AACJ;;;;;;;;AAvEQ;;AAAA;;AACA;;AAAA;;AAEM;;AAAA;;AAwBY;;AAAA,6GAA8D,UAA9D,EAA8D,IAA9D;;;;;;AA5B1B;;;;;;AAAI;;;;;;;;;;;;;;;;;;;;;;;AApDxD;;AACI;;AACI;;AAGA;;AACI;;AACI;;AACI;;AACA;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsD;;AAAyC;;AACtG;;AACA;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAAiC;;AACjI;;AACA;;AACI;;AAGA;;AACI;;AAAG;;AAAgB;;AAAK;;AAAkC;;AAC1D;;AACA;;AAAG;;AAAgB;;AAAK;;AAAwE;;AAAwC;;AACxI;;AAKJ;;AACA;;AACI;;AACI;;AAAoB;;AAAe;;AACnC;;AACI;;AAAmG;;AAA0C;;AAE7I;;AACI;;AACI;;AAEI;;AACI;;AACI;;AACI;;AAAuB;;AAAU;;AACjC;;AAA4B;;AAAO;;AACnC;;AACG;;AACH;;AACJ;;AACJ;;AACA;;AACI;;AAGA;;AA2EJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;AAzIK,2LAA0F,SAA1F,EAA0F,iGAA1F;;AAEgE;;AAAA;;AAMjD;;AAAA;;AAMyD;;AAAA;;AAIjC;;AAAA;;AACV;;AAAA,sHAA8D,UAA9D,EAA8D,IAA9D;;AACa;;AAAA;;AAAqE;;AAAA;;AA4BtD;;AAAA,wHAAqE,UAArE,EAAqE,IAArE;;;;;;AA6FlE;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCtWaC,+B;AA8FT,+CAAoBzpB,iBAApB,EAAkE6gB,WAAlE,EAAoG5gB,cAApG,EAAoI;AAAA;;AAAhH,aAAAD,iBAAA,GAAAA,iBAAA;AAA8C,aAAA6gB,WAAA,GAAAA,WAAA;AAAkC,aAAA5gB,cAAA,GAAAA,cAAA;AA1FpG,aAAA0G,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AAEO,aAAAua,kBAAA,GAA0B,IAA1B;AACA,aAAAC,uBAAA,GAAkC,IAAlC;AAGA,aAAAxb,SAAA,GAAY,CAAZ;AACA,aAAAyb,iBAAA,GAAoB,OAApB;AACA,aAAAC,iBAAA,GAAoB,CAAC,QAArB;AACA,aAAAC,YAAA,GAAqB,mCAAM,GAAGhW,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBiW,MAAxB,EAArB;AACA,aAAAC,UAAA,GAAqB,mCAAM,GAAGtS,MAAT,CAAgB,YAAhB,CAArB;AAUC,aAAAuS,iBAAA,GAA4B,GAA5B,CAsE4H,CAtE3F;;AAClC,aAAAC,gBAAA,GAA2B,KAAKD,iBAAhC;AAEA,aAAAE,WAAA,GAAc;AAAEza,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,SAAd;AAEC,aAAA2I,WAAA,GAAc,EAAd;AACA,aAAAC,aAAA,GAAgB;AACpBC,aAAG,EAAE;AAAEC,eAAG,EAAE,WAAP;AAAoBC,eAAG,EAAE,CAAC;AAA1B,WADe;AAEpBC,aAAG,EAAE;AAAEF,eAAG,EAAE,WAAP;AAAoBC,eAAG,EAAE,CAAC;AAA1B;AAFe,SAAhB;AAID,aAAAE,aAAA,GAAgB;AACnBC,kBAAQ,EAAE;AADS,SAAhB;AASA,aAAAtN,OAAA,GAAkC,EAAlC;AACA,aAAA+mB,cAAA,GAAyC,EAAzC;AACA,aAAAC,QAAA,GAAmC,EAAnC;AACA,aAAAC,YAAA,GAAuC,EAAvC;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAA3K,eAAA,GAA0C,EAA1C;AACA,aAAAC,iBAAA,GAA4C,EAA5C;AACA,aAAAC,gBAAA,GAA2C,EAA3C;AACA,aAAA0K,mBAAA,GAA8C,EAA9C;AACA,aAAAC,qBAAA,GAAiD,IAAI,sGAAJ,EAAjD;AAEA,aAAApZ,OAAA,GAAmC,EAAnC;AACA,aAAAqZ,YAAA,GAAoB,EAApB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAvD,cAAA,GAAwB,oEAAxB;AACA,aAAAwD,gBAAA,GAAwB,EAAxB;AACA,aAAAtX,mBAAA,GAA2B,EAA3B;AACA,aAAA4T,iBAAA,GAAyB,EAAzB;AAKA,aAAAlJ,oBAAA,GAA4B,EAA5B;AAEA,aAAA/N,YAAA,GAAwB,KAAxB;AACA,aAAA8W,YAAA,GAAwB,KAAxB;AACA,aAAAC,UAAA,GAAsB,KAAtB;AACA,aAAAC,eAAA,GAA2B,KAA3B;AACA,aAAArY,YAAA,GAAe,EAAf;AACA,aAAAmR,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAgL,4BAAA,GAAoC,EAApC;AACA,aAAAC,4BAAA,GAA6C,IAAI,4CAAJ,EAA7C;AACA,aAAAhL,eAAA,GAAgC,IAAI,4CAAJ,EAAhC;AACA,aAAAC,iBAAA,GAAkC,IAAI,4CAAJ,EAAlC;AACA,aAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAGA,aAAAY,WAAA,GAAuB,IAAvB;AACA,aAAAmK,SAAA,GAAqB,IAArB;AAIA,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AACA,aAAA1iB,cAAA,GAA0B,KAA1B;AAEA,aAAAupB,yBAAA,GAAqD,EAArD;AAIN;;;;eAED,oBAAW;AAAA;;AACP,eAAK3G,qBAAL;AACA,eAAKC,oBAAL;AAEA,eAAKhjB,iBAAL,CAAuBoR,oBAAvB,GAA8C3Q,SAA9C,CAAwD,UAAAxB,IAAI,EAAI;AAC5D,mBAAI,CAAC2I,WAAL,GAAmB3I,IAAnB;AACA,mBAAI,CAACoR,QAAL,GAAiB,OAAI,CAACzI,WAAL,KAAqB,KAAtB,GAA+B,SAA/B,GAA2C,QAA3D;;AACA,mBAAI,CAAC+hB,YAAL;AACH,WAJD;AAKA,eAAK9I,WAAL,CAAiB+I,aAAjB,CAA+BnpB,SAA/B,CAAyC,UAACxB,IAAD,EAAU;AAC/C,gBAAIA,IAAI,IAAI4W,SAAZ,EAAuB;AACnB,qBAAI,CAAC2C,WAAL,GAAmBvZ,IAAnB;AACH;AACJ,WAJD;AAKA,eAAK4hB,WAAL,CAAiBgJ,iBAAjB,CAAmCppB,SAAnC,CAA6C,UAACxB,IAAD,EAAU;AACnD,gBAAIA,IAAI,IAAI4W,SAAZ,EAAuB;AACnB,qBAAI,CAACgN,UAAL,GAAkB5jB,IAAlB;AACA,qBAAI,CAACuZ,WAAL,GAAmB,KAAnB;AACAsR,oBAAM,CAAC,wBAAD,CAAN,CAAiCC,KAAjC;AACH;AACJ,WAND;AAOH;;;eAED,gCAAuB;AACnB,cAAI,KAAKtiB,YAAT,EAAuB;AACnB,iBAAKA,YAAL,GAAoB,KAApB;AACH;AACJ;;;eAED,qBAAYiW,MAAZ,EAAmC;AAC/B,cAAIA,MAAM,CAAC5c,WAAP,IAAsB4c,MAAM,CAAC5c,WAAP,CAAmB8c,YAA7C,EAA2D,CAE1D;;AACD,cAAIF,MAAM,CAAC9U,eAAP,IAA0B8U,MAAM,CAAC9U,eAAP,CAAuBgV,YAArD,EACI,KAAKoM,cAAL,GAL2B,CAM/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;eAED,2BAAe;AACX,eAAKrF,kBAAL;AACA,eAAKoB,gBAAL;AACH;;;eAED,uBAAW;AACP,eAAKC,iBAAL;AACA,eAAKC,sBAAL;AACA,cAAI,KAAKgE,uCAAT,EACA5c,aAAa,CAAC,KAAK4c,uCAAN,CAAb;AACA,eAAKrS,gBAAL,CAAsBzK,WAAtB;AACA,eAAKwK,iBAAL,CAAuBxK,WAAvB;AACA,eAAKuK,eAAL,CAAqBvK,WAArB;AACH,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eAEA,gCAAuB;AAAA;;AACnB,eAAKxG,aAAL,CAAmB2E,GAAnB,CAAwB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CC,YAA5C,CAAyDpY,SAAzD,CAAmE,UAAAid,MAAM,EAAG;AAC5F,mBAAI,CAACyH,gBAAL;AACP,WAFuB,CAAxB;AAGA,eAAKxe,aAAL,CAAmB2E,GAAnB,CAAwB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCC,YAAxC,CAAqDpY,SAArD,CAA+D,UAAAid,MAAM,EAAI;AAC7F,mBAAI,CAACyH,gBAAL;AACH,WAFuB,CAAxB;AAGH;;;eAED,kCAAyB;AACrB,cAAI,KAAKxe,aAAT,EAAwB;AACpB,iBAAKA,aAAL,CAAmBwG,WAAnB;AACH;AACJ;;;eAEK,kCAAyB;;;;;;;AAC3B,wBAAI,KAAKrM,WAAL,IAAoB,CAAxB,EAA2B;AACnBolB,6BADmB,GACT,uEAAezkB,OAAf,CAAuB,uEAAe0kB,gBAAtC,CADS;AAEnB5E,4BAFmB,GAEV,uEAAe9f,OAAf,CAAuB,uEAAe2kB,cAAtC,CAFU;AAGnBf,qCAHmB,GAGD,uEAAe5jB,OAAf,CAAuB,uEAAe4kB,cAAtC,CAHC;AAIvBhB,qCAAe,IAAI,EAAnB,GAAwBA,eAAe,GAAG,EAA1C,GAA+C,EAA/C;AACIC,oCALmB,GAKF,uEAAe7jB,OAAf,CAAuB,uEAAe6kB,sBAAtC,CALE;AAMvBhB,oCAAc,IAAI,EAAlB,GAAuBA,cAAc,GAAG,EAAxC,GAA6C,EAA7C;AACIG,wCAPmB,GAOE,uEAAehkB,OAAf,CAAuB,uEAAe8kB,yBAAtC,CAPF;AAQnBC,yBARmB,GAQb,uEAAe/kB,OAAf,CAAuB,uEAAeglB,gBAAtC,CARa;;AASvB,0BAAIP,OAAO,IAAI,EAAX,IAAiB3E,MAAM,IAAI,EAA3B,KAAkC,EAAE,CAAE,mCAAM,CAAC2E,OAAD,CAAR,KAAsB,CAAE,mCAAM,CAAC,KAAKrC,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAjC,CAAhC,KAA4E,EAAE,CAAE,mCAAM,CAAC8c,MAAD,CAAR,KAAqB,CAAE,mCAAM,CAAC,KAAKsC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA/B,CAA/B,CAA9G,CAAJ,EAA0L;AACvL,6BAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CR,OAA3C,EADuL,CAEvL;;AACC,6BAAKS,sBAAL;AACH,uBAJD,MAIO,IAAI,CAAC,KAAKC,YAAL,CAAkBvB,eAAlB,EAAmC,KAAKxB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAA1E,CAAL,EAAuF;AAC1F,6BAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkDrB,eAAlD;AACA,6BAAKsB,sBAAL;AACH,uBAHM,MAIF,IAAIH,GAAG,IAAIA,GAAG,IAAI,KAAK3C,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,CAAlB,EAA6D;AAC9D,6BAAKiL,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqDF,GAArD;AACA,6BAAKG,sBAAL;AACH;AACJ;;;;;;;;;AACJ;;;eACD,kCAAyB;AACrBjmB,sBAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,GAArC;AACAK,gBAAM,CAACjE,QAAP,CAAgB8pB,MAAhB;AACH;;;eACD,uBAActZ,KAAd,EAAyB;AACrB,eAAKwU,iBAAL,GAAyB,EAAzB;AACA,eAAKoD,gBAAL;AACH;;;eAEM,0BAAiB;AACpB,cAAIla,GAAG,GAAG,EAAV;AACA,eAAK/H,gBAAL,GAAwB,EAAxB;AACA,eAAK2gB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6ChB,OAA7C,CAAqD,UAAAyH,GAAG,EAAI;AAAED,eAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,WAAhF;AACA,eAAKkG,gBAAL,GAAwB+H,GAAG,CAACG,IAAJ,EAAxB;AACA,eAAKwU,aAAL;AACH;;;eAED,yBAAgBrS,KAAhB,EAAqB;AACjB,eAAK4X,gBAAL;AACH;;;eAED,2BAAe;AAAA;;AACX,eAAKjD,YAAL,GAAoB,EAApB;AACA,eAAKrZ,OAAL,CAAa0G,GAAb,CAAiB,UAAA3L,CAAC,EAAI;AAClB,gBAAI,OAAI,CAACigB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6C6H,IAA7C,CAAkD,UAAAzI,CAAC;AAAA,qBAAIA,CAAC,CAAC7G,EAAF,IAAQ4G,CAAC,CAAC5G,EAAd;AAAA,aAAnD,CAAJ,EAA0E;AACtE,kBAAI4G,CAAC,IAAIA,CAAC,CAACsgB,MAAP,IAAiBtgB,CAAC,CAACsgB,MAAF,CAAS3gB,MAAT,GAAkB,CAAvC,EAA0C;AACtC,uBAAI,CAAC2e,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBzO,MAAlB,CAAyB7P,CAAC,CAACsgB,MAA3B,CAApB;AACH;AACJ;AACJ,WAND;AAOH;;;eACD,+BAAmB;AAAA;;AACf,eAAKrb,OAAL,CAAa0G,GAAb,CAAiB,UAAA3L,CAAC,EAAI;AAClB,gBAAI,OAAI,CAACigB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6C6H,IAA7C,CAAkD,UAAAzI,CAAC;AAAA,qBAAIA,CAAC,CAAC7G,EAAF,IAAQ4G,CAAC,CAAC5G,EAAd;AAAA,aAAnD,CAAJ,EAA0E;AACtE,kBAAI4G,CAAC,IAAIA,CAAC,CAACsmB,WAAP,IAAsBtmB,CAAC,CAACsmB,WAAF,CAAc3mB,MAAd,GAAuB,CAAjD,EAAoD;AAChD,uBAAI,CAAC4e,gBAAL,GAAwB,OAAI,CAACA,gBAAL,CAAsB1O,MAAtB,CAA6B7P,CAAC,CAACsmB,WAA/B,CAAxB;AACH;AACJ;AACJ,WAND;AAOH;;;eAED,qBAAY3c,KAAZ,EAAsB;AAClB,eAAK4X,gBAAL;AACH;;;eAED,mBAAU5X,KAAV,EAAoB;AAChB,eAAK4X,gBAAL;AACH;;;eAED,uBAAc5X,KAAd,EAAwB;AACpB,eAAK4X,gBAAL;AACH;;;eAED,yBAAgB5X,KAAhB,EAA0B;AACtB,eAAK4X,gBAAL;AACH;;;eAED,0BAAiB5X,KAAjB,EAA2B;AACvB,eAAK4X,gBAAL;AACH;;;eAED,4BAAmB5X,KAAnB,EAA6B;AACzB,eAAK4X,gBAAL;AACH;;;eACD,2BAAkB5X,KAAlB,EAA4B;AACxB,eAAK4X,gBAAL;AACH;;;eAED,6BAAoB5X,KAApB,EAA8B;AAC1B,eAAK4X,gBAAL;AACH;;;eACD,wBAAY;AAAA;;AACR,cAAI,KAAKvd,WAAL,IAAoB,EAAxB,EAA4B;AACxB,iBAAKwF,wBAAL,GAAgCpM,MAAM,CAACM,UAAP,CAAkB,YAAM;AACpD,qBAAI,CAAC8f,iBAAL,GAAyB,OAAI,CAACvZ,aAAL,CAAmB,OAAI,CAACD,WAAxB,EAAqCG,GAA9D;AACA,qBAAI,CAACsZ,iBAAL,GAAyB,OAAI,CAACxZ,aAAL,CAAmB,OAAI,CAACD,WAAxB,EAAqCI,GAA9D;;AACA,kBAAI,OAAI,CAACmiB,SAAL,IAAkB,OAAI,CAACrI,YAAL,CAAkBve,MAAlB,IAA4B,CAAlD,EAAqD;AACjD,oBAAMuM,MAAM,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,YAAhB,EAAf;AACAD,sBAAM,CAACG,MAAP,CAAc,IAAIN,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,OAAI,CAACuR,iBAA5B,EAA+C,OAAI,CAACC,iBAApD,CAAd;;AACA,uBAAI,CAAC8I,SAAL,CAAeja,SAAf,CAAyBJ,MAAzB;;AACA,uBAAI,CAACqa,SAAL,CAAe1a,OAAf,CAAuB,CAAvB;AACH,eALD,MAKO;AACH,oBAAMK,OAAM,GAAG,IAAIH,MAAM,CAACC,IAAP,CAAYG,YAAhB,EAAf;;AACA,uBAAI,CAAC+R,YAAL,CAAkBre,OAAlB,CAA0B,UAAAuM,CAAC,EAAI;AAC3BA,mBAAC,CAACoa,WAAF,GAAgB,2FAAYpa,CAAC,CAACqa,MAAd,CAAhB;;AACAva,yBAAM,CAACG,MAAP,CAAc,IAAIN,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBG,CAAC,CAACsa,GAAzB,EAA8Bta,CAAC,CAACua,GAAhC,CAAd;AACH,iBAHD;;AAIA,uBAAI,CAACJ,SAAL,CAAeja,SAAf,CAAyBJ,OAAzB;;AAEA,oBAAM0a,cAAc,GAAG,IAAI7a,MAAM,CAACC,IAAP,CAAYG,YAAhB,EAAvB;;AACA,uBAAI,CAAC+R,YAAL,CAAkBre,OAAlB,CAA0B,UAAAuM,CAAC,EAAI;AAC3Bwa,gCAAc,CAACva,MAAf,CAAsB,IAAIN,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuBG,CAAC,CAACya,IAAzB,EAA+Bza,CAAC,CAAC0a,IAAjC,CAAtB;AACH,iBAFD;;AAGA,oBAAI,OAAI,CAACP,SAAL,IAAkBK,cAAtB,EAAsC;AAClC,yBAAI,CAACL,SAAL,CAAeza,SAAf,CAAyB8a,cAAc,CAACra,SAAf,EAAzB;AACH;;AACD,uBAAI,CAACga,SAAL,CAAe1a,OAAf,CAAuB,CAAvB;AACH;AACJ,aAzB+B,EAyB7B,GAzB6B,CAAhC;AA0BH;AACJ;;;eAED,uBAAclC,KAAd,EAAwB;AACpB,eAAK+W,eAAL,GAAuB/W,KAAK,CAAC/I,MAAN,CAAaC,KAApC;AACA,eAAK0gB,gBAAL;AACH;;;eAED,0BAAiBlmB,IAAjB,EAA6C;AACzC,eAAKmY,eAAL,GAAuBnY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAX,IAAgB9W,CAAC,CAAC8W,KAAF,IAAW,CAA/B;AAAA,WAAb,EAA+CC,KAA/C,EAAvB;AACA,eAAK1P,iBAAL,GAAyBpY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAf;AAAA,WAAb,EAA+BC,KAA/B,EAAzB;AACA,eAAKzP,gBAAL,GAAwBrY,IAAI,CAACyD,MAAL,CAAY,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC8W,KAAF,IAAW,CAAf;AAAA,WAAb,EAA+BC,KAA/B,EAAxB;AACH;;;eAED,4BAAgB;AACZ,eAAKzL,UAAL,CAAgB7X,OAAhB,CAAwB,UAAC8X,SAAD,EAAmC;AACvD,gBAAIA,SAAS,CAACC,UAAd,EAA0B;AACtBD,uBAAS,CAACC,UAAV,CAAqBC,IAArB,CAA0B,UAACD,UAAD,EAAgC;AACtDA,0BAAU,CAACwL,IAAX;AACH,eAFD;AAGH;AACJ,WAND,EADY,CAUZ;AACA;AACA;;AACA,cAAI,KAAKrF,WAAL,CAAiBza,YAAjB,CAA8BC,OAA9B,KAA0C,OAA9C,EAAuD;AACnD,iBAAK8f,iBAAL,CAAuB,KAAKtF,WAAL,CAAiBza,YAAjB,CAA8BjI,IAArD;AACH;AACJ;;;eAED,4BAAgB;AAAA;;AACZ,eAAK+mB,iBAAL;AACA,eAAKxN,WAAL,GAAmB,IAAnB;AACA,eAAK0O,kBAAL,GAA0BlmB,MAAM,CAACM,UAAP,CAAkB,YAAM;AAC9C,mBAAI,CAACqjB,kBAAL;;AACA,mBAAI,CAACoB,gBAAL;AACH,WAHyB,EAGvB,IAHuB,CAA1B;AAIC;;;eAEL,6BAAiB;AACb,cAAI,KAAKmB,kBAAT,EAA6B;AACzB7Z,yBAAa,CAAC,KAAK6Z,kBAAN,CAAb;AACH;;AACD,cAAI,KAAKC,mBAAT,EAA8B;AAC1B9Z,yBAAa,CAAC,KAAK8Z,mBAAN,CAAb;AACH;;AACD,cAAI,KAAK/Z,wBAAT,EAAmC;AAC/BC,yBAAa,CAAC,KAAKD,wBAAN,CAAb;AACH;;AACD,cAAI,KAAKga,wBAAT,EAAmC;AAC/B/Z,yBAAa,CAAC,KAAK+Z,wBAAN,CAAb;AACH;AACJ;;;eAED,4BAAmBC,QAAnB,EAA4B;AAAA;;AACxB,cAAI,KAAKxD,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAhC,IAAyC,EAAzC,IAA+C,KAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA9B,IAAuC,EAA1F,EAA8F;AAC1F;AACH;;AACD,cAAImf,OAAO,GAAG,EAAd;AAAkB,eAAKC,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,CAA4ChB,OAA5C,CAAoD,UAAAuM,CAAC;AAAA,mBAAI4T,OAAO,CAAC7e,IAAR,CAAaiL,CAAC,CAAC5S,IAAf,CAAJ;AAAA,WAArD;AAClB,cAAIkqB,WAAW,GAAG,EAAlB;AAAsB,eAAKzD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgDhB,OAAhD,CAAwD,UAAAuM,CAAC;AAAA,mBAAIsX,WAAW,CAACviB,IAAZ,CAAiBiL,CAAC,CAAChT,EAAnB,CAAJ;AAAA,WAAzD;AACtB,eAAKwY,oBAAL,GAA4B8R,WAA5B;AACA,cAAIxD,oBAAoB,GAAG,EAA3B;AACA,eAAKD,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,CAAgD8K,GAAhD,CAAoD,UAAA3L,CAAC,EAAI;AACrD,gBAAIkgB,oBAAoB,IAAI,EAA5B,EAAgCA,oBAAoB,GAAGlgB,CAAC,CAAC5G,EAAzB,CAAhC,KACK8mB,oBAAoB,IAAI,MAAMlgB,CAAC,CAAC5G,EAAhC;AACR,WAHD;AAIA,cAAI+mB,SAAS,GAAG,EAAhB;AAAoB,eAAKF,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,CAA8ChB,OAA9C,CAAsD,UAAAuM,CAAC;AAAA,mBAAI+T,SAAS,CAAChf,IAAV,CAAeiL,CAAC,CAAChT,EAAjB,CAAJ;AAAA,WAAvD;AACpB,cAAIgnB,aAAa,GAAG,EAApB;AAAwB,eAAKH,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,CAAsDhB,OAAtD,CAA8D,UAAAuM,CAAC;AAAA,mBAAIgU,aAAa,CAACjf,IAAd,CAAmBiL,CAAC,CAAChT,EAArB,CAAJ;AAAA,WAA/D;;AACxB,cAAIinB,gBAAgB,GAAGD,aAAa,CAAC5Y,IAAd,EAAvB;;AACA,cAAIuf,eAAe,GAAG,EAAtB;AAA0B,eAAK9G,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6ChB,OAA7C,CAAqD,UAAAuM,CAAC;AAAA,mBAAI2a,eAAe,CAAC5lB,IAAhB,CAAqBiL,CAAC,CAAChT,EAAvB,CAAJ;AAAA,WAAtD;;AAC1B,cAAI4tB,kBAAkB,GAAGD,eAAe,CAACvf,IAAhB,EAAzB;;AACA,cAAIkP,MAAM,GAAG;AACTrX,oBAAQ,EAAE2nB,kBAAkB,IAAI,IAAtB,GAA6B,EAA7B,GAAkCA,kBADnC;AAET1G,kBAAM,EAAEN,OAFC;AAGTiH,sBAAU,EAAEvD,WAHH;AAITnD,oBAAQ,EAAE,KAAKN,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAJjC;AAKT2f,kBAAM,EAAE,KAAKP,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAL7B;AAMT4f,wBAAY,EAAE,KAAKC,eANV;AAOTC,uBAAW,EAAET,oBAAoB,IAAI,EAAxB,GAA6B,IAA7B,GAAoCA,oBAPxC;AAQTtJ,sBAAU,EAAE,KAAKqJ,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAR7C;AAST9B,oBAAQ,EAAEohB,SATD;AAUT/gB,gCAAoB,EAAC,KAAK6gB,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAVxD;AAWT3B,gCAAoB,EAACmhB;AAXZ,WAAb;AAaA,eAAKzL,WAAL,GAAmB,IAAnB;AACA,cAAIvZ,IAAI,GAAG,KAAK8iB,iBAAhB;AACA,cAAI+I,QAAQ,GAAG,KAAf;;AAEA,cAAIzD,QAAQ,IAAI,KAAKtF,iBAAjB,IAAsC,KAAKA,iBAAL,CAAuBxe,MAAvB,GAAgC,CAA1E,EAA6E;AACzEtE,gBAAI,GAAGA,IAAI,CAACyD,MAAL,CAAY,UAAAmB,CAAC;AAAA,qBAAIA,CAAC,CAACwmB,MAAF,IAAYhD,QAAhB;AAAA,aAAb,CAAP;AACAyD,oBAAQ,GAAG,IAAX;AACH;;AACD,cAAI,CAACA,QAAL,EAAe;AACX,iBAAK9qB,iBAAL,CAAuB+qB,eAAvB,CAAuCzQ,MAAvC,EAA+C7Z,SAA/C,CAAyD,UAACxB,IAAD,EAAU;AAC/D,qBAAI,CAAC8iB,iBAAL,GAAyB9iB,IAAzB;;AACA,qBAAI,CAAC+rB,qBAAL,CAA2B/rB,IAA3B;AAEH,aAJD;AAKH,WAND,MAOI,KAAK+rB,qBAAL,CAA2B/rB,IAA3B,EA7CoB,CA8CxB;AACA;AACD;AACD;;AAED;;;eAEO,+BAAsBA,IAAtB,EAA4B;AAAA;;AAChC,eAAK6iB,YAAL,GAAoB7iB,IAApB;AACA,eAAKyqB,yBAAL,GAAiC,KAAK5H,YAAL,CAAkBpf,MAAlB,CAAyB,UAAA6J,CAAC;AAAA,mBAAEA,CAAC,CAAC8d,MAAF,IAAY,IAAZ,KAAqB9d,CAAC,CAAC8d,MAAF,IAAU,CAAV,IAAc9d,CAAC,CAAC8d,MAAF,IAAU,EAAxB,IAC9E9d,CAAC,CAAC8d,MAAF,IAAU,EADoE,IAC/D9d,CAAC,CAAC8d,MAAF,IAAU,EADqD,IAChD9d,CAAC,CAAC8d,MAAF,IAAU,EADiB,CAAF;AAAA,WAA1B,CAAjC,CAFgC,CAIhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAKxvB,OAAL,GAAe,KAAKinB,YAAL,CAAkBpf,MAAlB,CAAyB,UAACuoB,KAAD,EAAQpe,CAAR,EAAWqe,GAAX,EAAmB;AACvD,mBAAOA,GAAG,CAACpmB,OAAJ,CAAYomB,GAAG,CAAC5e,IAAJ,CAAS,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACvP,EAAF,KAASiuB,KAAK,CAACjuB,EAAnB;AAAA,aAAV,CAAZ,MAAkD6P,CAAzD;AACH,WAFc,CAAf;AAGA,eAAKhS,OAAL,GAAe,KAAKA,OAAL,CAAa6H,MAAb,CAAoB,UAAAsN,CAAC;AAAA,mBAAIA,CAAC,CAAC9S,IAAF,IAAU,IAAV,IAAkB8S,CAAC,CAAC9S,IAAF,IAAU2Y,SAA5B,IAAyC7F,CAAC,CAAC9S,IAAF,CAAOwH,IAAP,MAAiB,EAA9D;AAAA,WAArB,CAAf,CAfgC,CAgBhC;;AACA,eAAKkd,cAAL,GAAsB,EAAtB;AACA,cAAIuJ,YAAY,GAAG,EAAnB;AACAlsB,cAAI,IAAIA,IAAI,CAACsQ,GAAL,CAAS,UAAA3L,CAAC,EAAI;AAClB,gBAAI,CAACunB,YAAY,CAAC7e,IAAb,CAAkB,UAAAzI,CAAC;AAAA,qBAAIA,CAAC,IAAIA,CAAC,CAAC3G,IAAF,IAAU0G,CAAC,CAAC1G,IAArB;AAAA,aAAnB,CAAL,EAAoD;AAChDiuB,0BAAY,CAACpmB,IAAb,CAAkBnB,CAAlB;AACA,kBAAIA,CAAC,CAAC0mB,GAAF,IAAS,IAAT,IAAiB1mB,CAAC,CAAC2mB,GAAF,IAAS,IAA1B,IAAkC3mB,CAAC,CAAC1G,IAAF,IAAU,IAA5C,IAAoD0G,CAAC,CAAC1G,IAAF,IAAU2Y,SAA9D,IAA2EjS,CAAC,CAAC1G,IAAF,CAAOwH,IAAP,MAAiB,EAAhG,EACK,OAAI,CAAC7J,OAAL,IAAgB,OAAI,CAACA,OAAL,CAAa6H,MAAb,CAAoB,UAAAmB,CAAC;AAAA,uBAAIA,CAAC,CAAC3G,IAAF,IAAU0G,CAAC,CAAC1G,IAAhB;AAAA,eAArB,EAA2CqG,MAA3C,GAAoD,CAArE,GAA0E,EAA1E,GAA+E,OAAI,CAACqe,cAAL,CAAoB7c,IAApB,CAAyBnB,CAAzB,CAA/E;AACP;AACJ,WANO,CAAR,CAnBgC,CA0BhC;;AACA,eAAK+lB,YAAL;AACA,eAAKpC,qBAAL;AACA,eAAK/O,WAAL,GAAmB,KAAnB;AACA,eAAK4S,qBAAL;AAEH,S,CAED;AACA;AACA;AACA;AACA;AACA;;;;eAEA,4BAAgB;AAAA;;AACZ,eAAKjE,mBAAL,GAA2BnmB,MAAM,CAACymB,WAAP,CAAmB,YAAM;AAChD,gBAAIC,YAAY,EAAhB,EAAoB;AAChB,qBAAI,CAAC/C,kBAAL;AACH;AACJ,WAJ0B,EAIxB,KAAKlD,iBAAL,GAAyB,IAJD,CAA3B;AAKH;;;eAED,iCAAqB;AAAA;;AACjB,eAAKkG,oBAAL;AACA,eAAKjG,gBAAL,GAAwB,KAAKD,iBAA7B;AACA,eAAK2F,wBAAL,GAAgCpmB,MAAM,CAACymB,WAAP,CAAmB,YAAM;AACrD,gBAAIC,YAAY,EAAhB,EAAoB;AAChB,kBAAI,OAAI,CAAChG,gBAAL,IAAyB,CAA7B,EAAgC;AAC5B,uBAAI,CAACA,gBAAL,GAAwB,OAAI,CAACD,iBAA7B;;AACA,uBAAI,CAACkG,oBAAL;AACH,eAHD,MAGO;AACH,uBAAI,CAACjG,gBAAL;AACH;AACJ;AACJ,WAT+B,EAS7B,IAT6B,CAAhC;AAUH;;;eAED,gCAAoB;AAChB,cAAI,KAAK0F,wBAAT,EAAmC;AAC/B/Z,yBAAa,CAAC,KAAK+Z,wBAAN,CAAb;AACH;AACJ;;;eAED,kBAAS7X,GAAT,EAAiB;AACb,eAAK4a,SAAL,GAAiB5a,GAAjB;AACA,eAAKoa,YAAL;AACH;;;eAED,wBAAY;AACR,cAAI,KAAK7H,YAAL,CAAkBve,MAAlB,IAA4B,CAAhC,EAAmC;AAC/B,iBAAKomB,YAAL;AACH,WAFD,MAEO;AACH,iBAAKhkB,SAAL,GAAiB,CAAjB,CADG,CACiB;AACvB;AACJ;;;eAEM,+BAAsB;AAC1B;AACC,cAAIiiB,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2CnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2C8N,UAA3C,CAAsD,CAACkB,aAAvD;AACH;;;eAEM,yBAAgB;AACnB;AACA,cAAIA,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiCnU,KAArD;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,CAACkB,aAA7C;AACH;;;eAEM,uBAAc;AACjB;AACA,cAAIC,UAAU,GAAG,KAAKhE,UAAL,CAAgBjL,GAAhB,CAAoB,aAApB,EAAmCnU,KAApD;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,aAApB,EAAmC8N,UAAnC,CAA8C,CAACmB,UAA/C;AACH;;;eAEM,4BAAmB;AACtB,eAAKpgB,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACH;;;eACM,4BAAmB;AACvB;AACA,cAAIqgB,gBAAgB,GAAG,KAAKjE,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwC8N,UAAxC,CAAmD,CAACoB,gBAApD;AACF;;;eACM,iCAAwB;AAAA;;AAC3B,eAAKjtB,OAAL,CAAa4I,OAAb,CAAqB,UAAA4nB,KAAK,EAAI;AAC1B,mBAAI,CAACzI,oBAAL,CAA0B7d,IAA1B,CAA+BsmB,KAAK,CAACruB,EAArC;AACH,WAFD;AAGA,eAAKsuB,iBAAL,CAAuBC,oBAAvB,CAA4C,KAAK3I,oBAAjD,EAAuE,EAAvE;AACH;;;eACM,gBAAO4I,QAAP,EAAyB;AAC5B,eAAKF,iBAAL,CAAuBG,mBAAvB,CAA2CD,QAA3C,EAAqD,EAArD;AACH;;;eAEM,0BAAiBle,UAAjB,EAA6BC,KAA7B,EAA8C;AACjD,cAAI,KAAK2T,kBAAL,KAA4B,IAA5B,IAAoC,KAAKA,kBAAL,CAAwB8G,MAAhE,EAAwE;AACpE,iBAAK9G,kBAAL,CAAwB3f,KAAxB;AACH;;AACD,cAAI+L,UAAJ,EAAgB;AACZ,iBAAK4T,kBAAL,GAA0B5T,UAA1B;AACA,iBAAK4T,kBAAL,CAAwB8G,MAAxB,GAAiC,IAAjC;AACA1a,sBAAU,CAACrM,IAAX;AACH;AACJ;;;eAEM,4BAAmBqM,UAAnB,EAA+BC,KAA/B,EAAsE;AAAA,cAApB3B,KAAoB,uEAAJ,IAAI;;AACzE,cAAI,KAAKsV,kBAAL,KAA4B,IAA5B,IAAoC,KAAKA,kBAAL,CAAwB8G,MAA5D,IAAsE1a,UAAU,KAAK,IAAzF,EAA+F;AAC3F,iBAAK4T,kBAAL,CAAwB3f,KAAxB;AACA,iBAAK2f,kBAAL,CAAwB8G,MAAxB,GAAiC,KAAjC;AACH;;AACD,cAAI1a,UAAJ,EAAgB;AACZA,sBAAU,CAAC/L,KAAX;AACH;AACJ;;;eAEM,2BAAkBwmB,MAAlB,EAAsE;AAAA;;AAAA,cAAtBza,UAAsB,uEAAJ,IAAI;AACzEtM,gBAAM,CAACyM,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,eAAKkU,WAAL,GAAmB;AAAEza,wBAAY,EAAE;AAAEC,qBAAO,EAAE,OAAX;AAAoBlI,kBAAI,EAAE8oB;AAA1B;AAAhB,WAAnB;;AACA,cAAIza,UAAU,IAAIA,UAAU,CAAC0a,MAA7B,EAAqC;AACjC1a,sBAAU,CAAC/L,KAAX;AACH;;AACD,eAAK0gB,qBAAL,GAA6B,IAAI,sGAAJ,EAA7B;AACA,eAAKU,SAAL,GAAiB,IAAjB;AACA,eAAK3iB,iBAAL,CAAuBioB,0BAAvB,CAAkDF,MAAM,CAAC/qB,EAAzD,EAA6DyD,SAA7D,CAAuE,UAAAxB,IAAI,EAAI;AAC3E,gBAAIA,IAAJ,EAAU;AACN,qBAAI,CAACgjB,qBAAL,GAA6B,IAAI,sGAAJ,CAA4BhjB,IAA5B,CAA7B;;AACA,kBAAG,OAAI,CAACgjB,qBAAL,CAA2BnnB,QAA3B,CAAoCyI,MAApC,GAA6C,CAAhD,EACA;AACI,uBAAI,CAAC0e,qBAAL,CAA2BnnB,QAA3B,CAAoC2I,OAApC,CAA4C,UAAA8I,CAAC,EAAE;AAC3CA,mBAAC,CAACmf,WAAF,GAAgB,OAAI,CAAChC,yBAAL,CAA+BhnB,MAA/B,CAAsC,UAAAwI,GAAG;AAAA,2BAAEA,GAAG,CAACygB,gBAAJ,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC9mB,OAAhC,CAAwCyH,CAAC,CAACsf,OAA1C,CAAF;AAAA,mBAAzC,CAAhB;AACH,iBAFD;AAGH;;AACD,qBAAI,CAAClJ,SAAL,GAAiB,KAAjB;AACH,aATD,MAUK;AACD,qBAAI,CAACV,qBAAL,GAA6B,IAAI,sGAAJ,EAA7B;;AACA,gFAAaiG,UAAb,CAAwB,yBAAxB,EAAmD,sBAAnD,EAA2E,IAA3E;;AACA,qBAAI,CAACvF,SAAL,GAAiB,KAAjB;AACH;AACJ,WAhBD;AAiBH;;;eAEM,sBAAU;AACb,eAAKhB,WAAL,GAAmB;AAAEza,wBAAY,EAAE;AAAEC,qBAAO,EAAE,MAAX;AAAmBlI,kBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,WAAnB;AACH,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eAEQ,6BAAoB2M,KAApB,EAAiC;AACrC,cAAI,KAAKuV,uBAAL,IAAgC,IAAhC,IAAwC,KAAKD,kBAAL,IAA2B,IAAvE,EAA6E;AACzE,iBAAKY,YAAL,CAAkB,KAAKX,uBAAvB,EAAgDjjB,SAAhD,GAA4D,KAA5D;AACA,gBAAI,KAAKgjB,kBAAL,IAA2B,KAAKA,kBAAL,CAAwB8G,MAAvD,EACI,KAAK9G,kBAAL,CAAwB3f,KAAxB;AACJ,iBAAKooB,YAAL;AACH;AACJ;;;eACM,wBAAe/d,KAAf,EAA4B;AAC/B,cAAIA,KAAK,IAAI,KAAKuV,uBAAd,IAAyC,KAAKA,uBAAL,IAAgC,IAA7E,EAAmF;AAC/E,iBAAKW,YAAL,CAAkBlW,KAAlB,EAAyB1N,SAAzB,GAAqC,CAAC,KAAK4jB,YAAL,CAAkBlW,KAAlB,EAAyB1N,SAA/D;AACA,gBAAI,CAAC,KAAK4jB,YAAL,CAAkBlW,KAAlB,EAAyB1N,SAA9B,EACI,KAAKyrB,YAAL;AACP,WAJD,MAIO;AACH,iBAAKmC,mBAAL,CAAyBlgB,KAAzB;AACH;;AACD,eAAKuV,uBAAL,GAA+BvV,KAA/B;AACH;;;eACO,iCAAqB;AACzB,cAAIpK,WAAW,GAAG,uEAAeC,OAAf,CAAuB,uEAAeC,gBAAtC,CAAlB;;AACA,cAAIF,WAAW,IAAI,EAAnB,EAAuB;AACnB,iBAAKrB,cAAL,GAAsB,KAAtB;AACH,WAFD,MAGK;AACD,iBAAKA,cAAL,GAAsBqB,WAAtB;AACH;;AACD,cAAI,KAAKrB,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,iBAAK0jB,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,KAA5C,EAD8B,CAE9B;AACH;AAEJ;;;eACM,+BAAsByB,eAAtB,EAA+C;AAClD,4EAAaC,eAAb;;AACA,eAAKpoB,iBAAL,CAAuBqoB,oBAAvB,CAA4CF,eAA5C,EAA6D1nB,SAA7D,CAAuE,UAAAxB,IAAI,EAAI;AAC3E,gBAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;AACAlM,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmBrpB,IAAnB;AACH,aAHD,MAIK;AACDmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;;AACA,gFAAaJ,UAAb,CAAwB,+BAAxB,EAAyD,IAAzD,EAA+D,IAA/D;AACH;;AAED,8EAAaK,uBAAb,CAAqC,UAArC;;AACA,8EAAaC,gBAAb;AACH,WAZD;AAaH;;;eAGD,2BAAkBnB,QAAlB,EAA4B;AACxB,eAAKoB,gBAAL,GAAwBpB,QAAxB;AACA,eAAK1C,kBAAL,CAAwB0C,QAAxB,EAFwB,CAGxB;AACH;;;eAEO,mCAA0BnkB,gBAA1B,EAA4C;AAAA;;AAChD,eAAKsV,WAAL,GAAmB,IAAnB;AACA,eAAKvY,cAAL,CAAoBiU,oBAApB,CAAyChR,gBAAzC,EAA2DzC,SAA3D,CAAqE,UAAA0T,EAAE,EAAI;AACvE,mBAAI,CAACqE,WAAL,GAAmB,KAAnB;AACA,mBAAI,CAACpS,YAAL,GAAoB+N,EAApB;AACH,WAHD;AAIH;;;eAGD,sBAAa1P,KAAb,EAAoBikB,KAApB,EAA2B;AACvB,cAAI7nB,IAAI,GAAG4jB,MAAM,CAACkE,SAAP,CAAiB5X,QAAjB,CAA0B6X,IAA1B,CAA+BnkB,KAA/B,CAAX;AACA,cAAI5D,IAAI,KAAK4jB,MAAM,CAACkE,SAAP,CAAiB5X,QAAjB,CAA0B6X,IAA1B,CAA+BF,KAA/B,CAAb,EAAoD,OAAO,KAAP;AACpD,cAAI,CAAC,gBAAD,EAAmB,iBAAnB,EAAsC5jB,OAAtC,CAA8CjE,IAA9C,IAAsD,CAA1D,EAA6D,OAAO,KAAP;AAC7D,cAAIgoB,QAAQ,GAAGhoB,IAAI,KAAK,gBAAT,GAA4B4D,KAAK,CAAClB,MAAlC,GAA2CkhB,MAAM,CAACqE,IAAP,CAAYrkB,KAAZ,EAAmBlB,MAA7E;AACA,cAAIwlB,QAAQ,GAAGloB,IAAI,KAAK,gBAAT,GAA4B6nB,KAAK,CAACnlB,MAAlC,GAA2CkhB,MAAM,CAACqE,IAAP,CAAYJ,KAAZ,EAAmBnlB,MAA7E;AACA,cAAIslB,QAAQ,KAAKE,QAAjB,EAA2B,OAAO,KAAP;;AAC3B,cAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,KAAV,EAAiBC,KAAjB,EAAwB,CACrC,CADD;;AAEA,cAAIC,KAAJ;;AACA,cAAItoB,IAAI,KAAK,gBAAb,EAA+B;AAC3B,iBAAK,IAAIgM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgc,QAApB,EAA8Bhc,CAAC,EAA/B,EAAmC;AAC/Bmc,qBAAO,CAACvkB,KAAK,CAACoI,CAAD,CAAN,EAAW6b,KAAK,CAAC7b,CAAD,CAAhB,CAAP;AACH;AACJ,WAJD,MAIO;AACH,iBAAK,IAAItK,GAAT,IAAgBkC,KAAhB,EAAuB;AACnB,kBAAIA,KAAK,CAAC2kB,cAAN,CAAqB7mB,GAArB,CAAJ,EAA+B;AAC3BymB,uBAAO,CAACvkB,KAAK,CAAClC,GAAD,CAAN,EAAammB,KAAK,CAACnmB,GAAD,CAAlB,CAAP;AACH;AAAG;AAAM;;AAClB,iBAAO,IAAP;AAEH;;;eAEM,2BAAkB8mB,UAAlB,EAAsC;AACzC,eAAKxF,UAAL,GAAkBwF,UAAlB;AACA,eAAKlE,gBAAL;AACH;;;;;;;uBAhuBQsE,+B,EAA+B,8J,EAAA,0K,EAAA,wJ;AAAA,K;;;YAA/BA,+B;AAA+B,sD;AAAA;AAAA;+EAiFC,qE;;oEAW9B,uG,EAAiB,I;;oEAZd,qE,EAAkB,I;;;;;;;;;;;;;;;;;;;;;ADnGhC;;AACI;;AACI;;AAOA;;AACI;;AAA6B;AAAA,mBAAU,IAAAsC,eAAA,QAAV;AAAiC,WAAjC;;AACzB;;AAAqB;;AAAe;;AACpC;;AAGJ;;AACJ;;AACJ;;AACA;;AACI;;AACgC;AAAA,mBAAgB,IAAAC,WAAA,QAAhB;AAAmC,WAAnC,EAAqC,eAArC,EAAqC;AAAA;AAAA,WAArC;;AADhC;;AAEJ;;AACA;;AACI;;AACgC;AAAA,mBAAgB,IAAAC,SAAA,QAAhB;AAAiC,WAAjC,EAAmC,eAAnC,EAAmC;AAAA;AAAA,WAAnC;;AADhC;;AAEJ;;AACA;;AAAqC;AAAA,mBAAgB,IAAAC,oBAAA,EAAhB;AAAsC,WAAtC;;AACjC;;AAA0B;AAAA,mBAAS,IAAAC,gBAAA,EAAT;AAA2B,WAA3B;;AAA6B;;AAAkC;;AAAO;;AAChG;;AAAmC;AAAA,mBAAS,IAAArV,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAA8B;;AAAgD;;AAC3I;;AA0BJ;;AACJ;;AAKJ;;AAEI;;AACI;;AACI;;AAAY;AAAA,mBAAS,IAAAsV,mBAAA,EAAT;AAA8B,WAA9B;;AACR;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAG;AAAA,mBAAS,IAAAC,iBAAA,CAAkB,EAAlB,CAAT;AAA8B,WAA9B;;AACC;;AACA;;AACJ;;AAEJ;;AACA;;AACI;;AAAG;AAAA,mBAAS,IAAAA,iBAAA,CAAkB,EAAlB,CAAT;AAA8B,WAA9B;;AACC;;AACA;;AACJ;;AAEJ;;AACA;;AACI;;AAAG;AAAA,mBAAS,IAAAA,iBAAA,CAAkB,CAAlB,CAAT;AAA6B,WAA7B;;AACC;;AACA;;AACJ;;AAEJ;;AACA;;AACI;;AAAG;AAAA,mBAAS,IAAAA,iBAAA,CAAkB,EAAlB,CAAT;AAA8B,WAA9B;;AACC;;AACA;;AACJ;;AAEJ;;AAKJ;;AACJ;;AACA;;AACI;;AAAsB;;AAAiB;;AAAG;;;;AAAgD;;AAAK;;AAAO;;AAC1G;;AACA;;AACI;AAAA,mBAAY,IAAAC,QAAA,QAAZ;AAA4B,WAA5B;;AACA;;AA8CJ;;AACJ;;AACJ;;AAEA;;AACI;;AAKA;;AACI;;AAAkC;;AAAO;;AACzC;;AACI;;AACA;;AAAsF;AAAA,mBAAS,IAAAC,aAAA,QAAT;AAA8B,WAA9B;;AAAtF;;AACJ;;AACJ;;AAEA;;AACI;;AAWA;;AAWJ;;AACJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AACI;;AACI;;AAA4B;;AAAwB;;AACpD;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAM;;AACV;;AAAI;;AAAU;;AAClB;;AACJ;;AACA;;AACI;;AAMJ;;AACJ;;AACA;;AACI;;AAA0E;;AAAK;;AACnF;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AA8IA;;AAEA;;;;;;AAhX4B;;AAAA;;AACA;;AAAA;;AAOwE;;AAAA,2FAAuB,SAAvB,EAAuB,gBAAvB,EAAuB,SAAvB,EAAuB,YAAvB;;AAIF;;AAAA,2FAAuB,SAAvB,EAAuB,gBAAvB,EAAuB,SAAvB,EAAuB,UAAvB;;AAKK;;AAAA;;AACzD;;AAAA;;AAkC5B;;AAAA;;AAGkB;;AAAA;;AAOsC;;AAAA;;AAOA;;AAAA;;AAOD;;AAAA;;AAOC;;AAAA;;AAahB;;AAAA;;AAErC;;AAAA,uNAAoF,MAApF,EAAoF,aAApF,EAAoF,SAApF,EAAoF,EAApF,EAAoF,SAApF,EAAoF,CAApF,EAAoF,mBAApF,EAAoF,IAApF,EAAoF,0BAApF,EAAoF,iBAApF;;AAES;;AAAA;;AAkDT;;AAAA;;AACW;;AAAA;;AAc2B;;AAAA;;AAWA;;AAAA;;AA8B/B;;AAAA;;AAgKd;;AAAA,4FAA0D,yBAA1D,EAA0D,eAA1D;;;;;;;;;;sECtWD9C,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACP7nB,kBAAQ,EAAE,iCADH;AAEPC,qBAAW,EAAE,8CAFN;AAGPC,mBAAS,EAAE,CAAC,6CAAD;AAHJ,S;AAKiC,Q;;;;;;;;;;gBACvC;;;gBAEA;;;gBA6EA,0D;iBAAa,qE;;;gBACb,uD;iBAAU,oB,EAAsB;AAAE0nB,gBAAI,EAAE,qEAAR;AAA4B,sBAAQ;AAApC,W;;;gBAWhC,uD;iBAAU,uG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGa;;AACI;;AAKJ;;;;;;AAL6B;;AAAA,gIAAuD,UAAvD,EAAuD,yBAAvD,EAAuD,aAAvD,EAAuD,gBAAvD,EAAuD,MAAvD,EAAuD,kBAAvD;;;;;;AAJrC;;AACI;;AAAyH;;AAAc;;AACvI;;AASJ;;;;;;AAVyB;;AAAA,oFAAyB,WAAzB,EAAyB,SAAzB;;;;;;AAsCoC;;AAA2C;;AAAS;;;;;;AAAT;;AAAA;;;;;;AA2HhG;;AAEI;;AACJ;;;;;;;;AAH8C,kGAA4B,UAA5B,EAA4B,oDAA5B;;AAE1C;;AAAA;;;;;;;;AA9ExB;;AACI;;AACI;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAM;;AAC9D;;AAGJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAwD;;AAAI;;AAC5D;;AACwD;AAAA;;AAAA;;AAAA;AAAA;;AADxD;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAE;;AAC1D;;AACwD;AAAA;;AAAA;;AAAA;AAAA;;AADxD;;AAGJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAAwD;;AAAQ;;AAChE;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAU;;AAClE;;AAIJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAwD;;AAAsB;;AAC9E;;AAIJ;;AACJ;;AACA;;AACI;;AACI;;AAAwD;;AAAe;;AACvE;;AACI;;AAAqB;;AAAe;;AACpC;;AAIJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAAsB;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AACJ;;AACA;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA,mCAA0B,KAA1B;AAAkC;AAAS,SAA3C;;AAClB;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAzFyC;;AAAA,+HAAsD,UAAtD,EAAsD,wBAAtD,EAAsD,aAAtD,EAAsD,eAAtD,EAAsD,MAAtD,EAAsD,cAAtD;;AAUA;;AAAA,8HAAqD,UAArD,EAAqD,uBAArD,EAAqD,aAArD,EAAqD,eAArD,EAAqD,MAArD,EAAqD,mBAArD;;AAYlB;;AAAA,yFAAuB,SAAvB,EAAuB,mBAAvB;;AAQA;;AAAA,yFAAuB,SAAvB,EAAuB,mBAAvB;;AAUkB;;AAAA,kIAAyD,UAAzD,EAAyD,0BAAzD,EAAyD,aAAzD,EAAyD,iBAAzD,EAAyD,MAAzD,EAAyD,qBAAzD;;AASA;;AAAA,kIAAyD,UAAzD,EAAyD,0BAAzD,EAAyD,aAAzD,EAAyD,mBAAzD,EAAyD,MAAzD,EAAyD,uBAAzD;;AAWA;;AAAA,wIAA+D,UAA/D,EAA+D,0BAA/D,EAA+D,aAA/D,EAA+D,wBAA/D,EAA+D,MAA/D,EAA+D,4BAA/D;;AASI;;AAAA;;AACjB;;AAAA;;AACA;;AAAA;;;;;;AAsBpC;;;;;;AACiC,oGAA2B,YAA3B,EAA2B,iBAA3B;;;;;;AAGjC;;;;;;AACkC,oGAA2B,YAA3B,EAA2B,iBAA3B,EAA2B,iBAA3B,EAA2B,sBAA3B;;;;QC7KrBgD,wB;AAmFT,wCAAoBzsB,EAApB,EAA6CC,iBAA7C,EAA2F6gB,WAA3F,EAA6H5gB,cAA7H,EAAqKwsB,GAArK,EAA6L;AAAA;;AAAzK,aAAA1sB,EAAA,GAAAA,EAAA;AAAyB,aAAAC,iBAAA,GAAAA,iBAAA;AAA8C,aAAA6gB,WAAA,GAAAA,WAAA;AAAkC,aAAA5gB,cAAA,GAAAA,cAAA;AAAwC,aAAAwsB,GAAA,GAAAA,GAAA;AA3E9J,aAAAvL,kBAAA,GAA0B,IAA1B;AACA,aAAAC,uBAAA,GAAkC,IAAlC;AAGA,aAAAxb,SAAA,GAAY,CAAZ;AACA,aAAAyb,iBAAA,GAAoB,OAApB;AACA,aAAAC,iBAAA,GAAoB,CAAC,QAArB;AACA,aAAAC,YAAA,GAAqB,mCAAM,GAAGhW,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBiW,MAAxB,EAArB;AACA,aAAAC,UAAA,GAAqB,mCAAM,GAAGtS,MAAT,CAAgB,YAAhB,CAArB;AAEA,aAAA4R,eAAA,GAA2B,KAA3B;AACC,aAAAW,iBAAA,GAA4B,GAA5B,CAgEqL,CAhEpJ;;AAClC,aAAAC,gBAAA,GAA2B,KAAKD,iBAAhC;AACA,aAAAE,WAAA,GAAc;AAAEza,sBAAY,EAAE;AAAEC,mBAAO,EAAE,MAAX;AAAmBlI,gBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,SAAd;AAGA,aAAAiJ,aAAA,GAAgB;AACnBC,kBAAQ,EAAE;AADS,SAAhB;AAIP,aAAAxB,aAAA,GAA8B,IAAI,iDAAJ,EAA9B;AACO,aAAA9L,OAAA,GAAkC,EAAlC;AACA,aAAA+mB,cAAA,GAAyC,EAAzC;AACA,aAAAC,QAAA,GAAmC,EAAnC;AACA,aAAAC,YAAA,GAAuC,EAAvC;AACA,aAAAC,iBAAA,GAAoB,EAApB;AACA,aAAA3K,eAAA,GAA0C,EAA1C;AACA,aAAAC,iBAAA,GAA4C,EAA5C;AACA,aAAAC,gBAAA,GAA2C,EAA3C;AACA,aAAA0K,mBAAA,GAA8C,EAA9C;AACA,aAAAC,qBAAA,GAAiD,IAAI,sGAAJ,EAAjD;AACA,aAAApZ,OAAA,GAAmC,EAAnC;AACP,aAAAQ,qBAAA,GAAwB,+EAAxB;AACA,aAAAC,wBAAA,GAA2B,EAA3B;AACO,aAAA4Y,YAAA,GAAoB,EAApB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAvD,cAAA,GAAwB,qEAAxB;AACA,aAAAwD,gBAAA,GAAwB,EAAxB;AACA,aAAAtX,mBAAA,GAA2B,EAA3B;AACA,aAAA4T,iBAAA,GAAyB,EAAzB;AACA,aAAAC,kBAAA,GAA0B,EAA1B;AAIA,aAAAnJ,oBAAA,GAA4B,EAA5B;AACA,aAAA/N,YAAA,GAAwB,KAAxB;AACA,aAAA+W,UAAA,GAAsB,KAAtB;AACA,aAAApY,YAAA,GAAe,EAAf;AACA,aAAAmR,eAAA,GAAuB,EAAvB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,gBAAA,GAAwB,EAAxB;AACA,aAAAgL,4BAAA,GAAoC,EAApC;AACA,aAAAC,4BAAA,GAA6C,IAAI,4CAAJ,EAA7C;AACA,aAAAhL,eAAA,GAAgC,IAAI,4CAAJ,EAAhC;AACA,aAAAC,iBAAA,GAAkC,IAAI,4CAAJ,EAAlC;AACA,aAAAC,gBAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAGA,aAAAY,WAAA,GAAuB,IAAvB;AACA,aAAAmK,SAAA,GAAqB,IAArB;AAIA,aAAAC,oBAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAA2B,EAA3B;AACA,aAAA1iB,cAAA,GAA0B,KAA1B;AACA,aAAAusB,YAAA,GAAe,CAAf;AACA,aAAAC,cAAA,GAAiB,KAAjB;AACA,aAAAlkB,oBAAA,GAAgC,KAAhC;AACA,aAAAC,WAAA,GAAqB,EAArB;AACA,aAAA4U,gBAAA,GAAwB,EAAxB;AACA,aAAA3T,KAAA,GAAgB,CAAhB;AAKH,aAAK7I,WAAL,GAAoBJ,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAD,GAAwC,CAAEX,YAAY,CAACW,OAAb,CAAqB,aAArB,CAA1C,GAAiF,CAApG;AACA,YAAI,KAAKP,WAAL,IAAoB,CAAxB,EACI,KAAK6rB,cAAL,GAAsB,KAAtB;;AAEJ,YAAI9iB,KAAK,GAAG,IAAZ;;AACA7I,cAAM,CAAC8I,gBAAP,CAAwB,cAAxB,EAAwC,UAAUC,CAAV,EAAa;AACjDF,eAAK,CAACG,WAAN,CAAkB,IAAlB;;AACA;AACH,SAHD;AAIH;;;;eAED,oBAAW;AAAA;;AACP,eAAK4iB,aAAL;AACA,eAAK7J,qBAAL;AACA,eAAKX,gBAAL,GAAwB;AACpB/X,2BAAe,EAAE,KADG;AAEpBC,mBAAO,EAAE,MAFW;AAGpBC,qBAAS,EAAE,MAHS;AAIpBC,yBAAa,EAAE,YAJK;AAKpBC,2BAAe,EAAE,cALG;AAMpBC,0BAAc,EAAE,CANI;AAOpBC,6BAAiB,EAAE,IAPC;AAQpBC,0BAAc,EAAE;AARI,WAAxB;AAUA,eAAKE,mBAAL,GAA2B;AACvBT,2BAAe,EAAE,KADM;AAEvBC,mBAAO,EAAE,IAFc;AAGvBC,qBAAS,EAAE,MAHY;AAIvBC,yBAAa,EAAE,YAJQ;AAKvBC,2BAAe,EAAE,cALM;AAMvBC,0BAAc,EAAE,CANO;AAOvBC,6BAAiB,EAAE,IAPI;AAQvBC,0BAAc,EAAE;AARO,WAA3B;AAUA,eAAK8T,iBAAL,GAAyB;AACrBrU,2BAAe,EAAE,KADI;AAErBC,mBAAO,EAAE,IAFY;AAGrBC,qBAAS,EAAE,MAHU;AAIrBC,yBAAa,EAAE,YAJM;AAKrBC,2BAAe,EAAE,cALI;AAMrBC,0BAAc,EAAE,CANK;AAOrBC,6BAAiB,EAAE,IAPE;AAQrBC,0BAAc,EAAE;AARK,WAAzB;AAUA,eAAK+T,kBAAL,GAA0B;AACtBtU,2BAAe,EAAE,KADK;AAEtBC,mBAAO,EAAE,IAFa;AAGtBC,qBAAS,EAAE,MAHW;AAItBC,yBAAa,EAAE,YAJO;AAKtBC,2BAAe,EAAE,cALK;AAMtBC,0BAAc,EAAE,CANM;AAOtBC,6BAAiB,EAAE,IAPG;AAQtBC,0BAAc,EAAE;AARM,WAA1B;AAUA,eAAKoY,oBAAL;AACA,eAAK6J,mBAAL;AACA,eAAK7sB,iBAAL,CAAuBgU,oBAAvB,GAA8CvT,SAA9C,CAAwD,UAAAxB,IAAI,EAAI;AAC5D,mBAAI,CAAC4J,OAAL,GAAe5J,IAAf;;AACA,mBAAI,CAACgV,UAAL;AACH,WAHD;AAIA,eAAK/J,WAAL;AACH;;;eAEM,yBAAgB;AACnB,cAAIqX,MAAM,GAAG,KAAKzgB,WAAL,IAAoB,CAApB,IAAyB,uEAAeW,OAAf,CAAuB,uEAAe2kB,cAAtC,CAAzB,GAAiF,uEAAe3kB,OAAf,CAAuB,uEAAe2kB,cAAtC,CAAjF,GAAyI,KAAK5E,UAA3J;AACA,cAAIsL,QAAQ,GAAG,KAAKhsB,WAAL,IAAoB,CAApB,IAAyB,uEAAeW,OAAf,CAAuB,uEAAe0kB,gBAAtC,CAAzB,GAAmF,uEAAe1kB,OAAf,CAAuB,uEAAe0kB,gBAAtC,CAAnF,GAA6I,KAAK3E,UAAjK;AAEA,eAAKqC,UAAL,GAAkB,KAAK9jB,EAAL,CAAQgtB,KAAR,CAAc;AAC5B/pB,gCAAoB,EAAE,KAAKjD,EAAL,CAAQitB,OAAR,CAAgB,KAAhB,CADM;AAE5BC,qBAAS,EAAE,KAAKltB,EAAL,CAAQitB,OAAR,CAAgB,IAAhB,CAFiB;AAG5BE,+BAAmB,EAAE,KAAKntB,EAAL,CAAQitB,OAAR,CAAgB,KAAhB,CAHO;AAI5BG,uBAAW,EAAE,KAAKptB,EAAL,CAAQitB,OAAR,CAAgB,KAAhB,CAJe;AAK5BI,4BAAgB,EAAE,KAAKrtB,EAAL,CAAQitB,OAAR,CAAgB,KAAhB,CALU;AAM5B1P,4BAAgB,EAAE,KAAKvd,EAAL,CAAQitB,OAAR,CAAgB,EAAhB,CANU;AAO5BpkB,2BAAe,EAAE,KAAK7I,EAAL,CAAQitB,OAAR,CAAgB,EAAhB,CAPW;AAQ5BK,0BAAc,EAAE,KAAKttB,EAAL,CAAQitB,OAAR,CAAgB,EAAhB,CARY;AAS5BjQ,8BAAkB,EAAE,KAAKhd,EAAL,CAAQitB,OAAR,CAAgB,EAAhB,CATQ;AAU5BM,8BAAkB,EAAE,KAAKvtB,EAAL,CAAQitB,OAAR,CAAgB,EAAhB,CAVQ;AAW5BnqB,8BAAkB,EAAE,KAAK9C,EAAL,CAAQitB,OAAR,CAAgB,IAAhB,CAXQ;AAY5BlsB,uBAAW,EAAE,KAAKf,EAAL,CAAQitB,OAAR,CAAgB,KAAKlsB,WAArB,CAZe;AAa5BqjB,oBAAQ,EAAE,KAAKpkB,EAAL,CAAQitB,OAAR,CAAgBF,QAAhB,CAbkB;AAc5B1I,kBAAM,EAAE,KAAKrkB,EAAL,CAAQitB,OAAR,CAAgBzL,MAAhB,CAdoB;AAe5BjY,oCAAwB,EAAE,KAAKvJ,EAAL,CAAQitB,OAAR,CAAgB,EAAhB;AAfE,WAAd,CAAlB;AAiBH;;;eAED,gCAAuB;AAAA;;AACnB,eAAKrmB,aAAL,CAAmB2E,GAAnB,CAAuB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCC,YAAvC,CAClBpY,SADkB,CACR,UAAAid,MAAM,EAAI;AACjB,gBAAIA,MAAJ,EAAY;AACR,kBAAIzS,GAAG,GAAG,EAAV;AACA,kBAAIrC,eAAe,GAAG8U,MAAtB;AACA9U,6BAAe,CAACnF,OAAhB,CAAwB,UAAAyH,GAAG,EAAI;AAAED,mBAAG,CAAClG,IAAJ,CAASmG,GAAG,CAAClO,EAAb;AAAkB,eAAnD;AACA,kBAAI+X,gBAAgB,GAAG9J,GAAG,CAACG,IAAJ,EAAvB;;AACA,kBAAI,OAAI,CAAClI,gBAAL,IAAyB6R,gBAA7B,EAA+C;AAC3C,uBAAI,CAAC7R,gBAAL,GAAwB6R,gBAAxB;;AACA,uBAAI,CAAC6K,aAAL;AACH;AACJ;AACJ,WAZkB,CAAvB;AAaA,eAAKjZ,aAAL,CAAmB2E,GAAnB,CAAuB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCC,YAAxC,CAClBpY,SADkB,CACR,UAAAid,MAAM,EAAI;AACjB,mBAAI,CAACmG,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkD,EAAlD;AACH,WAHkB,CAAvB;AAIA,eAAK/f,aAAL,CAAmB2E,GAAnB,CAAuB,KAAKuY,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CC,YAA5C,CAClBpY,SADkB,CACR,UAAAid,MAAM,EAAI;AACjB,mBAAI,CAACmG,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwC8N,UAAxC,CAAmD,EAAnD;;AACA,mBAAI,CAAC7C,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkD,EAAlD;;AACA,mBAAI,CAAC6G,gBAAL;AACH,WALkB,CAAvB;AAMH;;;eAED,kCAAyB;AACrB,cAAI,KAAK5mB,aAAT,EAAwB;AACpB,iBAAKA,aAAL,CAAmBwG,WAAnB;AACH;AACJ;;;eACD,uBAAc;AAAA;;AACV,eAAKnN,iBAAL,CAAuB+K,sBAAvB,GAAgDtK,SAAhD,CAA0D,UAAAxB,IAAI,EAAI;AAC9D,mBAAI,CAACyJ,WAAL,GAAmBzJ,IAAnB;AACH,WAFD;AAGH;;;eAED,gCAAuB;AACnB,cAAI,KAAKwI,YAAT,EAAuB;AACnB,iBAAKA,YAAL,GAAoB,KAApB;AACH;AACJ;;;eAED,qBAAYiW,MAAZ,EAAmC;AAC/B,cAAI8P,YAAY,GAAG9sB,YAAY,CAACW,OAAb,CAAqB,cAArB,IAAuCX,YAAY,CAACW,OAAb,CAAqB,cAArB,CAAvC,GAA8E,CAAjG;;AACA,cAAIqc,MAAM,CAAC5c,WAAP,IAAsB4c,MAAM,CAAC5c,WAAP,CAAmB8c,YAA7C,EAA2D;AACvD,iBAAK8O,YAAL,GAAqBhsB,YAAY,CAACW,OAAb,CAAqB,cAArB,CAAD,GAAyC,CAAEX,YAAY,CAACW,OAAb,CAAqB,cAArB,CAA3C,GAAmF,CAAvG;;AACA,gBAAI,KAAKP,WAAL,IAAoB,CAAxB,EAA2B;AACvB,mBAAK4rB,YAAL,GAAoB,CAApB;AACAhsB,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAAK+rB,YAAL,CAAkB3b,QAAlB,EAArC;AACA,mBAAK4b,cAAL,GAAsB,KAAtB;AACAc,4BAAc,CAAC9sB,OAAf,CAAuB,gBAAvB,EAAyC,KAAKgsB,cAA9C;AACH,aALD,MAKO,IAAI,KAAK7rB,WAAL,IAAoB,CAApB,IAAyB,KAAK4rB,YAAL,IAAqB,CAA9C,IAAmDc,YAAY,IAAI,CAAvE,EAA0E;AAC7E,mBAAKd,YAAL,GAAoB,CAApB;AACAhsB,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAAK+rB,YAAL,CAAkB3b,QAAlB,EAArC;AACA,mBAAK4b,cAAL,IAAuB,MAAvB,GAAgC,KAAKA,cAAL,GAAsB,KAAtD,GAA8D,KAAKA,cAAL,GAAsB,MAApF;AACAc,4BAAc,CAAC9sB,OAAf,CAAuB,gBAAvB,EAAyC,KAAKgsB,cAA9C;AACH,aALM,MAKA,IAAI,KAAKD,YAAL,IAAqB,CAArB,IAA0B,KAAK5rB,WAAL,IAAoB,CAA9C,IAAmD0sB,YAAY,IAAI,CAAvE,EAA0E;AAC7E,mBAAKb,cAAL,GAAsBc,cAAc,CAACpsB,OAAf,CAAuB,gBAAvB,CAAtB;AACAosB,4BAAc,CAAC9sB,OAAf,CAAuB,gBAAvB,EAAyC,KAAKgsB,cAA9C;AACA,mBAAKD,YAAL,GAAoB,CAApB;AACAhsB,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,GAArC;AACH,aALM,MAKA,IAAI,KAAKG,WAAL,IAAoB,CAApB,IAAyB,KAAK4rB,YAAL,IAAqB,CAA9C,IAAmDc,YAAY,IAAI,CAAvE,EAA0E;AAC7E,mBAAKd,YAAL,IAAqB,CAArB,GAAyB,KAAKC,cAAL,GAAsB,KAA/C,GAAuD,EAAvD;AACAc,4BAAc,CAAC9sB,OAAf,CAAuB,gBAAvB,EAAyC,KAAKgsB,cAA9C;AACA,mBAAKD,YAAL,GAAoB,CAApB;AACAhsB,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAAK+rB,YAAL,CAAkB3b,QAAlB,EAArC;AAEA,mBAAK2b,YAAL,GAAoB,CAApB;AACAhsB,0BAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,GAArC;AACH,aARM,MAQA,IAAI6sB,YAAY,IAAI,CAAhB,IAAqB,KAAK1sB,WAAL,IAAoB,CAA7C,EAAgD;AACnD2sB,4BAAc,CAACpsB,OAAf,CAAuB,gBAAvB,IAA2C,KAAKsrB,cAAL,GAAsBc,cAAc,CAACpsB,OAAf,CAAuB,gBAAvB,CAAjE,GAA4G,KAA5G;AACH;;AACD,gBAAI,KAAKsrB,cAAL,IAAuB,IAAvB,IAA+B,KAAK7rB,WAAL,IAAoB,CAAvD,EAA0D;AAAE,mBAAK6rB,cAAL,GAAsB,KAAtB;AAA6B;AAE5F;;AACDa,sBAAY,GAAG,CAAf;AACA9sB,sBAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC6sB,YAAY,CAACzc,QAAb,EAArC;AACH;;;eAED,2BAAe,CACd;;;eAED,uBAAW;AACP,eAAKkV,sBAAL;AACA,eAAKjc,WAAL,CAAiB,IAAjB;AACH;;;eAED,uBAAcuD,KAAd,EAAyB;AACrB,eAAKmgB,eAAL;AACA,eAAKC,mBAAL;;AACA,cAAI,KAAKzqB,gBAAL,IAAyB,EAA7B,EAAiC;AAC7B,iBAAK8b,yBAAL,CAA+B,KAAK9b,gBAApC;AACH;AACJ;;;eAED,yBAAgBqK,KAAhB,EAA0B;AACtB,eAAK1K,kBAAL,GAA2B0K,KAAK,CAAC/I,MAAN,CAAaC,KAAb,IAAsB,MAAtB,IAAgC8I,KAAK,CAAC/I,MAAN,CAAaC,KAAb,IAAsB,IAAvD,GAA+D,IAA/D,GAAsE8I,KAAK,CAAC/I,MAAN,CAAaC,KAA7G,CADsB,CAEtB;AACH;;;eAED,2BAAe;AAAA;;AACX,eAAKyd,YAAL,GAAoB,EAApB;AACA,eAAKrZ,OAAL,CAAa0G,GAAb,CAAiB,UAAA3L,CAAC,EAAI;AAClB,gBAAI,OAAI,CAACigB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6C6H,IAA7C,CAAkD,UAAAzI,CAAC;AAAA,qBAAIA,CAAC,CAAC7G,EAAF,IAAQ4G,CAAC,CAAC5G,EAAd;AAAA,aAAnD,CAAJ,EAA0E;AACtE,kBAAI4G,CAAC,IAAIA,CAAC,CAACsgB,MAAP,IAAiBtgB,CAAC,CAACsgB,MAAF,CAAS3gB,MAAT,GAAkB,CAAvC,EAA0C;AACtC,uBAAI,CAAC2e,YAAL,GAAoB,OAAI,CAACA,YAAL,CAAkBzO,MAAlB,CAAyB7P,CAAC,CAACsgB,MAA3B,CAApB;AACH;AACJ;AACJ,WAND;AAOA,cAAIoB,cAAc,GAAG,KAAKzB,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,IAA+C,EAApE;AACA6gB,wBAAc,GAAGA,cAAc,CAAC5iB,MAAf,CAAsB,UAAA6J,CAAC,EAAI;AAAE,mBAAO,OAAI,CAAC2V,YAAL,CAAkB9N,IAAlB,CAAuB,UAAAb,EAAE;AAAA,qBAAIA,EAAE,CAACnW,IAAH,IAAWmP,CAAC,CAACnP,IAAjB;AAAA,aAAzB,CAAP;AAAyD,WAAtF,CAAjB;AACA,eAAKymB,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsC8N,UAAtC,CAAiDpB,cAAjD;AACH;;;eAED,+BAAmB;AAAA;;AACf,eAAKnD,gBAAL,GAAwB,EAAxB;AACA,eAAKtZ,OAAL,CAAa0G,GAAb,CAAiB,UAAA3L,CAAC,EAAI;AAClB,gBAAI,OAAI,CAACigB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6C6H,IAA7C,CAAkD,UAAAzI,CAAC;AAAA,qBAAIA,CAAC,CAAC7G,EAAF,IAAQ4G,CAAC,CAAC5G,EAAd;AAAA,aAAnD,CAAJ,EAA0E;AACtE,kBAAI4G,CAAC,IAAIA,CAAC,CAACsmB,WAAP,IAAsBtmB,CAAC,CAACsmB,WAAF,CAAc3mB,MAAd,GAAuB,CAAjD,EAAoD;AAChD,uBAAI,CAAC4e,gBAAL,GAAwB,OAAI,CAACA,gBAAL,CAAsB1O,MAAtB,CAA6B7P,CAAC,CAACsmB,WAA/B,CAAxB;AACH;AACJ;AACJ,WAND;AAOA,eAAK/H,gBAAL,GAAwB,KAAKxO,cAAL,CAAoB,KAAKwO,gBAAL,CAAsBvO,MAAtB,CAA6B,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,WAA7B,EAAoD,EAApD,CAApB,CAAxB;AAEA,cAAI2R,kBAAkB,GAAG,KAAK5B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,IAAmD,EAA5E;AACAghB,4BAAkB,GAAGA,kBAAkB,CAAC/iB,MAAnB,CAA0B,UAAA6J,CAAC,EAAI;AAAE,mBAAO,OAAI,CAAC4V,gBAAL,CAAsB/N,IAAtB,CAA2B,UAAAb,EAAE;AAAA,qBAAIA,EAAE,CAACvW,EAAH,IAASuP,CAAC,CAACvP,EAAf;AAAA,aAA7B,CAAP;AAAyD,WAA1F,CAArB;AACA,eAAK6mB,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqDjB,kBAArD;AACH;;;eAED,qBAAYlY,KAAZ,EAAsB;AAClB,cAAIA,KAAK,IAAI,EAAb,EAAiB;AACb,iBAAKsW,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CnZ,KAA3C;AACH;;AACD,cAAIgU,MAAM,GAAG,KAAKsC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA3C;AACA,cAAIqoB,QAAQ,GAAG,KAAKjJ,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAA/C;;AACA,cAAIqoB,QAAQ,IAAI,EAAZ,IAAkBvL,MAAM,IAAI,EAA5B,IACA,sEAAeqM,UAAf,CAA0BC,IAA1B,CAA+Bf,QAA/B,CADA,IAC4C,sEAAec,UAAf,CAA0BC,IAA1B,CAA+BtM,MAA/B,CADhD,EACwF;AACpF,gBAAIuM,SAAS,GAAG,mCAAM,CAAChB,QAAD,CAAN,CAAiBvL,MAAjB,EAAhB;;AACA,gBAAIwM,OAAO,GAAG,mCAAM,CAACxM,MAAD,CAAN,CAAeA,MAAf,EAAd;;AACA,gBAAIwM,OAAO,GAAGD,SAAd,EAAyB;AACrB,mBAAKjK,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8B8N,UAA9B,CAAyCnZ,KAAzC;AACH;;AACD,mFAAeygB,OAAf,CAAuB,uEAAe7H,gBAAtC,EAAwD,KAAKtC,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAxF;AACA,mFAAeupB,OAAf,CAAuB,uEAAe5H,cAAtC,EAAsD,KAAKvC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAApF;AACH;AACJ;;;eAED,mBAAU8I,KAAV,EAAoB;AAChB,cAAIA,KAAK,IAAI,EAAb,EAAiB;AACb,iBAAKsW,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8B8N,UAA9B,CAAyCnZ,KAAzC;AACH;;AACD,cAAIgU,MAAM,GAAG,KAAKsC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAA3C;AACA,cAAIqoB,QAAQ,GAAG,KAAKjJ,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAA/C;;AACA,cAAIqoB,QAAQ,IAAI,EAAZ,IAAkBvL,MAAM,IAAI,EAA5B,IACA,sEAAeqM,UAAf,CAA0BC,IAA1B,CAA+Bf,QAA/B,CADA,IAC4C,sEAAec,UAAf,CAA0BC,IAA1B,CAA+BtM,MAA/B,CADhD,EACwF;AACpF,gBAAIuM,SAAS,GAAG,mCAAM,CAAChB,QAAD,CAAN,CAAiBvL,MAAjB,EAAhB;;AACA,gBAAIwM,OAAO,GAAG,mCAAM,CAACxM,MAAD,CAAN,CAAeA,MAAf,EAAd;;AACA,gBAAIuM,SAAS,GAAGC,OAAhB,EAAyB;AACrB,mBAAKlK,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CnZ,KAA3C;AACH;;AACD,mFAAeygB,OAAf,CAAuB,uEAAe7H,gBAAtC,EAAwD,KAAKtC,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgCnU,KAAxF;AACA,mFAAeupB,OAAf,CAAuB,uEAAe5H,cAAtC,EAAsD,KAAKvC,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8BnU,KAApF;AACH;AACJ;;;eAEM,+BAAsB;AACzB,cAAImjB,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2CnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,qBAApB,EAA2C8N,UAA3C,CAAsD,CAACkB,aAAvD;AACH;;;eAEM,yBAAgB;AACnB,cAAIA,aAAa,GAAG,KAAK/D,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiCnU,KAArD;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,CAACkB,aAA7C;AACH;;;eAEM,uBAAc;AACjB,eAAKpJ,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACH;;;eAEM,4BAAmB;AACtB,eAAK/W,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACH;;;eACM,4BAAmB;AACtB,cAAIqgB,gBAAgB,GAAG,KAAKjE,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAA/D;AACA,eAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwC8N,UAAxC,CAAmD,CAACoB,gBAApD;AACH;;;eACM,sBAAU;AACb,eAAKnG,WAAL,GAAmB;AAAEza,wBAAY,EAAE;AAAEC,qBAAO,EAAE,MAAX;AAAmBlI,kBAAI,EAAE,IAAI,mGAAJ;AAAzB;AAAhB,WAAnB;AACH;;;eAEO,+BAAmB;AACvB,cAAI,KAAKkB,cAAL,IAAuB,IAA3B,EAAiC;AAC7B,gBAAI8tB,aAAa,GAAG,uEAAexsB,OAAf,CAAuB,uEAAeysB,YAAtC,CAApB;;AACA,gBAAID,aAAa,IAAI,EAArB,EAAyB;AACrB,mBAAKpK,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CuH,aAA3C;AACA,mBAAKpK,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8B8N,UAA9B,CAAyCuH,aAAzC;AACH;AACJ;AACJ;;;eAGO,iCAAqB;AACzB,cAAIzsB,WAAW,GAAG,uEAAeC,OAAf,CAAuB,uEAAeC,gBAAtC,CAAlB;;AACA,cAAIF,WAAW,IAAI,EAAnB,EAAuB;AACnB,iBAAKrB,cAAL,GAAsB,KAAtB;AACH,WAFD,MAGK;AACD,iBAAKA,cAAL,GAAsBqB,WAAtB;AACH;;AACD,cAAI,KAAKrB,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,iBAAK0jB,UAAL,CAAgBjL,GAAhB,CAAoB,WAApB,EAAiC8N,UAAjC,CAA4C,KAA5C;AACH;AAEJ;;;eACM,+BAAsByB,eAAtB,EAA+C;AAClD,4EAAaC,eAAb;;AACA,eAAKpoB,iBAAL,CAAuBqoB,oBAAvB,CAA4CF,eAA5C,EAA6D1nB,SAA7D,CAAuE,UAAAxB,IAAI,EAAI;AAC3E,gBAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;AACAlM,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmBrpB,IAAnB;AACH,aAHD,MAIK;AACDmd,eAAC,CAAC,UAAD,CAAD,CAAckM,IAAd,CAAmB,EAAnB;;AACA,gFAAaJ,UAAb,CAAwB,+BAAxB,EAAyD,IAAzD,EAA+D,IAA/D;AACH;;AAED,8EAAaK,uBAAb,CAAqC,UAArC;;AACA,8EAAaC,gBAAb;AACH,WAZD;AAcH;;;eACO,mCAA0BtlB,gBAA1B,EAA4C;AAAA;;AAChD,eAAKsV,WAAL,GAAmB,IAAnB;AACA,eAAKvY,cAAL,CAAoBiU,oBAApB,CAAyChR,gBAAzC,EAA2DzC,SAA3D,CAAqE,UAAA0T,EAAE,EAAI;AACvE,mBAAI,CAACqE,WAAL,GAAmB,KAAnB;AACA,mBAAI,CAACpS,YAAL,GAAoB+N,EAApB;;AACA,gBAAIuR,kBAAkB,GAAG,OAAI,CAAC7B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAAnE;;AACA,mBAAI,CAAC5B,kBAAL,GAA0B,OAAI,CAACuD,YAAL,CAAkB1D,MAAlB,CAAyB,UAAA6J,CAAC;AAAA,qBAAIA,CAAC,CAACiH,SAAF,IAAekS,kBAAnB;AAAA,aAA1B,EAAiEniB,MAAjE,GAA0E,CAA1E,GAA8EmiB,kBAA9E,GAAmG,IAA7H;;AACA,gBAAI,OAAI,CAAC7iB,kBAAL,IAA2B6iB,kBAA/B,EAAmD;AAC/C,qBAAI,CAAC7B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqD,OAAI,CAAC7jB,kBAA1D;AACH;AACJ,WARD;AASH;;;eAGK,qBAAYkT,WAAZ,EAAkC;;;;;;;;;AACpC,wBAAGA,WAAH,EAAe;AACX,2BAAK/V,iBAAL,CAAuBgW,UAAvB,CAAkC,4DAAUmY,uBAA5C,EAAqE1tB,SAArE,CAA+E,UAAAyK,GAAG,EAAI;AAClF,4BAAIA,GAAG,IAAIuZ,MAAM,CAACqE,IAAP,CAAY5d,GAAZ,EAAiB3H,MAAjB,GAA0B,CAArC,EAAwC;AAEpC,8BAAIP,oBAAoB,GAAG,OAAI,CAAC6gB,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAAvE;;AACA,8BAAK6Y,gBAAgB,GAAG,OAAI,CAACuG,UAAL,CAAgBjL,GAAhB,CAAoB,kBAApB,EAAwCnU,KAAxC,IAAiD,EAAzE;AACA,8BAAI2pB,cAAc,GAAe,IAAjC;AACAA,wCAAc,GAAGjY,IAAI,CAACC,KAAL,CAAWlL,GAAX,CAAjB;AACAkjB,wCAAc,CAAC,sBAAD,CAAd,GAAwCprB,oBAAxC;AACAorB,wCAAc,CAAC,kBAAD,CAAd,GAAoC9Q,gBAApC;AACA,8BAAI+Q,WAAW,GAAGlY,IAAI,CAACG,SAAL,CAAe8X,cAAf,CAAlB;;AACA,iCAAI,CAACpuB,iBAAL,CAAuBqW,eAAvB,CAAuC,4DAAU8X,uBAAjD,EAA0EE,WAA1E,EAAuF5tB,SAAvF;AACH;AACJ,uBAZD;AAaH,qBAdD,MAcK;AACG4tB,iCADH,GACiBlY,IAAI,CAACG,SAAL,CAAe,KAAKuN,UAAL,CAAgBpf,KAA/B,CADjB;AAED,2BAAKzE,iBAAL,CAAuBqW,eAAvB,CAAuC,4DAAU8X,uBAAjD,EAA0EE,WAA1E,EAAuF5tB,SAAvF;AACH;;;;;;;;;AAEJ;;;eAED,yBAAgB;AAAA;;AACZ,eAAKT,iBAAL,CAAuBgW,UAAvB,CAAkC,KAAK6N,UAAL,CAAgBjL,GAAhB,CAAoB,sBAApB,EAA4CnU,KAA9E,EAAqFhE,SAArF,CAA+F,UAAAxB,IAAI,EAAI;AACnG,mBAAI,CAAC4J,OAAL,GAAe5J,IAAf;AACA,mBAAI,CAACijB,YAAL,GAAoB,OAAI,CAACvO,cAAL,CAAoB1U,IAAI,CAACsQ,GAAL,CAAS,UAAAhD,CAAC;AAAA,qBAAIA,CAAC,CAAC2X,MAAN;AAAA,aAAV,EAAwBtQ,MAAxB,CAA+B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,aAA/B,EAAsD,EAAtD,CAApB,CAApB;AACA,mBAAI,CAAC8K,cAAL,GAAsB,OAAI,CAACjL,cAAL,CAAoB1U,IAAI,CAACsQ,GAAL,CAAS,UAAAhD,CAAC;AAAA,qBAAIA,CAAC,CAACE,QAAN;AAAA,aAAV,EAA0BmH,MAA1B,CAAiC,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,aAAjC,EAAwD,EAAxD,CAApB,CAAtB;AACA,mBAAI,CAACqO,gBAAL,GAAwB,OAAI,CAACxO,cAAL,CAAoB1U,IAAI,CAACsQ,GAAL,CAAS,UAAAhD,CAAC;AAAA,qBAAIA,CAAC,CAAC+hB,UAAN;AAAA,aAAV,EAA4B1a,MAA5B,CAAmC,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,CAACJ,MAAF,CAASK,CAAT,CAAV;AAAA,aAAnC,EAA0D,EAA1D,CAApB,CAAxB;AACH,WALD;AAMH;;;eACM,sBAAa;AAAA;;AAChB,eAAK9T,iBAAL,CAAuBgW,UAAvB,CAAkC,4DAAUmY,uBAA5C,EAAqE1tB,SAArE,CAA+E,UAAAyK,GAAG,EAAI;AAClF,gBAAIA,GAAG,IAAIuZ,MAAM,CAACqE,IAAP,CAAY5d,GAAZ,EAAiB3H,MAAjB,GAA0B,CAArC,EAAwC;AACpC,qBAAI,CAACgT,UAAL,CAAgBrL,GAAhB;AACH,aAFD,MAGK;AACD,kBAAI,OAAI,CAACrC,OAAL,IAAgB,OAAI,CAACA,OAAL,CAAatF,MAAb,GAAsB,CAA1C,EAA6C;AACzC,oBAAIgrB,SAAS,GAAG,CAAC,OAAI,CAAC1lB,OAAL,CAAa,CAAb,CAAD,CAAhB;;AACA,uBAAI,CAACgb,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkD6H,SAAlD;AACH;;AACD,qBAAI,CAACb,eAAL;;AACA,qBAAI,CAACC,mBAAL;;AACA,qBAAI,CAAC7M,eAAL,GAAuB,IAAvB;AACH;AACJ,WAbD;AAcH;;;eAED,wBAAezM,KAAf,EAAsB;AAClB,cAAMpJ,GAAG,GAAG,EAAZ;AACA,cAAIqJ,WAAW,GAAGD,KAAK,CAAC3R,MAAN,CAAa,UAAAiJ,IAAI;AAAA,mBAAIV,GAAG,CAACmJ,IAAJ,CAAS,UAAA7H,CAAC;AAAA,qBAAIA,CAAC,IAAIZ,IAAI,CAAC3O,EAAd;AAAA,aAAV,IAA8B,KAA9B,GAAsCiO,GAAG,CAAClG,IAAJ,CAAS4G,IAAI,CAAC3O,EAAd,CAA1C;AAAA,WAAjB,CAAlB;AACA,iBAAOsX,WAAW,CAACE,IAAZ,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACvX,IAAF,CAAOyX,aAAP,CAAqBD,CAAC,CAACxX,IAAvB,CAAV;AAAA,WAAjB,CAAP;AACH;;;eAEM,oBAAWgZ,KAAX,EAAuB;AAC1B,cAAIA,KAAK,IAAIuO,MAAM,CAACqE,IAAP,CAAY5S,KAAZ,EAAmB3S,MAAnB,GAA4B,CAAzC,EAA4C;AAExC;AACI,gBAAI6qB,cAAc,GAAGjY,IAAI,CAACC,KAAL,CAAWF,KAAX,CAArB;AAEA,mBAAOkY,cAAc,CAAC,UAAD,CAArB;AACA,mBAAOA,cAAc,CAAC,QAAD,CAArB;AACA,iBAAKvK,UAAL,CAAgB6C,UAAhB,CAA2B0H,cAA3B;;AACA,gBAAG,CAAC,KAAKvK,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAxC,IAAiD,CAAC,KAAKof,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,CAA6ClB,MAAlG,EAAyG;AACrG,kBAAI,KAAKsF,OAAL,IAAgB,KAAKA,OAAL,CAAatF,MAAjC,EACA;AACI,oBAAIgrB,SAAS,GAAG,CAAC,KAAK1lB,OAAL,CAAa,CAAb,CAAD,CAAhB;AACA,qBAAKgb,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkD6H,SAAlD;AACH;AACJ;;AACD,gBAAIH,cAAc,CAACvrB,kBAAf,IAAqC,EAAzC,EAA6C;AACzC,mBAAKghB,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqD,IAArD;AACA,mBAAK7jB,kBAAL,GAA0B,KAAKghB,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAApE;AACH;;AACD,iBAAKqc,eAAL,GAAuB,IAAvB;AACA,iBAAK2L,GAAL,CAAS+B,aAAT;AACA,gBAAIjb,EAAE,GAAgB,KAAKkb,KAAL,CAAWC,aAAjC;AACAnb,cAAE,CAACwW,KAAH;AACA,iBAAK2D,eAAL;AACA,iBAAKC,mBAAL;AACA,gBAAIgB,IAAI,GAAE,IAAV;AACArtB,sBAAU,CAAC,YAAY;AACnBqtB,kBAAI,CAACpB,gBAAL;AACF,aAFQ,EAEN,IAFM,CAAV,CA1BoC,CA6BxC;AACH;AACJ;;;eAEM,0BAAiBtY,GAAjB,EAAuB;AAAA;;AAC1B,eAAKjL,WAAL,CAAiB,KAAjB;AACA,eAAKL,KAAL,GAAa,CAAb;;AACA,cAAI,KAAKka,UAAT,EAAqB;AAEjB,gBAAIwB,eAAe,GAAG,KAAKxB,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuCnU,KAAvC,IAAgD,EAAtE;AACA4gB,2BAAe,CAAC5hB,OAAhB,CAAwB,UAAAyH,GAAG,EAAI;AAC3B,qBAAI,CAACvB,KAAL;AACH,aAFD;AAGA,gBAAI2b,cAAc,GAAG,KAAKzB,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsCnU,KAAtC,IAA+C,EAApE;AACA6gB,0BAAc,CAAC7hB,OAAf,CAAuB,UAAAyH,GAAG,EAAI;AAC1B,qBAAI,CAACvB,KAAL;AACH,aAFD;AAGA,gBAAI6b,kBAAkB,GAAG,KAAK3B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,IAAmD,EAA5E;AACA+gB,8BAAkB,CAAC/hB,OAAnB,CAA2B,UAAAyH,GAAG,EAAI;AAC9B,qBAAI,CAACvB,KAAL;AACH,aAFD;AAGA,gBAAI8b,kBAAkB,GAAG,KAAK5B,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0CnU,KAA1C,IAAmD,EAA5E;AACAghB,8BAAkB,CAAChiB,OAAnB,CAA2B,UAAAyH,GAAG,EAAI;AAC9B,qBAAI,CAACvB,KAAL;AACH,aAFD;AAGA,gBAAIL,wBAAwB,GAAG,KAAKua,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgDnU,KAAhD,IAAyD,EAAxF;;AACA,gBAAI6E,wBAAwB,IAAI,IAA5B,IAAoCA,wBAAwB,IAAI,WAApE,EAAiF;AAC7EA,sCAAwB,CAAC7F,OAAzB,CAAiC,UAAAyH,GAAG,EAAI;AACpC,uBAAI,CAACvB,KAAL;AACH,eAFD;AAGH,aAJD,MAKK;AACD,mBAAKka,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgD8N,UAAhD,CAA2D,CAA3D;AACH;AAEJ;;AAED,eAAKkI,aAAL,CAAmBC,iBAAnB,CAAqC,KAAKhL,UAA1C;AACA,eAAKiL,YAAL,CAAkBD,iBAAlB,CAAoC,KAAKhL,UAAzC;;AAEA,cAAG5O,GAAG,IAAE,KAAR,EAAc;AACV,8EAAaW,UAAb,CAAwB,6BAAxB,EAAuDC,SAAvD,EAAkEA,SAAlE;AACH,WAFD,MAEM,IAAGZ,GAAG,IAAI,OAAV,EAAkB;AACpB,8EAAaa,OAAb,CAAqB,2BAArB,EAAkDD,SAAlD,EAA6DA,SAA7D;AACH;AACJ;;;eAEM,4BAAgB;AACnB,cAAI0L,MAAM,GAAG,KAAKzgB,WAAL,IAAoB,CAApB,IAAyB,uEAAeW,OAAf,CAAuB,uEAAe2kB,cAAtC,CAAzB,GAAiF,uEAAe3kB,OAAf,CAAuB,uEAAe2kB,cAAtC,CAAjF,GAAyI,KAAK5E,UAA3J;AACA,cAAIsL,QAAQ,GAAG,KAAKhsB,WAAL,IAAoB,CAApB,IAAyB,uEAAeW,OAAf,CAAuB,uEAAe0kB,gBAAtC,CAAzB,GAAmF,uEAAe1kB,OAAf,CAAuB,uEAAe0kB,gBAAtC,CAAnF,GAA6I,KAAK3E,UAAjK;AACA,eAAKqC,UAAL,CAAgBjL,GAAhB,CAAoB,iBAApB,EAAuC8N,UAAvC,CAAkD,EAAlD;AACA,eAAK7C,UAAL,CAAgBjL,GAAhB,CAAoB,gBAApB,EAAsC8N,UAAtC,CAAiD,EAAjD;AACA,eAAK7C,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqD,EAArD;AACA,eAAK7C,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqD,EAArD;AACA,eAAK7C,UAAL,CAAgBjL,GAAhB,CAAoB,oBAApB,EAA0C8N,UAA1C,CAAqD,EAArD;AACA,eAAK7C,UAAL,CAAgBjL,GAAhB,CAAoB,UAApB,EAAgC8N,UAAhC,CAA2CoG,QAA3C;AACA,eAAKjJ,UAAL,CAAgBjL,GAAhB,CAAoB,QAApB,EAA8B8N,UAA9B,CAAyCnF,MAAzC;AACA,eAAKsC,UAAL,CAAgBjL,GAAhB,CAAoB,0BAApB,EAAgD8N,UAAhD,CAA2D,EAA3D;AAEA,eAAK6G,gBAAL,CAAsB,OAAtB;AACH;;;;;;;uBAhjBQf,wB,EAAwB,4H,EAAA,8J,EAAA,0K,EAAA,wJ,EAAA,gI;AAAA,K;;;YAAxBA,wB;AAAwB,6C;AAAA;AAAA;;;oEAItB,sG,EAA+B,I;;oEAC/B,yG,EAAgC,I;;+EA4DF,qE;;oEAgB9B,uG,EAAiB,I;;oEAjBd,qE,EAAkB,I;;;;;;;;;;;;;;;;;;;;;;;;;ADzFpC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACA;;AAA4D;;AAAyB;;AACzF;;AACA;;AAYJ;;AAEA;;AAOI;;AACJ;;AACJ;;AACJ;;AAEA;;AAKA;;AAKA;;AAEI;;AAA2I;AAAA;;AAAA;;AAAA,mBAAS,UAAT;AAAiB,WAAjB;;AAC3G;;AAAqC;;AAA2D;;AAAI;;AAAO;;AAC3I;;AAAmC;AAAA,mBAAS,IAAA1V,aAAA,EAAT;AAAwB,WAAxB;;AAC/B;;AAA8B;;AAClC;;AAyCJ;;AACJ;;AACA;;AAkGJ;;AACA;;AAIA;;;;;;AArMwC;;AASF;;AAAA;;AAsCL;;AAAA,sFAAyB,WAAzB,EAAyB,SAAzB;;AACsD;;AAAA;;AAEzC;;AAAA;;AA+Ib;;AAAA;;AAIC;;AAAA;;;;;;;;;;sEC5KrB0V,wB,EAAwB;cANpC,uDAMoC;eAN1B;AACP5qB,kBAAQ,EAAE,wBADH;AAEPC,qBAAW,EAAE,qCAFN;AAGPC,mBAAS,EAAE,CAAC,qCAAD,CAHJ;AAIPkV,uBAAa,EAAE,gEAAkBC;AAJ1B,S;AAM0B,Q;;;;;;;;;;;;;;gBAChC;;;gBACA,uD;iBAAU,O;;;gBAEV,uD;iBAAU,sG;;;gBACV,uD;iBAAU,yG;;;gBA2DV,0D;iBAAa,qE;;;gBACb,uD;iBAAU,oB,EAAsB;AAAEuS,gBAAI,EAAE,qEAAR;AAA4B,sBAAQ;AAApC,W;;;gBAgBhC,uD;iBAAU,uG;;;;;;;;;;;;AC1Gf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMuF,eAAe,GAAW,CAC5B;AACIC,UAAI,EAAE,EADV;AAEIC,eAAS,EAAE;AAFf,KAD4B,EAK5B;AACID,UAAI,EAAE,WADV;AAEIC,eAAS,EAAE;AAFf,KAL4B,EAS5B;AACID,UAAI,EAAE,iBADV;AAEIC,eAAS,EAAE;AAFf,KAT4B,CAAhC;;QAuBaC,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBAPvB,CACL,6DAAaC,QAAb,CAAsBJ,eAAtB,CADK,CAOuB,EAH5B,4DAG4B;;;;0HAAvBG,uB,EAAuB;AAAA;AAAA,kBAH5B,4DAG4B;AAAA,O;AAHhB,K;;;;;sEAGPA,uB,EAAuB;cARnC,sDAQmC;eAR1B;AACNE,iBAAO,EAAE,CACL,6DAAaD,QAAb,CAAsBJ,eAAtB,CADK,CADH;AAINM,iBAAO,EAAE,CACL,4DADK;AAJH,S;AAQ0B,Q;;;;;;;;;;AC5BpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgDaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAZhB,CACL,4DADK,EAEL,gEAFK,EAGL,kFAHK,EAIL,mEAJK,EAKL,0EALK,EAML,wDANK,EAOL,oEAPK,EAQL,8EARK,EASL,2DATK,CAYgB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAxBrB,iHAwBqB,EAvBrB,0FAuBqB,EAtBrB,2GAsBqB,EArBrB,2HAqBqB,EApBrB,6HAoBqB,EAnBrB,yGAmBqB,EAlBrB,uGAkBqB,EAjBrB,uGAiBqB,EAhBrB,+GAgBqB,EAfrB,gIAeqB,EAdrB,oHAcqB;AAdE,kBAGvB,4DAHuB,EAIvB,gEAJuB,EAKvB,kFALuB,EAMvB,mEANuB,EAOvB,0EAPuB,EAQvB,wDARuB,EASvB,oEATuB,EAUvB,8EAVuB,EAWvB,2DAXuB;AAcF,O;AAHV,K;;;;;sEAGNA,gB,EAAgB;cA1B5B,sDA0B4B;eA1BnB;AACNC,sBAAY,EAAE,CACV,iHADU,EAEV,0FAFU,EAGV,2GAHU,EAIV,2HAJU,EAKV,6HALU,EAMV,yGANU,EAOV,uGAPU,EAQV,uGARU,EASV,+GATU,EAUV,gIAVU,EAWV,oHAXU,CADR;AAcNH,iBAAO,EAAE,CACL,4DADK,EAEL,gEAFK,EAGL,kFAHK,EAIL,mEAJK,EAKL,0EALK,EAML,wDANK,EAOL,oEAPK,EAQL,8EARK,EASL,2DATK;AAdH,S;AA0BmB,Q","file":"dispatcher-dispatcher-module-es5.js","sourcesContent":["import { DateFilter, DeliveryGroupStatus, DeliveryReqPriority, ObjectFilter, PickupLocationType, QueueFilter, RegionFilter, TripStatus } from 'src/app/app.enum';\r\nimport { DropdownItem } from 'src/app/statelist.service';\r\n\r\nexport class LoadFilterModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Suppliers: DropdownItem[];\r\n    public Carriers: DropdownItem[];\r\n}\r\n\r\nexport class DipTestViewModel {\r\n    public SiteName: string;\r\n    public CompanyName: string;\r\n    public Id: number;\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public TankName: string;\r\n    public StorageId: string;\r\n    public Level: number;\r\n    public Ullage: number;\r\n    public GrossVolume: number;\r\n    public NetVolume: number;\r\n    public WaterNetLevel: number;\r\n    public WaterGrossLevel: number;\r\n    public CaptureTime: string;\r\n    public ProductName: string;\r\n    public DataSourceTypeId: number;\r\n    public BuyerCompanyId: number;\r\n    public BuyerCompanyName: string;\r\n    public JobName: string;\r\n    public UoM: string;\r\n    public JobId: number;\r\n    public CreatedByRegionId: string;\r\n    public IsDRExists: boolean;\r\n    public ExistingDR: PartialDRDetails[] = [];\r\n    public DisplayDRDetails: boolean;\r\n    public TankCapacity: number;\r\n    public TankMinFill: number;\r\n    public TankMaxFill: number;\r\n    public CurrentThreshold: number;\r\n    public FillType: number;\r\n    public ReorderPercent: number;\r\n    public OrderId: number;\r\n    public ReorderQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class TankCapacityForDR {\r\n    public Priority: DeliveryReqPriority;\r\n    public MaxPercent: number;\r\n    public MinPercent: number;\r\n}\r\n\r\nexport class ModifiedTripInfo {\r\n    public ShiftIndex: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n}\r\n\r\nexport class CreateDeliveryRequestViewModel {\r\n    public SiteId: string;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public RequiredQuantity: number;\r\n    public Priority: DeliveryReqPriority;\r\n}\r\n\r\nexport class CustomerJobsForCarrier {\r\n    CompanyId: number;\r\n    CompanyName: string;\r\n    Jobs: DropdownItem[];\r\n}\r\n\r\nexport class PartialDRDetails {\r\n    public Priority: DeliveryReqPriority;\r\n    public ScheduleStatusName: string;\r\n    public RequiredQuantity: number;\r\n    public CreatedOn: string;\r\n}\r\n\r\n\r\nexport enum TfxModule {\r\n    None,\r\n    SupplierWallyboardLocation,\r\n    SupplierWallyboardLoads,\r\n    SupplierWallyboardSales,\r\n    SupplierWallyboardSalesPriority,\r\n    SupplierWallyboardSalesTanks,\r\n    BuyerWallyboardLocation,\r\n    BuyerWallyboardLoads,\r\n    BuyerWallyboardSales,\r\n    BuyerWallyboardSalesPriority,\r\n    BuyerWallyboardSalesTanks,\r\n    BuyerWallyboardSalesLocation,\r\n    AssignedByMeDeliveryRequests,\r\n    DSBShift\r\n}\r\n\r\nexport enum WindowModeFilter {\r\n    Single = 1,\r\n    Multi = 2\r\n}\r\n\r\nexport enum UoM {\r\n    None = 0,\r\n    Gallons = 1,\r\n    Litres = 2\r\n}\r\n\r\nexport class DeliveryRequestViewModel {\r\n    constructor() {\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.PickupLocationType = 1;\r\n        this.WindowMode = 1;\r\n        this.QueueMode = 1;\r\n    }\r\n    public Id: string;\r\n    public JobId: number;\r\n    public JobAddress: string;\r\n    public JobCity: string;\r\n    public JobName: string;\r\n    public ProductType: string;\r\n    public FuelTypeId: number;\r\n    public FuelType: string;\r\n    public SiteId: string;\r\n    public UoM: number;\r\n    public RequiredQuantity: number;\r\n    public Priority: number;\r\n    public AssignedToCompanyId: number;\r\n    public CreatedByCompanyId: number;\r\n    public SupplierCompanyId: number;\r\n    public Status: number;\r\n    public PreviousStatus: number;\r\n    public ScheduleStatus: number;\r\n    public SchedulePreviousStatus: number;\r\n    public OrderId: number;\r\n    public CreatedByRegionId: string;\r\n    public AssignedToRegionId: string;\r\n    public PickupLocationType: number;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public IsDeleted: boolean;\r\n    public DeliveryGroupId: number;\r\n    public DeliveryScheduleId: number;\r\n    public TrackableScheduleId: number;\r\n    public ParentId: string;\r\n    public CustomerCompany: string;\r\n    public WindowMode: number;\r\n    public QueueMode: number;\r\n    public TrackScheduleStatus: number;\r\n    public TrackScheduleStatusName: string;\r\n    public TrackScheduleEnrouteStatus: number;\r\n    public StatusClassId: number;\r\n    public TankId: string;\r\n    public StorageId: string;\r\n    public TankMaxFill: number;\r\n    public IsNotCompatible: boolean;\r\n    public IsAutoCreatedDR: boolean;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public SourceTripId: string;\r\n    public IsCommonBadge: boolean;\r\n    public DispactherNote: string;\r\n    public PreLoadedFor: string;\r\n    public PreLoadInfo: LoadInfo;\r\n    public PostLoadedFor: string;\r\n    public PostLoadInfo: LoadInfo;\r\n    public IsDRExists: boolean;\r\n    public IsDRMissed: boolean;\r\n    public ProductSequence: number;\r\n}\r\n\r\nexport class RegionDetailModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Shifts = [];\r\n    }\r\n    public Id: string;\r\n    public Drivers: DropdownItem[]\r\n    public Trailers: TrailerViewModel[]\r\n    public Shifts: ShiftModel[]\r\n}\r\n\r\nexport class ShiftModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public CompanyId: number;\r\n    public StartTime: string;\r\n    public DisplayStartTime: string;\r\n    public EndTime: string;\r\n    public DisplayEndTime: string;\r\n    public CreatedOn: string;\r\n    public CreatedBy: number;\r\n    public IsDeleted: boolean;\r\n    public IsActive: boolean;\r\n}\r\n\r\nexport class ScheduleBuilderModel {\r\n    constructor() {\r\n        this.Shifts = [];\r\n        this.Trailers = [];\r\n    }\r\n    public Id: string;\r\n    public Date: string;\r\n    public RegionId: string;\r\n    public ObjectFilter: ObjectFilter;\r\n    public RegionFilter: RegionFilter;\r\n    public DateFilter: DateFilter;\r\n    public Shifts: ScheduleShiftModel[];\r\n    public Trailers: TrailerViewModel[];\r\n    public TimeStamp: number;\r\n    public Status: DeliveryGroupStatus;\r\n    public DeletedTripId: string;\r\n    public DeletedGroupId: number;\r\n    public IsLoadReset: boolean;\r\n    public WindowMode: WindowModeFilter;\r\n    public ToggleRequestMode: QueueFilter;\r\n}\r\n\r\nexport class DSBSaveModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public PreloadedDRs: any[] = [];\r\n    public PostloadedDRs: any[] = [];\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class DRDragDropModel extends ScheduleBuilderModel {\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public SourceTrip: TripModel;\r\n    public DestinationTrip: TripModel;\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n}\r\n\r\nexport class SbDriverViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Shifts = [];\r\n    }\r\n    public Shifts: ScheduleShiftModel[];\r\n}\r\n\r\nexport class SbTrailerViewModel extends ScheduleBuilderModel {\r\n    constructor() {\r\n        super();\r\n        this.Trailers = [];\r\n    }\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewModel {\r\n    public Id: string;\r\n    public TrailerId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public Compartments: number;\r\n    public TrailerType: string;\r\n    public Shifts: TrailerShiftModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class TrailerShiftModel {\r\n    public ShiftId: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Trips: TripModel[];\r\n}\r\n\r\nexport class ScheduleShiftModel {\r\n    constructor() {\r\n        this.Schedules = [];\r\n        this.IsCollapsed = false;\r\n    }\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n    public Schedules: TrailerModel[];\r\n    public IsCollapsed: boolean;\r\n}\r\n\r\nexport class ShiftDetailModel {\r\n    public Id: string;\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public SlotPeriod: number;\r\n}\r\n\r\nexport class TrailerModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Trips = [];\r\n    }\r\n    public Trips: TripModel[];\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n}\r\n\r\nexport class LocationFilters {\r\n    public IsShowCarrierManaged: boolean;\r\n    public state: number[] = [];\r\n    public city: number[] = [];\r\n    public product: string[] = [];\r\n    public priority: number[] = [];\r\n    public customer: number[] = [];\r\n    public supplier: SelectedItem[] = [];\r\n    public carrier: SelectedItem[] = [];\r\n}\r\n\r\nexport class TripModel {\r\n    constructor() {\r\n        this.DeliveryRequests = [];\r\n        this.Terminal = new DropdownItem();\r\n        this.BulkPlant = new DropAddressModel();\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n    }\r\n    public TripId: string;\r\n    public GroupId: number;\r\n    public StartDate: string;\r\n    public DeliveryRequests: DeliveryRequestViewModel[];\r\n    public StartTime: string;\r\n    public EndTime: string;\r\n    public LoadCode: string;\r\n    public RouteInfo: string;\r\n    public SupplierSource: string;\r\n    public Carrier: string;\r\n    public TimeStamp: number;\r\n    public DriverRowIndex: number;\r\n    public DriverColIndex: number;\r\n    public TrailerRowIndex: number;\r\n    public TrailerColIndex: number;\r\n    public ShiftIndex: number;\r\n    public TripStatus: TripStatus;\r\n    public ShiftId: string;\r\n    public ShiftStartTime: string;\r\n    public ShiftEndTime: string;\r\n    public SlotPeriod: number;\r\n    public TripPrevStatus: TripStatus;\r\n    public DeliveryGroupStatus: DeliveryGroupStatus;\r\n    public DeliveryGroupPrevStatus: DeliveryGroupStatus;\r\n    public PickupLocationType: PickupLocationType;\r\n    public IsCommonPickup: boolean;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public IsEditable: boolean;\r\n    public DriverScheduleMappingId?: string;\r\n    public BadgeNo1: string;\r\n    public BadgeNo2: string;\r\n    public BadgeNo3: string;\r\n    public IsCommonBadge: boolean;\r\n}\r\n\r\nexport class DropAddressModel {\r\n    constructor() {\r\n        this.State = new DropdownItem();\r\n        this.Country = new DropdownItem();\r\n    }\r\n    public Address: string;\r\n    public City: string;\r\n    public State: DropdownItem;\r\n    public Country: DropdownItem;\r\n    public ZipCode: string;\r\n    public CountyName: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public SiteName: string;\r\n    public SiteId: number;\r\n}\r\n\r\nexport class OrderPickupDetailModel {\r\n    public OrderId: number;\r\n    public PoNumber: string;\r\n    public TerminalName: string;\r\n    public TerminalId: number;\r\n    public PickupLocationType: number = 1;\r\n    public BulkplantName: string;\r\n    public Address: string;\r\n    public City: string;\r\n    public StateCode: string;\r\n    public StateId: number;\r\n    public CountryCode: string;\r\n    public ZipCode: string;\r\n    public Latitude: number;\r\n    public Longitude: number;\r\n    public CountyName: string;\r\n    public TimeZoneName: string;\r\n}\r\n\r\nexport class OrderPickupLocationModel {\r\n    public PickupLocationType: PickupLocationType;\r\n    public Terminal: DropdownItem;\r\n    public BulkPlant: DropAddressModel;\r\n    public static ToLocation(orderPickupDetail: OrderPickupDetailModel): OrderPickupLocationModel {\r\n        let location = new OrderPickupLocationModel();\r\n        location.PickupLocationType = orderPickupDetail.PickupLocationType;\r\n        location.Terminal = {\r\n            Id: orderPickupDetail.TerminalId,\r\n            Name: orderPickupDetail.TerminalName,\r\n            Code: ''\r\n        };\r\n        location.BulkPlant = {\r\n            Address: orderPickupDetail.Address,\r\n            City: orderPickupDetail.City,\r\n            State: { Id: orderPickupDetail.StateId, Code: orderPickupDetail.StateCode, Name: null },\r\n            Country: { Id: 0, Code: orderPickupDetail.CountryCode, Name: null },\r\n            ZipCode: orderPickupDetail.ZipCode,\r\n            CountyName: orderPickupDetail.CountyName,\r\n            Latitude: orderPickupDetail.Latitude,\r\n            Longitude: orderPickupDetail.Longitude,\r\n            SiteName: orderPickupDetail.BulkplantName,\r\n            SiteId: null\r\n        };\r\n        return location;\r\n    }\r\n}\r\n\r\nexport class WhereIsMyDriverModel {\r\n    public Id: number;\r\n    public Name: string;\r\n    public Intl: string;\r\n    public PhNo: string;\r\n    public Lat: number;\r\n    public Lng: number;\r\n    public LicNo: string;\r\n    public LdPri: number;\r\n    public RgId: string;\r\n    public RgName: string;\r\n    public RgStates: DropdownItem[];\r\n    public StId: number;\r\n    public StName: string;\r\n    public PoNum: string;\r\n    public Pckup: string;\r\n    public Loc: string;\r\n    public dLat: number\r\n    public dLng: number\r\n    public PrdtNm: string;\r\n    public Qty: string;\r\n    public LdDate: string;\r\n    public SttsId: number;\r\n    public Status: string;\r\n    public DrId: string;\r\n    public statusColor: string;\r\n    public DROPTicketNum: string;\r\n    public ListDROPTicketNum: [];\r\n\r\n    public routeShow: boolean = false;\r\n    public AppLastUpdatedDate: string;\r\n    public IsOnline: number;\r\n\r\n}\r\n\r\nexport class DistatcherRegionModel {\r\n    public Id: string;\r\n    public Name: string;\r\n    public States: DropdownItem[];\r\n    public Dispatchers: DropdownItem[];\r\n\r\n}\r\n\r\nexport interface JobDeliveryRequest {\r\n    Id: string;\r\n    TfxProductType: string;\r\n    TfxUoM: number;\r\n    RequiredQuantity: number;\r\n    Priority: number;\r\n    DeliveryReqPriority: string;\r\n    Status: number;\r\n    DeliveryReqStatus: string;\r\n    StorageTypeId: string;\r\n    StorageId: string;\r\n    CreatedRegionId?: any;\r\n    TfxJobId: number;\r\n}\r\n\r\nexport interface Country {\r\n    Id: number;\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\nexport interface State {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface City {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Priority {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Product {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface SelectedItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface DropDownItem {\r\n    Id: number;\r\n    Name: string;\r\n}\r\n\r\nexport interface Customer {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class Filter {\r\n    'state': State[] = [];\r\n    'city': City[] = [];\r\n    'product': SelectedItem[] = [];\r\n    'priority': Priority[] = [];\r\n    'customer': Customer[] = [];\r\n    'supplier': SelectedItem[] = [];\r\n    'carrier': SelectedItem[] = [];\r\n}\r\n\r\nexport interface JobAssetDetail {\r\n    AssetId: number;\r\n    JobId: number;\r\n    AssetName: string;\r\n    AssetType: number;\r\n    AssetTypeName: string;\r\n    FuelCapacity: number;\r\n    ProductType: string;\r\n    TankType: number;\r\n    TankTypeName: string;\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    ThresholdDeliveryRequest: number;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    jobTankAdditionalDetails: JobTankAdditionalDetails[];\r\n    TfxProductTypeName: string;\r\n    LastReading: string;\r\n    CaptureTime: string;\r\n}\r\n\r\nexport interface JobTankAdditionalDetails {\r\n    TfxAssetId: number;\r\n    TankId: string;\r\n    TankName: string;\r\n    TankNumber: string;\r\n    StorageId: string;\r\n    ThresholdDeliveryRequest: number;\r\n    FillType: number;\r\n    MaxFill: number;\r\n    MaxFillPercent: number;\r\n    MinFill: number;\r\n    MinFillPercent: number;\r\n    FuelCapacity: number;\r\n    FillTypeStatus: string;\r\n    DipTestMethod: number;\r\n    DipTestMethodName: string;\r\n    ManiFolded: number;\r\n    ManiFoldedName: string;\r\n    TfxProductTypeName?: any;\r\n    SiteId: string;\r\n    LastReading: number;\r\n    CaptureTime: Date;\r\n    dipChartDetails: any[];\r\n    TankChartPath: string;\r\n}\r\n\r\n\r\nexport interface JobLocationDetailsModal {\r\n   // CustomerName: string;\r\n    CustomerId: number;\r\n    JobID: number;\r\n    JobName: string;\r\n    JobLocationType: number;\r\n    JobLocationTypeName: string;\r\n    Latitude: string;\r\n    Longitude: string;\r\n    Address: string;\r\n    CountryCode: string;\r\n    City: string;\r\n    CityId: number;\r\n    State: string;\r\n    StateID: number;\r\n    ZipCode: string;\r\n    ContractNumber: string;\r\n    IsContactDetailsAvailable: number;\r\n    ContactPersonName: string;\r\n    ContactPhoneNumber: string;\r\n    IsPhoneNumberConfirmed: number;\r\n    SiteImageFilePath: string;\r\n    SiteAvailabilityArray: string[];\r\n    SiteAvailabilityTotalDays: number;\r\n    SiteAvailabilityTiming: string;\r\n    SiteInstructions: string;\r\n    TankCount: number;\r\n    AssetCount: number;\r\n    TotalCount: number;\r\n    jobDeliveryRequests: JobDeliveryRequest[];\r\n    jobAssetDetails: JobAssetDetail[];\r\n    FuleTypeID?: any;\r\n    FuelTypeName: string;\r\n    FuelTypeNameList: string[];\r\n    ScheduleStatus: string;\r\n    highestPriority: number,\r\n    iconUrl: string,\r\n    supplierDetails: SelectedItem[];\r\n    carrierDetails: SelectedItem[];\r\n}\r\n\r\nexport interface JobLocationData {\r\n    jobLocationDetails: JobLocationDetailsModal[];\r\n    citiesDetails: City[];\r\n    stateDetails: State[];\r\n    customerDetails: Customer[];\r\n    fuelTypeDetails: string[];\r\n}\r\n\r\nexport class SbFilterModel {\r\n    constructor() {\r\n        this.Drivers = [];\r\n        this.Trailers = [];\r\n        this.Pickups = [];\r\n\r\n        this.SelectedDrivers = [];\r\n        this.SelectedPickups = [];\r\n        this.SelectedTrailers = [];\r\n    }\r\n    public Drivers: DropdownItem[];\r\n    public Trailers: TrailerViewModel[];\r\n    public Pickups: DropdownItem[];\r\n\r\n    public SelectedPickups?: DropdownItem[];\r\n    public SelectedDrivers?: DropdownItem[];\r\n    public SelectedTrailers?: TrailerViewModel[];\r\n}\r\n\r\nexport class TrailerViewFilterModel {\r\n    public Shifts?: any = {};\r\n    public Trailers?: any = {};\r\n    public Pickups?: any = {};\r\n    public Drivers?: any = {};\r\n}\r\n\r\nexport class DriverViewFilterModel {\r\n    public Shifts?: any = {};\r\n}\r\nexport class CompanyUsers {\r\n    FirstName: string;\r\n    LastName: string;\r\n    FullName: string;\r\n    PhoneNumber: string;\r\n    IsPhoneNumberConfirmed: boolean;\r\n    EmailAddress: string;\r\n    SendbirdUserName: string;\r\n    UserName: string;\r\n    UserId: number;\r\n    Role: number;\r\n    RegionID: string;\r\n    SendBirdRegionID: string;\r\n    RegionName: string;\r\n    RegionDescription: string;\r\n    //sendbird propery\r\n    ProfileURL: string;\r\n\r\n}\r\n\r\nexport class TankMinMaxFill {\r\n    MinFill: number;\r\n    MaxFill: number;\r\n    MinFillPercent: number;\r\n    MaxFillPercent: number;\r\n}\r\n\r\nexport class TankChartHeight {\r\n    ShouldBeEmptyPercent: number;\r\n    ShouldBeFilledPercent: number;\r\n    CurrentInventoryPercent: number;\r\n    sbf_percent: number;\r\n    ci_percent: number;\r\n}\r\n\r\nexport class DipTest {\r\n    TankId: string\r\n    SiteId: string\r\n    Ullage: number\r\n    GrossVolume: number\r\n    NetVolume: number\r\n    CaptureTime: string\r\n    CaptureTimeString: string\r\n}\r\n\r\nexport interface Compartment {\r\n    CompartmentId: string;\r\n    FuelType: number;\r\n    Capacity: number;\r\n}\r\n\r\nexport interface Trailer {\r\n    Id: string;\r\n    Name: string;\r\n    Owner?: any;\r\n    TruckId: string;\r\n    FuelCapacity: number;\r\n    ContractNumber: string;\r\n    Compartments: Compartment[];\r\n    TfxCreatedBy: number;\r\n    TfxCompanyId: number;\r\n    CreatedDate: Date;\r\n    Status: number;\r\n    LicenceRequirement: number;\r\n    LicencePlate: string;\r\n    ExpirationDate: string;\r\n    IsPump: string;\r\n    TrailerType: number;\r\n    IsDeleted: boolean;\r\n}\r\n\r\nexport interface IDriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n}\r\n\r\nexport class DriverAdditionalDetails {\r\n    Id: string;\r\n    Name: string;\r\n    License: string;\r\n    ContactNumnber: string;\r\n    Shifts: string[];\r\n    Trailers: Trailer[];\r\n    constructor(data?: IDriverAdditionalDetails) {\r\n        this.Id = data && data['Id'] || null;\r\n        this.Name = data && data['Name'] || null;\r\n        this.License = data && data['License'] || null;\r\n        this.ContactNumnber = data && data['ContactNumnber'] || null;\r\n        this.Shifts = data && data['Shifts'] || [];\r\n        this.Trailers = data && data['Trailers'] || [];\r\n    }\r\n}\r\n\r\nexport const routesColor = {\r\n    1: '#5f4aa8',\r\n    11: '#c4c105',\r\n    12: '#d3950f',\r\n    18: '#19953f',\r\n    20: '#e3584d'\r\n}\r\n\r\nexport class DemandModel {\r\n    Id: number;\r\n    JobId: number;\r\n    JobName: string;\r\n    Level: number;\r\n    NetVolume: number;\r\n    OrderId: number\r\n    Priority: DeliveryReqPriority;\r\n    ProductName: string;\r\n    ProductType: string;\r\n    SiteId: string;\r\n    StorageId: string;\r\n    TankCapacity: number;\r\n    TankId: string;\r\n    TankMaxFill: number\r\n    TankMinFill: number\r\n    TankName: string;\r\n    Ullage: number;\r\n    UoM: string;\r\n    RequiredQuantity: number;\r\n    IsDRExists: boolean;\r\n    IsDRMissed: boolean;\r\n    ExistingDR: PartialDRDetail[];\r\n}\r\n\r\nexport class PartialDRDetail {\r\n    DeliveryReqPriority: DeliveryReqPriority;\r\n    ScheduleStatusName: string;\r\n    ScheduleStatusId: number;\r\n    RequiredQuantity: number;\r\n    CreatedOn: string;\r\n    CreatedDate: string;\r\n}\r\n\r\nexport class LoadInfo {\r\n    ShiftId: string;\r\n    ShiftIndex?: number;\r\n    ScheduleIndex: number;\r\n    TripIndex: number;\r\n    DrId: string;\r\n}\r\n\r\nexport class PreLoadDrViewModel {\r\n    public SbView: number;\r\n    public RegionId: string;\r\n    public ShiftEndDate: string\r\n    public ShiftId: string\r\n    public ShiftIndex: number;\r\n    public ScheduleIndex: number;\r\n    public TripIndex: number;\r\n    public PreloadTrailers: TrailerModel[];\r\n    public PreloadDrs: any[];\r\n}\r\n\r\nexport class PreLoadDrResponseViewModel {\r\n    public StatusCode: number;\r\n    public StatusMessage: string;\r\n    public PreloadDrs: PreLoadDrModel[];\r\n}\r\n\r\nexport class PreLoadDrModel {\r\n    public Id: string;\r\n    public PreLoadedForId: string;\r\n}\r\n\r\nexport interface Supplier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport interface Carrier {\r\n    Name: string;\r\n    Id: number;\r\n}\r\n\r\nexport class SalesTankFilterModal {\r\n    public selectedLocAttributeData:any = [];\r\n}\r\n\r\nexport class SalesFilterModal {\r\n    public SelectedLocationId: string;\r\n    public selectedLocAttributeId: string;\r\n    \r\n}\r\n\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { DatatableCustomSortingService } from 'src/app/directives/sorting.pipe';\r\ndeclare var currentUserCompanyId;\r\n\r\n@Component({\r\n    selector: 'app-dispatcher-dashboard',\r\n    templateUrl: './dispatcher-dashboard.component.html',\r\n    styleUrls: ['./dispatcher-dashboard.component.css']\r\n})\r\nexport class DispatcherDashboardComponent implements OnInit, AfterViewInit {\r\n\r\n    public viewType: any;\r\n    public singleMulti: any;\r\n    public disableControl: boolean = false;\r\n    private dispatcherDashboard: Window;\r\n\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private carrierService: CarrierService, private customSortingService: DatatableCustomSortingService) { }\r\n\r\n    public ngOnInit(): void {\r\n        this.checkWindowSelection();\r\n        this.getCountries();\r\n    }\r\n\r\n    ngAfterViewInit(){\r\n        this.customSortingService.configColumnDefsNullToBottom();\r\n    }\r\n\r\n    getCountries() {\r\n        this.carrierService.GetCountries(currentUserCompanyId).subscribe(data => {\r\n            if (data != null) {\r\n                localStorage.setItem('countryIdForDashboard', data.DefaultCountryId);\r\n                localStorage.setItem('currencyTypeForDashboard', data.DefaultCountryId);\r\n            }\r\n        });\r\n    }\r\n    public changeViewType(type: any): void {\r\n        localStorage.setItem('viewType', <string>type);\r\n        if (this.singleMulti === 2) {\r\n            this.dispatcherDashboard = window.open(\"/Dispatcher/Dashboard\", \"_blank\");\r\n        } else {\r\n            this.viewType = type;\r\n        }\r\n    }\r\n\r\n\r\n    public changeWindowType(type: number): void {\r\n        this.singleMulti = type;\r\n        this.dispatcherService.SingleMultiWindowSubject.next(type);\r\n        if (type === 1 && +(localStorage.getItem('singleMulti')) !== 1) {\r\n            setTimeout(() => {\r\n                this.dispatcherDashboard.close();\r\n            }, 10000);\r\n        }\r\n        localStorage.setItem('singleMulti', <string>this.singleMulti);\r\n    }\r\n\r\n    private checkWindowSelection(): void {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        this.viewType = (localStorage.getItem('viewType')) ? +(localStorage.getItem('viewType')) : 1;\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl == true) {\r\n            this.viewType = 2;\r\n        }\r\n    }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\" >\r\n            <div class=\"col-sm-3 sticky-header-dash\">\r\n                <div class=\"dib border pa5 radius-capsule shadow-b float-left mb10\">\r\n                    <div class=\"btn-group btn-filter\">\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"1\" [checked]=\"viewType==1\">\r\n                        <label class=\"btn ml0\" (click)=\"changeViewType(1)\">Location</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"2\" [checked]=\"viewType==2\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(2)\">Loads</label>\r\n                        <input class=\"hide-element\" type=\"radio\" [name]=\"'type'\" [value]=\"3\" [checked]=\"viewType==3\">\r\n                        <label class=\"btn\" (click)=\"changeViewType(3)\">Sales</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dib switch-window ml20 pull-left mt5\" *ngIf=\"viewType!=3\">\r\n                    <div class=\"btn-group\">\r\n                        <input class=\"hide-element\" name=\"single\" type=\"radio\" [value]=\"1\" [checked]=\"singleMulti==1\">\r\n                        <label class=\"btn ml0 first-icon\" (click)=\"changeWindowType(1)\" placement=\"bottom\" ngbTooltip=\"Single Window\"><i class=\"far fa-window-maximize fs14 mt3\"></i></label>\r\n                        <input class=\"hide-element\" name=\"multiple\" type=\"radio\" [value]=\"2\" [checked]=\"singleMulti==2\">\r\n                        <label class=\"btn last-icon\" (click)=\"changeWindowType(2)\" placement=\"bottom\" ngbTooltip=\"Multi Window\"><i class=\"far fa-window-restore fs14 mt3\"></i></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <app-location [singleMulti]=\"singleMulti\" *ngIf=\"viewType==1\">Loading...</app-location>\r\n                <app-where-is-my-driver [singleMulti]=\"singleMulti\" *ngIf=\"viewType==2\">Loading...</app-where-is-my-driver>\r\n                <app-sales-data *ngIf=\"viewType==3\">Loading...</app-sales-data>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n   \r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { ForecastingLocationFilter } from '../../dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-job-tank-hierarchy',\n    templateUrl: './job-tank-hierarchy.component.html',\n    styleUrls: ['./job-tank-hierarchy.component.css']\n})\nexport class JobTankHierarchyComponent implements OnInit {\n\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public SelectedRegionId: string;\n    public SelectedCustomerId: string;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    \n    constructor(private dispatcherService: DispatcherService) { }\n\n    ngOnInit() {\n        this.initLocationDropDown();\n    }\n\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: \"\",\n            CustomerIds: this.SelectedCustomerId? this.SelectedCustomerId: \"\",\n            InventoryCaptureType: \"\",\n            IsRateOfConsumption: false,\n            IsShowCarrierManaged: false,\n            RegionId: this.SelectedRegionId? this.SelectedRegionId: \"\"\n        };\n        \n\n        forkJoin([this.dispatcherService.getSupplierLocationTanks(filter), this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(result => {\n                this.IsLocDrpDwnLoading = false;\n                this.LocationDrpDwnList = result[0];\n                this.Partsfiltering();\n                this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n                if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                    this.LocationDrpDwnList.forEach(loc => {\n                        loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                            if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                                m.IsUnknowDeliveryOrMissDelivery = true;\n                            else\n                                m.IsUnknowDeliveryOrMissDelivery = false;\n                        });\n                    });\n                }\n            });\n    }\n\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n        else\n            this.LocationSchedules = [];\n    }\n\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.SiteId.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n    public showTanks(location: any) {\n\n        let row = this.LocationSchedules[0];\n\n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = row.RegionId;\n        salesDataModel.SiteId = location.SiteId;\n        salesDataModel.TankId = location.TankId;\n        salesDataModel.StorageId = location.StorageId;\n        salesDataModel.TfxJobId = parseInt(location.JobId);\n        salesDataModel.LocationManagedType = location.LocationManagedType ? location.LocationManagedType: null;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\nexport interface LocationTankDetailsModel {\n    JobId?: number;\n    SiteId?: string;\n    Tanks?: TankDetailModel[];\n    DaysRemaining: number\n    Status: string\n}\n\nexport interface TankDetailModel {\n    TankId?: string;\n    StorageId?: string;\n    Name?: string;\n    IsUnknowDeliveryOrMissDelivery: boolean;\n    Status: string;\n    DaysRemaining: number;\n    CustomerInfo?: string;\n}","<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\"\r\n                    [ngClass]=\"{'hide-element': !FilterLocationDrpDwnList && FilterLocationDrpDwnList.length==0 }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"col-sm-12 row\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\"\r\n                            (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">\r\n                    No\r\n                    Location Available\r\n                </div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"49%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.SiteId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                     class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                     data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.SiteId\"\r\n                                                     aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.SiteId\"\r\n                                                     (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                     \r\n                                    </td>\r\n    \r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <td>\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.SiteId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.SiteId\">\r\n\r\n                                <td colspan=\"3\">\r\n                                    <div class=\"card-body\">\r\n                                        <ul class=\"list-group list-group-flush\">\r\n\r\n                                            <table class=\"table tank-view-child\">\r\n                                                <tbody>\r\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                        <td width=\"45%\">\r\n                                                            <a href=\"javascript:void(0)\"\r\n                                                                (click)=\"tankChange(tank)\"\r\n                                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                {{tank.Name}}\r\n                                                                <span\r\n                                                                    *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                    class=\"active-dot\">\r\n                                                                </span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td width=\"24%\">\r\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                <span class=\"\">{{tank.Status}}</span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </ul>\r\n                                    </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedRegionId\" [IsThisFromDrDisplay]=\"false\" [RequestFromBuyerWallyBoard]=\"true\"></app-dip-test>\r\n</div>","<div class=\"col-sm-9 sticky-header-loc\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                    [(ngModel)]=\"isShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"form-check form-check-inline fs14 mt5\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineShowAsset\" name=\"IsShowAssetJobs\"\r\n                    [(ngModel)]=\"isShowNonRetailJobs\">\r\n                <label class=\"form-check-label\" for=\"inlineShowAsset\"> Show Locations with Assets</label>\r\n            </div>\r\n\r\n            <div class=\"mtm10\" *ngIf=\"isShowCarrierManaged\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                    [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 p-0\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCarrierList\" [placeholder]=\"'Select Carrier'\"\r\n                            [settings]=\"multiselectSettingsById\" [data]=\"carrierList\" (onSelect)=\"carrierChanged()\"\r\n                            (onDeSelect)=\"carrierChanged()\" #selectedCarrier class=\"fs14\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-3 pt5\">\r\n            <!-- <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"multiselectSettingsById\"\r\n                [placeholder]=\"'Select Region'\" [data]=\"Regions\" (onSelect)=\"onRegionChanged()\"\r\n                (onDeSelect)=\"onRegionChanged()\" (onSelectAll)=\"onRegionChanged()\" (onDeSelectAll)=\"onRegionChanged()\">\r\n            </ng-multiselect-dropdown> -->\r\n        </div>\r\n        <div class=\"col-3 pl0 text-right pt8\">\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\"  triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n                popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\" ><span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 dib mr10\" (click)=\"toggleMapView()\"><i class=\"fas fa-eye mr5\"></i>{{ toogleMap\r\n                == true ? 'Hide Map View' : 'Show Map View'}}</a>\r\n\r\n            \r\n            <!--<span *ngIf=\"isFilterOn()>0\" class=\"circle-badge\">{{isFilterOn()}}</span>-->\r\n\r\n            <!-- <div class=\"pull-right mr15\" (clickOutside)=\"clickOutsideDropdown()\">\r\n                <a class=\"fs14\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5 ml20\"></i> Filters</a>\r\n                <div class=\"locationfilter border mt5 bg-gray shadow-b z-index5 pa10\" *ngIf=\"toogleFilter\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" (onSelect)=\"onCustomerChanged()\"\r\n                                (onDeSelect)=\"onCustomerChanged()\"\r\n                                [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                                [data]=\"customerList\">\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown  [(ngModel)]=\"SelectedlocationList\" \r\n                            [settings]=\"multiselectSettingsById\" [placeholder]=\"'Select Location'\" \r\n                            [data]=\"locationList\" >\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Priority'\" [data]=\"priorityList\"\r\n                                [settings]=\"PriorityDdlSettings\" #selectedPriority>\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 mb10\">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"SelectedStatusList\" [placeholder]=\"'Status'\" [data]=\"statusList\"\r\n                                [settings]=\"multiselectSettingsById\"  #selectedPriority>\r\n                            </ng-multiselect-dropdown>\r\n                        </div>\r\n                        <div class=\"col-sm-12 \">\r\n                            <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\" [placeholder]=\"'Inventory Capture Method'\" [data]=\"LocationAttributeList\"\r\n                            [settings]=\"multiselectSettingsById\">\r\n                        </ng-multiselect-dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"pr\">\r\n    <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n            class=\"spinner-dashboard pa\"></span></div>\r\n    <div class=\"animated clearboth mt60 row\" *ngIf=\"toogleMap\"\r\n        [ngClass]=\"{'fadeIn': toogleMap, 'display_hide': !toogleMap}\">\r\n        <div [ngClass]=\"clickViewActive  ? 'col-sm-8 mb15' : 'col-sm-12 mb15'\">\r\n\r\n            <div class=\"pr\">\r\n                <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; bottom:0; left: 10px; font-size: 11px;\">\r\n                    <div id=\"status-legends\" class=\"well pa0\">\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pl5 pr5 pt8 pb5 radius-10 no-b-radius\">\r\n                                <img [src]=\"mustGoUrl\" data-statusid=\"11\">\r\n                                Must Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"shouldGoUrl\" data-statusid=\"12\">\r\n                                Should Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"couldGoUrl\" data-statusid=\"1\">\r\n                                Could Go\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border-b\">\r\n                            <div class=\"db pa5\">\r\n                                <img [src]=\"noDlrUrl\" data-statusid=\"1\">\r\n                                Unplanned\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div> -->\r\n                <agm-map [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\" [mapTypeControl]=\"true\" [fullscreenControl]=\"true\"\r\n                    [fullscreenControlOptions]=\"screenOptions\" (mapReady)=\"mapReady($event)\"\r\n                >\r\n                    <ng-container *ngFor=\"let jobLocation of jobLocationData\">\r\n                        <agm-marker [latitude]=\"jobLocation.Latitude\" [longitude]=\"jobLocation.Longitude\"\r\n                            [iconUrl]='{ \"url\": jobLocation.iconUrl, \"scaledSize\": { \"height\": 24, \"width\": 24 } }'\r\n                            (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\"\r\n                            (mouseOut)=\"mouseHoveOutMarker(infoWindow,$event)\"\r\n                            (markerClick)=\"onInfoViewClick(jobLocation)\">\r\n                            <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                                <div>\r\n                                    <p><strong>{{ jobLocation.JobName}}</strong></p>\r\n                                    <p>{{jobLocation.CustomerName}}</p>\r\n                                </div>\r\n                            </agm-info-window>\r\n                        </agm-marker>\r\n                    </ng-container>\r\n                </agm-map>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-sm-4 pl0 right_side_panel\" *ngIf=\"clickViewActive\">\r\n            <div class=\"dib full-width pr well pa15 pt10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div *ngIf=\"!this.opendedJobDetails.SiteImageFilePath\" class=\"color-maroon pull-left\"><i\r\n                                class=\"fas fa-image mr5\"></i> No image available</div>\r\n                        <a (click)=\"closeViewClicked()\" class=\"pull-right\"><i class=\"far fa-times-circle fa-lg\"></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <!--<img [src]=\"this.opendedJobDetails.SiteImageFilePath ? this.opendedJobDetails.SiteImageFilePath:noImageUrl\" alt=\"\" class=\"img-responsive\">-->\r\n                        <img *ngIf=\"this.opendedJobDetails.SiteImageFilePath\"\r\n                            [src]=\"this.opendedJobDetails.SiteImageFilePath\" class=\"img-responsive\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\" col-sm-12 driver_details\">\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"fas fa-briefcase\"></i> {{this.opendedJobDetails.JobName}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"far fa-building\"></i> {{this.opendedJobDetails.CustomerName}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"job-location\">\r\n                            <p class=\"mb0\">\r\n                                <span class=\"address1\">\r\n                                    <i class=\"fas fa-map-marker-alt\"></i> {{this.opendedJobDetails.Address}},\r\n                                    {{this.opendedJobDetails.City}}, {{this.opendedJobDetails.State}},\r\n                                    {{this.opendedJobDetails.ZipCode}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"site-status fs12 mt5\">\r\n                            <div class=\"panel-group\">\r\n                                <div class=\"panel panel-default\">\r\n                                    <div class=\"panel-heading\">\r\n                                        <a data-toggle=\"collapse\" href=\"#collapse1\">\r\n                                            <span class=\"f-bold\">Site Availability:</span>\r\n                                            <span *ngIf=\"this.opendedJobDetails.SiteAvailabilityTotalDays\"\r\n                                                class=\"status  ml10\">OPEN</span>\r\n                                            <span\r\n                                                class=\"timing  ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>\r\n                                        </a>\r\n                                        <a data-toggle=\"collapse\" href=\"#collapse1\" class=\"pull-right\">\r\n                                            <i class=\"fas collapse1_icon fa-2x line-height_18 fa-angle-down\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div id=\"collapse1\" class=\"panel-collapse collapse\">\r\n                                        <div class=\"panel-body\">\r\n                                            <div class=\"date_time\"\r\n                                                *ngFor=\"let day of this.opendedJobDetails.SiteAvailabilityArray\">\r\n                                                <span class=\"day ml10\">{{day}} </span>\r\n                                                <span class=\"status ml10 text-success\">OPEN</span>\r\n                                                <span\r\n                                                    class=\"timing ml10\">{{this.opendedJobDetails.SiteAvailabilityTiming}}</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"!this.opendedJobDetails.SiteAvailabilityArray.length\">No Days\r\n                                                Available</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"site-instruction fs12 mb5\">\r\n                            <label class=\"f-bold db mb0\">Site Instruction: </label>\r\n                            <span class=\"instruction opacity8\">\r\n                                {{this.opendedJobDetails.SiteInstructions}}\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"site-contacts fs12 row mb5\">\r\n                            <div class=\"col-sm-3\">\r\n                                <label class=\"f-bold\">Contact(s):</label>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <p class=\"mb0 opacity8\">{{this.opendedJobDetails.ContactPersonName}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 site-assets\">\r\n                                <a class=\"btn btn-default pull-left ml0 fs12\"\r\n                                    (click)=\"onAssetsViewClick(this.opendedJobDetails.jobAssetDetails)\">{{this.opendedJobDetails.TotalCount}}\r\n                                    Tank(s)</a>\r\n                                <a (click)=\"onChartsViewClick(this.opendedJobDetails.jobAssetDetails)\"\r\n                                    class=\"btn btn-default pull-left fs12\">Demand Capture Trend </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"assets-panel dib full-width pr well pa15 pt10\" *ngIf=\"clickAssetsPanel\">\r\n                <div class=\"assets-header\">\r\n                    <div class=\"row mb5\">\r\n                        <div class=\"col-sm-12\">\r\n                            <a class=\"pull-left\" (click)=\"closeAssetsClicked()\"> <i class=\"fas fa-arrow-left\"></i>\r\n                                Back</a>\r\n                            <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i\r\n                                    class=\"far fa-times-circle fa-lg\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"charts-panel dib full-width pr well pa15 pt10 z-index10\" *ngIf=\"clickChartsPanel\">\r\n                <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n                        class=\"spinner-dashboard pa\"></span></div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                        <a class=\"pull-left\" (click)=\"closeChartsClicked()\"> <i class=\"fas fa-arrow-left\"></i> Back</a>\r\n                        <a class=\"pull-right\" (click)=\"closeViewClicked()\"><i class=\"far fa-times-circle fa-lg\"></i></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"charts-body\">\r\n                    <div style=\"width: 100%;height:50vh\">\r\n                        <div style=\"width: 100%;Tor-ulsd#2 tank\">\r\n                            <app-demand-capture-chart *ngIf=\"(isChartDataExistSubject | async)\"\r\n                                [data]=\"demandChartData\"></app-demand-capture-chart>\r\n                        </div>\r\n                        <!--<ng-template #noDtaAvailable>\r\n                            <div class=\"alert alert-danger\">\r\n                                No Data Available\r\n                            </div>\r\n                        </ng-template>-->\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" [ngClass]=\"toogleMap ? 'mt20' : 'mt60'\">\r\n        <div class=\"col-sm-12\">\r\n            <app-location-view [SelectedRegions]=\"SelectedRegions\" [SelectedCustomers]=\"SelectedCustomerList\"\r\n                [IsFilterLoaded]=\"IsFilterLoaded\" [SelectedLocations]=\"SelectedlocationList\"\r\n                [SelectedPriorities]=\"SelectedPriorityList\" [SelectedCarriers]=\"SelectedCarrierList\"\r\n                [IsShowCarrierManaged]=\"isShowCarrierManaged\" [SelectedStatus]=\"SelectedStatusList\"\r\n                [IsShowRetailJobs]=\"!isShowNonRetailJobs\" [selectedLocAttributeList]=\"selectedLocAttributeList\"\r\n                (getJobIdsForMap)=\"getJobIdsForMapEventHandler($event)\">Loading...\r\n            </app-location-view>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #assetDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n        [ngStyle]=\"{'display':modalDetails.display}\" id=\"assetDetailsModal\" tabindex=\"-1\" role=\"dialog\"\r\n        aria-labelledby=\"assetDetailsModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        Tank Details\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i\r\n                            class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body\" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <ng-container *ngTemplateOutlet=\"assetsContentTemplate;context:assetDetails\">\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<ng-container *ngTemplateOutlet=\"assetDetailsModal;context:assetsModal\">\r\n</ng-container>\r\n<ng-template #assetsContentTemplate let-assetNumber=\"assetIndex\">\r\n    <div class=\"aseets-body assets_modal\">\r\n        <div *ngIf=\"isLoading\" class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span\r\n                class=\"spinner-dashboard pa\"></span></div>\r\n        <ul class=\"nav nav-tabs\">\r\n            <ng-container *ngFor=\"let asset of clickedAssetsDetails let indx=index\">\r\n                <li [ngClass]=\"{'active':assetDetails.assetIndex===indx}\"><a (click)=\"assetTabClicked(indx)\">Tank\r\n                        ({{indx+1}})</a></li>\r\n            </ng-container>\r\n        </ul>\r\n        <div class=\"tab-content pa0\">\r\n            <div id=\"assets1\" class=\"tab-pane fade in active animated fadeIn\">\r\n                <div class=\"row mb10 mt10\">\r\n                    <div class=\"col-sm-12\">\r\n                        <div>\r\n                            <h2 class=\"mt0 mb0 pull-left fs16\">{{clickedAssetsDetails[assetNumber].AssetName}}</h2>\r\n                            <h2 class=\"mt0 mb0 pull-left fs16\"\r\n                                *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName && clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber \">\r\n                                &nbsp;(\r\n                                {{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankName}}-{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankNumber}}\r\n                                )</h2>\r\n                        </div>\r\n                        <a href=\"{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath}}\"\r\n                            target=\"_blank\" download\r\n                            *ngIf=\"clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TankChartPath\"\r\n                            class=\"pull-right\">\r\n                            <i class=\"fa fa-download mr5\" aria-hidden=\"true\"></i>Download Dip Chart\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"border radius-5 pa15 mb20\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType === 1\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                width=\"100%\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Product Type</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].ProductType}}</span></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td class=\"f-bold\">Tank Capacity</td>\r\n                                        <td><span>{{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span\r\n                                                    *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{FuelUnit}}</span></span>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n                    <div class=\"border radius-5 pa15 tank-panel mb20\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                                <div class=\"tank_dip_chart text-center mt10\">\r\n                                    <div>\r\n                                        <div id=\"ShouldBeEmptyPercent\" class=\"color-green\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeEmptyPercent || 0}\">\r\n                                        </div>\r\n                                        <div id=\"ShouldBeFilledPercent\" class=\"color-green\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.ShouldBeFilledPercent || 0}\">\r\n                                            {{selectedTankHeight.sbf_percent| number:'1.0-2'}}%</div>\r\n                                        <div id=\"CurrentInventoryPercent\" class=\"red-bg\"\r\n                                            [ngStyle]=\"{'height.px':selectedTankHeight.CurrentInventoryPercent || 0}\">\r\n                                            {{selectedTankHeight.ci_percent| number:'1.0-2'}}% </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                                <table\r\n                                    class=\"table table-condensed table-bordered table-hover small-table mb0 mt10 fs12\"\r\n                                    width=\"100%\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\" width=\"50%\">Storage ID </td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.StorageId}}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Tank Type</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].TankTypeName}}</span></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Product Type</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].jobTankAdditionalDetails[0]?.TfxProductTypeName}}</span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">Tank Capacity</td>\r\n                                            <td><span>{{clickedAssetsDetails[assetNumber].FuelCapacity| number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].FuelCapacity\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">\r\n                                                <span>Min Fill</span>\r\n                                                <span>&nbsp;({{selectedTankMinMax.MinFillPercent}}%)</span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span>{{selectedTankMinMax.MinFill| number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].MinFill\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td class=\"f-bold\">\r\n                                                <span>Max Fill</span>\r\n                                                <span>&nbsp;({{selectedTankMinMax.MaxFillPercent}}%)</span>\r\n                                            </td>\r\n                                            <td><span>{{selectedTankMinMax.MaxFill | number}} <span\r\n                                                        *ngIf=\"clickedAssetsDetails[assetNumber].MaxFill\">{{FuelUnit}}</span></span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <table class=\"table table-condensed table-hover table-bordered small-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Last Reading</th>\r\n                                        <th>Ullage</th>\r\n                                        <th>Last Reading Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div\r\n                                                *ngIf=\"(latestReading?.NetVolume==-1 || latestReading?.NetVolume===undefined) else reading\">\r\n                                                NA</div>\r\n                                            <ng-template #reading>\r\n                                                {{(latestReading?.NetVolume | number)}} <span>{{FuelUnit}}</span>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                        <td><span>{{(latestReading?.Ullage| number) || 'NA'}}</span></td>\r\n                                        <td><span>{{(latestReading?.CaptureTimeString| date:'MM/dd/yyyy, hh:mm a':'UTC')\r\n                                                || 'NA'}}</span></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"assets-id\" *ngIf=\"clickedAssetsDetails[assetNumber].AssetType===2\">\r\n\r\n                    <p class=\"mb0\">\r\n                        <label class=\"f-bold\">Dip test value trend : </label>\r\n                    </p>\r\n                    <div style=\"width: 100%;max-height:320px\" *ngIf=\"chartData.length\">\r\n                        <canvas baseChart height=\"300\" style=\"margin:auto;\" [chartType]=\"'line'\" [datasets]=\"chartData\"\r\n                            [options]=\"chartOptions\" [labels]=\"chartLabels\" [legend]=\"true\"></canvas>\r\n                    </div>\r\n                    <div *ngIf=\"!chartData.length && !isLoading\" class=\"alert alert-danger\">\r\n                        No Data Available\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"multiselectSettingsById\"\r\n                        [placeholder]=\"'Select Region'\" [data]=\"Regions\"  (onSelect)=\"onRegionChanged()\"\r\n                        (onDeSelect)=\"onRegionChanged()\" (onSelectAll)=\"onRegionChanged()\" (onDeSelectAll)=\"onRegionChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Customer</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\" [settings]=\"CustomerDdlSettings\"\r\n                        [placeholder]=\"'Select Customer'\" [data]=\"customerList\" (onSelect)=\"onCustomerChanged()\"\r\n                        (onDeSelect)=\"onCustomerChanged()\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\" [settings]=\"multiselectSettingsById\"\r\n                        [placeholder]=\"'Select Location'\" [data]=\"locationList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Prority</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorityList\" [placeholder]=\"'Priority'\"\r\n                        [settings]=\"PriorityDdlSettings\" [data]=\"priorityList\"  #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Status</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"SelectedStatusList\" [placeholder]=\"'Status'\"\r\n                        [settings]=\"multiselectSettingsById\" [data]=\"statusList\" #selectedPriority>\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Capture Method</label>\r\n                    <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                        [placeholder]=\"'Inventory Capture Method'\" \r\n                        [settings]=\"multiselectSettingsById\" [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\"  (click)=\"ResetFilters();\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set'); p.close();\"  class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>","import { Component, OnInit, ViewChild, ElementRef, TemplateRef, ViewEncapsulation, ɵbypassSanitizationTrustStyle, Input } from '@angular/core';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { Subject, Subscription, BehaviorSubject } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { JobLocationDetailsModal, JobAssetDetail, State, Country, City, Priority, SelectedItem, Customer, DipTest, TankMinMaxFill, TankChartHeight, Filter, JobTankAdditionalDetails } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { CarrierService } from '../../carrier/service/carrier.service';\r\nimport { LocationViewComponent } from './sales-data/location-view.component';\r\nimport { LocationFilterModal } from '../dispatcher.model';\r\nimport { Declarations } from 'src/app/declarations.module';\r\nimport { TfxModule } from 'src/app/app.enum';\r\nimport { InventoryDataCaptureList } from 'src/app/app.constants';\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-location',\r\n    templateUrl: './location.component.html',\r\n    styleUrls: ['./location.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LocationComponent implements OnInit {\r\n    @ViewChild(LocationViewComponent) locationGridView: LocationViewComponent;\r\n    @Input() singleMulti: number;\r\n    public Map: any;\r\n    public isLoading = false;\r\n    public zoomLevel = 5;\r\n    public jobLocationData: JobLocationDetailsModal[] = [];\r\n    public opendedJobDetails: JobLocationDetailsModal;\r\n    public clickedAssetsDetails: JobAssetDetail[] = [];\r\n    public stateList: State[] = [];\r\n    public countryList: Country[] = [];\r\n    public cityList: City[] = [];\r\n    public priorityList: Priority[] = [];\r\n    public statusList = [];\r\n    public fuelTypeList: SelectedItem[] = [];\r\n    public customerList = [];\r\n    public latestReading: DipTest = new DipTest();\r\n    public chartData = [];\r\n    public demandChartData: any;\r\n    public chartLabels = [];\r\n    private setCountryCenterInterval: any;\r\n    public FuelUnit: string;\r\n    public IsFilterLoaded: boolean = false;\r\n    public chartOptions: ChartOptions;\r\n    public selectedTankMinMax: TankMinMaxFill = new TankMinMaxFill();\r\n    public selectedTankHeight: TankChartHeight = new TankChartHeight();\r\n\r\n    subscriptions: Subscription = new Subscription();\r\n    public multiselectSettingsById: IDropdownSettings;\r\n    public CustomerDdlSettings: IDropdownSettings;\r\n    public PriorityDdlSettings: IDropdownSettings;\r\n    public filteredJobLocationData: JobLocationDetailsModal[] = [];\r\n    public unchangedJobLocationData: JobLocationDetailsModal[] = [];\r\n    public SelectedFilter: Filter = new Filter();\r\n\r\n    public assetDetails = { assetIndex: 0 };\r\n    public assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n\r\n    private locationSubscription = new Subscription();\r\n\r\n    public clickViewActive: Boolean = false;\r\n    public clickAssetsPanel: Boolean = false;\r\n    public clickChartsPanel: Boolean = false;\r\n\r\n    public toogleMap: Boolean = false;\r\n    public toogleFilter: Boolean = false;\r\n\r\n    public centerLocationLat = 47.1853106;\r\n    public centerLocationLog = -125.36955;\r\n    private UserCountry = \"USA\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 3\r\n    };\r\n    public mustGoUrl = \"src/assets/marker-mustgo.svg\";\r\n    public shouldGoUrl = \"src/assets/marker-shouldgo.svg\";\r\n    public couldGoUrl = \"src/assets/marker-couldgo.svg\";\r\n    public noDlrUrl = \"src/assets/marker-nodr.svg\";\r\n    public noImageUrl = \"Content/images/no-image.png\";\r\n    public isChartDataExistSubject: BehaviorSubject<any>;\r\n    public isShowCarrierManaged: boolean = false;\r\n    public carrierList: any[] = [];\r\n    selectedCarrierIds: string = '';\r\n    SelectedRegions = [];\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    public UnchangedCustomerList = [];\r\n    public SelectedRegionId: string = '';\r\n    public SelectedCustomerIds: string;\r\n    public SelectedPriorityIds: string;\r\n    public SelectedLocationIds: string;\r\n    public SelectedStatusesId: string;\r\n    SelectedCustomerList = [];\r\n    SelectedlocationList = [];\r\n    SelectedCarrierList = [];\r\n    SelectedPriorityList = [];\r\n    SelectedStatusList = [];\r\n    selectedPriorityIds: string = '';\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList = [];\r\n\r\n    public locationList = [];\r\n    public isShowNonRetailJobs: boolean = false;\r\n    public jobIdsEmittedFromSalesComponent: any = [];\r\n\r\n    public locationFilterModal: LocationFilterModal = new LocationFilterModal();\r\n    public count: number = 0;\r\n\r\n    constructor(private readonly dispatcherService: DispatcherService,\r\n        private carrierService: CarrierService,) {\r\n        this.isChartDataExistSubject = new BehaviorSubject(false);\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public ngOnInit(): void {\r\n        this.getRegions();\r\n        this.getCarriers();\r\n        this.getDispatcherLocation();\r\n        this.priorityList = [{\r\n            Id: 1,\r\n            Name: 'Must Go'\r\n        }, {\r\n            Id: 2,\r\n            Name: 'Should Go'\r\n        },\r\n        {\r\n            Id: 3,\r\n            Name: 'Could Go'\r\n        },\r\n        {\r\n            Id: 4,\r\n            Name: 'Unplanned'\r\n        }];\r\n        this.statusList = [{\r\n            Id: 'Scheduled',\r\n            Name: 'Scheduled'\r\n        }, {\r\n            Id: 'DR Created',\r\n            Name: 'DR Created'\r\n        },\r\n        {\r\n            Id: 'No DR',\r\n            Name: 'No DR'\r\n        }];\r\n        this.multiselectSettingsById = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.CustomerDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'CompanyId',\r\n            textField: 'CompanyName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: true,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n\r\n    private fetchJobLocationData(PageLoad?: Boolean): void {\r\n        this.isLoading = true;\r\n        if (this.jobIdsEmittedFromSalesComponent && this.jobIdsEmittedFromSalesComponent.length) {\r\n            var ids = []\r\n            this.jobIdsEmittedFromSalesComponent.forEach(res => { ids.push(res.TfxJobId) });\r\n            var jobids = \"\";\r\n            jobids = ids.join();\r\n\r\n            var selectedLocAttributeId = \"\";\r\n            if (this.selectedLocAttributeList && this.selectedLocAttributeList.length > 0) {\r\n                var ids = [];\r\n                this.selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\r\n                selectedLocAttributeId = ids.join();\r\n            }\r\n            this.locationSubscription.add(this.dispatcherService.getJobLocationDetails(jobids, selectedLocAttributeId).subscribe(res => {\r\n                //   this.locationSubscription.add(this.dispatcherService.getJobLocationDetails(this.jobIdsEmittedFromSalesComponent,selectedLocAttributeId).subscribe(res => {\r\n                if (res) {\r\n                    this.jobLocationData = this.addJobPriority(res['Data']['jobLocationDetails']);\r\n                }\r\n                this.setCountryCentre();\r\n                this.isLoading = false;\r\n            }));\r\n        } else {\r\n            this.unchangedJobLocationData = this.jobLocationData = [];\r\n            this.setCountryCentre();\r\n            this.isLoading = false;\r\n        }\r\n\r\n    }\r\n\r\n    private convertToObjectArray(data: string[]): SelectedItem[] {\r\n        let modifiedItemArray: SelectedItem[] = [];\r\n        data.forEach((item, index) => {\r\n            let Item: SelectedItem = { 'Id': 0, 'Name': '' };\r\n            Item.Id = index;\r\n            Item.Name = item;\r\n            modifiedItemArray.push(Item);\r\n        })\r\n        return modifiedItemArray;\r\n    }\r\n\r\n    private fetchCountryListData(): void {\r\n        this.locationSubscription.add(this.dispatcherService.getCountryList().subscribe(res => {\r\n            this.countryList = res;\r\n        }));\r\n    }\r\n\r\n    private fetchProductTypeListData(): void {\r\n        this.locationSubscription.add(this.dispatcherService.getProductTypeList().subscribe(res => {\r\n            this.fuelTypeList = res.Data;\r\n        }));\r\n    }\r\n\r\n    private fetchStateListData(countryId?: string): void {\r\n        this.locationSubscription.add(this.dispatcherService.getStateList(countryId).subscribe(res => {\r\n            this.stateList = res;\r\n        }));\r\n    }\r\n\r\n    private fetchCityListData(stateId?: string): void {\r\n        this.locationSubscription.add(this.dispatcherService.getCityList(stateId).subscribe(res => {\r\n            this.cityList = res;\r\n        }));\r\n    }\r\n    private addJobPriority(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        if (jobLocationData && jobLocationData.length) {\r\n            jobLocationData.forEach(element => {\r\n                var obj = this.jobIdsEmittedFromSalesComponent.find(t => t.TfxJobId == element.JobID);\r\n                if (obj) {\r\n                    if (obj.Priority == 1) {\r\n                        element.highestPriority = 1;\r\n                        element.iconUrl = this.mustGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 2) {\r\n                        element.highestPriority = 2;\r\n                        element.iconUrl = this.shouldGoUrl;\r\n                    }\r\n                    else if (obj.Priority == 3) {\r\n                        element.highestPriority = 3;\r\n                        element.iconUrl = this.couldGoUrl;\r\n                    }\r\n                    else {\r\n                        element.highestPriority = 4;\r\n                        element.iconUrl = this.noDlrUrl;\r\n                    }\r\n                } else {\r\n                    element.highestPriority = 4;\r\n                    element.iconUrl = this.noDlrUrl;\r\n                }\r\n            });\r\n        }\r\n        return jobLocationData;\r\n    }\r\n    private checkMostPriorityJob(jobLocationData: JobLocationDetailsModal[]): JobLocationDetailsModal[] {\r\n        const jobLocationLength = jobLocationData.length;\r\n        for (let i = 0; i < jobLocationLength; i++) {\r\n            let deliveryRequests = jobLocationData[i].jobDeliveryRequests;\r\n            if (deliveryRequests.length) {\r\n                let filteredMustGoDRs = deliveryRequests.filter((data) => data.Priority === 1);\r\n                let filteredShoudGoDRs = deliveryRequests.filter((data) => data.Priority === 2);\r\n                let filteredCouldGoDRs = deliveryRequests.filter((data) => data.Priority === 3);\r\n                if (filteredMustGoDRs.length > 0) {\r\n                    jobLocationData[i].highestPriority = 1;\r\n                    jobLocationData[i].iconUrl = this.mustGoUrl;\r\n                }\r\n                else if (filteredShoudGoDRs.length > 0) {\r\n                    jobLocationData[i].highestPriority = 2;\r\n                    jobLocationData[i].iconUrl = this.shouldGoUrl;\r\n                }\r\n                else {\r\n                    jobLocationData[i].highestPriority = 3;\r\n                    jobLocationData[i].iconUrl = this.couldGoUrl;\r\n                }\r\n            } else {\r\n                jobLocationData[i].highestPriority = 4;\r\n                jobLocationData[i].iconUrl = this.noDlrUrl;\r\n            }\r\n        }\r\n        return jobLocationData;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.locationSubscription) {\r\n            this.locationSubscription.unsubscribe();\r\n        }\r\n        this.SaveFilters(true);\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.open();\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent): void {\r\n        infoWindow.close();\r\n    }\r\n\r\n    public onInfoViewClick(jobLocation: JobLocationDetailsModal): void {\r\n        window.scrollTo(0, 0);\r\n        this.opendedJobDetails = jobLocation;\r\n        this.assetDetails.assetIndex = 0;\r\n        this.clickViewActive = true;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n        this.toogleMap = true;\r\n        this.closeAssetsClicked();\r\n    }\r\n\r\n    public closeViewClicked(): void {\r\n        this.clickViewActive = false;\r\n        this.clickAssetsPanel = false;\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public onAssetsViewClick(assets: JobAssetDetail[]): void {\r\n        if (assets.length) {\r\n            this.clickAssetsPanel = true;\r\n            this.clickedAssetsDetails = assets;\r\n            if (assets[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(assets[0].jobTankAdditionalDetails[0]['SiteId'], assets[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            else {\r\n                this.chartData = [];\r\n                this.latestReading = new DipTest();\r\n            }\r\n        }\r\n    }\r\n\r\n    public closeAssetsClicked(): void {\r\n        this.clickAssetsPanel = false;\r\n\r\n    }\r\n\r\n    public onChartsViewClick(assets: JobAssetDetail[]): void {\r\n        this.clickChartsPanel = true;\r\n        this.isChartDataExistSubject.next(false);\r\n        if (assets.length && assets[0].jobTankAdditionalDetails.length) {\r\n            this.getDemandCaptureChart(assets[0].jobTankAdditionalDetails[0]['SiteId'], 3, assets[0].JobId);\r\n        }\r\n        else {\r\n            this.isChartDataExistSubject.next(false);\r\n            this.demandChartData = null;\r\n        }\r\n    }\r\n\r\n    public closeChartsClicked(): void {\r\n        this.clickChartsPanel = false;\r\n    }\r\n\r\n    public assetTabClicked(indx: number): void {\r\n        this.assetDetails.assetIndex = indx;\r\n        if (this.clickedAssetsDetails[indx].jobTankAdditionalDetails.length) {\r\n            this.getDipTestDetails(this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[indx].jobTankAdditionalDetails[0]['TankId'], 3);\r\n        } else {\r\n            this.chartData = [];\r\n            this.latestReading = new DipTest();\r\n        }\r\n    }\r\n    public toggleMapView(): void {\r\n        this.toogleMap = !this.toogleMap;\r\n        if (this.toogleMap) {\r\n            this.fetchJobLocationData();\r\n        }\r\n        //this.SaveFilters();\r\n    }\r\n\r\n    public toggleFilterView(): void {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    private tableClickFilter(data, index): void {\r\n    }\r\n\r\n    public modalOpen(jobLocation: JobLocationDetailsModal): void {\r\n        this.opendedJobDetails = jobLocation;\r\n        this.clickedAssetsDetails = this.opendedJobDetails.jobAssetDetails;\r\n        if (this.clickedAssetsDetails.length) {\r\n            this.closeAssetsClicked();\r\n            this.closeViewClicked();\r\n            this.closeChartsClicked();\r\n            this.assetDetails.assetIndex = 0;\r\n            if (this.clickedAssetsDetails[0].jobTankAdditionalDetails.length) {\r\n                this.getDipTestDetails(this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['SiteId'], this.clickedAssetsDetails[0].jobTankAdditionalDetails[0]['TankId'], 3);\r\n            }\r\n            this.assetsModal = { modalDetails: { display: 'block', data: 'Modal Show' } };\r\n        }\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.assetsModal = { modalDetails: { display: 'none', data: 'Modal Show' } };\r\n    }\r\n\r\n    private getDipTestDetails(siteId: string, tankId: string, noOfDays: number): void {\r\n        this.isLoading = true;\r\n        this.chartData = [];\r\n        this.chartOptions = {};\r\n        this.chartOptions = this.setChartOptions(this.UserCountry);\r\n        this.chartLabels = [];\r\n        this.latestReading = new DipTest();\r\n        this.locationSubscription.add(this.dispatcherService.getDipTestDetails(siteId, tankId, noOfDays).subscribe((data) => {\r\n            if (data && data.StatusCode === 302) {\r\n                let resp = data.Data;\r\n                this.latestReading = resp[0];\r\n                let obj = {};\r\n                let chartdata = [];\r\n                obj['label'] = 'Tank ' + resp[0]['TankId'];\r\n                let respLen = resp.length;\r\n                for (let i = 0; (i < respLen); i++) {\r\n                    let captureTime = moment(new Date(resp[i].CaptureTimeString)).format('MM/DD/YYYY hh:mm A');\r\n                    chartdata.unshift(resp[i].NetVolume);\r\n                    this.chartLabels.unshift(captureTime);\r\n                }\r\n                obj['data'] = chartdata;\r\n                this.chartData.push(obj);\r\n            }\r\n            this.calculateMinMAx(this.clickedAssetsDetails[this.assetDetails.assetIndex].jobTankAdditionalDetails[0]);\r\n            this.isLoading = false;\r\n        }));\r\n    }\r\n\r\n    public getDemandCaptureChart(siteId: string, noOfDays: number, tfxJobId: number): void {\r\n        // this.demandChartData = {};\r\n        this.demandChartData = { siteId: siteId, noOfDays: noOfDays, tfxJobId: tfxJobId };\r\n        this.isChartDataExistSubject.next(true);\r\n    }\r\n\r\n    public mapReady(map: any): void {\r\n        this.Map = map;\r\n        this.setCountryCentre();\r\n    }\r\n\r\n    private setZoomLevel(): void {\r\n        if (this.jobLocationData.length == 0) {\r\n            this.setCountryCentre();\r\n        } else {\r\n            this.Map.setZoom(5);\r\n        }\r\n    }\r\n\r\n    private setCountryCentre(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.Map && this.jobLocationData.length == 0) {\r\n                    this.Map.setCenter(new google.maps.LatLng(this.centerLocationLat, this.centerLocationLog));\r\n                    this.Map.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.jobLocationData.forEach((x: JobLocationDetailsModal) => {\r\n                        bounds.extend(new google.maps.LatLng(x.Latitude, x.Longitude));\r\n                    });\r\n                    if (this.Map && bounds) {\r\n                        this.Map.fitBounds(bounds);\r\n                        this.Map.setCenter(bounds.getCenter());\r\n                        this.Map.setZoom(5);\r\n                    }\r\n\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    private setChartOptions(country: string) {\r\n        this.FuelUnit = (country === 'USA') ? 'Gallons' : 'Litres';\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: `NetVolume ( Fuels Per ${this.FuelUnit})`\r\n                    },\r\n                    ticks: {\r\n                        callback: label => { return label.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); }\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    type: 'time',\r\n                    time: {\r\n                        displayFormats: {\r\n                            'millisecond': 'MMM DD',\r\n                            'second': 'MMM DD',\r\n                            'minute': 'MMM DD',\r\n                            'hour': 'MMM DD',\r\n                            'day': 'MMM DD',\r\n                            'week': 'MMM DD',\r\n                            'month': 'MMM DD',\r\n                            'quarter': 'MMM DD',\r\n                            'year': 'MMM DD',\r\n                        }\r\n                    }\r\n                }\r\n                ]\r\n            }\r\n        };\r\n    }\r\n\r\n    private getDispatcherLocation(): void {\r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n        });\r\n    }\r\n    public setCenterMap($event): void {\r\n        if (this.UserCountry && !this.jobLocationData.length) {\r\n            this.centerLocationLat = this.CountryCentre[this.UserCountry].lat;\r\n            this.centerLocationLog = this.CountryCentre[this.UserCountry].lng;\r\n            if (this.Map) {\r\n                this.Map.setCenter({ lat: this.centerLocationLat, lng: this.centerLocationLog });\r\n                this.Map.setZoom(5);\r\n            }\r\n        }\r\n    }\r\n    public downloadDipChart(event: any, assetNumber: string) {\r\n        let anchor = event.target;\r\n        let orignalCanvas = document.getElementsByTagName('canvas')[0];\r\n        var resizedCanvas = document.createElement(\"canvas\");\r\n        var resizedContext = resizedCanvas.getContext(\"2d\");\r\n        resizedCanvas.height = 500;\r\n        resizedCanvas.width = 800;\r\n        var context = orignalCanvas.getContext(\"2d\");\r\n        resizedContext.drawImage(orignalCanvas, 0, 0, 800, 500);\r\n        anchor.href = resizedCanvas.toDataURL('image/jpeg', 1.0);\r\n        anchor.download = `${this.clickedAssetsDetails[assetNumber].AssetName}.png`;\r\n    }\r\n\r\n    private calculateMinMAx(selectedTank: JobTankAdditionalDetails): void {\r\n        this.selectedTankMinMax.MaxFill = selectedTank.MaxFill;\r\n        this.selectedTankMinMax.MinFill = selectedTank.MinFill;\r\n        this.selectedTankMinMax.MaxFillPercent = selectedTank.MaxFillPercent;\r\n        this.selectedTankMinMax.MinFillPercent = selectedTank.MinFillPercent;\r\n        let ci_percent = ((this.latestReading.NetVolume || 0) / selectedTank.FuelCapacity) * 100;\r\n        ci_percent = ci_percent > selectedTank.MaxFillPercent ? selectedTank.MaxFillPercent : ci_percent;\r\n        ci_percent = ci_percent < 0 ? 0 : ci_percent;\r\n\r\n        let sbf_percent = (selectedTank.MaxFillPercent - ci_percent);\r\n        sbf_percent = sbf_percent > 100 ? 100 : sbf_percent;\r\n        sbf_percent = sbf_percent < 0 ? 0 : sbf_percent;\r\n\r\n        this.fillTankDiagram(sbf_percent, ci_percent);\r\n    }\r\n\r\n    private fillTankDiagram(sbf_percent: number, ci_percent: number): void {\r\n        this.selectedTankHeight.sbf_percent = sbf_percent;\r\n        this.selectedTankHeight.ci_percent = ci_percent;\r\n        let min_ShouldBeEmptyPercent = (125 - ((sbf_percent * 1.25) + (ci_percent * 1.25)));\r\n        let min_ShouldBeFilledPercent = (sbf_percent * 1.25);\r\n        let min_CurrentInventoryPercent = (ci_percent * 1.25);\r\n        //need of cal\r\n        if (min_ShouldBeFilledPercent < 16 || min_CurrentInventoryPercent < 16) {\r\n            //dont remove from emtty\r\n            if (min_ShouldBeEmptyPercent < 16) {\r\n\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent - 16;\r\n                }\r\n            }\r\n            //remove from empty\r\n            else {\r\n                if (min_ShouldBeFilledPercent < 16) {\r\n                    min_ShouldBeFilledPercent = min_ShouldBeFilledPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n                if (min_CurrentInventoryPercent < 16) {\r\n                    min_CurrentInventoryPercent = min_CurrentInventoryPercent + 16;\r\n                    min_ShouldBeEmptyPercent = min_ShouldBeEmptyPercent - 16;\r\n                }\r\n            }\r\n        }\r\n        this.selectedTankHeight.CurrentInventoryPercent = min_CurrentInventoryPercent;\r\n        this.selectedTankHeight.ShouldBeFilledPercent = min_ShouldBeFilledPercent;\r\n        this.selectedTankHeight.ShouldBeEmptyPercent = min_ShouldBeEmptyPercent;\r\n    }\r\n\r\n    public ShowCarrierMangedData() {\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    public carrierChanged() {\r\n        var ids = [];\r\n        this.selectedCarrierIds = '';\r\n        this.SelectedCarrierList.forEach(res => { ids.push(res.Id) });\r\n        this.selectedCarrierIds = ids.join();\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    public onCustomerChanged() {\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.locationList = [];\r\n            var customers = this.customerList.filter(t => { return this.SelectedCustomerList.filter(el => el.CompanyId == t.CompanyId).length > 0; });\r\n            customers.forEach(res => {\r\n                if (!this.locationList.find(t => t.Id == res.Id)) {\r\n                    this.locationList = this.locationList.concat(res.Jobs);\r\n                }\r\n            });\r\n            this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n            if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n                this.SelectedlocationList = this.SelectedlocationList.filter(t => { return this.locationList.filter(el => el.Id == t.Id).length > 0 });\r\n            }\r\n        }\r\n        else {\r\n            this.initAllLocation();\r\n        }\r\n    }\r\n\r\n    public getRegions() {\r\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\r\n            this.Regions = data;\r\n            if (this.Regions && this.Regions.length > 0) {\r\n                this.SelectedRegions = [];\r\n                this.SelectedRegions.push(this.Regions[0]);\r\n                var ids = [];\r\n                this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n                this.SelectedRegionId = ids.join();\r\n            }\r\n            this.GetFilters();\r\n        });\r\n    }\r\n\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId, this.isShowCarrierManaged, this.selectedCarrierIds).subscribe(t2 => {\r\n            this.customerList = t2;\r\n            if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n                this.SelectedCustomerList = this.SelectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\r\n            }\r\n            this.initAllLocation();\r\n        });\r\n    }\r\n\r\n    private initAllLocation() {\r\n        this.locationList = [];\r\n\r\n        if (this.SelectedRegions && this.SelectedRegions.length > 0) {\r\n            this.customerList.forEach(res => {\r\n                this.locationList = this.locationList.concat(res.Jobs.filter(t => this.SelectedRegions.some(el => el.Id == t.RegionId)));\r\n            });\r\n        }\r\n        else {\r\n            this.customerList.forEach(res => {\r\n                if (!this.locationList.find(t => t.Id == res.Id)) {\r\n                    this.locationList = this.locationList.concat(res.Jobs);\r\n                }\r\n            });\r\n        }\r\n        this.locationList = this.GetUniqueItems(this.locationList.reduce((p, n) => p.concat(n), []));\r\n        if (this.SelectedlocationList && this.SelectedlocationList.length > 0) {\r\n            this.SelectedlocationList = this.SelectedlocationList.filter(t => { return this.locationList.filter(el => el.Id == t.Id).length > 0 });\r\n        }\r\n    }\r\n\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.includes(item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    public onRegionChanged() {\r\n        this.setCustomerAndLocations();\r\n    }\r\n\r\n    setCustomerAndLocations() {\r\n        if (this.SelectedRegions && this.SelectedRegions.length > 0) {\r\n            this.customerList = this.UnchangedCustomerList.filter(t => { return this.SelectedRegions.filter(el => t.RegionIds.some(r => el.Id == r)).length > 0; });\r\n        }\r\n        else {\r\n            this.customerList = this.UnchangedCustomerList;\r\n        }\r\n        if (this.SelectedCustomerList && this.SelectedCustomerList.length > 0) {\r\n            this.SelectedCustomerList = this.SelectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\r\n        }\r\n        this.initAllLocation();\r\n    }\r\n\r\n    getAllCustomers() {\r\n        var ids = [];\r\n        this.Regions.forEach(res => { ids.push(res.Id) });\r\n        var selectedRegionId = ids.join();\r\n        this.carrierService.getJobListForCarrier(selectedRegionId, this.isShowCarrierManaged, this.selectedCarrierIds).subscribe(t2 => {\r\n            this.UnchangedCustomerList = t2;\r\n            this.setCustomerAndLocations();\r\n        });\r\n    }\r\n\r\n    public onLocationTypeChange($event) {\r\n\r\n    }\r\n    public ResetFilters() {\r\n        this.SelectedRegions = [];\r\n        this.SelectedCustomerList = [];\r\n        this.SelectedlocationList = [];\r\n        this.SelectedPriorityList = [];\r\n        this.SelectedStatusList = [];\r\n        this.selectedLocAttributeList = [];\r\n        this.ApplyFilters(\"reset\");\r\n\r\n    }\r\n    public ApplyFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.count = 0;\r\n\r\n        var Regionids = [];\r\n        this.SelectedRegions.forEach(res => {\r\n            this.count++;\r\n            Regionids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedRegionId = Regionids.join();\r\n\r\n        var Customerids = [];\r\n        this.SelectedCustomerList.forEach(res => {\r\n            this.count++;\r\n            Customerids.push(res.CompanyId)\r\n        });\r\n        this.locationFilterModal.SelectedCustomerId = Customerids.join();\r\n\r\n        var Locationids = [];\r\n        this.SelectedlocationList.forEach(res => {\r\n            this.count++;\r\n            Locationids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedLocationId = Locationids.join();\r\n\r\n        var Statusids = [];\r\n        this.SelectedStatusList.forEach(res => {\r\n            this.count++;\r\n            Statusids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedStatusId = Statusids.join();\r\n\r\n        var Prioritiesids = [];\r\n        this.SelectedPriorityList.forEach(res => {\r\n            this.count++;\r\n            Prioritiesids.push(res.Id)\r\n        });\r\n        this.locationFilterModal.SelectedPrioritiesId = Prioritiesids.join();\r\n\r\n        var LocAttributeids = [];\r\n        if (this.selectedLocAttributeList.length != 0) {\r\n            this.selectedLocAttributeList.forEach(res => {\r\n                this.count++;\r\n                LocAttributeids.push(res.Id)\r\n            });\r\n        }\r\n        else {\r\n            // LocAttributeids.push(0);\r\n            LocAttributeids = [0, 1, 2, 3];\r\n        }\r\n\r\n        this.locationFilterModal.selectedLocAttributeId = LocAttributeids.join();\r\n\r\n        this.locationGridView.applyFilters(this.locationFilterModal);\r\n        if (msg == \"set\") {\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        } else if (msg == \"reset\") {\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n\r\n    }\r\n\r\n    async SaveFilters(isTopFilter?: boolean) {\r\n        var data = {};\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLocation).subscribe(res => {\r\n            this.IsFilterLoaded = true;\r\n            var input: any\r\n            if (res || res == \"\") {\r\n                if (res != \"\") {\r\n                    input = JSON.parse(res);\r\n                    data = input;\r\n                }\r\n                if (isTopFilter) {\r\n                    data['IsShowCarrierManaged'] = this.isShowCarrierManaged;\r\n                    data['Carrier'] = this.SelectedCarrierList;\r\n                    data['toogleMap'] = this.toogleMap;\r\n                    data['isShowNonRetailJobs'] = this.isShowNonRetailJobs;\r\n                    data['singleMulti'] = this.singleMulti;\r\n                } else {\r\n\r\n                    data['Regions'] = this.SelectedRegions;\r\n                    data['Customer'] = this.SelectedCustomerList;\r\n                    data['Location'] = this.SelectedlocationList;\r\n                    data['Priority'] = this.SelectedPriorityList;\r\n                    data['Status'] = this.SelectedStatusList;\r\n                    data['selectedLocAttributeList'] = this.selectedLocAttributeList;\r\n                    data['IsShowCarrierManaged'] = this.isShowCarrierManaged;\r\n                    data['Carrier'] = this.SelectedCarrierList;\r\n                    data['toogleMap'] = this.toogleMap;\r\n                    data['isShowNonRetailJobs'] = this.isShowNonRetailJobs;\r\n                    data['singleMulti'] = this.singleMulti;\r\n                }\r\n                this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLocation, JSON.stringify(data)).subscribe();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    public GetFilters() {\r\n        this.isLoading = true;\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLocation).subscribe(res => {\r\n            this.IsFilterLoaded = true;\r\n            if (res) {\r\n                this.SetFilters(JSON.parse(res));\r\n            }\r\n            else {\r\n                this.getAllCustomers();\r\n                this.toogleMap = true;\r\n            }\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        this.singleMulti = input.singleMulti == \"\" ? 1 : input.singleMulti;\r\n        if (this.isShowCarrierManaged != input.IsShowCarrierManaged) {\r\n            this.isShowCarrierManaged = input.IsShowCarrierManaged;\r\n        }\r\n        if (this.isShowNonRetailJobs != input.isShowNonRetailJobs) {\r\n            this.isShowNonRetailJobs = input.isShowNonRetailJobs;\r\n        }\r\n        if (this.toogleMap != input.toogleMap) {\r\n            this.toogleMap = input.toogleMap;\r\n        }\r\n        if (input.Carrier && input.Carrier.length > 0) {\r\n            this.SelectedCarrierList = input.Carrier as SelectedItem[] || [];\r\n        }\r\n        if (input.Regions && input.Regions.length > 0) {\r\n            this.SelectedRegions = input.Regions as SelectedItem[] || [];\r\n            // var ids = [];\r\n            // this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n            // this.SelectedRegionId = ids.join();\r\n        }\r\n        if (input.Customer && input.Customer.length > 0) {\r\n            this.SelectedCustomerList = input.Customer as Customer[] || [];\r\n        }\r\n        if (input.Location && input.Location.length > 0) {\r\n            this.SelectedlocationList = input.Location as Location[] || [];\r\n        }\r\n        if (input.Priority && input.Priority.length > 0) {\r\n            this.SelectedPriorityList = input.Priority as Priority[] || [];\r\n        }\r\n        if (input.Status && input.Status.length > 0) {\r\n            this.SelectedStatusList = input.Status as SelectedItem[] || [];\r\n        }\r\n        if (input.selectedLocAttributeList && input.selectedLocAttributeList.length > 0) {\r\n            this.selectedLocAttributeList = input.selectedLocAttributeList as SelectedItem[] || [];\r\n        }\r\n        this.ApplyFilters();\r\n        this.getAllCustomers();\r\n    }\r\n\r\n    getJobIdsForMapEventHandler(valueEmitted) {\r\n\r\n        this.jobIdsEmittedFromSalesComponent = valueEmitted;\r\n        if (this.toogleMap) {\r\n            this.fetchJobLocationData();\r\n        }\r\n    }\r\n\r\n}","<div class=\"row mt60\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(1) > -1\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-salemustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsMustGoLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}} \r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate=='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(2) > -1\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-saleshouldgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name </th>\r\n                                        <th data-key=\"WL\">Water Level  </th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsShouldGoLoading\"\r\n                                        class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span> <span title=\"Tank Inventory Alert\" class=\"activediff-dot\" *ngIf=\"row?.TankInventoryDiffinHrs>2\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(3) > -1\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-salecouldgo\" class=\"table table-bordered table-hover\" datatable\r\n                                [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank Name</th>\r\n                                        <th data-key=\"WL\">Water Level</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>\r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsCouldGoLoading\"\r\n                                        class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <!-- <td>{{row.SiteId}}</td> -->\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                class=\"active-dot\"></span>\r\n                                            <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>{{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <!-- <span *ngIf=\"row.UOM==1\">cm</span>\r\n                                            <span *ngIf=\"row.UOM==2\">in</span> -->\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>\r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\"\r\n                                                (click)=\"openModal(row)\" data-toggle=\"modal\"\r\n                                                data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\"\r\n                                                    data-target=\"raisedr\"\r\n                                                    onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a>\r\n                                            </ng-template>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"IsMustGoLoading || IsShouldGoLoading || IsCouldGoLoading\"\r\n            class=\"pa top0 bg-white left0 z-index5 loading-wrapper\"><span class=\"spinner-dashboard pa\"></span></div>\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n        [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n        aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\"> <i\r\n                            class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3>Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\"\r\n                                                (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\"\r\n                                                    [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                    [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                    class=\"form-control\" (change)=\"validateMsg=''\" required />\r\n                                                <div class=\"invalid-feedback\" [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline \">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline \">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\"> Should Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                    [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\"> Could Go</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10\">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                        class=\"btn btn-primary btn-lg\">Create</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <!--<a (click)=\"showDr = !showDr\">Existing Delivery Request(s)</a>\r\n                                <div *ngIf=\"showDr\">\r\n                                    <table class=\"table table-hover margin bottom details-table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Quantity</th>\r\n                                                <th>Schedule Date</th>\r\n                                                <th>Schedule Time</th>\r\n                                                <th>Driver</th>\r\n                                                <th>Carrier</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                <td>{{del.Quantity}}</td>\r\n                                                <td>{{del.ScheduleDate}}</td>\r\n                                                <td>{{del.ScheduleTime}}</td>\r\n                                                <td>{{del.Driver}}</td>\r\n                                                <td>{{del.Carrier}}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>-->\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button\r\n                                                class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                        [ngClass]=\"{'show': modalDetails.IsScheduled}\" aria-labelledby=\"headingOne\"\r\n                                        data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table \">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}\r\n                                                            </td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, SimpleChanges, Input, OnDestroy, OnChanges, ViewChild, AfterViewInit } from '@angular/core';\nimport { Subject, forkJoin, Subscription, merge } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Declarations } from '../../../declarations.module';\nimport { DipTestComponent } from '../../../shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\nimport { FormGroup } from '@angular/forms';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-grid-view',\n    templateUrl: './grid-view.component.html',\n    styleUrls: ['./grid-view.component.css']\n})\nexport class GridViewComponent implements OnInit, OnDestroy {\n\n    public MustGoSchedules: any = [];\n    public ShouldGoSchedules: any = [];\n    public CouldGoSchedules: any = [];\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    public IsShouldGoLoading: boolean;\n    public IsCouldGoLoading: boolean;\n    public IsMustGoLoading: boolean;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTankRegionId: string;\n\n    public SelectedTank: SalesDataModel;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public ScheduleQuantityTypes: any = [];\n\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n\n    loadingData = false;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[] = [];\n\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) {\n    }\n\n    ngOnInit() {\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n            this.bindPriorityArray();\n            this.getSalesData();\n        }));\n\n        //to load data - after second ngOnInit\n        if(this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').value){\n            this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(false);\n            this.bindPriorityArray();\n            this.getSalesData();\n        }\n\n        this.init();\n        this.getScheduleQuantityType();\n    }\n\n    init() {\n        this.initializeMustGo();\n        this.initializeCouldGo();\n        this.initializeShouldGo();\n        // this.getSalesData();\n    }\n    getScheduleQuantityType() {\n        this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n\n\n    ngOnDestroy(): void {\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n\n    columnsDetails = [\n        { data: 'Cust', \"autoWidth\": true },\n        { data: 'LocName', \"autoWidth\": true },\n        { data: 'Loc', \"autoWidth\": true },\n        { data: 'TName', \"autoWidth\": true },\n        { data: 'Avg7Day', \"autoWidth\": true },\n        { data: 'PDS', \"autoWidth\": true },\n        { data: 'CI', \"autoWidth\": true },\n        { data: 'Ullg', \"autoWidth\": true },\n        { data: 'lastDelivery', \"autoWidth\": true },\n        { data: 'lastDeliveryQty', \"autoWidth\": true },\n        { data: 'DRemg', \"autoWidth\": true }\n    ];\n\n    initializeMustGo() {\n\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtMustGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-MustGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-MustGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeCouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtCouldGoOptions = {\n            colReorder: true,\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-CouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-CouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n    initializeShouldGo() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtShouldGoOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details-ShouldGo', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details-ShouldGo', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n            // columns: this.columnsDetails,\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            fixedHeader: false,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            columnDefs: [\n                {\n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n\n    }\n\n    getSalesDtls() {\n        let inputs = {\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n            Priority: DeliveryReqPriority.None,\n            CustomerId: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            LocationId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedlocationList').value),\n            SelectedTab: SelectedTabEnum.Priority,\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsShowRetailJobs: ''\n        };\n        this.IsShouldGoLoading = true;\n        this.IsCouldGoLoading = true;\n        this.IsMustGoLoading = true;\n\n        forkJoin([this.dispatcherService.getSalesData(inputs),\n        this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                this.ShouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.ShouldGo && t.Inventory != '--') as SalesDataModel[];\n                this.CouldGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.CouldGo && t.Inventory != '--') as SalesDataModel[];\n                this.MustGoSchedules = await resp[0] && resp[0].filter(t => t.Priority == DeliveryReqPriority.MustGo && t.Inventory != '--') as SalesDataModel[];\n                this.destroyDatatable();\n                this.IsShouldGoLoading = false;\n                this.IsCouldGoLoading = false;\n                this.IsMustGoLoading = false;\n                this.dtCouldGoTrigger.next();\n                this.dtShouldGoTrigger.next();\n                this.dtMustGoTrigger.next();\n\n            });\n    }\n\n    filterData(): void {\n        this.getSalesData();\n    }\n\n    getSalesData(): void {\n        // let _priorities = []; \n        // this.SelectedPriorities.forEach(x => _priorities.push(x.Id));\n        // this.SelectedPrioritiesId = _priorities;\n        this.IsCouldGoLoading = true;\n        this.IsShouldGoLoading = true;\n        this.IsMustGoLoading = true;\n        //this.destroyDatatable();\n\n        this.getSalesDtls();\n    }\n\n    destroyDatatable(): void {\n        if (this.dtElements) {\n            this.dtElements.forEach((dtElement: DataTableDirective) => {\n                if (dtElement.dtInstance) {\n                    dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                        dtInstance.destroy();\n\n                    });\n                }\n            });\n        }\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public showTanks(row: SalesDataModel) {\n        this.SelectedTankRegionId = row.RegionId;\n        this.dipTestComponent.loadTankDR(row);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (this.RequiredQuantity == null || this.RequiredQuantity == 0 || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.dispatcherService.PostRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                    this.closeModal();\n\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n            });\n        }\n    }\n\n    SelectedPrioritiesId: number[] = []\n    bindPriorityArray() {\n        this.SelectedPrioritiesId = [];\n        let SelectedPriorities = this.salesTabFilterForm.get('SelectedPriorities').value as any[];\n        SelectedPriorities.forEach(res => { this.SelectedPrioritiesId.push(res.Id) });\n    }\n}\n\n","<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\">\r\n        <div>\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Location View</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-Locationmustgo\" class=\"table table-bordered table-hover\" datatable\r\n                                   [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"Cust\">Customer</th>\r\n                                        <th data-key=\"LocName\">Location Name</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"Loc\">Inventory Capture Method</th>\r\n                                        <th data-key=\"TName\">Tank/Asset Name</th>\r\n                                        <th data-key=\"WaterLevel\">WaterLevel</th>\r\n                                        <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                        <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                        <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                        <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                        <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                        <th data-key=\"Ullg\">Ullage</th>\r\n                                        <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                        <th data-key=\"lastDelivery\">Last Delivered On</th>                                       \r\n                                        <th data-key=\"DRemg\">Days Remaining</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                        <span class='spinner-dashboard pa'></span>\r\n                                    </tr>\r\n                                    <tr *ngFor=\"let row of LocationSchedules\">\r\n                                        <td>{{row.CompanyName}}</td>\r\n                                        <td>{{row.LocationName}}</td>\r\n                                        <td>{{row.Location}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>\r\n                                            {{row.TankName}} <span *ngIf=\"row?.IsUnknownOrMissing\"\r\n                                                                   class=\"active-dot\"></span>\r\n                                                                     <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"  *ngIf=\"(row?.TankInventoryDiffinHrs>2 || row?.TankInventoryDiffinHrs==0 && this.IsShowRetailJobs)\"></span>\r\n                                        </td>\r\n                                        <td>{{row.WaterLevel =='--'?'Not Available':row.WaterLevel}}</td>\r\n                                        <td>\r\n                                            {{row.AvgSale =='--'?'Not Available':row.AvgSale}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.AvgSale !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.AvgSale !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                                {{row.PrevSale =='--'?'Not Available':row.PrevSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.PrevSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.PrevSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                                Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                            </div>\r\n                                            <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                                {{row.WeekAgoSale =='--'?'Not Available':row.WeekAgoSale}}\r\n                                                <span *ngIf=\"row.UOM==3 && row.WeekAgoSale !='--'\"> G</span>\r\n                                                <span *ngIf=\"row.UOM==4 && row.WeekAgoSale !='--'\"> L</span>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>{{row.Inventory =='--'?'Not Available':row.Inventory | number:'1.0-2' }}\r\n                                            <span *ngIf=\"row.UOM==3 && row.Inventory !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Inventory !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{(row.LastReadingTime ==null ||row.LastReadingTime=='--')?'Not Available':row.LastReadingTime}}</td>\r\n                                        <td>{{row.Ullage=='--'?'Not Available':row.Ullage}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.Ullage !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.Ullage !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveredQuantity =='--'?'Not Available':row.LastDeliveredQuantity}}\r\n                                            <span *ngIf=\"row.UOM==3 && row.LastDeliveredQuantity !='--'\"> G</span>\r\n                                            <span *ngIf=\"row.UOM==4 && row.LastDeliveredQuantity !='--'\"> L</span>\r\n                                        </td>\r\n                                        <td>{{row.LastDeliveryDate =='--'?'Not Available':row.LastDeliveryDate}}</td>                                     \r\n                                       \r\n                                        <td>{{row.DaysRemaining =='--'?'NA':row.DaysRemaining}}</td>\r\n                                        <td>\r\n                                            <a *ngIf=\"row?.Status == 'Scheduled'; else notSceduledBlock\" (click)=\"openModal(row)\" data-toggle=\"modal\" data-target=\"#schedulesModal\">{{row.Status}}</a>\r\n                                            <ng-template #notSceduledBlock><a (click)=\"showTanks(row)\" data-target=\"raisedr\" onclick=\"slidePanel('#raisedr','60%')\">{{row.Status}}</a></ng-template>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-container *ngTemplateOutlet=\"schedulesModal;context:dsModal\">\r\n</ng-container>\r\n\r\n<ng-template #schedulesModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true,'fade':true,'show': modalDetails.display==='block'}\"\r\n         [ngStyle]=\"{'display':modalDetails.display}\" id=\"schedulesModal\" tabindex=\"-1\" role=\"dialog\"\r\n         aria-labelledby=\"schedulesModal\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pt10 pb5 no-border\">\r\n                    <h3 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{modalDetails.title}}\r\n                    </h3>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt5\" (click)=\"closeModal()\" aria-label=\"Close\">\r\n                        <i class=\"fa fa-close fa-lg\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"assets-header\" *ngIf=\"modalDetails.display==='block'\">\r\n                        <div class=\"well bg-white no-shadow border border pr\" *ngIf=\"!modalDetails.IsScheduled\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <h3 class=\"fs14 font-bold\">Create DR</h3>\r\n                                </div>\r\n                                <div class=\"row col-sm-12\">\r\n                                    <div class=\"col-sm-3 input-group\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity Type</label>\r\n                                            <select [(ngModel)]=\"ScheduleQuantityType\" class=\"form-control\" (change)=\"RequiredQuantity=null;validateMsg='';\">\r\n                                                <option *ngFor=\"let sqType of ScheduleQuantityTypes\" [value]=\"sqType.Id\">\r\n                                                    {{sqType.Name}}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-3\" *ngIf=\"ScheduleQuantityType==1;\">\r\n                                        <div class=\"form-group mb0\">\r\n                                            <label>Quantity</label>\r\n                                            <div class=\"input-group\">\r\n                                                <input type=\"text\" name=\"RequiredQuantity\"\r\n                                                       [disabled]=\"ScheduleQuantityType>1 ? true : null\"\r\n                                                       [(ngModel)]=\"RequiredQuantity\" numberWithDecimal\r\n                                                       (change)=\"validateMsg='';\"\r\n                                                       class=\"form-control\" required />\r\n                                                <div class=\"invalid-feedback\"\r\n                                                     [ngClass]=\"{'show-element': !isValid}\">\r\n                                                    {{validateMsg}}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 mt5\">\r\n                                        <label>Priority</label>\r\n                                        <div class=\"col-sm-12 pa0 mt5\">\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"mustgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"1\">\r\n                                                <label class=\"form-check-label\" for=\"mustgo-dr\"> Must Go</label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"shouldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"2\">\r\n                                                <label class=\"form-check-label\" for=\"shouldgo-dr\">\r\n                                                    Should\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"form-check form-check-inline\">\r\n                                                <input class=\"form-check-input\" id=\"couldgo-dr\" type=\"radio\"\r\n                                                       [(ngModel)]=\"DrPriority\" [value]=\"3\">\r\n                                                <label class=\"form-check-label\" for=\"couldgo-dr\">\r\n                                                    Could\r\n                                                    Go\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 text-right mt10 \">\r\n                                    <button (click)=\"onDrSubmit()\" type=\"button\"\r\n                                            class=\"btn btn-primary btn-lg\">\r\n                                        Create\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"DRLoader\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                            <span class='spinner-dashboard pa'></span>\r\n                        </div>\r\n                        <div *ngIf=\"ExistingDeliveries.length\">\r\n                            <div class=\"accordionExitingDrReq mt10 mb10\" id=\"accordionExitingDrReq\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header pt5 pb5 pl10 pr10\" id=\"headingOne\">\r\n                                        <h2 class=\"mb-0\">\r\n                                            <button class=\"d-flex align-items-center justify-content-between btn btn-link collapsed\"\r\n                                                    type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\r\n                                                    aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                                Existing Delivery Request(s)\r\n                                                <span class=\"fa-stack fa-sm icon-color-b\">\r\n                                                    <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                    <i class=\"fas fa-angle-down fa-stack-1x fa-inverse\"></i>\r\n                                                </span>\r\n                                            </button>\r\n                                        </h2>\r\n\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" class=\"collapse\"\r\n                                         [ngClass]=\"{'show':modalDetails.IsScheduled}\"\r\n                                         aria-labelledby=\"headingOne\" data-parent=\"#accordionExitingDrReq\">\r\n                                        <div class=\"card-body pa5\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover margin bottom details-table\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Schedule Date</th>\r\n                                                            <th>Schedule Time</th>\r\n                                                            <th>Driver</th>\r\n                                                            <th>Carrier</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr *ngFor=\"let del of ExistingDeliveries\">\r\n                                                            <td>{{del.QuantityTypeId==0||del.QuantityTypeId==1?del.Quantity:del.QuantityTypeName}}</td>\r\n                                                            <td>{{del.ScheduleDate}}</td>\r\n                                                            <td>{{del.ScheduleTime}}</td>\r\n                                                            <td>{{del.Driver}}</td>\r\n                                                            <td>{{del.Carrier}}</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"false\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\" [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>\r\n","import { Component, OnInit, ViewChildren, QueryList, SimpleChanges, Input, OnDestroy, OnChanges, ViewChild, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { Subject, forkJoin } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel, DeliveryDetailsModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Declarations } from '../../../declarations.module';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { DipTestComponent } from '../../../shared-components/dip-test/dip-test.component';\nimport { LocationFilterModal } from '../../dispatcher.model';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-location-view',\n    templateUrl: './location-view.component.html',\n    styleUrls: ['./location-view.component.css']\n})\nexport class LocationViewComponent implements OnInit, OnChanges, OnDestroy {\n    public LocationSchedules: any = [];\n    IsLoading = false;\n    public showDr = false;\n    public IsDrExists = false;\n    public DRLoader = false;\n    public ExistingDeliveries: DeliveryDetailsModel[] = [];\n    public DrPriority: DeliveryReqPriority = DeliveryReqPriority.MustGo;\n    public RequiredQuantity: number;\n    public ScheduleQuantityType: number;\n    public SelectedTank: SalesDataModel;\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    SelectedPrioritiesId: any = [];\n    public SelectedRegionId: string;\n    public SelectedTankRegionId: string;\n    public SelectedCustomerId: string;\n    public SelectedLocationId: string;\n    public dsModal = { modalDetails: { display: 'none', data: 'Modal Show', title: 'Delivery Schedule(s)', IsScheduled: false } };\n    public isValid: boolean = true;\n    public validateMsg: string;\n    public IsDataLoaded: boolean = false;\n    public ScheduleQuantityTypes: any = [];\n    @Input() public IsFilterLoaded: boolean = false;\n    @Input() public SelectedCustomers = [];\n    @Input() public SelectedLocations = [];\n    @Input() public SelectedRegions = [];\n    @Input() public SelectedPriorities = [];\n    @Input() public SelectedCarriers = [];\n    @Input() public IsShowCarrierManaged: boolean = false;\n    @Input() public SelectedStatus = [];\n    @Input() public IsShowRetailJobs: boolean = false;\n    @Input() selectedLocAttributeList = [];\n    @Output() getJobIdsForMap: EventEmitter<any[]> = new EventEmitter<any[]>();\n    public SelectedStatusId: string;\n    public selectedLocAttributeId: string;\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    SelectedCarrierIds: string;\n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.initializeGrid();\n        this.getScheduleQuantityType();\n        // this.getSalesData();\n\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        var isFilterData = false;\n        // if (change.IsFilterLoaded && change.IsFilterLoaded.currentValue) {\n        //     this.IsFilterLoaded = change.IsFilterLoaded.currentValue;\n        // }\n        // if (change.SelectedRegions && change.SelectedRegions.currentValue) {\n        //     this.SelectedRegions = change.SelectedRegions.currentValue;\n        //     var ids = [];\n        //     this.SelectedRegionId = '';\n        //     this.SelectedRegions.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedRegionId = ids.join();\n        //     if (change.SelectedRegions.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedRegions.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousRegionIds = previousIds.join();\n        //         if (this.SelectedRegionId != previousRegionIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedCustomers && change.SelectedCustomers.currentValue) {\n        //     this.SelectedCustomers = change.SelectedCustomers.currentValue;\n        //     var ids = [];\n        //     this.SelectedCustomerId = '';\n        //     this.SelectedCustomers.forEach(res => { ids.push(res.CompanyId) });\n        //     this.SelectedCustomerId = ids.join();\n        //     if (change.SelectedCustomers.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedCustomers.previousValue.forEach(res => { previousIds.push(res.CompanyId) });\n        //         var previousCustomerIds = previousIds.join();\n        //         if (this.SelectedCustomerId != previousCustomerIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedLocations && change.SelectedLocations.currentValue) {\n        //     this.SelectedLocations = change.SelectedLocations.currentValue;\n        //     var ids = [];\n        //     this.SelectedLocationId = '';\n        //     this.SelectedLocations.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedLocationId = ids.join();\n        //     if (change.SelectedLocations.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedLocations.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousLocationIds = previousIds.join();\n        //         if (this.SelectedLocationId != previousLocationIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        if (change.IsShowCarrierManaged && change.IsShowCarrierManaged.currentValue != change.IsShowCarrierManaged.previousValue) {\n            this.IsShowCarrierManaged = change.IsShowCarrierManaged.currentValue;\n            isFilterData = true;\n        }\n        if (change.SelectedCarriers && change.SelectedCarriers.currentValue) {\n            this.SelectedCarriers = change.SelectedCarriers.currentValue;\n            var ids = [];\n            this.SelectedCarrierIds = '';\n            this.SelectedCarriers.forEach(res => { ids.push(res.Id) });\n            this.SelectedCarrierIds = ids.join();\n            if (change.SelectedCarriers.previousValue) {\n                var previousIds = [];\n                change.SelectedCarriers.previousValue.forEach(res => { previousIds.push(res.Id) });\n                var previousCarrierIds = previousIds.join();\n                if (this.SelectedCarrierIds != previousCarrierIds) {\n                    isFilterData = true;\n                }\n            } else {\n                isFilterData = true;\n            }\n        }\n        // if (change.SelectedStatus && change.SelectedStatus.currentValue) {\n        //     this.SelectedStatus = change.SelectedStatus.currentValue;\n        //     var ids = [];\n        //     this.SelectedStatusId = '';\n        //     this.SelectedStatus.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedStatusId = ids.join();\n        //     if (change.SelectedStatus.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedStatus.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousStatusIds = previousIds.join();\n        //         if (this.SelectedStatusId != previousStatusIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue) {\n        //     this.SelectedPriorities = change.SelectedPriorities.currentValue;\n        //     var ids = [];\n        //     this.SelectedPrioritiesId = '';\n        //     this.SelectedPriorities.forEach(res => { ids.push(res.Id) });\n        //     this.SelectedPrioritiesId = ids.join();\n        //     if (change.SelectedPriorities.previousValue) {\n        //         var previousIds = [];\n        //         change.SelectedPriorities.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousPriorityIds = previousIds.join();\n        //         if (this.SelectedPrioritiesId != previousPriorityIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        // if (change.selectedLocAttributeList && change.selectedLocAttributeList.currentValue) {\n        //     var selectedLocAttributeList = change.selectedLocAttributeList.currentValue;\n        //     var ids = [];\n        //     this.selectedLocAttributeId = '';\n        //     selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\n        //     this.selectedLocAttributeId = ids.join();\n        //     if (change.selectedLocAttributeList.previousValue) {\n        //         var previousIds = [];\n        //         change.selectedLocAttributeList.previousValue.forEach(res => { previousIds.push(res.Id) });\n        //         var previousLocAttributeIds = previousIds.join();\n        //         if (this.selectedLocAttributeId != previousLocAttributeIds) {\n        //             isFilterData = true;\n        //         }\n        //     } else {\n        //         isFilterData = true;\n        //     }\n        // }\n        if (change.IsShowRetailJobs && change.IsShowRetailJobs.currentValue != change.IsShowRetailJobs.previousValue) {\n            this.IsShowRetailJobs = change.IsShowRetailJobs.currentValue;\n            isFilterData = true;\n        }\n        if ((isFilterData || !this.IsDataLoaded) && this.IsFilterLoaded) {\n            this.IsDataLoaded = true;\n            this.getSalesData();\n        }\n    }\n\n\n    ngOnDestroy(): void {\n        if(this.dtTrigger)\n        this.dtTrigger.unsubscribe();\n    }\n    // regionChanged(event?: any): void {\n    //     this.filterData();\n    // }\n\n    // public onRegionSelect() {\n    //     var ids = [];\n    //     this.SelectedRegionId = '';\n    //     this.SelectedRegions.forEach(res => { ids.push(res.Id) });\n    //     this.SelectedRegionId = ids.join();\n    //     this.regionChanged();\n\n    // }\n\n    // customerChanged(): void {\n    //     this.filterData();\n    // }\n\n    // onPrioritySelect(event: any): void {\n    //     this.filterData();\n    // }\n\n    // onPriorityUnselect(event: any): void {\n    //     this.filterData();\n    // }\n\n    // filterData(): void {\n    //     this.getSalesData();\n    // }\n\n    getScheduleQuantityType() {\n        this.dispatcherService.GetScheduleQtyType().subscribe((SQT: any[]) => {\n            this.ScheduleQuantityTypes = SQT || [];\n        });\n    }\n\n    initializeGrid() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]],\n            fixedHeader: false,\n            columnDefs: [\n                { \n                    targets: 13,\n                    type:  'null-at-bottom',\n                },\n            ],\n            //order: [13]\n        };\n    }\n\n\n    public getSalesData() {\n        let inputs = {\n            RegionId: this.SelectedRegionId,\n            Priority: this.SelectedPrioritiesId,\n            CustomerId: this.SelectedCustomerId,\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Location,\n            Carriers: this.SelectedCarrierIds,\n            IsShowCarrierManaged: this.IsShowCarrierManaged,\n            IsShowRetailJobs: this.IsShowRetailJobs,\n            InventoryCaptureType: this.selectedLocAttributeId\n        };\n        this.IsLoading = true;\n        forkJoin([this.dispatcherService.getSalesData(inputs),\n        this.dispatcherService.GetRaisedExceptions()])\n            .subscribe(async (resp) => {\n                await resp[0] && resp[0].map(m => {\n                    if (resp[1] && resp[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == m.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0) {\n                        m.IsUnknownOrMissing = true;\n                    }\n                    else\n                        m.IsUnknownOrMissing = false;\n                })\n                if (this.SelectedStatus && this.SelectedStatus.length && resp[0]) {\n                    resp[0] = resp[0].filter(t => this.SelectedStatusId.includes(t.Status))\n                }\n                this.LocationSchedules = resp[0];\n                this.passJobIdsToMapData();\n                this.IsLoading = false;\n                this.datatableRerender();\n            });\n\n        // this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {\n        //   this.LocationSchedules = resp;\n        //   this.IsLoading = false;\n        //   this.datatableRerender();\n        // });\n    }\n\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => { dtInstance.destroy(); });\n        }\n        this.dtTrigger.next();\n    }\n\n    public openModal(row: SalesDataModel) {\n        this.resetModal();\n        this.SelectedTank = row;\n        this.DRLoader = true;\n        this.dispatcherService.GetDeliveryDetails(row.TfxJobId, row.ProductTypeId).subscribe((resp: DeliveryDetailsModel[]) => {\n            this.ExistingDeliveries = resp;\n            this.DRLoader = false;\n        });\n        this.dsModal.modalDetails.display = 'block';\n        let isSchedule = (row.Status == 'Scheduled');\n        this.dsModal.modalDetails.IsScheduled = isSchedule;\n        this.showDr = isSchedule;\n        //this.MaxFillQuantity = 120;\n    }\n    public resetModal() {\n        this.ExistingDeliveries = [];\n        this.DrPriority = DeliveryReqPriority.MustGo;\n        this.RequiredQuantity = null;\n        this.ScheduleQuantityType = 1;\n        this.validateMsg = \"\";\n        this.isValid = true;\n    }\n\n    public closeModal() {\n        this.dsModal.modalDetails.display = 'none';\n        this.isValid = true;\n        $(\".modal-backdrop\").hide();\n        $('body').removeClass('modal-open');\n    }\n\n    public toggleDrs() {\n        this.showDr = !this.showDr\n    }\n\n    public onDrSubmit() {\n        this.validateMsg = \"\";\n        this.isValid = true;\n        let raiseDr = {\n            SiteId: this.SelectedTank.SiteId,\n            TankId: this.SelectedTank.TankId,\n            StorageId: this.SelectedTank.StorageId,\n            RequiredQuantity: this.ScheduleQuantityType == 1 ? this.RequiredQuantity : 0,\n            ScheduleQuantityType: this.ScheduleQuantityType,\n            JobId: this.SelectedTank.TfxJobId,\n            FuelTypeId: this.SelectedTank.ProductTypeId,\n            Priority: this.DrPriority\n        };\n        if (this.ScheduleQuantityType == 1 && (!(this.RequiredQuantity > 0) || this.RequiredQuantity < 0.00001)) {\n            this.validateMsg = \"Invalid required quantity.\"; this.isValid = false;\n        }\n        else if (this.ScheduleQuantityType == 1 && this.SelectedTank.MaxFillQuantity && this.SelectedTank.MaxFillQuantity > 0 && this.RequiredQuantity > this.SelectedTank.MaxFillQuantity) {\n            this.validateMsg = \"Should not exceed max fill. (\" + this.SelectedTank.MaxFillQuantity + \")\"; this.isValid = false;\n        }\n        else {\n            this.DRLoader = true;\n            this.dispatcherService.PostRaiseDeliveryRequest(raiseDr).subscribe((response) => {\n                if (response != null && response.StatusCode == 0) {\n                    Declarations.msgsuccess(response.StatusMessage, undefined, undefined);\n                } else {\n                    Declarations.msgerror(response.StatusMessage, undefined, undefined);\n                }\n                this.DRLoader = false;\n                this.closeModal();\n            });\n        }\n    }\n\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n\n    public showTanks(row: SalesDataModel) {\n        this.SelectedTankRegionId = row.RegionId;\n        this.dipTestComponent.loadTankDR(row);\n    }\n\n    public passJobIdsToMapData() {\n        var jobsPriority = [];\n        if (this.LocationSchedules) {\n            this.LocationSchedules.forEach(res => {\n                if (!jobsPriority.find(t => t.TfxJobId == res.TfxJobId)) {\n                    jobsPriority.push({ TfxJobId: res.TfxJobId, Priority: res.Priority })\n                }\n            });\n            this.getJobIdsForMap.emit(jobsPriority);\n        } else {\n            this.getJobIdsForMap.emit(jobsPriority);\n        }\n    }\n\n    public applyFilters(locationFilterModal:LocationFilterModal){\n        if(locationFilterModal){\n            this.SelectedRegionId = locationFilterModal.SelectedRegionId;\n            this.SelectedCustomerId = locationFilterModal.SelectedCustomerId;\n            this.SelectedLocationId = locationFilterModal.SelectedLocationId;\n            this.SelectedStatusId = locationFilterModal.SelectedStatusId;\n            this.SelectedPrioritiesId = locationFilterModal.SelectedPrioritiesId;\n            this.selectedLocAttributeId = locationFilterModal.selectedLocAttributeId;\n            this.getSalesData();\n        }\n    }\n}","import { Component, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { TfxModule } from '../../../buyer-wally-board/Models/BuyerWallyBoard';\nimport { GridViewComponent } from './grid-view.component';\nimport { TankViewMasterComponent } from './tank-view-master.component';\nimport { Declarations } from 'src/app/declarations.module';\nimport { FormGroup } from '@angular/forms';\nimport { WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\nimport { InventoryDataCaptureList, LoadPriorities } from 'src/app/app.constants';\nimport { SalesTabViewType } from 'src/app/app.enum';\n\n\n@Component({\n    selector: 'app-sales-data',\n    templateUrl: './sales-data.component.html',\n    styleUrls: ['./sales-data.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SalesDataComponent implements OnInit {\n    public toogleMap: Boolean = true;\n    public toogleFilter: Boolean = false;\n    public toogleDriver: Boolean = false;\n    public toogleGrid: Boolean = false;\n    public toogleExpandMap: Boolean = false;\n    public RegionDdlSettings: any = {};\n    public CustomerDdlSettings: any = {};\n    public Regions: DistatcherRegionModel[] = [];\n    public customerList = [];\n    public locationList = [];\n    public loadingData: boolean = true;\n    public PriorityDdlSettings: any = {};\n    public CarrierDdlSettings: any = {};\n    public LoadPriorities: any = LoadPriorities;\n    public carrierList: any[] = [];\n\n    LocationAttributeList = InventoryDataCaptureList;\n    public filterCount: number = 0;\n\n    //filter form\n    salesTabFilterForm: FormGroup;\n\n    get _selectedlocationList() { return this.salesTabFilterForm.get('SelectedlocationList').value as any[]; }\n    get _selectedCustomerList() { return this.salesTabFilterForm.get('SelectedCustomerList').value as any[]; }\n    get _selectedRegions() { return this.salesTabFilterForm.get('SelectedRegions').value as any[]; }\n    get _selectedPriorities() { return this.salesTabFilterForm.get('SelectedPriorities').value as any[]; }\n    get _selectedLocAttributeList() { return this.salesTabFilterForm.get('SelectedLocAttributeList').value as any[]; }\n    get _selectedCarriers() { return this.salesTabFilterForm.get('SelectedCarriers').value as any[]; }\n    \n    constructor(private dispatcherService: DispatcherService, private carrierService: CarrierService, private wallyUtilService: WallyUtilService) { \n        this.salesTabFilterForm = this.wallyUtilService.getSalesTabFilterForm();\n    }\n\n    ngOnInit() {\n        this.init();       \n    }\n\n    init() {\n        this.RegionDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.CustomerDdlSettings = {\n            singleSelection: false,\n            idField: 'CompanyId',\n            textField: 'CompanyName',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n\n        this.PriorityDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.CarrierDdlSettings = {\n            singleSelection: false,\n            idField: 'Id',\n            textField: 'Name',\n            selectAllText: 'Select All',\n            unSelectAllText: 'UnSelect All',\n            itemsShowLimit: 1,\n            allowSearchFilter: true,\n            enableCheckAll: false\n        }\n        this.getRegions();\n        this.getCarriers();\n        this.GetFilters();\n    }\n    clickOutsideDropdown() {\n        if (this.toogleFilter) {\n            this.toogleFilter = false;\n        }\n    }\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n\n    regionChanged(): void {\n        let _rgnIds = this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value)\n        if (_rgnIds)\n            this.getCustomerListByRegionId(_rgnIds);\n        else\n            this.initAllCustomers();\n    }\n\n    private getCustomerListByRegionId(SelectedRegionId: string, isShowAllLoc?: boolean) {\n\n        this.loadingData = true;\n        this.carrierService.getJobListForCarrier(SelectedRegionId, this.salesTabFilterForm.get('IsShowCarrierManaged').value, this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value)).subscribe(response => {\n            this.loadingData = false;\n            this.customerList = response;\n            let SelectedCustomerList = this._selectedCustomerList.filter(t => { return this.customerList.filter(el => el.CompanyId == t.CompanyId).length > 0 });\n            this.salesTabFilterForm.get('SelectedCustomerList').setValue(SelectedCustomerList || []);\n            if (isShowAllLoc)\n                this.initAllLocation()\n        });\n    }\n\n    getCarriers() {\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\n            this.carrierList = data;\n        });\n    }\n    public getRegions() {\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\n            this.Regions = data;\n            this.initAllCustomers();\n        });\n    }\n\n    private initAllCustomers() {\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);\n    }\n    private initAllLocation() {\n\n        this.locationList = [];\n        this.customerList.forEach(res => {\n            this.locationList = this.locationList.concat(res.Jobs);\n        });\n\n        let SelectedlocationList = this._selectedlocationList.filter(t => { return this.locationList.filter(el => el.JobID == t.JobID).length > 0 });\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(SelectedlocationList || []);\n    }\n\n    public onCustomerSelect() {\n\n        if (this._selectedCustomerList && this._selectedCustomerList.length > 0) {\n            this._selectedCustomerList.forEach(res => {\n\n                let _cust = this.customerList.find(f => f.CompanyId == res.CompanyId);\n                if(_cust && _cust.Jobs){\n                    this.locationList = this.locationList.concat(_cust.Jobs);\n                }\n            });\n\n            let SelectedlocationList = this._selectedlocationList.filter(t => { return this.locationList.filter(el => el.JobID == t.JobID).length > 0 });\n            this.salesTabFilterForm.get('SelectedlocationList').setValue(SelectedlocationList || []);\n        }\n        else {\n            this.initAllLocation();\n        }\n    }\n\n    public onCarrierChange() {\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);\n        this.ApplyFilters();\n        this.SaveFilters(true);\n    }\n    public ShowCarrierMangedData() {\n        this.salesTabFilterForm.get('SelectedCarriers').setValue([]);\n        this.salesTabFilterForm.get('SelectedRegions').setValue([]);\n        this.getCustomerListByRegionId(this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value), true);      \n         this.ApplyFilters();\n         this.SaveFilters(true);\n    }\n\n\n    public SaveFilters(isTopFilter?:boolean) {\n        var filterData = {};\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardSales).subscribe(res => {\n            var input : any\n            if (res || res==\"\") {\n                if(res !=\"\")\n                {\n                    input= JSON.parse(res);   \n                    filterData= input;     \n                }\n                                \n                if(isTopFilter){ \n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this._selectedCarriers;                  \n                }else{\n\n                    filterData['SelectedRegions'] = this._selectedRegions || [];\n                    filterData['SelectedCustomerList'] = this._selectedCustomerList || [];\n                    filterData['SelectedlocationList'] = this._selectedlocationList || [];\n                    filterData['SelectedPriorities'] = this._selectedPriorities || [];\n                    filterData['selectedLocAttributeList'] = this._selectedLocAttributeList || [];                    \n                    filterData['isShowCarrierManaged'] = this.salesTabFilterForm.get('IsShowCarrierManaged').value;\n                    filterData['SelectedCarriers'] = this._selectedCarriers;\n                }\n                this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardSales, JSON.stringify(filterData)).subscribe();\n            }            \n        });\n    }\n\n    public GetFilters() {\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardSales).subscribe(res => {\n            if (res && res.length > 0) {\n                this.SetFilters(res);\n            }\n        });\n    }\n\n    public SetFilters(input: any) {\n\n        var filterData = JSON.parse(input);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue(filterData.SelectedlocationList || []);\n        this.salesTabFilterForm.get('SelectedCustomerList').setValue(filterData.SelectedCustomerList || []);\n        this.salesTabFilterForm.get('SelectedRegions').setValue(filterData.SelectedRegions || []);\n        this.salesTabFilterForm.get('SelectedPriorities').setValue(filterData.SelectedPriorities || []);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue(filterData.selectedLocAttributeList || []);\n        this.salesTabFilterForm.get('SelectedCarriers').setValue(filterData.SelectedCarriers || []);\n        this.salesTabFilterForm.get('IsShowCarrierManaged').setValue(filterData.isShowCarrierManaged);\n\n        this.ApplyFilters();\n\n        if (this._selectedRegions && this._selectedRegions.length > 0) {\n            this.regionChanged();\n        }\n        else if (this._selectedCustomerList && this._selectedCustomerList.length > 0) {\n            this.onCustomerSelect();\n        }\n    }\n\n    public ResetFilters(){\n        this.salesTabFilterForm.get('SelectedRegions').setValue([]);\n        this.salesTabFilterForm.get('SelectedCustomerList').setValue([]);\n        this.salesTabFilterForm.get('SelectedlocationList').setValue([]);\n        this.salesTabFilterForm.get('SelectedPriorities').setValue([]);\n        this.salesTabFilterForm.get('SelectedLocAttributeList').setValue([]);\n\n        this.ApplyFilters('reset');\n    }\n\n    public ApplyFilters(msg?: string) {\n\n        this.salesTabFilterForm.get('IsApplyFilter').setValue(true);\n\n        if (msg == \"set\") {\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\n        } else if (msg == \"reset\") {\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\n        }\n\n        this.setFilterCount();\n    }\n\n    setFilterCount() {\n        this.filterCount = 0;\n\n        if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.PriorityTab) {\n\n            this.filterCount += this._selectedRegions.length;\n            this.filterCount += this._selectedCustomerList.length;\n            this.filterCount += this._selectedlocationList.length;\n            this.filterCount += this._selectedPriorities.length;\n            this.filterCount += this._selectedLocAttributeList.length;\n        }\n        else if (this.salesTabFilterForm.get('SalesViewType').value == SalesTabViewType.TanksTab) {\n\n            this.filterCount += this._selectedRegions.length;\n            this.filterCount += this._selectedCustomerList.length;\n            this.filterCount += this._selectedLocAttributeList.length;\n        }\n\n    }\n    salesViewTypeChanged(type: SalesTabViewType) {\n        this.salesTabFilterForm.get('SalesViewType').setValue(type);\n        this.salesTabFilterForm.get('IsApplyFilterOnPageLoad').setValue(true);\n        this.setFilterCount();\n    }\n}\n","<div class=\"col-sm-9 sticky-header-sales\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <div class=\"dib border pa5 radius-capsule shadow-b pull-left mb10\">\r\n                <div class=\"btn-group btn-filter\">\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"1\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==1\" />\r\n                    <label class=\"btn ml0\" (click)=\"salesViewTypeChanged(1)\">Priority</label>\r\n\r\n                    <input class=\"hide-element\" type=\"radio\" [name]=\"'saletype'\" [value]=\"2\"\r\n                        [checked]=\"salesTabFilterForm.get('SalesViewType').value==2\" />\r\n                    <label class=\"btn\" (click)=\"salesViewTypeChanged(2);\">Tanks</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\" [formGroup]=\"salesTabFilterForm\">\r\n            <div class=\"form-check form-check-inline fs14 mt10\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" name=\"IsShowCarrierManaged\"\r\n                    formControlName=\"IsShowCarrierManaged\" (change)=\"ShowCarrierMangedData()\">\r\n                <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n            </div>\r\n            <div class=\"mtm5\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\">\r\n                <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\"\r\n                    [autoClose]=\"'outside'\">Select Carrier</a>\r\n                <ng-template #popContent>\r\n                    <div class=\"col-sm-12 mb10 p-0\">\r\n                        <ng-multiselect-dropdown formControlName=\"SelectedCarriers\" *ngIf=\"salesTabFilterForm.get('IsShowCarrierManaged').value\"\r\n                            [settings]=\"CarrierDdlSettings\" [placeholder]=\"'Select Carrier'\" [data]=\"carrierList\"\r\n                            (onSelect)=\"onCarrierChange()\" (onDeSelect)=\"onCarrierChange()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"col pt5\">\r\n            <!--<ng-multiselect-dropdown [(ngModel)]=\"SelectedRegions\" [settings]=\"RegionDdlSettings\"\r\n                [placeholder]=\"'Select Region'\" [data]=\"Regions\" (onSelect)=\"onRegionSelect($event)\"\r\n                (onDeSelect)=\"onRegionUnselect($event)\" (onSelectAll)=\"onAllRegionSelect($event)\"\r\n                (onDeSelectAll)=\"onAllRegionDeSelect($event)\">\r\n            </ng-multiselect-dropdown>-->\r\n        </div>\r\n        <div class=\"col pl0 text-right pt8\"> <!--(clickOutside)=\"clickOutsideDropdown()\">-->\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"filterCount>0\" class=\"circle-badge\">{{filterCount}}</span></i> Filters</a>\r\n            <!--<a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n            <!--<div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n        <div class=\"pull-right\">\r\n            <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 mb15\">\r\n                         <select class=\"form-control\" (change)=\"customerChanged($event)\">\r\n                            <option [value]=null>Select Customer</option>\r\n                            <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                {{customer.CompanyName}}\r\n                            </option>\r\n                        </select>\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedCustomerList\"\r\n                            [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                            [data]=\"customerList\" (onSelect)=\"onCustomerSelect()\"\r\n                            (onDeSelect)=\"onCustomerSelect()\" (onSelectAll)=\"onCustomerSelect()\"\r\n                            (onDeSelectAll)=\"onCustomerSelect()\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\" *ngIf=\"salesViewType!=2\">\r\n                         <select class=\"form-control\" (change)=\"locationChanged($event)\">\r\n                            <option [value]=null>Select Location</option>\r\n                            <option *ngFor=\"let customer of locationList\" [value]=\"customer.Id\"\r\n                                [selected]=\"SelectedLocationId==customer.Id\">\r\n                                {{customer.Name}}\r\n                            </option>\r\n                        </select>\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedlocationList\"\r\n                            [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Location'\"\r\n                            [data]=\"locationList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\" *ngIf=\"salesViewType==1\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorities\"\r\n                            [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                            [data]=\"LoadPriorities\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                    <div class=\"col-sm-12 mb15\">\r\n                        <ng-multiselect-dropdown [(ngModel)]=\"selectedLocAttributeList\"\r\n                            [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                            [data]=\"LocationAttributeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>-->\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <app-grid-view *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\" [salesTabFilterForm]=\"salesTabFilterForm\"> Loading...\r\n        </app-grid-view>\r\n        <app-tank-view-master *ngIf=\"salesTabFilterForm.get('SalesViewType').value==2\" [salesTabFilterForm]=\"salesTabFilterForm\">\r\n            Loading...</app-tank-view-master>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #popContent>\r\n    <div class=\"popover-details\" [formGroup]=\"salesTabFilterForm\">\r\n        <div class=\"row border-bottom-2\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedRegions\" [settings]=\"RegionDdlSettings\"\r\n                    (onSelect)=\"regionChanged()\"   (onDeSelect)=\"regionChanged()\" (onSelectAll)=\"regionChanged()\"\r\n                    (onDeSelectAll)=\"regionChanged()\"                         \r\n                    [placeholder]=\"'Select Region'\" [data]=\"Regions\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Customer</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedCustomerList\"\r\n                        [settings]=\"CustomerDdlSettings\" [placeholder]=\"'Select Customer'\"\r\n                        [data]=\"customerList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row  mt10\" [ngClass]=\"{'border-bottom-2': !salesTabFilterForm.get('SalesViewType').value}\">\r\n            <div class=\"col-6 pr-0\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value!=2\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Location</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedlocationList\"\r\n                        [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Location'\"\r\n                        [data]=\"locationList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-6\" *ngIf=\"salesTabFilterForm.get('SalesViewType').value==1\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Prority</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedPriorities\"\r\n                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                             [data]=\"LoadPriorities\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row border-bottom-2 mt10\">\r\n            <div class=\"col-6 pr-0\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Data Capture</label>\r\n                    <ng-multiselect-dropdown formControlName=\"SelectedLocAttributeList\"\r\n                                             [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Data Capture'\"\r\n                                             [data]=\"LocationAttributeList\">\r\n                    </ng-multiselect-dropdown>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt10\">\r\n            <div class=\"col-12 text-right\">\r\n                <button type=\"button\" (click)=\"ResetFilters();SaveFilters(false);\" class=\"btn btn-default\">\r\n                    Reset\r\n                </button>\r\n                <button type=\"button\" (click)=\"ApplyFilters('set');SaveFilters(false); p.close();\" class=\"btn btn-primary\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-tank-view-master',\n    templateUrl: './tank-view-master.component.html',\n    styleUrls: ['./tank-view-master.component.css']\n})\nexport class TankViewMasterComponent implements OnInit {\n    @Input() salesTabFilterForm: FormGroup;\n\n    constructor(private dispatcherService: DispatcherService) { }\n    ngOnInit() {\n        this.verifyForcastingAccountLevelSetting();\n    }\n    public verifyForcastingAccountLevelSetting() {\n        this.dispatcherService.getForcastingSetting().subscribe((resp: any) => {\n            if (resp && resp.IsForecatingAccountLevel == 1) {\n                this.salesTabFilterForm.get('RateOfConsumption').setValue(true);\n            }\n            else {\n                this.salesTabFilterForm.get('RateOfConsumption').setValue(false);\n            }\n        });\n    }\n}\n","<div class=\"col-sm-12\" [formGroup]=\"salesTabFilterForm\">\r\n    <div class=\"row mt60\">\r\n        <div class=\"col-sm-12 text-center\">\r\n            <div class=\"custom-control custom-switch mb10\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"chk-consumptionrate\" name=\"chkRateOfConsumption\"\r\n                    formControlName=\"RateOfConsumption\" />\r\n                <label class=\"custom-control-label\" for=\"chk-consumptionrate\">Rate Of Consumption</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n    <app-tank-view *ngIf=\"!salesTabFilterForm.get('RateOfConsumption').value\" [salesTabFilterForm]=\"salesTabFilterForm\">Loading...\r\n    </app-tank-view>\r\n\r\n    <app-forecasting-tank-view *ngIf=\"salesTabFilterForm.get('RateOfConsumption').value\" [RequestFromBuyerWallyBoard]=\"false\" [salesTabFilterForm]=\"salesTabFilterForm\" >Loading...\r\n    </app-forecasting-tank-view>\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, Input, SimpleChanges, OnChanges, ViewChild, OnDestroy } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject, forkJoin, merge, Subscription } from 'rxjs';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { SalesDataModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { ForecastingLocationFilter } from '../../dispatcher.model';\nimport { DipTestComponent } from 'src/app/shared-components/dip-test/dip-test.component';\nimport { DeliveryReqPriority, SelectedTabEnum } from 'src/app/app.enum';\nimport { FormGroup } from '@angular/forms';\nimport { LocationTankDetailsModel, WallyUtilService } from 'src/app/carrier/service/wally-utility.service';\ndeclare function closeSlidePanel(): any;\n\n@Component({\n    selector: 'app-tank-view',\n    templateUrl: './tank-view.component.html',\n    styleUrls: ['./tank-view.component.css']\n})\nexport class TankViewComponent implements OnInit, OnDestroy {\n    public LocationSchedules: any = [];\n    CloneLocationSchedules = [];\n    public LocationDrpDwnList: LocationTankDetailsModel[] = [];\n    FilterLocationDrpDwnList: LocationTankDetailsModel[] = [];\n    IsLoading = false;\n    IsLocDrpDwnLoading = false;\n\n    public dtTrigger: Subject<any> = new Subject();\n    public dtOptions: any = {};\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    SelectedLocationId: string;\n    SelectedTankId: string;\n    SelectedSiteId: string;\n    @ViewChild(DataTableDirective) datatableElement: DataTableDirective;\n    filterArgs = { key: \"DaysRemaining\", asc: true };\n    @ViewChild(DipTestComponent) dipTestComponent: DipTestComponent;\n    public SelectedTankRegionId: string;\n    @Input() salesTabFilterForm: FormGroup;\n    public applyFilterSubscription: Subscription[]= [];\n\n    constructor(private dispatcherService: DispatcherService, private wallyUtilService: WallyUtilService) { }\n\n    ngOnInit() {\n        let exportInvitedColumns = { columns: ':visible' };\n        this.dtOptions = {\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportInvitedColumns },\n                { extend: 'csv', title: 'Sales Details', exportOptions: exportInvitedColumns },\n                { extend: 'pdf', title: 'Sales Details', orientation: 'landscape', exportOptions: exportInvitedColumns },\n                { extend: 'print', exportOptions: exportInvitedColumns }\n            ],\n\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, \"All\"]]\n        };\n\n        this.applyFilterSubscription.push(merge(this.salesTabFilterForm.get('IsApplyFilter').valueChanges).subscribe(value => {\n                if (this.salesTabFilterForm.get('SalesViewType').value == 2) {\n                    this.initLocationDropDown();\n                }\n        }));\n        //to load data - after second ngOnInit\n        if (this.salesTabFilterForm.get('SalesViewType').value == 2) {\n            this.initLocationDropDown();\n        }\n    }\n\n    ngOnDestroy(){\n        if (this.applyFilterSubscription) {\n            this.applyFilterSubscription.forEach(subscription => {\n                subscription.unsubscribe()\n            });\n        }\n    }\n    setSortArgs(key: string) {\n        if (this.filterArgs.key == key) {\n            this.filterArgs = { asc: !this.filterArgs.asc, key: key }\n        }\n        else {\n            this.filterArgs = { asc: true, key: key }\n        }\n    }\n\n    initLocationDropDown() {\n        this.IsLocDrpDwnLoading = true;\n        this.LocationDrpDwnList = [];\n\n        let filter: ForecastingLocationFilter = {\n            Carriers: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedCarriers').value),\n            CustomerIds: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            IsRateOfConsumption: this.salesTabFilterForm.get('RateOfConsumption').value,\n            IsShowCarrierManaged: this.salesTabFilterForm.get('IsShowCarrierManaged').value,\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n        };\n\n        forkJoin([this.dispatcherService.getSupplierLocationTanks(filter), this.dispatcherService.GetRaisedExceptions()]).subscribe(result => {\n            this.IsLocDrpDwnLoading = false;\n            this.LocationDrpDwnList = result[0];\n            this.Partsfiltering();\n            this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0 ? this.locationChange(this.LocationDrpDwnList[0]) : '';\n            if (this.LocationDrpDwnList && this.LocationDrpDwnList.length > 0) {\n                this.LocationDrpDwnList.forEach(loc => {\n                    loc && loc.Tanks && loc.Tanks.length > 0 && loc.Tanks.forEach(m => {\n                        if (result[1] && result[1].filter(f => f.TankDetail.TankId == m.TankId && f.TankDetail.SiteId == loc.SiteId && f.TankDetail.StorageId == m.StorageId).length > 0)\n                            m.IsUnknowDeliveryOrMissDelivery = true;\n                        else\n                            m.IsUnknowDeliveryOrMissDelivery = false;\n                    });\n                });\n            }\n            else {\n                this.SelectedTankId = null;\n                this.LocationSchedules = [];\n                this.CloneLocationSchedules = [];\n                this.SelectedLocationId = '0';\n            }\n        });\n    }\n    locationChange($event) {\n        this.SelectedTankId = null;\n        this.SelectedLocationId = $event.JobId;\n        this.SelectedSiteId = $event.SiteId;\n        this.LocationSchedules = [];\n        this.CloneLocationSchedules = [];\n        this.getSalesData();\n    }\n\n    tankChange($event) {\n        if (this.CloneLocationSchedules && this.CloneLocationSchedules.length > 0) {\n            this.SelectedTankId = $event.TankId + '_' + $event.StorageId;\n            this.LocationSchedules = this.CloneLocationSchedules.filter(f => f.TankId == $event.TankId && f.StorageId == $event.StorageId);\n        }\n\n        else\n            this.LocationSchedules = [];\n\n        // this.dtTrigger.next();\n    }\n\n    public getSalesData() {\n        let inputs = {\n            RegionId: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedRegions').value),\n            Priority: DeliveryReqPriority.None,\n            CustomerId: this.wallyUtilService.getCompanyIdsByList(this.salesTabFilterForm.get('SelectedCustomerList').value),\n            LocationId: this.SelectedLocationId,\n            SelectedTab: SelectedTabEnum.Tanks,\n            InventoryCaptureType: this.wallyUtilService.getIdsByList(this.salesTabFilterForm.get('SelectedLocAttributeList').value),\n            Carriers: '',\n            IsShowCarrierManaged: '',\n            IsShowRetailJobs: '',\n        };\n        this.IsLoading = true;\n\n        this.dispatcherService.getSalesData(inputs).subscribe((resp: SalesDataModel[]) => {         \n            this.LocationSchedules = resp;\n            this.CloneLocationSchedules = resp;\n            this.IsLoading = false;\n            this.LocationSchedules && this.LocationSchedules.map(m => {\n                try {\n                    this.FilterLocationDrpDwnList && this.FilterLocationDrpDwnList.filter(f => f.SiteId == m.SiteId).map(j => j.Tanks.find(f => f.TankId == m.TankId && f.StorageId == m.StorageId).TankInventoryDiffinHrs = m.TankInventoryDiffinHrs);\n                } catch (e) {\n                    console.log(e);\n                }\n            })\n            this.datatableRerender();\n        });\n    }\n    private datatableRerender(): void {\n        if (this.datatableElement.dtInstance) {\n            this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\n\n                dtInstance.destroy();\n                this.dtTrigger.next();\n\n            });\n        }\n\n    }\n    Partsfiltering(inputName?) {\n        this.FilterLocationDrpDwnList = [];\n        if (inputName && inputName.target && inputName.target.value && inputName.target.value.trim() != '') {\n            let searchWord = inputName.target.value.toUpperCase();\n            this.LocationDrpDwnList.forEach(element => {\n                if (element.LocationName.toUpperCase().indexOf(searchWord) !== -1) {\n                    this.FilterLocationDrpDwnList.push(element);\n                }\n            });\n        } else {\n            this.FilterLocationDrpDwnList = this.LocationDrpDwnList;\n        }\n    }\n\n    public showTanks(location: any) {\n\n        let row = this.LocationSchedules[0];\n        this.SelectedTankRegionId = row.RegionId;      \n        let salesDataModel = new SalesDataModel();\n        salesDataModel.RegionId = this.SelectedTankRegionId;\n        salesDataModel.SiteId = location.SiteId;\n        salesDataModel.TankId = location.TankId;\n        salesDataModel.StorageId = location.StorageId;\n        salesDataModel.TfxJobId = parseInt(location.JobId);\n        salesDataModel.LocationManagedType = location.LocationManagedType;\n        this.dipTestComponent.loadTankDR(salesDataModel);\n    }\n    public closeSidePanel() {\n        closeSlidePanel();\n    }\n}\n\n\n\n","<div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n        <div class=\"well bg-white shadow-b location-panel\">\r\n            <div id=\"accordion-location\" class=\"location-accordion\">\r\n                <!--<img *ngIf=\"IsLocDrpDwnLoading\"\r\n                     src=\"https://www.animatedimages.org/data/media/1617/animated-truck-image-0009.gif\"\r\n                     alt=\"animated-truck-image-0009\" />-->\r\n                <div class=\"position-abs text-center\" [ngClass]=\"{'hide-element': !IsLocDrpDwnLoading }\">\r\n                    <span class='spinner-small ml10 mt5'></span>\r\n                </div>\r\n\r\n                <div *ngIf=\"!IsLocDrpDwnLoading\" class=\"mb10\">\r\n                    <div class=\"inner-addon left-addon\">\r\n                        <i class=\"glyphicon glyphicon-search\"></i>\r\n                        <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Location\" type=\"text\" (input)=\"Partsfiltering($event)\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length == 0\">No Location Available</div>\r\n                <div *ngIf=\"!IsLocDrpDwnLoading && FilterLocationDrpDwnList && FilterLocationDrpDwnList.length > 0\">\r\n\r\n    \r\n                    <table class=\"table tank-view\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"49%\">Location</th>\r\n                                <th width=\"24%\"(click)=\"setSortArgs('DaysRemaining')\" class=\"cursor_pointer\">\r\n                                    Days remaining&nbsp;<i class=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                                </th>\r\n                                <!-- [class.color-icon-light] = \"filterArgs.key != 'DaysRemaining'\" -->\r\n                                <th>\r\n                                    Status\r\n                                </th>\r\n                                <!-- <th (click)=\"setSortArgs('Status')\" class=\"cursor_pointer\">\r\n                                    Status&nbsp;<i class=\"fa fa-sort\" [class.color-icon-light] = \"filterArgs.key != 'Status'\" aria-hidden=\"true\"></i>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor=\"let loc of FilterLocationDrpDwnList | sortingPipe: filterArgs; let i = index\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <div class=\"card-header\" [attr.id]=\"'headingOne'+loc?.JobId\">\r\n                                            <h2 class=\"mb-0\">\r\n                                                <div ngbTooltip=\"{{loc.LocationName}}{{(loc && loc.CustomerInfo)? ' - '+loc.CustomerInfo: null}}\"\r\n                                                    class=\"position-relative pr-3 btn btn-link collapsed text-left\"\r\n                                                    data-toggle=\"collapse\" [attr.data-target]=\"'#col'+loc?.JobId\"\r\n                                                    aria-expanded=\"true\" [attr.aria-controls]=\"'col'+loc?.JobId\"\r\n                                                    (click)=\"locationChange(loc)\">\r\n                                                    <ng-container>\r\n                                                        {{loc?.LocationName}}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length>5)? '(' + (loc.CustomerInfo | slice:0:5) + '..)': '' }}\r\n                                                        {{(loc && loc.CustomerInfo && loc.CustomerInfo.length<=5)? '(' + (loc.CustomerInfo | slice:0:5) + ')': '' }}\r\n                                                    </ng-container>\r\n                                                    <span class=\"fa-stack fa-sm icon-color-b position-absolute\" style=\"top:3px;right:-7px;\">\r\n                                                        <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n                                                        <i class=\"fas fa-plus fa-stack-1x fa-inverse\"></i>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </h2>\r\n                                        </div>\r\n                                       \r\n                                    </td>\r\n                                    <td>{{(loc.DaysRemaining == null)? \"N\\A\": loc.DaysRemaining + \" Days\"}}</td>\r\n                                    <!-- <td>{{loc.Status}}</td> -->\r\n                                    <td>\r\n                                        <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                            <span class=\"\">{{loc.Status}}</span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr [attr.id]=\"'col'+loc?.JobId\" class=\"collapse\"\r\n                                data-parent=\"#accordion-location\"\r\n                                [attr.aria-labelledby]=\"'headingOne'+loc?.JobId\">\r\n                                <td colspan=\"3\">\r\n                                    <div class=\"card-body\">\r\n                                        <ul class=\"list-group list-group-flush\">\r\n                                            <table class=\"table tank-view-child\">\r\n                                                <tbody>\r\n                                                    <tr *ngFor=\"let tank of loc?.Tanks\">\r\n                                                        <td  width=\"45%\">\r\n                                                            <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\" [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                                {{tank.Name}}\r\n                                                                <!-- ({{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}})  -->\r\n                                                                <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                                    class=\"active-dot\"></span>\r\n                                                                <span title=\"Tank Inventory Alert\"\r\n                                                                    class=\"activediff-dot\"\r\n                                                                    *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td width=\"24%\">\r\n                                                            {{(tank.DaysRemaining == null)? \"N\\A\": tank.DaysRemaining + \" Days\"}}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <a href=\"javascript:void(0)\" class=\"\" (click)=\"showTanks(loc)\" onclick=\"slidePanel('#raisedr','60%')\">\r\n                                                                <span class=\"\">{{tank.Status}}</span>\r\n                                                            </a>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <!-- <li class=\"list-group-item \" *ngFor=\"let tank of loc?.Tanks\"\r\n                                                [ngClass]=\"{'active': SelectedTankId==tank?.TankId+'_'+tank?.StorageId}\">\r\n                                                <a href=\"javascript:void(0)\" (click)=\"tankChange(tank)\">\r\n                                                    {{tank.Name}}({{(tank.DaysRemaining == 0)? \"N\\A\": tank.DaysRemaining + \" Days\"}}) <span *ngIf=\"tank?.IsUnknowDeliveryOrMissDelivery\"\r\n                                                        class=\"active-dot\"></span>\r\n                                                    <span title=\"Tank Inventory Alert\" class=\"activediff-dot\"\r\n                                                        *ngIf=\"tank?.TankInventoryDiffinHrs>2 || tank?.TankInventoryDiffinHrs==0\"></span>\r\n                                                </a>\r\n                                            </li> -->\r\n                                        </ul>\r\n                                    </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"col-sm-8 location-chart-panel\">\r\n        <div class=\"well bg-white shadow-b\">\r\n            <app-tank-chart [JobId]=\"SelectedLocationId\" [SiteId]=\"SelectedSiteId\" [TankId]=\"SelectedTankId\" [isSupplierView]=\"true\"></app-tank-chart>\r\n        </div>\r\n        <div class=\"well bg-white shadow-b pr\">\r\n            <div class=\"ibox mb0\">\r\n                <div class=\"ibox-content no-padding no-border\">\r\n                    <div class=\"table-responsive\">\r\n                        <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                        <table id=\"table-Location\" class=\"table table-bordered table-hover\"\r\n                               datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th data-key=\"Cust\">Customer</th>\r\n                                    <th data-key=\"LocName\">Location Name</th>\r\n                                    <th data-key=\"Loc\">Location</th>\r\n                                    <th data-key=\"TName\">Tank Name</th>\r\n                                    <th data-key=\"WL\">Water Level</th>\r\n                                    <th data-key=\"Avg7Day\">Trailing 7 Day Average</th>\r\n                                    <th data-key=\"PDS\">Previous Day Sale</th>\r\n                                    <th data-key=\"SaleWeek\">Week Ago Sale</th>\r\n                                    <th data-key=\"CI\">Last Inventory Reading</th>\r\n                                    <th data-key=\"LastReadingTime\">Last Reading Time</th>\r\n                                    <th data-key=\"Ullg\">Ullage</th>\r\n                                    <th data-key=\"lastDeliveryQty\">Last Delivered Qty</th>\r\n                                    <th data-key=\"lastDelivery\">Last Delivered On</th>                                   \r\n                                    <th data-key=\"DRemg\">Days Remaining</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngIf=\"IsLoading\" class='pa bg-white top0 left0 z-index5 loading-wrapper'>\r\n                                    <span class='spinner-dashboard pa'></span>\r\n                                </tr>\r\n                                <tr *ngFor=\"let row of LocationSchedules\">\r\n                                    <td>{{row.CompanyName}}</td>\r\n                                    <td>{{row.LocationName}}</td> <!-- <td>{{row.SiteId}}</td> -->\r\n                                    <td>{{row.Location}}</td>\r\n                                    <td>{{row.TankName}}</td>\r\n                                    <td>{{row.WaterLevel}}</td>\r\n                                    <td>{{row.AvgSale}}</td>\r\n                                    <td>\r\n                                        <div *ngIf=\"row.PrevSale == 'NA*'\">\r\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"row.PrevSale != 'NA*'\">\r\n                                            {{row.PrevSale}}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div *ngIf=\"row.WeekAgoSale == 'NA*'\">\r\n                                            Not Available <span placement=\"top\" ngbTooltip=\"Deliveries are missing!\">*</span>\r\n                                        </div>\r\n                                        <div *ngIf=\"row.WeekAgoSale != 'NA*'\">\r\n                                            {{row.WeekAgoSale}}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>{{row.Inventory}}</td>\r\n                                    <td>{{row.LastReadingTime}}</td>\r\n                                    <td>{{row.Ullage}}</td>\r\n                                    <td>{{row.LastDeliveredQuantity}}</td>\r\n                                    <td>{{row.LastDeliveryDate}}</td>  \r\n                                    <td>{{(row.DaysRemaining == null)? \"N\\A\": row.DaysRemaining + \" Days\"}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n</div>\r\n\r\n<div id=\"create-dip-test\">\r\n    <app-dip-test [isDisableControl]=\"true\" (onRaiseDR)=\"closeSidePanel();\" [IsSalesPage]=\"true\"\r\n        [SelectedRegionId]=\"SelectedTankRegionId\" [IsThisFromDrDisplay]=\"false\"></app-dip-test>\r\n</div>","<div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <a class=\"btn btn-link\" (click)=\"toggleGrids()\"><i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleGrids').value == true ? 'Show\r\n            Grids' : 'Hide Grids'}} </a>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\" id=\"grid-view\" [ngClass]=\"{'hide-element': FilterForm.get('ToggleGrids').value}\" style=\"margin-top:15px\">\r\n        <div class=\"sticky-header\" id=\"sticky-head\">\r\n            <!--<h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>-->\r\n            <div class=\"row\">\r\n                <div class=\"col-12 text-right priority-tabs\">\r\n                    <ul class=\"nav nav-pills float-right\">\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.MustGo)\">\r\n                          \r\n                            <a class=\"nav-link mustgo \" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.MustGo}\">Must Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.ShouldGo)\">\r\n                            <a class=\"nav-link shouldgo\" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.ShouldGo}\">Should Go</a>\r\n                        </li>\r\n                        <li class=\"nav-item\" (click)=\"changeActiveTab(DeliveryReqPriority.CouldGo)\">\r\n                            <a class=\"nav-link couldgo\" [ngClass]=\"{'active': activePriorityTab == DeliveryReqPriority.CouldGo}\">Could Go</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(1) > -1)\"\r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.ShouldGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"mustgo mb5\" style=\"color: #fd7668 !important \"><strong>Must Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherMustGoGrid => 19-->\r\n                            <table id=\"table-mustgo\" data-gridname=\"19\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtMustGoOptions\" [dtTrigger]=\"dtMustGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"MustGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of MustGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"MustGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(2) > -1)\"\r\n            [ngClass]=\"{'hide-element': (activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.CouldGo )}\">\r\n            <h4 class=\"shouldgo mb5\" style=\"color: #f3c316 !important\"><strong>Should Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherShouldGoGrid => 20-->\r\n                            <table id=\"table-shouldgo\" data-gridname=\"20\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtShouldGoOptions\" [dtTrigger]=\"dtShouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"ShouldGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of ShouldGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                                <!--<tbody *ngIf=\"ShouldGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(SelectedPrioritiesId.length == 0 || SelectedPrioritiesId.indexOf(3) > -1)\"\r\n            [ngClass]=\"{'hide-element':(activePriorityTab == DeliveryReqPriority.MustGo || activePriorityTab == DeliveryReqPriority.ShouldGo )}\">\r\n            <h4 class=\"couldgo mb5\" style=\"color:#a7a2a2 !important\"><strong>Could Go</strong></h4>\r\n            <div class=\"well bg-white shadow-b pr\">\r\n                <div class=\"ibox mb0\">\r\n                    <div class=\"ibox-content no-padding no-border\">\r\n                        <div class=\"table-responsive\">\r\n                            <!--Enum - GridName.DispatherCouldGoGrid => 21-->\r\n                            <table id=\"table-couldgo\" data-gridname=\"21\" class=\"table table-bordered table-hover\"\r\n                                datatable [dtOptions]=\"dtCouldGoOptions\" [dtTrigger]=\"dtCouldGoTrigger\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th data-key=\"PoNum\">PO Number</th>\r\n                                        <th data-key=\"Name\">Driver</th>\r\n                                        <th data-key=\"DName\">Dispatcher</th>\r\n                                        <th data-key=\"CName\">Customer</th>\r\n                                        <th data-key=\"Pckup\">Pickup</th>\r\n                                        <th data-key=\"Loc\">Location</th>\r\n                                        <th data-key=\"LT\">Inventory Capture Method</th>\r\n                                        <th data-key=\"PrdtNm\">Product Name</th>\r\n                                        <th data-key=\"Qty\">Ordered Quantity</th>\r\n                                        <th data-key=\"LdDate\">Date</th>\r\n                                        <th data-key=\"Status\">Status</th>\r\n                                        <th data-key=\"DROPTicketNum\" *ngIf=\"disableControl===true\">Drop Ticket</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <!--<tbody *ngIf=\"CouldGoSchedules?.length > 0\">\r\n                                    <tr *ngFor=\"let row of CouldGoSchedules\">\r\n                                        <td>{{row.PoNum}}</td>\r\n                                        <td>{{row.Name}}</td>\r\n                                        <td>{{row.DName}}</td>\r\n                                        <td>{{row.CName}}</td>\r\n                                        <td>{{row.Pckup}}</td>\r\n                                        <td>{{row.Loc}}</td>\r\n                                        <td>{{row.InventoryDataCaptureTypeName}}</td>\r\n                                        <td>{{row.PrdtNm}}</td>\r\n                                        <td>{{row.Qty}}</td>\r\n                                        <td>{{row.LdDate}}</td>\r\n                                        <td>{{row.Status}}</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum===''\" class=\"text-center\">\r\n                                            NA</td>\r\n                                        <td *ngIf=\"disableControl===true && row.DROPTicketNum!=''\">\r\n                                            <table>\r\n                                                <tr *ngFor=\"let rowDROPTicketNum of row.ListDROPTicketNum\">\r\n                                                    <td> <a\r\n                                                            (click)=\"loadDropTicketDetails(rowDROPTicketNum.split('##')[1])\">{{rowDROPTicketNum.split('##')[0]}}</a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"CouldGoSchedules?.length == 0\">\r\n                                    <tr>\r\n                                        <td colspan=\"10\" class=\"no-data-available text-center\">No data available</td>\r\n                                    </tr>\r\n                                </tbody>-->\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\"\r\n    data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>","import { Component, OnInit, ViewChildren, QueryList, ViewChild, SimpleChanges, Input } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport * as moment from 'moment';\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\nimport { Declarations } from '../../declarations.module';\nimport { MyLocalStorage } from 'src/app/my.localstorage';\nimport { DataTablesResponse } from '../../shared/models/DataTable-models';\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel } from 'src/app/carrier/models/DispatchSchedulerModels';\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\nimport { FormGroup } from '@angular/forms';\nimport { DeliveryReqPriority, SelectedMapLabelEnum } from 'src/app/app.enum';\nimport { LoadPriorities } from 'src/app/app.constants';\ndeclare function IsUserActive(): boolean;\nexport declare var google: any;\n\n@Component({\n    selector: 'app-where-is-my-driver-grid-view',\n    templateUrl: './where-is-my-driver-grid-view.component.html',\n    styleUrls: ['./where-is-my-driver-grid-view.component.css']\n})\nexport class WhereIsMyDriverGridViewComponent implements OnInit {\n\n    @Input() singleMulti: number;\n    @Input() FilterForm: FormGroup;\n    @Input() IsFiltersLoaded: boolean = false;\n    public activePriorityTab = 1;\n    public DeliveryReqPriority = DeliveryReqPriority;\n    public SelectedMapLabelEnum = SelectedMapLabelEnum;\n    public selectedMaplable: any;\n    public previousInfowindow: any = null;\n    public previousInfowindowIndex: number = null\n    public FuelUnit: string;\n    public googleMap: any;\n    public zoomLevel = 4;\n    public centerLoactionLat = 39.1175;\n    public centerLoactionLng = -103.8784;\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\n\n\n    private AUTO_REFRESH_TIME: number = 300; // seconds\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\n\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n\n\n    public screenOptions = {\n        position: 6\n    };\n    private searchLoadInterval: any;\n    private autoRefreshInterval: any;\n    private autoRefreshTimerInterval: any;\n    private setCountryCenterInterval: any;\n\n    subscriptions: Subscription = new Subscription();\n    public Drivers: WhereIsMyDriverModel[] = [];\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\n    public allLoads: WhereIsMyDriverModel[] = [];\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\n    public CloneOnGoingLoads = [];\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\n\n    public Regions: DistatcherRegionModel[] = [];\n    public RegionStates: any = [];\n    public RegionDispachers: any = [];\n    public LoadPriorities: any[] = LoadPriorities;\n    public StateDdlSettings: any = {};\n    public PriorityDdlSettings: any = {};\n    public RegionDdlSettings: any = {};\n    public SelectedRegionId: string;\n    public SearchedKeyword: string;\n    public SelectedPrioritiesId: any = [];\n\n    public toogleMap: Boolean = true;\n    public toogleFilter: Boolean = false;\n    public toogleDriver: Boolean = false;\n    public toogleGrid: Boolean = false;\n    public toogleExpandMap: Boolean = false;\n    public customerList = [];\n\n    public IsShowCarrierManaged: boolean = false;\n    public SelectedCarrierIds: string = '';\n    public SelectedStateIds: string = '';\n    public SelectedPriorityIds: string = '';\n    public SelectedDispacherIds: string = '';\n    public SelectedCustomerId: string = '';\n    public selectedLocAttributeIds: string = '';\n    public selectedStartDate: string;\n    public selectedEndDate: string;\n    public IsDataLoaded: boolean = false;\n    public dtMustGoOptions: any = {};\n    public dtShouldGoOptions: any = {};\n    public dtCouldGoOptions: any = {};\n    public selectedDriverLoadsdtOptions: any = {};\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\n    public dtMustGoTrigger: Subject<any> = new Subject();\n    public dtShouldGoTrigger: Subject<any> = new Subject();\n    public dtCouldGoTrigger: Subject<any> = new Subject();\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\n    public loadingData: boolean = true;\n    public modalData: boolean = true;\n    // public IsShouldGoLoading: boolean;\n    // public IsCouldGoLoading: boolean;\n    // public IsMustGoLoading: boolean;\n    public backgroudchatDefault = [];\n    public memberInfo: MemberInfo[] = [];\n    public disableControl: boolean = false;\n    changeFilterValueIntervalForMultiWindow: any;\n\n\n    @Input() toogleMapFromParent: boolean = true;\n    constructor(private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService) {\n    }\n\n    ngOnInit() {\n        this.readOnlyModeSelection();\n        this.subscribeFormChanges();\n\n        let exportColumns = { columns: ':visible' };\n        let mustGocolumnsDetails = [];\n        let shouldGocolumnsDetails = [];\n        let couldGocolumnsDetails = [];\n        if (this.disableControl) {\n            mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true }\n\n            ];\n        }\n        else {\n            mustGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n\n            ];\n        }\n        this.dtMustGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let _carriers = []; this.FilterForm.get('SelectedCarriers').value.forEach(x => _carriers.push(x.Id));\n\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.MustGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: _carriers,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.MustGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis',exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Must Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Must Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: mustGocolumnsDetails\n        };\n\n        if (this.disableControl) {\n            shouldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true }\n            ];\n        }\n        else {\n            shouldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n            ];\n        }\n        this.dtShouldGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let selectedCarrierIds = '';\n                let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n                selectedCarriers.map(m => {\n                    if (selectedCarrierIds == '') selectedCarrierIds = m.Id\n                    else selectedCarrierIds += ',' + m.Id\n                })\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.ShouldGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: selectedCarrierIds,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.ShouldGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis', exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Should Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Should Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: shouldGocolumnsDetails\n        };\n\n        if (this.disableControl) {\n            couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true },\n            { title: 'Drop Ticket', name: 'DROPTicketNum', data: 'DROPTicketNum', \"autoWidth\": true },\n            ];\n        }\n        else {\n            couldGocolumnsDetails = [{ title: 'PO Number', name: 'PoNum', data: 'PoNum', \"autoWidth\": true },\n            { title: 'Driver', name: 'Name', data: 'Name', \"autoWidth\": true },\n            { title: 'Dispatcher', name: 'DName', data: 'DName', \"autoWidth\": true },\n            { title: 'Customer', name: 'CName', data: 'CName', \"autoWidth\": true },\n            { title: 'Pickup', name: 'Pckup', data: 'Pckup', \"autoWidth\": true },\n            { title: 'Location', name: 'Loc', data: 'Loc', \"autoWidth\": true },\n            { title: 'Inventory Capture Method', name: 'LT', data: 'InventoryDataCaptureTypeName', \"autoWidth\": true },\n            { title: 'Product Name', name: 'PrdtNm', data: 'PrdtNm', \"autoWidth\": true },\n            { title: 'Ordered Quantity', name: 'Qty', data: 'Qty', \"autoWidth\": true },\n            { title: 'Date', name: 'LdDate', data: 'LdDate', \"autoWidth\": true },\n            { title: 'Status', name: 'Status', data: 'Status', \"autoWidth\": true }\n            ];\n        }\n        this.dtCouldGoOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            serverSide: true,\n            processing: true,\n            fixedHeader: {\n                header: true,\n                headerOffset: 200,\n            },\n            ajax: (dataTablesParameters: any, callback) => {\n                let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\n                let selectedDispacherIds = '';\n                this.FilterForm.get('SelectedDispachers').value.map(m => {\n                    if (selectedDispacherIds == '') selectedDispacherIds = m.Id\n                    else selectedDispacherIds += ',' + m.Id\n                })\n                let selectedCarrierIds = '';\n                let selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n                selectedCarriers.map(m => {\n                    if (selectedCarrierIds == '') selectedCarrierIds = m.Id\n                    else selectedCarrierIds += ',' + m.Id\n                })\n                let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\n                let _locAttributeIds = _locAttribute.join();\n                let inputs = {\n                    RegionId: this.SelectedRegionId,\n                    States: _states,\n                    Priority: DeliveryReqPriority.CouldGo,\n                    FromDate: this.FilterForm.get('FromDate').value,\n                    ToDate: this.FilterForm.get('ToDate').value,\n                    DriverSearch: this.SearchedKeyword,\n                    DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\n                    CustomerId: this.FilterForm.get('SelectedCustomerId').value,\n                    Carriers: selectedCarrierIds,\n                    IsShowCarrierManaged: this.FilterForm.get('IsShowCarrierManaged').value,\n                    InventoryCaptureType: _locAttributeIds\n                };\n                let inputData = Object.assign(dataTablesParameters, inputs);\n                this.loadingData = true;\n                this.dispatcherService.getDispatcherLoads(inputData).subscribe((resp: DataTablesResponse) => {\n                    this.CouldGoSchedules = resp.data;\n                    this.loadingData = false;\n                    callback({\n                        recordsTotal: resp.recordsTotal,\n                        recordsFiltered: resp.recordsFiltered,\n                        data: resp.data\n                    });\n                });\n            },\n            dom: '<\"html5buttons\"B>lTfgitp',\n            order: [[8, 'desc']],\n            buttons: [\n                { extend: 'colvis', exportOptions: exportColumns },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Could Go', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Could Go', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n            columns: couldGocolumnsDetails\n        };\n        this.selectedDriverLoadsdtOptions = {\n            pagingType: 'first_last_numbers',\n            pageLength: 10,\n            lengthMenu: [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, \"All\"]],\n            searching: true,\n            destroy: true,\n            dom: '<\"html5buttons\"B>lTfgitp',\n            buttons: [\n                { extend: 'colvis' },\n                { extend: 'copy', exportOptions: exportColumns },\n                { extend: 'csv', title: 'Dispatcher Dashboard - Selected Driver Loads', exportOptions: exportColumns },\n                { extend: 'pdf', title: 'Dispatcher Dashboard - Selected Driver Loads', orientation: 'landscape', exportOptions: exportColumns },\n                { extend: 'print', exportOptions: exportColumns }\n            ],\n        };\n    }\n\n    clickOutsideDropdown() {\n        if (this.toogleFilter) {\n            this.toogleFilter = false;\n        }\n    }\n\n\n\n    // subscribeFormChanges() {\n    //     this.subscriptions.add(this.FilterForm.valueChanges\n    //         .subscribe(change => {\n    //             var isFilterChanged = this.IsFilterChanged();\n    //             if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n    //                 this.IsDataLoaded = true;\n    //                 this.filterDriverData();\n    //             }\n    //         }))\n    // }\n\n    subscribeFormChanges() {\n        this.subscriptions.add( this.FilterForm.get('IsShowCarrierManaged').valueChanges\n            .subscribe(change => {\n                var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n                }\n            }));\n\n            this.subscriptions.add( this.FilterForm.get('SelectedCarriers').valueChanges\n            .subscribe(change => {\n                var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n                }\n            }));\n    }\n    \n   \n\n    unSubscribeFormChanges() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n\n    IsFilterChanged() {\n        var isFilterChanged = false;\n        var isShowCarrierManaged = this.FilterForm.get('IsShowCarrierManaged').value;\n        if (this.IsShowCarrierManaged != isShowCarrierManaged) {\n            this.IsShowCarrierManaged = isShowCarrierManaged;\n            isFilterChanged = true;\n        }\n        var ids = [];\n        var selectedCarriers = this.FilterForm.get('SelectedCarriers').value || [];\n        selectedCarriers.forEach(res => { ids.push(res.Id) });\n        var selectedCarrierId = ids.join();\n        if (this.SelectedCarrierIds != selectedCarrierId) {\n            this.SelectedCarrierIds = selectedCarrierId;\n            isFilterChanged = true;\n        }\n\n        ids = [];\n        var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\n        selectedRegions.forEach(res => { ids.push(res.Id) });\n        var selectedRegionId = ids.join();\n        if (this.SelectedRegionId != selectedRegionId) {\n            this.SelectedRegionId = selectedRegionId;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedStates = this.FilterForm.get('SelectedStates').value || [];\n        selectedStates.forEach(res => { ids.push(res.Id) });\n        var selectedStateIds = ids.join();\n        if (this.SelectedStateIds != selectedStateIds) {\n            this.SelectedStateIds = selectedStateIds;\n            isFilterChanged = true;\n        }\n\n        ids = [];\n        var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\n        selectedPriorities.forEach(res => { ids.push(res.Id) });\n        var selectedPriorityIds = ids.join();\n        if (this.SelectedPriorityIds != selectedPriorityIds) {\n            this.SelectedPriorityIds = selectedPriorityIds;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\n        selectedDispachers.forEach(res => { ids.push(res.Id) });\n        var selectedDispacherIds = ids.join();\n        if (this.SelectedDispacherIds != selectedDispacherIds) {\n            this.SelectedDispacherIds = selectedDispacherIds;\n            isFilterChanged = true;\n        }\n        var selectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\n        if (this.SelectedCustomerId != selectedCustomerId) {\n            this.SelectedCustomerId = selectedCustomerId;\n            isFilterChanged = true;\n        }\n        ids = [];\n        var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\n        selectedLocAttributeList.forEach(res => { ids.push(res.Id) });\n        var selectedLocAttributeIds = ids.join();\n        if (this.selectedLocAttributeIds != selectedLocAttributeIds) {\n            this.selectedLocAttributeIds = selectedLocAttributeIds;\n            isFilterChanged = true;\n        }\n        var fromdate = this.FilterForm.get('FromDate').value;\n        if (this.selectedStartDate != fromdate) {\n            this.selectedStartDate = fromdate;\n            isFilterChanged = true;\n        }\n        var todate= this.FilterForm.get('ToDate').value;\n        if (this.selectedEndDate != todate) {\n            this.selectedEndDate = todate;\n            isFilterChanged = true;\n        }\n        return isFilterChanged;\n    }\n\n    ngOnChanges(change: SimpleChanges) {\n        if (change.IsFiltersLoaded && change.IsFiltersLoaded.currentValue) {\n            this.IsFiltersLoaded = change.IsFiltersLoaded.currentValue;\n        }\n        // if (change.SelectedRegions && change.SelectedRegions.currentValue)\n        //     this.onRegionSelect();\n        // if (change.SelectedCustomerId && change.SelectedCustomerId.currentValue)\n        //     this.customerChanged();\n        // if ((change.FromDate && change.FromDate.currentValue) || (change.ToDate && change.ToDate.currentValue)) {\n        //     this.filterDriverData();\n        // }\n        // if (change.SelectedStates && change.SelectedStates.currentValue)\n        //     this.filterDriverData();\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue)\n        //     this.filterDriverData();\n        // if (change.SelectedDispachers && change.SelectedDispachers.currentValue)\n        //     this.filterDriverData();\n        if (change.toogleMapFromParent) {\n            this.toogleMapFromParent = change.toogleMapFromParent.currentValue;\n        }\n        if (change.SelectedCarriers && change.SelectedCarriers.currentValue)\n            this.filterDriverData();\n        // if (change.selectedLocAttributeList && change.selectedLocAttributeList.currentValue)\n        //     this.filterDriverData();\n        if (change.IsShowCarrierManaged)\n            this.filterDriverData();\n\n    }\n    ngAfterViewInit(): void {\n        //this.getDispatcherLoads();\n        this.autoRefreshLoads();\n        this.dtCouldGoTrigger.next();\n        this.dtShouldGoTrigger.next();\n        this.dtMustGoTrigger.next();\n    }\n\n    ngOnDestroy(): void {\n        this.clearAllIntervals();\n        this.unSubscribeFormChanges();\n        this.dtCouldGoTrigger.unsubscribe();\n        this.dtShouldGoTrigger.unsubscribe();\n        this.dtMustGoTrigger.unsubscribe();\n    }\n\n    public changeActiveTab(priority) {\n        this.activePriorityTab = priority;\n    }\n\n  \n\n    async checkFilterValueChange() {\n        if (this.singleMulti == 2) {\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\n            let selectedRegions = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\n            selectedRegions == \"\" ? selectedRegions = [] : '';\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\n            selectedStates == \"\" ? selectedStates = [] : '';\n            let selectedDispachers = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\n            let cid = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\n                this.FilterForm.get('FromDate').patchValue(frmDate);\n                this.initializeFilterChange();\n            } else if (!this.isArrayEqual(selectedRegions, this.FilterForm.get('SelectedRegions').value)) {\n                this.FilterForm.get('SelectedRegions').patchValue(selectedRegions);\n                this.initializeFilterChange();\n            } else if (cid && cid != this.FilterForm.get('SelectedCustomerId').value) {\n                this.FilterForm.get('SelectedCustomerId').patchValue(cid);\n                this.initializeFilterChange();\n            }\n        }\n    }\n\n    initializeFilterChange() {\n        localStorage.setItem(\"filterChange\", '1');\n        window.location.reload();\n    }\n\n    regionChanged(event?: any): void {\n        this.filterDriverData();\n    }\n\n    public onRegionSelect() {\n        var ids = [];\n        this.SelectedRegionId = '';\n        this.SelectedRegionId = ids.join();\n        this.regionChanged();\n\n    }\n\n\n    customerChanged(): void {\n        this.filterDriverData();\n    }\n\n\n\n    setFromDate(event: any): void {\n        this.filterDriverData();\n    }\n\n    setToDate(event: any): void {\n        this.filterDriverData();\n    }\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\n    }\n\n    refreshDatatable(): void {\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\n            if (dtElement.dtInstance) {\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                    dtInstance.draw();\n                });\n            }\n        });\n        if (this.driverModal.modalDetails.display === \"block\") {\n            this.showDriverDetails(this.driverModal.modalDetails.data);\n        }\n    }\n\n    filterDriverData(): void {\n        this.clearAllIntervals();\n        this.searchLoadInterval = window.setTimeout(() => {\n            this.getDispatcherLoads();\n            this.autoRefreshLoads();\n        }, 2000);\n    }\n\n    clearAllIntervals(): void {\n        if (this.searchLoadInterval) {\n            clearInterval(this.searchLoadInterval);\n        }\n        if (this.autoRefreshInterval) {\n            clearInterval(this.autoRefreshInterval);\n        }\n        if (this.setCountryCenterInterval) {\n            clearInterval(this.setCountryCenterInterval);\n        }\n        if (this.autoRefreshTimerInterval) {\n            clearInterval(this.autoRefreshTimerInterval);\n        }\n    }\n\n    getDispatcherLoads(statusId?): void {\n\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\n            return;\n        }\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\n        this.SelectedPrioritiesId = _priorities;\n        this.startAutoRefreshTimer();\n        this.loadingData = false;\n        this.refreshDatatable();\n    }\n\n    autoRefreshLoads(): void {\n        this.autoRefreshInterval = window.setInterval(() => {\n            if (IsUserActive()) {\n                this.getDispatcherLoads();\n            }\n        }, this.AUTO_REFRESH_TIME * 1000);\n    }\n\n    startAutoRefreshTimer(): void {\n        this.stopAutoRefreshTimer();\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n        this.autoRefreshTimerInterval = window.setInterval(() => {\n            if (IsUserActive()) {\n                if (this.autoRefreshTicks == 0) {\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\n                    this.stopAutoRefreshTimer();\n                } else {\n                    this.autoRefreshTicks--;\n                }\n            }\n        }, 1000);\n    }\n\n    stopAutoRefreshTimer(): void {\n        if (this.autoRefreshTimerInterval) {\n            clearInterval(this.autoRefreshTimerInterval);\n        }\n    }\n\n    public toggleExpandMapView() {\n        //this.toogleExpandMap = !this.toogleExpandMap;\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\n    }\n\n    public toggleMapView() {\n        // this.toogleMap = !this.toogleMap;\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\n    }\n\n    public toggleGrids() {\n        //this.toogleGrid = !this.toogleGrid;\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\n    }\n\n    public toggleFilterView() {\n        this.toogleFilter = !this.toogleFilter;\n    }\n    public toggleDriverView() {\n        //this.toogleDriver = !this.toogleDriver;\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\n    }\n\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\n        window.scrollTo(0, 0);\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\n        if (infoWindow && infoWindow.isOpen) {\n            infoWindow.close();\n        }\n        this.selectedDriverDetails = new DriverAdditionalDetails();\n        this.modalData = true;\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\n            if (data) {\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\n                this.modalData = false;\n            }\n            else {\n                this.selectedDriverDetails = new DriverAdditionalDetails();\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\n                this.modalData = false;\n            }\n        });\n    }\n\n    public modalClose(): void {\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\n    }\n    private readOnlyModeSelection(): void {\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\n        if (readonlyKey == '') {\n            this.disableControl = false;\n        }\n        else {\n            this.disableControl = readonlyKey;\n        }\n        if (this.disableControl === true) {\n            this.FilterForm.get('ToggleMap').patchValue(false);\n        }\n\n    }\n    public loadDropTicketDetails(invoiceHeaderId: number) {\n        Declarations.showSliderPanel();\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\n            if (data != '') {\n                $(\"#invoice\").html('');\n                $(\"#invoice\").html(data);\n            }\n            else {\n                $(\"#invoice\").html('');\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\n            }\n\n            Declarations.appendHTMLSliderContent(\"#invoice\");\n            Declarations.hideSliderLoader();\n        });\n    }\n\n\n    filterMapByStatus(statusId) {\n        this.selectedMaplable = statusId;\n        this.getDispatcherLoads(statusId)\n    }\n\n    private getCustomerListByRegionId(SelectedRegionId) {\n        this.loadingData = true;\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\n            this.loadingData = false;\n            this.customerList = t2;\n        });\n    }\n\n    arraysEqual(a, b) {\n        if (a === b) return true;\n        if (a == null || b == null) return false;\n        if (a.length != b.length) return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i]) return false;\n        }\n        return true;\n    }\n\n    isArrayEqual(value, other) {\n        var type = Object.prototype.toString.call(value);\n        if (type !== Object.prototype.toString.call(other)) return false;\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\n        if (valueLen !== otherLen) return false;\n        var compare = function (item1, item2) {\n        };\n        var match;\n        if (type === '[object Array]') {\n            for (var i = 0; i < valueLen; i++) {\n                compare(value[i], other[i]);\n            }\n        } else {\n            for (var key in value) {\n                if (value.hasOwnProperty(key)) {\n                    compare(value[key], other[key]);\n                }\n            }\n        }\n        return true;\n    }\n\n    public applyLoadsFilters(filterForm:FormGroup){\n        this.FilterForm = filterForm;\n        var isFilterChanged = this.IsFilterChanged();\n                if (this.IsFiltersLoaded && (isFilterChanged || !this.IsDataLoaded)) {\n                    this.IsDataLoaded = true;\n                    this.filterDriverData();\n        }\n    }\n}\n\n\n","<!-- <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n    <span class='spinner-dashboard pa'></span>\r\n</div> -->\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"col-sm-6\">\r\n                <!-- <ng-multiselect-dropdown  [formControl]=\"FilterForm.controls['SelectedRegions']\" \r\n                                         [settings]=\"RegionDdlSettings\" [placeholder]=\"'Select Region'\" [data]=\"Regions\"\r\n                                         (onSelect)=\"onRegionSelect($event)\" (onDeSelect)=\"onRegionUnselect($event)\" (onSelectAll)=\"onRegionSelect($event)\" (onDeSelectAll)=\"onRegionUnselect($event)\">\r\n                </ng-multiselect-dropdown> -->\r\n                <!-- [(ngModel)]=\"SelectedRegions\" -->\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <select class=\"form-control\" (change)=\"customerChanged($event)\">\r\n                    <option [value]=null>Select Customer</option>\r\n                    <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\" [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                        {{customer.CompanyName}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\" [(ngModel)]=\"FromDate\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker [format]=\"'MM/DD/YYYY'\"\r\n                   [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\" [(ngModel)]=\"ToDate\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"col-sm-3 pl0 text-right\" (clickOutside)=\"clickOutsideDropdown()\">\r\n            <a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>\r\n            <a class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\"><i class=\"fas fa-eye mr5\"></i>{{ toogleMap == true ? 'Hide Map' : 'Show Map'}}</a>\r\n            <div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                <div class=\"pull-right\">\r\n                    <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedStates\"\r\n                                                         [settings]=\"StateDdlSettings\" [placeholder]=\"'Select States'\" [data]=\"RegionStates\"\r\n                                                         (onSelect)=\"onStateSelect($event)\" (onDeSelect)=\"onStateUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedPriorities\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\" [data]=\"LoadPriorities\"\r\n                                                         (onSelect)=\"onPrioritySelect($event)\" (onDeSelect)=\"onPriorityUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [(ngModel)]=\"SelectedDispachers\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispacher'\" [data]=\"RegionDispachers\"\r\n                                                         (onSelect)=\"onDispacherSelect($event)\" (onDeSelect)=\"onDispacherUnselect($event)\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n<div class=\"row animated mt60\">\r\n\r\n    <div class=\"\" [ngClass]=\"{'fadeIn': FilterForm.get('ToggleMap').value, 'display_hide': !FilterForm.get('ToggleMap').value ,'col-sm-9': !FilterForm.get('ToggleExpandMapView').value , 'col-sm-12':FilterForm.get('ToggleExpandMapView').value  === true  }\">\r\n        <div class=\"expand_map_btn\">\r\n            <a class=\"\" (click)=\"toggleExpandMapView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleExpandMapView').value, 'fa-arrow-circle-left': FilterForm.get('ToggleExpandMapView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div id=\"map-view\" class=\"mb15\">\r\n            <div id=\"mapLegend\" style=\"z-index: 1; position: absolute; top: -5px; left: 10px; font-size: 11px;\">\r\n                <div id=\"status-legends\" class=\"well pa0\">\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(11)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==11}\">\r\n                            <img src=\"src/assets/truck-11.svg\" data-statusid=\"11\">\r\n                            On the way to terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(12)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==12}\">\r\n                            <img src=\"src/assets/truck-12.svg\" data-statusid=\"12\">\r\n                            Arrived at terminal\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(1)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==1}\">\r\n                            <img src=\"src/assets/truck-1.svg\" data-statusid=\"1\">\r\n                            On the way to location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <div class=\"border-b pb5 pt5 pl5\">\r\n                        <a (click)=\"filterMapByStatus(18)\" class=\"db pa5\" [ngClass]=\"{'activeRoute':selectedMaplable==18}\">\r\n                            <img src=\"src/assets/truck-18.svg\" data-statusid=\"18\">\r\n                            Arrived at location\r\n                        </a>\r\n\r\n                    </div>\r\n                    <!--<div class=\"pb5 pt5 pl5\">\r\n                        <img src=\"src/assets/truck-20.svg\" data-statusid=\"20\">\r\n                        Fuel truck retained\r\n                    </div>-->\r\n                </div>\r\n            </div>\r\n            <div style=\"z-index: 1; position: absolute; top: 0; right: 65px; font-size: 11px; opacity:0.9\">\r\n                <div class=\"well pa5\">Auto Refresh in: <b>{{autoRefreshTicks * 1000 | date:'mm:ss':'UTC'}}</b> minutes</div>\r\n            </div>\r\n            <agm-map [ngStyle]=\"{'height': FilterForm.get('singleMulti').value  == 2 ? '80vh' : '60vh' }\"  [zoom]=\"zoomLevel\" [maxZoom]=\"16\" [minZoom]=\"2\"\r\n                (mapReady)=\"mapReady($event)\" [fullscreenControl]=\"true\" [fullscreenControlOptions]=\"screenOptions\">\r\n                <ng-container *ngFor=\"let driver of OnGoingLoads let indx=index\">\r\n                    <div>\r\n                    \r\n                    <agm-marker [latitude]=\"driver.Lat\" [longitude]=\"driver.Lng\"  labelContent=\"Label marker\" labelClass=\"circle-badge\" \r\n                                [iconUrl]=\"{'url':'src/assets/truck-'+driver.SttsId+'.svg','scaledSize':{'height':50,'width':50}}\" (mouseOver)=\"mouseHoverMarker(infoWindow,$event)\" (markerClick)=\"showHideRoutes(indx)\" (mouseOut)=\"mouseHoveOutMarker(null,$event,indx)\"\r\n                                [label]=\"{ position: 'absolute',\r\n                                top: '-11px',\r\n                                left: '-14px',                                \r\n                                background: '#fa9393',\r\n                                display: 'inline-flex',\r\n                                width: '18px',\r\n                                height: '18px', \r\n                                color:'red',                              \r\n                                fontWeight: 'bold', fontSize: '18px',\r\n                                scaledSize: { width: 65, height: 65, anchor : {x:30, y:30}   }, labelOrigin:{x:20,y:20},\r\n                                text: driver.FuelRetainCount.toString()}\" >                     \r\n                             \r\n                        <agm-info-window [disableAutoPan]=\"false\" #infoWindow>\r\n                            <div>\r\n                                <p><strong>Driver Name: </strong> {{ driver.Name}}</p>\r\n                                <p><strong>Contact Number: </strong><a href=\"tel:{{driver.PhNo}}\" target=\"_blank\" title=\"Call {{driver.Name}}\">{{driver.PhNo}}</a></p>\r\n                                <p><strong>Last UpdatedAt: </strong> {{ driver.AppLastUpdatedDate}}</p>\r\n                                <a (click)=\"showDriverDetails(driver,infoWindow);\" title=\"Show {{driver.Name}} more details\">Show more</a>\r\n                                <p class=\"pull-right\">\r\n                                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs21 far fa-comment\"></span></a>\r\n                                </p>\r\n\r\n                                <p style=\"font-size:11px;padding-top: 10px;\" *ngIf=\"driver.routeShow else showRouteTemplate\"><strong>Note:</strong> Click truck to hide routes.</p>\r\n                                <ng-template #showRouteTemplate>\r\n                                    <p style=\"font-size:11px;padding-top: 10px;\"><strong>Note:</strong>  Click truck to view routes</p>\r\n                                </ng-template>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                </div>\r\n                    <agm-marker [latitude]=\"driver.dLat\" [longitude]=\"driver.dLng\" [iconUrl]='{ \"url\": \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", \"scaledSize\": { \"height\": 25, \"width\": 25 } }' (mouseOver)=\"mouseHoverMarker(infoWindow2,$event)\" (mouseOut)=\"mouseHoveOutMarker(infoWindow2,$event,null)\">\r\n                        <agm-info-window [disableAutoPan]=\"false\" [maxWidth]=\"200\" #infoWindow2>\r\n                            <div>\r\n                                <p><b>Engaged Driver : </b> {{ driver.Name}}</p>\r\n                                <p><b>Drop Location: </b>{{ driver.Loc}}</p>\r\n                            </div>\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    <agm-direction *ngIf=\"driver.dLat\" [origin]=\"{lat:driver.Lat, lng: driver.Lng}\" [destination]=\"{lat:driver.dLat, lng: driver.dLng}\"\r\n                                   [visible]=\"driver.routeShow\" [renderOptions]=\"{ suppressMarkers: true , polylineOptions: { strokeColor: driver.statusColor }}\"></agm-direction>\r\n                </ng-container>\r\n            </agm-map>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"pl0\" [ngClass]=\"{'col-sm-3': (FilterForm.get('ToggleExpandMapView').value === false && FilterForm.get('ToggleMap').value === true), 'absolute_driver': FilterForm.get('ToggleMap').value ===false, 'hide_absolute_driver': (FilterForm.get('ToggleDriverView').value === true && FilterForm.get('ToggleMap').value === false), 'display_hide': (FilterForm.get('ToggleExpandMapView').value === true && FilterForm.get('ToggleMap').value ===true) }\">\r\n        <div class=\"driver_btn\" *ngIf=\"!FilterForm.get('ToggleMap').value\">\r\n            <a class=\"\" (click)=\"toggleDriverView()\">\r\n                <i class=\"fa fa-2x\" [ngClass]=\"{'fa-arrow-circle-right': !FilterForm.get('ToggleDriverView').value, 'fa-arrow-circle-left':  FilterForm.get('ToggleDriverView').value}\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"mt10\">\r\n            <h3 class=\"pull-left mt6 pb0 dib\">Drivers</h3>\r\n            <div class=\"inner-addon left-addon pull-left ml10\">\r\n                <i class=\"glyphicon glyphicon-search\"></i>\r\n                <input class=\"form-control\" name=\"txtSearch\" placeholder=\"Search Drivers\" type=\"text\" (input)=\"searchDrivers($event)\" autocomplete=\"off\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"driver-list dib full-width\">\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of Drivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\"><span [ngClass]=\"driver.IsOnline ? 'live':''\"></span>{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" [ngClass]=\"{'activeRoute':driver.routeShow}\" [ngStyle]=\"{ 'color': (driver.routeShow ? driver.statusColor : '#2b2b2b') }\" title=\"Click to {{driver.routeShow ? 'hide':'show'}} routes\" (click)=\"showHideRoutes(indx)\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n                <div class=\"pull-right mt10\">\r\n                    <a (click)=\"doChat(driver.Id)\" title=\"Chat with {{driver.Name}}\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    <a (click)=\"showDriverDetails(driver,null);\" title=\"Show more details\"> <span class=\"fs18 fa fa-info-circle pl5\"></span></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"driver-details dib full-width pa5\" *ngFor=\"let driver of OfflineDrivers let indx=index;\">\r\n                <div class=\"pull-left driver-initials radius-capsule mr10 fs15 color-white pr\">{{driver.Intl}}</div>\r\n                <div class=\"pull-left\" title=\"Last location is not available\">\r\n                    <span class=\"fs15\">{{driver.Name}}</span>\r\n                    <span class=\"fs12 db opacity8\">{{driver.PhNo}}</span>\r\n                </div>\r\n                <div class=\"pull-right mt10\">\r\n                    <!--<a (click)=\"dochat(driver.id)\" title=\"chat with {{driver.name}}\"> <span class=\"fs18 far fa-comment\"></span></a>-->\r\n                    <a (click)=\"showDriverDetails(driver,null);\" title=\"Show more details\"> <span class=\"fs18 fa fa-info-circle pl5\"></span></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<button type=\"button\" id=\"btnconfirm-memberInfo\" class=\"hide-element\" data-toggle=\"modal\" data-target=\"#confirm-memberInfo\" data-backdrop=\"static\" data-keyboard=\"false\"></button>\r\n<div class=\"modal fade\" id=\"confirm-memberInfo\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <h2 class=\"fs18 f-bold mt0\">Group Member Information</h2>\r\n                <table id=\"member-datatable\" class=\"table table-striped table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                            <th>LastSeenAt</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let member of memberInfo\">\r\n                            <td>{{member.nickname}}</td>\r\n                            <td>{{member.userId}}</td>\r\n                            <td>{{member.connectionStatus}}</td>\r\n                            <td>{{member.lastSeenAt}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"text-right\">\r\n                    <button type=\"button\" class=\"btn btn-success btn-lg\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"chat-wrapper\" style=\"z-index: 9999;\">\r\n    <app-sendbird></app-sendbird>\r\n</div>\r\n<ng-template #driverDetailsModal let-modalDetails=\"modalDetails\">\r\n    <div [ngClass]=\"{'modal':true, 'left':true,'fade':true,'show': modalDetails.display==='block'}\" [ngStyle]=\"{'display':modalDetails.display}\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n            <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"loadingData\">\r\n                <span class='spinner-dashboard pa'></span>\r\n            </div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header pb0 pt0\">\r\n                    <h4 class=\"modal-title\" id=\"assetDetailsModal\">\r\n                        {{selectedDriverDetails.Name}}\r\n                        <a (click)=\"doChat(modalDetails.data.Id);\" title=\"Chat\"> <span class=\"fs18 far fa-comment\"></span></a>\r\n                    </h4>\r\n                    <a data-dismiss=\"modal\" class=\"float-right mt10\" (click)=\"modalClose()\" aria-label=\"Close\"> <i class=\"fa fa-close fa-lg\"></i></a>\r\n                </div>\r\n                <div class=\"modal-body \" style=\"max-height:80vh;overflow-y:scroll\">\r\n                    <div class='pa bg-white top0 left0 z-index5 loading-wrapper' *ngIf=\"modalData\">\r\n                        <span class='spinner-dashboard pa'></span>\r\n                    </div>\r\n                    <div class=\"mb10\">\r\n                        <b>Licence Number: </b> {{ selectedDriverDetails.License}}<br>\r\n                        <ng-container *ngIf=\"!selectedDriverDetails.Shifts.length else driverShifts\"><b>Shift : </b> Not Available<br></ng-container>\r\n                        <b>Contact Number: </b> <a href=\"tel:{{ selectedDriverDetails.ContactNumnber}}\" target=\"_blank\">{{selectedDriverDetails.ContactNumnber}}</a>\r\n                        <ng-template #driverShifts>\r\n                            <ng-container *ngFor=\"let shift of selectedDriverDetails.Shifts index as i\">\r\n                                <b>Shift ({{i+1}}): </b> {{shift}}<br>\r\n                            </ng-container>\r\n                        </ng-template>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <h4 class=\"pt0 mb5\">Trailer Details</h4>\r\n                            <div class=\"well bg-white shadow-b pr\">\r\n                                <div class='pa bg-white top0 left0 z-index5 loading-wrapper schedule-loading-wrapper hide-element'><span class='spinner-dashboard pa'></span></div>\r\n\r\n                                <div class=\"ibox mb0\">\r\n                                    <div class=\"ibox-content no-padding no-border location_table\">\r\n                                        <div class=\"table-responsive\" id=\"trailerDetails\">\r\n                                            <!--Enum - GridName.DispatcherSelectedDriverTrailerGrid => 23-->\r\n                                            <table id=\"table-selectedDriverTrailers\" #SelectedDriverTrailer data-gridname=\"23\" class=\"table table-bordered table-hover\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th data-key=\"TruckId\">Trailer ID</th>\r\n                                                        <th data-key=\"LicencePlate\">License</th>                                                       \r\n                                                        <th data-key=\"Compartment\">\r\n                                                           Details                                                            \r\n                                                        </th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <ng-container *ngIf=\"!selectedDriverDetails.Trailers.length else truckDetailsTable\">\r\n                                                        <tr>No Data Available.</tr>\r\n                                                    </ng-container>\r\n                                                    <ng-template #truckDetailsTable>\r\n                                                        <tr *ngFor=\"let row of selectedDriverDetails.Trailers\">\r\n                                                            <td>{{row.TruckId}}</td>\r\n                                                            <td>{{row.LicencePlate}}</td>\r\n                                                            <td>                                                                \r\n                                                                <span *ngIf=\"row.OngoingData.length > 0\"><b>Ongoing</b>\r\n                                                                <table>                                                                     \r\n                                                                    <thead>\r\n                                                                        <th>Fuel Type</th>\r\n                                                                        <th>Quantity</th> \r\n                                                                                                                                         \r\n                                                                    </thead>\r\n                                                                    <tbody *ngFor=\"let currentLoad of row.OngoingData\">\r\n                                                                        <tr >\r\n                                                                            <td>{{currentLoad.PrdtNm}}</td>\r\n                                                                            <td>{{currentLoad.Qty}}</td>\r\n                                                                        </tr>                                                                        \r\n                                                                    </tbody>\r\n                                                                </table>\r\n                                                            </span>\r\n                                                                <br>\r\n                                                                <span><b>Retain</b></span>\r\n                                                                <table>                                                                 \r\n                                                                    <thead>\r\n                                                                        <th style=\"width: 10px;\">Compartment</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Capacity</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Type</th>\r\n                                                                        <th style=\"width: 10px;\">Fuel Remaining</th>\r\n                                                                    </thead>\r\n                                                                    <ng-container *ngIf=\"!row.TrailerFuelRetains.length else retainDetailsTable\">\r\n                                                                        <ng-container *ngIf=\"row.Compartments.length > 0 else Trailer\">\r\n                                                                            <tbody *ngFor=\"let Compartment of row.Compartments\">\r\n                                                                                <td style=\"width: 10px;\">{{Compartment.CompartmentId?Compartment.CompartmentId:\"--\"}}</td>                                                                       \r\n                                                                                <td style=\"width: 10px;\" *ngIf=\"Compartment.Capacity > 0 else Campcapcity\" >{{Compartment.Capacity | number:'1.0-2'}} {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>                                                                                \r\n                                                                                <ng-template #Campcapcity>\r\n                                                                                    <td>--</td>\r\n                                                                                </ng-template>\r\n                                                                                <td style=\"width: 10px;\">--</td>\r\n                                                                                <td style=\"width: 10px;\">0 {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>\r\n                                                                            </tbody>\r\n                                                                        </ng-container>\r\n                                                                        <ng-container>\r\n                                                                            <ng-template #Trailer>\r\n\r\n                                                                                <tbody >\r\n                                                                                    <td style=\"width: 10px;\">--</td>                                                                       \r\n                                                                                    <td style=\"width: 10px;\"  *ngIf=\"row.FuelCapacity > 0 else tcapcity\" >{{row.FuelCapacity | number:'1.0-2'}}{{row.DefaultUOM ==2?\" L\" :\" G\"}} </td>\r\n                                                                                    <ng-template #tcapcity>\r\n                                                                                        <td>--</td>\r\n                                                                                    </ng-template>\r\n                                                                                    <td style=\"width: 10px;\">--</td>\r\n                                                                                    <td style=\"width: 10px;\"> 0 {{row.DefaultUOM ==2?\" L\" :\" G\"}}</td>\r\n                                                                                </tbody>\r\n\r\n                                                                            </ng-template>\r\n                                                                        </ng-container>\r\n                                                                    </ng-container>\r\n                                                                    <ng-container >\r\n                                                                        <ng-template #retainDetailsTable>\r\n                                                                            <tbody *ngFor=\"let fuelDetail of row.TrailerFuelRetains\">\r\n                                                                                <td style=\"width: 10px;\">{{fuelDetail.CompartmentId?fuelDetail.CompartmentId:\"--\"}}</td>                                                                       \r\n                                                                                <td style=\"width: 10px;\" *ngIf=\"fuelDetail.CompartmentCapacity > 0 else capcity\">{{ fuelDetail.CompartmentCapacity | number:'1.0-2' }}{{fuelDetail.UOM==2?\" L\" :\" G\"}}</td>\r\n                                                                                <ng-template #capcity>\r\n                                                                                    <td>--</td>\r\n                                                                                </ng-template>\r\n                                                                                <td style=\"width: 10px;\">{{fuelDetail.ProductType}}</td>\r\n                                                                                <td style=\"width: 10px;\">\r\n                                                                                    {{fuelDetail.Quantity| number:'1.0-2'  }}{{fuelDetail.UOM==2?\" L\" :\" G\"}}</td>\r\n                                                                            </tbody>\r\n                                                                        </ng-template>\r\n                                                                    </ng-container>                                                                    \r\n                                                                </table>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </ng-template>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-container *ngTemplateOutlet=\"driverDetailsModal;context:driverModal\">\r\n</ng-container>\r\n<div id=\"invoice\" class=\"hide-element\">\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChildren, QueryList,  ViewChild, SimpleChanges, Input } from '@angular/core';\r\nimport { Subject,  Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, routesColor } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LoadPriorities } from 'src/app/app.constants';\r\ndeclare function IsUserActive(): boolean;\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver-map-view',\r\n    templateUrl: './where-is-my-driver-map-view.component.html',\r\n    styleUrls: ['./where-is-my-driver-map-view.component.css']\r\n})\r\nexport class WhereIsMyDriverMapViewComponent implements OnInit {\r\n    @Input() singleMulti: number;\r\n   \r\n    @Input() FilterForm: FormGroup;\r\n    subscriptions: Subscription = new Subscription();   \r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 5;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY'); \r\n\r\n    public SelectedCustomerId: string;\r\n    public SelectedStates :[]; \r\n    public SelectedPriorities :[];\r\n    public SelectedDispachers :[];\r\n    public FromDate :\"\";\r\n    public ToDate :\"\";\r\n    public toogleMap :true\r\n\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n    private UserCountry = \"\";\r\n    private CountryCentre = {\r\n        USA: { lat: 39.11757961, lng: -103.8784 },\r\n        CAN: { lat: 57.88251631, lng: -98.54842922 }\r\n    };\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n    \r\n    private searchLoadInterval: any;\r\n    private autoRefreshInterval: any;\r\n    private autoRefreshTimerInterval: any;\r\n    private setCountryCenterInterval: any;\r\n\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    public RegionStates: any = [];\r\n    public RegionDispachers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public SelectedRegionId: string;\r\n   \r\n    public SearchedKeyword: string;\r\n \r\n    public SelectedPrioritiesId: any = [];\r\n \r\n    public toogleFilter: Boolean = false;\r\n    public toogleDriver: Boolean = false;\r\n    public toogleGrid: Boolean = false;\r\n    public toogleExpandMap: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    changeFilterValueIntervalForMultiWindow: any;\r\n    public currentOngoingLoadDetails : WhereIsMyDriverModel[] = [];\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.readOnlyModeSelection();\r\n        this.subscribeFormChanges();\r\n    \r\n        this.dispatcherService.getDispatcherCountry().subscribe(data => {\r\n            this.UserCountry = data;\r\n            this.FuelUnit = (this.UserCountry === 'USA') ? 'Gallons' : 'Litres';\r\n            this.setMapCenter();\r\n        });\r\n        this.chatService.loaderDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.loadingData = data;\r\n            }\r\n        });\r\n        this.chatService.memberInfoDetails.subscribe((data) => {\r\n            if (data != undefined) {\r\n                this.memberInfo = data as MemberInfo[];\r\n                this.loadingData = false;\r\n                jQuery('#btnconfirm-memberInfo').click();\r\n            }\r\n        });       \r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n           \r\n        }\r\n        if (change.SelectedRegions && change.SelectedRegions.currentValue)\r\n            this.onRegionSelect();\r\n        // if (change.SelectedCustomerId && change.SelectedCustomerId.currentValue)\r\n        //     this.customerChanged();\r\n        // if ((change.FromDate && change.FromDate.currentValue) || (change.ToDate && change.ToDate.currentValue))\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedStates && change.SelectedStates.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedPriorities && change.SelectedPriorities.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedDispachers && change.SelectedDispachers.currentValue)\r\n        //     this.filterDriverData();\r\n        // if (change.SelectedCarriers && change.SelectedCarriers.currentValue)\r\n        // this.filterDriverData();\r\n        // if (change.IsShowCarrierManaged)\r\n        // this.filterDriverData();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getDispatcherLoads();\r\n        this.autoRefreshLoads();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.clearAllIntervals();\r\n        this.unSubscribeFormChanges();\r\n        if (this.changeFilterValueIntervalForMultiWindow)\r\n        clearInterval(this.changeFilterValueIntervalForMultiWindow);\r\n        this.dtCouldGoTrigger.unsubscribe();\r\n        this.dtShouldGoTrigger.unsubscribe();\r\n        this.dtMustGoTrigger.unsubscribe();\r\n    }\r\n\r\n    // subscribeFormChanges() {\r\n    //     this.subscriptions.add(this.FilterForm.valueChanges\r\n    //         .subscribe(change => {\r\n    //             var ids = [];\r\n    //             var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\r\n    //             selectedRegions.forEach(res => { ids.push(res.Id) });\r\n    //             var selectedRegionId = ids.join();\r\n    //             this.SelectedRegionId = selectedRegionId;\r\n    //             this.filterDriverData()\r\n    //             //this.SaveFilters();\r\n    //         }))\r\n    // }\r\n\r\n    subscribeFormChanges() {\r\n        this.subscriptions.add( this.FilterForm.get('IsShowCarrierManaged').valueChanges.subscribe(change =>{\r\n                this.filterDriverData();\r\n        }));\r\n        this.subscriptions.add( this.FilterForm.get('SelectedCarriers').valueChanges.subscribe(change => {\r\n            this.filterDriverData();\r\n        }));\r\n    }  \r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n\r\n    async checkFilterValueChange() {\r\n        if (this.singleMulti == 2) {\r\n            let frmDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n            let toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n            let selectedRegions = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\r\n            selectedRegions == \"\" ? selectedRegions = [] : '';\r\n            let selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n            selectedStates == \"\" ? selectedStates = [] : '';\r\n            let selectedDispachers = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\r\n            let cid = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\r\n            if (frmDate != '' && toDate != '' && (!(+ moment(frmDate) === + moment(this.FilterForm.get('FromDate').value)) || !(+ moment(toDate) === + moment(this.FilterForm.get('ToDate').value)))) {\r\n               this.FilterForm.get('FromDate').patchValue(frmDate);\r\n               // this.ToDate = this.ToDate;\r\n                this.initializeFilterChange();\r\n            } else if (!this.isArrayEqual(selectedRegions, this.FilterForm.get('selectedRegions').value)) {\r\n                this.FilterForm.get('selectedRegions').patchValue(selectedRegions);\r\n                this.initializeFilterChange();\r\n            }\r\n            else if (cid && cid != this.FilterForm.get('SelectedCustomerId')) {\r\n                this.FilterForm.get('SelectedCustomerId').patchValue(cid);\r\n                this.initializeFilterChange();\r\n            }\r\n        }\r\n    }\r\n    initializeFilterChange() {\r\n        localStorage.setItem(\"filterChange\", '1');\r\n        window.location.reload();\r\n    }\r\n    regionChanged(event?: any): void {\r\n        this.CloneOnGoingLoads = [];\r\n        this.filterDriverData();\r\n    }\r\n\r\n    public onRegionSelect() {\r\n        var ids = [];\r\n        this.SelectedRegionId = '';\r\n        this.FilterForm.get('SelectedRegions').value.forEach(res => { ids.push(res.Id) });\r\n        this.SelectedRegionId = ids.join();\r\n        this.regionChanged();\r\n    }\r\n\r\n    customerChanged(event): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setRegionStates(): void {\r\n        this.RegionStates = [];        \r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.RegionStates = this.RegionStates.concat(m.States);\r\n                }\r\n            }\r\n        })        \r\n    }\r\n    setRegionDispachers(): void {\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.Dispatchers && m.Dispatchers.length > 0) {\r\n                    this.RegionDispachers = this.RegionDispachers.concat(m.Dispatchers);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setToDate(event: any): void {     \r\n        this.filterDriverData();\r\n    }\r\n\r\n    onStateSelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onStateUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onPrioritySelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onPriorityUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n    onDispacherSelect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n\r\n    onDispacherUnselect(event: any): void {\r\n        this.filterDriverData();\r\n    }\r\n    setMapCenter(): void {\r\n        if (this.UserCountry != \"\") {\r\n            this.setCountryCenterInterval = window.setTimeout(() => {\r\n                this.centerLoactionLat = this.CountryCentre[this.UserCountry].lat;\r\n                this.centerLoactionLng = this.CountryCentre[this.UserCountry].lng;\r\n                if (this.googleMap && this.OnGoingLoads.length == 0) {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    bounds.extend(new google.maps.LatLng(this.centerLoactionLat, this.centerLoactionLng));\r\n                    this.googleMap.fitBounds(bounds);\r\n                    this.googleMap.setZoom(5);\r\n                } else {\r\n                    const bounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        x.statusColor = routesColor[x.SttsId];\r\n                        bounds.extend(new google.maps.LatLng(x.Lat, x.Lng));\r\n                    });\r\n                    this.googleMap.fitBounds(bounds);\r\n\r\n                    const locationbounds = new google.maps.LatLngBounds();\r\n                    this.OnGoingLoads.forEach(x => {\r\n                        locationbounds.extend(new google.maps.LatLng(x.dLat, x.dLng));\r\n                    });\r\n                    if (this.googleMap && locationbounds) {\r\n                        this.googleMap.setCenter(locationbounds.getCenter());         \r\n                    }\r\n                    this.googleMap.setZoom(5);\r\n                }\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    searchDrivers(event: any): void {\r\n        this.SearchedKeyword = event.target.value;\r\n        this.filterDriverData();\r\n    }\r\n\r\n    setDatatableData(data: WhereIsMyDriverModel[]): void {\r\n        this.MustGoSchedules = data.filter(x => x.LdPri == 1 || x.LdPri == 0).slice();\r\n        this.ShouldGoSchedules = data.filter(x => x.LdPri == 2).slice();\r\n        this.CouldGoSchedules = data.filter(x => x.LdPri == 3).slice();\r\n    }\r\n\r\n    refreshDatatable(): void {\r\n        this.dtElements.forEach((dtElement: DataTableDirective) => {\r\n            if (dtElement.dtInstance) {\r\n                dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                    dtInstance.draw();\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        //this.dtMustGoTrigger.next();\r\n        //this.dtShouldGoTrigger.next();\r\n        //this.dtCouldGoTrigger.next();\r\n        if (this.driverModal.modalDetails.display === \"block\") {\r\n            this.showDriverDetails(this.driverModal.modalDetails.data);\r\n        }\r\n    }\r\n\r\n    filterDriverData(): void {\r\n        this.clearAllIntervals();\r\n        this.loadingData = true;\r\n        this.searchLoadInterval = window.setTimeout(() => {\r\n            this.getDispatcherLoads();\r\n            this.autoRefreshLoads();\r\n        }, 1000);\r\n        }\r\n\r\n    clearAllIntervals(): void {\r\n        if (this.searchLoadInterval) {\r\n            clearInterval(this.searchLoadInterval);\r\n        }\r\n        if (this.autoRefreshInterval) {\r\n            clearInterval(this.autoRefreshInterval);\r\n        }\r\n        if (this.setCountryCenterInterval) {\r\n            clearInterval(this.setCountryCenterInterval);\r\n        }\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    getDispatcherLoads(statusId?): void {\r\n        if (this.FilterForm.get('FromDate').value == '' || this.FilterForm.get('ToDate').value == '') {\r\n            return;\r\n        }\r\n        let _states = []; this.FilterForm.get('SelectedStates').value.forEach(x => _states.push(x.Code));\r\n        let _priorities = []; this.FilterForm.get('SelectedPriorities').value.forEach(x => _priorities.push(x.Id));\r\n        this.SelectedPrioritiesId = _priorities;\r\n        let selectedDispacherIds = '';\r\n        this.FilterForm.get('SelectedDispachers').value.map(m => {\r\n            if (selectedDispacherIds == '') selectedDispacherIds = m.Id\r\n            else selectedDispacherIds += ',' + m.Id\r\n        })\r\n        let _carriers = []; this.FilterForm.get('SelectedCarriers').value.forEach(x => _carriers.push(x.Id));\r\n        let _locAttribute = []; this.FilterForm.get('selectedLocAttributeList').value.forEach(x => _locAttribute.push(x.Id));\r\n        let _locAttributeIds = _locAttribute.join();\r\n        let _selectedRegion = []; this.FilterForm.get('SelectedRegions').value.forEach(x => _selectedRegion.push(x.Id));\r\n        let _selectedRegionIds = _selectedRegion.join();\r\n        let inputs = {\r\n            RegionId: _selectedRegionIds == null ? '' : _selectedRegionIds,\r\n            States: _states,\r\n            Priorities: _priorities,\r\n            FromDate: this.FilterForm.get('FromDate').value,\r\n            ToDate: this.FilterForm.get('ToDate').value,\r\n            DriverSearch: this.SearchedKeyword,\r\n            DispacherId: selectedDispacherIds == '' ? null : selectedDispacherIds,\r\n            CustomerId: this.FilterForm.get('SelectedCustomerId').value,\r\n            Carriers: _carriers,\r\n            IsShowCarrierManaged:this.FilterForm.get('IsShowCarrierManaged').value,\r\n            InventoryCaptureType:_locAttributeIds\r\n        };\r\n        this.loadingData = true;\r\n        var data = this.CloneOnGoingLoads;\r\n        var isFilter = false;\r\n\r\n        if (statusId && this.CloneOnGoingLoads && this.CloneOnGoingLoads.length > 0) {\r\n            data = data.filter(f => f.SttsId == statusId);\r\n            isFilter = true;\r\n        }\r\n        if (!isFilter) {\r\n            this.dispatcherService.getOnGoingLoads(inputs).subscribe((data) => {\r\n                this.CloneOnGoingLoads = data;\r\n                this.initailizeOnGoingLoad(data);\r\n\r\n            });\r\n        } else\r\n            this.initailizeOnGoingLoad(data);\r\n        //this.refreshDatatable();\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDSTATES_KEY, this.SelectedStates);\r\n       // MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDPRIORY_KEY, this.SelectedPriorities);\r\n      //  MyLocalStorage.setData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY, this.SelectedDispachers);\r\n     \r\n    }\r\n\r\n    private initailizeOnGoingLoad(data) {\r\n        this.OnGoingLoads = data;      \r\n        this.currentOngoingLoadDetails = this.OnGoingLoads.filter(t=>t.SttsId != null && (t.SttsId==1 ||t.SttsId==11 ||\r\n            t.SttsId==12 ||t.SttsId==18 ||t.SttsId==20));\r\n        // this.OnGoingLoads = data.filter(x => x.Lat != null && x.Lng != null);\r\n        //   .map(m => {\r\n        //       if (m.AppLastUpdatedDate)\r\n        //           var date = new Date(m.lastUpdateTimeDiff + ' UTC');\r\n        //       m.lastUpdateTimeDiff = date.toString();\r\n        //       return m;\r\n        //   } \r\n        //);\r\n        this.Drivers = this.OnGoingLoads.filter((thing, i, arr) => {\r\n            return arr.indexOf(arr.find(t => t.Id === thing.Id)) === i;\r\n        });      \r\n        this.Drivers = this.Drivers.filter(x => x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        //last location not available\r\n        this.OfflineDrivers = [];\r\n        var driverFilter = [];     \r\n        data && data.map(m => {\r\n            if (!driverFilter.find(f => f && f.Name == m.Name)) {\r\n                driverFilter.push(m);\r\n                if (m.Lat == null && m.Lng == null && m.Name != null && m.Name != undefined && m.Name.trim() != '')\r\n                    (this.Drivers && this.Drivers.filter(f => f.Name == m.Name).length > 0) ? '' : this.OfflineDrivers.push(m);\r\n            }\r\n        })       \r\n        //this.OfflineDrivers = data.filter(x => x.Lat == null && x.Lng == null && x.Name != null && x.Name != undefined && x.Name.trim() != '');\r\n        this.setMapCenter();\r\n        this.startAutoRefreshTimer();\r\n        this.loadingData = false;\r\n        this.addDrivertoBackground();\r\n\r\n    }\r\n\r\n    //private  getMinutesBetweenDates(startDate) {\r\n    //      var endDate = new Date();\r\n    //      startDate = new Date(startDate);\r\n    //    var diff = endDate.getTime() - startDate.getTime();\r\n    //    return (diff / 60000);\r\n    //  }\r\n\r\n    autoRefreshLoads(): void {\r\n        this.autoRefreshInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                this.getDispatcherLoads();\r\n            }\r\n        }, this.AUTO_REFRESH_TIME * 1000);\r\n    }\r\n\r\n    startAutoRefreshTimer(): void {\r\n        this.stopAutoRefreshTimer();\r\n        this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n        this.autoRefreshTimerInterval = window.setInterval(() => {\r\n            if (IsUserActive()) {\r\n                if (this.autoRefreshTicks == 0) {\r\n                    this.autoRefreshTicks = this.AUTO_REFRESH_TIME;\r\n                    this.stopAutoRefreshTimer();\r\n                } else {\r\n                    this.autoRefreshTicks--;\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    stopAutoRefreshTimer(): void {\r\n        if (this.autoRefreshTimerInterval) {\r\n            clearInterval(this.autoRefreshTimerInterval);\r\n        }\r\n    }\r\n\r\n    mapReady(map: any): void {\r\n        this.googleMap = map;\r\n        this.setMapCenter();\r\n    }\r\n\r\n    setZoomLevel(): void {\r\n        if (this.OnGoingLoads.length == 0) {\r\n            this.setMapCenter();\r\n        } else {\r\n            this.zoomLevel = 8; // default zoom level\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n       /// this.toogleExpandMap = !this.toogleExpandMap;\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleMapView() {\r\n        //this.toogleMap = !this.toogleMap;\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleGrids() {\r\n        //this.toogleGrid = !this.toogleGrid;\r\n        var toggleGrid = this.FilterForm.get('ToggleGrids').value;\r\n        this.FilterForm.get('ToggleGrids').patchValue(!toggleGrid);\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    public toggleDriverView() {\r\n       // this.toogleDriver = !this.toogleDriver;\r\n       var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n       this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n    public addDrivertoBackground() {\r\n        this.Drivers.forEach(xItem => {\r\n            this.backgroudchatDefault.push(xItem.Id);\r\n        })\r\n        this.sendbirdComponent.IntializeChatDefault(this.backgroudchatDefault, \"\");\r\n    }\r\n    public doChat(driverId: number) {\r\n        this.sendbirdComponent.IntializeDriverChat(driverId, \"\");\r\n    }\r\n\r\n    public mouseHoverMarker(infoWindow, event: MouseEvent): void {\r\n        if (this.previousInfowindow !== null && this.previousInfowindow.isOpen) {\r\n            this.previousInfowindow.close();\r\n        }\r\n        if (infoWindow) {\r\n            this.previousInfowindow = infoWindow;\r\n            this.previousInfowindow.isOpen = true;\r\n            infoWindow.open();\r\n        }\r\n    }\r\n\r\n    public mouseHoveOutMarker(infoWindow, event: MouseEvent, index: number = null): void {\r\n        if (this.previousInfowindow !== null && this.previousInfowindow.isOpen && infoWindow !== null) {\r\n            this.previousInfowindow.close();\r\n            this.previousInfowindow.isOpen = false;\r\n        }\r\n        if (infoWindow) {\r\n            infoWindow.close();\r\n        }\r\n    }\r\n\r\n    public showDriverDetails(driver: WhereIsMyDriverModel, infoWindow: any = null): void {\r\n        window.scrollTo(0, 0);\r\n        this.driverModal = { modalDetails: { display: 'block', data: driver } };\r\n        if (infoWindow && infoWindow.isOpen) {\r\n            infoWindow.close();\r\n        }\r\n        this.selectedDriverDetails = new DriverAdditionalDetails();\r\n        this.modalData = true;\r\n        this.dispatcherService.getDriverAdditionalDetails(driver.Id).subscribe(data => {\r\n            if (data) {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails(data);\r\n                if(this.selectedDriverDetails.Trailers.length > 0)\r\n                {\r\n                    this.selectedDriverDetails.Trailers.forEach(t=>{\r\n                        t.OngoingData = this.currentOngoingLoadDetails.filter(res=>res.TrailerDisplayId.split(',').indexOf(t.TruckId));                       \r\n                    })\r\n                }\r\n                this.modalData = false;\r\n            }\r\n            else {\r\n                this.selectedDriverDetails = new DriverAdditionalDetails();\r\n                Declarations.msgwarning('Please try again later.', 'Something Went Wrong', 3000);\r\n                this.modalData = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    //private restoreFilterStates(): void {\r\n    //    let _wbfRegionId = MyLocalStorage.getData(MyLocalStorage.WBF_REGION_KEY);\r\n    //    if (_wbfRegionId != null && _wbfRegionId != \"\") {\r\n    //        // this.SelectedRegionId = _wbfRegionId;\r\n    //        this.SelectedRegions = _wbfRegionId;\r\n    //        var ids = [];\r\n    //        this.SelectedRegionId = '';\r\n    //        this.SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n    //        this.SelectedRegionId = ids.join();\r\n    //        this.getCustomerListByRegionId(this.SelectedRegionId);\r\n    //        let _wbfCustomerName = MyLocalStorage.getData(MyLocalStorage.WBF_CUSTOMER_KEY);\r\n    //        _wbfCustomerName ? this.SelectedCustomerId = _wbfCustomerName : '';\r\n    //    } else {\r\n    //        let _dsbRegionId = MyLocalStorage.getData(MyLocalStorage.DSB_REGION_KEY);\r\n    //        if (_dsbRegionId != '') {\r\n    //            //   this.SelectedRegionId = _dsbRegionId;\r\n    //        }\r\n    //    }\r\n    //    let _searchKeyword = MyLocalStorage.getData(MyLocalStorage.WBF_SEARCHEDKEYWORD_KEY);\r\n    //    if (_searchKeyword != '') {\r\n    //        this.SearchedKeyword = _searchKeyword;\r\n    //    }\r\n    //    let _selectedStates = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDSTATES_KEY);\r\n    //    if (_selectedStates != '') {\r\n    //        this.SelectedStates = _selectedStates;\r\n    //    }\r\n    //    let _selectedPriorities = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDPRIORY_KEY);\r\n    //    if (_selectedPriorities != '') {\r\n    //        this.SelectedPriorities = _selectedPriorities;\r\n    //    }\r\n    //    let _selectedDispacher = MyLocalStorage.getData(MyLocalStorage.WBF_SELECTEDDISPACHER_KEY);\r\n    //    if (_selectedDispacher != '') {\r\n    //        this.SelectedDispachers = _selectedDispacher;\r\n    //    }\r\n    //    if (this.disableControl == true) {\r\n    //        let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n    //        if (_selectedDate != '') {\r\n    //            this.FromDate = _selectedDate;\r\n    //            this.ToDate = _selectedDate;\r\n    //        }\r\n    //    }\r\n    //    //let _fromDate = MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY);\r\n    //    //if (_fromDate != '') {\r\n    //    //    this.FromDate = _fromDate;\r\n    //    //}\r\n    //    //let _toDate = MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY);\r\n    //    //if (_toDate != '') {\r\n    //    //    this.ToDate = _toDate;\r\n    //    //}\r\n    //}\r\n\r\n    private closePreviousWindow(index: number): void {\r\n        if (this.previousInfowindowIndex != null && this.previousInfowindow != null) {\r\n            this.OnGoingLoads[this.previousInfowindowIndex].routeShow = false;\r\n            if (this.previousInfowindow && this.previousInfowindow.isOpen)\r\n                this.previousInfowindow.close();\r\n            this.setMapCenter();\r\n        }\r\n    }\r\n    public showHideRoutes(index: number): void {\r\n        if (index == this.previousInfowindowIndex || this.previousInfowindowIndex == null) {\r\n            this.OnGoingLoads[index].routeShow = !this.OnGoingLoads[index].routeShow;\r\n            if (!this.OnGoingLoads[index].routeShow)\r\n                this.setMapCenter();\r\n        } else {\r\n            this.closePreviousWindow(index);\r\n        }\r\n        this.previousInfowindowIndex = index;\r\n    }\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false)\r\n            //this.toogleDriver = true;\r\n        }\r\n\r\n    }\r\n    public loadDropTicketDetails(invoiceHeaderId: number) {\r\n        Declarations.showSliderPanel();\r\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\r\n            if (data != '') {\r\n                $(\"#invoice\").html('');\r\n                $(\"#invoice\").html(data);\r\n            }\r\n            else {\r\n                $(\"#invoice\").html('');\r\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\r\n            }\r\n\r\n            Declarations.appendHTMLSliderContent(\"#invoice\");\r\n            Declarations.hideSliderLoader();\r\n        });\r\n    }\r\n\r\n\r\n    filterMapByStatus(statusId) {\r\n        this.selectedMaplable = statusId;\r\n        this.getDispatcherLoads(statusId)\r\n        //this.autoRefreshLoads(statusId);\r\n    }\r\n\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.loadingData = true;\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\r\n            this.loadingData = false;\r\n            this.customerList = t2;\r\n        });\r\n    }\r\n\r\n\r\n    isArrayEqual(value, other) {\r\n        var type = Object.prototype.toString.call(value);\r\n        if (type !== Object.prototype.toString.call(other)) return false;\r\n        if (['[object Array]', '[object Object]'].indexOf(type) < 0) return false;\r\n        var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n        var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n        if (valueLen !== otherLen) return false;\r\n        var compare = function (item1, item2) {\r\n        };\r\n        var match;\r\n        if (type === '[object Array]') {\r\n            for (var i = 0; i < valueLen; i++) {\r\n                compare(value[i], other[i]);\r\n            }\r\n        } else {\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    compare(value[key], other[key]);\r\n                }  }     }\r\n        return true;\r\n\r\n    }\r\n\r\n    public applyLoadsFilters(filterForm:FormGroup){\r\n        this.FilterForm = filterForm;\r\n        this.filterDriverData();\r\n    }\r\n}\r\n\r\n","<div class=\"col-sm-9 sticky-header-wmd\" [formGroup]=\"FilterForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-5 pa0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-7\">\r\n                    <div class=\"form-check form-check-inline fs14 mt5\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCarrierManaged\" formControlName=\"IsShowCarrierManaged\">\r\n                        <label class=\"form-check-label\" for=\"inlineCarrierManaged\"> Carrier Managed Locations</label>\r\n                    </div>\r\n                    <div class=\"mtm5\" *ngIf=\"FilterForm.get('IsShowCarrierManaged').value\">\r\n                        <a class=\"fs14 ml20\" [ngbPopover]=\"popContent\" placement=\"bottom\" popoverClass=\"carrier-popover\" [autoClose]=\"'outside'\">Select Carrier</a>\r\n                        <ng-template #popContent>\r\n                            <div class=\"col-sm-12 p-0\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedCarriers']\"\r\n                                                         [settings]=\"CarrierDdlSettings\"\r\n                                                         [placeholder]=\"'Select Carrier'\"\r\n                                                         [data]=\"carrierList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-5\">\r\n\r\n                    <!--<ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedRegions']\"\r\n                                             [settings]=\"RegionDdlSettings\"\r\n                                             [placeholder]=\"'Select Region'\"\r\n                                             [data]=\"Regions\">\r\n                    </ng-multiselect-dropdown>-->\r\n                    <div #myDiv></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker\r\n                   [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\"\r\n                   formControlName=\"FromDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <!--<input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker\r\n                   [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\"\r\n                   formControlName=\"ToDate\" autocomplete=\"off\">-->\r\n        </div>\r\n        <div class=\"col-sm-3 pl0 text-right pt8\"> <!--(clickOutside)=\"clickOutsideDropdown()\"-->\r\n            <!--<a class=\"fs14 mr10 mt10\" (click)=\"toggleFilterView()\"><i class=\"fas fa-filter mr5\"></i> Filters</a>-->\r\n            <a class=\"fs14 mr10\" [ngbPopover]=\"popContent\" placement=\"auto\" [autoClose]=\"'outside'\" container=\"body\" triggers=\"manual\" #p=\"ngbPopover\" (click)=\"p.open()\"\r\n               popoverClass=\"master-filter\"><i class=\"fas fa-filter mr5 ml20 pr\"><span *ngIf=\"count>0\" class=\"circle-badge\">{{count}}</span></i>Filters</a>\r\n            <a class=\"hide_show_map fs14 ml10\" (click)=\"toggleMapView()\">\r\n                <i class=\"fas fa-eye mr5\"></i>{{ FilterForm.get('ToggleMap').value ? 'Hide Map' : 'Show Map'}}\r\n            </a>\r\n            <!--<div class=\"text-right mr15 mt15\" *ngIf=\"toogleFilter\">\r\n                <div class=\"pull-right\">\r\n                    <div class=\"locationfilter border mtm10 bg-gray shadow-b z-index5 pa10\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\" [settings]=\"StateDdlSettings\"\r\n                                                         [placeholder]=\"'Select States'\" [data]=\"RegionStates\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                                         [data]=\"LoadPriorities\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedDispachers']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispatcher'\"\r\n                                                         [data]=\"RegionDispachers\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                         [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Capture Method'\"\r\n                                                         [data]=\"LocationAttributeList\">\r\n                                </ng-multiselect-dropdown>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mb15\">\r\n                                <select class=\"form-control\" [formControl]=\"FilterForm.controls['SelectedCustomerId']\">\r\n                                    <option [value]=null>Select Customer</option>\r\n                                    <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                            [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                        {{customer.CompanyName}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n    </div>\r\n    <ng-template #popContent>\r\n        <div class=\"popover-details\">\r\n            <div class=\"row border-bottom-2\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Region</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedRegions']\"\r\n                                                 [settings]=\"RegionDdlSettings\"\r\n                                                 [placeholder]=\"'Select Region'\"\r\n                                                 [data]=\"Regions\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">States</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedStates']\" [settings]=\"StateDdlSettings\"\r\n                                                 [placeholder]=\"'Select States'\" [data]=\"RegionStates\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">From</label>\r\n                        <input type=\"text\" placeholder=\"From Date\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setFromDate($event);\"\r\n                               formControlName=\"FromDate\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">To</label>\r\n                        <input type=\"text\" placeholder=\"To Date\" class=\"form-control datepicker\" myDatePicker\r\n                               [format]=\"'MM/DD/YYYY'\" [maxDate]=\"MaxInputDate\" (onDateChange)=\"setToDate($event);\"\r\n                               formControlName=\"ToDate\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Priority</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedPriorities']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Priority'\"\r\n                                                 [data]=\"LoadPriorities\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Dispatcher</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['SelectedDispachers']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Select Dispatcher'\"\r\n                                                 [data]=\"RegionDispachers\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row border-bottom-2 mt10\">\r\n                <div class=\"col-6 pr-0\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Inventory Data Capture</label>\r\n                        <ng-multiselect-dropdown [formControl]=\"FilterForm.controls['selectedLocAttributeList']\"\r\n                                                 [settings]=\"PriorityDdlSettings\" [placeholder]=\"'Inventory Data Capture'\"\r\n                                                 [data]=\"LocationAttributeList\">\r\n                        </ng-multiselect-dropdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"font-bold\" for=\"exampleFormControlInput1\">Select Customer</label>\r\n                        <select class=\"form-control\" [formControl]=\"FilterForm.controls['SelectedCustomerId']\">\r\n                            <option [value]=null>Select Customer</option>\r\n                            <option *ngFor=\"let customer of customerList\" [value]=\"customer.CompanyId\"\r\n                                    [selected]=\"SelectedCustomerId==customer.CompanyId\">\r\n                                {{customer.CompanyName}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt10\">\r\n                <div class=\"col-12 text-right\">\r\n                    <button type=\"button\" (click)=\"ResetLoadFilters();\" class=\"btn btn-default\">\r\n                        Reset\r\n                    </button>\r\n                    <button type=\"button\" (click)=\"ApplyLoadFilters('set'); p.close();\" class=\"btn btn-primary\">\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    </ng-template>\r\n</div>\r\n<app-where-is-my-driver-map-view *ngIf=\"(loadScreenType == 'Map' || loadScreenType == 'All')\"\r\n                                 [singleMulti]=\"singleMulti\"\r\n                                 [FilterForm]=\"FilterForm\">\r\n</app-where-is-my-driver-map-view>\r\n<app-where-is-my-driver-grid-view *ngIf=\"(loadScreenType == 'Grid' || loadScreenType == 'All')\"\r\n                                  [singleMulti]=\"singleMulti\"\r\n                                  [FilterForm]=\"FilterForm\" [IsFiltersLoaded]=\"IsFiltersLoaded\">\r\n</app-where-is-my-driver-grid-view>\r\n\r\n","import { Component, OnInit, AfterViewInit, ViewChildren, QueryList, OnDestroy, ViewChild, SimpleChanges, OnChanges, Input, ViewEncapsulation, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { DispatcherService } from 'src/app/carrier/service/dispatcher.service';\r\nimport { Subject, from, Subscription } from 'rxjs';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport * as moment from 'moment';\r\nimport { SendbirdComponent } from 'src/app/shared-components/sendbird/sendbird.component';\r\nimport { chatService } from 'src/app/shared-components/sendbird/services/sendbird.service';\r\nimport { MemberInfo } from 'src/app/shared-components/sendbird/sendbirdCommon';\r\nimport { Declarations } from '../../declarations.module';\r\nimport { MyLocalStorage } from 'src/app/my.localstorage';\r\nimport { CarrierService } from 'src/app/carrier/service/carrier.service';\r\nimport { WhereIsMyDriverModel, DriverAdditionalDetails, DistatcherRegionModel, SelectedItem } from 'src/app/carrier/models/DispatchSchedulerModels';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { WhereIsMyDriverMapViewComponent } from './where-is-my-driver-map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './where-is-my-driver-grid-view.component';\r\nimport { TfxModule } from 'src/app/app.enum';\r\nimport { InventoryDataCaptureList, LoadPriorities, RegExConstants } from 'src/app/app.constants';\r\nexport declare var google: any;\r\n\r\n@Component({\r\n    selector: 'app-where-is-my-driver',\r\n    templateUrl: './where-is-my-driver.component.html',\r\n    styleUrls: ['./where-is-my-driver.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class WhereIsMyDriverComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n    @Input() singleMulti: number;\r\n    @ViewChild('myDiv') myDiv: ElementRef<HTMLElement>;\r\n\r\n    @ViewChild(WhereIsMyDriverMapViewComponent)  loadsMapView : WhereIsMyDriverMapViewComponent;\r\n    @ViewChild(WhereIsMyDriverGridViewComponent) loadsGridView: WhereIsMyDriverGridViewComponent;\r\n\r\n    public selectedMaplable: any;\r\n    public previousInfowindow: any = null;\r\n    public previousInfowindowIndex: number = null\r\n    public FuelUnit: string;\r\n    public googleMap: any;\r\n    public zoomLevel = 4;\r\n    public centerLoactionLat = 39.1175;\r\n    public centerLoactionLng = -103.8784;\r\n    public MaxInputDate: Date = moment().add(1, 'year').toDate();\r\n    public TodaysDate: string = moment().format('MM/DD/YYYY');\r\n    public FilterForm: FormGroup;\r\n    public IsFiltersLoaded: boolean = false;\r\n    private AUTO_REFRESH_TIME: number = 300; // seconds\r\n    public autoRefreshTicks: number = this.AUTO_REFRESH_TIME;\r\n    public driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n\r\n\r\n    public screenOptions = {\r\n        position: 6\r\n    };\r\n   \r\n    subscriptions: Subscription = new Subscription();\r\n    public Drivers: WhereIsMyDriverModel[] = [];\r\n    public OfflineDrivers: WhereIsMyDriverModel[] = [];\r\n    public allLoads: WhereIsMyDriverModel[] = [];\r\n    public OnGoingLoads: WhereIsMyDriverModel[] = [];\r\n    public CloneOnGoingLoads = [];\r\n    public MustGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public ShouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public CouldGoSchedules: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverLoads: WhereIsMyDriverModel[] = [];\r\n    public selectedDriverDetails: DriverAdditionalDetails = new DriverAdditionalDetails();\r\n    public Regions: DistatcherRegionModel[] = [];\r\n    LocationAttributeList = InventoryDataCaptureList;\r\n    selectedLocAttributeList = [];\r\n    public RegionStates: any = [];\r\n    public RegionDispachers: any = [];\r\n    public LoadPriorities: any[] = LoadPriorities;\r\n    public StateDdlSettings: any = {};\r\n    public PriorityDdlSettings: any = {};\r\n    public RegionDdlSettings: any = {};\r\n    public CarrierDdlSettings: any = {};\r\n    public SelectedRegionId: string;\r\n    public SelectedCustomerId: string;\r\n    public SearchedKeyword: string;\r\n    public SelectedPrioritiesId: any = [];\r\n    public toogleFilter: Boolean = false;\r\n    public toogleGrid: Boolean = false;\r\n    public customerList = [];\r\n    public dtMustGoOptions: any = {};\r\n    public dtShouldGoOptions: any = {};\r\n    public dtCouldGoOptions: any = {};\r\n    public selectedDriverLoadsdtOptions: any = {};\r\n    public selectedDriverLoadsdtTrigger: Subject<any> = new Subject();\r\n    public dtMustGoTrigger: Subject<any> = new Subject();\r\n    public dtShouldGoTrigger: Subject<any> = new Subject();\r\n    public dtCouldGoTrigger: Subject<any> = new Subject();\r\n    @ViewChildren(DataTableDirective) dtElements: QueryList<DataTableDirective>;\r\n    @ViewChild('SelectedDriverLoad', { read: DataTableDirective, static: false }) selectedDriverLoad: DataTableDirective;\r\n    public loadingData: boolean = true;\r\n    public modalData: boolean = true;\r\n    public IsShouldGoLoading: boolean;\r\n    public IsCouldGoLoading: boolean;\r\n    public IsMustGoLoading: boolean;\r\n    public backgroudchatDefault = [];\r\n    public memberInfo: MemberInfo[] = [];\r\n    public disableControl: boolean = false;\r\n    public viewLoadType = 1;\r\n    public loadScreenType = 'All';\r\n    public isShowCarrierManaged: boolean = false;\r\n    public carrierList: any[] = [];\r\n    public SelectedCarriers: any = [];\r\n    public count: number = 0;\r\n\r\n    @ViewChild(SendbirdComponent) sendbirdComponent: SendbirdComponent;\r\n\r\n    constructor(private fb: FormBuilder, private dispatcherService: DispatcherService, private chatService: chatService, private carrierService: CarrierService, private cdr: ChangeDetectorRef) {\r\n        this.singleMulti = (localStorage.getItem('singleMulti')) ? +(localStorage.getItem('singleMulti')) : 1;\r\n        if (this.singleMulti == 1)\r\n            this.loadScreenType = 'All';\r\n\r\n        var _this = this;\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            _this.SaveFilters(true);\r\n            return;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.setFilterForm();\r\n        this.readOnlyModeSelection();\r\n        this.StateDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Code',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        };\r\n        this.PriorityDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.RegionDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: true\r\n        }\r\n        this.CarrierDdlSettings = {\r\n            singleSelection: false,\r\n            idField: 'Id',\r\n            textField: 'Name',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 1,\r\n            allowSearchFilter: true,\r\n            enableCheckAll: false\r\n        }\r\n        this.subscribeFormChanges();\r\n        this.restoreFilterStates();\r\n        this.dispatcherService.GetDispatcherRegions().subscribe(data => {\r\n            this.Regions = data;\r\n            this.GetFilters();\r\n        });\r\n        this.getCarriers();\r\n    }\r\n\r\n    public setFilterForm() {\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n\r\n        this.FilterForm = this.fb.group({\r\n            IsShowCarrierManaged: this.fb.control(false),\r\n            ToggleMap: this.fb.control(true),\r\n            ToggleExpandMapView: this.fb.control(false),\r\n            ToggleGrids: this.fb.control(false),\r\n            ToggleDriverView: this.fb.control(false),\r\n            SelectedCarriers: this.fb.control([]),\r\n            SelectedRegions: this.fb.control([]),\r\n            SelectedStates: this.fb.control([]),\r\n            SelectedPriorities: this.fb.control([]),\r\n            SelectedDispachers: this.fb.control([]),\r\n            SelectedCustomerId: this.fb.control(null),\r\n            singleMulti: this.fb.control(this.singleMulti),\r\n            FromDate: this.fb.control(fromDate),\r\n            ToDate: this.fb.control(toDate),\r\n            selectedLocAttributeList: this.fb.control([])\r\n        });\r\n    }\r\n\r\n    subscribeFormChanges() {\r\n        this.subscriptions.add(this.FilterForm.get('SelectedRegions').valueChanges\r\n            .subscribe(change => {\r\n                if (change) {\r\n                    var ids = [];\r\n                    var SelectedRegions = change;\r\n                    SelectedRegions.forEach(res => { ids.push(res.Id) });\r\n                    var selectedRegionId = ids.join();\r\n                    if (this.SelectedRegionId != selectedRegionId) {\r\n                        this.SelectedRegionId = selectedRegionId;\r\n                        this.regionChanged();\r\n                    }\r\n                }\r\n            }))\r\n        this.subscriptions.add(this.FilterForm.get('SelectedCarriers').valueChanges\r\n            .subscribe(change => {\r\n                this.FilterForm.get('SelectedRegions').patchValue([]);\r\n            }));\r\n        this.subscriptions.add(this.FilterForm.get('IsShowCarrierManaged').valueChanges\r\n            .subscribe(change => {\r\n                this.FilterForm.get('SelectedCarriers').patchValue([]);\r\n                this.FilterForm.get('SelectedRegions').patchValue([]);\r\n                this.ApplyLoadFilters();\r\n            }));\r\n    }\r\n\r\n    unSubscribeFormChanges() {\r\n        if (this.subscriptions) {\r\n            this.subscriptions.unsubscribe();\r\n        }\r\n    }\r\n    getCarriers() {\r\n        this.dispatcherService.GetCarriersForSupplier().subscribe(data => {\r\n            this.carrierList = data;\r\n        });\r\n    }\r\n\r\n    clickOutsideDropdown() {\r\n        if (this.toogleFilter) {\r\n            this.toogleFilter = false;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(change: SimpleChanges) {\r\n        let filterChange = localStorage.getItem(\"filterChange\") ? localStorage.getItem(\"filterChange\") : 0;\r\n        if (change.singleMulti && change.singleMulti.currentValue) {\r\n            this.viewLoadType = (localStorage.getItem('viewLoadType')) ? +(localStorage.getItem('viewLoadType')) : 1;\r\n            if (this.singleMulti == 1) {\r\n                this.viewLoadType = 1\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType = \"All\"\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 0 && filterChange == 0) {\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n                this.loadScreenType == \"Grid\" ? this.loadScreenType = \"Map\" : this.loadScreenType = \"Grid\";\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n            } else if (this.viewLoadType == 2 && this.singleMulti == 2 && filterChange == 0) {\r\n                this.loadScreenType = sessionStorage.getItem('loadScreenType');\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (this.singleMulti == 2 && this.viewLoadType == 1 && filterChange == 0) {\r\n                this.viewLoadType == 1 ? this.loadScreenType = \"Map\" : '';\r\n                sessionStorage.setItem('loadScreenType', this.loadScreenType);\r\n                this.viewLoadType = 2;\r\n                localStorage.setItem('viewLoadType', this.viewLoadType.toString());\r\n\r\n                this.viewLoadType = 0;\r\n                localStorage.setItem('viewLoadType', '0');\r\n            } else if (filterChange == 1 && this.singleMulti == 2) {\r\n                sessionStorage.getItem('loadScreenType') ? this.loadScreenType = sessionStorage.getItem('loadScreenType') : 'All';\r\n            }\r\n            if (this.loadScreenType == null && this.singleMulti == 2) { this.loadScreenType = 'Map' }\r\n\r\n        }\r\n        filterChange = 0;\r\n        localStorage.setItem('filterChange', filterChange.toString());\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unSubscribeFormChanges();\r\n        this.SaveFilters(true);\r\n    }\r\n\r\n    regionChanged(event?: any): void {\r\n        this.setRegionStates();\r\n        this.setRegionDispachers();\r\n        if (this.SelectedRegionId != \"\") {\r\n            this.getCustomerListByRegionId(this.SelectedRegionId);\r\n        }\r\n    }\r\n\r\n    customerChanged(event: any): void {\r\n        this.SelectedCustomerId = (event.target.value == \"null\" || event.target.value == null) ? null : event.target.value;\r\n        //MyLocalStorage.setData(MyLocalStorage.WBF_CUSTOMER_KEY, this.SelectedCustomerId);\r\n    }\r\n\r\n    setRegionStates(): void {\r\n        this.RegionStates = [];\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.States && m.States.length > 0) {\r\n                    this.RegionStates = this.RegionStates.concat(m.States);\r\n                }\r\n            }\r\n        })\r\n        var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n        selectedStates = selectedStates.filter(t => { return this.RegionStates.some(el => el.Code == t.Code); });\r\n        this.FilterForm.get('SelectedStates').patchValue(selectedStates);\r\n    }\r\n\r\n    setRegionDispachers(): void {\r\n        this.RegionDispachers = [];\r\n        this.Regions.map(m => {\r\n            if (this.FilterForm.get('SelectedRegions').value.find(f => f.Id == m.Id)) {\r\n                if (m && m.Dispatchers && m.Dispatchers.length > 0) {\r\n                    this.RegionDispachers = this.RegionDispachers.concat(m.Dispatchers);\r\n                }\r\n            }\r\n        })\r\n        this.RegionDispachers = this.GetUniqueItems(this.RegionDispachers.reduce((p, n) => p.concat(n), []));\r\n\r\n        var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\r\n        selectedDispachers = selectedDispachers.filter(t => { return this.RegionDispachers.some(el => el.Id == t.Id); });\r\n        this.FilterForm.get('SelectedDispachers').patchValue(selectedDispachers);\r\n    }\r\n\r\n    setFromDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('FromDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' &&\r\n            RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_toDate < _fromDate) {\r\n                this.FilterForm.get('ToDate').patchValue(event)\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    setToDate(event: any): void {\r\n        if (event != '') {\r\n            this.FilterForm.get('ToDate').patchValue(event);\r\n        }\r\n        var toDate = this.FilterForm.get('ToDate').value;\r\n        var fromDate = this.FilterForm.get('FromDate').value;\r\n        if (fromDate != '' && toDate != '' &&\r\n            RegExConstants.DateFormat.test(fromDate) && RegExConstants.DateFormat.test(toDate)) {\r\n            let _fromDate = moment(fromDate).toDate();\r\n            let _toDate = moment(toDate).toDate();\r\n            if (_fromDate > _toDate) {\r\n                this.FilterForm.get('FromDate').patchValue(event);\r\n            }\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_FROMDATE_KEY, this.FilterForm.get('FromDate').value);\r\n            MyLocalStorage.setData(MyLocalStorage.WBF_TODATE_KEY, this.FilterForm.get('ToDate').value);\r\n        }\r\n    }\r\n\r\n    public toggleExpandMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleExpandMapView').value;\r\n        this.FilterForm.get('ToggleExpandMapView').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleMapView() {\r\n        var expandMapView = this.FilterForm.get('ToggleMap').value;\r\n        this.FilterForm.get('ToggleMap').patchValue(!expandMapView);\r\n    }\r\n\r\n    public toggleGrids() {\r\n        this.toogleGrid = !this.toogleGrid;\r\n    }\r\n\r\n    public toggleFilterView() {\r\n        this.toogleFilter = !this.toogleFilter;\r\n    }\r\n    public toggleDriverView() {\r\n        var toggleDriverView = this.FilterForm.get('ToggleDriverView').value;\r\n        this.FilterForm.get('ToggleDriverView').patchValue(!toggleDriverView);\r\n    }\r\n    public modalClose(): void {\r\n        this.driverModal = { modalDetails: { display: 'none', data: new WhereIsMyDriverModel() } };\r\n    }\r\n\r\n    private restoreFilterStates(): void {\r\n        if (this.disableControl == true) {\r\n            let _selectedDate = MyLocalStorage.getData(MyLocalStorage.DSB_DATE_KEY);\r\n            if (_selectedDate != '') {\r\n                this.FilterForm.get('FromDate').patchValue(_selectedDate);\r\n                this.FilterForm.get('ToDate').patchValue(_selectedDate);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private readOnlyModeSelection(): void {\r\n        let readonlyKey = MyLocalStorage.getData(MyLocalStorage.DSB_READONLY_KEY);\r\n        if (readonlyKey == '') {\r\n            this.disableControl = false;\r\n        }\r\n        else {\r\n            this.disableControl = readonlyKey;\r\n        }\r\n        if (this.disableControl === true) {\r\n            this.FilterForm.get('ToggleMap').patchValue(false);\r\n        }\r\n\r\n    }\r\n    public loadDropTicketDetails(invoiceHeaderId: number) {\r\n        Declarations.showSliderPanel();\r\n        this.dispatcherService.GetDropTicketDetails(invoiceHeaderId).subscribe(data => {\r\n            if (data != '') {\r\n                $(\"#invoice\").html('');\r\n                $(\"#invoice\").html(data);\r\n            }\r\n            else {\r\n                $(\"#invoice\").html('');\r\n                Declarations.msgwarning('No Drop ticket details found.', null, 3000);\r\n            }\r\n\r\n            Declarations.appendHTMLSliderContent(\"#invoice\");\r\n            Declarations.hideSliderLoader();\r\n        });\r\n\r\n    }\r\n    private getCustomerListByRegionId(SelectedRegionId) {\r\n        this.loadingData = true;\r\n        this.carrierService.getJobListForCarrier(SelectedRegionId).subscribe(t2 => {\r\n            this.loadingData = false;\r\n            this.customerList = t2;\r\n            var selectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\r\n            this.SelectedCustomerId = this.customerList.filter(t => t.CompanyId == selectedCustomerId).length > 0 ? selectedCustomerId : null;\r\n            if (this.SelectedCustomerId != selectedCustomerId) {\r\n                this.FilterForm.get('SelectedCustomerId').patchValue(this.SelectedCustomerId);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    async SaveFilters(isTopFilter?:boolean) {\r\n        if(isTopFilter){\r\n            this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLoads).subscribe(res => {              \r\n                if (res && Object.keys(res).length > 0) {\r\n\r\n                    var IsShowCarrierManaged = this.FilterForm.get(\"IsShowCarrierManaged\").value;\r\n                    var  SelectedCarriers=  this.FilterForm.get(\"SelectedCarriers\").value || [];                  \r\n                    let jsonFilterForm : FormGroup = null;                \r\n                    jsonFilterForm = JSON.parse(res);\r\n                    jsonFilterForm[\"IsShowCarrierManaged\"]= IsShowCarrierManaged;\r\n                    jsonFilterForm[\"SelectedCarriers\"] =SelectedCarriers;\r\n                    var filterModel = JSON.stringify(jsonFilterForm);                   \r\n                    this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLoads, filterModel).subscribe();\r\n                }\r\n            });\r\n        }else{\r\n            var filterModel = JSON.stringify(this.FilterForm.value);\r\n            this.dispatcherService.postFiltersData(TfxModule.SupplierWallyboardLoads, filterModel).subscribe();\r\n        }\r\n\r\n    }\r\n\r\n    getFilterData() {\r\n        this.dispatcherService.getFilters(this.FilterForm.get('IsShowCarrierManaged').value).subscribe(data => {\r\n            this.Regions = data;\r\n            this.RegionStates = this.GetUniqueItems(data.map(t => t.States).reduce((p, n) => p.concat(n), []));\r\n            this.LoadPriorities = this.GetUniqueItems(data.map(t => t.Priority).reduce((p, n) => p.concat(n), []));\r\n            this.RegionDispachers = this.GetUniqueItems(data.map(t => t.Dispachers).reduce((p, n) => p.concat(n), []));\r\n        });\r\n    }\r\n    public GetFilters() {\r\n        this.dispatcherService.getFilters(TfxModule.SupplierWallyboardLoads).subscribe(res => {\r\n            if (res && Object.keys(res).length > 0) {\r\n                this.SetFilters(res);\r\n            }\r\n            else {\r\n                if (this.Regions && this.Regions.length > 0) {\r\n                    var lstRegion = [this.Regions[0]];\r\n                    this.FilterForm.get('SelectedRegions').patchValue(lstRegion);\r\n                }\r\n                this.setRegionStates();\r\n                this.setRegionDispachers();\r\n                this.IsFiltersLoaded = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    GetUniqueItems(items) {\r\n        const ids = [];\r\n        var uniqueItems = items.filter(item => ids.some(t => t == item.Id) ? false : ids.push(item.Id));\r\n        return uniqueItems.sort((a, b) => a.Name.localeCompare(b.Name));\r\n    }\r\n\r\n    public SetFilters(input: any) {\r\n        if (input && Object.keys(input).length > 0) {\r\n\r\n            // setTimeout(() => {\r\n                var jsonFilterForm = JSON.parse(input);\r\n              \r\n                delete jsonFilterForm[\"FromDate\"];\r\n                delete jsonFilterForm[\"ToDate\"];\r\n                this.FilterForm.patchValue(jsonFilterForm);\r\n                if(!this.FilterForm.get('SelectedRegions').value || !this.FilterForm.get('SelectedRegions').value.length){\r\n                    if( this.Regions && this.Regions.length)\r\n                    {\r\n                        var lstRegion = [this.Regions[0]];\r\n                        this.FilterForm.get('SelectedRegions').patchValue(lstRegion);\r\n                    }\r\n                }\r\n                if (jsonFilterForm.SelectedCustomerId == \"\") {\r\n                    this.FilterForm.get('SelectedCustomerId').patchValue(null);\r\n                    this.SelectedCustomerId = this.FilterForm.get('SelectedCustomerId').value;\r\n                }\r\n                this.IsFiltersLoaded = true;\r\n                this.cdr.detectChanges();\r\n                let el: HTMLElement = this.myDiv.nativeElement;\r\n                el.click();\r\n                this.setRegionStates();\r\n                this.setRegionDispachers();\r\n                let that= this;\r\n                setTimeout(function () {\r\n                    that.ApplyLoadFilters();\r\n                 }, 1000);              \r\n            // }, 1500);\r\n        }\r\n    }\r\n\r\n    public ApplyLoadFilters(msg?) {\r\n        this.SaveFilters(false);\r\n        this.count = 0;\r\n        if (this.FilterForm) {\r\n\r\n            var selectedRegions = this.FilterForm.get('SelectedRegions').value || [];\r\n            selectedRegions.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedStates = this.FilterForm.get('SelectedStates').value || [];\r\n            selectedStates.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedPriorities = this.FilterForm.get('SelectedPriorities').value || [];\r\n            selectedPriorities.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedDispachers = this.FilterForm.get('SelectedDispachers').value || [];\r\n            selectedDispachers.forEach(res => {\r\n                this.count++;\r\n            });\r\n            var selectedLocAttributeList = this.FilterForm.get('selectedLocAttributeList').value || [];\r\n            if (selectedLocAttributeList != null || selectedLocAttributeList != 'undefined') {\r\n                selectedLocAttributeList.forEach(res => {\r\n                    this.count++;\r\n                });\r\n            }\r\n            else {\r\n                this.FilterForm.get('selectedLocAttributeList').patchValue(0);\r\n            }\r\n            \r\n        }\r\n\r\n        this.loadsGridView.applyLoadsFilters(this.FilterForm);\r\n        this.loadsMapView.applyLoadsFilters(this.FilterForm);\r\n\r\n        if(msg==\"set\"){\r\n            Declarations.msgsuccess(\"Filter applied successfully\", undefined, undefined);\r\n        }else if(msg == \"reset\"){\r\n            Declarations.msginfo(\"Filter reset successfully\", undefined, undefined);\r\n        }\r\n    }\r\n\r\n    public ResetLoadFilters(){\r\n        var toDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_TODATE_KEY) : this.TodaysDate;\r\n        var fromDate = this.singleMulti == 2 && MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) ? MyLocalStorage.getData(MyLocalStorage.WBF_FROMDATE_KEY) : this.TodaysDate;\r\n        this.FilterForm.get('SelectedRegions').patchValue([]);\r\n        this.FilterForm.get('SelectedStates').patchValue([]);\r\n        this.FilterForm.get('SelectedPriorities').patchValue([]);\r\n        this.FilterForm.get('SelectedDispachers').patchValue([]);\r\n        this.FilterForm.get('SelectedCustomerId').patchValue([]);\r\n        this.FilterForm.get('FromDate').patchValue(fromDate);\r\n        this.FilterForm.get('ToDate').patchValue(toDate);\r\n        this.FilterForm.get('selectedLocAttributeList').patchValue([]);\r\n       \r\n        this.ApplyLoadFilters('reset');\r\n    }\r\n}\r\n\r\nexport interface SelectedState {\r\n    Code: string;\r\n    Name: string;\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DispatcherDashboardComponent } from './dispatcher-dashboard/dispatcher-dashboard.component';\r\n\r\n\r\nconst routeDispatcher: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: DispatcherDashboardComponent\r\n    },\r\n    {\r\n        path: \"Dashboard\",\r\n        component: DispatcherDashboardComponent\r\n    },\r\n    {\r\n        path: \"Dashboard/Index\",\r\n        component: DispatcherDashboardComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routeDispatcher)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class DispatcherRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgmDirectionModule } from 'agm-direction';\r\nimport { SharedModule } from '../modules/shared.module';\r\nimport { DispatcherRoutingModule } from './dispatcher-routing.module';\r\nimport { DispatcherDashboardComponent } from './dispatcher-dashboard/dispatcher-dashboard.component';\r\nimport { LocationComponent } from './dispatcher-dashboard/location.component';\r\nimport { WhereIsMyDriverComponent } from './dispatcher-dashboard/where-is-my-driver.component';\r\nimport { WhereIsMyDriverMapViewComponent } from './dispatcher-dashboard/where-is-my-driver-map-view.component';\r\nimport { WhereIsMyDriverGridViewComponent } from './dispatcher-dashboard/where-is-my-driver-grid-view.component';\r\nimport { DirectiveModule } from '../modules/directive.module';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { SalesDataComponent } from './dispatcher-dashboard/sales-data/sales-data.component';\r\nimport { GridViewComponent } from './dispatcher-dashboard/sales-data/grid-view.component';\r\nimport { TankViewComponent } from './dispatcher-dashboard/sales-data/tank-view.component';\r\nimport { LocationViewComponent } from './dispatcher-dashboard/sales-data/location-view.component';\r\nimport { TankChartModule } from '../tank-chart/tank-chart.module';\r\nimport { FormsModule } from '@angular/forms';\nimport { JobTankHierarchyComponent } from './dispatcher-dashboard/job-tank-hierarchy/job-tank-hierarchy.component';\nimport { TankViewMasterComponent } from './dispatcher-dashboard/sales-data/tank-view-master.component';\n\r\n@NgModule({\r\n    declarations: [\r\n        DispatcherDashboardComponent,\r\n        LocationComponent,\r\n        WhereIsMyDriverComponent,\r\n        WhereIsMyDriverMapViewComponent,\r\n        WhereIsMyDriverGridViewComponent,\r\n        SalesDataComponent,\r\n        GridViewComponent,\r\n        TankViewComponent,\r\n        LocationViewComponent,\r\n        JobTankHierarchyComponent,\r\n        TankViewMasterComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AgmDirectionModule,\r\n        DispatcherRoutingModule,\r\n        SharedModule,\r\n        DirectiveModule,\r\n        ChartsModule,\r\n        DataTablesModule,\r\n        TankChartModule,\r\n        FormsModule\r\n    ]\r\n})\r\nexport class DispatcherModule { }\r\n"]}