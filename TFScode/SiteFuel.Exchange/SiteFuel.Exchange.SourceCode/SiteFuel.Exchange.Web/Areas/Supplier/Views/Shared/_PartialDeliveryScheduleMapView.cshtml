<style>
	#schedulemap {
		height: 400px;
	}
</style>
<div id="schedule-driver-details">
	<div id="schedulemap"></div>
</div>

@using (Html.BeginScripts())
{
    <script type="text/javascript">

		var scheduleStartDate, scheduleEndDate, scheduleData;
		var allDeliverySchedules;
        var selectedCountryAndCurrency = getSelectedCountryAndCurrency();
        var PageCountryId = selectedCountryAndCurrency.countryId;
        var centerlatForSchedule = 41.850033;
        var centerlonForSchedule = -87.6500523;
        if (PageCountryId == '@((int)Country.CAN)') {
            centerlatForSchedule = 56.14;
            centerlonForSchedule = -106.34;
        }

		ReloadScheduleGrid();

		function ReloadScheduleGrid() {
			if ($('#tab-schedules').hasClass('active')) {
				scheduleStartDate = $('#txtSchedulesFromDate').val();
				scheduleEndDate = $('#txtSchedulesToDate').val();
				if (scheduleStartDate == '') {
                    $("#txtSchedulesFromDate").val(moment().add(1, 'days').format('MM/DD/YYYY'));
				}
				if (scheduleEndDate == '') {
                    $("#txtSchedulesToDate").val(moment().add(1, 'days').format('MM/DD/YYYY'));
				}
				var driverParam = $('#SelectedDrivers').val();
				scheduleStartDate = $('#txtSchedulesFromDate').val();
				scheduleEndDate = $('#txtSchedulesToDate').val();
				var isAllData = false;
				if (driverParam.length == 0) {
					driverParam = drivers.map(function (a) { return a.Id });
					isAllData = true;
				}
                GetScheduleData(driverParam, scheduleStartDate, scheduleEndDate, isAllData, searchText);
			}
		}

        function GetScheduleData(driverParam, startDate, endDate, isAllDrivers, searchText) {
			var params = {
                "driverIds": driverParam,
                "currentDate": (new Date()).toLocaleDateString('en-US'),
				"startDate": startDate,
				"endDate": endDate,
                "isAllData": isAllDrivers,
                "currency": PageCurrencyId,
                "countryId": PageCountryId,
                "searchText": searchText
            };

            $('.schedule-loading-wrapper').removeClass('hide-element');
            $.post({
                url: "@Url.Action("GetDeliverySchedulesforDrivers", "Dispatch",new { area = "Supplier" })",
                data: params,
                traditional: true,
                success: function (response) {
                    $('.schedule-loading-wrapper').addClass('hide-element');
                    scheduleData = response;
                    if (!$.fn.DataTable.fnIsDataTable($('#supplierdriverschedules-datatable')[0]))
                        LoadSchedules();
                    else {
                        allDeliverySchedules.clear().rows.add(scheduleData.GridData).draw();
                    }
                    GetDriverandJobLocations();
                }
            });
        }

		function initScheduleMap() {
			google.maps.visualRefresh = true;
			var directionsService = new google.maps.DirectionsService;
			var directionScheduleDisplay = new google.maps.DirectionsRenderer;
			scheduleMap = new google.maps.Map(document.getElementById('schedulemap'), {
				zoom: 4,
                center: { lat: centerlatForSchedule, lng: centerlonForSchedule },
				mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
			});
			directionScheduleDisplay.setMap(scheduleMap);

			$('#SelectedDrivers').change(function () {
				GetDriverandJobLocations();
			});
		}

		function GetDriverandJobLocations() {
			if ($('#tab-schedules').hasClass('active')) {
				clearScheduleMarkers();
				$("#error-msg").html("")
				var selected = $("#SelectedDrivers").val();

				if (selected == 0 || selected.length > 1) {
					DisplayDriverandJobLocation(scheduleData.MapData);
				}
				else if (selected.length == 1) {
					DisplayDriverandJobLocation(scheduleData.MapData);
				}
			}
		}

		var scheduleMarkers = [];
        function clearScheduleMarkers() {
            for (var i = 0; i < scheduleMarkers.length; i++) {
                scheduleMarkers[i].setMap(null);
			}
		}

		function DisplayDriverandJobLocation(data) {
			var zoomarea = 4;

            if (data.length == 1)
            {
                $.each(data, function (i, item) {
                    if (item.Latitude != "" && item.Longitude != "") {
                        zoomarea = 12;
                        centerlatForSchedule = item.Latitude;
                        centerlonForSchedule = item.Longitude;
                    }
                });
            }

			var centerpoint = new google.maps.LatLng(centerlatForSchedule, centerlonForSchedule);

			// These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
			var mapOptions = {
				zoom: zoomarea,
				center: centerpoint,
				mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
			};

			scheduleMap = new google.maps.Map(document.getElementById('schedulemap'), mapOptions);

			$.each(data, function (i, item) {
				var marker = new google.maps.Marker({
					position: new google.maps.LatLng(item.Latitude, item.Longitude),
					map: scheduleMap,
					title: item.Name
				});

                if (item.IsDriver == true) {
                    // Make the marker-pin blue!
                    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png')
                }
                else
                {
                    // Make the marker-pin green!
                    marker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png')
                }
                scheduleMarkers.push(marker);
			});
		}
</script>
}
