@model SiteFuel.Exchange.ViewModels.InvoiceExceptions.CompanyExceptionModel

@using (Html.BeginCollectionItem("Exceptions"))
{
    <div class="row well mb15 @(CurrentUser.IsSupplierAdmin || CurrentUser.IsCarrierAdmin ? "" : "pntr-none subSectionOpacity")">
        <div class="col-sm-12">
            @Html.HiddenFor(m => m.TypeId)
            <div class="font-bold mb10">
                <div class="checkbox mr5 dib">
                    <label>
                        @Html.CheckBoxFor(m => m.IsActive) <span class="font-bold">@Model.TypeName</span>
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-md-2">
                    @if (Model.TypeId == (int)ExceptionType.DeliveredQuantityVariance)
                    {
                        <div class="form-group mb0">
                            <label class="font-bold mb5">@Resource.lblTolerance</label>
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Threshold, new { @class = "form-control", placeholder = "+ %", data_val_requiredif = string.Format(Resource.valMessageRequired, Resource.lblTolerance) })
                                <span class="input-group-addon">@Resource.constSymbolPercent</span>
                            </div>
                            @Html.ValidationMessageFor(m => m.Threshold)
                        </div>
                    }
                    else
                    {
                        <input id="@Html.IdFor(m => m.Threshold)" name="@Html.NameFor(m => m.Threshold)" type="hidden" value="0">
                    }
                </div>
                <div class="col-sm-6 col-md-2" id="Exceptions-ApproverId">
                    <div class="font-bold mb5">@Resource.lblExceptionApprover</div>
                    @if (Model.Approvers != null)
                    {
                        if (Model.Approvers.Count > 1)
                        {
                            foreach (var item in Model.Approvers)
                            {
                                if (item.Id == (int)ExceptionApprover.Self || item.Id == (int)ExceptionApprover.CarrierOrSupplier)
                                {
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(m => m.ApproverId, item.Id) @item.Name
                                        </label>
                                    </div>
                                }
                            }
                            @Html.ValidationMessageFor(m => m.ApproverId)
                        }
                        else
                        {
                            foreach (var item in Model.Approvers)
                            {
                                <div class="radio hide-element">
                                    <label>
                                        @Html.RadioButtonFor(m => m.ApproverId, item.Id, new { @checked = "@checked" })
                                    </label>
                                </div>
                                <div>@item.Name</div>
                            }
                        }
                    }
                </div>
                <div class="col-sm-6 col-md-3">

                    @if (Model.TypeId != (int)ExceptionType.ManageRetaion)
                    {
                        <div class="font-bold mb5">@Resource.lblResolutionsForInvoicing</div>
                        if (Model.Resolutions != null)
                        {
                            foreach (var item in Model.Resolutions)
                            {
                                <div class="mb5">
                                    @item.Name
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="font-bold mb5">@Resource.lblResolutionsForRetainFuel</div>
                        if (Model.Resolutions != null)
                        {
                            foreach (var item in Model.Resolutions)
                            {
                                <div class="mb5">
                                    @item.Name
                                </div>
                            }
                        }
                    }
                </div>
                @if (Model.TypeId != (int)ExceptionType.InvoiceApiException && Model.TypeId != (int)ExceptionType.UnknownDeliveries)
                {
                    if (Model.TypeId == (int)ExceptionType.ManageRetaion)
                    {
                        <div class="col-sm-6 col-md-3 hidden">
                            @Resource.lblAutoApproveInvoices
                            <span class="input-group mt10" style="max-width: 160px">
                                @Html.TextBoxFor(m => m.AutoApprovalDays, "1", new { @class = "form-control" })
                                <span class="input-group-addon">@Resource.lblBusinessDays</span>
                            </span>
                            @Html.ValidationMessageFor(m => m.AutoApprovalDays)
                        </div>
                    }
                    else
                    {
                        <div class="col-sm-6 col-md-3">
                            @Resource.lblAutoApproveInvoices
                            <span class="input-group mt10" style="max-width: 160px">
                                @Html.TextBoxFor(m => m.AutoApprovalDays, new { @class = "form-control" })
                                <span class="input-group-addon">@Resource.lblBusinessDays</span>
                            </span>
                            @Html.ValidationMessageFor(m => m.AutoApprovalDays)
                        </div>
                    }
                }
                else
                {
                    <div class="col-sm-6 col-md-3">
                        @Resource.lblAutoRejectOn
                        <span class="input-group mt10" style="max-width: 160px">
                            @Html.TextBoxFor(m => m.AutoApprovalDays, new { @class = "form-control" })
                            <span class="input-group-addon">@Resource.lblBusinessDays</span>
                        </span>
                        @Html.ValidationMessageFor(m => m.AutoApprovalDays)
                    </div>
                }
                @if (Model.TypeId == (int)ExceptionType.MissingDeliveries)
                {
                    <div class="col-sm-6 col-md-2 pa0">
                        @Resource.lblDelayInvoiceCreationTime
                        <span class="input-group mt10" style="max-width: 160px">
                            @Html.TextBoxFor(m => m.DelayInvoiceCreationTime, new { @class = "form-control" })
                            <span class="input-group-addon">@Resource.lblMinutes</span>
                        </span>
                        @Html.ValidationMessageFor(m => m.AutoApprovalDays)
                    </div>
                }
            </div>
        </div>
    </div>
}