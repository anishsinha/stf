@model JobStepsViewModelForSuperAdmin

@{
    ViewBag.Title = "Add Assets";
}

<div class="row">
    <div class="col-sm-12">
        <h4 class="mt0 f-light float-left">@Resource.headingAssignAssets</h4>
        @if ((Model.IsCreatedByMe == true) && (CurrentUser.IsSupplier || CurrentUser.IsSupplierAdmin || CurrentUser.IsCarrier || CurrentUser.IsCarrierAdmin || CurrentUser.IsDispatcher))
        {
            <a onclick='LoadAsset();' class="fs18 float-left ml20 mt8">
                <i class="fa fa-plus-circle fs18 mt5 float-left mb10"></i><span class="fs14 mt-1 float-left ml-2">@Resource.btnLabelCreateNew</span>
            </a>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12 pr">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="tpo-asset-datatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@Resource.gridColumnAssetName</th>
                                    <th>@Resource.gridColumnMake</th>
                                    <th>@Resource.gridColumnModel</th>
                                    <th>@Resource.gridColumnYear</th>
                                    <th>@Resource.gridColumnCatClass</th>
                                    <th>@Resource.gridColumnFuelType</th>
                                    <th>@Resource.gridColumnFuelCapacity</th>
                                    <th>@Resource.gridColumnImage</th>
                                    @*<th>@Resource.gridColumnDelete<input type="checkbox" id="select-all" /></th>*@
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-12 text-right mb25 btn-wrapper">
        @if (Model.IsCreatedByMe == true)
        {
            <div class="row">
                <div class="form-group col-sm-12">
                    <input type="button" class="btn" value="@Resource.btnLabelCancel" onclick="window.history.go(-1)" />
                    <input type="button" class="btn btn-primary" value="@Resource.btnLabelSave" id="btnSave" />
                </div>
            </div>
        }
    </div>
</div>

@using (Html.BeginScripts())
{
    <script type="text/javascript">

        var assetDataTable;
		var exportColumns = { columns: [1, 2, 3, 4, 5, 6] };

        $(document).ready(function () {

            var visible = '@Model.IsCreatedByMe' == 'True';
            var url = "@Url.Action("AssetGrid", "Asset", new { area = "Supplier" })";
            if ('@Model.IsCreatedByMe' == 'True') {
                url = "@Url.Action("AssignAssetsTanksToJob", "Job", new { area = "Supplier" })";
            }
            assetDataTable = $('#tpo-asset-datatable').dataTable({
                "ajax": {
                    "url": url,
                    "type": "GET",
                    "datatype": "json",
                    "data": function () {
                        var assetFilter = {
                            JobId: '@Model.Job.Id',
                            Type: '@((int)@AssetType.Asset)'
                        };
                        return assetFilter;
                    },
                    "dataSrc": ""
                },
                "columns": [
                    {
                        "data": function (data, type, row, meta) {
                            var checked = (data.IsAssetAssigned == true) ? "checked=\"checked\"" : "";
                            return '<input type="checkbox" class = "chk-asset" id="' + data.Id + '"  value = "' + data.Name + '" ' + checked + '/>';
                        }, "autoWidth": true, "bSortable": false
                    },
                    {
                        "data": function (data, type, row, meta) {
                             var allowEdit = (('@Model.IsCreatedByMe' == 'True')&& ('@CurrentUser.IsSupplierAdmin' == 'True' || '@CurrentUser.IsSupplier' == 'True' || '@CurrentUser.IsCarrierAdmin' == 'True' || '@CurrentUser.IsCarrier' == 'True' || '@CurrentUser.IsDispatcher' == 'True'));
                            if (data.IsActive && allowEdit) {
                                        return '<a onclick="showAssetTankDetails(' + data.Id + ',1,' + allowEdit + ','+@Model.Job.Id+')">' + data.Name + '</a>';
                                    }
                                    else {
                                        return data.Name;
                                    }
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Make == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Make;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Model == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Model;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Year == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Year;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Class == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Class;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.FuelType.Name == null ? '@Resource.lblHyphen' : data.FuelType.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.FuelCapacity == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.FuelCapacity;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.Image.Id > 0) {
                                var imgUrl = data.Image.FilePath;
                                return "<img id='image-" + data.Image.Id + "' class='img-max50' src='" + imgUrl + "'/>";
                            }
                            else {
                                return '@Resource.lblHyphen';
                            }
                        }, "autoWidth": true
                    }


                ],
                pageLength: 10,
                responsive: true,
                "order": [],
                "initComplete": function (settings, json) {
                    allPages = assetDataTable.fnGetNodes();
                    updateSelectAllCheckboxStatus(json);
                    wrapperHeight();
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'csv', title: '@Resource.headingAssignAssets', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'excel', title: '@Resource.headingAssignAssets', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    { extend: 'pdf', title: '@Resource.headingAssignAssets', exportOptions: { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8] } },
                    {
                        extend: 'print', exportOptions: exportColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "columnDefs": [
                    { "targets": [0], "visible": visible, "searchable": visible },
                    { "name": "Name", "targets": 1, "regex": false },
                    { "name": "Make", "targets": 2 },
                    { "name": "Model", "targets": 3 },
                    { "name": "Year", "targets": 4 },
                    { "name": "Class", "targets": 5 },
                    { "name": "FuelType", "targets": 6 },
                    { "name": "FuelCapacity", "targets": 7 },
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                }

            });

                $("#btnSave").click(function () {
                var data = [], url = '@Url.Action("AssignAssets", "Job", new { area = "Supplier" })?jobId=@Model.Job.Id';
                var jobId = '@Model.Job.Id';
                $("input:checkbox", assetDataTable.fnGetNodes()).each(function () {
                    if ($(this).is(':checked')) {
                        data.push($(this).attr('id'));
                    }
                })

                var model = {
                    assets: data,
                    jobId: jobId
                };

                $.post(url, model, function (response) {
                    if (response == 0) {

                        window.location.href = '@Url.Action("Details", "Job", new { area = "Supplier", id = Model.Job.Id, IsTPO = "1" })';
                    }
                }, 'json');
            })
        });

    function LoadAsset() {
        var url = '@Url.Action("CreateAsset", "Job", new { area = "Supplier" })?jobId=' +@Model.Job.Id+'&type='+@((int)AssetType.Asset)+'';
            $.get(url, function (response) {
                if (response != null || response != "") {
                    $("#slider-heading").text('Create New Asset');
                    $("#slider-content").html(response);
                    parseForm();
                    slidePanel("#sliderpanel");
                    $(".lblforcastingNote").text('');
                    $(".lblforcastingNote").hide();
                }
            })
            .done(function () {
              getSupplierPreferenceSetting();
            })
            .always(function () {
                $("#slider-loader").hide();
            });
        }

        function updateSelectAllCheckboxStatus(json) {

            var checkAll = $.grep(json, function (data) { return data.CurrentJob== null || data.CurrentJob.Id != jobId; }).length == 0 ? true : false;
            $('#select-all').prop('checked', checkAll);

            $('#select-all').click(function () {
                var status = $(this).prop('checked');
                $(".chk-asset", allPages).each(function () {
                    $(this).prop("checked", status);
                });
            });

            $(".chk-asset", allPages).change(function () {
                if ($('.chk-asset', allPages).length == $(".chk-asset:checked", allPages).length) {
                    $('#select-all').prop("checked", true);
                }
                else {
                    $('#select-all').prop("checked", false);
                }
            });
        }
    </script>
}
