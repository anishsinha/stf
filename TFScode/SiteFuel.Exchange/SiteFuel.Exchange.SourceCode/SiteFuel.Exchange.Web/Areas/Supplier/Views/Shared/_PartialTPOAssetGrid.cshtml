@{
    ViewBag.Title = "Add Assets";
}

<div class="row">
    <div class="col-sm-12">
        <h3 class="mt0 f-light fs21 float-left">@Resource.headingAssignAssets</h3>
        @if (CurrentUser.IsSupplier || CurrentUser.IsSupplierAdmin)
        {
            <a href="@Url.Action("CreateAsset", "Order", new { area = "Supplier", orderId = Convert.ToInt32(ViewContext.RouteData.Values["id"]) })" class="fs18 float-left ml20">
                <i class="fa fa-plus-circle fs18 mt5 float-left mb10"></i><span class="fs14 mt3 ml5 float-left">@Resource.btnLabelCreateNew</span>
            </a>
        }
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <h4 class="mt0 f-light pb5 fs21 mb5 float-left">@Resource.headingAsset</h4>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="well bg-white shadow-b pr">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="tpo-asset-datatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnAssetName</th>
                                    <th>@Resource.gridColumnMake</th>
                                    <th>@Resource.gridColumnModel</th>
                                    <th>@Resource.gridColumnYear</th>
                                    <th>@Resource.gridColumnCatClass</th>
                                    <th>@Resource.gridColumnFuelType</th>
                                    <th>@Resource.gridColumnFuelCapacity</th>
                                    <th>@Resource.gridColumnImage</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 text-right mb25 btn-wrapper">
            <div class="row">
                <div class="form-group col-sm-12">
                    <input type="button" class="btn btn-primary" value="@Resource.btnLabelRemove" id="btnRemove" />
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

	var assetDataTable, exportColumns = {
        columns: [0, 1, 2, 3, 4, 5, 7], format: {
			body: function (data, row, col, node) {
				var elementType = node.firstChild;
				if (elementType != null) {
					if (elementType.nodeName == "SELECT")
						return $(elementType).find(':selected').text();
					else
						return $(elementType).text();
				}
				else
					return data;
			}
		}
	};

    var ClearFilter;
    $(document).ready(function () {

        if ($('#tab-tpo-asset-details').hasClass('active')) {
            assetDocumentReady();
        }

        function updateSelectAllOnPageChange() {
            var allChecked = true, anyOneChecked = false;

            $('#tpo-asset-datatable tbody tr').each(function () {
                $(this).find('.chk-asset').not(":disabled").each(function () {
                    if (!$(this).is(':checked')) {
                        allChecked = false;
                    }
                    else if (anyOneChecked == false) {
                        anyOneChecked = true;
                    }
                });
            });
            $('#select-all').prop('checked', allChecked);
            if (anyOneChecked == true) {
                $("#btnRemove").attr("disabled", false);
            }
            else {
                $("#btnRemove").attr("disabled", true);
            }
        }

        function assetDocumentReady() {
            var orderId = '@Convert.ToInt32(ViewContext.RouteData.Values["id"])

            assetDataTable = $('#tpo-asset-datatable').DataTable({
                "ajax": {
                    "url": "@Url.Action("AssetGrid", "Order", new { area = "Supplier" })",
                    "type": "GET",
                    "datatype": "json",
                    "data": { 'id': orderId },
                    "dataSrc": "",

                },
                "columns": [
                    {
                        "data": function (data, type, row, meta) {
                            return '<input type="checkbox" class = "chk-asset" id="' + data.Id + '" value = "' + data.Active + '" />';
                        }, "autoWidth": true, "bSortable": false
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Make == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Make;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Model == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Model;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Year == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Year;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Class == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Class;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.FuelType.Name == null ? '@Resource.lblHyphen' : data.FuelType.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.FuelCapacity == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.FuelCapacity;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.Image.Id > 0) {
                                return "<img id='image-" + data.Image.Id + "' class='img-max50' data-image-url='@Url.Action("GetImage")?imageId=" + data.Image.Id + "'/>";
                            }
                            else {
                                return '@Resource.lblHyphen';
                            }
                        }, "autoWidth": true
                    }

                ],
                pageLength: 10,
                responsive: true,
                "order": [],
                "initComplete": function (settings, json) {
                    $('[data-toggle=confirmation]').confirmation({
                        rootSelector: '[data-toggle=confirmation]'
                    });
                    updateSelectAllCheckboxStatus(json);
                    wrapperHeight();
                },
                "fnDrawCallback": function (settings) {
                    $('[data-toggle=confirmation]').confirmation({
                        rootSelector: '[data-toggle=confirmation]',
                        html: true
                    });
                    updateSelectAllOnPageChange();
                    updateSelectAllCheckboxStatus();
                },
                "columnDefs": [{
                    "targets": [8, 9, 10],
                    "visible": columnToggle,
                    "searchable": columnToggle
                }],
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'csv', title: '@Resource.headingAssets', exportOptions: exportColumns },
                    { extend: 'excel', title: '@Resource.headingAssets', exportOptions: exportColumns },
                    { extend: 'pdf', title: '@Resource.headingAssets', exportOptions: exportColumns, orientation: 'landscape' },
                    {
                        extend: 'print', exportOptions: exportColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                }
            });

            assetDataTable.on("init.dt", function () { showAjaxImages(); });

            $("#btnRemove").click(function () {
                var data = [], url = '@Url.Action("DeleteAssets", "Asset", new { area="Buyer"})';
                var anNodes = $("#tpo-asset-datatable tbody tr");

                for (var i = 0; i < anNodes.length; ++i) {
                    if ($(anNodes[i]).find('input:checkbox').is(':checked')) {
                        data.push($(anNodes[i]).find('input:checkbox').attr('id'));
                    }
                }
                var model = {
                    assets: data
                };

                $.post(url, model, function (response) {
                    if (response == 0) {
                        @*window.location.href = '@Url.Action("View", "Asset", new { area = "Buyer", id = Model.JobId, filter = (int)Model.Filter })';*@
                    }
                }, 'json');
            })
        }
    });
		function updateSelectAllCheckboxStatus()
		{
            $('#select-all').click(function () {
                if ($(this).prop("checked") == true) {
					$("#btnRemove").attr("disabled", false);
                }
                else if ($(this).prop("checked") == false) {
					$("#btnRemove").attr("disabled", true);
                }
                var status = $(this).prop('checked');
                $(".chk-asset").each(function () {
                    $(this).not(":disabled").prop("checked", status);
                });
			});

            $(".chk-asset").change(function () {
                if ($(".chk-asset:checked").length > 0) {
                    $("#btnRemove").attr("disabled", false)
                }
                else {
                    $("#btnRemove").attr("disabled", true)
                }

				if ($('.chk-asset').not(":disabled").length == $(".chk-asset:checked").length) {
                    $('#select-all').prop("checked", true);
                }
                else {
                    $('#select-all').prop("checked", false);
                }
            });
        }
</script>

