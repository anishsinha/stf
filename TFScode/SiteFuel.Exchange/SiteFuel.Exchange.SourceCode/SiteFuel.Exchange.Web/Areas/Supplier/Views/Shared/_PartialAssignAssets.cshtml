@model AssetFilterViewModel

@{
    ViewBag.Title = "Add Assets";
}

<div class="row">
    <div class="col-sm-12">
        <h3 class="mt0 f-light fs21 float-left">@Resource.headingAssignAssets</h3>
        @if (CurrentUser.IsSupplier || CurrentUser.IsSupplierAdmin)
        {
            <a onclick='LoadAsset();' class="fs18 float-left ml20">
                <i class="fa fa-plus-circle fs18 mt5 float-left mb10"></i><span class="fs14 mt3 ml5 float-left">@Resource.btnLabelCreateNew</span>
            </a>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="well bg-white shadow-b pr">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="tpo-asset-datatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@Resource.gridColumnAssetName</th>
                                    <th>@Resource.gridColumnMake</th>
                                    <th>@Resource.gridColumnModel</th>
                                    <th>@Resource.gridColumnYear</th>
                                    <th>@Resource.gridColumnCatClass</th>
                                    <th>@Resource.gridColumnFuelType</th>
                                    <th>@Resource.gridColumnFuelCapacity</th>
                                    <th>@Resource.gridColumnImage</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 text-right mb25 btn-wrapper">
            <div class="row">
                <div class="form-group col-sm-12">
                    <input type="button" class="btn btn-default" value="@Resource.btnLabelCancel" onclick="location.href='@Url.Action("View", "Order", new { area = "Supplier" })'" />
                    <input type="button" class="btn btn-primary" value="@Resource.btnLabelSave" id="btnSave" />
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginScripts())
{
<script type="text/javascript">

        var assetDataTable;
		var exportColumns = { columns: [1, 2, 3, 4, 5, 6] };

        $(document).ready(function () {

            assetDataTable = $('#tpo-asset-datatable').dataTable({
                "ajax": {
                    "url": "@Url.Action("AssignAssetsToJob", "Order", new { area ="Supplier", jId = Model.JobId })",
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "columns": [
                    {
                        "data": function (data, type, row, meta) {
                            var checked = (data.IsAssetAssigned == true) ? "checked=\"checked\"" : "";
                            return '<input type="checkbox" class = "chk-asset" id="' + data.Id + '"  value = "' + data.Name + '" ' + checked + '/>';
                        }, "width": "2px", "bSortable": false
                    },
                    {
                        "data": function (data, type, row, meta) {
							var allowEdit = ('@CurrentUser.IsSupplierAdmin' == 'True' || '@CurrentUser.IsSupplier' == 'True') && data.DisplayMode == @((int)PageDisplayMode.Edit) ? true : false;
							if (data.IsActive && allowEdit) {
								return `<a onclick="slideAssetTankDetails(` + data.Id + `,1,` + allowEdit + `,false,false,` + data.JobId +`,`+@Model.OrderId+`)">` + data.Name + `</a>`;
                            }
                            else {
                                return data.Name;
                            }
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Make == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Make;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Model == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Model;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Year == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Year;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Class == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Class;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.FuelType.Name == null ? '@Resource.lblHyphen' : data.FuelType.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.FuelCapacity == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.FuelCapacity;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.Image.Id > 0) {
                                return "<img id='image-" + data.Image.Id + "' class='img-max50' data-image-url='@Url.Action("GetImage")?imageId=" + data.Image.Id + "'/>";
                            }
                            else {
                                return '@Resource.lblHyphen';
                            }
                        }, "autoWidth": true
                    }

                ],
                pageLength: 10,
                responsive: true,
                "order": [],
                "initComplete": function (settings, json) {
                    allPages = assetDataTable.fnGetNodes();
                    updateSelectAllCheckboxStatus(json);
                    wrapperHeight();
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'csv', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'excel', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'pdf', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    {
                        extend: 'print', exportOptions: exportColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                }

            });

            assetDataTable.on("init.dt", function () { showAjaxImages(); });

            $("#btnSave").click(function () {
                var data = [], url = '@Url.Action("AssignAssets", "Order", new { area = "Supplier" })?oId=@Model.OrderId&jId=@Model.JobId';

                $("input:checkbox", assetDataTable.fnGetNodes()).each(function () {
                    if ($(this).is(':checked')) {
                        data.push($(this).attr('id'));
                    }
                })

                var model = {
					assets: data
                };

                $.post(url, model, function (response) {
                    if (response == 0) {

                        window.location.href = '@Url.Action("Details", "Order", new { area = "Supplier" })/'+@Model.OrderId+'';
                    }
                }, 'json');
            })
        });

    function LoadAsset() {
            var url = '@Url.Action("CreateAsset", "Order", new { area = "Supplier" })?oId=' +@Model.OrderId+'&jId='+@Model.JobId+'&type='+@((int)AssetType.Asset)+'';
            $.get(url, function (response) {
                if (response != null || response != "") {
                    $("#slider-heading").text('Create New Asset');
                    $("#slider-content").html(response);
                    parseForm();
                    slidePanel("#sliderpanel");
                    $(".lblforcastingNote").text('');
                    $(".lblforcastingNote").hide();
                }
            }).always(
                function () {
                    $("#slider-loader").hide();
                }
            );
        }
        function updateSelectAllCheckboxStatus(json) {

            var checkAll = $.grep(json, function (data) { return data.CurrentJob== null || data.CurrentJob.Id != jobId; }).length == 0 ? true : false;
            $('#select-all').prop('checked', checkAll);

            $('#select-all').click(function () {
                var status = $(this).prop('checked');
                $(".chk-asset", allPages).each(function () {
                    $(this).prop("checked", status);
                });
            });

            $(".chk-asset", allPages).change(function () {
                if ($('.chk-asset', allPages).length == $(".chk-asset:checked", allPages).length) {
                    $('#select-all').prop("checked", true);
                }
                else {
                    $('#select-all').prop("checked", false);
                }
            });
        }
</script>
}
