@model BrokerFilterViewModel
<div class="row">
    <div class="col-sm-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-padding no-border">
                    <div id="broker-activity-grid" class="table-responsive">
                        <table id="BrokerActivity-datatable" class="table table-striped table-bordered table-hover" data-grid-parent="#orders-grid">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnCustomer</th>
                                    <th>@Resource.gridColumnPoNumber</th>
                                    <th>@Resource.gridColumnSupplier</th>
                                    <th>@Resource.gridColumnBrokeredPoNumber</th>
                                    <th class="no-break">@Resource.gridColumnFuelType</th>                                  
                                    <th class="uom-by-country"><span class="uom-lbl"></span> &nbsp;@Resource.lblRequested</th>
                                    <th class="uom-by-country"><span class="uom-lbl"></span> &nbsp;@Resource.lblBrokered</th>
                                    <th class="rack-ppg-by-country"></th>
                                    <th class="broker-rackprice-per-qty">@Resource.gridColumnBrokerRackPPG (<span class="currency-by-country"></span>)</th>
                                    <th>@Resource.gridColumnStatus</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var brokerActivityDataTable, exportColumns = { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] };
    $(document).ready(function () {
        SetUoMCurrencyAndRacklables();
        brokerActivityDataTable = $('#BrokerActivity-datatable').DataTable({
            "ajax": {
                "url": "@Url.Action("Activity", "Broker", new { area = "Supplier" })",
                "type": "GET",
                "datatype": "json",
                "data": function (data) {
                    data.StartDate = $('#txtBrokerFromDate').val(),
                        data.EndDate = $('#txtBrokerToDate').val(),
                        data.Currency = getSelectedCountryAndCurrency().currencyType,
                        data.CountryId = getSelectedCountryAndCurrency().countryId
                    $('#broker-activity-grid').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                },
                "dataSrc": function (json) {
                    $("#broker-activity-grid").find('.loading-wrapper').remove();
                    return json;
                }
            },
            "columns": [
                { "data": "BuyerCompany", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return '<a href="@Url.Action("Details", "Order", new { area = "Supplier", id= "" })/' + data.ParentOrderId + '">' + data.BuyerPoNumber + '</a>';
                    }, "autoWidth": true
                },
                { "data": "SupplierCompany", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return '<a href="@Url.Action("Details", "Order", new { area = "Supplier", id= "" })/' + data.Id + '?isBrokeredRequest=true">' + data.SupplierPoNumber + '</a>';
                    }, "autoWidth": true
                },
                { "data": "FuelType", "autoWidth": true },
                { "data": "BuyerQuantity", "autoWidth": true },
                { "data": "SupplierQuantity", "autoWidth": true },
                { "data": "BuyerPPG", "autoWidth": true },
                { "data": "SupplierPPG", "autoWidth": true },
                { "data": "Status", "autoWidth": true }
            ],
            'lengthMenu': [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            pageLength: 10,
            responsive: true,
            "order": [],
            "initComplete": function (settings, json) {
                wrapperHeight();
                hideLoader();
                tabGridHeader(this);
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy' },
                { extend: 'csv', title: '@Resource.headingActivityReport' },
                { extend: 'excel', title: '@Resource.headingActivityReport' },
                @*{ extend: 'pdf', title: '@Resource.headingActivityReport', orientation: 'landscape' },*@
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
            }
        });
    });

    function ReloadDataTable() {
        brokerActivityDataTable.ajax.reload();
    }
</script>
