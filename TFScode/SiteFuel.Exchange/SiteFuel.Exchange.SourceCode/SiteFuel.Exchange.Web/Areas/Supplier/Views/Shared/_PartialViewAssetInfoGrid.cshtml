@model OrderDetailsViewModel
<div class="row">
    <div class="col-md-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="supplier-assetInfo-datatable" class="table table-striped table-bordered table-hover small-grid">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnAssetName</th>
                                    <th>@Resource.gridColumnMake</th>
                                    <th>@Resource.gridColumnModel</th>
                                    <th>@Resource.gridColumnYear</th>
                                    <th>@Resource.gridColumnCatClass</th>
                                    <th>@Resource.gridColumnFuelType</th>
                                    <th>@Resource.gridColumnFuelCapacity</th>
                                    <th>@Resource.gridColumnImage</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginScripts())
{
<script type="text/javascript">

        var assetDataTable;
		var exportColumns = { columns: [1, 2, 3, 4, 5, 6] };

        $(document).ready(function () {

            assetDataTable = $('#supplier-assetInfo-datatable').dataTable({
                "ajax": {
                    "url": "@Url.Action("ViewAssetInformation", "Order", new { area ="Supplier" })",
                    "type": "GET",
                    "datatype": "json",
                    "data": function (data) {
                        data.jId = @Model.JobId,
                        data.type = '@((int)@AssetType.Asset)'
					},
                    "dataSrc": ""
                },
                "columns": [
                    {
                        "data": function (data, type, row, meta) {
                            return data.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Make == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Make;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Model == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Model;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Year == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Year;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.Class == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.Class;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.FuelType.Name == null ? '@Resource.lblHyphen' : data.FuelType.Name;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            return data.AssetAdditionalDetail.FuelCapacity == null ? '@Resource.lblHyphen' : data.AssetAdditionalDetail.FuelCapacity;
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.Image.Id > 0) {
                                var imgUrl = '@Url.Action("DownloadImage")/' + data.Image.Id;
                                return "<img id='image-" + data.Image.Id + "' class='img-max50' src='" + imgUrl + "'/>";
                            }
                            else {
                                return '@Resource.lblHyphen';
                            }
                        }, "autoWidth": true
                    }

                ],
                pageLength: 10,
                responsive: true,
                fixedHeader: true,
                "order": [],
                "initComplete": function (settings, json) {
                    allPages = assetDataTable.fnGetNodes();
                    wrapperHeight();
                },
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'csv', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'excel', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    { extend: 'pdf', title: '@Resource.headingAssignAssets', exportOptions: exportColumns },
                    {
                        extend: 'print', exportOptions: exportColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                },
            });
        });
</script>
}