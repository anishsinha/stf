
@model LFBolEditViewModel
@using (Html.BeginForm("SaveLFBolEditDetails", "LiftFile", new { area = "Supplier" }, FormMethod.Post, new { role = "form", Id = "EditLFBolDetailsForm" }))
{
    @Html.HiddenFor(m => m.LiftRecord.bol)
    @Html.HiddenFor(m => m.LiftRecord.correctedQuantity)
    @Html.HiddenFor(m => m.LiftRecord.LiftFileRecordId)
    @Html.HiddenFor(m => m.LiftRecord.LoadDate)
    @Html.HiddenFor(m => m.LiftRecord.ProductType)
    @Html.HiddenFor(m => m.LiftRecord.RecordDate)
    @Html.HiddenFor(m => m.LiftRecord.Status)
    @Html.HiddenFor(m => m.LiftRecord.statusChangeDate)
    @Html.HiddenFor(m => m.LiftRecord.TerminalItemCode)
    @Html.HiddenFor(m => m.LiftRecord.TerminalName)
    @Html.HiddenFor(m => m.InvoiceFtlDetailId)
    @Html.HiddenFor(m => m.LiftRecord.InvId)
    @Html.HiddenFor(m => m.OrderId)
    @Html.HiddenFor(m => m.PricingSourceId)
    @Html.HiddenFor(m => m.PickUpLocationType)
    @Html.HiddenFor(m => m.IsBulkPlantLift)
    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                <h2 class="fs16 mt5">@Resource.lblLiftFileRecord</h2>
            </div>
        </div>
        <div class="well bg-white shadow-b lfrecord-section">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div id="LFrecord" class="table-responsive">
                        <table id="tabl-Lfrecord" class="table table-striped table-bordered table-hover lfvrecord">
                            <thead>
                                <tr>
                                    <th>@Resource.lblBOL</th>
                                    <th>@Resource.lblTerminals</th>
                                    <th>@Resource.lblCorrectedQty</th>
                                    <th>@Resource.lblTerminalItemCode</th>
                                    <th>@Resource.lblLoadDate</th>
                                    <th>@Resource.gridColumnProductType</th>
                                </tr>
                            </thead>
                            <tr>
                                <td> @Model.LiftRecord.bol</td>
                                <td> @Model.LiftRecord.TerminalName</td>
                                <td>@Model.LiftRecord.correctedQuantity</td>
                                <td>@Model.LiftRecord.TerminalItemCode</td>
                                <td> @Model.LiftRecord.LoadDate</td>
                                <td>@Model.LiftRecord.ProductType</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    if (Model.InvoiceFtlDetailsList.Any() && Model.InvoiceFtlDetailsList.Count > 1)
    {
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(m => m.InvoiceFtlDetailIdFromList)
                @Html.DropDownListFor(m => m.InvoiceFtlDetailIdFromList, new SelectList(Model.InvoiceFtlDetailsList, "Id", "Name", Model.InvoiceFtlDetailIdFromList),
                    string.Format(Resource.valMessageSelect, Resource.lblSelectBolTerminal), new { @class = "form-control .selectedInvoiceFtlDetailId", onchange = "changedInvoiceFtlId()" })
            </div>
        </div>
    }
    if(Model.InvoiceFtlDetailId > 0)
    {
        <div class="col-sm-12 section-bol-details-edit">
            <div class="mt10 row">
                <div class="col-sm-3 bol">
                    <div class="form-group">
                        @Html.LabelFor(m => m.BolNumber)<span class="required pl4" aria-required="true">*</span>
                        @Html.TextBoxFor(m => m.BolNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BolNumber)
                    </div>
                </div>
                <div class="col-sm-3 lifdt">
                    <div class="form-group">
                        @Html.LabelFor(m => m.LiftDate)<span class="required pl4" aria-required="true">*</span>
                        @Html.TextBoxFor(m => m.LiftDate, new
                   {
                       @class = "form-control datepicker",
                       @id = "liftDate"
                   })
                        @Html.ValidationMessageFor(m => m.LiftDate)
                    </div>

                </div>
                <div class="col-sm-3 grossQty">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GrossQuantity)<span class="required pl4" aria-required="true">*</span>
                        @Html.TextBoxFor(m => m.GrossQuantity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.GrossQuantity)
                    </div>
                </div>
                <div class="col-sm-3 netQty">
                    <div class="form-group">
                        @Html.LabelFor(m => m.NetQuantity)<span class="required pl4" aria-required="true">*</span>
                        @Html.TextBoxFor(m => m.NetQuantity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.NetQuantity)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.BadgeNumber)
                        @Html.TextBoxFor(m => m.BadgeNumber, new { placeholder = "Badge#", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.BadgeNumber)
                    </div>
                </div>
                <div class="col-sm-3 terminal-section">
                    <div class="form-group">
                        @Html.LabelFor(m => m.DisplayTerminalName)<span class="required pl4" aria-required="true">*</span>
                        @*@Html.DropDownListFor(m => m.TerminalId, new SelectList(CommonHelperMethods.GetAllTerminals(), "Id", "Name", Model.TerminalId),
                            string.Format(Resource.valMessageSelect, Resource.lblTerminals), new { @class = "form-control" })
                                       @Html.ValidationMessageFor(m=>m.TerminalId)*@
                        @Html.HiddenFor(m => m.TerminalId)
                        <a onclick="showAutoCompleteForTerminal()" title="Change Terminal"><span class="fa fa-edit"></span></a>
                        <div class="pr row">
                            <div class="pa bg-white top0 left0 z-index5 loading-wrapper terminal-loader mtm10 hide"><span class='spinner-dashboard pa'></span></div>
                            <div class="col-md-12">
                                <div class="break-word" id="auto-lblterminalLbl">
                                    @Model.DisplayTerminalName
                                </div>
                                @Html.TextBoxFor(m => m.DisplayTerminalName, new { @class = "form-control hide" })
                                @Html.ValidationMessageFor(m => m.DisplayTerminalName)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 fuelType">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FuelTypeId)<span class="required pl4" aria-required="true">*</span>
                        @Html.DropDownListFor(m => m.FuelTypeId, new SelectList(CommonHelperMethods.GetMstProductsDropDownListForLFVBol(Model.PricingSourceId), "Id", "Name", Model.FuelTypeId),
      string.Format(Resource.valMessageSelect, Resource.lblFuelType), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FuelTypeId)
                    </div>
                </div>
                <div class="col-sm-3 reasonCode">
                    <div class="form-group">
                        @*@Html.DropDownListFor(m => m.ResasonCode, new SelectList(CommonHelperMethods.GetMstProducts(), "Id", "Name", Model.FuelTypeId),
                            string.Format(Resource.valMessageSelect, Resource.lblFuelType), new { @class = "form-input" })
                               </div>*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Notes)
                        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 text-right mt20">
            <button type="button" onclick=" closeSlidePanel()" class="btn">@Resource.btnLabelCancel</button>
            <input type="button"  id="btn-save-lfboleditdetails" class="btn btn-primary btn-lg no-disable" value="@Resource.lblSaveResubmit" />
        </div>
    }
}
<script>
    $(document).ready(function () {
        initDateTimePicker();
        if ('@Model.IsBulkPlantLift' == 'False') {
             var terminalUrl = "@Url.Action("GetClosedTerminal", "Order", new { area = "Supplier" })";
         autoCompleteTerminal("#@Html.IdFor(m => m.DisplayTerminalName)", terminalUrl, 0, 0, 0, 0, 0, @Model.OrderId);
        }
        var isBulkPlantLift = $('#@Html.IdFor(m=>m.IsBulkPlantLift)').val();
        if (isBulkPlantLift == 'True') {
            $('.terminal-section').hide();
        }
        else if (isBulkPlantLift == 'False'){
            $('.terminal-section').show();
        }

    });

    function autoCompleteTerminal(element, url, fuelTypeId, latitude, longitude, countryId, pricingCodeId, orderId) {
			var target = $(element);
            var terminalId = @Model.TerminalId;
            var isSelected = false;
            target.focus(function () {
                target.val('');
                $(this).autocomplete("search", '  ');
            });
			target.autocomplete({
				search: function (e, u) {
					$(".terminal-loader").show();
				},
				source: function (request, response) {
					var inputData = {
						fuelTypeId: fuelTypeId, latitude: latitude, longitude: longitude, countryId: countryId, pricingCodeId: pricingCodeId, orderId: orderId, terminal: request.term
					};
					$.ajax({
						url: url,
						type: "GET",
						dataType: "json",
						data: inputData,
						success: function (data) {
							response($.map(data, function (item) {
								return {
									label: item.Name,
									value: item.Id
								};
							}))
						},
						complete: function (event, xhr, settings)
						{
							$(".terminal-loader").hide();
						}
					})
				},
                select: function (event, ui) {
					isSelected = true;
					$('#DisplayTerminalName').val(ui.item.label); // display the selected text
                    terminalId = ui.item ? ui.item.value : 0;
                    $("#@Html.IdFor(m=>m.TerminalId)").val(terminalId);
					return false;
				},
				messages: {
					noResults: '',
					results: function () { }
				},
				minLength: 2,
				maxShowItems: 10,
				scroll: true
			});
			$.ui.autocomplete.prototype._resizeMenu = function () {
				var ul = this.menu.element;
				ul.outerWidth(this.element.outerWidth());
			}
		}

    function showAutoCompleteForTerminal() {
        if ($("#DisplayTerminalName").hasClass('hide')) {
            $("#DisplayTerminalName").removeClass("hide");
        }
        $('#auto-lblterminalLbl').hide();
    }

    $('#btn-save-lfboleditdetails').one('click', function saveLFBolEditDetails() {
        $('.boleditlider-loader').show();
        var $form = $("#EditLFBolDetailsForm");
        var isValid = $form.valid();
        if (isValid) {
            var url = $form.attr("action");
            var data = $form.serialize();
            $.post(url, data, function (response) {
                if (response.StatusCode == 0) {
                    $('.boleditlider-loader').hide();

                    msgsuccess(response.StatusMessage);
                    closeSlidePanel(); // close slide panel
                    reloadLfReordsGrids();

                } else {
                    $('.boleditlider-loader').hide();
                    msgerror(response.StatusMessage);
                }
            });
        }
        else {
            $('.boleditlider-loader').hide();
        }

    })

   

    function reloadLfReordsGrids() {
        $('#tbl-LFrecord-grid').DataTable().ajax.reload();//reload records grid
        $('#tbl-liftfile-grid').DataTable().ajax.reload();//reload record count grid
    }

    function changedInvoiceFtlId() {
        var selectedBolData = {
            LiftFileRecordId: $("#@Html.IdFor(m => m.LiftRecord.LiftFileRecordId)").val(),
            bol: $("#@Html.IdFor(m => m.LiftRecord.bol)").val(),
            TerminalName: $("#@Html.IdFor(m => m.LiftRecord.TerminalName)").val(),
            correctedQuantity: $("#@Html.IdFor(m => m.LiftRecord.correctedQuantity)").val(),
            RecordDate: $("#@Html.IdFor(m => m.LiftRecord.RecordDate)").val(),
            statusChangeDate: $("#@Html.IdFor(m => m.LiftRecord.statusChangeDate)").val(),
            TerminalItemCode: $("#@Html.IdFor(m => m.LiftRecord.TerminalItemCode)").val(),
            ProductType: $("#@Html.IdFor(m => m.LiftRecord.ProductType)").val(),
            LoadDate: $("#@Html.IdFor(m => m.LiftRecord.LoadDate)").val(),
            InvFtlDetailId: $("#@Html.IdFor(m => m.InvoiceFtlDetailIdFromList)").val(),
            FuelTypeId: $("#@Html.IdFor(m => m.FuelTypeId)").val(),
            OrderId: $("#@Html.IdFor(m => m.OrderId)").val(),
            DisplayTerminalName: $("#@Html.IdFor(m => m.DisplayTerminalName)").val(),
            TerminalId: $("#@Html.IdFor(m => m.TerminalId)").val(),
            IsBulkPlantLift: $("#@Html.IdFor(m => m.IsBulkPlantLift)").val(),
            PricingSourceId: $("#@Html.IdFor(m => m.PricingSourceId)").val(),
            IsInvoiceFtlDetailListRequired: true,
        };
        $('.boleditlider-loader').show();
        $.post("@Url.Action("GetLFBolEditDetailsForSlider","LiftFile", new { area = "Supplier" })", { model: selectedBolData }).done(function (response) {
            if (response != null) {
                $('#edit-bol-details-slider').html(response);
                parseForm();
            }
            $('.boleditlider-loader').hide();
        });

    }
</script>