@model JobStepsViewModelForSuperAdmin
@using System.Threading
@{
    ViewBag.Title = "Job Details";
    Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(Model.Culture);
    string currentUrl = Request.Url.AbsoluteUri.ToString();
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CompanyId)
    <div class="row">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-10 d-lg-none">
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            @Resource.lblMoreDetails
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                            <li>
                                <a id="tab-fr-details" href="javascript:void(0)" onclick="showsection('fr-details'), activelink(this)">
                                    @Resource.stepLabelJobDetails
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-12 tab-headers  d-none d-lg-block d-md-block d-sm-block pr0">
                    <a id="tab-fr-details" href="javascript:void(0)" onclick="showsection('fr-details'), activelink(this);inputBoxShowHide('floating-buttons',null)" class="active mr15">
                        <div class="step-inprogress fs15">
                            <span class="f-light step-text float-left">@Resource.stepLabelJobDetails</span>
                        </div>
                    </a>
                    <div class="spinner-job-details dib float-left pr mtm3"><span class="spinner-small ml10 mt5 pa"></span></div>
                </div>
            </div>
            <div class="tab-container mt10 readOnlyModeFR">
                <div id="fr-details" data-parent-tab="tab-fr-details" class="subTabs">
                    @if (CurrentUser.IsAccountSpecialist || CurrentUser.IsSupplier || CurrentUser.IsSupplierAdmin)
                    {
                        Html.RenderPartial("_PartialJobDetails", Model);
                    }
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginScripts())
{
    <script src="https://maps.googleapis.com/maps/api/js?key=@(SiteFuel.Exchange.Core.Utilities.AppSettings.GoogleMapApiKey)" type="text/javascript"></script>
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/Content/js/address-goecoder")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/Scripts/js/news-feed")

    <script>
        SetPageCulture('@Model.Culture');
		var mapsApiKey = '@SiteFuel.Exchange.Core.Utilities.AppSettings.GoogleApiKey';
        var allStates =  @Html.Raw(Json.Encode(CommonHelperMethods.GetStatesOfAllCountries()));

        var isJobEdit = true;
        var currentEntityId = @Model.Job.Id; // for newsfeed
        var stateId = @Model.Job.State.Id; // for state autofill

        $(document).ready(function () {
            checkBoxChange(".enableAssetTracking input:checkbox","enableStatusForAllAssets")
			var jobEndDate = $(".job-end-date");
			if (jobEndDate.length > 0) {
				jobEndDate.data("DateTimePicker").useCurrent(false);
				jobEndDate.data("DateTimePicker").minDate(moment());
            }

            if ($('input[name="@Html.NameFor(m=> m.Job.LocationType)"]:checked').val() == '@(JobLocationTypes.Various)') {
                $(".jobLocationTypes-location,.jobLocationTypes-geoLocation").addClass("pntr-none subSectionOpacity").attr("disabled");
            }

            if (@Model.Job.Id > 0) {
                $('#ddl-currency-filter-div').find('.currency').attr('readonly', true);
            }


            toggleAddressValidationElements();


            $('#@Html.IdFor(m => m.Job.IsTaxExempted)').on('change', function () {
				if ('@Model.Job.Id' > 0 && '@Model.Job.StatusId' != '@((int)JobStatus.Draft)') {
					var isTaxexempted = '@(Model.Job.IsTaxExempted)' == 'True' ? true : false;
					if (isTaxexempted == $('#@Html.IdFor(m => m.Job.IsTaxExempted)').is(':checked')) {
                        $("#valTaxExempted").addClass('hide-element').removeClass('show-element');
					}
					else {
                        $("#valTaxExempted").addClass('show-element').removeClass('hide-element');
					}
				}
			});

            $('#@Html.IdFor(m => m.Job.IsAssetTracked)').on('change', function () {
				if ('@Model.Job.Id' > 0 && '@Model.Job.StatusId' != '@((int)JobStatus.Draft)') {
					if ('@Model.Job.IsAssetTracked' == 'True' && $('#@Html.IdFor(m => m.Job.IsAssetTracked)').is(':checked') == false) {
						$("#valAssetTracking").addClass('show-element').removeClass('hide-element');
					}
					else {
                        $("#valAssetTracking").addClass('hide-element').removeClass('show-element');
					}
				}
			});

            $("#Submit").click(function (ele) {
                fixedButtons(this);
                var url = "@Url.Action("SaveJob", "Dashboard", new { area = "Supplier" })";
                var isAddressValid = validateLocationAddress();
                if (isAddressValid) {
                    $("form").attr("action", url);
                }
                else {
                    ele.preventDefault();
                }
                
			});

			//enable or disable required asset picture checkbox
            requireAssetPic(true);

            $(".chkGeoCode").click(function () {
                if ($(this).is(":checked")) {
                    $(".address-container .field-validation-error").addClass("hide-element");
                }
                else if (!$(this).is(":checked")) {
                    $(".address-container .field-validation-error,.address-container .field-validation-valid").removeClass("hide-element");
                }
            });

            
            $('#AddAnother').click(function () {
                  SelectedDays = $('#JobSiteAvailability .DeliveryDays-ddl').length;
                if (SelectedDays < 6) {
                    $("#AddAnother").show();
                } else {
                    $("#AddAnother").hide();
                }
            });
        });

		function showMessage(element)
		{
			if ($.inArray('@((int)UserRoles.Admin)', $(element).val()) != -1 && $(element).val().length > 1) {
				$(element).closest('div').next().addClass('show-element').removeClass('hide-element');
			}
		     else {
				$(element).closest('div').next().addClass('hide-element').removeClass('show-element');
			}
		}

        $(document).ajaxComplete(function (event, request, settings) {
            $(".spinner-job-details").hide()
		});

        $(function () {
            $('.enableAssetTracking input').click(requireAssetPic);
        })

        function requireAssetPic(isOnDocumentReady) {
			if ($("#@Html.IdFor(m=>m.Job.IsAssetTracked)").is(':checked')) {
                $(".requireAssetPic").removeClass("defaultDisabled subSectionOpacity");
                $(".requireAssetPic label").removeClass("pntr-none");
			}
            else {
                $(".requireAssetPic").addClass("defaultDisabled subSectionOpacity");
                $(".requireAssetPic label").addClass("pntr-none");
                $(".requireAssetPic input").prop("checked",false);
			}
        }
        $(document).on('change', '.country', function () {
            toggleAddressValidationElements();
        });
         function toggleAddressValidationElements() {
            var countryId = parseInt($("#@Html.IdFor(m=>m.Job.Country.Id)").val());
            var htmlElement = $("#@Html.IdFor(m=>m.Job.Country.Id)");
            var container = $(htmlElement).closest('.address-container');
                if (container != undefined && container.length > 0) {
                    if (!isNaN(countryId) && countryId == '@((int)Country.CAR)') {
                        container.find('.mandatory-symbol').addClass('hide-element');
                    }
                    else {
                        container.find('.mandatory-symbol').removeClass('hide-element');
                    }
                }
        }

        function validateLocationAddress() {
                var isValid = true;
                var countryId = parseInt($('#@Html.IdFor(m => m.Job.Country.Id)').val());
                var stateId = parseInt($("#@Html.IdFor(m => m.Job.State.Id)").val());
            $('.address-validation-error').addClass('hide-element');

                if (countryId == '@((int)Country.CAR)') {
                    if (isNaN(stateId) || stateId <= 0) {
                        validationMessageFor('@Html.NameFor(m => m.Job.State)', '@(string.Format(Resource.valMessageRequired, "State"))');
                        isValid = false;
                    }
                    else {
                $("#@Html.IdFor(m => m.Job.State.Name)").val($("#@Html.IdFor(m => m.Job.State.Id) option:selected").text());
                    }
                }
                else {
                    var city = $.trim($("#@Html.IdFor(m => m.Job.City)").val());
                    var zipCode = $.trim($("#@Html.IdFor(m => m.Job.ZipCode)").val());
                    var countyName = $.trim($("#@Html.IdFor(m => m.Job.CountyName)").val());
                    var address = $.trim($("#@Html.IdFor(m => m.Job.Address)").val());

                    if (address == '') {
                $('#spnErrorAddress').html('@(string.Format(Resource.valMessageRequired, "Address"))');
                $('#spnErrorAddress').removeClass('hide-element');
                        isValid = false;
                    }
                    if (city == '') {
                $('#spnErrorCity').html('@(string.Format(Resource.valMessageRequired, "City"))');
                $('#spnErrorCity').removeClass('hide-element');
                        isValid = false;
                    }
                    if (isNaN(stateId) || stateId <= 0) {
                        validationMessageFor('@Html.NameFor(m => m.Job.State)', '@(string.Format(Resource.valMessageRequired, "State"))');
                        isValid = false;
                    }
                    if (zipCode == '') {
                $('#spnErrorZipCode').html('@(string.Format(Resource.valMessageRequired, "Zip"))');
                $('#spnErrorZipCode').removeClass('hide-element');
                        isValid = false;
                    }
                    if (countyName == '') {
                $('#spnErrorCountyName').html('@(string.Format(Resource.valMessageRequired, "County Name"))');
                $('#spnErrorCountyName').removeClass('hide-element');
                        isValid = false;
                    }
                }

                if (isValid)
            $('.address-validation-error').addClass('hide-element');

                return isValid;
            }

    </script>
}