@model InvoiceFilterViewModel
<div class="row">
    <div class="col-sm-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-padding no-border">
                    <div id="invoice-div" class="table-responsive">
                        <table id="invoice-datatable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th class="hide-element"></th>
                                    <th>@Resource.gridColumnInvoiceNumber</th>
                                    <th>@Resource.lblQbInvoiceNumber</th>
                                    <th>@Resource.gridColumnPoNumber</th>
                                    <th>@Resource.btnLabelBuyer</th>
                                    <th>@Resource.lblBuyerAccountOwner</th>
                                    <th>@Resource.btnLabelSupplier</th>
                                    <th>@Resource.lblSupplierAccountOwner</th>
                                    <th>@Resource.gridColumnLocation</th>
                                    <th class="no-break">@Resource.gridColumnFuelType</th>
                                    <th>@Resource.gridColumnDropDate</th>
                                    <th>@Resource.gridColumnDropTime</th>
                                    <th class="quantity-delivered-grid">@Resource.gridColumnGallonsDelivered</th>
                                    <th class="rackprice-per-qty">@Resource.lblRackPPG</th>
                                    <th class="invoice-amount-grid">@Resource.gridColumnInvoiceAmount</th>
                                    <th>@Resource.gridColumnCreatedDate</th>
                                    <th>@Resource.gridColumnPaymentDueDate</th>
                                    <th>@Resource.headingPaymentTerms</th>
                                    <th>@Resource.gridColumnLastEditDate</th>
                                    <th>@Resource.gridColumnStatus</th>
                                    <th class="exlude-export">@Resource.lblBrokered</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var invoicesGrid, exportColumns = { columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] };
    var dataGridRq;
    $(document).ready(function () {

        ExportGrid();

        invoicesGrid = $('#invoice-datatable').DataTable({
            "ajax": {
                "url": "@Url.Action("InvoiceGrid", "SuperAdmin", new { area = "SuperAdmin" })",
                "type": "POST",
                "datatype": "json",
                "data": function (data) {
                    data.StartDate = $('#txtFromDate').val();
                    data.EndDate = $('#txtToDate').val();
                    dataGridRq = data;
                    $('#invoice-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                },
                "dataSrc": function (json) {
                    $("#invoice-div").find('.loading-wrapper').remove();
                    return json.data;
                }
            },
            'lengthMenu': [[10, 25, 50, 100], [10, 25, 50, 100]],
            aaSorting: [[0, 'desc']],
            "serverSide": true,
            "searchDelay": 500,
            processing: true,
            "searching": { "regex": true },
            "bProcessing": true,
            lengthChange: true,
            "columns": [
                { "data": "InvoiceNumberId", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return '<a href="@Url.Action("InvoiceDetail", "SuperAdmin", new { area = "SuperAdmin" })/' + data.Id + '">' + data.InvoiceNumber + '</a>';
                    }, "autoWidth": true
                },
                {
                    "data": function (data, type, row, meta) {
                        return (data.QbInvoiceNumber == null || data.QbInvoiceNumber == '') ? '--' : data.QbInvoiceNumber;
                    }, "autoWidth": true
                },
                { "data": "PoNumber", "autoWidth": true },
                { "data": "Buyer", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return (data.BuyerAccountOwner == null || data.BuyerAccountOwner == '') ? '--' : data.BuyerAccountOwner;
                    }, "autoWidth": true
                },
                { "data": "Supplier", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return (data.SupplierAccountOwner == null || data.SupplierAccountOwner == '') ? '--' : data.SupplierAccountOwner;
                    }, "autoWidth": true
                },
                { "data": "Location", "autoWidth": true },
                { "data": "FuelType", "autoWidth": true, className: "break-word" },
                { "data": "DropDate", "autoWidth": true },
                { "data": "DropTime", "autoWidth": true },
                { "data": "TotalDroppedGallons", "autoWidth": true },
                { "data": "RackPPG", "autoWidth": true },
                { "data": "TotalInvoiceAmount", "autoWidth": true },
                { "data": "InvoiceDate", "autoWidth": true },
                { "data": "PaymentDueDate", "autoWidth": true },
                { "data": "PaymentTerms", "autoWidth": true },
                { "data": "LastEditDate", "autoWidth": true },
                { "data": "Status", "autoWidth": true },
                {
                    "data": function (data, type, row, meta) {
                        return (data.BrokeredChainId == null || data.BrokeredChainId == '') ? '--' : 'Yes';
                    }, "autoWidth": true
                },
            ],
            pageLength: 10,
            responsive: true,
            fixedHeader: false,
            "order": [[0, 'desc']],
            "initComplete": function (settings, json) {
                wrapperHeight();
                tabGridHeader(this);
            },
            "drawCallback": function (settings, json) {
                hideLinksForCompanyGroup(this);
            },            
            "columnDefs": [
                { "name": "InvoiceNumberId", "targets": 0, "visible": false, "searchable": false },
                { "name": "InvoiceNumber", "targets": 1, "regex": false },
                { "name": "QbInvoiceNumber", "targets": 2 },
                { "name": "PoNumber", "targets": 3 },
                { "name": "BuyerCompany", "targets": 4 },
                { "name": "BuyerAccountOwner", "targets": 5 },
                { "name": "SupplierCompany", "targets": 6 },
                { "name": "SupplierAccountOwner", "targets": 7 },
                { "name": "Location", "targets": 8 },
                { "name": "FuelType", "targets": 9 },
                { "name": "DropDate", "targets": 10 },
                { "name": "DropTime", "targets": 11 },
                { "name": "TotalDroppedGallons", "targets": 12 },
                { "name": "RackPPG", "targets": 13 },
                { "name": "TotalInvoiceAmount", "targets": 14 },
                { "name": "InvoiceDate", "targets": 15 },
                { "name": "PaymentDueDate", "targets": 16 },
                { "name": "PaymentTerms", "targets": 17 },
                { "name": "LastEditDate", "targets": 18 },
                { "name": "Status", "targets": 19 },
                { "name": "BrokeredChainId", "targets": 20 }
            ],
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'csv', title: '@Resource.headingInvoices', exportOptions: exportColumns },
                { extend: 'excel', title: '@Resource.headingInvoices', exportOptions: exportColumns },
                @*{ extend: 'pdf', title: '@Resource.headingInvoices', exportOptions: exportColumns, orientation: 'landscape' },*@
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>",
                search: "<button class='btn btn-primary' id='btnsearch18'> <i class='fa fa-search'></i></button>"
            },
            initComplete: function (settings, json) {
                var api = this.api();
                var textBox = $('#invoice-datatable_filter .input-sm');
                textBox.unbind();
                textBox.bind('keyup input', function (e) {
                    if (e.keyCode == 8 && !textBox.val() || e.keyCode == 46 && !textBox.val()) {
                    } else if (e.keyCode == 13 || !textBox.val()) {
                        api.search(this.value).draw();
                    }
                });

                $("#btnsearch18").click(function () {
                    api.search(textBox[0].value).draw();
                });
            }
        });
    });

    function ReloadDataTable() {
        invoicesGrid.ajax.reload();
    }

    function ExportGrid() {
        registerExportDataEvent('#invoice-datatable',  @ApplicationConstants.ExportRestrictionCount, 
            '@Url.Action("InvoiceGrid", "SuperAdmin", new { area = "SuperAdmin" })',
            '@string.Format(Resource.messageExportRestrictionCount, ApplicationConstants.ExportRestrictionCount)',
            function callBack(jsonResult) {

               return $.map(jsonResult.responseJSON.data, function (item) {
                    return {
                        InvoiceNumber: item.InvoiceNumber,
                        QbInvoiceNumber: item.QbInvoiceNumber,
                        PoNumber: item.PoNumber,
                        Buyer: item.Buyer,
                        BuyerAccountOwner: (item.BuyerAccountOwner == null || item.BuyerAccountOwner == '') ? '--' : item.BuyerAccountOwner,
                        Supplier: item.Supplier,
                        SupplierAccountOwner: (item.SupplierAccountOwner == null || item.SupplierAccountOwner == '') ? '--' : item.SupplierAccountOwner,
                        Location: item.Location,
                        FuelType: item.FuelType,
                        DropDate: item.DropDate,
                        DropTime: item.DropTime,
                        TotalDroppedGallons: item.TotalDroppedGallons,
                        RackPPG: item.RackPPG,
                        TotalInvoiceAmount: item.TotalInvoiceAmount,
                        InvoiceDate: item.InvoiceDate,
                        PaymentDueDate: item.PaymentDueDate,
                        PaymentTerms: item.PaymentTerms,
                        LastEditDate: item.LastEditDate,
                        Status: item.Status,
                        Borkered: (item.BrokeredChainId == null || item.BrokeredChainId == '') ? '--' : 'Yes'
                    };
                });
            }
        );
    }

</script>
