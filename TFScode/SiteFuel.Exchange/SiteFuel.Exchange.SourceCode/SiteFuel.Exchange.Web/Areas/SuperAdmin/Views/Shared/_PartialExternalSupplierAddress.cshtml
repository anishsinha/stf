@model LocationsViewModel
@{
    SelectList trucks = new SelectList(
                                    new List<SelectListItem>
                                            {
    new SelectListItem { Text = "Bobtail", Value = ((int)Trucks.Bobtail).ToString()},
    new SelectListItem { Text = "Transport", Value = ((int)Trucks.Transport).ToString()},
    new SelectListItem { Text = "Tank Wagon", Value = ((int)Trucks.TankWagon).ToString()},
                                            },
                                    "Value", "Text");
}
@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.CompanyId)
@Html.HiddenFor(m => m.Latitude)
@Html.HiddenFor(m => m.Longitude)
@Html.HiddenFor(m => m.IsOnboarding)

    <div class="row">
        <div class="col-md-5">
            <div class="default-address address-container mt10">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", autofocus = "autofocus" })
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(m => m.ZipCode)
                            @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control zipcode" })
                            @Html.ValidationMessageFor(m => m.ZipCode)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.City)
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control city" })
                            @Html.ValidationMessageFor(m => m.City)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.StateId)
                            @Html.DropDownListFor(m => m.StateId, new SelectList(new List<DropdownDisplayItem>(), "Id", "Name", Model.StateId), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control state" })
                            @Html.ValidationMessageFor(m => m.StateId)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CountryId)
                            @Html.DropDownListFor(m => m.CountryId, new SelectList(CommonHelperMethods.GetCountriesEx(), "Id", "Code", Model.CountryId), new { @class = "form-control country" })
                            @Html.ValidationMessageFor(m => m.CountryId)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.PhoneType)
                            @Html.DropDownListFor(m => m.PhoneType, new SelectList(CommonHelperMethods.GetPhoneTypes(), "Id", "Name", 0), string.Format(Resource.valMessageSelect, Resource.lblType), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.PhoneType)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.PhoneNumber)
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control input-phoneformat" })
                            @Html.ValidationMessageFor(m => m.PhoneNumber)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row mt10">
                <div class="col-sm-6">
                    <div class="form-group ">
                        @Html.LabelFor(m => m.SupplierProfile.SupplierQualifications)
                        <i class="fa fa-info-circle ml5" data-toggle="tooltip" data-placement="top" title="@(Model.IsDefault? Resource.msgInfoExtSupAddress: Resource.msgInfoExtSupOtherAddress)"></i>

                        @Html.ListBoxFor(m => m.SupplierProfile.SupplierQualifications, new SelectList(CommonHelperMethods.GetSupplierQualifications(), "Id", "Name", 0), new { @class = "form-control multi-select qualification", onchange = "checkStatusExternal('qualification-check',this)" })
                        <div class="checkbox mt5">
                            <label>
                                <input type="checkbox" id="select-AllDbe" class="select-all qualification-check" onclick="selectallExternal(this,'qualification')" /> @Resource.lblSelectAll
                            </label>
                        </div>
                        @Html.ValidationMessageFor(m => m.SupplierProfile.SupplierQualifications)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.SupplierProductTypes)
                            </div>
                        </div>
                        @Html.ListBoxFor(m => m.SupplierProductTypes, new SelectList(CommonHelperMethods.GetProductTypes(), "Id", "Name", 0), new { @class = "form-control multi-select productlist", onchange = "checkStatusExternal('product-check', this)" })
                        <div class="checkbox mt5">
                            <label>
                                <input type="checkbox" id="select-Allproducts" class="select-all product-check" onclick="selectallExternal(this, 'productlist')" /> @Resource.lblSelectAll
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group ">
                        @Html.LabelFor(m => m.SupplierProfile.BobtailTransportTankWagon)
                        @Html.ListBoxFor(m => m.SupplierProfile.BobtailTransportTankWagon, trucks, new { @class = "form-control multi-select trucks", onchange = "checkStatusExternal('truck-check',this)" })
                        <div class="checkbox mt5">
                            <label>
                                <input type="checkbox" id="select-AllTransport" class="select-all truck-check" onclick="selectallExternal(this, 'trucks')" /> @Resource.lblSelectAll
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SupplierProfile.NumberOfTrucks)
                        @Html.TextBoxFor(m => m.SupplierProfile.NumberOfTrucks, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.SupplierProfile.ServingStates)
                        @Html.ListBoxFor(m => m.SupplierProfile.ServingStates, new SelectList(CommonHelperMethods.GetStates(), "Id", "Name", 0), new { @class = "form-control multi-select states", onchange = "checkStatusExternal('state-check', this)" })
                        <div class="checkbox mt5">
                            <label>
                                <input id="auto-chkselectallstates" type="checkbox" class="select-all state-check" onclick="selectallExternal(this, 'states')" /> @Resource.lblSelectAll
                            </label>
                        </div>
                        @Html.ValidationMessageFor(m => m.SupplierProfile.ServingStates)
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="radio-controls mt0">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="radio mt0">
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(m => m.SupplierProfile.IsStateWideService, true, new { @class = "toggle-section", onclick = "disableserviceradius(this);" }) @Resource.lblStateWideService
                                    </label>
                                </div>
                                <div class="radio">
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(m => m.SupplierProfile.IsStateWideService, false, new { @class = "toggle-section", onclick = "enableserviceradius(this);", onchange = "focusOnFirst(this, 'radiusInput')" }) @Resource.lblSpecificRadius
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="supplier-radius-details">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="ischeck">
                                        <div class="input-group radiusInput">
                                            @Html.TextBoxFor(m => m.SupplierProfile.Radius, new { @class = "form-control", autocomplete = "off", @readonly = true })
                                            <span class="input-group-addon">
                                                @Resource.lblMiles
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row radius-warning hide-element">
                                <div class="col-sm-10 fs12 pt5">
                                    @Html.ValidationMessageFor(m => m.SupplierProfile.Radius)
                                    <div class="alert alert-warning pt5 pb5 mb0"> @Html.Label(Resource.lblRadiusWarning)</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 pt20 fs18 remove-partial-link text-right">
            <a href="javascript:void(0)" class="btn btn-danger btn-sm" onclick="removePartial(this);"><span class="fa fa-trash-alt hoverwhite mr5"></span>@Resource.btnLabelDelete</a>
        </div>
    </div>

@if (!Model.IsDefault)
{
    <div class="col-sm-12 mb10">
        <div class="f-light border-b pb10 fs18"></div>
    </div>
}

<script type="text/javascript">
    //$(function () {
    //    $('[data-toggle="tooltip"]').tooltip()
    //});

    $('[data-toggle="tooltip"]').tooltip({
     sanitizeFn: function (content) { return content; }
    });

    $(document).ready(function () {
        $("[id^=OtherLocationsAndServices_]").each(function (i, element) {
            var elementId = $(element).attr('id');
            if ($('#' + elementId + " option:selected").length == $('#' + elementId + " option").length) {
                $(element).closest(".form-group").find(".select-all").prop('checked', true);
            }
            else {
                $(element).closest(".form-group").find(".select-all").prop('checked', false);
            }
        });
    });
</script>