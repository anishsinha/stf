@model JobViewModelForSuperAdmin
<div class="col-sm-12">
    <div class="row well bg-white shadow-a radius10 mb15">
        <div class="col-md-12">
            <h4 class="pb10">@Resource.stepLabelJobDetails</h4>
            <div class="row">
                <div class="col-sm-5 col-md-3">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.Id)
                        @Html.HiddenFor(m => m.CreatedBy)
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
                <div class="col-sm-5 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.JobID)
                        @Html.TextBoxFor(m => m.JobID, new { @class = "form-control", autofocus = "autofocus" })
                        @Html.ValidationMessageFor(m => m.JobID)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate)
                        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control datepicker job-start-date" })
                        @Html.ValidationMessageFor(m => m.StartDate)
                    </div>
                </div>
                <div class="col-xs-6 col-sm-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EndDate)
                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control datepicker job-end-date", @autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.EndDate)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="checkbox mt0">
                        <label>
                            @Html.CheckBoxFor(m => m.IsProFormaPoEnabled) @Resource.lblProFormaPOEnabled (@Resource.lblOptional)
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- job details ends -->
<!-- address starts -->
<div class="col-sm-12">
    <div class="row well bg-white shadow-a mb15 overflow-h radius10">
        <div class="col-md-12">
            <h4 class="pb10">@Resource.headingAddress</h4>
            <div class="row">
                <div class="col-sm-12">
                    <div class="radio pntr-none subSectionOpacity">
                        <label class="radio-inline jobLocationTypes-location">
                            @Html.RadioButtonFor(m => m.LocationType, JobLocationTypes.Location, new { onclick = "showHideControls(this,'wrapper-location','wrapper-geo,wrapper-various');" })
                            @Resource.lblLocation
                        </label>
                        <label class="radio-inline jobLocationTypes-geoLocation">
                            @Html.RadioButtonFor(m => m.LocationType, JobLocationTypes.GeoLocation, new { onclick = "showHideControls(this,'wrapper-geo','wrapper-location,wrapper-various');" })
                            @Resource.lblGeoLocation
                        </label>
                        <label class="radio-inline jobLocationTypes-various">
                            @Html.RadioButtonFor(m => m.LocationType, JobLocationTypes.Various, new { onclick = "showHideControls(this,'wrapper-various','wrapper-geo,wrapper-location');" })
                            @Resource.lblVarious
                        </label>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.LocationType)
            </div>
            <div class="row address-container">
                <div class="col-md-6 combineDiv wrapper-location">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.Address)
                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control address addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.Address)
                            </div>
                        </div>
                        <div class="col-xs-6 col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ZipCode)
                                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control zipcode addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.ZipCode)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.City)
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control city addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.City)
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.State.Name, new { @Value = Resource.lblDummy })
                                @Html.HiddenFor(m => m.State.Code, new { @Value = Resource.lblDummy })
                                @Html.LabelFor(m => m.State)
                                @Html.DropDownListFor(m => m.State.Id, new SelectList(new List<DropdownDisplayItem>(), Model.State.Id), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control state addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.State.Id)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.CountyName)
                                @Html.TextBoxFor(m => m.CountyName, new { @class = "form-control county addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.CountyName)
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.Country.Name, new { @Value = Resource.lblDummy })
                                @Html.HiddenFor(m => m.Country.Code, new { @Value = Resource.lblDummy })
                                @Html.LabelFor(m => m.Country)
                                @Html.DropDownListFor(m => m.Country.Id, new SelectList(CommonHelperMethods.GetCountriesEx(), "Id", "Code", Model.Country.Id), new { @class = "form-control country addressInput defaultDisabled" })
                                @Html.ValidationMessageFor(m => m.Country.Id)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @Html.PartialFor("~/Views/Shared/_PartialCompanyCurrency.cshtml", m => m.Country)
                    </div>
                </div>
                <div class="col-md-3 wrapper-geo hide-element">
                    <div class="combineDiv">
                        <div class="row geoCntrls">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-xs-6 col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Latitude)
                                            @Html.TextBoxFor(m => m.Latitude, new { @class = "form-control datatype-decimal mask-decimal latitude geoInput defaultDisabled" })
                                            @Html.ValidationMessageFor(m => m.Latitude)
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.Longitude)
                                            @Html.TextBoxFor(m => m.Longitude, new
                                            {
                                                @class = "form-control datatype-decimal mask-decimal longitude geoInput defaultDisabled"
                                            })
                                            @Html.ValidationMessageFor(m => m.Longitude)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                </div>
                <div class="col-md-3 wrapper-various hide-element">
                        <div class="address-controls row">
                            <div class="col-sm-8">
                                <div class="form-group">
                                    @Html.HiddenFor(m => m.State.Name, new { @Value = Resource.lblDummy })
                                    @Html.HiddenFor(m => m.State.Code, new { @Value = Resource.lblDummy })
                                    @Html.LabelFor(m => m.State.Id)
                                    @Html.DropDownListFor(m => m.State.Id, new SelectList(new List<DropdownDisplayItem>()), string.Format(Resource.valMessageSelect, Resource.lblState), new { @class = "form-control state addressInput", onchange = "setStateValue(this);" })
                                    @Html.ValidationMessageFor(m => m.State.Id)
                                </div>
                            </div>
                        </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.TimeZoneName)
                        @Html.TextBoxFor(m => m.TimeZoneName, new { @class = "form-control timeZoneName defaultDisabled", @readonly = "true" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="checkbox">
                        <label class="enableAssetTracking">
                            @Html.CheckBoxFor(m => m.IsAssetTracked, new { onclick = "requireAssetPic(false);checkBoxChange(this,'enableStatusForAllAssets');resetDisabledSection(this,'enableStatusForAllAssets')", @class = "no-hidden-click" }) @Resource.lblEnableAssetTracking
                        </label>
                    </div>
                    <div id="valAssetTracking" class="hide-element">
                        <div class="alert alert-warning fs12" role="alert">
                            @Resource.errMessageAssetTrackingEnabledUpdate
                        </div>
                    </div>
                </div>
                <div class="col-md-6 enableStatusForAllAssets subSectionOpacity pntr-none">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.IsAssetDropStatusEnabled) @Resource.lblEnableStatusForAllAssets
                        </label>
                        <i class="fa fa-info-circle ml5" data-toggle="tooltip" data-placement="top" title="" data-original-title="@Resource.lblMessageDropStatusForAllAssets"></i>
                    </div>
                </div>

                <div class="col-sm-12">
                    <div class="mb0">
                        <div class="checkbox form-group mb0 defaultDisabled">
                            <label>
                                @Html.CheckBoxFor(m => m.IsTaxExempted) @Resource.lblTaxExempted <span class="fs12">@Resource.lblIsTaxExmptedCondition</span>
                            </label>
                        </div>
                        <div id="valTaxExempted" class="hide-element">
                            <div class="alert alert-warning fs12 col-sm-7" role="alert">
                                @Resource.errMessageTaxExemptedUpdate
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- address ends -->
<script type="text/javascript">
    function setStateValue(element) {
        var selectedState = $(element).val();
        var states = $('[name="@Html.NameFor(m=>m.State.Id)"]');
        $(states).first().val(selectedState);
        $(states).last().val(selectedState);
        if ($('input:radio[name="@Html.NameFor(m => m.LocationType)"][value=@(JobLocationTypes.Various)]').is(":checked") == true) {
            var state = $(states).find("option:selected").first().text();
            var country = $('[name="@Html.NameFor(m=>m.Country.Id)"]').find("option:selected").text();
            GetLatLong(state, country);
        }
    }
</script>

