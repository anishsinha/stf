@model UsersFilterViewModel

    <div class="col-sm-12">
        <div class="row">
            <div class="col-sm-12 col-12">
                <h4 class="float-left pt0">@Resource.lblUsers</h4>
                <a href="@Url.Action("CompanyUsers", "SuperAdmin", new { area = "SuperAdmin", id = 0, filter = CompanyUsersFilterType.All })" class="float-left ml20 mt2">@Resource.btnLabelViewAll</a>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="well bg-white shadow-b">
                    <div class="ibox mb0">
                        <div class="ibox-content no-border no-padding">
                            <div id="company-users-div" class="table-responsive">
                                <table id="companyuser-datatable" class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>@Resource.gridColumnName</th>
                                            <th>@Resource.gridColumnEmail</th>
                                            <th>@Resource.gridColumnContact</th>
                                            <th>@Resource.gridColumnRoles</th>
                                            <th>@Resource.gridColumnCompany</th>
                                            <th>@Resource.gridColumnAddedBy</th>
                                            <th>@Resource.gridColumnDateAdded</th>
                                            <th>@Resource.gridColumnUserType</th>
                                            <th>@Resource.gridColumnActive</th>
                                            <th>@Resource.gridColumnCalculator</th>
                                            <th>@Resource.gridColumnImpersonate</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    
    

<script type="text/javascript">
    var exportColumns = { columns: [0, 1, 2, 3, 4, 5, 6,7,8] };
    var companyUserDataTable;
    $(document).ready(function () {
        companyUserDataTable = $('#companyuser-datatable').DataTable({
            "ajax": {
                "url": "@Url.Action("GetCompanyUsers", "SuperAdmin", new { area ="SuperAdmin" })",
                "type": "POST",
                "datatype": "json",
                "data": function (data) {
                    data.CompanyId = '@Model.Id';
                    data.StatusFilter = '@Model.Filter';
                    $('#company-users-div').append("<div class='pa bg-white top0 left0 z-index5 loading-wrapper'><span class='spinner-dashboard pa'></span></div>");
                },
                "dataSrc": function (json) {
                    $("#company-users-div").find('.loading-wrapper').remove();
                    return json.data;
                }
            },
            "columns":
                [
                    {
                        "data": function (data, type, row, meta) {
                            var viewUserUrl = '@Url.Action("UserDetails", "Profile", new { area = "Settings" })';
                            return '<a href=' + viewUserUrl + '/' + data.Id + '>' + data.Name + '</a>';

                        }, "autoWidth": true
                    },
                    { "data": "Email", "autoWidth": true },
                    { "data": "PhoneNumber", "autoWidth": true, className: "phone" },
                    {
                        "data": function (data, type, row, meta) {

                            return data.RoleNames;

                        }, "autoWidth": true
                    },
                    { "data": "CompanyName", "autoWidth": true },
                    { "data": "AddedBy", "autoWidth": true },
                    { "data": "AddedDate", "autoWidth": true, "sType": "date" },
                    {
                        "data": function (data, type, row, meta) {
                            if (data.OnboardedTypeId != 3) {
                                return '@Resource.lblRegular';
                            }
                            else {
                                return '@Resource.lblTPO';
                            }
                        }, "autoWidth": true
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if ('@CurrentUser.IsSuperAdmin' == 'True' && data.OnboardedTypeId != 3) {
                                var isDisabled = data.IsDefault ? "disabled = \"disabled\"" : "";
                                var url = '@Url.Action("ChangeUserStatus", "Profile", new { area = "Settings"})/' + data.Id + '';
                                var checked = data.IsActive ? "checked=\"checked\"" : "";

                                var columnCtrl = '<input type = "checkbox" data-url = "' + url + '" onchange = "updateSiteFuelUserStatus(this)" ' + isDisabled + ' ' + checked + '></input>';
                                columnCtrl += '<span class="hidden">' + (data.IsActive ? '@Resource.lblYes' : '@Resource.lblNo') + '</span>';

                                return columnCtrl;
                            }
                            else {
                                return data.IsActive ? '<input type = "checkbox" checked disabled>' : '<input type = "checkbox" disabled>';
                                // return data.IsActive ? 'Yes' : 'No';
                            }
                        }, "width": "50px", "bSortable": false, "className": "text-center userCheckbox"
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if ('@CurrentUser.IsSuperAdmin' == 'True' && data.OnboardedTypeId != 3) {
                                var url = '@Url.Action("ChangeAllowSalesCalculatorStatus", "Profile", new { area = "Settings"})/' + data.Id + '';
                                var checked = data.IsSalesCalculatorAllowed ? "checked=\"checked\"" : "";

                                var columnCtrl = '<input type = "checkbox" data-url = "' + url + '" onchange = "AllowSalesCalculator(this)" ' + checked + '></input>';
                                columnCtrl += '<span class="hidden">' + (data.IsSalesCalculatorAllowed ? '@Resource.lblYes' : '@Resource.lblNo') + '</span>';

                                return columnCtrl;
                            }
                            else {
                                return data.IsSalesCalculatorAllowed ? '<input type = "checkbox" class="tpoCheckbox" checked disabled>' : '<input type = "checkbox" disabled>';
                            }
                        }, "width": "50px", "bSortable": false, "className": "text-center userCheckbox"
                    },
                    {
                        "data": function (data, type, row, meta) {
                            if (!data.IsOnboarded) {
                                var columnCtrl = "<a class='btn btn-danger btn-xs disabled' title='Not Onboarded'>@Resource.lblNotOnboarded</a>";
                                return columnCtrl;
                            }
                            else if (data.IsImpersonated) {
                                var columnCtrl = "<a class='btn btn-danger btn-xs disabled' title='Already Impersonated'>@Resource.lblImpersonated</a>";
                                return columnCtrl;
                            }
                            else  {
                                var confirmationBtn = '<input type="button" class="btn btn-primary btn-xs" value="@Resource.btnLabelImpersonate" data-toggle="confirmation" data-placement="bottom" data-popout="true" data-singleton="true" href="@Url.Action("ImpersonateUser", "Account", new { area = "" })/' + data.Id + '" />';
                                return confirmationBtn;
                            }
                            
                        }, "width": "50px", "bSortable": false, "className": "text-center"
                    },
                    { "data": "Id", "autoWidth": true }
                ],
            "columnDefs": [
                { "name": "Name", "targets": 0 },
                { "name": "Email", "targets": 1 },
                { "name": "PhoneNumber", "targets": 2 },
                { "name": "RoleNames", "targets": 3 },
                { "name": "CompanyName", "targets": 4 },
                { "name": "AddedBy", "targets": 5 },
                { "name": "AddedDate", "targets": 6 },
                { "targets": [11], "visible": false, "searchable": false }
            ],
            'lengthMenu': [[10, 25, 50, 100, 99999999], [10, 25, 50, 100, "All"]],
            aaSorting: [[]],
            "serverSide": true,
            "searchDelay": 500,
            processing: true,
            "searching": { "regex": true },
            "bProcessing": true,
            lengthChange: true,
            pageLength: 10,
            responsive: true,
            "order": [10, 'desc'],
            "initComplete": function (settings, json) {
                $('[data-toggle=confirmation]').confirmation({
                    rootSelector: '[data-toggle=confirmation]',
                    html: true
                });
                wrapperHeight();
            },
            "fnDrawCallback": function (settings) {
                $('[data-toggle=confirmation]').confirmation({
                    rootSelector: '[data-toggle=confirmation]',
                    html: true
                });
                changePhoneFormat();
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'csv', title: '@Resource.headingSiteFuelUsers', exportOptions: exportColumns },
                { extend: 'excel', title: '@Resource.headingSiteFuelUsers', exportOptions: exportColumns },
                { extend: 'pdf', title: '@Resource.headingSiteFuelUsers', exportOptions: exportColumns, orientation: 'landscape', pageSize: 'LETTER' },
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>",
                search: "<button class='btn btn-primary' id='btnsearch16'> <i class='fa fa-search'></i></button>"
            },
            initComplete: function (settings, json) {
                var api = this.api();
                var textBox = $('#companyuser-datatable_filter .input-sm');
                textBox.unbind();
                textBox.bind('keyup input', function (e) {
                    if (e.keyCode == 8 && !textBox.val() || e.keyCode == 46 && !textBox.val()) {
                    } else if (e.keyCode == 13 || !textBox.val()) {
                        api.search(this.value).draw();
                    }
                });

                $("#btnsearch16").click(function () {
                    api.search(textBox[0].value).draw();
                });
            }
        });
    });

    function updateSiteFuelUserStatus(element) {
        var url = $(element).data('url') + '?isActive=' + $(element).is(':checked') + '';
        $.get(url, function (response) {
            if (response.StatusCode == '@((int)Status.Success)') {
                msgsuccess(response.StatusMessage);
            }
            else {
                msgerror(response.StatusMessage);
            }
        });
    }

    function AllowSalesCalculator(element) {
        var url = $(element).data('url') + '?isAllowed=' + $(element).is(':checked') + '';
        $.get(url, function (response) {
            if (response.StatusCode == '@((int)Status.Success)') {
                msgsuccess(response.StatusMessage);
            }
            else {
                msgerror(response.StatusMessage);
            }
        });
    }

</script>

<style>
    input[type="checkbox"]:disabled:checked{
    appearance: none;
    width : 14px;
    height : 14px; 
    border-radius : 2px;
    opacity:0.2;
    cursor:pointer  
}
.userCheckbox input[type="checkbox"]:disabled:checked::after{
    font-family:"Font Awesome 5 Free";
    content: "✓";
    font-size:10px;
    color:#fff;
    opacity:1;
    margin-left :2px;
    display: flex;
    flex-direction: row-reverse;
    margin-right:3px

}
.userCheckbox input[type="checkbox"]:disabled:checked{
   background-color : #1062d1;
}

 
</style>

