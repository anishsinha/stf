@model OrderDetailsViewModel

@{
	ViewBag.Title = "Order Details";
}
<div class="row">
	<div class="col-sm-12">
		<div class="tab-container">
			<div id="tab-contents-details">
				<div class="row">
					<div class="col-sm-12">
						<div class="border-b mb10">
							<h4 class="f-light fs18 dib">@Resource.headingOrder</h4>
                            <div class="dib pull-right pt5">
                                <div class="dib mt3">
                                    @if (Model.StatusId == (int)OrderStatus.Open)
                                    {
                                        <div><label class="label label-primary">@(CommonHelperMethods.GetName<OrderStatus>(Model.StatusId))</label></div>
                                    }
                                    else if (Model.StatusId == (int)OrderStatus.Closed)
                                    {
                                        <div><label class="label label-danger">@(CommonHelperMethods.GetName<OrderStatus>(Model.StatusId))</label></div>
                                    }
                                    else if (Model.StatusId == (int)OrderStatus.Canceled)
                                    {
                                        <div><label class="label label-danger">@(CommonHelperMethods.GetName<OrderStatus>(Model.StatusId))</label></div>
                                    }
                                </div>
                                @if (!Model.IsProFormaPo && Model.FuelDetails.FuelQuantity.QuantityTypeId != (int)QuantityType.NotSpecified)
                                {
                                    <span>@Model.FuelDeliveredPercentage @Resource.lblCompleted</span>
                                }
                            </div>
						</div>
                        <div class="row">
                            <div class="col-md-3 col-xs-6 col-sm-4 mb10">
                                <label class="f-normal">@Resource.lblPoNumber</label>
                                <div><span id="lblPoNumber" class="break-word">@Model.PoNumber</span></div>
                            </div>
                            <div class="col-md-3 col-xs-6 col-sm-4 mb10">
                                <label class="f-normal">@Resource.lblWBSNumber</label>
                                <div><span id="lblWbsNumber" class="break-word">@(string.IsNullOrWhiteSpace(@Model.FuelDeliveryDetails.CustomAttributeViewModel.WBSNumber) ? Resource.lblHyphen : Model.FuelDeliveryDetails.CustomAttributeViewModel.WBSNumber)</span></div>
                            </div>
                            <div class="col-md-3 col-xs-6 col-sm-4 mb10">
                                <label class="f-normal">@Resource.lblCustomerCompany</label>
                                <div>@Model.BuyerCompanyName</div>
                            </div>
                            <div class="col-md-3 col-xs-6 col-sm-4 mb10">
                                <label class="f-normal">@Resource.lblSupplierCompany</label>
                                <div>@Model.SupplierCompanyName</div>
                            </div>
                        </div>
					</div>
				</div>
				<!-- order details ends -->
				<!-- job starts -->
				<div class="row">
					<div class="col-sm-12 mt15">
						<h4 class="f-light border-b pb10 fs18">@Resource.headingJob</h4>
						<div class="row">
							<div class="col-md-3 col-xs-6 col-sm-4 mb10">
								<label class="f-normal">@Resource.lblJob</label>
								<div>@Model.JobName</div>
							</div>
                            <div class="col-md-3 col-xs-6 col-sm-4 mb10">
                                <label class="f-normal">@Resource.lblAddress</label>
                                @if (Model.JobLocation.LocationType != (int)JobLocationTypes.Various)
                                {
                                    <div>
                                        @Model.JobLocation.Address <br> @Model.JobLocation.City, @Model.JobLocation.StateCode @Model.JobLocation.ZipCode
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        @Model.JobLocation.StateCode
                                    </div>
                                }
                                </div>
							<div class="col-md-3 col-xs-6 col-sm-4 mb10">
								<label class="f-normal">@Resource.lblJob @Resource.lblStartDate</label>
								<div>@Model.JobStartDate</div>
							</div>
							@if (Model.JobEndDate != null)
							{
								<div class="col-md-3 col-xs-6  col-sm-2 mb10">
									<label class="f-normal">@Resource.lblJob @Resource.lblEndDate</label>
									<div>
										@Model.JobEndDate.Value.ToString(Resource.constFormatDate)
									</div>
								</div>
							}
						</div>
					</div>
				</div>
				<!-- job ends -->
				<!-- fuel starts -->
				<div class="row">
					<div class="col-sm-12 mt15">
						<h4 class="f-light border-b pb10 fs18">@Resource.headingFuel</h4>
						<div class="row">
							<div class="col-md-3 col-sm-4 col-xs-12 mb10">
								<label class="f-normal">@Resource.lblFuelType</label>
								<div>@Model.FuelType</div>
							</div>
							@if (Model.TypeOfFuel != (int)ProductDisplayGroups.OtherFuelType)
							{
								<div class="col-sm-4 col-md-3 col-xs-6 mb10">
									<label class="f-normal">@Resource.lblTerminal</label>
									<div class="break-word" id="auto-lblterminal">@Model.TerminalName</div>
								</div>
								<div class="col-sm-4 col-md-2 col-xs-6 mb10">
									<label class="f-normal">@Resource.lblDistance</label>
									<div id="auto-lbldistance">
										@if (Model.Distance > 0)
										{
											@Model.Distance.ToString(ApplicationConstants.DecimalFormat2) @Resource.lblMiles.ToLower()
}
										else
										{
											@Resource.lblHyphen
}
									</div>
								</div>
							}
							else
							{
								<div class="col-md-3 col-sm-3 col-xs-6 mb10">
									<label class="f-normal">@Resource.lblProductDescription</label>
									<div class="break-word">@(!string.IsNullOrWhiteSpace(Model.ProductDescription) ? Model.ProductDescription : Resource.lblHyphen)</div>
								</div>
							}
							<div class="col-md-2 col-sm-3 col-xs-6 mb10">
								<label class="f-normal">@Resource.lblGallonsOrdered</label>
								<div class="break-word">@Model.DisplayGallonsOrdered</div>
							</div>
							<div class="col-md-2 col-sm-3 col-xs-6 mb10">
								<label class="f-normal">@Resource.lblPricePerGallon</label>
								<div class="break-word">@Model.PricePerGallon</div>
							</div>
						</div>
					</div>
				</div>
				<!-- fuel ends -->
				<!-- delivery starts -->
				<div class="row">
					<div class="col-sm-12 mt20">
						<h4 class="f-light border-b pb10 fs18">@Resource.headingDelivery</h4>
						<div class="row">
							<div class="col-md-2 col-xs-6 col-sm-2 mb10">
								<div class="form-group">
									<label class="f-normal">@Resource.lblDeliveryStartDate</label>
									@Html.TextBoxFor(m => m.FuelDeliveryDetails.StartDate, new { @class = "form-control datepicker" })
								</div>
							</div>
							@if (Model.FuelDeliveryDetails.EndDate != null)
							{
								<div class="col-md-2 col-xs-6  col-sm-2 mb10">
									<label class="f-normal">@Resource.lblDeliveryEndDate</label>
									<div>
										@Model.FuelDeliveryDetails.EndDate.Value.ToString(Resource.constFormatDate)
									</div>
								</div>
							}
							<div class="col-xs-6 col-sm-3 col-md-2 mb10">
								<label class="f-normal">@Resource.lblDeliveryWindow</label>
								<div>
									<span>@Model.FuelDeliveryDetails.StartTime</span>
									@Resource.lblSingleHyphen
									<span>@Model.FuelDeliveryDetails.EndTime</span>
								</div>
							</div>
							<div class="col-md-2 col-xs-6 col-sm-3">
								<label class="f-normal">@Resource.lblType</label>
								<div>@(Model.FuelDeliveryDetails.DeliveryTypeId == ((Int16)DeliveryType.OneTimeDelivery) ? @Resource.lblSingle : @Resource.lblMultiple)</div>
							</div>
							@if (Model.FuelDeliveryDetails.DeliveryTypeId == (int)DeliveryType.MultipleDeliveries)
							{
								<div class="col-md-2 col-xs-6 col-sm-3">
									<label class="f-normal">@Resource.lblEstimatedQuantityPerDelivery</label>
									<div>@(Model.EstimatedGallonsPerDelivery)</div>
								</div>
							}
							<div class="col-md-2 col-xs-6 col-sm-3">
								<label class="f-normal">@Resource.lblGallonsDelivered</label>
								<div>@(Model.GallonsDelivered.GetPreciseValue(2).GetCommaSeperatedValue())</div>
							</div>
						</div>
					</div>
				</div>
				<!-- delivery ends -->
				<div class="row text-right pb20 mt10">
					<div class="col-sm-12 text-right">
						<input type="button" id="btnCancel" class="btn btn-default btn-md" value="@Resource.btnLabelCancel" onclick="location.href='@Url.Action("Index", "Home", new { area = "" })'" />
						<input id="btnSaveDetails" type="button" class="btn btn-primary btn-md" value="@Resource.btnLabelSave" onclick="EditOrderStartDate()" />
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">

	function EditOrderStartDate()
	{
		var startDate = $('#FuelDeliveryDetails_StartDate').val();
		 $.ajax({
                type: "post",
				url: "@Url.Action("EditOrderStartDate", "SuperAdmin", new { area = "SuperAdmin" })",
                dataType: "html",
				data: {id:@Request.QueryString["id"], startDate: startDate },
                success: function (response) {
					showSuccessErrorMsg(response);
				}
            });
	}

</script>

