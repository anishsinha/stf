
@{
    ViewBag.Title = "Exception Logs";
}


<h4>@Resource.lblExceptionLog</h4>
<style>
    .modal-body {
        height: 300px;
        overflow: auto;
    }
</style>
<div class="row mb10">
    <div class="col-sm-12">
        <div class="well pb10 mb5">
            <div class="row">
                <div class="col-xs-12 col-sm-2 col-md-1 pt5 pr0"><i class="fa fa-filter mr5 fs16"></i><label class="f-normal fs16">@Resource.lblFilter</label></div>
                <div class="col-xs-6 col-sm-3 col-md-2 mb5">
                    <input type="text" id="exceptionFromDate" placeholder="@Resource.lblFrom" class="form-control datepicker" />
                </div>
                <div class="col-xs-6 col-sm-3 col-md-2 mb5"><input type="text" id="exceptionFromTime" placeholder="From Time" class="form-control" /></div>
                <div class="col-xs-6 col-sm-3 col-md-2 mb5"><input type="text" id="exceptionToDate" placeholder="@Resource.lblTo" class="form-control datepicker" /></div>
                <div class="col-xs-6 col-sm-3 col-md-2 mb5"><input type="text" id="exceptionToTime" placeholder="To Time" class="form-control " /></div>
                <div class="col-xs-12 col-sm-4 col-md-3">
                    <input type="button" class="btn btn-primary" value="@Resource.btnLabelApply" id="ApplyDateTime" />
                    <input type="button" class="btn ml5" value="@Resource.btnLabelClearFilter" id="ClearFilterId" />
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div id="90DaysDataWarning" class="col-md-12">
        <div class="alert alert-info fs12 mb15"><strong>@Resource.lblInfo</strong>@Resource.lbl90DaysDataWarning</div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-padding no-border">
                    <div class="table-responsive">
                        <table id="exceptionLogTable" class="table table-striped table-bordered table-hover ">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnId</th>
                                    <th>@Resource.gridColumnMachineName</th>
                                    <th>@Resource.gridColumnDateTime</th>
                                    <th>@Resource.gridColumnMessage</th>
                                    <th>@Resource.gridColumnLevel</th>
                                    <th>@Resource.gridColumnException</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog" data-keyboard="true" tabindex="-1">
    <div class="modal-dialog  modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Resource.lblExceptionDetails</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p id="exceptionDetails" style="word-wrap: break-word;"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    var userExceptions, exportColumns = { columns: [0, 1, 2, 3, 4, 5] };
    $(document).ready(function () {

        var visibleForSupplierAdmin = '@CurrentUser.IsSupplierAdmin' == 'True';
        userExceptions = $("#exceptionLogTable").DataTable({
            "ajax": {
                "url": "@Url.Action("GetExceptionGrid", "Exception", new { area= "SuperAdmin" })",
                "type": "POST",
                "datatype": "json",
                "data": function (data) {
                    data.fromDateTime = $("#exceptionFromDate").val() == '' ? '' : $("#exceptionFromDate").val() + " " + $("#exceptionFromTime").val();
                    data.toDateTime = $("#exceptionToDate").val() == '' ? '' :$("#exceptionToDate").val() + " " + $("#exceptionToTime").val();
                    data.showRecords = $("[name='exceptionLogTable_length']").val();
                },
                "dataSrc": function (json) {
                    return json.data;
                }
            },
            "columns": [
                { "data": "ID", "autoWidth": true },
                { "data": "MachineName", "autoWidth": true },
                {
                    "data": "LogDateTime", "type": 'date-dd-mmm-yyyy hh:mm:ss',
                    "render": function (d) {
                        return moment(d).format("MM/DD/YYYY hh:mm:ss A");
                    }, "autoWidth": true
                },
                { "data": "Message",
                    "render": function (message) {
                        if (message.length > 200) {
                            return message.slice(0, 200) + "...";
                        }
                        else {
                            return message;
                        }
                    },
                    "autoWidth": true
                },
                { "data": "Level", "autoWidth": true },
                {
                    "data": function (data) {
                        return '<button onclick="getException(' + data.ID + ')" type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#myModal">View Details</button>';
                    }, "autoWidth": true
                }
            ],
            "columnDefs": [
                { "name": "ID", "targets": 0, "regex": false },
                { "name": "MachineName", "targets": 1, "searchable": true },
                { "name": "LogDateTime", "targets": 2, "searchable": true },
                { "name": "Message", "targets": 3, "searchable": true },
                { "name": "Level", "targets": 4, "searchable": true },
                { "name": "Exception", "targets": 5, "searchable": false },

            ],
            "serverSide": true,
            "searchDelay": 500,
            aaSorting: [[0, 'desc']],
            "pageLength": 10,
            "lengthMenu": [[10, 25, 50, 100,99999999], [10, 25, 50, 100,"All"]],
            "responsive": true,
            "searching": { "regex": false },
            lengthChange: true,
            "order": [],
            "initComplete": function (settings, json) {
                wrapperHeight();
            },
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy' },
                { extend: 'csv', title: 'Exception_Logs' },
                { extend: 'excel', title: 'Exception_Logs' },
                { extend: 'pdf', title: 'Exception_Logs', orientation: 'landscape' },
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');
                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                }
            ],
            language: {
                sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>loading</div>",
                search: "<button class='btn btn-primary' id='btn_nodata-ddt'> <i class='fa fa-search'></i></button>"
            },
            initComplete: function (settings, json) {
                    var api = this.api();
                    var textBox = $('#exceptionLogTable_filter .input-sm');
                    textBox.unbind();
                    textBox.bind('keyup input', function (e) {
                        if (e.keyCode == 8 && !textBox.val() || e.keyCode == 46 && !textBox.val()) {
                        } else if (e.keyCode == 13 || !textBox.val()) {
                            api.search(this.value).draw();
                        }
                    });

                    $("#btn_nodata-ddt").click(function () {
                        api.search(textBox[0].value).draw();
                    });
            }   
        });
        $("[name='exceptionLogTable_length']").on("change", function () {
            userExceptions.ajax.reload();
        });
        $("#ApplyDateTime").on("click", function () {
            userExceptions.ajax.reload();
        });
        $("#ClearFilterId").on("click", function () {
            $("#exceptionFromDate").val("");
            $("#exceptionFromTime").val("");
            $("#exceptionToDate").val("");
            $("#exceptionToTime").val("");
            userExceptions.ajax.reload();
        });

        $('#exceptionFromTime').datetimepicker({
            format: 'hh:mm:ss a'
        });
        $('#exceptionToTime').datetimepicker({
            format: 'hh:mm:ss a'
        });
        $('.datepicker').datetimepicker({
            format: 'mm/dd/yyyy'
            });
    });
    function getException(Id) {
        $.ajax({
            url: "@Url.Action("GetException", "Exception", new { area = "SuperAdmin" , Id = "ID"})".replace("ID", Id),
            success: function (result) {
                if (result.length != 0)
                    $("#exceptionDetails").html(result);
                else
                    $("#exceptionDetails").html("Details not present");
            },
            error: function (err) {
                console.log("Something wrong with Exception" + err);
            }
        });
    }
</script>
