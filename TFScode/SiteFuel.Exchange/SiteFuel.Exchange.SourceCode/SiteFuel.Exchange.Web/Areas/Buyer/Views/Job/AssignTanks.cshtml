@{
	ViewBag.Title = "Assign Tanks";
}
<div class="row">
    <div class="col-12">
        <h3 class="mt0 f-light fs21 float-left">@Resource.headingAssignTanks</h3>
        @if (CurrentUser.IsBuyerAdmin || CurrentUser.IsBuyer)
        {
            <a onclick='LoadTank();' class="fs18 float-left ml20">
                <i class="fa fa-plus-circle fs18 mt5 float-left mb10"></i><span class="fs14 mt5 float-left">@Resource.btnLabelCreateNew</span>
            </a>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="well bg-white shadow-b">
            <div class="ibox mb0">
                <div class="ibox-content no-border no-padding">
                    <div class="table-responsive">
                        <table id="assigntanks-datatable" class="table table-striped table-bordered table-hover small-grid">
                            <thead>
                                <tr>
                                    <th>@Resource.gridColumnAssign<br /><input type="checkbox" id="select-assignalltank" /></th>
                                    <th>@Resource.gridColumnId</th>
                                    <th>@Resource.gridColumnName</th>
                                    <th>@Resource.gridColumnType</th>
                                    <th>@Resource.gridColumnFuelCapacity</th>
                                    <th>@Resource.gridColumnTankType</th>
                                    <th>@Resource.gridColumnDipTestMethod</th>
                                    @*<th>@Resource.gridColumnThreshold</th>*@
                                    <th>@Resource.gridColumnImage</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-12 text-right mt10 mb25 btn-wrapper">
        <div class="form-group">
            <input type="button" class="btn btn-default" value="@Resource.btnLabelBack" onclick="location.href='@Url.Action("Details", "Job", new { area = "Buyer", id= Convert.ToInt32(ViewContext.RouteData.Values["id"]) })'" />
            @*<input type="button" class="btn btn-default" value="@Resource.btnLabelBack" onclick="location.href='@Url.Action("Details", "Job", new { area = "Buyer", id = Convert.ToInt32(ViewContext.RouteData.Values["id"]) })'" />*@
            @if (CurrentUser.IsBuyerAdmin || CurrentUser.IsBuyer)
            {
                <input type="button" class="btn btn-primary" value="@Resource.btnLabelSave" id="btnSaveTank" />
            }
        </div>
    </div>
</div>
<script type="text/javascript">

		var assignTankDataTable, jobId = '@Convert.ToInt32(ViewContext.RouteData.Values["id"])';
		var exportTankColumns = { columns: [1, 2, 3, 4, 5, 6] };

		$(document).ready(function () {

			assignTankDataTable = $('#assigntanks-datatable').dataTable({
                "ajax": {
                    "url": "@Url.Action("AssignAssetsToJob", "Job", new { area ="Buyer"})",
                    "type": "GET",
                    "datatype": "json",
                    "data": function () {
                        var tankFilter = {
                            JobId: '@Convert.ToInt32(ViewContext.RouteData.Values["id"])',
                            Filter: '@AssetFilterType.All',
                            Type: '@((int)@AssetType.Tank)',
                        };
                        return tankFilter;
                    },
                    "dataSrc": "",
                },
                "columns": [
                            {
                                "data": function (data, type, row, meta) {
                                    var checked = data.CurrentJobId == 0 ? "" : data.CurrentJobId == jobId ? "checked=\"checked\"" : "";
                                    return '<input type="checkbox" class = "chk-assigntank" id="' + data.Id + '"  value = "' + data.Active + '" ' + checked + '/>';
                                }, "autoWidth": true,"bSortable":false
                            },
                            { "data": "Id", "autoWidth": true },
                            {
                                "data": "Name", "autoWidth": true
                            },
                            { "data": "Class", "autoWidth": true },
                            { "data": "FuelCapacity", "autoWidth": true },
                            { "data": "TankType", "autoWidth": true },
                            { "data": "DipTestMethod", "autoWidth": true },
                            //{ "data": "Threshold", "autoWidth": true },
                            {
                                "data": function (data, type, row, meta) {
                                    if (data.ImageId > 0) {
                                        return "<img id='image-" + data.ImageId + "' class='img-max50' data-image-url='@Url.Action("GetImage")?imageId=" + data.ImageId + "'/>";
                                    }
                                    else {
                                        return '@Resource.lblHyphen';
                                    }
                                }, "autoWidth": true
                            }
                ],
                pageLength: 10,
                responsive: true,
                fixedHeader: true,
                "order": [],
				"initComplete": function (settings, json) {
					allPages = assignTankDataTable.fnGetNodes();
                    updateAssignAllCheckboxStatus(json);
                    wrapperHeight();
				},
				"fnDrawCallback": function (settings) {
					updateAssignAllOnPageChange();
				},
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
					{ extend: 'csv', title: '@Resource.headingAssignTanks', exportOptions: exportTankColumns },
					{ extend: 'excel', title: '@Resource.headingAssignTanks', exportOptions: exportTankColumns },
					{ extend: 'pdf', title: '@Resource.headingAssignTanks', exportOptions: exportTankColumns },
                    {
						extend: 'print', exportOptions: exportTankColumns,
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    sLoadingRecords: "<div class='spinner-small'></div><div class='fs14'>@Resource.lblLoading</div>"
                }

            });

			assignTankDataTable.on("init.dt", function () { showAjaxImages(); });

            $("#btnSaveTank").click(function () {
                var data = [], url = '@Url.Action("AssignAssets", "Job", new { area="Buyer"})';
				var jobId = '@Convert.ToInt32(ViewContext.RouteData.Values["id"])';
				$("input:checkbox", assignTankDataTable.fnGetNodes()).each(function () {
                    if ($(this).is(':checked')) {
                        data.push($(this).attr('id'));
                    }
                })

                var model = {
					assets: data,
					jobId: jobId
                };

                $.post(url, model, function (response) {
					if (response == 0) {
						if ('@Request.QueryString["isThisFromFuelRequest"]' == 'True') {
							window.location.href = '@Url.Action("Create", "FuelRequest", new { area = "Buyer", jobId = Convert.ToInt32(ViewContext.RouteData.Values["id"]) })';
						}
						else {
							window.location.href = '@Url.Action("Details", "Job", new { area = "Buyer", id= Convert.ToInt32(ViewContext.RouteData.Values["id"]) })';
						}
                    }
                }, 'json');
			})
		});

		function updateAssignAllOnPageChange() {
			var allChecked = true;

			$('#assigntanks-datatable tbody tr').each(function () {
				$(this).find('.chk-assigntank').each(function () {
					if (!$(this).is(':checked')) {
						allChecked = false;
					}
				});
			});
			$('#select-assignalltank').prop('checked', allChecked);
		}

    function updateAssignAllCheckboxStatus(json) {

        $('#select-assignalltank').click(function () {
            var status = $(this).prop('checked');
            $(".chk-assigntank").each(function () {
                $(this).prop("checked", status);
            });
        });

        $(".chk-assigntank", allPages).change(function () {
            updateAssignAllOnPageChange();
        });
    }

    function LoadTank() {
        var url = '@Url.Action("CreateAsset", "Job", new { area = "Buyer", jobId = Convert.ToInt32(ViewContext.RouteData.Values["id"]), isThisFromFuelRequest = Convert.ToBoolean(Request.QueryString["isThisFromFuelRequest"]) })';
        $.get(url, function (response) {
            if (response != null || response != "") {
                $("#slider-heading").text('Create New Asset');
                $("#slider-content").html(response);
                parseForm();
                slidePanel("#sliderpanel");
                alert(1);
                $(".lblforcastingNote").text('');
                $(".lblforcastingNote").hide();
            }
        }).always(
            function () {
                $("#slider-loader").hide();
            }
        );
    }
</script>
