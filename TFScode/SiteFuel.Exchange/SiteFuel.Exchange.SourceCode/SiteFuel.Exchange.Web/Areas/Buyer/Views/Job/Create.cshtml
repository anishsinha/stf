@model JobStepsViewModel
@using System.Threading
@{
    ViewBag.Title = Model.Job.Id > 0 ? "Job Details" : "Create New Job";
    Thread.CurrentThread.CurrentUICulture = new System.Globalization.CultureInfo(Model.Culture);
    string currentUrl = Request.Url.AbsoluteUri.ToString();

}
<div class="col-sm-11 mb10 text-right">
    <div class="z-index5 right0" id="jobAssetsBulkUpload">
        @if (Model.Job.Id.Equals(0) &&(CurrentUser.IsBuyerAdmin || CurrentUser.IsBuyer))
        {
            @Html.AntiForgeryToken()
            @Html.Partial("_PartialJobsBulkUpload")
        }
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    if (Model.Job.Id > 0)
    {
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-10 mb15 d-lg-none ">
                        <div class="dropdown">
                            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                @Resource.lblMoreDetails
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                <li>
                                    <a id="tab-fr-details" href="javascript:void(0)" onclick="showsection('fr-details'), activelink(this)">
                                        @Resource.stepLabelJobDetails
                                    </a>
                                </li>

                                @if (!Model.Job.IsMarine)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-asset" href="javascript:void(0)" onclick="GetPartialViewData('fr-asset'), activelink(this)">
                                            @Resource.lblAssetsTanks
                                        </a>
                                    </li>
                                }
                                @if (!Model.Job.IsMarine)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-quoterequest" href="javascript:void(0)" onclick="GetPartialViewData('fr-quoterequest'), activelink(this)">
                                            @Resource.lblQuoteRequests
                                        </a>
                                    </li>
                                }
                                <li role="separator" class="divider"></li>
                                <li>
                                    <a id="tab-fr-fuelrequest" href="javascript:void(0)" onclick="GetPartialViewData('fr-fuelrequest'), activelink(this)">
                                        @Resource.lblFuelRequests
                                    </a>
                                </li>
                                <li role="separator" class="divider"></li>
                                <li>
                                    <a id="tab-fr-order" href="javascript:void(0)" onclick="GetPartialViewData('fr-order'), activelink(this)">
                                        @Resource.lblOrders
                                    </a>
                                </li>
                                <li role="separator" class="divider"></li>
                                <li>
                                    <a id="tab-fr-invoice" href="javascript:void(0)" onclick="GetPartialViewData('fr-invoice'), activelink(this)">
                                        @Resource.lblInvoices
                                    </a>
                                </li>
                                <li role="separator" class="divider"></li>
                                <li>
                                    <a id="tab-fr-dropticket" href="javascript:void(0)" onclick="GetPartialViewData('fr-dropticket'), activelink(this)">
                                        @Resource.lblDropTickets
                                    </a>
                                </li>
                                @if (!Model.Job.IsMarine)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-activity" href="javascript:void(0)" onclick="GetPartialViewData('fr-activity'), activelink(this)">
                                            @Resource.lblActivity
                                        </a>
                                    </li>
                                }
                                @if (Model.Job.IsResaleEnabled && !Model.Job.IsMarine)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-resale" href="javascript:void(0)" onclick="GetPartialViewData('fr-resale'), activelink(this)">
                                            @Resource.lblResale
                                        </a>
                                    </li>
                                }
                                @if (Model.Job.IsWaitingForApprovalExists)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-approval" href="javascript:void(0)" onclick="GetPartialViewData('fr-approval'), activelink(this)">
                                            @Resource.lblApprovals
                                        </a>
                                    </li>
                                }
                                @if (CurrentUser.IsBuyerAdmin && Model.IsAuditApplicable)
                                {
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a id="tab-fr-audit" href="javascript:void(0)" onclick="GetPartialViewData('fr-audit'), activelink(this)">
                                            @Resource.lblAudit
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col-sm-10 tab-headers d-none d-lg-block d-md-block d-sm-block pr0">
                        <a id="tab-fr-details" href="javascript:void(0)" onclick="showsection('fr-details'), activelink(this);inputBoxShowHide('floating-buttons',null)" class="active mr15">
                            <div class="step-inprogress fs15">
                                <span class="f-light step-text float-left">@Resource.stepLabelJobDetails</span>
                            </div>
                        </a>
                        @if (!Model.Job.IsMarine)
                        {
                            <a id="tab-fr-asset" href="javascript:void(0)" onclick="GetPartialViewData('fr-asset'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left">@Resource.lblAssetsTanks</span>
                                </div>
                            </a>
                        }
                        @if (!CurrentUser.IsOnsitePerson && !Model.Job.IsMarine)
                        {
                            <a id="tab-fr-quoterequest" href="javascript:void(0)" onclick="GetPartialViewData('fr-quoterequest'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr20">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left">@Resource.lblQuoteRequests</span>
                                </div>
                            </a>
                        }
                        @if (Model.Job.IsMarine)
                        {
                            <a id="tab-fr-fuelrequest" href="javascript:void(0)" onclick="GetPartialViewData('fr-fuelrequest'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr20">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left"> @Resource.lblMarineFuelNomination </span>
                                </div>
                            </a>
                        }
                        else
                        {
                            <a id="tab-fr-fuelrequest" href="javascript:void(0)" onclick="GetPartialViewData('fr-fuelrequest'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr20">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left">@Resource.lblFuelRequests </span>
                                </div>
                            </a>
                        }

                        <a id="tab-fr-order" href="javascript:void(0)" onclick="GetPartialViewData('fr-order'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                            <div class="step-inprogress fs15">
                                <span class="f-light step-text float-left">@Resource.lblOrders</span>
                            </div>
                        </a>
                        <a id="tab-fr-invoice" href="javascript:void(0)" onclick="GetPartialViewData('fr-invoice'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                            <div class="step-inprogress fs15">
                                <span class="f-light step-text float-left">@Resource.lblInvoices</span>
                            </div>
                        </a>
                        <a id="tab-fr-dropticket" href="javascript:void(0)" onclick="GetPartialViewData('fr-dropticket'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                            <div class="step-inprogress fs15">
                                <span class="f-light step-text float-left">@Resource.lblDropTickets</span>
                            </div>
                        </a>
                        @if (!Model.Job.IsMarine)
                        {
                            <a id="tab-fr-activity" href="javascript:void(0)" onclick="GetPartialViewData('fr-activity'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left">@Resource.lblActivity</span>
                                </div>
                            </a>
                        }
                        @if (Model.Job.IsResaleEnabled && !Model.Job.IsMarine)
                        {
                            <a id="tab-fr-resale" href="javascript:void(0)" onclick="GetPartialViewData('fr-resale'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                                <div class="step-inprogress fs15">
                                    <span class="f-light step-text float-left">@Resource.lblResale</span>
                                </div>
                            </a>
                        }
                        @if (Model.Job.IsWaitingForApprovalExists)
                        {
                            <a id="tab-fr-approval" href="javascript:void(0)" onclick="GetPartialViewData('fr-approval'), activelink(this);inputBoxShowHide(null,'floating-buttons')" class="mr15">
                                <div class="step-inprogress fs15 actions">
                                    <span class="f-light step-text float-left">@Resource.lblApprovals</span>
                                </div>
                            </a>
                        }
                        @if (CurrentUser.IsBuyerAdmin && Model.IsAuditApplicable)
                        {
                            <a id="tab-fr-audit" href="javascript:void(0)" onclick="GetPartialViewData('fr-audit'), activelink(this);inputBoxShowHide(null,'floating-buttons')">
                                <div class="step-inprogress fs15 actions">
                                    <span class="f-light step-text float-left">@Resource.lblAudit</span>
                                </div>
                            </a>
                        }

                        <div class="spinner-job-details dib float-left pr mtm3"><span class="spinner-small ml10 mt5 pa"></span></div>
                    </div>

                    <div class="col-2 text-right float-right">
                        @if (!(Model.Job.StatusId == (int)JobStatus.Draft && !CurrentUser.IsBuyerAdmin))
                        {
                            if (CurrentUser.IsBuyerAdmin || CurrentUser.IsBuyer)
                            {
                                <div class="btn-group">
                                    <button id="auto-btnjobaction" data-toggle="dropdown" class="btn btn-default btn-sm dropdown-toggle" aria-expanded="false">@Resource.btnLabelAction <span class="caret"></span></button>
                                    <ul class="dropdown-menu dropdown-menu-right ">
                                        @if (Model.Job.Id > 0 && (CurrentUser.IsBuyerAdmin || CurrentUser.IsBuyer))
                                        {
                                            if (Model.Job.StatusId == (int)JobStatus.Open)
                                            {
                                                if (Model.Job.AllowBuyFuel == true)
                                                {
                                                    var url = Model.Job.IsMarine ? Url.Action("CreateNomination", "FuelRequest", new { area = "Buyer", jobId = Model.Job.Id })
                                                                                 : Url.Action("Create", "FuelRequest", new { area = "Buyer", jobId = Model.Job.Id });

                                                    <li class="dropdown-item"><a id="auto-buyfuel" href="javascript:void(0)" onclick="location.href='@url'">@Resource.btnLabelBuyFuel</a></li>
                                                    <li role="separator" class="divider"></li>
                                                }
                                                <li class="dropdown-item">
                                                    <a id="auto-closejob" href="@Url.Action("Close", "Job", new { area = "Buyer", id = Model.Job.Id })" data-toggle="confirmation"
                                                       data-placement="bottom"
                                                       data-popout="true">@Resource.btnLabelClose</a>
                                                </li>
                                                <li role="separator" class="divider"></li>
                                            }
                                            else if (Model.Job.StatusId == (int)JobStatus.Closed)
                                            {
                                                <li class="dropdown-item"><a href="javascript:void(0)" id="auto-btnreopenjob" onclick="location.href='@Url.Action("ReOpen", "Job", new { area = "Buyer", jobId = Model.Job.Id })'">@Resource.btnLabelReopen</a></li>
                                                <li role="separator" class="divider"></li>
                                            }
                                            else if (CurrentUser.IsBuyerAdmin)
                                            {
                                                <li class="dropdown-item">
                                                    <a id="auto-btndeletejob" href="@Url.Action("Delete", "Job", new { area = "Buyer", id = Model.Job.Id })" data-toggle="confirmation"
                                                       data-placement="bottom"
                                                       data-popout="true">@Resource.btnLabelDelete</a>
                                                </li>
                                                <li role="separator" class="divider"></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="panel-section hide-element bg-white radius-5 animated slideInLeft pa">
                    <a href="#." class="pa fs25 right0 top0 color-darkgrey mr15 mt5 z-index5" onclick="closePanel()">×</a>
                    <div class="pt15 pb25 ph20">
                        @Html.Partial("_PartialNewsfeeds")
                    </div>
                </div>
                <div class="tab-container mt10 readOnlyModeFR">
                    <div class="mb10 panel-icon job-panel-icon">
                        <a href="javascript:void(0)" class="radius-5 dib text-center" onclick="loadSidePanel();">
                            @Resource.headingNewsfeed
                        </a>
                    </div>
                    <div id="fr-details" data-parent-tab="tab-fr-details" class="subTabs">
                        <div class="row">
                            @if (CurrentUser.IsBuyer || CurrentUser.IsBuyerAdmin)
                            {

                                Html.RenderPartial("_PartialJobDetails", Model);
                            }
                            else
                            {
                                Html.RenderPartial("_PartialJobDetailsViewOnly", Model);
                            }
                        </div>
                    </div>
                    <div id="fr-asset" data-parent-tab="tab-fr-asset" class="hide-element subTabs">
                    </div>
                    <div id="fr-quoterequest" data-parent-tab="tab-fr-quoterequest" class="hide-element subTabs">

                    </div>
                    <div id="fr-fuelrequest" data-parent-tab="tab-fr-fuelrequest" class="hide-element subTabs">
                    </div>
                    <div id="fr-order" data-parent-tab="tab-fr-order" class="hide-element subTabs">
                    </div>
                    <div id="fr-invoice" data-parent-tab="tab-fr-invoice" class="hide-element subTabs">
                    </div>
                    <div id="fr-dropticket" data-parent-tab="tab-fr-dropticket" class="hide-element subTabs">
                    </div>
                    <div id="fr-activity" data-parent-tab="tab-fr-activity" class="hide-element subTabs">
                    </div>
                    <div id="fr-resale" data-parent-tab="tab-fr-resale" class="hide-element subTabs">
                    </div>
                    <div id="fr-approval" data-parent-tab="tab-fr-approval" class="hide-element subTabs">
                    </div>
                    <div id="fr-audit" data-parent-tab="tab-fr-approval" class="hide-element subTabs">
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        Html.RenderPartial("_PartialJobDetails", Model);
    }

    <!-- Modal -->
    <div class="modal fade float-left" id="jobSpecificBillToModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body" id="jobSpecificBillToData">
                    @Html.PartialFor("_PartialJobSpecificBillingAddress", m => m.Job.BillToInfo)
                </div>
            </div>
        </div>
    </div>
}

@using (Html.BeginScripts())
{
    <script src="https://maps.googleapis.com/maps/api/js?key=@(SiteFuel.Exchange.Core.Utilities.AppSettings.GoogleMapApiKey)" type="text/javascript"></script>
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/Content/js/address-goecoder")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/Scripts/js/news-feed")

<script>
        SetPageCulture('@Model.Culture');
		var mapsApiKey = '@SiteFuel.Exchange.Core.Utilities.AppSettings.GoogleApiKey';
        var newsfeedUrl = "@Url.Action("GetNewsfeed", "Job", new { area = "Buyer" })";
        var allStates =  @Html.Raw(Json.Encode(CommonHelperMethods.GetStatesOfAllCountries()));

        var isJobEdit = true;
        var currentEntityId = @Model.Job.Id; // for newsfeed
        var stateId = @Model.Job.State.Id; // for state autofill
        var billTostateId = @Model.Job.BillToInfo.State.Id; // for bill to state autofill
        var billTocityname = '@Model.Job.BillToInfo.City'; // for bill to state autofill
        var billToCountryId = @Model.Job.BillToInfo.Country.Id; // for bill to state autofill
        var SelectedDays = "";

        $(document).ready(function () {
            $(".lblforcastingNote").text('Note : The changes made at location level will override all tank level changes.');
            if ('@((int)@Model.Job.LocationType)' == '@((int)JobLocationTypes.Various)') {
                $(".jobLocationTypes-location").addClass("pntr-none subSectionOpacity").attr("disabled");
                $(".jobLocationTypes-geoLocation").addClass("pntr-none subSectionOpacity").attr("disabled");
                $('#Job_IsVarious').trigger('click');
                $('#Job_IsVarious').prop('checked', true);
            } else {
                showHideControls('#Job_IsVarious', 'wrapper-location', 'wrapper-various');
            }

            var ismarine = $('#@Html.IdFor(m => m.Job.IsMarine)').val()
            if ($('#@Html.IdFor(m => m.Job.Id)').val() > 0)
                $(".mfn-uom-section").addClass("pntr-none subSectionOpacity");
            if (ismarine == 'True') {
                $(".uom-section").addClass("hide-element");
                $(".mfn-uom-section").removeClass("hide-element");
            }
            else {
                $(".uom-section").removeClass("hide-element");
                $(".mfn-uom-section").addClass("hide-element");
            }

            $(document).on('StateChanged', function (e, stateCode) {
                selected = allStates.find(function (x) { return x.StateCode == stateCode });
                if (selected) {
                    $(e.target).find("option").filter(function (index) { return $(this).html() == selected.StateName; }).prop("selected", true);
                }
            });

            var url = window.location.href;

            if (url.indexOf('/Create') != -1 || url.indexOf('/create') != -1) {
                $("#AddAnotherClick").trigger("click");
                $("#AddAnother").hide();
            }


            $('#AddAnother').click(function () {
                SelectedDays = $('#JobSiteAvailability .DeliveryDays-ddl').length;
                if (SelectedDays < 6) {
                    $("#AddAnother").show();
                } else {
                    $("#AddAnother").hide();
                }
            });

            ShowTrailerType('@Html.IdFor(m => m.Job.TrailerType)');
            checkBoxChange(".enableAssetTracking input:checkbox", "enableStatusForAllAssets")
            var jobEndDate = $(".job-end-date");
            if (jobEndDate.length > 0) {
                jobEndDate.data("DateTimePicker").useCurrent(false);
                jobEndDate.data("DateTimePicker").minDate(moment());
            }

            if (@Model.Job.Id > 0) {
                $('#ddl-currency-filter-div').find('.currency').attr('readonly', true);
            }
            else {
                $('#ddl-currency-filter-div').find('.currency').removeAttr('readonly');
            }

            if ('@(Model.Job.StatusId == (int)JobStatus.Closed || (!CurrentUser.IsBuyerAdmin && !CurrentUser.IsBuyer))' == 'True') {
                $("#job-subcontractors a.fa-trash-alt,#job-subcontractors a.add-partial-block,#job-contact-persons a.add-partial-block").hide();
            }
            $('#@Html.IdFor(m => m.JobBudget.IsTaxExempted)').on('change', function () {
                if ('@Model.Job.Id' > 0 && '@Model.Job.StatusId' != '@((int)JobStatus.Draft)') {
                    var isTaxexempted = '@(Model.JobBudget.IsTaxExempted)' == 'True' ? true : false;
                    if (isTaxexempted == $('#@Html.IdFor(m => m.JobBudget.IsTaxExempted)').is(':checked')) {
                        $("#valTaxExempted").addClass('hide-element').removeClass('show-element');
                    }
                    else {
                        $("#valTaxExempted").addClass('show-element').removeClass('hide-element');
                    }
                }
            });

            $('#@Html.IdFor(m => m.Job.IsAssetTracked)').on('change', function () {
                if ('@Model.Job.Id' > 0 && '@Model.Job.StatusId' != '@((int)JobStatus.Draft)') {
                    if ('@Model.Job.IsAssetTracked' == 'True' && $('#@Html.IdFor(m => m.Job.IsAssetTracked)').is(':checked') == false) {
                        $("#valAssetTracking").addClass('show-element').removeClass('hide-element');
                    }
                    else {
                        $("#valAssetTracking").addClass('hide-element').removeClass('show-element');
                    }
                }
            });

            //FORCASTING FORM
            $('#complete-forcasting-form').show();
            $("#idAccountLevelForcastingEnabled").prop("checked", false);
            $("#forcastingForm").hide();
            parseForm();
            $("#lblforcastingNote").text('Note : The changes made at location level will override all tank level changes.');

            $("#Submit").click(function () {
                var isValid = validateLocationAddress();
                if (isValid) {
                    fixedButtons(this);
                    var url = "@Url.Action("Save", "Job", new { area = "Buyer" })";
                    $("form").attr("action", url);
                }
            });

            $("#Draft").click(function () {
                var isValid = validateLocationAddress();
                if (isValid) {
                    var url = "@Url.Action("Draft", "Job", new { area = "Buyer" })";
                    $("form").attr("action", url);
                }
            });

            setSelectOptions($('#@Html.IdFor(m => m.Job.AssignedTo)'));

            $('#@Html.IdFor(m => m.Job.AssignedTo)').change(function () {
                setSelectOptions(this);
            });

            $('#@Html.IdFor(m => m.Job.OnsiteContacts)').change(function () {
                setSelectOptionsForAssignedTo(this);
            });

            $('#@Html.IdFor(m => m.Job.PoContactId)').change(function () {
                setSelectOptionsForAssignedTo(this);
            });

            $("#@Html.IdFor(m => m.Job.AssignedTo)").on("select2:unselecting", function (e) {
                var unselectedVal = e.params.args.data.id;
                $('#@Html.IdFor(m => m.Job.OnsiteContacts)').find('option:selected').each(function () {
                    if ($(this).val() == unselectedVal) {
                        validationMessageFor("@Html.NameFor(m => m.Job.AssignedTo)", '@ResourceMessages.GetMessage(Resource.valMessageUnselectOnsiteContact)');
                        e.preventDefault();
                    }
                });
                if ($('#@Html.IdFor(m => m.Job.PoContactId)').find('option:selected').val() == unselectedVal) {
                    validationMessageFor("@Html.NameFor(m => m.Job.AssignedTo)", '@ResourceMessages.GetMessage(Resource.valMessageUnselectPoContact)');
                    e.preventDefault();
                }
            });

            //modal for bill to
            $('#jobSpecificBillToButton').click(function () {
                $("#jobSpecificBillToData").show();
            });

            // For edit mode
            dynamicValidation();
            //enable or disable required asset picture checkbox
            requireAssetPic(true);

            $(".chkGeoCode").click(function () {
                if ($(this).is(":checked")) {
                    $(".address-container .field-validation-error").addClass("hide-element");
                }
                else if (!$(this).is(":checked")) {
                    $(".address-container .field-validation-error,.address-container .field-validation-valid").removeClass("hide-element");
                }
            });

            onJobSpecificBillToSubmitt(false);
            $(".clsDivSiteId span.required").css("display", "none");

            $('[name="@Html.NameFor(m=>m.Job.InventoryDataCaptureType)"]').on("change", function () {
                if ($('#@Html.IdFor(m => m.Job.InventoryDataCaptureType):checked').val() == '@InventoryDataCaptureType.CallIn') {
                    $("#isautodrcreation").hide();
                    $('#complete-forcasting-form').hide();
                    $("#isautodrcreation").attr('readonly', 'readonly');
                    $('#complete-forcasting-form').attr('readonly', 'readonly');
                }
                else {
                    $("#isautodrcreation").show();
                    $('#complete-forcasting-form').show();
                    $("#isautodrcreation").removeAttr('readonly');
                    $('#complete-forcasting-form').removeAttr('readonly');
                }
            });
            $('#@Html.IdFor(m => m.Job.InventoryDataCaptureType)').trigger('change');

            $("#uploadJobsButton").click(function () {
                var url = '@Url.Action("BulkUploadJobs", "Job", new { area= "Buyer"})';
                var jobViewUrl = '@Url.Action("View", "Job", new { area = "Buyer"})';
                var fileUpload = document.getElementById("csvJobsFile");

                if (fileUpload.value != null) {
                    var files = $("#csvJobsFile").get(0).files;

                    // Add the uploaded file content to the form data collection
                    var uploadFile = new FormData();
                    uploadFile.append('csvFile', files[0]);

                    if (files.length > 0) {
                        $.ajax({
                            url: url,
                            contentType: false,
                            processData: false,
                            data: uploadFile,
                            type: 'POST',
                            success: function (response) {
                                if (response != undefined && response != null) {
                                    if (response.StatusCode == 1) {
                                        msgerror(response.StatusMessage);
                                    }
                                    else {
                                        msgsuccess(response.StatusMessage);
                                        window.location.href = jobViewUrl
                                        setTimeout("window.location.reload()", 3000);

                                    }
                                }
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                console.log(jqXHR, textStatus, errorThrown);
                            }
                        });
                    }
                }
            });

        });

        function setSelectOptionsForAssignedTo(current) {
            var selectedValues = $("#@Html.IdFor(m => m.Job.AssignedTo)").val();
            $(current).find('option:selected').each(function () {
                $("#@Html.IdFor(m => m.Job.AssignedTo) option[value='" + $(this).val() + "']").attr('selected', 'selected');
                selectedValues.push($(this).val());
            });
            $("#@Html.IdFor(m => m.Job.AssignedTo)").val(null);
            $("#@Html.IdFor(m => m.Job.AssignedTo)").val($.unique(selectedValues));
            $("#@Html.IdFor(m => m.Job.AssignedTo)").trigger("change");
        }

        function setSelectOptions(current) {
            var options = $(current).find('option'), selected = $(current).find('option:selected');
            options.each(function () { $('#@Html.IdFor(m => m.Job.ApprovalUser) option[value="' + $(this).val() + '"]').remove(); });
            selected.each(function () { $('#@Html.IdFor(m => m.Job.ApprovalUser)').append('<option value="' + $(this).val() + '">' + $(this).text() + '</option>'); });
            $('#@Html.IdFor(m => m.Job.ApprovalUser) option[value="@Model.Job.ApprovalUser"]').attr('selected', 'selected');
        }

        function onJobSpecificBillToSubmitt(isSubmitClicked) {
            //set popup values to Model
            var address = $("#@Html.IdFor(m => m.Job.BillToInfo.Address)").val();
            if (!isSubmitClicked && (address == undefined || address == '')) {
                $("#@Html.IdFor(m => m.Job.BillToInfo.State.Id)").val(0);
                $("#@Html.IdFor(m => m.Job.BillToInfo.Country.Id)").val(0);
                $("#@Html.IdFor(m => m.Job.IsJobSpecificBillToEnabled)").val(false);
                $("#jobSpecificBillName").html('');
                $("#jobSpecificBillAddress").html('');
                $("#jobSpecificBillInfoWell").hide();
                $("#jobSpecificBillToButton").show();
            }
            else {
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.Name)").val() == null || $("#@Html.IdFor(m => m.Job.BillToInfo.Name)").val() == "") {
                    validationMessageFor("@Html.NameFor(m => m.Job.BillToInfo.Name)", '@ResourceMessages.GetMessage(Resource.valMsgNameRequired)');
                    $("#JobSpecificBillToSubmit").removeAttr('data-dismiss');
                    return;
                }

                if ($("#@Html.IdFor(m => m.Job.BillToInfo.Address)").val() == null || $("#@Html.IdFor(m => m.Job.BillToInfo.Address)").val() == "") {
                    validationMessageFor("@Html.NameFor(m => m.Job.BillToInfo.Address)", '@ResourceMessages.GetMessage(Resource.valMsgAddressRequired)');
                    $("#JobSpecificBillToSubmit").removeAttr('data-dismiss');
                    return;
                }

                $("#@Html.IdFor(m => m.Job.IsJobSpecificBillToEnabled)").val(true);
                if (billTostateId > 0 && !isSubmitClicked) {
                    $("#@Html.IdFor(m => m.Job.BillToInfo.State.Id)").val(billTostateId);
                    $("#@Html.IdFor(m => m.Job.BillToInfo.City)").val(billTocityname);
                    $("#@Html.IdFor(m => m.Job.BillToInfo.Country.Id)").val(billToCountryId);
                }

                var billingAdd = $("#jobSpecificBillAddress");
                billingAdd.html('');
                $("#jobSpecificBillName").html($("#@Html.IdFor(m => m.Job.BillToInfo.Name)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.Address)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.Address)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.AddressLine2)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.AddressLine2)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.AddressLine3)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.AddressLine3)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.City)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.City)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.State.Name)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.State.Name)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.ZipCode)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.ZipCode)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.County)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.County)").val());
                if ($("#@Html.IdFor(m => m.Job.BillToInfo.Country.Name)").val())
                    billingAdd.append(", " + $("#@Html.IdFor(m => m.Job.BillToInfo.Country.Name)").val());

                var addr = billingAdd.html().slice(2);
                billingAdd.html(addr);

                $("#jobSpecificBillInfoWell").show();
                $("#jobSpecificBillToButton").hide();

                var attr = $("#JobSpecificBillToSubmit").attr('data-dismiss');
                if (typeof attr === typeof undefined && attr != 'modal') {
                    $("#JobSpecificBillToSubmit").attr('data-dismiss', 'modal');
                }

                //if (isSubmitClicked) {
                //    $("#Submit").trigger("click");
                //}
            }
        }

        function dynamicValidation() {
            $("#JobContactPersons .remote-email").each(function () {
                $(this).rules("add", {
					UniqueEmail: true,
                    messages: {
						UniqueEmail: '@ResourceMessages.GetMessage(Resource.valMessageAlreadyExist, new object[] { Resource.lblEmail })'
					}
				});
			});
		}

		function showMessage(element)
		{
			if ($.inArray('@((int)UserRoles.Admin)', $(element).val()) != -1 && $(element).val().length > 1) {
				$(element).closest('div').next().addClass('show-element').removeClass('hide-element');
			}
		     else {
				$(element).closest('div').next().addClass('hide-element').removeClass('show-element');
			}
		}

        $.validator.addMethod('UniqueEmail', function (value, element, param) {
			var emails = $('#JobContactPersons .remote-email');
			var currentEmail = $(element).val();
			for (var i = 0; i < emails.length; i++) {
				if ($(element).attr('id') != $(emails[i]).attr('id')) {
				var existingEmail = $(emails[i]).val();
				if (currentEmail == existingEmail) {
					return false;
				}
			}
		}
            return true;
        });

        function setStateValue(element) {
            var selectedState = $(element).val();
            var states = $('[name="@Html.NameFor(m=>m.Job.State.Id)"]');
            $(states).first().val(selectedState);
            $(states).last().val(selectedState);
            if ($('input:checkbox[name="@Html.NameFor(m => m.Job.IsVarious)"]').is(":checked") == true) {
                var state = $(states).find("option:selected").first().text();
                var country = $('[name="@Html.NameFor(m=>m.Job.Country.Id)"]').find("option:selected").text();
                GetLatLong(state, country);
            }
        }

        function isContactPersonValid(element) {
			var remoteUrl = {
						url: '@Url.Action("IsValidContactPerson", "Validation", new { area = "" })',
		                data:
						{
							id: $(element).closest(".row").find(".remote-id").val(),
		                    phone: $(element).closest(".row").find(".remote-phone").val(),
		                    email: $(element).val()
						}
				}
            return remoteUrl
        }

        $(document).ajaxComplete(function (event, request, settings) {
            dynamicValidation();
            $(".spinner-job-details").hide()
		});

        function GetPartialViewData(key) {
			var url = '';
			switch (key)
			{
				case 'fr-asset': url = '@Url.Action("AssetDetails", "Asset", new { area = "Buyer", Id = Model.Job.Id, isJobDetails = true })'; break;
                case 'fr-quoterequest': url = '@Url.Action("QuoteRequestsByJob", "Quote", new { area = "Buyer", jobId = Model.Job.Id })'; break;
				case 'fr-fuelrequest': url = '@Url.Action("FuelRequestsByJob", "FuelRequest", new { area = "Buyer", jobId = Model.Job.Id })'; break;
                case 'fr-order': url = ('@Url.Action("OrdersDetails", "Order", new { area = "Buyer", jobId = Model.Job.Id, country = Model.Job.Country.Id })').replace('&amp;', '&'); key = "fr-invoice"; break;
				case 'fr-invoice': url = '@Url.Action("InvoiceDetails", "Invoice", new { area = "Buyer", jobId = Model.Job.Id })'; break;
				case 'fr-dropticket': url = '@Url.Action("DropTicketDetails", "Invoice", new { area = "Buyer", jobId = Model.Job.Id })'; break;
				case 'fr-activity': url = '@Url.Action("ActivityReport", "Job", new { area = "Buyer", jobId = Model.Job.Id })'; break;
				case 'fr-resale': url = '@Url.Action("JobResale", "Job", new { area = "Buyer", Id = Model.Job.Id })'; break;
				case 'fr-approval': url = ('@Url.Action("GetApprovals", "Invoice", new { area = "Buyer", jobId = Model.Job.Id, filter = InvoiceFilterType.JobWaitingForApproval })').replace('&amp;','&'); break;
                case 'fr-audit': url = '@Url.Action("AuditReport", "Job", new { area = "Buyer", jobId = Model.Job.Id })'; break;
            }
		    $(".tab-container > div").hide();
            $(".tab-container #" + key).show();
			$('#' + key).load(url);
		}
        $(function () {
            $('.enableAssetTracking input').click(requireAssetPic);
        })
        function requireAssetPic(isOnDocumentReady) {
			if ($("#@Html.IdFor(m=>m.Job.IsAssetTracked)").is(':checked')) {
				if (isOnDocumentReady == true && '@Model.JobBudget.IsDropPictureRequired' == 'True')
				{
					$(".requireAssetPic input").prop("checked", true);
				}
                $(".requireAssetPic").removeClass("defaultDisabled subSectionOpacity");
                $(".requireAssetPic label").removeClass("pntr-none");
			}
            else {
                $(".requireAssetPic").addClass("defaultDisabled subSectionOpacity");
                $(".requireAssetPic label").addClass("pntr-none");
                $(".requireAssetPic input").prop("checked",false);
			}
        }

        $('#Job_IsVarious').click(function () {
        if (!this.checked) {
            showHideControls(this, 'wrapper-location', 'wrapper-various');

        } else {
            showHideControls(this, 'wrapper-various', 'wrapper-location');
        }

        });

         function SetMarineUom(value) {
             if (value == true) {
            $(".uom-section").addClass("hide-element");
            $(".mfn-uom-section").removeClass("hide-element");
            if ($("#Job_Country_Currency").val()=='@((int)Currency.USD)')
                $('#MFNQuantityUoM').children('option[value="@((int)UoM.Litres)"]').hide();
            else
                $('#MFNQuantityUoM').children('option[value="@((int)UoM.Litres)"]').show();
        }
        else {
            $(".uom-section").removeClass("hide-element");
                 $(".mfn-uom-section").addClass("hide-element");
                 if ($("#Job_Country_Currency").val()=='@((int)Currency.USD)')
                $('#MFNQuantityUoM').children('option[value="@((int)UoM.Litres)"]').hide();
        }

    }

    function validateLocationAddress() {
        var isValid = true;
        var isVariousLocation = $('[name="@Html.NameFor(m => m.Job.IsVarious)"]').prop('checked');
        var countryId = parseInt($('#@Html.IdFor(m => m.Job.Country.Id)').val());
        var isGeocodeUsed = $('[name="@Html.NameFor(m => m.Job.IsGeocodeUsed)"]').prop('checked');
        var latitude = $.trim($("#@Html.IdFor(m => m.Job.Latitude)").val());
        var longitude = $.trim($("#@Html.IdFor(m => m.Job.Longitude)").val());
        var address = $.trim($("#@Html.IdFor(m => m.Job.Address)").val());
        var stateId = parseInt($("#@Html.IdFor(m => m.Job.State.Id)").val());
        $('.address-validation-error').addClass('hide-element');

        if (isVariousLocation || countryId == '@((int)Country.CAR)') {
            if (countryId == '@((int)Country.CAR)') {
                if (isGeocodeUsed) {
                    if (latitude == '') {
                        $('#spnErrorLatitude').html('@(string.Format(Resource.valMessageRequired, "Latitude"))');
                        $('#spnErrorLatitude').removeClass('hide-element');
                        isValid = false;
                    }
                    if (longitude == '') {
                        $('#spnErrorLongitude').html('@(string.Format(Resource.valMessageRequired, "Longitude"))');
                        $('#spnErrorLongitude').removeClass('hide-element');
                        isValid = false;
                    }

                    if (isNaN(stateId) || stateId <= 0)
                        $('#@Html.IdFor(m => m.Job.State.Id)')[0].selectedIndex = 1;
                }
                else {
                    if (isNaN(stateId) || stateId <= 0) {
                        validationMessageFor('@Html.NameFor(m => m.Job.State)', '@(string.Format(Resource.valMessageRequired, "State"))');
                        isValid = false;
                    }
                }

                // copy state name
                $("#@Html.IdFor(m => m.Job.State.Name)").val($("#@Html.IdFor(m => m.Job.State.Id) option:selected").text());
            }
            else {
                if (isNaN(stateId) || stateId <= 0) {
                    validationMessageFor('@Html.NameFor(m => m.Job.State)', '@(string.Format(Resource.valMessageRequired, "State"))');
                    isValid = false;
                }
            }
        }
        else {
            var city = $.trim($("#@Html.IdFor(m => m.Job.City)").val());
            var zipCode = $.trim($("#@Html.IdFor(m => m.Job.ZipCode)").val());
            var countyName = $.trim($("#@Html.IdFor(m => m.Job.CountyName)").val());

            if (address == '') {
                $('#spnErrorAddress').html('@(string.Format(Resource.valMessageRequired, "Address"))');
                $('#spnErrorAddress').removeClass('hide-element');
                isValid = false;
            }
            if (city == '') {
                $('#spnErrorCity').html('@(string.Format(Resource.valMessageRequired, "City"))');
                $('#spnErrorCity').removeClass('hide-element');
                isValid = false;
            }
            if (isNaN(stateId) || stateId <= 0) {
                validationMessageFor('@Html.NameFor(m => m.Job.State)', '@(string.Format(Resource.valMessageRequired, "State"))');
                isValid = false;
            }
            if (zipCode == '') {
                $('#spnErrorZipCode').html('@(string.Format(Resource.valMessageRequired, "Zip"))');
                $('#spnErrorZipCode').removeClass('hide-element');
                isValid = false;
            }
            @*if (countyName == '') {
                $('#spnErrorCountyName').html('@(string.Format(Resource.valMessageRequired, "County Name"))');
                $('#spnErrorCountyName').removeClass('hide-element');
                isValid = false;
            }*@
            if (latitude == '') {
                $('#spnErrorLatitude').html('@(string.Format(Resource.valMessageRequired, "Latitude"))');
                $('#spnErrorLatitude').removeClass('hide-element');
                isValid = false;
            }
            if (longitude == '') {
                $('#spnErrorLongitude').html('@(string.Format(Resource.valMessageRequired, "Longitude"))');
                $('#spnErrorLongitude').removeClass('hide-element');
                isValid = false;
            }
        }

        if (isValid)
            $('.address-validation-error').addClass('hide-element');

        return isValid;
    }

    $("#Job_Country_Currency").change(function () {
                var currency = $(this).val();
                if (currency == '@((int)Currency.USD)') {
                    // for usa
                    $('#MFNQuantityUoM').children('option[value="@((int)UoM.Litres)"]').hide();
                    $('#MFNQuantityUoM').children('option[value="@((int)UoM.Gallons)"]').show();
                    $("#MFNQuantityUoM").val("@((int)UoM.Gallons)");

                }
                else {
                    // for canada
                    $('#MFNQuantityUoM').children('option[value="@((int)UoM.Litres)"]').show();
                    $('#MFNQuantityUoM').children('option[value="@((int)UoM.Gallons)"]').hide();
                    $("#MFNQuantityUoM").val("@((int)UoM.Litres)");

                }
            });
</script>
}
